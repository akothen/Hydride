; ModuleID = 'convolution'
source_filename = "/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/posix_allocator.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64--linux-gnu"

%struct.timespec = type { i64, i64 }
%"struct.Halide::Runtime::Internal::Synchronization::hash_table" = type { [1024 x %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"] }
%"struct.Halide::Runtime::Internal::Synchronization::hash_bucket" = type { %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* }
%"class.Halide::Runtime::Internal::Synchronization::word_lock" = type { i64 }
%"struct.Halide::Runtime::Internal::Synchronization::queue_data" = type { %"struct.Halide::Runtime::Internal::Synchronization::thread_parker", i64, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, i64 }
%"struct.Halide::Runtime::Internal::Synchronization::thread_parker" = type <{ %struct.pthread_mutex_t, %struct.pthread_mutex_t, i8, [7 x i8] }>
%struct.pthread_mutex_t = type { [8 x i64] }
%"struct.Halide::Runtime::Internal::work_queue_t" = type { %struct.halide_mutex, i32, i32, %"struct.Halide::Runtime::Internal::work"*, i32, i32, i32, [4 x i8], %struct.halide_mutex, %struct.halide_mutex, %struct.halide_mutex, i32, i32, [256 x %struct.halide_thread*], i8, i8, i32 }
%"struct.Halide::Runtime::Internal::work" = type { %struct.halide_parallel_task_t, i32 (i8*, i32, i8*)*, %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"*, i32, %"struct.Halide::Runtime::Internal::work"*, i32, i8*, i32, i32, i32, i8 }
%struct.halide_parallel_task_t = type { i32 (i8*, i32, i32, i8*, i8*)*, i8*, i8*, %struct.halide_semaphore_acquire_t*, i32, i32, i32, i32, i8, [7 x i8] }
%struct.halide_semaphore_acquire_t = type { %struct.halide_semaphore_t*, i32, [4 x i8] }
%struct.halide_semaphore_t = type { [2 x i64] }
%struct.halide_mutex = type { [1 x i64] }
%struct.halide_thread = type opaque
%"class.Halide::Runtime::Internal::TraceBuffer" = type { %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock", i32, i32, [1048576 x i8] }
%"class.Halide::Runtime::Internal::SharedExclusiveSpinLock" = type { i32 }
%struct.halide_trace_event_t = type <{ i8*, i8*, i32*, i8*, %struct.halide_type_t, i32, i32, i32, i32, [4 x i8] }>
%struct.halide_type_t = type { i8, i8, i16 }
%"struct.Halide::Runtime::Internal::CacheEntry" = type { %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"*, i8*, i64, i8*, i32, i32, i32, i32, %struct.halide_dimension_t*, %struct.halide_buffer_t*, i64, i8, [7 x i8] }
%struct.halide_dimension_t = type { i32, i32, i32, i32 }
%struct.halide_buffer_t = type { i64, %struct.halide_device_interface_t*, i8*, i64, %struct.halide_type_t, i32, %struct.halide_dimension_t*, i8* }
%struct.halide_device_interface_t = type { i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, void (i8*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i64, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, i32*, i32*)*, %struct.halide_device_interface_impl_t* }
%struct.halide_device_interface_impl_t = type { void ()*, void ()*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i64)*, i32 (i8*, %struct.halide_buffer_t*)* }
%struct.halide_device_allocation_pool = type { i32 (i8*)*, %struct.halide_device_allocation_pool* }
%struct.halide_profiler_state = type { %struct.halide_mutex, i32, i32, i32, i32, %struct.halide_profiler_pipeline_stats*, void (i32*, i32*)*, %struct.halide_thread* }
%struct.halide_profiler_pipeline_stats = type { i64, i64, i64, i64, i64, i64, i8*, %struct.halide_profiler_func_stats*, i8*, i32, i32, i32, i32, i32, [4 x i8] }
%struct.halide_profiler_func_stats = type { i64, i64, i64, i64, i64, i64, i64, i8*, i32, [4 x i8] }
%struct.halide_filter_argument_t = type { i8*, i32, i32, %struct.halide_type_t, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t*, i64** }
%struct.halide_scalar_value_t = type { %union.anon.28 }
%union.anon.28 = type { double }
%struct.halide_filter_metadata_t = type { i32, i32, %struct.halide_filter_argument_t*, i8*, i8* }
%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control" = type { %"struct.Halide::Runtime::Internal::Synchronization::parking_control", i64* }
%"struct.Halide::Runtime::Internal::Synchronization::parking_control" = type { i32 (...)** }
%"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data" = type { %"struct.Halide::Runtime::Internal::Synchronization::thread_parker", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* }
%"struct.Halide::Runtime::Internal::Synchronization::validate_action" = type { i8, [7 x i8], i64 }
%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control" = type { %"struct.Halide::Runtime::Internal::Synchronization::parking_control", i64*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"* }
%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair" = type { %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* }
%"struct.Halide::Runtime::Internal::spawned_thread" = type { void (i8*)*, i8*, i64 }
%struct.halide_mutex_array = type { %struct.halide_mutex* }
%struct.halide_pseudostack_slot_t = type { i8*, i64, i64 }
%"struct.Halide::Runtime::Internal::halide_tiff_header" = type <{ i16, i16, i32, i16, [15 x %"struct.Halide::Runtime::Internal::tiff_tag"], i32, [2 x i32], [2 x i32] }>
%"struct.Halide::Runtime::Internal::tiff_tag" = type { i16, i16, i32, %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock" }
%"struct.Halide::Runtime::Internal::CacheBlockHeader" = type { %"struct.Halide::Runtime::Internal::CacheEntry"*, i32, [4 x i8] }
%"struct.Halide::Runtime::Internal::device_copy" = type { i64, i64, i64, [16 x i64], [16 x i64], [16 x i64], i64 }
%"struct.Halide::Runtime::Internal::CpuFeatures" = type { [2 x i64], [2 x i64] }

$_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control8validateERNS2_15validate_actionE = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control6unparkEib = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control8validateERNS2_15validate_actionE = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control12before_sleepEv = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control6unparkEib = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control8validateERNS2_15validate_actionE = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization15parking_control6unparkEib = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control16requeue_callbackERKNS2_15validate_actionEbb = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization15parking_control8validateERNS2_15validate_actionE = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization22signal_parking_control6unparkEib = comdat any

$call_destructor = comdat any

$_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE = comdat any

$_ZTVN6Halide7Runtime8Internal15Synchronization20wait_parking_controlE = comdat any

$_ZTVN6Halide7Runtime8Internal15Synchronization25broadcast_parking_controlE = comdat any

$_ZTVN6Halide7Runtime8Internal15Synchronization22signal_parking_controlE = comdat any

@_ZN6Halide7Runtime8Internal13custom_mallocE = linkonce local_unnamed_addr global i8* (i8*, i64)* @halide_default_malloc, align 8
@_ZN6Halide7Runtime8Internal11custom_freeE = linkonce local_unnamed_addr global void (i8*, i8*)* @halide_default_free, align 8
@_ZN6Halide7Runtime8Internal13error_handlerE = linkonce local_unnamed_addr global void (i8*, i8*)* @halide_default_error, align 8
@.str = private unnamed_addr constant [8 x i8] c"Error: \00", align 1
@_ZN6Halide7Runtime8Internal12custom_printE = linkonce local_unnamed_addr global void (i8*, i8*)* @halide_default_print, align 8
@halide_reference_clock_inited = linkonce local_unnamed_addr global i8 0, align 1
@halide_reference_clock = linkonce global %struct.timespec zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal15Synchronization5tableE = linkonce global %"struct.Halide::Runtime::Internal::Synchronization::hash_table" zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal10work_queueE = linkonce global %"struct.Halide::Runtime::Internal::work_queue_t" { %struct.halide_mutex zeroinitializer, i32 0, i32 0, %"struct.Halide::Runtime::Internal::work"* null, i32 0, i32 0, i32 0, [4 x i8] undef, %struct.halide_mutex zeroinitializer, %struct.halide_mutex zeroinitializer, %struct.halide_mutex zeroinitializer, i32 0, i32 0, [256 x %struct.halide_thread*] zeroinitializer, i8 0, i8 0, i32 0 }, align 8
@_ZN6Halide7Runtime8Internal14custom_do_taskE = linkonce local_unnamed_addr global i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* @halide_default_do_task, align 8
@_ZN6Halide7Runtime8Internal19custom_do_loop_taskE = linkonce local_unnamed_addr global i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* @halide_default_do_loop_task, align 8
@_ZN6Halide7Runtime8Internal17custom_do_par_forE = linkonce local_unnamed_addr global i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* @halide_default_do_par_for, align 8
@_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)* @_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control8validateERNS2_15validate_actionE to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv to i8*), i8* bitcast (i64 (%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"*, i32, i1)* @_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control6unparkEib to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [137 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/synchronization_common.h:386 halide_abort_if_false() failed: next != nullptr\0A\00", align 1
@_ZTVN6Halide7Runtime8Internal15Synchronization20wait_parking_controlE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)* @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control8validateERNS2_15validate_actionE to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*)* @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control12before_sleepEv to i8*), i8* bitcast (i64 (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, i32, i1)* @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control6unparkEib to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb to i8*)] }, comdat, align 8
@.str.5.6 = private unnamed_addr constant [131 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/synchronization_common.h:994 halide_abort_if_false() failed: val & 0x1\0A\00", align 1
@_ZTVN6Halide7Runtime8Internal15Synchronization25broadcast_parking_controlE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)* @_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control8validateERNS2_15validate_actionE to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv to i8*), i8* bitcast (i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control6unparkEib to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)* @_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control16requeue_callbackERKNS2_15validate_actionEbb to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [193 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/thread_pool_common.h:155 halide_abort_if_false() failed: bytes == limit && \22Logic error in thread pool work queue initialization.\\n\22\0A\00", align 1
@.str.3 = private unnamed_addr constant [270 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/thread_pool_common.h:527 halide_abort_if_false() failed: (min_threads <= ((task_parent->task.min_threads * task_parent->active_workers) - task_parent->threads_reserved)) && \22Logic error: thread over commit.\\n\22\0A\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"HL_NUM_THREADS\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"HL_NUMTHREADS\00", align 1
@_ZN6Halide7Runtime8Internal24custom_do_parallel_tasksE = linkonce local_unnamed_addr global i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)* @halide_default_do_parallel_tasks, align 8
@_ZN6Halide7Runtime8Internal21custom_semaphore_initE = linkonce local_unnamed_addr global i32 (%struct.halide_semaphore_t*, i32)* @halide_default_semaphore_init, align 8
@_ZN6Halide7Runtime8Internal28custom_semaphore_try_acquireE = linkonce local_unnamed_addr global i1 (%struct.halide_semaphore_t*, i32)* @halide_default_semaphore_try_acquire, align 8
@_ZN6Halide7Runtime8Internal24custom_semaphore_releaseE = linkonce local_unnamed_addr global i32 (%struct.halide_semaphore_t*, i32)* @halide_default_semaphore_release, align 8
@llvm.global_dtors = appending global [4 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @halide_thread_pool_cleanup, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @halide_trace_cleanup, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @halide_cache_cleanup, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @halide_profiler_shutdown, i8* null }]
@_ZTVN6Halide7Runtime8Internal15Synchronization22signal_parking_controlE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control8validateERNS2_15validate_actionE to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv to i8*), i8* bitcast (i64 (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, i32, i1)* @_ZN6Halide7Runtime8Internal15Synchronization22signal_parking_control6unparkEib to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [38 x i8] c"halide_set_num_threads: must be >= 0.\00", align 1
@_ZN6Halide7Runtime8Internal17custom_get_symbolE = linkonce local_unnamed_addr global i8* (i8*)* @halide_default_get_symbol, align 8
@_ZN6Halide7Runtime8Internal19custom_load_libraryE = linkonce local_unnamed_addr global i8* (i8*)* @halide_default_load_library, align 8
@_ZN6Halide7Runtime8Internal25custom_get_library_symbolE = linkonce local_unnamed_addr global i8* (i8*, i8*)* @halide_default_get_library_symbol, align 8
@_ZN6Halide7Runtime8Internal17halide_gpu_deviceE = linkonce local_unnamed_addr global i32 0, align 4
@_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE = linkonce global i8 0, align 1
@_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE = linkonce local_unnamed_addr global i8 0, align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"HL_GPU_DEVICE\00", align 1
@_ZN6Halide7Runtime8Internal19halide_trace_bufferE = linkonce local_unnamed_addr global %"class.Halide::Runtime::Internal::TraceBuffer"* null, align 8
@_ZN6Halide7Runtime8Internal17halide_trace_fileE = linkonce local_unnamed_addr global i32 -1, align 4
@_ZN6Halide7Runtime8Internal22halide_trace_file_lockE = linkonce global i8 0, align 1
@_ZN6Halide7Runtime8Internal29halide_trace_file_initializedE = linkonce local_unnamed_addr global i8 0, align 1
@_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE = linkonce local_unnamed_addr global i8* null, align 8
@_ZN6Halide7Runtime8Internal19halide_custom_traceE = linkonce local_unnamed_addr global i32 (i8*, %struct.halide_trace_event_t*)* @halide_default_trace, align 8
@_ZZ20halide_default_traceE3ids = internal global i32 1, align 4
@.str.32 = private unnamed_addr constant [151 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/tracing.cpp:115 halide_abort_if_false() failed: success && \22Could not write to trace file\22\0A\00", align 1
@.str.31 = private unnamed_addr constant [127 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/tracing.cpp:87 halide_abort_if_false() failed: size <= buffer_size\0A\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.33 = private unnamed_addr constant [35 x i8] c"Printer buffer allocation failed.\0A\00", align 1
@.str.1.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.11 = private unnamed_addr constant [147 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/tracing.cpp:218 halide_abort_if_false() failed: print_bits <= 64 && \22Tracing bad type\22\0A\00", align 1
@__const.halide_default_trace.event_types = private unnamed_addr constant [11 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.12, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.13, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5.14, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.15, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.16, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.17, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0)], align 8
@.str.14 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c">)\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c">, <\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c" = <\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.24 = private unnamed_addr constant [149 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/tracing.cpp:287 halide_abort_if_false() failed: print_bits >= 16 && \22Tracing a bad type\22\0A\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c" tag = \22\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.3.12 = private unnamed_addr constant [5 x i8] c"Load\00", align 1
@.str.4.13 = private unnamed_addr constant [6 x i8] c"Store\00", align 1
@.str.5.14 = private unnamed_addr constant [18 x i8] c"Begin realization\00", align 1
@.str.6.15 = private unnamed_addr constant [16 x i8] c"End realization\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"Produce\00", align 1
@.str.8.16 = private unnamed_addr constant [12 x i8] c"End produce\00", align 1
@.str.9.17 = private unnamed_addr constant [8 x i8] c"Consume\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"End consume\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"Begin pipeline\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"End pipeline\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"Tag\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"HL_TRACE_FILE\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"ab\00", align 1
@.str.30 = private unnamed_addr constant [146 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/tracing.cpp:351 halide_abort_if_false() failed: file && \22Failed to open trace file\\n\22\0A\00", align 1
@_ZN6Halide7Runtime8Internal30pixel_type_to_tiff_sample_typeE = linkonce local_unnamed_addr global [10 x i16] [i16 3, i16 3, i16 1, i16 2, i16 1, i16 2, i16 1, i16 2, i16 1, i16 2], align 2
@_ZN6Halide7Runtime8Internal31pixel_type_to_matlab_class_codeE = linkonce local_unnamed_addr global [10 x i8] c"\07\06\09\08\0B\0A\0D\0C\0F\0E", align 1
@_ZN6Halide7Runtime8Internal30pixel_type_to_matlab_type_codeE = linkonce local_unnamed_addr global [10 x i8] c"\07\09\02\01\04\03\06\05\0D\0C", align 1
@.str.34 = private unnamed_addr constant [51 x i8] c"Bounds query buffer passed to halide_debug_to_file\00", align 1
@.str.1.35 = private unnamed_addr constant [59 x i8] c"Can't debug_to_file a Func with more than four dimensions\0A\00", align 1
@.str.2.36 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.3.37 = private unnamed_addr constant [6 x i8] c".tiff\00", align 1
@.str.4.38 = private unnamed_addr constant [5 x i8] c".tif\00", align 1
@.str.5.39 = private unnamed_addr constant [5 x i8] c".mat\00", align 1
@__const.halide_debug_to_file.header = private unnamed_addr constant [129 x i8] c"MATLAB 5.0 MAT-file, produced by Halide                                                                                     \00\01IM\00", align 1
@.str.6.40 = private unnamed_addr constant [53 x i8] c"Can't debug_to_file to a .mat file greater than 4GB\0A\00", align 1
@_ZN6Halide7Runtime8Internal16memoization_lockE = linkonce global %struct.halide_mutex zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal13cache_entriesE = linkonce global [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*] zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal18most_recently_usedE = linkonce local_unnamed_addr global %"struct.Halide::Runtime::Internal::CacheEntry"* null, align 8
@_ZN6Halide7Runtime8Internal19least_recently_usedE = linkonce local_unnamed_addr global %"struct.Halide::Runtime::Internal::CacheEntry"* null, align 8
@_ZN6Halide7Runtime8Internal14max_cache_sizeE = linkonce local_unnamed_addr global i64 1048576, align 8
@_ZN6Halide7Runtime8Internal18current_cache_sizeE = linkonce local_unnamed_addr global i64 0, align 8
@.str.2.42 = private unnamed_addr constant [133 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/cache.cpp:284 halide_abort_if_false() failed: prev_hash_entry != nullptr\0A\00", align 1
@.str.3.43 = private unnamed_addr constant [136 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/cache.cpp:373 halide_abort_if_false() failed: entry->more_recent != nullptr\0A\00", align 1
@.str.4.44 = private unnamed_addr constant [135 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/cache.cpp:377 halide_abort_if_false() failed: least_recently_used == entry\0A\00", align 1
@.str.5.45 = private unnamed_addr constant [136 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/cache.cpp:380 halide_abort_if_false() failed: entry->more_recent != nullptr\0A\00", align 1
@.str.9.46 = private unnamed_addr constant [129 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/cache.cpp:472 halide_abort_if_false() failed: no_host_pointers_equal\0A\00", align 1
@.str.12.47 = private unnamed_addr constant [130 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/cache.cpp:550 halide_abort_if_false() failed: entry->in_use_count > 0\0A\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"<nullptr>\00", align 1
@.str.1.57 = private unnamed_addr constant [5 x i8] c"-nan\00", align 1
@.str.2.58 = private unnamed_addr constant [4 x i8] c"nan\00", align 1
@.str.3.59 = private unnamed_addr constant [5 x i8] c"-inf\00", align 1
@.str.4.60 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.5.61 = private unnamed_addr constant [14 x i8] c"-0.000000e+00\00", align 1
@.str.6.62 = private unnamed_addr constant [13 x i8] c"0.000000e+00\00", align 1
@.str.7.63 = private unnamed_addr constant [10 x i8] c"-0.000000\00", align 1
@.str.8.64 = private unnamed_addr constant [9 x i8] c"0.000000\00", align 1
@.str.9.65 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.10.66 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.11.67 = private unnamed_addr constant [3 x i8] c"e+\00", align 1
@.str.12.68 = private unnamed_addr constant [3 x i8] c"e-\00", align 1
@.str.13.71 = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1
@.str.18.72 = private unnamed_addr constant [14 x i8] c"bad_type_code\00", align 1
@.str.17.73 = private unnamed_addr constant [7 x i8] c"handle\00", align 1
@.str.16.74 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.15.75 = private unnamed_addr constant [5 x i8] c"uint\00", align 1
@.str.14.76 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.19.77 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.20.78 = private unnamed_addr constant [8 x i8] c"nullptr\00", align 1
@.str.21.79 = private unnamed_addr constant [8 x i8] c"buffer(\00", align 1
@.str.22.80 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.25.81 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.23.82 = private unnamed_addr constant [4 x i8] c", {\00", align 1
@.str.24.83 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@_ZN6Halide7Runtime8Internal36halide_reuse_device_allocations_flagE = linkonce local_unnamed_addr global i8 1, align 1
@_ZN6Halide7Runtime8Internal21allocation_pools_lockE = linkonce global %struct.halide_mutex zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal23device_allocation_poolsE = linkonce local_unnamed_addr global %struct.halide_device_allocation_pool* null, align 8
@_ZN6Halide7Runtime8Internal17device_copy_mutexE = linkonce global %struct.halide_mutex zeroinitializer, align 8
@.str.6.88 = private unnamed_addr constant [20 x i8] c"halide_copy_to_host\00", align 1
@.str.7.89 = private unnamed_addr constant [22 x i8] c"halide_copy_to_device\00", align 1
@.str.9.90 = private unnamed_addr constant [61 x i8] c"halide_copy_to_device does not support switching interfaces\0A\00", align 1
@.str.17.91 = private unnamed_addr constant [21 x i8] c"halide_device_malloc\00", align 1
@.str.20.92 = private unnamed_addr constant [59 x i8] c"halide_device_malloc doesn't support switching interfaces\0A\00", align 1
@.str.16.93 = private unnamed_addr constant [19 x i8] c"halide_device_sync\00", align 1
@.str.21.96 = private unnamed_addr constant [19 x i8] c"halide_device_free\00", align 1
@.str.22.97 = private unnamed_addr constant [134 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/device_interface.cpp:252 halide_abort_if_false() failed: buf->device == 0\0A\00", align 1
@.str.23.98 = private unnamed_addr constant [30 x i8] c"halide_device_and_host_malloc\00", align 1
@.str.25.99 = private unnamed_addr constant [68 x i8] c"halide_device_and_host_malloc doesn't support switching interfaces\0A\00", align 1
@.str.26.100 = private unnamed_addr constant [42 x i8] c"allocating host and device memory failed\0A\00", align 1
@.str.27.101 = private unnamed_addr constant [28 x i8] c"halide_device_and_host_free\00", align 1
@.str.28.102 = private unnamed_addr constant [134 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/device_interface.cpp:317 halide_abort_if_false() failed: buf->device == 0\0A\00", align 1
@.str.29.103 = private unnamed_addr constant [38 x i8] c"halide_default_device_and_host_malloc\00", align 1
@.str.30.104 = private unnamed_addr constant [36 x i8] c"halide_default_device_and_host_free\00", align 1
@.str.31.105 = private unnamed_addr constant [26 x i8] c"halide_device_wrap_native\00", align 1
@.str.32.106 = private unnamed_addr constant [64 x i8] c"halide_device_wrap_native doesn't support switching interfaces\0A\00", align 1
@.str.33.107 = private unnamed_addr constant [28 x i8] c"halide_device_detach_native\00", align 1
@.str.34.108 = private unnamed_addr constant [134 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/device_interface.cpp:403 halide_abort_if_false() failed: buf->device == 0\0A\00", align 1
@.str.35 = private unnamed_addr constant [36 x i8] c"halide_default_device_detach_native\00", align 1
@.str.41 = private unnamed_addr constant [64 x i8] c"halide_buffer_copy does not support switching device interfaces\00", align 1
@.str.58 = private unnamed_addr constant [44 x i8] c"device_interface does not support cropping\0A\00", align 1
@.str.59 = private unnamed_addr constant [43 x i8] c"device_interface does not support slicing\0A\00", align 1
@.str.60 = private unnamed_addr constant [52 x i8] c"destination buffer already has a device allocation\0A\00", align 1
@.str.61 = private unnamed_addr constant [48 x i8] c"src and dst must have identical dimensionality\0A\00", align 1
@.str.64 = private unnamed_addr constant [52 x i8] c"dst must have exactly one fewer dimension than src\0A\00", align 1
@.str.111 = private unnamed_addr constant [41 x i8] c"Bounds inference call to external stage \00", align 1
@.str.1.112 = private unnamed_addr constant [27 x i8] c" returned non-zero value: \00", align 1
@.str.76 = private unnamed_addr constant [35 x i8] c"Printer buffer allocation failed.\0A\00", align 1
@.str.2.113 = private unnamed_addr constant [24 x i8] c"Call to external stage \00", align 1
@.str.3.114 = private unnamed_addr constant [18 x i8] c"Bounds given for \00", align 1
@.str.4.115 = private unnamed_addr constant [5 x i8] c" in \00", align 1
@.str.5.116 = private unnamed_addr constant [8 x i8] c" (from \00", align 1
@.str.6.117 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@.str.7.118 = private unnamed_addr constant [38 x i8] c") do not cover required region (from \00", align 1
@.str.8.119 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.9.120 = private unnamed_addr constant [11 x i8] c" has type \00", align 1
@.str.10.121 = private unnamed_addr constant [38 x i8] c" but type of the buffer passed in is \00", align 1
@.str.11.122 = private unnamed_addr constant [31 x i8] c" requires a buffer of exactly \00", align 1
@.str.12.123 = private unnamed_addr constant [43 x i8] c" dimensions, but the buffer passed in has \00", align 1
@.str.13.124 = private unnamed_addr constant [12 x i8] c" dimensions\00", align 1
@.str.14.125 = private unnamed_addr constant [17 x i8] c" is accessed at \00", align 1
@.str.15.126 = private unnamed_addr constant [28 x i8] c", which is before the min (\00", align 1
@.str.16.127 = private unnamed_addr constant [16 x i8] c") in dimension \00", align 1
@.str.17.128 = private unnamed_addr constant [28 x i8] c", which is beyond the max (\00", align 1
@.str.18.129 = private unnamed_addr constant [29 x i8] c"Total allocation for buffer \00", align 1
@.str.19.130 = private unnamed_addr constant [5 x i8] c" is \00", align 1
@.str.20.131 = private unnamed_addr constant [37 x i8] c", which exceeds the maximum size of \00", align 1
@.str.21.132 = private unnamed_addr constant [24 x i8] c"The extents for buffer \00", align 1
@.str.22.133 = private unnamed_addr constant [12 x i8] c" dimension \00", align 1
@.str.23.134 = private unnamed_addr constant [15 x i8] c" is negative (\00", align 1
@.str.24.135 = private unnamed_addr constant [31 x i8] c"Product of extents for buffer \00", align 1
@.str.25.136 = private unnamed_addr constant [29 x i8] c"Applying the constraints on \00", align 1
@.str.26.137 = private unnamed_addr constant [54 x i8] c" to the required region made it smaller in dimension \00", align 1
@.str.27.138 = private unnamed_addr constant [3 x i8] c". \00", align 1
@.str.28.139 = private unnamed_addr constant [16 x i8] c"Required size: \00", align 1
@.str.29.140 = private unnamed_addr constant [19 x i8] c"Constrained size: \00", align 1
@.str.30.141 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.31.142 = private unnamed_addr constant [22 x i8] c"Constraint violated: \00", align 1
@.str.32.143 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.33.144 = private unnamed_addr constant [6 x i8] c") == \00", align 1
@.str.34.145 = private unnamed_addr constant [11 x i8] c"Parameter \00", align 1
@.str.35.146 = private unnamed_addr constant [23 x i8] c" but must be at least \00", align 1
@.str.36 = private unnamed_addr constant [22 x i8] c" but must be at most \00", align 1
@.str.37 = private unnamed_addr constant [47 x i8] c"Out of memory (halide_malloc returned nullptr)\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"Buffer argument \00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c" is nullptr\00", align 1
@.str.40 = private unnamed_addr constant [25 x i8] c"Failed to dump function \00", align 1
@.str.41.147 = private unnamed_addr constant [10 x i8] c" to file \00", align 1
@.str.42 = private unnamed_addr constant [13 x i8] c" with error \00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"The host pointer of \00", align 1
@.str.44 = private unnamed_addr constant [22 x i8] c" is not aligned to a \00", align 1
@.str.45 = private unnamed_addr constant [17 x i8] c" bytes boundary.\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"The buffer \00", align 1
@.str.47 = private unnamed_addr constant [53 x i8] c" is dirty on device, but this pipeline was compiled \00", align 1
@.str.48 = private unnamed_addr constant [43 x i8] c"with no support for device to host copies.\00", align 1
@.str.49 = private unnamed_addr constant [55 x i8] c" is null, but the pipeline will access it on the host.\00", align 1
@.str.50.148 = private unnamed_addr constant [30 x i8] c"The folded storage dimension \00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c" of \00", align 1
@.str.52 = private unnamed_addr constant [36 x i8] c" was accessed out of order by loop \00", align 1
@.str.53 = private unnamed_addr constant [23 x i8] c"Cannot fold dimension \00", align 1
@.str.54 = private unnamed_addr constant [36 x i8] c" because an extern stage accesses [\00", align 1
@.str.55 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"],\00", align 1
@.str.57 = private unnamed_addr constant [47 x i8] c" which is outside the range currently valid: [\00", align 1
@.str.58.149 = private unnamed_addr constant [3 x i8] c"].\00", align 1
@.str.59.150 = private unnamed_addr constant [47 x i8] c" which wraps around the boundary of the fold, \00", align 1
@.str.60.151 = private unnamed_addr constant [30 x i8] c"which occurs at multiples of \00", align 1
@.str.61.152 = private unnamed_addr constant [18 x i8] c"The fold factor (\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c") of dimension \00", align 1
@.str.63 = private unnamed_addr constant [61 x i8] c" is too small to store the required region accessed by loop \00", align 1
@.str.64.153 = private unnamed_addr constant [3 x i8] c").\00", align 1
@.str.65 = private unnamed_addr constant [22 x i8] c"Requirement Failed: (\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.67 = private unnamed_addr constant [59 x i8] c"A schedule specialized with specialize_fail() was chosen: \00", align 1
@.str.68 = private unnamed_addr constant [55 x i8] c"Buffer has a non-zero device but no device interface.\0A\00", align 1
@.str.69 = private unnamed_addr constant [57 x i8] c"Buffer has a non-null device_interface but device is 0.\0A\00", align 1
@.str.70 = private unnamed_addr constant [49 x i8] c"Buffer has both host and device dirty bits set.\0A\00", align 1
@.str.71 = private unnamed_addr constant [26 x i8] c"Buffer pointer passed to \00", align 1
@.str.72 = private unnamed_addr constant [11 x i8] c" is null.\0A\00", align 1
@.str.73 = private unnamed_addr constant [32 x i8] c"The explicit allocation bound (\00", align 1
@.str.74 = private unnamed_addr constant [45 x i8] c" is too small to store the required region (\00", align 1
@.str.75 = private unnamed_addr constant [77 x i8] c"Buffer could not be cropped (runtime error or unimplemented device option).\0A\00", align 1
@.str.29.163 = private unnamed_addr constant [35 x i8] c"Printer buffer allocation failed.\0A\00", align 1
@.str.7.164 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.8.165 = private unnamed_addr constant [14 x i8] c" total time: \00", align 1
@.str.9.166 = private unnamed_addr constant [4 x i8] c" ms\00", align 1
@.str.10.167 = private unnamed_addr constant [12 x i8] c"  samples: \00", align 1
@.str.11.168 = private unnamed_addr constant [9 x i8] c"  runs: \00", align 1
@.str.12.169 = private unnamed_addr constant [13 x i8] c"  time/run: \00", align 1
@.str.13.170 = private unnamed_addr constant [5 x i8] c" ms\0A\00", align 1
@.str.14.171 = private unnamed_addr constant [24 x i8] c" average threads used: \00", align 1
@.str.15.172 = private unnamed_addr constant [20 x i8] c" heap allocations: \00", align 1
@.str.16.173 = private unnamed_addr constant [20 x i8] c"  peak heap usage: \00", align 1
@.str.17.174 = private unnamed_addr constant [8 x i8] c" bytes\0A\00", align 1
@.str.18.175 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.19.176 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.20.177 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.21.178 = private unnamed_addr constant [3 x i8] c"ms\00", align 1
@.str.22.179 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.23.180 = private unnamed_addr constant [3 x i8] c"%)\00", align 1
@.str.24.181 = private unnamed_addr constant [10 x i8] c"threads: \00", align 1
@.str.25.182 = private unnamed_addr constant [8 x i8] c" peak: \00", align 1
@.str.26.183 = private unnamed_addr constant [7 x i8] c" num: \00", align 1
@.str.27.184 = private unnamed_addr constant [7 x i8] c" avg: \00", align 1
@.str.28.185 = private unnamed_addr constant [9 x i8] c" stack: \00", align 1
@_ZZ25halide_profiler_get_stateE1s = internal global %struct.halide_profiler_state { %struct.halide_mutex zeroinitializer, i32 1, i32 0, i32 0, i32 0, %struct.halide_profiler_pipeline_stats* null, void (i32*, i32*)* null, %struct.halide_thread* null }, align 8
@.str.186 = private unnamed_addr constant [135 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/profiler_common.cpp:246 halide_abort_if_false() failed: p_stats != nullptr\0A\00", align 1
@.str.1.187 = private unnamed_addr constant [135 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/profiler_common.cpp:273 halide_abort_if_false() failed: p_stats != nullptr\0A\00", align 1
@.str.2.188 = private unnamed_addr constant [129 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/profiler_common.cpp:274 halide_abort_if_false() failed: func_id >= 0\0A\00", align 1
@.str.3.189 = private unnamed_addr constant [145 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/profiler_common.cpp:275 halide_abort_if_false() failed: func_id < p_stats->num_funcs\0A\00", align 1
@.str.4.190 = private unnamed_addr constant [135 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/profiler_common.cpp:309 halide_abort_if_false() failed: p_stats != nullptr\0A\00", align 1
@.str.5.191 = private unnamed_addr constant [129 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/profiler_common.cpp:310 halide_abort_if_false() failed: func_id >= 0\0A\00", align 1
@.str.6.192 = private unnamed_addr constant [145 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/profiler_common.cpp:311 halide_abort_if_false() failed: func_id < p_stats->num_funcs\0A\00", align 1
@_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE = linkonce local_unnamed_addr global i32 (i32, i64*)* @halide_default_can_use_target_features, align 8
@_ZN6Halide7Runtime8Internal36halide_cpu_features_initialized_lockE = linkonce global %struct.halide_mutex zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal31halide_cpu_features_initializedE = linkonce local_unnamed_addr global i8 0, align 1
@_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE = linkonce global [4 x i64] zeroinitializer, align 8
@.str.197 = private unnamed_addr constant [81 x i8] c"Internal error: wrong structure size passed to halide_can_use_target_features()\0A\00", align 1
@0 = private constant [6 x i64*] zeroinitializer
@str = private constant [4 x i8] c"IMG\00", align 32
@1 = private constant [6 x i64*] zeroinitializer
@str.200 = private constant [7 x i8] c"Filter\00", align 32
@2 = private constant [6 x i64*] zeroinitializer
@str.201 = private constant [7 x i8] c"Output\00", align 32
@3 = private constant [3 x %struct.halide_filter_argument_t] [%struct.halide_filter_argument_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i32 0, i32 0), i32 1, i32 3, %struct.halide_type_t { i8 0, i8 32, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** getelementptr inbounds ([6 x i64*], [6 x i64*]* @0, i32 0, i32 0) }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i32 0, i32 0), i32 1, i32 3, %struct.halide_type_t { i8 0, i8 32, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** getelementptr inbounds ([6 x i64*], [6 x i64*]* @1, i32 0, i32 0) }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i32 0, i32 0), i32 2, i32 3, %struct.halide_type_t { i8 0, i8 32, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** getelementptr inbounds ([6 x i64*], [6 x i64*]* @2, i32 0, i32 0) }]
@str.202 = private constant [59 x i8] c"x86-64-linux-avx-avx2-avx512-avx512_skylake-f16c-fma-sse41\00", align 64
@str.203 = private constant [12 x i8] c"convolution\00", align 32
@convolution_metadata_storage = private constant %struct.halide_filter_metadata_t { i32 1, i32 3, %struct.halide_filter_argument_t* getelementptr inbounds ([3 x %struct.halide_filter_argument_t], [3 x %struct.halide_filter_argument_t]* @3, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.203, i32 0, i32 0) }
@str.204 = private constant [20 x i8] c"Input buffer Filter\00", align 32
@str.205 = private constant [17 x i8] c"Input buffer IMG\00", align 32
@str.206 = private constant [21 x i8] c"Output buffer Output\00", align 32
@str.207 = private constant [16 x i8] c"Filter.stride.0\00", align 32
@str.208 = private constant [2 x i8] c"1\00", align 32
@str.209 = private constant [13 x i8] c"IMG.stride.0\00", align 32
@str.210 = private constant [16 x i8] c"Output.stride.0\00", align 32

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_malloc(i8* %user_context, i64 %x) #0 {
entry:
  %call = tail call i32 @halide_malloc_alignment() #17
  %conv = sext i32 %call to i64
  %add = add i64 %conv, %x
  %call1 = tail call i8* @malloc(i64 %add) #17
  %cmp = icmp eq i8* %call1, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %0 = ptrtoint i8* %call1 to i64
  %add2 = add nsw i64 %conv, 7
  %sub = add i64 %add2, %0
  %neg = sub nsw i64 0, %conv
  %and = and i64 %sub, %neg
  %1 = inttoptr i64 %and to i8*
  %2 = inttoptr i64 %and to i8**
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 -1
  store i8* %call1, i8** %arrayidx, align 8, !tbaa !10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i8* [ %1, %if.end ], [ null, %entry ]
  ret i8* %retval.0
}

declare i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_default_free(i8* %user_context, i8* %ptr) #0 {
entry:
  %arrayidx = getelementptr inbounds i8, i8* %ptr, i64 -8
  %0 = bitcast i8* %arrayidx to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !10
  tail call void @free(i8* %1) #17
  ret void
}

declare void @free(i8*) local_unnamed_addr #1

; Function Attrs: nounwind willreturn mustprogress
define weak i8* (i8*, i64)* @halide_set_custom_malloc(i8* (i8*, i64)* %user_malloc) local_unnamed_addr #2 {
entry:
  %0 = load i8* (i8*, i64)*, i8* (i8*, i64)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 8, !tbaa !10
  store i8* (i8*, i64)* %user_malloc, i8* (i8*, i64)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 8, !tbaa !10
  ret i8* (i8*, i64)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak void (i8*, i8*)* @halide_set_custom_free(void (i8*, i8*)* %user_free) local_unnamed_addr #2 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 8, !tbaa !10
  store void (i8*, i8*)* %user_free, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 8, !tbaa !10
  ret void (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_malloc(i8* %user_context, i64 %x) local_unnamed_addr #0 {
entry:
  %0 = load i8* (i8*, i64)*, i8* (i8*, i64)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 8, !tbaa !10
  %call = tail call i8* %0(i8* %user_context, i64 %x) #17
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak void @halide_free(i8* %user_context, i8* %ptr) local_unnamed_addr #0 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 8, !tbaa !10
  tail call void %0(i8* %user_context, i8* %ptr) #17
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_default_error(i8* %user_context, i8* %msg) #0 {
entry:
  %buf = alloca [4096 x i8], align 1
  %0 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %0) #18
  %add.ptr = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 4094
  %call = call i8* @halide_string_to_string(i8* nonnull %0, i8* nonnull %add.ptr, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #17
  %add.ptr2 = getelementptr inbounds i8, i8* %call, i64 4094
  %call3 = call i8* @halide_string_to_string(i8* %call, i8* nonnull %add.ptr2, i8* %msg) #17
  %arrayidx = getelementptr inbounds i8, i8* %call3, i64 -1
  %1 = load i8, i8* %arrayidx, align 1, !tbaa !14
  %cmp.not = icmp eq i8 %1, 10
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8 10, i8* %call3, align 1, !tbaa !14
  %arrayidx5 = getelementptr inbounds i8, i8* %call3, i64 1
  store i8 0, i8* %arrayidx5, align 1, !tbaa !14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %dst.0 = phi i8* [ %arrayidx5, %if.then ], [ %call3, %entry ]
  %sub.ptr.lhs.cast = ptrtoint i8* %dst.0 to i64
  %sub.ptr.rhs.cast = ptrtoint [4096 x i8]* %buf to i64
  %sub.ptr.sub = sub i64 1, %sub.ptr.rhs.cast
  %add = add i64 %sub.ptr.sub, %sub.ptr.lhs.cast
  %call9 = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %0, i64 %add) #17
  call void @halide_print(i8* %user_context, i8* nonnull %0) #17
  call void @abort() #17
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %0) #18
  ret void
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @abort() local_unnamed_addr #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind mustprogress
define weak void @halide_error(i8* %user_context, i8* %msg) local_unnamed_addr #0 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal13error_handlerE, align 8, !tbaa !10
  tail call void %0(i8* %user_context, i8* %msg) #17
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void (i8*, i8*)* @halide_set_error_handler(void (i8*, i8*)* %handler) local_unnamed_addr #2 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal13error_handlerE, align 8, !tbaa !10
  store void (i8*, i8*)* %handler, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal13error_handlerE, align 8, !tbaa !10
  ret void (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_print(i8* %user_context, i8* %msg) local_unnamed_addr #0 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal12custom_printE, align 8, !tbaa !10
  tail call void %0(i8* %user_context, i8* %msg) #17
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void (i8*, i8*)* @halide_set_custom_print(void (i8*, i8*)* %print) local_unnamed_addr #2 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal12custom_printE, align 8, !tbaa !10
  store void (i8*, i8*)* %print, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal12custom_printE, align 8, !tbaa !10
  ret void (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_start_clock(i8* %user_context) local_unnamed_addr #0 {
entry:
  %0 = load i8, i8* @halide_reference_clock_inited, align 1, !tbaa !15, !range !17
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i32 (i32, ...) @syscall(i32 228, i32 0, %struct.timespec* nonnull @halide_reference_clock) #17
  store i8 1, i8* @halide_reference_clock_inited, align 1, !tbaa !15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 0
}

declare i32 @syscall(i32, ...) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i64 @halide_current_time_ns(i8* %user_context) local_unnamed_addr #0 {
entry:
  %now = alloca %struct.timespec, align 8
  %0 = bitcast %struct.timespec* %now to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #18
  %call = call i32 (i32, ...) @syscall(i32 228, i32 0, %struct.timespec* nonnull %now) #17
  %1 = bitcast %struct.timespec* %now to <2 x i64>*
  %2 = load <2 x i64>, <2 x i64>* %1, align 8, !tbaa !18
  %3 = load <2 x i64>, <2 x i64>* bitcast (%struct.timespec* @halide_reference_clock to <2 x i64>*), align 8, !tbaa !18
  %4 = sub <2 x i64> %2, %3
  %5 = extractelement <2 x i64> %4, i32 0
  %mul = mul nsw i64 %5, 1000000000
  %6 = extractelement <2 x i64> %4, i32 1
  %add = add nsw i64 %6, %mul
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #18
  ret i64 %add
}

; Function Attrs: nounwind mustprogress
define weak void @halide_sleep_ms(i8* %user_context, i32 %ms) local_unnamed_addr #0 {
entry:
  %mul = mul nsw i32 %ms, 1000
  %call = tail call i32 @usleep(i32 %mul) #17
  ret void
}

declare i32 @usleep(i32) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_default_print(i8* %user_context, i8* %str) #0 {
entry:
  %call = tail call i64 @strlen(i8* %str) #17
  %call1 = tail call i64 @write(i32 1, i8* %str, i64 %call) #17
  ret void
}

declare i64 @strlen(i8*) local_unnamed_addr #1

declare i64 @write(i32, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i32 @halide_host_cpu_count() local_unnamed_addr #0 {
entry:
  %call = tail call i64 @sysconf(i32 84) #17
  %conv = trunc i64 %call to i32
  ret i32 %conv
}

declare i64 @sysconf(i32) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_thread_yield() local_unnamed_addr #0 {
entry:
  %call = tail call i32 @sched_yield() #17
  ret void
}

declare i32 @sched_yield() local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_task(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) #0 {
entry:
  %call = tail call i32 %f(i8* %user_context, i32 %idx, i8* %closure) #17
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_loop_task(i8* %user_context, i32 (i8*, i32, i32, i8*, i8*)* %f, i32 %min, i32 %extent, i8* %closure, i8* %task_parent) #0 {
entry:
  %call = tail call i32 %f(i8* %user_context, i32 %min, i32 %extent, i8* %closure, i8* %task_parent) #17
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_par_for(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) #0 {
entry:
  %job = alloca %"struct.Halide::Runtime::Internal::work", align 8
  %cmp = icmp slt i32 %size, 1
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %"struct.Halide::Runtime::Internal::work"* %job to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #18
  %fn = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 0
  store i32 (i8*, i32, i32, i8*, i8*)* null, i32 (i8*, i32, i32, i8*, i8*)** %fn, align 8, !tbaa !20
  %min2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 5
  store i32 %min, i32* %min2, align 4, !tbaa !24
  %extent = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 6
  store i32 %size, i32* %extent, align 8, !tbaa !25
  %serial = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 8
  store i8 0, i8* %serial, align 8, !tbaa !26
  %semaphores = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 3
  store %struct.halide_semaphore_acquire_t* null, %struct.halide_semaphore_acquire_t** %semaphores, align 8, !tbaa !27
  %num_semaphores = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 4
  store i32 0, i32* %num_semaphores, align 8, !tbaa !28
  %closure8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 1
  store i8* %closure, i8** %closure8, align 8, !tbaa !29
  %min_threads = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 7
  store i32 0, i32* %min_threads, align 4, !tbaa !30
  %name = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 2
  store i8* null, i8** %name, align 8, !tbaa !31
  %task_fn = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 1
  store i32 (i8*, i32, i8*)* %f, i32 (i8*, i32, i8*)** %task_fn, align 8, !tbaa !32
  %user_context11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 7
  store i8* %user_context, i8** %user_context11, align 8, !tbaa !33
  %exit_status = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 9
  store i32 0, i32* %exit_status, align 4, !tbaa !34
  %active_workers = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 8
  store i32 0, i32* %active_workers, align 8, !tbaa !35
  %next_semaphore = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 10
  store i32 0, i32* %next_semaphore, align 8, !tbaa !36
  %owner_is_sleeping = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 11
  store i8 0, i8* %owner_is_sleeping, align 4, !tbaa !37
  %siblings = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 3
  store %"struct.Halide::Runtime::Internal::work"* %job, %"struct.Halide::Runtime::Internal::work"** %siblings, align 8, !tbaa !38
  %sibling_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 4
  store i32 0, i32* %sibling_count, align 8, !tbaa !39
  %parent_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 5
  store %"struct.Halide::Runtime::Internal::work"* null, %"struct.Halide::Runtime::Internal::work"** %parent_job, align 8, !tbaa !40
  call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  call void @_ZN6Halide7Runtime8Internal27enqueue_work_already_lockedEiPNS1_4workES3_(i32 1, %"struct.Halide::Runtime::Internal::work"* nonnull %job, %"struct.Halide::Runtime::Internal::work"* null) #19
  call void @_ZN6Halide7Runtime8Internal28worker_thread_already_lockedEPNS1_4workE(%"struct.Halide::Runtime::Internal::work"* nonnull %job) #19
  call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  %1 = load i32, i32* %exit_status, align 4, !tbaa !34
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #18
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
define weak void @halide_mutex_lock(%struct.halide_mutex* %mutex) local_unnamed_addr #4 {
entry:
  %control.i.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", align 8
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %mutex, i64 0, i32 0, i64 0
  %0 = cmpxchg weak i64* %state.i, i64 0, i64 1 acquire monotonic
  %1 = extractvalue { i64, i1 } %0, 1
  br i1 %1, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex4lockEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %2 = load atomic i64, i64* %state.i monotonic, align 8
  %3 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i to i8*
  %4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0, i32 0
  %lock_state2.i.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0
  %6 = ptrtoint %struct.halide_mutex* %mutex to i64
  br label %while.cond.outer.i.i

while.cond.outer.i.i:                             ; preds = %while.cond.outer.i.i.backedge, %if.then.i
  %expected.0.ph.i.i = phi i64 [ %2, %if.then.i ], [ %expected.0.ph.i.i.be, %while.cond.outer.i.i.backedge ]
  %spinner.sroa.0.0.ph.i.i = phi i32 [ 40, %if.then.i ], [ %spinner.sroa.0.0.ph.i.i.be, %while.cond.outer.i.i.backedge ]
  %and55.i.i = and i64 %expected.0.ph.i.i, 1
  %tobool.not56.i.i = icmp eq i64 %and55.i.i, 0
  br i1 %tobool.not56.i.i, label %if.then.i.i, label %if.end4.i.i

if.then.i.i:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i, %while.cond.outer.i.i
  %expected.057.i.i = phi i64 [ %9, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i ], [ %expected.0.ph.i.i, %while.cond.outer.i.i ]
  %or.i.i = or i64 %expected.057.i.i, 1
  %7 = cmpxchg weak i64* %state.i, i64 %expected.057.i.i, i64 %or.i.i acquire monotonic
  %8 = extractvalue { i64, i1 } %7, 1
  br i1 %8, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex4lockEv.exit, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i: ; preds = %if.then.i.i
  %9 = extractvalue { i64, i1 } %7, 0
  %and.i.i = and i64 %9, 1
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end4.i.i.loopexit

if.end4.i.i.loopexit:                             ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i
  %10 = extractvalue { i64, i1 } %7, 0
  br label %if.end4.i.i

if.end4.i.i:                                      ; preds = %if.end4.i.i.loopexit, %while.cond.outer.i.i
  %expected.0.lcssa.i.i = phi i64 [ %expected.0.ph.i.i, %while.cond.outer.i.i ], [ %10, %if.end4.i.i.loopexit ]
  %cmp.i.i.i = icmp sgt i32 %spinner.sroa.0.0.ph.i.i, 0
  br i1 %cmp.i.i.i, label %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i, label %if.end8.i.i

_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i: ; preds = %if.end4.i.i
  %cmp4.i.not.i.i = icmp eq i32 %spinner.sroa.0.0.ph.i.i, 1
  br i1 %cmp4.i.not.i.i, label %if.end8.i.i, label %if.then6.i.i

if.then6.i.i:                                     ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i
  %dec.i.i.i = add nsw i32 %spinner.sroa.0.0.ph.i.i, -1
  call void @halide_thread_yield() #17
  %11 = load atomic i64, i64* %state.i monotonic, align 8
  br label %while.cond.outer.i.i.backedge

if.end8.i.i:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i, %if.end4.i.i
  %spinner.sroa.0.152.i.i = phi i32 [ 0, %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i ], [ %spinner.sroa.0.0.ph.i.i, %if.end4.i.i ]
  %and9.i.i = and i64 %expected.0.lcssa.i.i, 2
  %cmp.i.i = icmp eq i64 %and9.i.i, 0
  br i1 %cmp.i.i, label %if.then10.i.i, label %if.end19.i.i

if.then10.i.i:                                    ; preds = %if.end8.i.i
  %or12.i.i = or i64 %expected.0.lcssa.i.i, 2
  %12 = cmpxchg weak i64* %state.i, i64 %expected.0.lcssa.i.i, i64 %or12.i.i monotonic monotonic
  %13 = extractvalue { i64, i1 } %12, 1
  br i1 %13, label %if.end19.i.i, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i: ; preds = %if.then10.i.i
  %14 = extractvalue { i64, i1 } %12, 0
  br label %while.cond.outer.i.i.backedge

if.end19.i.i:                                     ; preds = %if.then10.i.i, %if.end8.i.i
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !41
  store i64* %state.i, i64** %lock_state2.i.i.i, align 8, !tbaa !43
  %call21.i.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control4parkEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %5, i64 %6) #17
  %cmp22.i.i = icmp eq i64 %call21.i.i, %6
  br i1 %cmp22.i.i, label %cleanup30.critedge.i.i, label %if.end24.i.i

if.end24.i.i:                                     ; preds = %if.end19.i.i
  %15 = load atomic i64, i64* %state.i monotonic, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #18
  br label %while.cond.outer.i.i.backedge

while.cond.outer.i.i.backedge:                    ; preds = %if.end24.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i, %if.then6.i.i
  %expected.0.ph.i.i.be = phi i64 [ %14, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i ], [ %15, %if.end24.i.i ], [ %11, %if.then6.i.i ]
  %spinner.sroa.0.0.ph.i.i.be = phi i32 [ %spinner.sroa.0.152.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i ], [ 40, %if.end24.i.i ], [ %dec.i.i.i, %if.then6.i.i ]
  br label %while.cond.outer.i.i

cleanup30.critedge.i.i:                           ; preds = %if.end19.i.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #18
  br label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex4lockEv.exit

_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex4lockEv.exit: ; preds = %cleanup30.critedge.i.i, %if.then.i.i, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal27enqueue_work_already_lockedEiPNS1_4workES3_(i32 %num_jobs, %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"* %task_parent) local_unnamed_addr #0 {
entry:
  %0 = load i8, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 15), align 1, !tbaa !45, !range !17
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %land.rhs.i, label %if.end4

land.rhs.i:                                       ; preds = %while.body.i, %entry
  %bytes.011.i = phi i8* [ %incdec.ptr.i, %while.body.i ], [ bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), %entry ]
  %1 = load i8, i8* %bytes.011.i, align 1, !tbaa !14
  %cmp2.i = icmp eq i8 %1, 0
  br i1 %cmp2.i, label %while.body.i, label %do.body.i

while.body.i:                                     ; preds = %land.rhs.i
  %incdec.ptr.i = getelementptr inbounds i8, i8* %bytes.011.i, i64 1
  %exitcond.not.i = icmp eq i8* %incdec.ptr.i, bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* select (i1 icmp ugt (i8* bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1) to i8*), i8* getelementptr (i8, i8* bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i64 1)), %"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1), %"struct.Halide::Runtime::Internal::work_queue_t"* bitcast (i8* getelementptr (i8, i8* bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i64 1) to %"struct.Halide::Runtime::Internal::work_queue_t"*)) to i8*)
  br i1 %exitcond.not.i, label %do.body.i, label %land.rhs.i, !llvm.loop !49

do.body.i:                                        ; preds = %while.body.i, %land.rhs.i
  %bytes.0.lcssa.i = phi i8* [ %bytes.011.i, %land.rhs.i ], [ bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* select (i1 icmp ugt (i8* bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1) to i8*), i8* getelementptr (i8, i8* bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i64 1)), %"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1), %"struct.Halide::Runtime::Internal::work_queue_t"* bitcast (i8* getelementptr (i8, i8* bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i64 1) to %"struct.Halide::Runtime::Internal::work_queue_t"*)) to i8*), %while.body.i ]
  %cmp3.i = icmp eq i8* %bytes.0.lcssa.i, bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1) to i8*)
  br i1 %cmp3.i, label %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit, label %if.then.i

if.then.i:                                        ; preds = %do.body.i
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([193 x i8], [193 x i8]* @.str.6, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit

_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit: ; preds = %if.then.i, %do.body.i
  %2 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  %tobool1.not = icmp eq i32 %2, 0
  br i1 %tobool1.not, label %if.then2, label %if.end

if.then2:                                         ; preds = %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit
  %call = tail call i32 @_ZN6Halide7Runtime8Internal27default_desired_num_threadsEv() #19
  br label %if.end

if.end:                                           ; preds = %if.then2, %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit
  %3 = phi i32 [ %call, %if.then2 ], [ %2, %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit ]
  %4 = icmp sgt i32 %3, 1
  %spec.select.i = select i1 %4, i32 %3, i32 1
  %5 = icmp slt i32 %spec.select.i, 256
  %call3176 = select i1 %5, i32 %spec.select.i, i32 256
  store i32 %call3176, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  store i8 1, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 15), align 1, !tbaa !45
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry
  %cmp181 = icmp sgt i32 %num_jobs, 0
  br i1 %cmp181, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %if.end4
  %wide.trip.count = zext i32 %num_jobs to i64
  br label %for.body

for.cond.cleanup.loopexit:                        ; preds = %for.inc
  %phi.bo = and i8 %stealable_jobs.1, 1
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %if.end4
  %workers_to_wake.0.lcssa = phi i32 [ -1, %if.end4 ], [ %workers_to_wake.1, %for.cond.cleanup.loopexit ]
  %stealable_jobs.0.lcssa = phi i8 [ 0, %if.end4 ], [ %phi.bo, %for.cond.cleanup.loopexit ]
  %job_has_acquires.0.lcssa = phi i8 [ 0, %if.end4 ], [ %spec.select, %for.cond.cleanup.loopexit ]
  %job_may_block.0.lcssa = phi i8 [ 0, %if.end4 ], [ %job_may_block.1, %for.cond.cleanup.loopexit ]
  %min_threads.0.lcssa = phi i32 [ 0, %if.end4 ], [ %add, %for.cond.cleanup.loopexit ]
  %cmp31 = icmp eq %"struct.Halide::Runtime::Internal::work"* %task_parent, null
  br i1 %cmp31, label %if.then32, label %do.body61

for.body:                                         ; preds = %for.inc, %for.body.preheader
  %indvars.iv193 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next194, %for.inc ]
  %min_threads.0187 = phi i32 [ 0, %for.body.preheader ], [ %add, %for.inc ]
  %job_may_block.0185 = phi i8 [ 0, %for.body.preheader ], [ %job_may_block.1, %for.inc ]
  %job_has_acquires.0184 = phi i8 [ 0, %for.body.preheader ], [ %spec.select, %for.inc ]
  %stealable_jobs.0183 = phi i8 [ 0, %for.body.preheader ], [ %stealable_jobs.1, %for.inc ]
  %workers_to_wake.0182 = phi i32 [ -1, %for.body.preheader ], [ %workers_to_wake.1, %for.inc ]
  %min_threads5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193, i32 0, i32 7
  %6 = load i32, i32* %min_threads5, align 4, !tbaa !30
  %cmp6 = icmp eq i32 %6, 0
  %add = add i32 %6, %min_threads.0187
  %stealable_jobs.1 = select i1 %cmp6, i8 1, i8 %stealable_jobs.0183
  %job_may_block.1 = select i1 %cmp6, i8 %job_may_block.0185, i8 1
  %num_semaphores = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193, i32 0, i32 4
  %7 = load i32, i32* %num_semaphores, align 8, !tbaa !28
  %cmp16.not = icmp eq i32 %7, 0
  %spec.select = select i1 %cmp16.not, i8 %job_has_acquires.0184, i8 1
  %serial = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193, i32 0, i32 8
  %8 = load i8, i8* %serial, align 8, !tbaa !26, !range !17
  %tobool22.not = icmp eq i8 %8, 0
  br i1 %tobool22.not, label %if.else24, label %if.then23

if.then23:                                        ; preds = %for.body
  %inc = add nsw i32 %workers_to_wake.0182, 1
  br label %for.inc

if.else24:                                        ; preds = %for.body
  %extent = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193, i32 0, i32 6
  %9 = load i32, i32* %extent, align 8, !tbaa !25
  %add28 = add nsw i32 %9, %workers_to_wake.0182
  br label %for.inc

for.inc:                                          ; preds = %if.else24, %if.then23
  %workers_to_wake.1 = phi i32 [ %inc, %if.then23 ], [ %add28, %if.else24 ]
  %indvars.iv.next194 = add nuw nsw i64 %indvars.iv193, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next194, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup.loopexit, label %for.body, !llvm.loop !52

if.then32:                                        ; preds = %for.cond.cleanup
  %10 = or i8 %job_may_block.0.lcssa, %job_has_acquires.0.lcssa
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  %not. = xor i1 %12, true
  %add36 = zext i1 %not. to i32
  %min_threads.2 = add nsw i32 %min_threads.0.lcssa, %add36
  %13 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !53
  %cmp38180 = icmp slt i32 %13, 256
  br i1 %cmp38180, label %land.rhs, label %do.end50

land.rhs:                                         ; preds = %while.body, %if.then32
  %14 = phi i32 [ %inc45, %while.body ], [ %13, %if.then32 ]
  %15 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  %sub = add nsw i32 %15, -1
  %cmp39 = icmp slt i32 %14, %sub
  br i1 %cmp39, label %while.body, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %add40 = add nsw i32 %14, 1
  %16 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !54
  %sub41 = sub i32 %add40, %16
  %cmp42 = icmp slt i32 %sub41, %min_threads.2
  br i1 %cmp42, label %while.body, label %do.end50

while.body:                                       ; preds = %lor.rhs, %land.rhs
  %17 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !55
  %inc43 = add nsw i32 %17, 1
  store i32 %inc43, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !55
  %call44 = tail call %struct.halide_thread* @halide_spawn_thread(void (i8*)* nonnull @_ZN6Halide7Runtime8Internal13worker_threadEPv, i8* null) #19
  %18 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !53
  %inc45 = add nsw i32 %18, 1
  store i32 %inc45, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !53
  %idxprom46 = sext i32 %18 to i64
  %arrayidx47 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 13, i64 %idxprom46
  store %struct.halide_thread* %call44, %struct.halide_thread** %arrayidx47, align 8, !tbaa !10
  %cmp38 = icmp slt i32 %18, 255
  br i1 %cmp38, label %land.rhs, label %do.end50, !llvm.loop !56

do.end50:                                         ; preds = %while.body, %lor.rhs, %if.then32
  br i1 %12, label %if.end77, label %if.then54

if.then54:                                        ; preds = %do.end50
  %19 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !54
  %inc55 = add nsw i32 %19, 1
  store i32 %inc55, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !54
  br label %if.end77

do.body61:                                        ; preds = %for.cond.cleanup
  %min_threads63 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %task_parent, i64 0, i32 0, i32 7
  %20 = load i32, i32* %min_threads63, align 4, !tbaa !30
  %active_workers = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %task_parent, i64 0, i32 8
  %21 = load i32, i32* %active_workers, align 8, !tbaa !35
  %mul = mul nsw i32 %21, %20
  %threads_reserved = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %task_parent, i64 0, i32 6
  %22 = load i32, i32* %threads_reserved, align 8, !tbaa !57
  %sub64 = sub nsw i32 %mul, %22
  %cmp65.not = icmp sgt i32 %min_threads.0.lcssa, %sub64
  br i1 %cmp65.not, label %if.then66, label %do.end69

if.then66:                                        ; preds = %do.body61
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([270 x i8], [270 x i8]* @.str.3, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.end69

do.end69:                                         ; preds = %if.then66, %do.body61
  %23 = or i8 %job_may_block.0.lcssa, %job_has_acquires.0.lcssa
  %24 = and i8 %23, 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %if.end77, label %if.then73

if.then73:                                        ; preds = %do.end69
  %26 = load i32, i32* %threads_reserved, align 8, !tbaa !57
  %inc75 = add nsw i32 %26, 1
  store i32 %inc75, i32* %threads_reserved, align 8, !tbaa !57
  br label %if.end77

if.end77:                                         ; preds = %if.then73, %do.end69, %if.then54, %do.end50
  br i1 %cmp181, label %for.body83.lr.ph, label %for.cond.cleanup82

for.body83.lr.ph:                                 ; preds = %if.end77
  %.promoted = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !58
  %27 = zext i32 %num_jobs to i64
  br label %for.body83

for.cond80.for.cond.cleanup82_crit_edge:          ; preds = %for.body83
  store %"struct.Halide::Runtime::Internal::work"* %arrayidx85, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !58
  br label %for.cond.cleanup82

for.cond.cleanup82:                               ; preds = %for.cond80.for.cond.cleanup82_crit_edge, %if.end77
  %28 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !59
  %tobool96 = icmp ne i32 %28, 0
  %29 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8
  %30 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8
  %cmp98 = icmp slt i32 %29, %30
  %31 = or i1 %tobool96, %cmp98
  %cmp102 = icmp sgt i32 %workers_to_wake.0.lcssa, %29
  %or.cond174 = or i1 %cmp102, %31
  %storemerge = select i1 %or.cond174, i32 %30, i32 %workers_to_wake.0.lcssa
  store i32 %storemerge, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 6), align 8, !tbaa !60
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 8)) #19
  %32 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 6), align 8, !tbaa !60
  %33 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !55
  %cmp106 = icmp sgt i32 %32, %33
  br i1 %cmp106, label %if.then107, label %if.end111

for.body83:                                       ; preds = %for.body83, %for.body83.lr.ph
  %indvars.iv = phi i64 [ %27, %for.body83.lr.ph ], [ %indvars.iv.next, %for.body83 ]
  %arrayidx85192 = phi %"struct.Halide::Runtime::Internal::work"* [ %.promoted, %for.body83.lr.ph ], [ %arrayidx85, %for.body83 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx85 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next
  %next_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next, i32 2
  store %"struct.Halide::Runtime::Internal::work"* %arrayidx85192, %"struct.Halide::Runtime::Internal::work"** %next_job, align 8, !tbaa !61
  %siblings = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next, i32 3
  store %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"** %siblings, align 8, !tbaa !38
  %sibling_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next, i32 4
  store i32 %num_jobs, i32* %sibling_count, align 8, !tbaa !39
  %threads_reserved93 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next, i32 6
  store i32 0, i32* %threads_reserved93, align 8, !tbaa !57
  %cmp81 = icmp sgt i64 %indvars.iv, 1
  br i1 %cmp81, label %for.body83, label %for.cond80.for.cond.cleanup82_crit_edge, !llvm.loop !62

if.then107:                                       ; preds = %for.cond.cleanup82
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 9)) #19
  %tobool108.not = icmp eq i8 %stealable_jobs.0.lcssa, 0
  br i1 %tobool108.not, label %if.end111, label %if.then109

if.then109:                                       ; preds = %if.then107
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #19
  br label %if.end111

if.end111:                                        ; preds = %if.then109, %if.then107, %for.cond.cleanup82
  %34 = or i8 %job_may_block.0.lcssa, %job_has_acquires.0.lcssa
  %35 = and i8 %34, 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %if.end123, label %if.then115

if.then115:                                       ; preds = %if.end111
  br i1 %cmp31, label %if.else120, label %if.then117

if.then117:                                       ; preds = %if.then115
  %threads_reserved118 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %task_parent, i64 0, i32 6
  %37 = load i32, i32* %threads_reserved118, align 8, !tbaa !57
  %dec119 = add nsw i32 %37, -1
  store i32 %dec119, i32* %threads_reserved118, align 8, !tbaa !57
  br label %if.end123

if.else120:                                       ; preds = %if.then115
  %38 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !54
  %dec121 = add nsw i32 %38, -1
  store i32 %dec121, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !54
  br label %if.end123

if.end123:                                        ; preds = %if.else120, %if.then117, %if.end111
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal28worker_thread_already_lockedEPNS1_4workE(%"struct.Halide::Runtime::Internal::work"* %owned_job) local_unnamed_addr #0 {
entry:
  %active_workers.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 8
  %tobool.not = icmp eq %"struct.Halide::Runtime::Internal::work"* %owned_job, null
  %extent.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 0, i32 6
  %exit_status = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 9
  %parent_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 5
  %siblings56 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 3
  %owner_is_sleeping = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 11
  %next_job10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 2
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %entry
  %spin_count.0 = phi i32 [ 0, %entry ], [ %spin_count.0.be, %while.cond.backedge ]
  br i1 %tobool.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %while.cond
  %0 = load i32, i32* %extent.i, align 8, !tbaa !25
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %cond.end, label %if.then

cond.false:                                       ; preds = %while.cond
  %1 = load i8, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 14), align 8, !tbaa !63, !range !17
  %tobool1.not = icmp eq i8 %1, 0
  br i1 %tobool1.not, label %do.end.thread, label %while.end316

cond.end:                                         ; preds = %cond.true
  %2 = load i32, i32* %active_workers.i, align 8, !tbaa !35
  %tobool2.i.not = icmp eq i32 %2, 0
  br i1 %tobool2.i.not, label %while.end316, label %if.then

if.then:                                          ; preds = %cond.end, %cond.true
  %3 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !58
  %4 = load i32, i32* %exit_status, align 4, !tbaa !34
  %cmp.not = icmp eq i32 %4, 0
  br i1 %cmp.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.then
  %5 = load i32, i32* %active_workers.i, align 8, !tbaa !35
  %cmp4 = icmp eq i32 %5, 0
  br i1 %cmp4, label %while.cond6.preheader, label %do.end

while.cond6.preheader:                            ; preds = %if.then3
  %cmp7.not524 = icmp eq %"struct.Halide::Runtime::Internal::work"* %3, %owned_job
  br i1 %cmp7.not524, label %while.end, label %while.body8

while.body8:                                      ; preds = %while.body8, %while.cond6.preheader
  %job.0525 = phi %"struct.Halide::Runtime::Internal::work"* [ %6, %while.body8 ], [ %3, %while.cond6.preheader ]
  %next_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.0525, i64 0, i32 2
  %6 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job, align 8, !tbaa !61
  %cmp7.not = icmp eq %"struct.Halide::Runtime::Internal::work"* %6, %owned_job
  br i1 %cmp7.not, label %while.end, label %while.body8, !llvm.loop !64

while.end:                                        ; preds = %while.body8, %while.cond6.preheader
  %prev_ptr.0.lcssa = phi %"struct.Halide::Runtime::Internal::work"** [ getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), %while.cond6.preheader ], [ %next_job, %while.body8 ]
  %7 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job10, align 8, !tbaa !61
  store %"struct.Halide::Runtime::Internal::work"* %7, %"struct.Halide::Runtime::Internal::work"** %prev_ptr.0.lcssa, align 8, !tbaa !10
  store i32 0, i32* %extent.i, align 8, !tbaa !25
  br label %while.cond.backedge

if.else:                                          ; preds = %if.then
  %8 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job, align 8, !tbaa !40
  %tobool11.not = icmp eq %"struct.Halide::Runtime::Internal::work"* %8, null
  br i1 %tobool11.not, label %do.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else
  %exit_status13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %8, i64 0, i32 9
  %9 = load i32, i32* %exit_status13, align 4, !tbaa !34
  %cmp14.not = icmp eq i32 %9, 0
  br i1 %cmp14.not, label %do.end, label %if.then15

if.then15:                                        ; preds = %land.lhs.true
  store i32 %9, i32* %exit_status, align 4, !tbaa !34
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #19
  br label %while.cond.backedge

do.end:                                           ; preds = %land.lhs.true, %if.else, %if.then3
  %tobool23.not527 = icmp eq %"struct.Halide::Runtime::Internal::work"* %3, null
  br i1 %tobool23.not527, label %if.then103, label %do.end27.lr.ph

do.end.thread:                                    ; preds = %cond.false
  %10 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !58
  %tobool23.not527563 = icmp eq %"struct.Halide::Runtime::Internal::work"* %10, null
  br i1 %tobool23.not527563, label %if.else112, label %do.end27.us.preheader

do.end27.lr.ph:                                   ; preds = %do.end
  br i1 %tobool.not, label %do.end27.us.preheader, label %do.end27

do.end27.us.preheader:                            ; preds = %do.end27.lr.ph, %do.end.thread
  %job.1529.us.ph = phi %"struct.Halide::Runtime::Internal::work"* [ %10, %do.end.thread ], [ %3, %do.end27.lr.ph ]
  br label %do.end27.us

do.end27.us:                                      ; preds = %cleanup.us, %do.end27.us.preheader
  %job.1529.us = phi %"struct.Halide::Runtime::Internal::work"* [ %31, %cleanup.us ], [ %job.1529.us.ph, %do.end27.us.preheader ]
  %prev_ptr.1528.us = phi %"struct.Halide::Runtime::Internal::work"** [ %next_job95.us, %cleanup.us ], [ getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), %do.end27.us.preheader ]
  %parent_job29.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 5
  %11 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job29.us, align 8, !tbaa !40
  %cmp30.us = icmp eq %"struct.Halide::Runtime::Internal::work"* %11, null
  br i1 %cmp30.us, label %if.then31.us, label %if.else32.us

if.else32.us:                                     ; preds = %do.end27.us
  %active_workers33.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %11, i64 0, i32 8
  %12 = load i32, i32* %active_workers33.us, align 8, !tbaa !35
  %cmp34.us = icmp eq i32 %12, 0
  %min_threads.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %11, i64 0, i32 0, i32 7
  %13 = load i32, i32* %min_threads.us, align 4, !tbaa !30
  br i1 %cmp34.us, label %if.then35.us, label %if.else38.us

if.else38.us:                                     ; preds = %if.else32.us
  %mul.us = mul nsw i32 %13, %12
  %threads_reserved42.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %11, i64 0, i32 6
  %14 = load i32, i32* %threads_reserved42.us, align 8, !tbaa !57
  %sub43.us = sub nsw i32 %mul.us, %14
  br label %if.end45.us

if.then35.us:                                     ; preds = %if.else32.us
  %threads_reserved.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %11, i64 0, i32 6
  %15 = load i32, i32* %threads_reserved.us, align 8, !tbaa !57
  %sub37.us = sub nsw i32 %13, %15
  br label %if.end45.us

if.then31.us:                                     ; preds = %do.end27.us
  %16 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !53
  %add.us = add nsw i32 %16, 1
  %17 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !54
  %sub.us = sub i32 %add.us, %17
  br label %if.end45.us

if.end45.us:                                      ; preds = %if.then31.us, %if.then35.us, %if.else38.us
  %threads_available.0.us = phi i32 [ %sub.us, %if.then31.us ], [ %sub37.us, %if.then35.us ], [ %sub43.us, %if.else38.us ]
  %min_threads47.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 0, i32 7
  %18 = load i32, i32* %min_threads47.us, align 4, !tbaa !30
  %cmp48.not.us = icmp sge i32 %threads_available.0.us, %18
  %serial.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 0, i32 8
  %19 = load i8, i8* %serial.us, align 8, !tbaa !26, !range !17
  %tobool69.not.us = icmp eq i8 %19, 0
  br i1 %tobool69.not.us, label %lor.end73.us, label %lor.rhs70.us

lor.rhs70.us:                                     ; preds = %if.end45.us
  %active_workers71.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 8
  %20 = load i32, i32* %active_workers71.us, align 8, !tbaa !35
  %cmp72.us = icmp eq i32 %20, 0
  br label %lor.end73.us

lor.end73.us:                                     ; preds = %lor.rhs70.us, %if.end45.us
  %21 = phi i1 [ true, %if.end45.us ], [ %cmp72.us, %lor.rhs70.us ]
  %22 = and i1 %21, %cmp48.not.us
  br i1 %22, label %if.then86.us, label %cleanup.us

if.then86.us:                                     ; preds = %lor.end73.us
  %next_semaphore.i.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 10
  %23 = load i32, i32* %next_semaphore.i.us, align 8, !tbaa !36
  %num_semaphores.i.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 0, i32 4
  %24 = load i32, i32* %num_semaphores.i.us, align 8, !tbaa !28
  %cmp14.i.us = icmp slt i32 %23, %24
  br i1 %cmp14.i.us, label %for.body.lr.ph.i.us, label %if.else127

for.body.lr.ph.i.us:                              ; preds = %if.then86.us
  %semaphores.i.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 0, i32 3
  br label %for.body.i.us

for.body.i.us:                                    ; preds = %for.inc.i.us, %for.body.lr.ph.i.us
  %25 = phi i32 [ %23, %for.body.lr.ph.i.us ], [ %inc.i.us, %for.inc.i.us ]
  %26 = load %struct.halide_semaphore_acquire_t*, %struct.halide_semaphore_acquire_t** %semaphores.i.us, align 8, !tbaa !27
  %idxprom.i.us = sext i32 %25 to i64
  %semaphore.i.us = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %26, i64 %idxprom.i.us, i32 0
  %27 = load %struct.halide_semaphore_t*, %struct.halide_semaphore_t** %semaphore.i.us, align 8, !tbaa !65
  %count.i.us = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %26, i64 %idxprom.i.us, i32 1
  %28 = load i32, i32* %count.i.us, align 8, !tbaa !67
  %call.i.us = tail call zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %27, i32 %28) #17
  br i1 %call.i.us, label %for.inc.i.us, label %cleanup.us

for.inc.i.us:                                     ; preds = %for.body.i.us
  %29 = load i32, i32* %next_semaphore.i.us, align 8, !tbaa !36
  %inc.i.us = add nsw i32 %29, 1
  store i32 %inc.i.us, i32* %next_semaphore.i.us, align 8, !tbaa !36
  %30 = load i32, i32* %num_semaphores.i.us, align 8, !tbaa !28
  %cmp.i.us = icmp slt i32 %inc.i.us, %30
  br i1 %cmp.i.us, label %for.body.i.us, label %if.else127, !llvm.loop !68

cleanup.us:                                       ; preds = %for.body.i.us, %lor.end73.us
  %next_job95.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 2
  %31 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job95.us, align 8, !tbaa !61
  %tobool23.not.us = icmp eq %"struct.Halide::Runtime::Internal::work"* %31, null
  br i1 %tobool23.not.us, label %if.then103, label %do.end27.us

do.end27:                                         ; preds = %cleanup, %do.end27.lr.ph
  %job.1529 = phi %"struct.Halide::Runtime::Internal::work"* [ %53, %cleanup ], [ %3, %do.end27.lr.ph ]
  %prev_ptr.1528 = phi %"struct.Halide::Runtime::Internal::work"** [ %next_job95, %cleanup ], [ getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), %do.end27.lr.ph ]
  %parent_job29 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 5
  %32 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job29, align 8, !tbaa !40
  %cmp30 = icmp eq %"struct.Halide::Runtime::Internal::work"* %32, null
  br i1 %cmp30, label %if.then31, label %if.else32

if.then31:                                        ; preds = %do.end27
  %33 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !53
  %add = add nsw i32 %33, 1
  %34 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !54
  %sub = sub i32 %add, %34
  br label %if.end45

if.else32:                                        ; preds = %do.end27
  %active_workers33 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %32, i64 0, i32 8
  %35 = load i32, i32* %active_workers33, align 8, !tbaa !35
  %cmp34 = icmp eq i32 %35, 0
  %min_threads = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %32, i64 0, i32 0, i32 7
  %36 = load i32, i32* %min_threads, align 4, !tbaa !30
  br i1 %cmp34, label %if.then35, label %if.else38

if.then35:                                        ; preds = %if.else32
  %threads_reserved = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %32, i64 0, i32 6
  %37 = load i32, i32* %threads_reserved, align 8, !tbaa !57
  %sub37 = sub nsw i32 %36, %37
  br label %if.end45

if.else38:                                        ; preds = %if.else32
  %mul = mul nsw i32 %36, %35
  %threads_reserved42 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %32, i64 0, i32 6
  %38 = load i32, i32* %threads_reserved42, align 8, !tbaa !57
  %sub43 = sub nsw i32 %mul, %38
  br label %if.end45

if.end45:                                         ; preds = %if.else38, %if.then35, %if.then31
  %threads_available.0 = phi i32 [ %sub, %if.then31 ], [ %sub37, %if.then35 ], [ %sub43, %if.else38 ]
  %min_threads47 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 0, i32 7
  %39 = load i32, i32* %min_threads47, align 4, !tbaa !30
  %cmp48.not = icmp slt i32 %threads_available.0, %39
  %siblings = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 3
  %40 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %siblings, align 8, !tbaa !38
  %41 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %siblings56, align 8, !tbaa !38
  %cmp57 = icmp ne %"struct.Halide::Runtime::Internal::work"* %40, %41
  %cmp60 = icmp ne i32 %39, 0
  %serial = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 0, i32 8
  %42 = load i8, i8* %serial, align 8, !tbaa !26, !range !17
  %tobool69.not = icmp eq i8 %42, 0
  br i1 %tobool69.not, label %lor.end73, label %lor.rhs70

lor.rhs70:                                        ; preds = %if.end45
  %active_workers71 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 8
  %43 = load i32, i32* %active_workers71, align 8, !tbaa !35
  %cmp72 = icmp eq i32 %43, 0
  br label %lor.end73

lor.end73:                                        ; preds = %lor.rhs70, %if.end45
  %44 = phi i1 [ true, %if.end45 ], [ %cmp72, %lor.rhs70 ]
  %.not = and i1 %cmp60, %cmp57
  %brmerge = or i1 %cmp48.not, %.not
  %.not472 = xor i1 %44, true
  %brmerge473 = or i1 %brmerge, %.not472
  br i1 %brmerge473, label %cleanup, label %if.then86

if.then86:                                        ; preds = %lor.end73
  %next_semaphore.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 10
  %45 = load i32, i32* %next_semaphore.i, align 8, !tbaa !36
  %num_semaphores.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 0, i32 4
  %46 = load i32, i32* %num_semaphores.i, align 8, !tbaa !28
  %cmp14.i = icmp slt i32 %45, %46
  br i1 %cmp14.i, label %for.body.lr.ph.i, label %if.else127

for.body.lr.ph.i:                                 ; preds = %if.then86
  %semaphores.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 0, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %47 = phi i32 [ %45, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i ]
  %48 = load %struct.halide_semaphore_acquire_t*, %struct.halide_semaphore_acquire_t** %semaphores.i, align 8, !tbaa !27
  %idxprom.i = sext i32 %47 to i64
  %semaphore.i = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %48, i64 %idxprom.i, i32 0
  %49 = load %struct.halide_semaphore_t*, %struct.halide_semaphore_t** %semaphore.i, align 8, !tbaa !65
  %count.i = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %48, i64 %idxprom.i, i32 1
  %50 = load i32, i32* %count.i, align 8, !tbaa !67
  %call.i = tail call zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %49, i32 %50) #17
  br i1 %call.i, label %for.inc.i, label %cleanup

for.inc.i:                                        ; preds = %for.body.i
  %51 = load i32, i32* %next_semaphore.i, align 8, !tbaa !36
  %inc.i = add nsw i32 %51, 1
  store i32 %inc.i, i32* %next_semaphore.i, align 8, !tbaa !36
  %52 = load i32, i32* %num_semaphores.i, align 8, !tbaa !28
  %cmp.i = icmp slt i32 %inc.i, %52
  br i1 %cmp.i, label %for.body.i, label %if.else127, !llvm.loop !68

cleanup:                                          ; preds = %for.body.i, %lor.end73
  %next_job95 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 2
  %53 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job95, align 8, !tbaa !61
  %tobool23.not = icmp eq %"struct.Halide::Runtime::Internal::work"* %53, null
  br i1 %tobool23.not, label %if.then103, label %do.end27

if.then103:                                       ; preds = %cleanup, %cleanup.us, %do.end
  br i1 %tobool.not, label %if.else112, label %if.then105

if.then105:                                       ; preds = %if.then103
  %inc = add nsw i32 %spin_count.0, 1
  %cmp106 = icmp slt i32 %spin_count.0, 40
  br i1 %cmp106, label %if.then107, label %if.else108

if.then107:                                       ; preds = %if.then105
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  tail call void @halide_thread_yield() #17
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  br label %while.cond.backedge

if.else108:                                       ; preds = %if.then105
  %54 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !59
  %inc109 = add nsw i32 %54, 1
  store i32 %inc109, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !59
  store i8 1, i8* %owner_is_sleeping, align 4, !tbaa !37
  tail call void @halide_cond_wait(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10), %struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  store i8 0, i8* %owner_is_sleeping, align 4, !tbaa !37
  %55 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !59
  %dec = add nsw i32 %55, -1
  store i32 %dec, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !59
  br label %while.cond.backedge

if.else112:                                       ; preds = %if.then103, %do.end.thread
  %56 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8, !tbaa !69
  %inc113 = add nsw i32 %56, 1
  store i32 %inc113, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8, !tbaa !69
  %57 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !55
  %58 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 6), align 8, !tbaa !60
  %cmp114 = icmp sgt i32 %57, %58
  br i1 %cmp114, label %if.then115, label %if.else118

if.then115:                                       ; preds = %if.else112
  %dec116 = add nsw i32 %57, -1
  store i32 %dec116, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !55
  tail call void @halide_cond_wait(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 9), %struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  %59 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !55
  %inc117 = add nsw i32 %59, 1
  store i32 %inc117, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !55
  br label %if.end124

if.else118:                                       ; preds = %if.else112
  %inc119 = add nsw i32 %spin_count.0, 1
  %cmp120 = icmp slt i32 %spin_count.0, 40
  br i1 %cmp120, label %if.then121, label %if.else122

if.then121:                                       ; preds = %if.else118
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  tail call void @halide_thread_yield() #17
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  br label %if.end124

if.else122:                                       ; preds = %if.else118
  tail call void @halide_cond_wait(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 8), %struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  br label %if.end124

if.end124:                                        ; preds = %if.else122, %if.then121, %if.then115
  %spin_count.1 = phi i32 [ %spin_count.0, %if.then115 ], [ %inc119, %if.then121 ], [ %inc119, %if.else122 ]
  %60 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8, !tbaa !69
  %dec125 = add nsw i32 %60, -1
  store i32 %dec125, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8, !tbaa !69
  br label %while.cond.backedge

if.else127:                                       ; preds = %for.inc.i, %if.then86, %for.inc.i.us, %if.then86.us
  %next_semaphore.i521 = phi i32* [ %next_semaphore.i.us, %for.inc.i.us ], [ %next_semaphore.i, %for.inc.i ], [ %next_semaphore.i.us, %if.then86.us ], [ %next_semaphore.i, %if.then86 ]
  %prev_ptr.1519 = phi %"struct.Halide::Runtime::Internal::work"** [ %prev_ptr.1528.us, %for.inc.i.us ], [ %prev_ptr.1528, %for.inc.i ], [ %prev_ptr.1528.us, %if.then86.us ], [ %prev_ptr.1528, %if.then86 ]
  %job.1515 = phi %"struct.Halide::Runtime::Internal::work"* [ %job.1529.us, %for.inc.i.us ], [ %job.1529, %for.inc.i ], [ %job.1529.us, %if.then86.us ], [ %job.1529, %if.then86 ]
  store i32 0, i32* %next_semaphore.i521, align 8, !tbaa !36
  %active_workers132 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 8
  %61 = load i32, i32* %active_workers132, align 8, !tbaa !35
  %inc133 = add nsw i32 %61, 1
  store i32 %inc133, i32* %active_workers132, align 8, !tbaa !35
  %parent_job134 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 5
  %62 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job134, align 8, !tbaa !40
  %cmp135 = icmp eq %"struct.Halide::Runtime::Internal::work"* %62, null
  %min_threads138 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 7
  %63 = load i32, i32* %min_threads138, align 4, !tbaa !30
  br i1 %cmp135, label %if.then136, label %if.else143

if.then136:                                       ; preds = %if.else127
  %64 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !54
  %add139 = add nsw i32 %64, %63
  store i32 %add139, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !54
  br label %if.end152

if.else143:                                       ; preds = %if.else127
  %threads_reserved147 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %62, i64 0, i32 6
  %65 = load i32, i32* %threads_reserved147, align 8, !tbaa !57
  %add148 = add nsw i32 %65, %63
  store i32 %add148, i32* %threads_reserved147, align 8, !tbaa !57
  br label %if.end152

if.end152:                                        ; preds = %if.else143, %if.then136
  %serial154 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 8
  %66 = load i8, i8* %serial154, align 8, !tbaa !26, !range !17
  %tobool155.not = icmp eq i8 %66, 0
  br i1 %tobool155.not, label %if.else198, label %if.then156

if.then156:                                       ; preds = %if.end152
  %next_job157 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 2
  %67 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job157, align 8, !tbaa !61
  store %"struct.Halide::Runtime::Internal::work"* %67, %"struct.Halide::Runtime::Internal::work"** %prev_ptr.1519, align 8, !tbaa !10
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  %extent163 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 6
  %next_semaphore.i474 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 10
  %num_semaphores.i475 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 4
  %semaphores.i477 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 3
  %user_context = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 7
  %fn = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 0
  %min = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 5
  %closure = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 1
  %68 = bitcast %"struct.Halide::Runtime::Internal::work"* %job.1515 to i8*
  br label %while.cond161.preheader

while.cond161.preheader:                          ; preds = %if.end172, %if.then156
  %iters.0538 = phi i32 [ 1, %if.then156 ], [ 0, %if.end172 ]
  %total_iters.0537 = phi i32 [ 0, %if.then156 ], [ %add178, %if.end172 ]
  %69 = load i32, i32* %extent163, align 8, !tbaa !25
  %sub164531 = sub nsw i32 %69, %total_iters.0537
  %cmp165532 = icmp sgt i32 %sub164531, %iters.0538
  br i1 %cmp165532, label %land.rhs.preheader, label %while.end169

land.rhs.preheader:                               ; preds = %while.cond161.preheader
  %.pre = load i32, i32* %next_semaphore.i474, align 8, !tbaa !36
  %.pre560 = load i32, i32* %num_semaphores.i475, align 8, !tbaa !28
  br label %land.rhs

land.rhs:                                         ; preds = %while.body167, %land.rhs.preheader
  %70 = phi i32 [ %79, %while.body167 ], [ %69, %land.rhs.preheader ]
  %71 = phi i32 [ %80, %while.body167 ], [ %.pre560, %land.rhs.preheader ]
  %72 = phi i32 [ 0, %while.body167 ], [ %.pre, %land.rhs.preheader ]
  %iters.1533 = phi i32 [ %inc168, %while.body167 ], [ %iters.0538, %land.rhs.preheader ]
  %cmp14.i476 = icmp slt i32 %72, %71
  br i1 %cmp14.i476, label %for.body.i483, label %while.body167

for.body.i483:                                    ; preds = %for.inc.i486, %land.rhs
  %73 = phi i32 [ %inc.i484, %for.inc.i486 ], [ %72, %land.rhs ]
  %74 = load %struct.halide_semaphore_acquire_t*, %struct.halide_semaphore_acquire_t** %semaphores.i477, align 8, !tbaa !27
  %idxprom.i479 = sext i32 %73 to i64
  %semaphore.i480 = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %74, i64 %idxprom.i479, i32 0
  %75 = load %struct.halide_semaphore_t*, %struct.halide_semaphore_t** %semaphore.i480, align 8, !tbaa !65
  %count.i481 = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %74, i64 %idxprom.i479, i32 1
  %76 = load i32, i32* %count.i481, align 8, !tbaa !67
  %call.i482 = tail call zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %75, i32 %76) #17
  br i1 %call.i482, label %for.inc.i486, label %while.end169

for.inc.i486:                                     ; preds = %for.body.i483
  %77 = load i32, i32* %next_semaphore.i474, align 8, !tbaa !36
  %inc.i484 = add nsw i32 %77, 1
  store i32 %inc.i484, i32* %next_semaphore.i474, align 8, !tbaa !36
  %78 = load i32, i32* %num_semaphores.i475, align 8, !tbaa !28
  %cmp.i485 = icmp slt i32 %inc.i484, %78
  br i1 %cmp.i485, label %for.body.i483, label %while.body167.loopexit, !llvm.loop !68

while.body167.loopexit:                           ; preds = %for.inc.i486
  %.pre561 = load i32, i32* %extent163, align 8, !tbaa !25
  br label %while.body167

while.body167:                                    ; preds = %while.body167.loopexit, %land.rhs
  %79 = phi i32 [ %.pre561, %while.body167.loopexit ], [ %70, %land.rhs ]
  %80 = phi i32 [ %78, %while.body167.loopexit ], [ %71, %land.rhs ]
  store i32 0, i32* %next_semaphore.i474, align 8, !tbaa !36
  %inc168 = add nuw nsw i32 %iters.1533, 1
  %sub164 = sub nsw i32 %79, %total_iters.0537
  %cmp165 = icmp sgt i32 %sub164, %inc168
  br i1 %cmp165, label %land.rhs, label %if.end172, !llvm.loop !70

while.end169:                                     ; preds = %for.body.i483, %while.cond161.preheader
  %iters.1523 = phi i32 [ %iters.0538, %while.cond161.preheader ], [ %iters.1533, %for.body.i483 ]
  %cmp170 = icmp eq i32 %iters.1523, 0
  br i1 %cmp170, label %while.end179, label %if.end172

if.end172:                                        ; preds = %while.end169, %while.body167
  %iters.1523566 = phi i32 [ %iters.1523, %while.end169 ], [ %inc168, %while.body167 ]
  %81 = load i8*, i8** %user_context, align 8, !tbaa !33
  %82 = load i32 (i8*, i32, i32, i8*, i8*)*, i32 (i8*, i32, i32, i8*, i8*)** %fn, align 8, !tbaa !20
  %83 = load i32, i32* %min, align 4, !tbaa !24
  %add175 = add nsw i32 %83, %total_iters.0537
  %84 = load i8*, i8** %closure, align 8, !tbaa !29
  %call177 = tail call i32 @halide_do_loop_task(i8* %81, i32 (i8*, i32, i32, i8*, i8*)* %82, i32 %add175, i32 %iters.1523566, i8* %84, i8* nonnull %68) #19
  %add178 = add nuw nsw i32 %iters.1523566, %total_iters.0537
  %cmp159 = icmp eq i32 %call177, 0
  br i1 %cmp159, label %while.cond161.preheader, label %while.end179, !llvm.loop !71

while.end179:                                     ; preds = %if.end172, %while.end169
  %cmp170568 = phi i1 [ true, %while.end169 ], [ false, %if.end172 ]
  %result.0.lcssa = phi i32 [ 0, %while.end169 ], [ %call177, %if.end172 ]
  %total_iters.0.lcssa = phi i32 [ %total_iters.0537, %while.end169 ], [ %add178, %if.end172 ]
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  %85 = load i32, i32* %min, align 4, !tbaa !24
  %add182 = add nsw i32 %85, %total_iters.0.lcssa
  store i32 %add182, i32* %min, align 4, !tbaa !24
  %86 = load i32, i32* %extent163, align 8, !tbaa !25
  %sub185 = sub nsw i32 %86, %total_iters.0.lcssa
  store i32 %sub185, i32* %extent163, align 8, !tbaa !25
  br i1 %cmp170568, label %if.else190, label %if.end230.thread505

if.end230.thread505:                              ; preds = %while.end179
  store i32 0, i32* %extent163, align 8, !tbaa !25
  br label %if.then238

if.else190:                                       ; preds = %while.end179
  %cmp193 = icmp sgt i32 %sub185, 0
  br i1 %cmp193, label %if.then194, label %if.end271

if.then194:                                       ; preds = %if.else190
  %87 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !58
  store %"struct.Halide::Runtime::Internal::work"* %87, %"struct.Halide::Runtime::Internal::work"** %next_job157, align 8, !tbaa !61
  store %"struct.Halide::Runtime::Internal::work"* %job.1515, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !58
  br label %if.end271

if.else198:                                       ; preds = %if.end152
  %myjob.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 0
  %myjob.sroa.0.0.copyload = load i32 (i8*, i32, i32, i8*, i8*)*, i32 (i8*, i32, i32, i8*, i8*)** %myjob.sroa.0.0..sroa_idx, align 8, !tbaa.struct !72
  %myjob.sroa.4.0..sroa_idx327 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 1
  %myjob.sroa.4.0.copyload = load i8*, i8** %myjob.sroa.4.0..sroa_idx327, align 8, !tbaa.struct !74
  %myjob.sroa.6333.0..sroa_idx334 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 5
  %myjob.sroa.6333.0.copyload = load i32, i32* %myjob.sroa.6333.0..sroa_idx334, align 4
  %myjob.sroa.8340.0..sroa_idx341 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 1
  %myjob.sroa.8340.0.copyload = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %myjob.sroa.8340.0..sroa_idx341, align 8, !tbaa.struct !75
  %myjob.sroa.10347.0..sroa_idx348 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 7
  %myjob.sroa.10347.0.copyload = load i8*, i8** %myjob.sroa.10347.0..sroa_idx348, align 8, !tbaa.struct !76
  %inc201 = add nsw i32 %myjob.sroa.6333.0.copyload, 1
  store i32 %inc201, i32* %myjob.sroa.6333.0..sroa_idx334, align 4, !tbaa !24
  %extent203 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 6
  %88 = load i32, i32* %extent203, align 8, !tbaa !25
  %dec204 = add nsw i32 %88, -1
  store i32 %dec204, i32* %extent203, align 8, !tbaa !25
  %cmp207 = icmp eq i32 %dec204, 0
  br i1 %cmp207, label %if.then208, label %if.end210

if.then208:                                       ; preds = %if.else198
  %next_job209 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 2
  %89 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job209, align 8, !tbaa !61
  store %"struct.Halide::Runtime::Internal::work"* %89, %"struct.Halide::Runtime::Internal::work"** %prev_ptr.1519, align 8, !tbaa !10
  br label %if.end210

if.end210:                                        ; preds = %if.then208, %if.else198
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  %tobool211.not = icmp eq i32 (i8*, i32, i8*)* %myjob.sroa.8340.0.copyload, null
  br i1 %tobool211.not, label %if.else220, label %if.then212

if.then212:                                       ; preds = %if.end210
  %call219 = tail call i32 @halide_do_task(i8* %myjob.sroa.10347.0.copyload, i32 (i8*, i32, i8*)* nonnull %myjob.sroa.8340.0.copyload, i32 %myjob.sroa.6333.0.copyload, i8* %myjob.sroa.4.0.copyload) #19
  br label %if.end230

if.else220:                                       ; preds = %if.end210
  %90 = bitcast %"struct.Halide::Runtime::Internal::work"* %job.1515 to i8*
  %call228 = tail call i32 @halide_do_loop_task(i8* %myjob.sroa.10347.0.copyload, i32 (i8*, i32, i32, i8*, i8*)* %myjob.sroa.0.0.copyload, i32 %myjob.sroa.6333.0.copyload, i32 1, i8* %myjob.sroa.4.0.copyload, i8* %90) #19
  br label %if.end230

if.end230:                                        ; preds = %if.else220, %if.then212
  %result.1 = phi i32 [ %call219, %if.then212 ], [ %call228, %if.else220 ]
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  %cmp237.not = icmp eq i32 %result.1, 0
  br i1 %cmp237.not, label %if.end271, label %if.then238

if.then238:                                       ; preds = %if.end230, %if.end230.thread505
  %result.2510 = phi i32 [ %result.0.lcssa, %if.end230.thread505 ], [ %result.1, %if.end230 ]
  %exit_status239 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 9
  store i32 %result.2510, i32* %exit_status239, align 4, !tbaa !34
  %sibling_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 4
  %91 = load i32, i32* %sibling_count, align 8, !tbaa !39
  %cmp240540 = icmp sgt i32 %91, 0
  br i1 %cmp240540, label %do.end243.lr.ph, label %if.end271

do.end243.lr.ph:                                  ; preds = %if.then238
  %siblings244 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 3
  %92 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %siblings244, align 8, !tbaa !38
  %wide.trip.count = zext i32 %91 to i64
  br label %do.end243

do.end243:                                        ; preds = %for.inc, %do.end243.lr.ph
  %indvars.iv = phi i64 [ 0, %do.end243.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %wake_owners.0541 = phi i8 [ 0, %do.end243.lr.ph ], [ %wake_owners.1, %for.inc ]
  %exit_status245 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %92, i64 %indvars.iv, i32 9
  %93 = load i32, i32* %exit_status245, align 4, !tbaa !34
  %cmp246 = icmp eq i32 %93, 0
  br i1 %cmp246, label %if.then247, label %for.inc

if.then247:                                       ; preds = %do.end243
  store i32 %result.2510, i32* %exit_status245, align 4, !tbaa !34
  %94 = load i32, i32* %active_workers132, align 8, !tbaa !35
  %cmp253 = icmp eq i32 %94, 0
  br i1 %cmp253, label %land.rhs254, label %land.end260

land.rhs254:                                      ; preds = %if.then247
  %owner_is_sleeping258 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %92, i64 %indvars.iv, i32 11
  %95 = load i8, i8* %owner_is_sleeping258, align 4, !tbaa !37, !range !17
  br label %land.end260

land.end260:                                      ; preds = %land.rhs254, %if.then247
  %96 = phi i8 [ 0, %if.then247 ], [ %95, %land.rhs254 ]
  %97 = and i8 %wake_owners.0541, 1
  %or = or i8 %96, %97
  br label %for.inc

for.inc:                                          ; preds = %land.end260, %do.end243
  %wake_owners.1 = phi i8 [ %or, %land.end260 ], [ %wake_owners.0541, %do.end243 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end271, label %do.end243, !llvm.loop !77

if.end271:                                        ; preds = %for.inc, %if.then238, %if.end230, %if.then194, %if.else190
  %wake_owners.2 = phi i8 [ 0, %if.end230 ], [ 0, %if.else190 ], [ 0, %if.then194 ], [ 0, %if.then238 ], [ %wake_owners.1, %for.inc ]
  %98 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job134, align 8, !tbaa !40
  %cmp273 = icmp eq %"struct.Halide::Runtime::Internal::work"* %98, null
  %min_threads276 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 7
  %99 = load i32, i32* %min_threads276, align 4, !tbaa !30
  br i1 %cmp273, label %if.then274, label %if.else281

if.then274:                                       ; preds = %if.end271
  %100 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !54
  %sub277 = sub nsw i32 %100, %99
  store i32 %sub277, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !54
  br label %if.end290

if.else281:                                       ; preds = %if.end271
  %threads_reserved285 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %98, i64 0, i32 6
  %101 = load i32, i32* %threads_reserved285, align 8, !tbaa !57
  %sub286 = sub nsw i32 %101, %99
  store i32 %sub286, i32* %threads_reserved285, align 8, !tbaa !57
  br label %if.end290

if.end290:                                        ; preds = %if.else281, %if.then274
  %102 = load i32, i32* %active_workers132, align 8, !tbaa !35
  %dec292 = add nsw i32 %102, -1
  store i32 %dec292, i32* %active_workers132, align 8, !tbaa !35
  %103 = and i8 %wake_owners.2, 1
  %tobool296.not = icmp eq i8 %103, 0
  br i1 %tobool296.not, label %lor.lhs.false297, label %if.then310

lor.lhs.false297:                                 ; preds = %if.end290
  %cmp299 = icmp eq i32 %dec292, 0
  br i1 %cmp299, label %land.lhs.true300, label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then310, %land.lhs.true307, %lor.lhs.false304, %lor.lhs.false297, %if.end124, %if.else108, %if.then107, %if.then15, %while.end
  %spin_count.0.be = phi i32 [ %spin_count.0, %while.end ], [ %spin_count.0, %if.then15 ], [ %inc, %if.then107 ], [ %inc, %if.else108 ], [ %spin_count.1, %if.end124 ], [ 0, %if.then310 ], [ 0, %land.lhs.true307 ], [ 0, %lor.lhs.false304 ], [ 0, %lor.lhs.false297 ]
  br label %while.cond, !llvm.loop !78

land.lhs.true300:                                 ; preds = %lor.lhs.false297
  %extent302 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 6
  %104 = load i32, i32* %extent302, align 8, !tbaa !25
  %cmp303 = icmp eq i32 %104, 0
  br i1 %cmp303, label %land.lhs.true307, label %lor.lhs.false304

lor.lhs.false304:                                 ; preds = %land.lhs.true300
  %exit_status305 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 9
  %105 = load i32, i32* %exit_status305, align 4, !tbaa !34
  %cmp306.not = icmp eq i32 %105, 0
  br i1 %cmp306.not, label %while.cond.backedge, label %land.lhs.true307

land.lhs.true307:                                 ; preds = %lor.lhs.false304, %land.lhs.true300
  %owner_is_sleeping308 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 11
  %106 = load i8, i8* %owner_is_sleeping308, align 4, !tbaa !37, !range !17
  %tobool309.not = icmp eq i8 %106, 0
  br i1 %tobool309.not, label %while.cond.backedge, label %if.then310

if.then310:                                       ; preds = %land.lhs.true307, %if.end290
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #19
  br label %while.cond.backedge

while.end316:                                     ; preds = %cond.end, %cond.false
  ret void
}

; Function Attrs: nounwind
define weak void @halide_mutex_unlock(%struct.halide_mutex* %mutex) local_unnamed_addr #4 {
entry:
  %control.i.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", align 8
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %mutex, i64 0, i32 0, i64 0
  %0 = cmpxchg weak i64* %state.i, i64 1, i64 0 release monotonic
  %1 = extractvalue { i64, i1 } %0, 1
  br i1 %1, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %2 = cmpxchg i64* %state.i, i64 1, i64 0 release monotonic
  %3 = extractvalue { i64, i1 } %2, 1
  br i1 %3, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i
  %4 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #18
  %5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !41
  %lock_state2.i.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 1
  store i64* %state.i, i64** %lock_state2.i.i.i, align 8, !tbaa !43
  %6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0
  %7 = ptrtoint %struct.halide_mutex* %mutex to i64
  %call3.i.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control10unpark_oneEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %6, i64 %7) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #18
  br label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit

_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit: ; preds = %if.end.i.i, %if.then.i, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control10unpark_oneEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i64 %addr) local_unnamed_addr #0 align 2 {
entry:
  %call = tail call nonnull align 8 dereferenceable(24) %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* @_ZN6Halide7Runtime8Internal15Synchronization11lock_bucketEy(i64 %addr) #19
  %head = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 1
  %0 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head, align 8, !tbaa !10
  %tail = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 2
  %1 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)***
  %state.i60 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0, i32 0
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0
  br label %while.cond

while.cond:                                       ; preds = %cleanup, %entry
  %data_location.0 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %head, %entry ], [ %data_location.1, %cleanup ]
  %prev.0 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ null, %entry ], [ %prev.1, %cleanup ]
  %data.0 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %0, %entry ], [ %data.1, %cleanup ]
  %retval.0 = phi i64 [ undef, %entry ], [ %retval.1, %cleanup ]
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, null
  br i1 %cmp.not, label %while.end22, label %while.body

while.body:                                       ; preds = %while.cond
  %sleep_address = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 1
  %2 = load atomic i64, i64* %sleep_address monotonic, align 8
  %cmp2 = icmp eq i64 %2, %addr
  %next3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 2
  %3 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next3, align 8, !tbaa !79
  br i1 %cmp2, label %if.then, label %cleanup

if.then:                                          ; preds = %while.body
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %3, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %data_location.0, align 8, !tbaa !10
  %4 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !85
  %cmp4 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %4, %data.0
  br i1 %cmp4, label %if.then5, label %while.cond7.preheader

while.cond7.preheader:                            ; preds = %if.then
  %cmp872.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %3, null
  br i1 %cmp872.not, label %if.end, label %while.body9

if.then5:                                         ; preds = %if.then
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %prev.0, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !85
  br label %if.end

while.body9:                                      ; preds = %while.body9, %while.cond7.preheader
  %data2.073 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %6, %while.body9 ], [ %3, %while.cond7.preheader ]
  %sleep_address10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data2.073, i64 0, i32 1
  %5 = load atomic i64, i64* %sleep_address10 monotonic, align 8
  %cmp11 = icmp eq i64 %5, %addr
  %next12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data2.073, i64 0, i32 2
  %6 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next12, align 8, !tbaa !79
  %cmp8 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %6, null
  %7 = or i1 %cmp11, %cmp8
  br i1 %7, label %if.end.loopexit, label %while.body9, !llvm.loop !88

if.end.loopexit:                                  ; preds = %while.body9
  %frombool = zext i1 %cmp11 to i8
  br label %if.end

if.end:                                           ; preds = %if.end.loopexit, %if.then5, %while.cond7.preheader
  %more_waiters.1 = phi i8 [ 0, %if.then5 ], [ 0, %while.cond7.preheader ], [ %frombool, %if.end.loopexit ]
  %tobool13 = icmp ne i8 %more_waiters.1, 0
  %vtable = load i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)**, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*** %1, align 8, !tbaa !41
  %vfn = getelementptr inbounds i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)** %vtable, i64 2
  %8 = load i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)** %vfn, align 8
  %call14 = tail call i64 %8(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i32 1, i1 zeroext %tobool13) #17
  %unpark_info = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 3
  store i64 %call14, i64* %unpark_info, align 8, !tbaa !89
  %mutex.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 0, i32 0
  %call.i = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex.i) #17
  %9 = atomicrmw and i64* %state.i60, i64 -2 release
  %and.i61 = and i64 %9, 2
  %cmp.i62 = icmp ne i64 %and.i61, 0
  %cmp3.not.i63 = icmp ult i64 %9, 4
  %or.cond.i64 = or i1 %cmp3.not.i63, %cmp.i62
  br i1 %or.cond.i64, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66, label %if.then.i65

if.then.i65:                                      ; preds = %if.end
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #17
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66

_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66: ; preds = %if.then.i65, %if.end
  %should_park.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 0, i32 2
  store i8 0, i8* %should_park.i, align 8, !tbaa !90
  %condvar.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 0, i32 1
  %call.i67 = tail call i32 @pthread_cond_signal(%struct.pthread_mutex_t* nonnull %condvar.i) #17
  %call.i69 = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex.i) #17
  %10 = zext i8 %more_waiters.1 to i64
  br label %cleanup

cleanup:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66, %while.body
  %data_location.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %data_location.0, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66 ], [ %next3, %while.body ]
  %prev.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %prev.0, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66 ], [ %data.0, %while.body ]
  %data.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %data.0, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66 ], [ %3, %while.body ]
  %retval.1 = phi i64 [ %10, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66 ], [ %retval.0, %while.body ]
  br i1 %cmp2, label %cleanup27, label %while.cond, !llvm.loop !91

while.end22:                                      ; preds = %while.cond
  %vtable23 = load i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)**, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*** %1, align 8, !tbaa !41
  %vfn24 = getelementptr inbounds i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)** %vtable23, i64 2
  %11 = load i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)** %vfn24, align 8
  %call25 = tail call i64 %11(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i32 0, i1 zeroext false) #17
  %12 = atomicrmw and i64* %state.i60, i64 -2 release
  %and.i = and i64 %12, 2
  %cmp.i = icmp ne i64 %and.i, 0
  %cmp3.not.i = icmp ult i64 %12, 4
  %or.cond.i = or i1 %cmp3.not.i, %cmp.i
  br i1 %or.cond.i, label %cleanup27, label %if.then.i

if.then.i:                                        ; preds = %while.end22
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #17
  br label %cleanup27

cleanup27:                                        ; preds = %if.then.i, %while.end22, %cleanup
  %retval.2 = phi i64 [ 0, %while.end22 ], [ 0, %if.then.i ], [ %retval.1, %cleanup ]
  ret i64 %retval.2
}

; Function Attrs: nounwind mustprogress
define linkonce nonnull align 8 dereferenceable(24) %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* @_ZN6Halide7Runtime8Internal15Synchronization11lock_bucketEy(i64 %addr) local_unnamed_addr #0 {
entry:
  %mul.i = mul i64 %addr, -7046029254386353131
  %shr.i = lshr i64 %mul.i, 54
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i
  %state.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx, i64 0, i32 0, i32 0
  %0 = cmpxchg weak i64* %state.i, i64 0, i64 1 acquire monotonic
  %1 = extractvalue { i64, i1 } %0, 1
  br i1 %1, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #17
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit

_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit: ; preds = %if.then.i, %entry
  ret %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx
}

declare i32 @pthread_mutex_lock(%struct.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %this) local_unnamed_addr #4 align 2 {
entry:
  %state = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %this, i64 0, i32 0
  %0 = load atomic i64, i64* %state monotonic, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %expected.0 = phi i64 [ %0, %entry ], [ %3, %if.end ]
  %and = and i64 %expected.0, 2
  %tobool.not = icmp ne i64 %and, 0
  %cmp = icmp ult i64 %expected.0, 4
  %or.cond = or i1 %cmp, %tobool.not
  br i1 %or.cond, label %cleanup75, label %if.end

if.end:                                           ; preds = %while.cond
  %or = or i64 %expected.0, 2
  %1 = cmpxchg weak i64* %state, i64 %expected.0, i64 %or acquire monotonic
  %2 = extractvalue { i64, i1 } %1, 1
  %3 = extractvalue { i64, i1 } %1, 0
  br i1 %2, label %while.cond11, label %while.cond

while.cond11:                                     ; preds = %cleanup70, %if.end
  %.pn.pn = phi { i64, i1 } [ %.pn, %cleanup70 ], [ %1, %if.end ]
  %expected.3 = extractvalue { i64, i1 } %.pn.pn, 0
  %and13 = and i64 %expected.3, -4
  %4 = inttoptr i64 %and13 to %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*
  %tail14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %4, i64 0, i32 3
  %tail.0143 = load %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail14, align 8, !tbaa !92
  %cmp16144 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0143, null
  br i1 %cmp16144, label %while.body17, label %while.end23

while.body17:                                     ; preds = %do.end, %while.cond11
  %current.0145 = phi %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* [ %5, %do.end ], [ %4, %while.cond11 ]
  %next18 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %current.0145, i64 0, i32 1
  %5 = load %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %next18, align 8, !tbaa !94
  %cmp19.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %5, null
  br i1 %cmp19.not, label %if.then20, label %do.end

if.then20:                                        ; preds = %while.body17
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([137 x i8], [137 x i8]* @.str.5, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.end

do.end:                                           ; preds = %if.then20, %while.body17
  %prev = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %5, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %current.0145, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %prev, align 8, !tbaa !95
  %tail22 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %5, i64 0, i32 3
  %tail.0 = load %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail22, align 8, !tbaa !92
  %cmp16 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0, null
  br i1 %cmp16, label %while.body17, label %while.end23, !llvm.loop !96

while.end23:                                      ; preds = %do.end, %while.cond11
  %tail.0.lcssa = phi %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* [ %tail.0143, %while.cond11 ], [ %tail.0, %do.end ]
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail14, align 8, !tbaa !92
  %and25 = and i64 %expected.3, 1
  %tobool26.not = icmp eq i64 %and25, 0
  br i1 %tobool26.not, label %if.end35, label %if.then27

if.then27:                                        ; preds = %while.end23
  %and29 = and i64 %expected.3, -3
  %6 = cmpxchg weak i64* %state, i64 %expected.3, i64 %and29 acq_rel monotonic
  %7 = extractvalue { i64, i1 } %6, 1
  br i1 %7, label %cleanup75, label %cleanup70

if.end35:                                         ; preds = %while.end23
  %prev36 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, i64 0, i32 2
  %8 = load %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %prev36, align 8, !tbaa !95
  %cmp37 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %8, null
  br i1 %cmp37, label %while.body41, label %if.else62

while.body41:                                     ; preds = %if.end47, %if.end35
  %expected.5146 = phi i64 [ %11, %if.end47 ], [ %expected.3, %if.end35 ]
  %and43 = and i64 %expected.5146, 1
  %9 = cmpxchg weak i64* %state, i64 %expected.5146, i64 %and43 acq_rel monotonic
  %10 = extractvalue { i64, i1 } %9, 1
  br i1 %10, label %if.end66, label %if.end47

if.end47:                                         ; preds = %while.body41
  %11 = extractvalue { i64, i1 } %9, 0
  %cmp49 = icmp ult i64 %11, 4
  br i1 %cmp49, label %while.body41, label %cleanup70, !llvm.loop !97

if.else62:                                        ; preds = %if.end35
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %8, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail14, align 8, !tbaa !92
  %12 = atomicrmw and i64* %state, i64 -3 release
  br label %if.end66

if.end66:                                         ; preds = %if.else62, %while.body41
  %mutex.i103 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, i64 0, i32 0, i32 0
  %call.i104 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex.i103) #17
  %should_park.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, i64 0, i32 0, i32 2
  store i8 0, i8* %should_park.i, align 8, !tbaa !90
  %condvar.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, i64 0, i32 0, i32 1
  %call.i101 = tail call i32 @pthread_cond_signal(%struct.pthread_mutex_t* nonnull %condvar.i) #17
  %call.i = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex.i103) #17
  br label %cleanup75

cleanup70:                                        ; preds = %if.end47, %if.then27
  %.pn = phi { i64, i1 } [ %6, %if.then27 ], [ %9, %if.end47 ]
  fence acquire
  br label %while.cond11

cleanup75:                                        ; preds = %if.end66, %if.then27, %while.cond
  ret void
}

declare i32 @pthread_cond_signal(%struct.pthread_mutex_t*) local_unnamed_addr #1

declare i32 @pthread_mutex_unlock(%struct.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %this) local_unnamed_addr #4 align 2 {
entry:
  %node = alloca %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", align 8
  %state = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %this, i64 0, i32 0
  %0 = load atomic i64, i64* %state monotonic, align 8
  %1 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node to i8*
  %should_park.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 0, i32 2
  %mutex2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 0, i32 0
  %condvar3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 0, i32 1
  %next.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 1
  %prev.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 2
  %tail.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 3
  %2 = ptrtoint %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node to i64
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %while.cond.outer.backedge, %entry
  %expected.0.ph = phi i64 [ %0, %entry ], [ %expected.0.ph.be, %while.cond.outer.backedge ]
  %spinner.sroa.0.0.ph = phi i32 [ 40, %entry ], [ %spinner.sroa.0.0.ph.be, %while.cond.outer.backedge ]
  %and46 = and i64 %expected.0.ph, 1
  %tobool.not47 = icmp eq i64 %and46, 0
  br i1 %tobool.not47, label %if.then, label %if.end4

if.then:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit, %while.cond.outer
  %expected.048 = phi i64 [ %5, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit ], [ %expected.0.ph, %while.cond.outer ]
  %or = or i64 %expected.048, 1
  %3 = cmpxchg weak i64* %state, i64 %expected.048, i64 %or acquire monotonic
  %4 = extractvalue { i64, i1 } %3, 1
  br i1 %4, label %cleanup23, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit: ; preds = %if.then
  %5 = extractvalue { i64, i1 } %3, 0
  %and = and i64 %5, 1
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.then, label %if.end4.loopexit

if.end4.loopexit:                                 ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit
  %6 = extractvalue { i64, i1 } %3, 0
  br label %if.end4

if.end4:                                          ; preds = %if.end4.loopexit, %while.cond.outer
  %expected.0.lcssa = phi i64 [ %expected.0.ph, %while.cond.outer ], [ %6, %if.end4.loopexit ]
  %cmp.not = icmp ugt i64 %expected.0.lcssa, 3
  %cmp.i = icmp sgt i32 %spinner.sroa.0.0.ph, 0
  %or.cond = and i1 %cmp.not, %cmp.i
  br i1 %or.cond, label %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit, label %if.end9

_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit: ; preds = %if.end4
  %cmp4.i = icmp sgt i32 %spinner.sroa.0.0.ph, 1
  br i1 %cmp4.i, label %if.then7, label %if.end9

if.then7:                                         ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit
  %dec.i = add nsw i32 %spinner.sroa.0.0.ph, -1
  call void @halide_thread_yield() #17
  %7 = load atomic i64, i64* %state monotonic, align 8
  br label %while.cond.outer.backedge

if.end9:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit, %if.end4
  %spinner.sroa.0.2 = phi i32 [ %spinner.sroa.0.0.ph, %if.end4 ], [ 0, %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit ]
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1) #18
  store i8 0, i8* %should_park.i.i, align 8, !tbaa !90
  %call.i.i29 = call i32 @pthread_mutex_init(%struct.pthread_mutex_t* nonnull %mutex2.i.i, i8* null) #17
  %call4.i.i = call i32 @pthread_cond_init(%struct.pthread_mutex_t* nonnull %condvar3.i.i, i8* null) #17
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %next.i, align 8, !tbaa !94
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %prev.i, align 8, !tbaa !95
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail.i, align 8, !tbaa !92
  store i8 1, i8* %should_park.i.i, align 8, !tbaa !90
  %and10 = and i64 %expected.0.lcssa, -4
  %cmp11 = icmp eq i64 %and10, 0
  br i1 %cmp11, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.end9
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail.i, align 8, !tbaa !92
  br label %if.end13

if.else:                                          ; preds = %if.end9
  %8 = inttoptr i64 %and10 to %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %8, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %next.i, align 8, !tbaa !94
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then12
  %and15 = and i64 %expected.0.lcssa, 3
  %or16 = or i64 %and15, %2
  %9 = cmpxchg weak i64* %state, i64 %expected.0.lcssa, i64 %or16 release monotonic
  %10 = extractvalue { i64, i1 } %9, 1
  br i1 %10, label %if.then19, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit: ; preds = %if.end13
  %11 = extractvalue { i64, i1 } %9, 0
  br label %if.end22

if.then19:                                        ; preds = %if.end13
  %call.i = call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #17
  %12 = load i8, i8* %should_park.i.i, align 8, !tbaa !90, !range !17
  %tobool.not6.i = icmp eq i8 %12, 0
  br i1 %tobool.not6.i, label %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %if.then19
  %call3.i = call i32 @pthread_cond_wait(%struct.pthread_mutex_t* nonnull %condvar3.i.i, %struct.pthread_mutex_t* nonnull %mutex2.i.i) #17
  %13 = load i8, i8* %should_park.i.i, align 8, !tbaa !90, !range !17
  %tobool.not.i = icmp eq i8 %13, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, label %while.body.i, !llvm.loop !98

_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit: ; preds = %while.body.i, %if.then19
  %call5.i = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #17
  %14 = load atomic i64, i64* %state monotonic, align 8
  br label %if.end22

if.end22:                                         ; preds = %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit
  %expected.3 = phi i64 [ %14, %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit ], [ %11, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit ]
  %spinner.sroa.0.3 = phi i32 [ 40, %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit ], [ %spinner.sroa.0.2, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit ]
  %call.i.i = call i32 @pthread_cond_destroy(%struct.pthread_mutex_t* nonnull %condvar3.i.i) #17
  %call2.i.i = call i32 @pthread_mutex_destroy(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #17
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1) #18
  br label %while.cond.outer.backedge

while.cond.outer.backedge:                        ; preds = %if.end22, %if.then7
  %expected.0.ph.be = phi i64 [ %7, %if.then7 ], [ %expected.3, %if.end22 ]
  %spinner.sroa.0.0.ph.be = phi i32 [ %dec.i, %if.then7 ], [ %spinner.sroa.0.3, %if.end22 ]
  br label %while.cond.outer

cleanup23:                                        ; preds = %if.then
  ret void
}

declare i32 @pthread_mutex_init(%struct.pthread_mutex_t*, i8*) local_unnamed_addr #1

declare i32 @pthread_cond_init(%struct.pthread_mutex_t*, i8*) local_unnamed_addr #1

declare i32 @pthread_cond_wait(%struct.pthread_mutex_t*, %struct.pthread_mutex_t*) local_unnamed_addr #1

declare i32 @pthread_cond_destroy(%struct.pthread_mutex_t*) local_unnamed_addr #1

declare i32 @pthread_mutex_destroy(%struct.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control8validateERNS2_15validate_actionE(%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* nonnull dereferenceable(16) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) unnamed_addr #2 comdat align 2 {
entry:
  %lock_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %lock_state, align 8, !tbaa !43
  %1 = load atomic i64, i64* %0 monotonic, align 8
  %cmp = icmp eq i64 %1, 3
  ret i1 %cmp
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr void @_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this) unnamed_addr #2 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr i64 @_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control6unparkEib(%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* nonnull dereferenceable(16) %this, i32 %unparked, i1 zeroext %more_waiters) unnamed_addr #2 comdat align 2 {
entry:
  %0 = select i1 %more_waiters, i64 2, i64 0
  %lock_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %this, i64 0, i32 1
  %1 = load i64*, i64** %lock_state, align 8, !tbaa !43
  store atomic i64 %0, i64* %1 release, align 8
  ret i64 0
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr void @_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action, i1 zeroext %one_to_wake, i1 zeroext %some_requeued) unnamed_addr #2 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind
define weak void @halide_cond_broadcast(%struct.halide_mutex* %cond) local_unnamed_addr #4 {
entry:
  %control.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", align 8
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %cond, i64 0, i32 0, i64 0
  %0 = load atomic i64, i64* %state.i monotonic, align 8
  %cmp.i = icmp eq i64 %0, 0
  br i1 %cmp.i, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond9broadcastEv.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #18
  %2 = inttoptr i64 %0 to %"class.Halide::Runtime::Internal::Synchronization::word_lock"*
  %3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization25broadcast_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !41
  %cond_state2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 1
  store i64* %state.i, i64** %cond_state2.i.i, align 8, !tbaa !99
  %mutex3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 2
  store %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex3.i.i, align 8, !tbaa !101
  %4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0
  %5 = ptrtoint %struct.halide_mutex* %cond to i64
  %call.i = call i32 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control14unpark_requeueEyyy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %4, i64 %5, i64 %0, i64 0) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #18
  br label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond9broadcastEv.exit

_ZN6Halide7Runtime8Internal15Synchronization9fast_cond9broadcastEv.exit: ; preds = %if.end.i, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define weak zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %s, i32 %n) #0 {
entry:
  %cmp = icmp eq i32 %n, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %value = bitcast %struct.halide_semaphore_t* %s to i32*
  %0 = load atomic i32, i32* %value acquire, align 4
  %sub12 = sub nsw i32 %0, %n
  %cmp113 = icmp sgt i32 %sub12, -1
  br i1 %cmp113, label %land.rhs, label %return

land.rhs:                                         ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit, %if.end
  %sub15 = phi i32 [ %sub, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit ], [ %sub12, %if.end ]
  %expected.014 = phi i32 [ %3, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit ], [ %0, %if.end ]
  %1 = cmpxchg weak i32* %value, i32 %expected.014, i32 %sub15 acq_rel monotonic
  %2 = extractvalue { i32, i1 } %1, 1
  br i1 %2, label %return.loopexit, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit: ; preds = %land.rhs
  %3 = extractvalue { i32, i1 } %1, 0
  %sub = sub nsw i32 %3, %n
  %cmp1 = icmp sgt i32 %sub, -1
  br i1 %cmp1, label %land.rhs, label %return.loopexit

return.loopexit:                                  ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit, %land.rhs
  %4 = extractvalue { i32, i1 } %1, 1
  br label %return

return:                                           ; preds = %return.loopexit, %if.end, %entry
  %retval.0 = phi i1 [ true, %entry ], [ false, %if.end ], [ %4, %return.loopexit ]
  ret i1 %retval.0
}

; Function Attrs: nounwind
define weak void @halide_cond_wait(%struct.halide_mutex* %cond, %struct.halide_mutex* %mutex) local_unnamed_addr #4 {
entry:
  %control.i.i.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", align 8
  %control.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #18
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %cond, i64 0, i32 0, i64 0
  %1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization20wait_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !41
  %cond_state2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 1
  store i64* %state.i, i64** %cond_state2.i.i, align 8, !tbaa !102
  %mutex3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 2
  %2 = bitcast %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex3.i.i to %struct.halide_mutex**
  store %struct.halide_mutex* %mutex, %struct.halide_mutex** %2, align 8, !tbaa !104
  %3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0
  %4 = ptrtoint %struct.halide_mutex* %cond to i64
  %call.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control4parkEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %3, i64 %4) #17
  %5 = ptrtoint %struct.halide_mutex* %mutex to i64
  %cmp.not.i = icmp eq i64 %call.i, %5
  %6 = getelementptr %struct.halide_mutex, %struct.halide_mutex* %mutex, i64 0, i32 0, i64 0
  br i1 %cmp.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %7 = cmpxchg weak i64* %6, i64 0, i64 1 acquire monotonic
  %8 = extractvalue { i64, i1 } %7, 1
  br i1 %8, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %9 = load atomic i64, i64* %6 monotonic, align 8
  %10 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i.i to i8*
  %11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i.i, i64 0, i32 0, i32 0
  %lock_state2.i.i.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i.i, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i.i, i64 0, i32 0
  br label %while.cond.outer.i.i.i

while.cond.outer.i.i.i:                           ; preds = %while.cond.outer.i.i.i.backedge, %if.then.i.i
  %expected.0.ph.i.i.i = phi i64 [ %9, %if.then.i.i ], [ %expected.0.ph.i.i.i.be, %while.cond.outer.i.i.i.backedge ]
  %spinner.sroa.0.0.ph.i.i.i = phi i32 [ 40, %if.then.i.i ], [ %spinner.sroa.0.0.ph.i.i.i.be, %while.cond.outer.i.i.i.backedge ]
  %and55.i.i.i = and i64 %expected.0.ph.i.i.i, 1
  %tobool.not56.i.i.i = icmp eq i64 %and55.i.i.i, 0
  br i1 %tobool.not56.i.i.i, label %if.then.i.i.i, label %if.end4.i.i.i

if.then.i.i.i:                                    ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i, %while.cond.outer.i.i.i
  %expected.057.i.i.i = phi i64 [ %15, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i ], [ %expected.0.ph.i.i.i, %while.cond.outer.i.i.i ]
  %or.i.i.i = or i64 %expected.057.i.i.i, 1
  %13 = cmpxchg weak i64* %6, i64 %expected.057.i.i.i, i64 %or.i.i.i acquire monotonic
  %14 = extractvalue { i64, i1 } %13, 1
  br i1 %14, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i: ; preds = %if.then.i.i.i
  %15 = extractvalue { i64, i1 } %13, 0
  %and.i.i.i = and i64 %15, 1
  %tobool.not.i.i.i = icmp eq i64 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end4.i.i.i.loopexit

if.end4.i.i.i.loopexit:                           ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i
  %16 = extractvalue { i64, i1 } %13, 0
  br label %if.end4.i.i.i

if.end4.i.i.i:                                    ; preds = %if.end4.i.i.i.loopexit, %while.cond.outer.i.i.i
  %expected.0.lcssa.i.i.i = phi i64 [ %expected.0.ph.i.i.i, %while.cond.outer.i.i.i ], [ %16, %if.end4.i.i.i.loopexit ]
  %cmp.i.i.i.i = icmp sgt i32 %spinner.sroa.0.0.ph.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i, label %if.end8.i.i.i

_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i: ; preds = %if.end4.i.i.i
  %cmp4.i.not.i.i.i = icmp eq i32 %spinner.sroa.0.0.ph.i.i.i, 1
  br i1 %cmp4.i.not.i.i.i, label %if.end8.i.i.i, label %if.then6.i.i.i

if.then6.i.i.i:                                   ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i
  %dec.i.i.i.i = add nsw i32 %spinner.sroa.0.0.ph.i.i.i, -1
  call void @halide_thread_yield() #17
  %17 = load atomic i64, i64* %6 monotonic, align 8
  br label %while.cond.outer.i.i.i.backedge

if.end8.i.i.i:                                    ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i, %if.end4.i.i.i
  %spinner.sroa.0.152.i.i.i = phi i32 [ 0, %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i ], [ %spinner.sroa.0.0.ph.i.i.i, %if.end4.i.i.i ]
  %and9.i.i.i = and i64 %expected.0.lcssa.i.i.i, 2
  %cmp.i.i.i = icmp eq i64 %and9.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then10.i.i.i, label %if.end19.i.i.i

if.then10.i.i.i:                                  ; preds = %if.end8.i.i.i
  %or12.i.i.i = or i64 %expected.0.lcssa.i.i.i, 2
  %18 = cmpxchg weak i64* %6, i64 %expected.0.lcssa.i.i.i, i64 %or12.i.i.i monotonic monotonic
  %19 = extractvalue { i64, i1 } %18, 1
  br i1 %19, label %if.end19.i.i.i, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i: ; preds = %if.then10.i.i.i
  %20 = extractvalue { i64, i1 } %18, 0
  br label %while.cond.outer.i.i.i.backedge

if.end19.i.i.i:                                   ; preds = %if.then10.i.i.i, %if.end8.i.i.i
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !41
  store i64* %6, i64** %lock_state2.i.i.i.i, align 8, !tbaa !43
  %call21.i.i.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control4parkEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %12, i64 %5) #17
  %cmp22.i.i.i = icmp eq i64 %call21.i.i.i, %5
  br i1 %cmp22.i.i.i, label %cleanup30.critedge.i.i.i, label %if.end24.i.i.i

if.end24.i.i.i:                                   ; preds = %if.end19.i.i.i
  %21 = load atomic i64, i64* %6 monotonic, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #18
  br label %while.cond.outer.i.i.i.backedge

while.cond.outer.i.i.i.backedge:                  ; preds = %if.end24.i.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i, %if.then6.i.i.i
  %expected.0.ph.i.i.i.be = phi i64 [ %20, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i ], [ %21, %if.end24.i.i.i ], [ %17, %if.then6.i.i.i ]
  %spinner.sroa.0.0.ph.i.i.i.be = phi i32 [ %spinner.sroa.0.152.i.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i ], [ 40, %if.end24.i.i.i ], [ %dec.i.i.i.i, %if.then6.i.i.i ]
  br label %while.cond.outer.i.i.i

cleanup30.critedge.i.i.i:                         ; preds = %if.end19.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #18
  br label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit

if.else.i:                                        ; preds = %entry
  %22 = load atomic i64, i64* %6 monotonic, align 8
  %and.i = and i64 %22, 1
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %if.then2.i, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit

if.then2.i:                                       ; preds = %if.else.i
  call void @halide_print(i8* null, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.5.6, i64 0, i64 0)) #17
  call void @abort() #17
  br label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit

_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit: ; preds = %if.then2.i, %if.else.i, %cleanup30.critedge.i.i.i, %if.then.i.i.i, %if.then.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #18
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_loop_task(i8* %user_context, i32 (i8*, i32, i32, i8*, i8*)* %f, i32 %min, i32 %size, i8* %closure, i8* %task_parent) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)*, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 8, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i32, i8*, i8*)* %f, i32 %min, i32 %size, i8* %closure, i8* %task_parent) #17
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_task(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 8, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) #17
  ret i32 %call
}

; Function Attrs: nounwind
define linkonce i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control4parkEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i64 %addr) local_unnamed_addr #4 align 2 {
entry:
  %queue_data = alloca %"struct.Halide::Runtime::Internal::Synchronization::queue_data", align 8
  %action = alloca %"struct.Halide::Runtime::Internal::Synchronization::validate_action", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %0) #18
  %should_park.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 0, i32 2
  store i8 0, i8* %should_park.i.i, align 8, !tbaa !90
  %mutex2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 0, i32 0
  %call.i.i = call i32 @pthread_mutex_init(%struct.pthread_mutex_t* nonnull %mutex2.i.i, i8* null) #17
  %condvar3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 0, i32 1
  %call4.i.i = call i32 @pthread_cond_init(%struct.pthread_mutex_t* nonnull %condvar3.i.i, i8* null) #17
  %sleep_address.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 1
  store i64 0, i64* %sleep_address.i, align 8, !tbaa !105
  %next.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next.i, align 8, !tbaa !79
  %unpark_info.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 3
  store i64 0, i64* %unpark_info.i, align 8, !tbaa !89
  %call = call nonnull align 8 dereferenceable(24) %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* @_ZN6Halide7Runtime8Internal15Synchronization11lock_bucketEy(i64 %addr) #19
  %1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #18
  store i8 0, i8* %1, align 8, !tbaa !106
  %invalid_unpark_info.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 2
  store i64 0, i64* %invalid_unpark_info.i, align 8, !tbaa !108
  %2 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)***
  %vtable = load i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)**, i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)*** %2, align 8, !tbaa !41
  %3 = load i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)*, i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)** %vtable, align 8
  %call2 = call zeroext i1 %3(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) #17
  br i1 %call2, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %state.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0, i32 0
  %4 = atomicrmw and i64* %state.i, i64 -2 release
  %and.i = and i64 %4, 2
  %cmp.i = icmp ne i64 %and.i, 0
  %cmp3.not.i = icmp ult i64 %4, 4
  %or.cond.i = or i1 %cmp3.not.i, %cmp.i
  br i1 %or.cond.i, label %cleanup, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0
  call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #17
  br label %cleanup

if.end:                                           ; preds = %entry
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next.i, align 8, !tbaa !79
  store i64 %addr, i64* %sleep_address.i, align 8, !tbaa !105
  store i8 1, i8* %should_park.i.i, align 8, !tbaa !90
  %head = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 1
  %5 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head, align 8, !tbaa !109
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %5, null
  %tail = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 2
  %6 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8
  %next4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %6, i64 0, i32 2
  %head.sink = select i1 %cmp.not, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next4
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head.sink, align 8, !tbaa !10
  %tail7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail7, align 8, !tbaa !85
  %state.i23 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0, i32 0
  %7 = atomicrmw and i64* %state.i23, i64 -2 release
  %and.i24 = and i64 %7, 2
  %cmp.i25 = icmp ne i64 %and.i24, 0
  %cmp3.not.i26 = icmp ult i64 %7, 4
  %or.cond.i27 = or i1 %cmp3.not.i26, %cmp.i25
  br i1 %or.cond.i27, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29, label %if.then.i28

if.then.i28:                                      ; preds = %if.end
  %mutex8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0
  call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex8) #17
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29

_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29: ; preds = %if.then.i28, %if.end
  %8 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)***
  %vtable9 = load void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)**, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)*** %8, align 8, !tbaa !41
  %vfn10 = getelementptr inbounds void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)*, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)** %vtable9, i64 1
  %9 = load void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)*, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)** %vfn10, align 8
  call void %9(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this) #17
  %call.i = call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #17
  %10 = load i8, i8* %should_park.i.i, align 8, !tbaa !90, !range !17
  %tobool.not6.i = icmp eq i8 %10, 0
  br i1 %tobool.not6.i, label %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29
  %call3.i = call i32 @pthread_cond_wait(%struct.pthread_mutex_t* nonnull %condvar3.i.i, %struct.pthread_mutex_t* nonnull %mutex2.i.i) #17
  %11 = load i8, i8* %should_park.i.i, align 8, !tbaa !90, !range !17
  %tobool.not.i = icmp eq i8 %11, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, label %while.body.i, !llvm.loop !98

_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit: ; preds = %while.body.i, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29
  %call5.i = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #17
  br label %cleanup

cleanup:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, %if.then.i, %if.then
  %unpark_info.i.sink = phi i64* [ %unpark_info.i, %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit ], [ %invalid_unpark_info.i, %if.then ], [ %invalid_unpark_info.i, %if.then.i ]
  %12 = load i64, i64* %unpark_info.i.sink, align 8, !tbaa !110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #18
  %call.i.i22 = call i32 @pthread_cond_destroy(%struct.pthread_mutex_t* nonnull %condvar3.i.i) #17
  %call2.i.i = call i32 @pthread_mutex_destroy(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #17
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %0) #18
  ret i64 %12
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control8validateERNS2_15validate_actionE(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) unnamed_addr #2 comdat align 2 {
entry:
  %cond_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %cond_state, align 8, !tbaa !102
  %1 = load atomic i64, i64* %0 monotonic, align 8
  %cmp = icmp eq i64 %1, 0
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 2
  %2 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !104
  %3 = ptrtoint %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2 to i64
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store atomic i64 %3, i64* %0 monotonic, align 8
  br label %cleanup

if.else:                                          ; preds = %entry
  %cmp4.not = icmp eq i64 %1, %3
  br i1 %cmp4.not, label %cleanup, label %if.then5

if.then5:                                         ; preds = %if.else
  %invalid_unpark_info = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 2
  store i64 %3, i64* %invalid_unpark_info, align 8, !tbaa !108
  br label %cleanup

cleanup:                                          ; preds = %if.then5, %if.else, %if.then
  %retval.0 = phi i1 [ false, %if.then5 ], [ true, %if.else ], [ true, %if.then ]
  ret i1 %retval.0
}

; Function Attrs: nounwind
define linkonce_odr void @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control12before_sleepEv(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this) unnamed_addr #4 comdat align 2 {
entry:
  %control.i.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", align 8
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 2
  %0 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !104
  %state.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %0, i64 0, i32 0
  %1 = cmpxchg weak i64* %state.i, i64 1, i64 0 release monotonic
  %2 = extractvalue { i64, i1 } %1, 1
  br i1 %2, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %3 = cmpxchg i64* %state.i, i64 1, i64 0 release monotonic
  %4 = extractvalue { i64, i1 } %3, 1
  br i1 %4, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i
  %5 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !41
  %lock_state2.i.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 1
  store i64* %state.i, i64** %lock_state2.i.i.i, align 8, !tbaa !43
  %7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0
  %8 = ptrtoint %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %0 to i64
  %call3.i.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control10unpark_oneEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %7, i64 %8) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #18
  br label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit

_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit: ; preds = %if.end.i.i, %if.then.i, %entry
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr i64 @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control6unparkEib(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, i32 %unparked, i1 zeroext %more_waiters) unnamed_addr #2 comdat align 2 {
entry:
  br i1 %more_waiters, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %cond_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %cond_state, align 8, !tbaa !102
  store atomic i64 0, i64* %0 monotonic, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i64 0
}

; Function Attrs: nounwind
define linkonce i32 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control14unpark_requeueEyyy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i64 %addr_from, i64 %addr_to, i64 %unpark_info) local_unnamed_addr #4 align 2 {
entry:
  %buckets = alloca %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", align 8
  %action = alloca %"struct.Halide::Runtime::Internal::Synchronization::validate_action", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #18
  call void @_ZN6Halide7Runtime8Internal15Synchronization16lock_bucket_pairEyy(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull sret(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair") align 8 %buckets, i64 %addr_from, i64 %addr_to) #19
  %1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #18
  store i8 0, i8* %1, align 8, !tbaa !106
  %invalid_unpark_info.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 2
  store i64 0, i64* %invalid_unpark_info.i, align 8, !tbaa !108
  %2 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)***
  %vtable = load i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)**, i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)*** %2, align 8, !tbaa !41
  %3 = load i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)*, i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)** %vtable, align 8
  %call = call zeroext i1 %3(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) #17
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @_ZN6Halide7Runtime8Internal15Synchronization18unlock_bucket_pairERNS2_11bucket_pairE(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull align 8 dereferenceable(16) %buckets) #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %from = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets, i64 0, i32 0
  %4 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from, align 8, !tbaa !111
  %head = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %4, i64 0, i32 1
  %5 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head, align 8, !tbaa !10
  %cmp.not92 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %5, null
  br i1 %cmp.not92, label %if.end38, label %while.body

while.body:                                       ; preds = %if.end22, %if.end
  %wakeup.098 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %wakeup.2, %if.end22 ], [ null, %if.end ]
  %requeue_tail.097 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue_tail.2, %if.end22 ], [ null, %if.end ]
  %requeue.096 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue.3, %if.end22 ], [ null, %if.end ]
  %data.095 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %7, %if.end22 ], [ %5, %if.end ]
  %prev.094 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %prev.1, %if.end22 ], [ null, %if.end ]
  %data_location.093 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %data_location.1, %if.end22 ], [ %head, %if.end ]
  %sleep_address = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.095, i64 0, i32 1
  %6 = load atomic i64, i64* %sleep_address monotonic, align 8
  %next2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.095, i64 0, i32 2
  %7 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next2, align 8, !tbaa !79
  %cmp3 = icmp eq i64 %6, %addr_from
  br i1 %cmp3, label %if.then4, label %if.end22

if.then4:                                         ; preds = %while.body
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %7, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %data_location.093, align 8, !tbaa !10
  %8 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from, align 8, !tbaa !111
  %tail = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %8, i64 0, i32 2
  %9 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !85
  %cmp6 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %9, %data.095
  br i1 %cmp6, label %if.then7, label %if.end10

if.then7:                                         ; preds = %if.then4
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %prev.094, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !85
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %if.then4
  %10 = load i8, i8* %1, align 8, !tbaa !106, !range !17
  %tobool = icmp ne i8 %10, 0
  %cmp11 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.098, null
  %or.cond = and i1 %cmp11, %tobool
  br i1 %or.cond, label %if.end22, label %if.else

if.else:                                          ; preds = %if.end10
  %cmp13 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue.096, null
  br i1 %cmp13, label %if.end17, label %if.else15

if.else15:                                        ; preds = %if.else
  %next16 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue_tail.097, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.095, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next16, align 8, !tbaa !79
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.else
  %requeue.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue.096, %if.else15 ], [ %data.095, %if.else ]
  store atomic i64 %addr_to, i64* %sleep_address monotonic, align 8
  br label %if.end22

if.end22:                                         ; preds = %if.end17, %if.end10, %while.body
  %data_location.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %data_location.093, %if.end10 ], [ %data_location.093, %if.end17 ], [ %next2, %while.body ]
  %prev.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %prev.094, %if.end10 ], [ %prev.094, %if.end17 ], [ %data.095, %while.body ]
  %requeue.3 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue.096, %if.end10 ], [ %requeue.1, %if.end17 ], [ %requeue.096, %while.body ]
  %requeue_tail.2 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue_tail.097, %if.end10 ], [ %data.095, %if.end17 ], [ %requeue_tail.097, %while.body ]
  %wakeup.2 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %data.095, %if.end10 ], [ %wakeup.098, %if.end17 ], [ %wakeup.098, %while.body ]
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %7, null
  br i1 %cmp.not, label %while.end, label %while.body, !llvm.loop !113

while.end:                                        ; preds = %if.end22
  %cmp23.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue.3, null
  br i1 %cmp23.not, label %if.end38, label %if.then24

if.then24:                                        ; preds = %while.end
  %next25 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue_tail.2, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next25, align 8, !tbaa !79
  %to = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets, i64 0, i32 1
  %11 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %to, align 8, !tbaa !114
  %head26 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %11, i64 0, i32 1
  %12 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head26, align 8, !tbaa !109
  %cmp27 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %12, null
  br i1 %cmp27, label %if.end35, label %if.else31

if.else31:                                        ; preds = %if.then24
  %tail33 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %11, i64 0, i32 2
  %13 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail33, align 8, !tbaa !85
  %next34 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %13, i64 0, i32 2
  br label %if.end35

if.end35:                                         ; preds = %if.else31, %if.then24
  %next34.sink = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %next34, %if.else31 ], [ %head26, %if.then24 ]
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue.3, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next34.sink, align 8, !tbaa !10
  %tail37 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %11, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue_tail.2, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail37, align 8, !tbaa !85
  br label %if.end38

if.end38:                                         ; preds = %if.end35, %while.end, %if.end
  %cmp23106 = phi i1 [ true, %if.end35 ], [ false, %while.end ], [ false, %if.end ]
  %wakeup.0.lcssa105 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %wakeup.2, %if.end35 ], [ %wakeup.2, %while.end ], [ null, %if.end ]
  %cmp39 = icmp ne %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, null
  %14 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)***
  %vtable41 = load void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)**, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)*** %14, align 8, !tbaa !41
  %vfn42 = getelementptr inbounds void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)*, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)** %vtable41, i64 3
  %15 = load void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)*, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)** %vfn42, align 8
  call void %15(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action, i1 zeroext %cmp39, i1 zeroext %cmp23106) #17
  br i1 %cmp39, label %if.then44, label %if.else48

if.then44:                                        ; preds = %if.end38
  %unpark_info45 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, i64 0, i32 3
  store i64 %unpark_info, i64* %unpark_info45, align 8, !tbaa !89
  %mutex.i89 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, i64 0, i32 0, i32 0
  %call.i90 = call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex.i89) #17
  call void @_ZN6Halide7Runtime8Internal15Synchronization18unlock_bucket_pairERNS2_11bucket_pairE(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull align 8 dereferenceable(16) %buckets) #19
  %should_park.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, i64 0, i32 0, i32 2
  store i8 0, i8* %should_park.i, align 8, !tbaa !90
  %condvar.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, i64 0, i32 0, i32 1
  %call.i88 = call i32 @pthread_cond_signal(%struct.pthread_mutex_t* nonnull %condvar.i) #17
  %call.i = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex.i89) #17
  br label %if.end49

if.else48:                                        ; preds = %if.end38
  call void @_ZN6Halide7Runtime8Internal15Synchronization18unlock_bucket_pairERNS2_11bucket_pairE(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull align 8 dereferenceable(16) %buckets) #19
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then44
  %16 = load i8, i8* %1, align 8
  %17 = and i8 %16, 1
  %tobool52 = icmp ne i8 %17, 0
  %18 = and i1 %cmp39, %tobool52
  %conv = zext i1 %18 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end49, %if.then
  %retval.0 = phi i32 [ %conv, %if.end49 ], [ 0, %if.then ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #18
  ret i32 %retval.0
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal15Synchronization16lock_bucket_pairEyy(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* noalias sret(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair") align 8 %agg.result, i64 %addr_from, i64 %addr_to) local_unnamed_addr #4 {
entry:
  %mul.i = mul i64 %addr_from, -7046029254386353131
  %shr.i = lshr i64 %mul.i, 54
  %mul.i37 = mul i64 %addr_to, -7046029254386353131
  %shr.i38 = lshr i64 %mul.i37, 54
  %cmp = icmp eq i64 %shr.i, %shr.i38
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i
  %state.i42 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx, i64 0, i32 0, i32 0
  %0 = cmpxchg weak i64* %state.i42, i64 0, i64 1 acquire monotonic
  %1 = extractvalue { i64, i1 } %0, 1
  br i1 %1, label %cleanup, label %if.then.i43

if.then.i43:                                      ; preds = %if.then
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #17
  br label %cleanup

if.else:                                          ; preds = %entry
  %cmp2 = icmp ult i64 %shr.i, %shr.i38
  br i1 %cmp2, label %if.then3, label %if.else9

if.then3:                                         ; preds = %if.else
  %arrayidx5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i
  %arrayidx6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i38
  %state.i52 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx5, i64 0, i32 0, i32 0
  %2 = cmpxchg weak i64* %state.i52, i64 0, i64 1 acquire monotonic
  %3 = extractvalue { i64, i1 } %2, 1
  br i1 %3, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54, label %if.then.i53

if.then.i53:                                      ; preds = %if.then3
  %mutex7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx5, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex7) #17
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54

_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54: ; preds = %if.then.i53, %if.then3
  %state.i49 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx6, i64 0, i32 0, i32 0
  %4 = cmpxchg weak i64* %state.i49, i64 0, i64 1 acquire monotonic
  %5 = extractvalue { i64, i1 } %4, 1
  br i1 %5, label %cleanup, label %if.then.i50

if.then.i50:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54
  %mutex8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx6, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex8) #17
  br label %cleanup

if.else9:                                         ; preds = %if.else
  %arrayidx11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i38
  %arrayidx13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i
  %state.i39 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx11, i64 0, i32 0, i32 0
  %6 = cmpxchg weak i64* %state.i39, i64 0, i64 1 acquire monotonic
  %7 = extractvalue { i64, i1 } %6, 1
  br i1 %7, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41, label %if.then.i40

if.then.i40:                                      ; preds = %if.else9
  %mutex14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx11, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex14) #17
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41

_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41: ; preds = %if.then.i40, %if.else9
  %state.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx13, i64 0, i32 0, i32 0
  %8 = cmpxchg weak i64* %state.i, i64 0, i64 1 acquire monotonic
  %9 = extractvalue { i64, i1 } %8, 1
  br i1 %9, label %cleanup, label %if.then.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41
  %mutex15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx13, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex15) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41, %if.then.i50, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54, %if.then.i43, %if.then
  %arrayidx13.sink = phi %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* [ %arrayidx, %if.then ], [ %arrayidx, %if.then.i43 ], [ %arrayidx5, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54 ], [ %arrayidx5, %if.then.i50 ], [ %arrayidx13, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41 ], [ %arrayidx13, %if.then.i ]
  %arrayidx11.sink = phi %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* [ %arrayidx, %if.then ], [ %arrayidx, %if.then.i43 ], [ %arrayidx6, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54 ], [ %arrayidx6, %if.then.i50 ], [ %arrayidx11, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41 ], [ %arrayidx11, %if.then.i ]
  %from2.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %agg.result, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx13.sink, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from2.i, align 8, !tbaa !10
  %to3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %agg.result, i64 0, i32 1
  store %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx11.sink, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %to3.i, align 8, !tbaa !10
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal15Synchronization18unlock_bucket_pairERNS2_11bucket_pairE(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull align 8 dereferenceable(16) %buckets) local_unnamed_addr #0 {
entry:
  %from = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets, i64 0, i32 0
  %0 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from, align 8, !tbaa !111
  %to = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets, i64 0, i32 1
  %1 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %to, align 8, !tbaa !114
  %cmp = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, %1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %state.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, i64 0, i32 0, i32 0
  %2 = atomicrmw and i64* %state.i, i64 -2 release
  %and.i = and i64 %2, 2
  %cmp.i = icmp ne i64 %and.i, 0
  %cmp3.not.i = icmp ult i64 %2, 4
  %or.cond.i = or i1 %cmp3.not.i, %cmp.i
  br i1 %or.cond.i, label %if.end15, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #17
  br label %if.end15

if.else:                                          ; preds = %entry
  %cmp4 = icmp ugt %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, %1
  br i1 %cmp4, label %if.then5, label %if.else10

if.then5:                                         ; preds = %if.else
  %state.i25 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, i64 0, i32 0, i32 0
  %3 = atomicrmw and i64* %state.i25, i64 -2 release
  %and.i26 = and i64 %3, 2
  %cmp.i27 = icmp ne i64 %and.i26, 0
  %cmp3.not.i28 = icmp ult i64 %3, 4
  %or.cond.i29 = or i1 %cmp3.not.i28, %cmp.i27
  br i1 %or.cond.i29, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31, label %if.then.i30

if.then.i30:                                      ; preds = %if.then5
  %mutex7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex7) #17
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31

_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31: ; preds = %if.then.i30, %if.then5
  %4 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %to, align 8, !tbaa !114
  %state.i32 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %4, i64 0, i32 0, i32 0
  %5 = atomicrmw and i64* %state.i32, i64 -2 release
  %and.i33 = and i64 %5, 2
  %cmp.i34 = icmp ne i64 %and.i33, 0
  %cmp3.not.i35 = icmp ult i64 %5, 4
  %or.cond.i36 = or i1 %cmp3.not.i35, %cmp.i34
  br i1 %or.cond.i36, label %if.end15, label %if.then.i37

if.then.i37:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31
  %mutex9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %4, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex9) #17
  br label %if.end15

if.else10:                                        ; preds = %if.else
  %state.i39 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %1, i64 0, i32 0, i32 0
  %6 = atomicrmw and i64* %state.i39, i64 -2 release
  %and.i40 = and i64 %6, 2
  %cmp.i41 = icmp ne i64 %and.i40, 0
  %cmp3.not.i42 = icmp ult i64 %6, 4
  %or.cond.i43 = or i1 %cmp3.not.i42, %cmp.i41
  br i1 %or.cond.i43, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45, label %if.then.i44

if.then.i44:                                      ; preds = %if.else10
  %mutex12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %1, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex12) #17
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45

_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45: ; preds = %if.then.i44, %if.else10
  %7 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from, align 8, !tbaa !111
  %state.i46 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %7, i64 0, i32 0, i32 0
  %8 = atomicrmw and i64* %state.i46, i64 -2 release
  %and.i47 = and i64 %8, 2
  %cmp.i48 = icmp ne i64 %and.i47, 0
  %cmp3.not.i49 = icmp ult i64 %8, 4
  %or.cond.i50 = or i1 %cmp3.not.i49, %cmp.i48
  br i1 %or.cond.i50, label %if.end15, label %if.then.i51

if.then.i51:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45
  %mutex14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %7, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex14) #17
  br label %if.end15

if.end15:                                         ; preds = %if.then.i51, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45, %if.then.i37, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31, %if.then.i, %if.then
  ret void
}

; Function Attrs: nounwind
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control8validateERNS2_15validate_actionE(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) unnamed_addr #4 comdat align 2 {
entry:
  %cond_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %cond_state, align 8, !tbaa !99
  %1 = load atomic i64, i64* %0 monotonic, align 8
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 2
  %2 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !101
  %3 = ptrtoint %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2 to i64
  %cmp.not = icmp eq i64 %1, %3
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  store atomic i64 0, i64* %0 monotonic, align 8
  %4 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !101
  %state.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %4, i64 0, i32 0
  %5 = load atomic i64, i64* %state.i monotonic, align 8
  %and11.i = and i64 %5, 1
  %tobool.not12.i = icmp eq i64 %and11.i, 0
  br i1 %tobool.not12.i, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit, label %if.end.i

if.end.i:                                         ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i, %if.end
  %val.013.i = phi i64 [ %8, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i ], [ %5, %if.end ]
  %or.i = or i64 %val.013.i, 2
  %6 = cmpxchg weak i64* %state.i, i64 %val.013.i, i64 %or.i monotonic monotonic
  %7 = extractvalue { i64, i1 } %6, 1
  br i1 %7, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i: ; preds = %if.end.i
  %8 = extractvalue { i64, i1 } %6, 0
  %and.i = and i64 %8, 1
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit, label %if.end.i

_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit: ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i, %if.end.i, %if.end
  %tobool.not.lcssa.i = phi i8 [ 1, %if.end ], [ 0, %if.end.i ], [ 1, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i ]
  %unpark_one = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 0
  store i8 %tobool.not.lcssa.i, i8* %unpark_one, align 8, !tbaa !106
  br label %cleanup

cleanup:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit, %entry
  ret i1 %cmp.not
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control6unparkEib(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i32 %unparked, i1 zeroext %more_waiters) unnamed_addr #2 comdat align 2 {
entry:
  ret i64 0
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr void @_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control16requeue_callbackERKNS2_15validate_actionEbb(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action, i1 zeroext %one_to_wake, i1 zeroext %some_requeued) unnamed_addr #2 comdat align 2 {
entry:
  %unpark_one = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 0
  %0 = load i8, i8* %unpark_one, align 8, !tbaa !106, !range !17
  %tobool.not = icmp ne i8 %0, 0
  %1 = and i1 %tobool.not, %some_requeued
  br i1 %1, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 2
  %2 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !101
  %state.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2, i64 0, i32 0
  %3 = atomicrmw or i64* %state.i, i64 2 monotonic
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @_ZN6Halide7Runtime8Internal27default_desired_num_threadsEv() local_unnamed_addr #0 {
entry:
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #17
  %tobool.not = icmp eq i8* %call, null
  br i1 %tobool.not, label %if.end, label %cond.true

if.end:                                           ; preds = %entry
  %call1 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #17
  %tobool2.not = icmp eq i8* %call1, null
  br i1 %tobool2.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end, %entry
  %threads_str.010 = phi i8* [ %call1, %if.end ], [ %call, %entry ]
  %call3 = tail call i32 @atoi(i8* nonnull %threads_str.010) #17
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call4 = tail call i32 @halide_host_cpu_count() #17
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call3, %cond.true ], [ %call4, %cond.false ]
  ret i32 %cond
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal13worker_threadEPv(i8* %arg) #0 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  %0 = bitcast i8* %arg to %"struct.Halide::Runtime::Internal::work"*
  tail call void @_ZN6Halide7Runtime8Internal28worker_thread_already_lockedEPNS1_4workE(%"struct.Halide::Runtime::Internal::work"* %0) #19
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  ret void
}

; Function Attrs: nounwind mustprogress
define weak %struct.halide_thread* @halide_spawn_thread(void (i8*)* %f, i8* %closure) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @malloc(i64 24) #17
  %f1 = bitcast i8* %call to void (i8*)**
  store void (i8*)* %f, void (i8*)** %f1, align 8, !tbaa !115
  %closure2 = getelementptr inbounds i8, i8* %call, i64 8
  %0 = bitcast i8* %closure2 to i8**
  store i8* %closure, i8** %0, align 8, !tbaa !117
  %handle = getelementptr inbounds i8, i8* %call, i64 16
  %1 = bitcast i8* %handle to i64*
  store i64 0, i64* %1, align 8, !tbaa !118
  %call4 = tail call i32 @pthread_create(i64* nonnull %1, i8* null, i8* (i8*)* nonnull @_ZN6Halide7Runtime8Internal19spawn_thread_helperEPv, i8* %call) #17
  %2 = bitcast i8* %call to %struct.halide_thread*
  ret %struct.halide_thread* %2
}

; Function Attrs: nounwind mustprogress
define linkonce i8* @_ZN6Halide7Runtime8Internal19spawn_thread_helperEPv(i8* %arg) #0 {
entry:
  %f = bitcast i8* %arg to void (i8*)**
  %0 = load void (i8*)*, void (i8*)** %f, align 8, !tbaa !115
  %closure = getelementptr inbounds i8, i8* %arg, i64 8
  %1 = bitcast i8* %closure to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !117
  tail call void %0(i8* %2) #17
  ret i8* null
}

declare i32 @pthread_create(i64*, i8*, i8* (i8*)*, i8*) local_unnamed_addr #1

declare i8* @getenv(i8*) local_unnamed_addr #1

declare i32 @atoi(i8*) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_parallel_tasks(i8* %user_context, i32 %num_tasks, %struct.halide_parallel_task_t* %tasks, i8* %task_parent) #0 {
entry:
  %conv = sext i32 %num_tasks to i64
  %0 = alloca %"struct.Halide::Runtime::Internal::work", i64 %conv, align 8
  %cmp76 = icmp sgt i32 %num_tasks, 0
  br i1 %cmp76, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.inc, %entry
  %num_tasks.addr.0.lcssa = phi i32 [ %num_tasks, %entry ], [ %num_tasks.addr.1, %for.inc ]
  %cmp17 = icmp eq i32 %num_tasks.addr.0.lcssa, 0
  br i1 %cmp17, label %cleanup, label %if.end19

for.body:                                         ; preds = %for.inc, %entry
  %indvars.iv82 = phi i64 [ %indvars.iv.next83, %for.inc ], [ 0, %entry ]
  %num_tasks.addr.078 = phi i32 [ %num_tasks.addr.1, %for.inc ], [ %num_tasks, %entry ]
  %tasks.addr.077 = phi %struct.halide_parallel_task_t* [ %tasks.addr.1, %for.inc ], [ %tasks, %entry ]
  %extent = getelementptr inbounds %struct.halide_parallel_task_t, %struct.halide_parallel_task_t* %tasks.addr.077, i64 0, i32 6
  %1 = load i32, i32* %extent, align 8, !tbaa !119
  %cmp1 = icmp slt i32 %1, 1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %dec = add nsw i32 %num_tasks.addr.078, -1
  br label %for.inc

if.end:                                           ; preds = %for.body
  %incdec.ptr = getelementptr inbounds %struct.halide_parallel_task_t, %struct.halide_parallel_task_t* %tasks.addr.077, i64 1
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82
  %2 = bitcast %"struct.Halide::Runtime::Internal::work"* %arrayidx to i8*
  %3 = bitcast %struct.halide_parallel_task_t* %tasks.addr.077 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %2, i8* nonnull align 8 dereferenceable(56) %3, i64 56, i1 false), !tbaa.struct !120
  %task_fn = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 1
  store i32 (i8*, i32, i8*)* null, i32 (i8*, i32, i8*)** %task_fn, align 8, !tbaa !32
  %user_context6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 7
  store i8* %user_context, i8** %user_context6, align 8, !tbaa !33
  %exit_status = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 9
  store i32 0, i32* %exit_status, align 4, !tbaa !34
  %active_workers = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 8
  store i32 0, i32* %active_workers, align 8, !tbaa !35
  %next_semaphore = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 10
  store i32 0, i32* %next_semaphore, align 8, !tbaa !36
  %owner_is_sleeping = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 11
  store i8 0, i8* %owner_is_sleeping, align 4, !tbaa !37
  %parent_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 5
  %4 = bitcast %"struct.Halide::Runtime::Internal::work"** %parent_job to i8**
  store i8* %task_parent, i8** %4, align 8, !tbaa !40
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.then
  %tasks.addr.1 = phi %struct.halide_parallel_task_t* [ %tasks.addr.077, %if.then ], [ %incdec.ptr, %if.end ]
  %num_tasks.addr.1 = phi i32 [ %dec, %if.then ], [ %num_tasks.addr.078, %if.end ]
  %indvars.iv.next83 = add nuw nsw i64 %indvars.iv82, 1
  %5 = sext i32 %num_tasks.addr.1 to i64
  %cmp = icmp slt i64 %indvars.iv.next83, %5
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !121

if.end19:                                         ; preds = %for.cond.cleanup
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  %6 = bitcast i8* %task_parent to %"struct.Halide::Runtime::Internal::work"*
  call void @_ZN6Halide7Runtime8Internal27enqueue_work_already_lockedEiPNS1_4workES3_(i32 %num_tasks.addr.0.lcssa, %"struct.Halide::Runtime::Internal::work"* nonnull %0, %"struct.Halide::Runtime::Internal::work"* %6) #19
  %cmp2373 = icmp sgt i32 %num_tasks.addr.0.lcssa, 0
  br i1 %cmp2373, label %for.body25.preheader, label %for.cond.cleanup24

for.body25.preheader:                             ; preds = %if.end19
  %wide.trip.count = zext i32 %num_tasks.addr.0.lcssa to i64
  br label %for.body25

for.cond.cleanup24:                               ; preds = %for.body25, %if.end19
  %exit_status20.0.lcssa = phi i32 [ 0, %if.end19 ], [ %spec.select, %for.body25 ]
  call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  br label %cleanup

for.body25:                                       ; preds = %for.body25, %for.body25.preheader
  %indvars.iv = phi i64 [ 0, %for.body25.preheader ], [ %indvars.iv.next, %for.body25 ]
  %exit_status20.074 = phi i32 [ 0, %for.body25.preheader ], [ %spec.select, %for.body25 ]
  %add.ptr = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv
  call void @_ZN6Halide7Runtime8Internal28worker_thread_already_lockedEPNS1_4workE(%"struct.Halide::Runtime::Internal::work"* nonnull %add.ptr) #19
  %exit_status28 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv, i32 9
  %7 = load i32, i32* %exit_status28, align 4, !tbaa !34
  %cmp29.not = icmp eq i32 %7, 0
  %spec.select = select i1 %cmp29.not, i32 %exit_status20.074, i32 %7
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup24, label %for.body25, !llvm.loop !122

cleanup:                                          ; preds = %for.cond.cleanup24, %for.cond.cleanup
  %retval.0 = phi i32 [ %exit_status20.0.lcssa, %for.cond.cleanup24 ], [ 0, %for.cond.cleanup ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_default_semaphore_init(%struct.halide_semaphore_t* %s, i32 %n) #2 {
entry:
  %value = bitcast %struct.halide_semaphore_t* %s to i32*
  store atomic i32 %n, i32* %value release, align 4
  ret i32 %n
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_semaphore_release(%struct.halide_semaphore_t* %s, i32 %n) #0 {
entry:
  %value = bitcast %struct.halide_semaphore_t* %s to i32*
  %0 = atomicrmw add i32* %value, i32 %n acq_rel
  %cmp = icmp eq i32 %0, 0
  %cmp1 = icmp ne i32 %n, 0
  %or.cond = and i1 %cmp1, %cmp
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 8)) #19
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #19
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %add = add nsw i32 %0, %n
  ret i32 %add
}

; Function Attrs: nounwind mustprogress
define weak void @halide_thread_pool_cleanup() #0 {
entry:
  tail call void @halide_shutdown_thread_pool() #19
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_shutdown_thread_pool() local_unnamed_addr #0 {
entry:
  %0 = load i8, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 15), align 1, !tbaa !45, !range !17
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  store i8 1, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 14), align 8, !tbaa !63
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #19
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 8)) #19
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 9)) #19
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  %1 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !53
  %cmp4 = icmp sgt i32 %1, 0
  br i1 %cmp4, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body, %if.then
  %call.i = tail call i8* @memset(i8* nonnull bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i32 0, i64 2116) #17
  br label %if.end

for.body:                                         ; preds = %for.body, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.then ]
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 13, i64 %indvars.iv
  %2 = load %struct.halide_thread*, %struct.halide_thread** %arrayidx, align 8, !tbaa !10
  tail call void @halide_join_thread(%struct.halide_thread* %2) #19
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %3 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !53
  %4 = sext i32 %3 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %4
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !123

if.end:                                           ; preds = %for.cond.cleanup, %entry
  ret void
}

declare i8* @memset(i8*, i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_join_thread(%struct.halide_thread* %thread_arg) local_unnamed_addr #0 {
entry:
  %ret = alloca i8*, align 8
  %0 = bitcast %struct.halide_thread* %thread_arg to %"struct.Halide::Runtime::Internal::spawned_thread"*
  %1 = bitcast i8** %ret to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #18
  store i8* null, i8** %ret, align 8, !tbaa !10
  %handle = getelementptr inbounds %"struct.Halide::Runtime::Internal::spawned_thread", %"struct.Halide::Runtime::Internal::spawned_thread"* %0, i64 0, i32 2
  %2 = load i64, i64* %handle, align 8, !tbaa !118
  %call = call i32 @pthread_join(i64 %2, i8** nonnull %ret) #17
  %3 = bitcast %struct.halide_thread* %thread_arg to i8*
  call void @free(i8* %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #18
  ret void
}

declare i32 @pthread_join(i64, i8**) local_unnamed_addr #1

; Function Attrs: nounwind
define weak void @halide_cond_signal(%struct.halide_mutex* %cond) local_unnamed_addr #4 {
entry:
  %control.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", align 8
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %cond, i64 0, i32 0, i64 0
  %0 = load atomic i64, i64* %state.i monotonic, align 8
  %cmp.i = icmp eq i64 %0, 0
  br i1 %cmp.i, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond6signalEv.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #18
  %2 = inttoptr i64 %0 to %"class.Halide::Runtime::Internal::Synchronization::word_lock"*
  %3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization22signal_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !41
  %cond_state2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 1
  store i64* %state.i, i64** %cond_state2.i.i, align 8, !tbaa !124
  %mutex3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 2
  store %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex3.i.i, align 8, !tbaa !126
  %4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0
  %5 = ptrtoint %struct.halide_mutex* %cond to i64
  %call.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control10unpark_oneEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %4, i64 %5) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #18
  br label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond6signalEv.exit

_ZN6Halide7Runtime8Internal15Synchronization9fast_cond6signalEv.exit: ; preds = %if.end.i, %entry
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control8validateERNS2_15validate_actionE(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) unnamed_addr #2 comdat align 2 {
entry:
  ret i1 true
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr i64 @_ZN6Halide7Runtime8Internal15Synchronization22signal_parking_control6unparkEib(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, i32 %unparked, i1 zeroext %more_waiters) unnamed_addr #2 comdat align 2 {
entry:
  br i1 %more_waiters, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %cond_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %cond_state, align 8, !tbaa !124
  store atomic i64 0, i64* %0 monotonic, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i64 0
}

; Function Attrs: nounwind mustprogress
define weak %struct.halide_mutex_array* @halide_mutex_array_create(i32 %sz) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @halide_malloc(i8* null, i64 8) #17
  %0 = bitcast i8* %call to %struct.halide_mutex_array*
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv = sext i32 %sz to i64
  %mul = shl nsw i64 %conv, 3
  %call1 = tail call i8* @halide_malloc(i8* null, i64 %mul) #17
  %1 = bitcast i8* %call to i8**
  store i8* %call1, i8** %1, align 8, !tbaa !127
  %cmp4 = icmp eq i8* %call1, null
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  tail call void @halide_free(i8* null, i8* nonnull %call) #17
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %call10 = tail call i8* @memset(i8* nonnull %call1, i32 0, i64 %mul) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.then5, %entry
  %retval.0 = phi %struct.halide_mutex_array* [ null, %if.then5 ], [ %0, %if.end6 ], [ null, %entry ]
  ret %struct.halide_mutex_array* %retval.0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_mutex_array_destroy(i8* %user_context, i8* %array) local_unnamed_addr #0 {
entry:
  %0 = bitcast i8* %array to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !127
  tail call void @halide_free(i8* %user_context, i8* %1) #17
  tail call void @halide_free(i8* %user_context, i8* %array) #17
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_mutex_array_lock(%struct.halide_mutex_array* %array, i32 %entry1) local_unnamed_addr #0 {
entry:
  %array2 = getelementptr inbounds %struct.halide_mutex_array, %struct.halide_mutex_array* %array, i64 0, i32 0
  %0 = load %struct.halide_mutex*, %struct.halide_mutex** %array2, align 8, !tbaa !127
  %idxprom = sext i32 %entry1 to i64
  %arrayidx = getelementptr inbounds %struct.halide_mutex, %struct.halide_mutex* %0, i64 %idxprom
  tail call void @halide_mutex_lock(%struct.halide_mutex* %arrayidx) #19
  ret i32 0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_mutex_array_unlock(%struct.halide_mutex_array* %array, i32 %entry1) local_unnamed_addr #0 {
entry:
  %array2 = getelementptr inbounds %struct.halide_mutex_array, %struct.halide_mutex_array* %array, i64 0, i32 0
  %0 = load %struct.halide_mutex*, %struct.halide_mutex** %array2, align 8, !tbaa !127
  %idxprom = sext i32 %entry1 to i64
  %arrayidx = getelementptr inbounds %struct.halide_mutex, %struct.halide_mutex* %0, i64 %idxprom
  tail call void @halide_mutex_unlock(%struct.halide_mutex* %arrayidx) #19
  ret i32 0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_set_num_threads(i32 %n) local_unnamed_addr #0 {
entry:
  %cmp = icmp slt i32 %n, 0
  br i1 %cmp, label %if.end3.thread, label %if.end

if.end3.thread:                                   ; preds = %entry
  tail call void @halide_error(i8* null, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #17
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  %0 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  br label %if.else.i

if.end:                                           ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  %cmp1 = icmp eq i32 %n, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %call = tail call i32 @_ZN6Halide7Runtime8Internal27default_desired_num_threadsEv() #19
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %n.addr.0 = phi i32 [ %call, %if.then2 ], [ %n, %if.end ]
  %1 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  %cmp.i = icmp sgt i32 %n.addr.0, 256
  br i1 %cmp.i, label %_ZN6Halide7Runtime8Internal17clamp_num_threadsEi.exit, label %if.else.i

if.else.i:                                        ; preds = %if.end3, %if.end3.thread
  %2 = phi i32 [ %0, %if.end3.thread ], [ %1, %if.end3 ]
  %n.addr.012 = phi i32 [ %n, %if.end3.thread ], [ %n.addr.0, %if.end3 ]
  %3 = icmp sgt i32 %n.addr.012, 1
  %spec.select.i = select i1 %3, i32 %n.addr.012, i32 1
  br label %_ZN6Halide7Runtime8Internal17clamp_num_threadsEi.exit

_ZN6Halide7Runtime8Internal17clamp_num_threadsEi.exit: ; preds = %if.else.i, %if.end3
  %4 = phi i32 [ %2, %if.else.i ], [ %1, %if.end3 ]
  %call48 = phi i32 [ %spec.select.i, %if.else.i ], [ 256, %if.end3 ]
  store i32 %call48, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #19
  ret i32 %4
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* @halide_set_custom_do_task(i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 8, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %f, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 8, !tbaa !10
  ret i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* @halide_set_custom_do_loop_task(i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)*, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 8, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %f, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 8, !tbaa !10
  ret i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* @halide_set_custom_do_par_for(i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 8, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %f, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 8, !tbaa !10
  ret i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_set_custom_parallel_runtime(i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %do_par_for, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %do_task, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %do_loop_task, i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)* %do_parallel_tasks, i32 (%struct.halide_semaphore_t*, i32)* %semaphore_init, i1 (%struct.halide_semaphore_t*, i32)* %semaphore_try_acquire, i32 (%struct.halide_semaphore_t*, i32)* %semaphore_release) local_unnamed_addr #2 {
entry:
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %do_par_for, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 8, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %do_task, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 8, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %do_loop_task, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 8, !tbaa !10
  store i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)* %do_parallel_tasks, i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)** @_ZN6Halide7Runtime8Internal24custom_do_parallel_tasksE, align 8, !tbaa !10
  store i32 (%struct.halide_semaphore_t*, i32)* %semaphore_init, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal21custom_semaphore_initE, align 8, !tbaa !10
  store i1 (%struct.halide_semaphore_t*, i32)* %semaphore_try_acquire, i1 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal28custom_semaphore_try_acquireE, align 8, !tbaa !10
  store i32 (%struct.halide_semaphore_t*, i32)* %semaphore_release, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal24custom_semaphore_releaseE, align 8, !tbaa !10
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_par_for(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 8, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) #17
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_parallel_tasks(i8* %user_context, i32 %num_tasks, %struct.halide_parallel_task_t* %tasks, i8* %task_parent) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)*, i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)** @_ZN6Halide7Runtime8Internal24custom_do_parallel_tasksE, align 8, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, i32 %num_tasks, %struct.halide_parallel_task_t* %tasks, i8* %task_parent) #17
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_semaphore_init(%struct.halide_semaphore_t* %sema, i32 %count) local_unnamed_addr #0 {
entry:
  %0 = load i32 (%struct.halide_semaphore_t*, i32)*, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal21custom_semaphore_initE, align 8, !tbaa !10
  %call = tail call i32 %0(%struct.halide_semaphore_t* %sema, i32 %count) #17
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_semaphore_release(%struct.halide_semaphore_t* %sema, i32 %count) local_unnamed_addr #0 {
entry:
  %0 = load i32 (%struct.halide_semaphore_t*, i32)*, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal24custom_semaphore_releaseE, align 8, !tbaa !10
  %call = tail call i32 %0(%struct.halide_semaphore_t* %sema, i32 %count) #17
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak zeroext i1 @halide_semaphore_try_acquire(%struct.halide_semaphore_t* %sema, i32 %count) local_unnamed_addr #0 {
entry:
  %0 = load i1 (%struct.halide_semaphore_t*, i32)*, i1 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal28custom_semaphore_try_acquireE, align 8, !tbaa !10
  %call = tail call zeroext i1 %0(%struct.halide_semaphore_t* %sema, i32 %count) #17
  ret i1 %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_get_symbol(i8* %name) #0 {
entry:
  %call = tail call i8* @dlsym(i8* null, i8* %name) #17
  ret i8* %call
}

declare i8* @dlsym(i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_load_library(i8* %name) #0 {
entry:
  %call = tail call i8* @dlopen(i8* %name, i32 1) #17
  %tobool.not = icmp eq i8* %call, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call3 = tail call i8* @dlerror() #17
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i8* %call
}

declare i8* @dlopen(i8*, i32) local_unnamed_addr #1

declare i8* @dlerror() local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_get_library_symbol(i8* %lib, i8* %name) #0 {
entry:
  %call = tail call i8* @dlsym(i8* %lib, i8* %name) #17
  ret i8* %call
}

; Function Attrs: nounwind willreturn mustprogress
define weak i8* (i8*)* @halide_set_custom_get_symbol(i8* (i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i8* (i8*)*, i8* (i8*)** @_ZN6Halide7Runtime8Internal17custom_get_symbolE, align 8, !tbaa !10
  store i8* (i8*)* %f, i8* (i8*)** @_ZN6Halide7Runtime8Internal17custom_get_symbolE, align 8, !tbaa !10
  ret i8* (i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i8* (i8*)* @halide_set_custom_load_library(i8* (i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i8* (i8*)*, i8* (i8*)** @_ZN6Halide7Runtime8Internal19custom_load_libraryE, align 8, !tbaa !10
  store i8* (i8*)* %f, i8* (i8*)** @_ZN6Halide7Runtime8Internal19custom_load_libraryE, align 8, !tbaa !10
  ret i8* (i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i8* (i8*, i8*)* @halide_set_custom_get_library_symbol(i8* (i8*, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** @_ZN6Halide7Runtime8Internal25custom_get_library_symbolE, align 8, !tbaa !10
  store i8* (i8*, i8*)* %f, i8* (i8*, i8*)** @_ZN6Halide7Runtime8Internal25custom_get_library_symbolE, align 8, !tbaa !10
  ret i8* (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_get_symbol(i8* %name) local_unnamed_addr #0 {
entry:
  %0 = load i8* (i8*)*, i8* (i8*)** @_ZN6Halide7Runtime8Internal17custom_get_symbolE, align 8, !tbaa !10
  %call = tail call i8* %0(i8* %name) #17
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_load_library(i8* %name) local_unnamed_addr #0 {
entry:
  %0 = load i8* (i8*)*, i8* (i8*)** @_ZN6Halide7Runtime8Internal19custom_load_libraryE, align 8, !tbaa !10
  %call = tail call i8* %0(i8* %name) #17
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_get_library_symbol(i8* %lib, i8* %name) local_unnamed_addr #0 {
entry:
  %0 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** @_ZN6Halide7Runtime8Internal25custom_get_library_symbolE, align 8, !tbaa !10
  %call = tail call i8* %0(i8* %lib, i8* %name) #17
  ret i8* %call
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce i32 @_halide_buffer_get_dimensions(%struct.halide_buffer_t* %buf) local_unnamed_addr #5 {
entry:
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %0 = load i32, i32* %dimensions, align 4, !tbaa !129
  ret i32 %0
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce i8* @_halide_buffer_get_host(%struct.halide_buffer_t* %buf) local_unnamed_addr #5 {
entry:
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %0 = load i8*, i8** %host, align 8, !tbaa !134
  ret i8* %0
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce i64 @_halide_buffer_get_device(%struct.halide_buffer_t* %buf) local_unnamed_addr #5 {
entry:
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !135
  ret i64 %0
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce %struct.halide_device_interface_t* @_halide_buffer_get_device_interface(%struct.halide_buffer_t* %buf) local_unnamed_addr #5 {
entry:
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  ret %struct.halide_device_interface_t* %0
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %buf, i32 %d) local_unnamed_addr #5 {
entry:
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %0 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %idxprom = sext i32 %d to i64
  %min = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %0, i64 %idxprom, i32 0
  %1 = load i32, i32* %min, align 4, !tbaa !138
  ret i32 %1
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce i32 @_halide_buffer_get_max(%struct.halide_buffer_t* %buf, i32 %d) local_unnamed_addr #5 {
entry:
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %0 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %idxprom = sext i32 %d to i64
  %min = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %0, i64 %idxprom, i32 0
  %1 = load i32, i32* %min, align 4, !tbaa !138
  %extent = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %0, i64 %idxprom, i32 1
  %2 = load i32, i32* %extent, align 4, !tbaa !140
  %add = add i32 %1, -1
  %sub = add i32 %add, %2
  ret i32 %sub
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %buf, i32 %d) local_unnamed_addr #5 {
entry:
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %0 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %idxprom = sext i32 %d to i64
  %extent = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %0, i64 %idxprom, i32 1
  %1 = load i32, i32* %extent, align 4, !tbaa !140
  ret i32 %1
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %buf, i32 %d) local_unnamed_addr #5 {
entry:
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %0 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %idxprom = sext i32 %d to i64
  %stride = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %0, i64 %idxprom, i32 2
  %1 = load i32, i32* %stride, align 4, !tbaa !141
  ret i32 %1
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce i32 @_halide_buffer_set_host_dirty(%struct.halide_buffer_t* %buf, i1 zeroext %val) local_unnamed_addr #5 {
entry:
  %flags.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %0 = load i64, i64* %flags.i.i, align 8, !tbaa !142
  %and.i.i = and i64 %0, -2
  %masksel = zext i1 %val to i64
  %or.i.i.sink = or i64 %and.i.i, %masksel
  store i64 %or.i.i.sink, i64* %flags.i.i, align 8, !tbaa !142
  ret i32 0
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce i32 @_halide_buffer_set_device_dirty(%struct.halide_buffer_t* %buf, i1 zeroext %val) local_unnamed_addr #5 {
entry:
  %flags.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %0 = load i64, i64* %flags.i.i, align 8, !tbaa !142
  %and.i.i = and i64 %0, -3
  %masksel = select i1 %val, i64 2, i64 0
  %or.i.i.sink = or i64 %and.i.i, %masksel
  store i64 %or.i.i.sink, i64* %flags.i.i, align 8, !tbaa !142
  ret i32 0
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce zeroext i1 @_halide_buffer_get_host_dirty(%struct.halide_buffer_t* %buf) local_unnamed_addr #5 {
entry:
  %flags.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %0 = load i64, i64* %flags.i.i, align 8, !tbaa !142
  %and.i.i = and i64 %0, 1
  %cmp.i.i = icmp ne i64 %and.i.i, 0
  ret i1 %cmp.i.i
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce zeroext i1 @_halide_buffer_get_device_dirty(%struct.halide_buffer_t* %buf) local_unnamed_addr #5 {
entry:
  %flags.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %0 = load i64, i64* %flags.i.i, align 8, !tbaa !142
  %and.i.i = and i64 %0, 2
  %cmp.i.i = icmp ne i64 %and.i.i, 0
  ret i1 %cmp.i.i
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce %struct.halide_dimension_t* @_halide_buffer_get_shape(%struct.halide_buffer_t* %buf) local_unnamed_addr #5 {
entry:
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %0 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  ret %struct.halide_dimension_t* %0
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce zeroext i1 @_halide_buffer_is_bounds_query(%struct.halide_buffer_t* %buf) local_unnamed_addr #5 {
entry:
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %0 = load i8*, i8** %host, align 8, !tbaa !134
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device, align 8, !tbaa !135
  %cmp1 = icmp eq i64 %1, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  ret i1 %2
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce i32 @_halide_buffer_get_type(%struct.halide_buffer_t* %buf) local_unnamed_addr #5 {
entry:
  %code.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 4, i32 0
  %0 = load i8, i8* %code.i, align 2, !tbaa !143
  %conv.i = zext i8 %0 to i32
  %bits.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 4, i32 1
  %1 = load i8, i8* %bits.i, align 1, !tbaa !144
  %conv3.i = zext i8 %1 to i32
  %shl.i = shl nuw nsw i32 %conv3.i, 8
  %or.i = or i32 %shl.i, %conv.i
  %lanes.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 4, i32 2
  %2 = load i16, i16* %lanes.i, align 2, !tbaa !145
  %conv4.i = zext i16 %2 to i32
  %shl5.i = shl nuw i32 %conv4.i, 16
  %or6.i = or i32 %or.i, %shl5.i
  ret i32 %or6.i
}

; Function Attrs: alwaysinline nounwind mustprogress
define linkonce %struct.halide_buffer_t* @_halide_buffer_init(%struct.halide_buffer_t* %dst, %struct.halide_dimension_t* %dst_shape, i8* %host, i64 %device, %struct.halide_device_interface_t* %device_interface, i32 %type_code, i32 %type_bits, i32 %dimensions, %struct.halide_dimension_t* %shape, i64 %flags) local_unnamed_addr #6 {
entry:
  %host1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 2
  store i8* %host, i8** %host1, align 8, !tbaa !134
  %device2 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  store i64 %device, i64* %device2, align 8, !tbaa !135
  %device_interface3 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 1
  store %struct.halide_device_interface_t* %device_interface, %struct.halide_device_interface_t** %device_interface3, align 8, !tbaa !136
  %conv = trunc i32 %type_code to i8
  %code = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 4, i32 0
  store i8 %conv, i8* %code, align 8, !tbaa !146
  %conv4 = trunc i32 %type_bits to i8
  %bits = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 4, i32 1
  store i8 %conv4, i8* %bits, align 1, !tbaa !147
  %lanes = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 4, i32 2
  store i16 1, i16* %lanes, align 2, !tbaa !148
  %dimensions7 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 5
  store i32 %dimensions, i32* %dimensions7, align 4, !tbaa !129
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 6
  store %struct.halide_dimension_t* %dst_shape, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %cmp.not = icmp ne %struct.halide_dimension_t* %shape, %dst_shape
  %cmp931 = icmp sgt i32 %dimensions, 0
  %or.cond = and i1 %cmp.not, %cmp931
  br i1 %or.cond, label %for.body.preheader, label %if.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %dimensions to i64
  %0 = bitcast %struct.halide_dimension_t* %dst_shape to i8*
  %1 = bitcast %struct.halide_dimension_t* %shape to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %0, i8* nonnull align 4 dereferenceable(16) %1, i64 16, i1 false), !tbaa.struct !149
  %exitcond.not33 = icmp eq i32 %dimensions, 1
  br i1 %exitcond.not33, label %if.end, label %for.body.for.body_crit_edge, !llvm.loop !150

for.body.for.body_crit_edge:                      ; preds = %for.body.for.body_crit_edge, %for.body.preheader
  %indvars.iv.next34 = phi i64 [ %indvars.iv.next, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.pre = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %arrayidx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv.next34
  %arrayidx12 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre, i64 %indvars.iv.next34
  %2 = bitcast %struct.halide_dimension_t* %arrayidx12 to i8*
  %3 = bitcast %struct.halide_dimension_t* %arrayidx to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %2, i8* nonnull align 4 dereferenceable(16) %3, i64 16, i1 false), !tbaa.struct !149
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next34, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end, label %for.body.for.body_crit_edge, !llvm.loop !150

if.end:                                           ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %entry
  %flags13 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 3
  store i64 %flags, i64* %flags13, align 8, !tbaa !142
  ret %struct.halide_buffer_t* %dst
}

; Function Attrs: alwaysinline nounwind mustprogress
define linkonce %struct.halide_buffer_t* @_halide_buffer_init_from_buffer(%struct.halide_buffer_t* %dst, %struct.halide_dimension_t* %dst_shape, %struct.halide_buffer_t* %src) local_unnamed_addr #6 {
entry:
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 2
  %0 = load i8*, i8** %host, align 8, !tbaa !134
  %host1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 2
  store i8* %0, i8** %host1, align 8, !tbaa !134
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %1 = load i64, i64* %device, align 8, !tbaa !135
  %device2 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  store i64 %1, i64* %device2, align 8, !tbaa !135
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %2 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  %device_interface3 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 1
  store %struct.halide_device_interface_t* %2, %struct.halide_device_interface_t** %device_interface3, align 8, !tbaa !136
  %3 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 4, i32 0
  %4 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 4, i32 0
  %5 = bitcast i8* %4 to i32*
  %6 = bitcast i8* %3 to i32*
  %7 = load i32, i32* %5, align 8
  store i32 %7, i32* %6, align 8
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 5
  %8 = load i32, i32* %dimensions, align 4, !tbaa !129
  %dimensions5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 5
  store i32 %8, i32* %dimensions5, align 4, !tbaa !129
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 6
  store %struct.halide_dimension_t* %dst_shape, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %flags = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 3
  %9 = load i64, i64* %flags, align 8, !tbaa !142
  %flags6 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 3
  store i64 %9, i64* %flags6, align 8, !tbaa !142
  %cmp31 = icmp sgt i32 %8, 0
  br i1 %cmp31, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %dim8 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 6
  %10 = bitcast %struct.halide_dimension_t** %dim8 to i8**
  %11 = load i8*, i8** %10, align 8, !tbaa !137
  %12 = bitcast %struct.halide_dimension_t* %dst_shape to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %12, i8* nonnull align 4 dereferenceable(16) %11, i64 16, i1 false), !tbaa.struct !149
  %13 = load i32, i32* %dimensions5, align 4, !tbaa !129
  %cmp33 = icmp sgt i32 %13, 1
  br i1 %cmp33, label %for.body.for.body_crit_edge, label %for.cond.cleanup, !llvm.loop !151

for.cond.cleanup:                                 ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph, %entry
  ret %struct.halide_buffer_t* %dst

for.body.for.body_crit_edge:                      ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %indvars.iv.next34 = phi i64 [ %indvars.iv.next, %for.body.for.body_crit_edge ], [ 1, %for.body.lr.ph ]
  %.pre = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %14 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim8, align 8, !tbaa !137
  %arrayidx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %14, i64 %indvars.iv.next34
  %arrayidx11 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre, i64 %indvars.iv.next34
  %15 = bitcast %struct.halide_dimension_t* %arrayidx11 to i8*
  %16 = bitcast %struct.halide_dimension_t* %arrayidx to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %15, i8* nonnull align 4 dereferenceable(16) %16, i64 16, i1 false), !tbaa.struct !149
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next34, 1
  %17 = load i32, i32* %dimensions5, align 4, !tbaa !129
  %18 = sext i32 %17 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %18
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.cond.cleanup, !llvm.loop !151
}

; Function Attrs: alwaysinline nounwind mustprogress
define linkonce %struct.halide_buffer_t* @_halide_buffer_crop(i8* %user_context, %struct.halide_buffer_t* %dst, %struct.halide_dimension_t* %dst_shape, %struct.halide_buffer_t* %src, i32* %min, i32* %extent) local_unnamed_addr #6 {
entry:
  %0 = bitcast %struct.halide_buffer_t* %dst to i8*
  %1 = bitcast %struct.halide_buffer_t* %src to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %0, i8* nonnull align 8 dereferenceable(56) %1, i64 56, i1 false), !tbaa.struct !152
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 6
  store %struct.halide_dimension_t* %dst_shape, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 5
  %2 = load i32, i32* %dimensions, align 4, !tbaa !129
  %cmp71 = icmp sgt i32 %2, 0
  br i1 %cmp71, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %dim1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 6
  %.pre = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim1, align 8, !tbaa !137
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %offset.0.lcssa = phi i64 [ 0, %entry ], [ %add, %for.body ]
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 2
  %3 = load i8*, i8** %host, align 8, !tbaa !134
  %tobool.not = icmp eq i8* %3, null
  br i1 %tobool.not, label %if.end, label %if.then

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %4 = phi %struct.halide_dimension_t* [ %dst_shape, %for.body.lr.ph ], [ %9, %for.body ]
  %5 = phi %struct.halide_dimension_t* [ %.pre, %for.body.lr.ph ], [ %12, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %offset.072 = phi i64 [ 0, %for.body.lr.ph ], [ %add, %for.body ]
  %arrayidx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv
  %arrayidx4 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %4, i64 %indvars.iv
  %6 = bitcast %struct.halide_dimension_t* %arrayidx4 to i8*
  %7 = bitcast %struct.halide_dimension_t* %arrayidx to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %6, i8* nonnull align 4 dereferenceable(16) %7, i64 16, i1 false), !tbaa.struct !149
  %arrayidx6 = getelementptr inbounds i32, i32* %min, i64 %indvars.iv
  %8 = load i32, i32* %arrayidx6, align 4, !tbaa !73
  %9 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %min10 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %9, i64 %indvars.iv, i32 0
  store i32 %8, i32* %min10, align 4, !tbaa !138
  %arrayidx12 = getelementptr inbounds i32, i32* %extent, i64 %indvars.iv
  %10 = load i32, i32* %arrayidx12, align 4, !tbaa !73
  %extent16 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %9, i64 %indvars.iv, i32 1
  store i32 %10, i32* %extent16, align 4, !tbaa !140
  %11 = load i32, i32* %arrayidx6, align 4, !tbaa !73
  %12 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim1, align 8, !tbaa !137
  %min22 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %12, i64 %indvars.iv, i32 0
  %13 = load i32, i32* %min22, align 4, !tbaa !138
  %sub = sub nsw i32 %11, %13
  %conv = sext i32 %sub to i64
  %stride = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %12, i64 %indvars.iv, i32 2
  %14 = load i32, i32* %stride, align 4, !tbaa !141
  %conv26 = sext i32 %14 to i64
  %mul = mul nsw i64 %conv, %conv26
  %add = add nsw i64 %mul, %offset.072
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %15 = load i32, i32* %dimensions, align 4, !tbaa !129
  %16 = sext i32 %15 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %16
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !155

if.then:                                          ; preds = %for.cond.cleanup
  %bits.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 4, i32 1
  %17 = load i8, i8* %bits.i, align 1, !tbaa !144
  %conv.i = zext i8 %17 to i64
  %add.i = add nuw nsw i64 %conv.i, 7
  %div.i = lshr i64 %add.i, 3
  %mul28 = mul nsw i64 %div.i, %offset.0.lcssa
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %mul28
  store i8* %add.ptr, i8** %host, align 8, !tbaa !134
  br label %if.end

if.end:                                           ; preds = %if.then, %for.cond.cleanup
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 1
  store %struct.halide_device_interface_t* null, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  store i64 0, i64* %device, align 8, !tbaa !135
  %device_interface30 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %18 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface30, align 8, !tbaa !136
  %tobool31.not = icmp eq %struct.halide_device_interface_t* %18, null
  br i1 %tobool31.not, label %if.end38, label %if.then32

if.then32:                                        ; preds = %if.end
  %device_crop = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %18, i64 0, i32 9
  %19 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)** %device_crop, align 8, !tbaa !156
  %call34 = tail call i32 %19(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_buffer_t* nonnull %dst) #17
  %cmp35.not = icmp eq i32 %call34, 0
  br i1 %cmp35.not, label %if.end38, label %cleanup

if.end38:                                         ; preds = %if.then32, %if.end
  br label %cleanup

cleanup:                                          ; preds = %if.end38, %if.then32
  %retval.0 = phi %struct.halide_buffer_t* [ %dst, %if.end38 ], [ null, %if.then32 ]
  ret %struct.halide_buffer_t* %retval.0
}

; Function Attrs: alwaysinline nounwind mustprogress
define linkonce i32 @_halide_buffer_retire_crop_after_extern_stage(i8* %user_context, i8* %obj) local_unnamed_addr #6 {
entry:
  %0 = bitcast i8* %obj to %struct.halide_buffer_t**
  %1 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %0, align 8, !tbaa !10
  %arrayidx1 = getelementptr inbounds i8, i8* %obj, i64 8
  %2 = bitcast i8* %arrayidx1 to %struct.halide_buffer_t**
  %3 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %2, align 8, !tbaa !10
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %1, i64 0, i32 0
  %4 = load i64, i64* %device, align 8, !tbaa !135
  %tobool.not = icmp eq i64 %4, 0
  br i1 %tobool.not, label %if.end23, label %if.then

if.then:                                          ; preds = %entry
  %device2 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %3, i64 0, i32 0
  %5 = load i64, i64* %device2, align 8, !tbaa !135
  %tobool3.not = icmp eq i64 %5, 0
  %flags.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %1, i64 0, i32 3
  %6 = load i64, i64* %flags.i.i, align 8, !tbaa !142
  %and.i.i = and i64 %6, 2
  %cmp.i.i.not = icmp eq i64 %and.i.i, 0
  br i1 %tobool3.not, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then
  br i1 %cmp.i.i.not, label %if.end8, label %if.then5

if.then5:                                         ; preds = %if.then4
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %1, i64 0, i32 1
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  %copy_to_host = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i64 0, i32 4
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %copy_to_host, align 8, !tbaa !158
  %call6 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %1) #17
  %cmp.not = icmp eq i32 %call6, 0
  br i1 %cmp.not, label %if.end8, label %cleanup

if.end8:                                          ; preds = %if.then5, %if.then4
  %device_interface9 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %1, i64 0, i32 1
  %9 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface9, align 8, !tbaa !136
  %device_free = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %9, i64 0, i32 1
  %10 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_free, align 8, !tbaa !159
  %call10 = tail call i32 %10(i8* %user_context, %struct.halide_buffer_t* nonnull %1) #17
  %cmp11.not = icmp eq i32 %call10, 0
  br i1 %cmp11.not, label %if.end23, label %cleanup

if.else:                                          ; preds = %if.then
  br i1 %cmp.i.i.not, label %if.end16, label %if.then15

if.then15:                                        ; preds = %if.else
  %flags.i.i60 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %3, i64 0, i32 3
  %11 = load i64, i64* %flags.i.i60, align 8, !tbaa !142
  %or.i.i61 = or i64 %11, 2
  store i64 %or.i.i61, i64* %flags.i.i60, align 8, !tbaa !142
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %if.else
  %device_interface17 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %1, i64 0, i32 1
  %12 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface17, align 8, !tbaa !136
  %device_release_crop = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %12, i64 0, i32 11
  %13 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_release_crop, align 8, !tbaa !160
  %call18 = tail call i32 %13(i8* %user_context, %struct.halide_buffer_t* nonnull %1) #17
  %cmp19.not = icmp eq i32 %call18, 0
  br i1 %cmp19.not, label %if.end23, label %cleanup

if.end23:                                         ; preds = %if.end16, %if.end8, %entry
  %flags.i.i54 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %1, i64 0, i32 3
  %14 = load i64, i64* %flags.i.i54, align 8, !tbaa !142
  %and.i.i55 = and i64 %14, 1
  %cmp.i.i56.not = icmp eq i64 %and.i.i55, 0
  br i1 %cmp.i.i56.not, label %cleanup, label %if.then25

if.then25:                                        ; preds = %if.end23
  %flags.i.i53 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %3, i64 0, i32 3
  %15 = load i64, i64* %flags.i.i53, align 8, !tbaa !142
  %or.i.i = or i64 %15, 1
  store i64 %or.i.i, i64* %flags.i.i53, align 8, !tbaa !142
  br label %cleanup

cleanup:                                          ; preds = %if.then25, %if.end23, %if.end16, %if.end8, %if.then5
  %retval.0 = phi i32 [ %call6, %if.then5 ], [ %call10, %if.end8 ], [ %call18, %if.end16 ], [ 0, %if.then25 ], [ 0, %if.end23 ]
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind mustprogress
define linkonce i32 @_halide_buffer_retire_crops_after_extern_stage(i8* %user_context, i8* %obj) local_unnamed_addr #6 {
entry:
  %0 = bitcast i8* %obj to %struct.halide_buffer_t**
  %1 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %0, align 8, !tbaa !10
  %tobool.not5 = icmp eq %struct.halide_buffer_t* %1, null
  br i1 %tobool.not5, label %while.end, label %while.body

while.body:                                       ; preds = %_halide_buffer_retire_crop_after_extern_stage.exit, %entry
  %2 = phi %struct.halide_buffer_t* [ %16, %_halide_buffer_retire_crop_after_extern_stage.exit ], [ %1, %entry ]
  %buffers.06 = phi %struct.halide_buffer_t** [ %add.ptr, %_halide_buffer_retire_crop_after_extern_stage.exit ], [ %0, %entry ]
  %arrayidx1.i4 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %buffers.06, i64 1
  %3 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx1.i4, align 8, !tbaa !10
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %2, i64 0, i32 0
  %4 = load i64, i64* %device.i, align 8, !tbaa !135
  %tobool.not.i = icmp eq i64 %4, 0
  br i1 %tobool.not.i, label %if.end23.i, label %if.then.i

if.then.i:                                        ; preds = %while.body
  %device2.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %3, i64 0, i32 0
  %5 = load i64, i64* %device2.i, align 8, !tbaa !135
  %tobool3.not.i = icmp eq i64 %5, 0
  %flags.i.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %2, i64 0, i32 3
  %6 = load i64, i64* %flags.i.i.i, align 8, !tbaa !142
  %and.i.i.i = and i64 %6, 2
  %cmp.i.i.not.i = icmp eq i64 %and.i.i.i, 0
  br i1 %tobool3.not.i, label %if.then4.i, label %if.else.i

if.then4.i:                                       ; preds = %if.then.i
  br i1 %cmp.i.i.not.i, label %if.end8.i, label %if.then5.i

if.then5.i:                                       ; preds = %if.then4.i
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %2, i64 0, i32 1
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !136
  %copy_to_host.i = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i64 0, i32 4
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %copy_to_host.i, align 8, !tbaa !158
  %call6.i = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %2) #17
  %cmp.not.i = icmp eq i32 %call6.i, 0
  br i1 %cmp.not.i, label %if.end8.i, label %_halide_buffer_retire_crop_after_extern_stage.exit

if.end8.i:                                        ; preds = %if.then5.i, %if.then4.i
  %device_interface9.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %2, i64 0, i32 1
  %9 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface9.i, align 8, !tbaa !136
  %device_free.i = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %9, i64 0, i32 1
  %10 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_free.i, align 8, !tbaa !159
  %call10.i = tail call i32 %10(i8* %user_context, %struct.halide_buffer_t* nonnull %2) #17
  %cmp11.not.i = icmp eq i32 %call10.i, 0
  br i1 %cmp11.not.i, label %if.end23.i, label %_halide_buffer_retire_crop_after_extern_stage.exit

if.else.i:                                        ; preds = %if.then.i
  br i1 %cmp.i.i.not.i, label %if.end16.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.else.i
  %flags.i.i60.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %3, i64 0, i32 3
  %11 = load i64, i64* %flags.i.i60.i, align 8, !tbaa !142
  %or.i.i61.i = or i64 %11, 2
  store i64 %or.i.i61.i, i64* %flags.i.i60.i, align 8, !tbaa !142
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then15.i, %if.else.i
  %device_interface17.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %2, i64 0, i32 1
  %12 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface17.i, align 8, !tbaa !136
  %device_release_crop.i = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %12, i64 0, i32 11
  %13 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_release_crop.i, align 8, !tbaa !160
  %call18.i = tail call i32 %13(i8* %user_context, %struct.halide_buffer_t* nonnull %2) #17
  %cmp19.not.i = icmp eq i32 %call18.i, 0
  br i1 %cmp19.not.i, label %if.end23.i, label %_halide_buffer_retire_crop_after_extern_stage.exit

if.end23.i:                                       ; preds = %if.end16.i, %if.end8.i, %while.body
  %flags.i.i54.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %2, i64 0, i32 3
  %14 = load i64, i64* %flags.i.i54.i, align 8, !tbaa !142
  %and.i.i55.i = and i64 %14, 1
  %cmp.i.i56.not.i = icmp eq i64 %and.i.i55.i, 0
  br i1 %cmp.i.i56.not.i, label %_halide_buffer_retire_crop_after_extern_stage.exit, label %if.then25.i

if.then25.i:                                      ; preds = %if.end23.i
  %flags.i.i53.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %3, i64 0, i32 3
  %15 = load i64, i64* %flags.i.i53.i, align 8, !tbaa !142
  %or.i.i.i = or i64 %15, 1
  store i64 %or.i.i.i, i64* %flags.i.i53.i, align 8, !tbaa !142
  br label %_halide_buffer_retire_crop_after_extern_stage.exit

_halide_buffer_retire_crop_after_extern_stage.exit: ; preds = %if.then25.i, %if.end23.i, %if.end16.i, %if.end8.i, %if.then5.i
  %add.ptr = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %buffers.06, i64 2
  %16 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %add.ptr, align 8, !tbaa !10
  %tobool.not = icmp eq %struct.halide_buffer_t* %16, null
  br i1 %tobool.not, label %while.end, label %while.body, !llvm.loop !161

while.end:                                        ; preds = %_halide_buffer_retire_crop_after_extern_stage.exit, %entry
  ret i32 0
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce %struct.halide_buffer_t* @_halide_buffer_set_bounds(%struct.halide_buffer_t* %buf, i32 %dim, i32 %min, i32 %extent) local_unnamed_addr #5 {
entry:
  %cmp.not = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %dim1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %0 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim1, align 8, !tbaa !137
  %idxprom = sext i32 %dim to i64
  %min2 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %0, i64 %idxprom, i32 0
  store i32 %min, i32* %min2, align 4, !tbaa !138
  %extent6 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %0, i64 %idxprom, i32 1
  store i32 %extent, i32* %extent6, align 4, !tbaa !140
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret %struct.halide_buffer_t* %buf
}

; Function Attrs: alwaysinline nounwind mustprogress
define linkonce_odr void @call_destructor(i8* %user_context, void (i8*, i8*)* %fn, i8** %object, i1 zeroext %should_call) #6 comdat {
entry:
  %0 = load i8*, i8** %object, align 8, !tbaa !10
  store i8* null, i8** %object, align 8, !tbaa !10
  %tobool.not = icmp ne i8* %0, null
  %1 = and i1 %tobool.not, %should_call
  br i1 %1, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void %fn(i8* %user_context, i8* nonnull %0) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: alwaysinline nounwind mustprogress
define linkonce i8* @pseudostack_alloc(i8* %user_context, %struct.halide_pseudostack_slot_t* %slot, i64 %sz) #6 {
entry:
  %size = getelementptr inbounds %struct.halide_pseudostack_slot_t, %struct.halide_pseudostack_slot_t* %slot, i64 0, i32 1
  %0 = load i64, i64* %size, align 8, !tbaa !162
  %cmp = icmp ult i64 %0, %sz
  %ptr = getelementptr inbounds %struct.halide_pseudostack_slot_t, %struct.halide_pseudostack_slot_t* %slot, i64 0, i32 0
  %1 = load i8*, i8** %ptr, align 8, !tbaa !164
  br i1 %cmp, label %if.then, label %if.end13, !prof !165

if.then:                                          ; preds = %entry
  %tobool1.not = icmp eq i8* %1, null
  br i1 %tobool1.not, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %cumulative_size = getelementptr inbounds %struct.halide_pseudostack_slot_t, %struct.halide_pseudostack_slot_t* %slot, i64 0, i32 2
  %2 = load i64, i64* %cumulative_size, align 8, !tbaa !166
  %cmp2 = icmp ugt i64 %2, 16384
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %land.lhs.true
  tail call void @halide_free(i8* %user_context, i8* nonnull %1) #17
  br label %if.end

if.end:                                           ; preds = %if.then3, %land.lhs.true, %if.then
  %cumulative_size5 = getelementptr inbounds %struct.halide_pseudostack_slot_t, %struct.halide_pseudostack_slot_t* %slot, i64 0, i32 2
  %3 = load i64, i64* %cumulative_size5, align 8, !tbaa !166
  %add = add i64 %3, %sz
  store i64 %add, i64* %cumulative_size5, align 8, !tbaa !166
  %cmp7 = icmp ugt i64 %add, 16384
  br i1 %cmp7, label %if.then8, label %if.end11

if.then8:                                         ; preds = %if.end
  %call = tail call i8* @halide_malloc(i8* %user_context, i64 %sz) #17
  br label %if.end11

if.end11:                                         ; preds = %if.then8, %if.end
  %storemerge = phi i8* [ %call, %if.then8 ], [ null, %if.end ]
  store i8* %storemerge, i8** %ptr, align 8, !tbaa !164
  store i64 %sz, i64* %size, align 8, !tbaa !162
  br label %if.end13

if.end13:                                         ; preds = %if.end11, %entry
  %4 = phi i8* [ %storemerge, %if.end11 ], [ %1, %entry ]
  ret i8* %4
}

; Function Attrs: alwaysinline nounwind mustprogress
define linkonce void @pseudostack_free(i8* %user_context, i8* %ptr) #6 {
entry:
  %ptr1 = bitcast i8* %ptr to i8**
  %0 = load i8*, i8** %ptr1, align 8, !tbaa !164
  %tobool.not = icmp eq i8* %0, null
  br i1 %tobool.not, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %cumulative_size = getelementptr inbounds i8, i8* %ptr, i64 16
  %1 = bitcast i8* %cumulative_size to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !166
  %cmp = icmp ugt i64 %2, 16384
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  tail call void @halide_free(i8* %user_context, i8* nonnull %0) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  store i8* null, i8** %ptr1, align 8, !tbaa !164
  %size = getelementptr inbounds i8, i8* %ptr, i64 8
  %3 = bitcast i8* %size to i64*
  store i64 0, i64* %3, align 8, !tbaa !162
  %cumulative_size4 = getelementptr inbounds i8, i8* %ptr, i64 16
  %4 = bitcast i8* %cumulative_size4 to i64*
  store i64 0, i64* %4, align 8, !tbaa !166
  ret void
}

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @sqrt_f32(float %x) #7 {
  %y = tail call float @llvm.sqrt.f32(float %x) #9
  ret float %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32(float) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @sqrt_f64(double %x) #7 {
  %y = tail call double @llvm.sqrt.f64(double %x) #9
  ret double %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.sqrt.f64(double) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr half @sqrt_f16(half %x) #7 {
  %y = tail call half @llvm.sqrt.f16(half %x) #9
  ret half %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare half @llvm.sqrt.f16(half) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @sin_f32(float %x) #7 {
  %y = tail call float @llvm.sin.f32(float %x) #9
  ret float %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.sin.f32(float) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @sin_f64(double %x) #7 {
  %y = tail call double @llvm.sin.f64(double %x) #9
  ret double %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.sin.f64(double) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @cos_f32(float %x) #7 {
  %y = tail call float @llvm.cos.f32(float %x) #9
  ret float %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.cos.f32(float) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @cos_f64(double %x) #7 {
  %y = tail call double @llvm.cos.f64(double %x) #9
  ret double %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.cos.f64(double) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @exp_f32(float %x) #7 {
  %y = tail call float @llvm.exp.f32(float %x) #9
  ret float %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.exp.f32(float) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @exp_f64(double %x) #7 {
  %y = tail call double @llvm.exp.f64(double %x) #9
  ret double %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.exp.f64(double) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @log_f32(float %x) #7 {
  %y = tail call float @llvm.log.f32(float %x) #9
  ret float %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.log.f32(float) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @log_f64(double %x) #7 {
  %y = tail call double @llvm.log.f64(double %x) #9
  ret double %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.log.f64(double) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @abs_f32(float %x) #7 {
  %y = tail call float @llvm.fabs.f32(float %x) #9
  ret float %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @abs_f64(double %x) #7 {
  %y = tail call double @llvm.fabs.f64(double %x) #9
  ret double %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @floor_f32(float %x) #7 {
  %y = tail call float @llvm.floor.f32(float %x) #9
  ret float %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.floor.f32(float) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @floor_f64(double %x) #7 {
  %y = tail call double @llvm.floor.f64(double %x) #9
  ret double %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr half @floor_f16(half %x) #7 {
  %y = tail call half @llvm.floor.f16(half %x) #9
  ret half %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare half @llvm.floor.f16(half) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @ceil_f32(float %x) #7 {
  %y = tail call float @ceilf(float %x) #9
  ret float %y
}

; Function Attrs: nounwind readnone
declare float @ceilf(float) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @ceil_f64(double %x) #7 {
  %y = tail call double @ceil(double %x) #9
  ret double %y
}

; Function Attrs: nounwind readnone
declare double @ceil(double) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr half @ceil_f16(half %x) #7 {
  %y = tail call half @llvm.ceil.f16(half %x) #9
  ret half %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare half @llvm.ceil.f16(half) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @round_f32(float %x) #7 {
  %y = tail call float @llvm.nearbyint.f32(float %x) #9
  ret float %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.nearbyint.f32(float) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @round_f64(double %x) #7 {
  %y = tail call double @llvm.nearbyint.f64(double %x) #9
  ret double %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.nearbyint.f64(double) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr half @round_f16(half %x) #7 {
  %y = tail call half @llvm.nearbyint.f16(half %x) #9
  ret half %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare half @llvm.nearbyint.f16(half) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @trunc_f32(float %x) #7 {
  %y = tail call float @llvm.trunc.f32(float %x) #9
  ret float %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.trunc.f32(float) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @trunc_f64(double %x) #7 {
  %y = tail call double @llvm.trunc.f64(double %x) #9
  ret double %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.trunc.f64(double) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr half @trunc_f16(half %x) #7 {
  %y = tail call half @llvm.trunc.f16(half %x) #9
  ret half %y
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare half @llvm.trunc.f16(half) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @pow_f32(float %x, float %y) #7 {
  %z = tail call float @llvm.pow.f32(float %x, float %y) #9
  ret float %z
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.pow.f32(float, float) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @pow_f64(double %x, double %y) #7 {
  %z = tail call double @llvm.pow.f64(double %x, double %y) #9
  ret double %z
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.pow.f64(double, double) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @asin_f32(float %x) #7 {
  %y = tail call float @asinf(float %x) #9
  ret float %y
}

; Function Attrs: nounwind readnone
declare float @asinf(float) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @asin_f64(double %x) #7 {
  %y = tail call double @asin(double %x) #9
  ret double %y
}

; Function Attrs: nounwind readnone
declare double @asin(double) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @acos_f32(float %x) #7 {
  %y = tail call float @acosf(float %x) #9
  ret float %y
}

; Function Attrs: nounwind readnone
declare float @acosf(float) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @acos_f64(double %x) #7 {
  %y = tail call double @acos(double %x) #9
  ret double %y
}

; Function Attrs: nounwind readnone
declare double @acos(double) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @tan_f32(float %x) #7 {
  %y = tail call float @tanf(float %x) #9
  ret float %y
}

; Function Attrs: nounwind readnone
declare float @tanf(float) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @tan_f64(double %x) #7 {
  %y = tail call double @tan(double %x) #9
  ret double %y
}

; Function Attrs: nounwind readnone
declare double @tan(double) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @atan_f32(float %x) #7 {
  %y = tail call float @atanf(float %x) #9
  ret float %y
}

; Function Attrs: nounwind readnone
declare float @atanf(float) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @atan_f64(double %x) #7 {
  %y = tail call double @atan(double %x) #9
  ret double %y
}

; Function Attrs: nounwind readnone
declare double @atan(double) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @atan2_f32(float %y, float %x) #7 {
  %z = tail call float @atan2f(float %y, float %x) #9
  ret float %z
}

; Function Attrs: nounwind readnone
declare float @atan2f(float, float) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @atan2_f64(double %y, double %x) #7 {
  %z = tail call double @atan2(double %y, double %x) #9
  ret double %z
}

; Function Attrs: nounwind readnone
declare double @atan2(double, double) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @sinh_f32(float %x) #7 {
  %y = tail call float @sinhf(float %x) #9
  ret float %y
}

; Function Attrs: nounwind readnone
declare float @sinhf(float) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @sinh_f64(double %x) #7 {
  %y = tail call double @sinh(double %x) #9
  ret double %y
}

; Function Attrs: nounwind readnone
declare double @sinh(double) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @asinh_f32(float %x) #7 {
  %y = tail call float @asinhf(float %x) #9
  ret float %y
}

; Function Attrs: nounwind readnone
declare float @asinhf(float) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @asinh_f64(double %x) #7 {
  %y = tail call double @asinh(double %x) #9
  ret double %y
}

; Function Attrs: nounwind readnone
declare double @asinh(double) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @cosh_f32(float %x) #7 {
  %y = tail call float @coshf(float %x) #9
  ret float %y
}

; Function Attrs: nounwind readnone
declare float @coshf(float) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @cosh_f64(double %x) #7 {
  %y = tail call double @cosh(double %x) #9
  ret double %y
}

; Function Attrs: nounwind readnone
declare double @cosh(double) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @acosh_f32(float %x) #7 {
  %y = tail call float @acoshf(float %x) #9
  ret float %y
}

; Function Attrs: nounwind readnone
declare float @acoshf(float) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @acosh_f64(double %x) #7 {
  %y = tail call double @acosh(double %x) #9
  ret double %y
}

; Function Attrs: nounwind readnone
declare double @acosh(double) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @tanh_f32(float %x) #7 {
  %y = tail call float @tanhf(float %x) #9
  ret float %y
}

; Function Attrs: nounwind readnone
declare float @tanhf(float) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @tanh_f64(double %x) #7 {
  %y = tail call double @tanh(double %x) #9
  ret double %y
}

; Function Attrs: nounwind readnone
declare double @tanh(double) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @atanh_f32(float %x) #7 {
  %y = tail call float @atanhf(float %x) #9
  ret float %y
}

; Function Attrs: nounwind readnone
declare float @atanhf(float) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @atanh_f64(double %x) #7 {
  %y = tail call double @atanh(double %x) #9
  ret double %y
}

; Function Attrs: nounwind readnone
declare double @atanh(double) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @inf_f32() #7 {
  ret float 0x7FF0000000000000
}

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @neg_inf_f32() #7 {
  ret float 0xFFF0000000000000
}

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @nan_f32() #7 {
  ret float 0x7FF8000000000000
}

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @inf_f64() #7 {
  ret double 0x7FF0000000000000
}

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @neg_inf_f64() #7 {
  ret double 0xFFF0000000000000
}

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr double @nan_f64() #7 {
  ret double 0x7FF8000000000000
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_set_gpu_device(i32 %d) local_unnamed_addr #2 {
entry:
  store i32 %d, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !tbaa !73
  store i8 1, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !tbaa !15
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_get_gpu_device(i8* %user_context) local_unnamed_addr #4 {
entry:
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i, %entry
  %0 = atomicrmw volatile xchg i8* @_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE, i8 1 acquire
  %tobool.not.i = icmp eq i8 %0, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit, label %while.cond.i, !llvm.loop !167

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit: ; preds = %while.cond.i
  %1 = load i8, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !tbaa !15, !range !17
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.then, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge: ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %.pre = load i32, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !tbaa !73
  br label %if.end4

if.then:                                          ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0)) #17
  %tobool1.not = icmp eq i8* %call, null
  br i1 %tobool1.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %call3 = tail call i32 @atoi(i8* nonnull %call) #17
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %storemerge = phi i32 [ %call3, %if.then2 ], [ -1, %if.then ]
  store i32 %storemerge, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !tbaa !73
  store i8 1, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !tbaa !15
  br label %if.end4

if.end4:                                          ; preds = %if.end, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge
  %2 = phi i32 [ %.pre, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge ], [ %storemerge, %if.end ]
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE release, align 1
  ret i32 %2
}

; Function Attrs: nounwind
define weak i32 @halide_default_trace(i8* %user_context, %struct.halide_trace_event_t* %e) #4 {
entry:
  %0 = atomicrmw add i32* @_ZZ20halide_default_traceE3ids, i32 1 seq_cst
  %call = tail call i32 @halide_get_trace_file(i8* %user_context) #19
  %cmp = icmp sgt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %type = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4
  %lanes = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 2
  %1 = load i16, i16* %lanes, align 2, !tbaa !168
  %conv = zext i16 %1 to i32
  %bits.i = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 1
  %2 = load i8, i8* %bits.i, align 1, !tbaa !144
  %conv.i = zext i8 %2 to i32
  %add.i = add nuw nsw i32 %conv.i, 7
  %div.i = lshr i32 %add.i, 3
  %mul = mul nuw nsw i32 %div.i, %conv
  %dimensions = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 8
  %3 = load i32, i32* %dimensions, align 8, !tbaa !171
  %mul3 = shl i32 %3, 2
  %func = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 0
  %4 = load i8*, i8** %func, align 8, !tbaa !172
  %call4 = tail call i64 @strlen(i8* %4) #17
  %5 = trunc i64 %call4 to i32
  %conv5 = add i32 %5, 1
  %trace_tag = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 3
  %6 = load i8*, i8** %trace_tag, align 8, !tbaa !173
  %tobool.not = icmp eq i8* %6, null
  br i1 %tobool.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.then
  %call7 = tail call i64 @strlen(i8* nonnull %6) #17
  %7 = trunc i64 %call7 to i32
  %phi.cast = add i32 %7, 1
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.then
  %cond = phi i32 [ %phi.cast, %cond.true ], [ 1, %if.then ]
  %add11 = add i32 %mul3, 31
  %add12 = add i32 %add11, %mul
  %add13 = add i32 %add12, %conv5
  %add14 = add i32 %add13, %cond
  %and = and i32 %add14, -4
  %8 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !10
  %lock.i.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 0, i32 0
  %cmp.i.i = icmp ult i32 %and, 1048577
  %cursor.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 1
  %overage.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 2
  %arraydecay.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 3, i64 0
  br i1 %cmp.i.i, label %while.body.i.i.us.i, label %while.body.i.i.i

while.body.i.i.us.i:                              ; preds = %while.body.i.i.us.i.backedge, %cond.end
  %9 = load volatile i32, i32* %lock.i.i.i, align 4, !tbaa !174
  %and.i.i.us.i = and i32 %9, 1073741823
  %add.i.i.us.i = add nuw nsw i32 %and.i.i.us.i, 1
  %10 = cmpxchg i32* %lock.i.i.i, i32 %and.i.i.us.i, i32 %add.i.i.us.i seq_cst seq_cst
  %11 = extractvalue { i32, i1 } %10, 1
  br i1 %11, label %do.end.i.us.i, label %while.body.i.i.us.i.backedge

while.body.i.i.us.i.backedge:                     ; preds = %do.end.critedge.i.us.i, %if.then10.i.us.i, %if.then.i9.us.i, %while.body.i.i.us.i
  br label %while.body.i.i.us.i, !llvm.loop !176

do.end.i.us.i:                                    ; preds = %while.body.i.i.us.i
  %12 = atomicrmw add i32* %cursor.i.i, i32 %and seq_cst
  %add.i.us.i = add i32 %12, %and
  %cmp2.i.us.i = icmp ugt i32 %add.i.us.i, 1048576
  br i1 %cmp2.i.us.i, label %while.body.us.i, label %_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit

while.body.us.i:                                  ; preds = %do.end.i.us.i
  %13 = atomicrmw add i32* %overage.i.i, i32 %and seq_cst
  %14 = atomicrmw sub i32* %lock.i.i.i, i32 1 seq_cst
  br label %while.body.i.i5.us.i

while.body.i.i5.us.i:                             ; preds = %while.body.i.i5.us.i, %while.body.us.i
  %15 = atomicrmw or i32* %lock.i.i.i, i32 1073741824 seq_cst
  %16 = cmpxchg i32* %lock.i.i.i, i32 1073741824, i32 -2147483648 seq_cst seq_cst
  %17 = extractvalue { i32, i1 } %16, 1
  br i1 %17, label %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.us.i, label %while.body.i.i5.us.i

_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.us.i: ; preds = %while.body.i.i5.us.i
  %18 = load i32, i32* %cursor.i.i, align 4, !tbaa !177
  %tobool.not.i.us.i = icmp eq i32 %18, 0
  br i1 %tobool.not.i.us.i, label %do.end.critedge.i.us.i, label %if.then.i9.us.i

if.then.i9.us.i:                                  ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.us.i
  %19 = load i32, i32* %overage.i.i, align 4, !tbaa !179
  %sub.i.us.i = sub i32 %18, %19
  store i32 %sub.i.us.i, i32* %cursor.i.i, align 4, !tbaa !177
  %conv.i.us.i = zext i32 %sub.i.us.i to i64
  %call.i.us.i = tail call i64 @write(i32 %call, i8* nonnull %arraydecay.i.i, i64 %conv.i.us.i) #17
  %conv5.i.us.i = trunc i64 %call.i.us.i to i32
  %cmp.i8.us.i = icmp eq i32 %sub.i.us.i, %conv5.i.us.i
  store i32 0, i32* %cursor.i.i, align 4, !tbaa !177
  store i32 0, i32* %overage.i.i, align 4, !tbaa !179
  %20 = atomicrmw and i32* %lock.i.i.i, i32 2147483647 seq_cst
  br i1 %cmp.i8.us.i, label %while.body.i.i.us.i.backedge, label %if.then10.i.us.i

if.then10.i.us.i:                                 ; preds = %if.then.i9.us.i
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @.str.32, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %while.body.i.i.us.i.backedge

do.end.critedge.i.us.i:                           ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.us.i
  %21 = atomicrmw and i32* %lock.i.i.i, i32 2147483647 seq_cst
  br label %while.body.i.i.us.i.backedge

while.body.i.i.i:                                 ; preds = %while.body.i.i.i.backedge, %cond.end
  %22 = load volatile i32, i32* %lock.i.i.i, align 4, !tbaa !174
  %and.i.i.i = and i32 %22, 1073741823
  %add.i.i.i = add nuw nsw i32 %and.i.i.i, 1
  %23 = cmpxchg i32* %lock.i.i.i, i32 %and.i.i.i, i32 %add.i.i.i seq_cst seq_cst
  %24 = extractvalue { i32, i1 } %23, 1
  br i1 %24, label %if.then.i.i, label %while.body.i.i.i.backedge

while.body.i.i.i.backedge:                        ; preds = %do.end.critedge.i.i, %if.then10.i.i, %if.then.i9.i, %while.body.i.i.i
  br label %while.body.i.i.i, !llvm.loop !176

if.then.i.i:                                      ; preds = %while.body.i.i.i
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.31, i64 0, i64 0)) #17
  tail call void @abort() #17
  %25 = atomicrmw add i32* %cursor.i.i, i32 %and seq_cst
  %add.i.i400 = add i32 %25, %and
  %cmp2.i.i = icmp ugt i32 %add.i.i400, 1048576
  br i1 %cmp2.i.i, label %while.body.i, label %_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit

while.body.i:                                     ; preds = %if.then.i.i
  %26 = atomicrmw add i32* %overage.i.i, i32 %and seq_cst
  %27 = atomicrmw sub i32* %lock.i.i.i, i32 1 seq_cst
  br label %while.body.i.i5.i

while.body.i.i5.i:                                ; preds = %while.body.i.i5.i, %while.body.i
  %28 = atomicrmw or i32* %lock.i.i.i, i32 1073741824 seq_cst
  %29 = cmpxchg i32* %lock.i.i.i, i32 1073741824, i32 -2147483648 seq_cst seq_cst
  %30 = extractvalue { i32, i1 } %29, 1
  br i1 %30, label %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.i, label %while.body.i.i5.i

_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.i: ; preds = %while.body.i.i5.i
  %31 = load i32, i32* %cursor.i.i, align 4, !tbaa !177
  %tobool.not.i.i = icmp eq i32 %31, 0
  br i1 %tobool.not.i.i, label %do.end.critedge.i.i, label %if.then.i9.i

if.then.i9.i:                                     ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.i
  %32 = load i32, i32* %overage.i.i, align 4, !tbaa !179
  %sub.i.i = sub i32 %31, %32
  store i32 %sub.i.i, i32* %cursor.i.i, align 4, !tbaa !177
  %conv.i.i = zext i32 %sub.i.i to i64
  %call.i.i401 = tail call i64 @write(i32 %call, i8* nonnull %arraydecay.i.i, i64 %conv.i.i) #17
  %conv5.i.i = trunc i64 %call.i.i401 to i32
  %cmp.i8.i = icmp eq i32 %sub.i.i, %conv5.i.i
  store i32 0, i32* %cursor.i.i, align 4, !tbaa !177
  store i32 0, i32* %overage.i.i, align 4, !tbaa !179
  %33 = atomicrmw and i32* %lock.i.i.i, i32 2147483647 seq_cst
  br i1 %cmp.i8.i, label %while.body.i.i.i.backedge, label %if.then10.i.i

if.then10.i.i:                                    ; preds = %if.then.i9.i
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @.str.32, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %while.body.i.i.i.backedge

do.end.critedge.i.i:                              ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.i
  %34 = atomicrmw and i32* %lock.i.i.i, i32 2147483647 seq_cst
  br label %while.body.i.i.i.backedge

_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit: ; preds = %if.then.i.i, %do.end.i.us.i
  %.lcssa.i = phi i32 [ %12, %do.end.i.us.i ], [ %25, %if.then.i.i ]
  %idx.ext.i.i = zext i32 %.lcssa.i to i64
  %add.ptr.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 3, i64 %idx.ext.i.i
  %cmp16 = icmp ugt i32 %and, 4096
  br i1 %cmp16, label %if.then17, label %if.end

if.then17:                                        ; preds = %_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i404 = icmp eq i8* %call.i, null
  br i1 %tobool.not.i404, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %if.then17
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %if.then17
  %ref.tmp.sroa.12.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %if.then17 ]
  %conv.i407 = zext i32 %and to i64
  %call.i408 = tail call i8* @halide_uint64_to_string(i8* %call.i, i8* %ref.tmp.sroa.12.0, i64 %conv.i407, i32 1) #17
  %call.i411 = tail call i8* @halide_string_to_string(i8* %call.i408, i8* %ref.tmp.sroa.12.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #17
  br i1 %tobool.not.i404, label %if.then.i415, label %if.else.i421

if.then.i415:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* null, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.33, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EED2Ev.exit

if.else.i421:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i416 = ptrtoint i8* %call.i411 to i64
  %sub.ptr.rhs.cast.i.i417 = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i418 = sub i64 1, %sub.ptr.rhs.cast.i.i417
  %add.i.i419 = add i64 %sub.ptr.sub.i.i418, %sub.ptr.lhs.cast.i.i416
  %call.i.i420 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* null, i8* nonnull %call.i, i64 %add.i.i419) #17
  tail call void @halide_print(i8* null, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EED2Ev.exit: ; preds = %if.else.i421, %if.then.i415
  tail call void @free(i8* %call.i) #17
  br label %if.end

if.end:                                           ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EED2Ev.exit, %_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit
  %size = bitcast i8* %add.ptr.i.i to i32*
  store i32 %and, i32* %size, align 4, !tbaa !180
  %id = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 4
  %35 = bitcast i8* %id to i32*
  store i32 %0, i32* %35, align 4, !tbaa !182
  %36 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 8
  %37 = bitcast %struct.halide_type_t* %type to i32*
  %38 = bitcast i8* %36 to i32*
  %39 = load i32, i32* %37, align 8
  store i32 %39, i32* %38, align 4
  %event = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 5
  %40 = load i32, i32* %event, align 4, !tbaa !183
  %event22 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 12
  %41 = bitcast i8* %event22 to i32*
  store i32 %40, i32* %41, align 4, !tbaa !184
  %parent_id = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 6
  %42 = load i32, i32* %parent_id, align 8, !tbaa !185
  %parent_id23 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 16
  %43 = bitcast i8* %parent_id23 to i32*
  store i32 %42, i32* %43, align 4, !tbaa !186
  %value_index = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 7
  %44 = load i32, i32* %value_index, align 4, !tbaa !187
  %value_index24 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 20
  %45 = bitcast i8* %value_index24 to i32*
  store i32 %44, i32* %45, align 4, !tbaa !188
  %46 = load i32, i32* %dimensions, align 8, !tbaa !171
  %dimensions26 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 24
  %47 = bitcast i8* %dimensions26 to i32*
  store i32 %46, i32* %47, align 4, !tbaa !189
  %coordinates = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 2
  %48 = load i32*, i32** %coordinates, align 8, !tbaa !190
  %tobool27.not = icmp eq i32* %48, null
  br i1 %tobool27.not, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end
  %49 = bitcast i32* %48 to i8*
  %50 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 28
  %conv31 = zext i32 %mul3 to i64
  %call32 = tail call i8* @memcpy(i8* nonnull %50, i8* nonnull %49, i64 %conv31) #17
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end
  %value = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 1
  %51 = load i8*, i8** %value, align 8, !tbaa !191
  %tobool34.not = icmp eq i8* %51, null
  br i1 %tobool34.not, label %if.end40, label %if.then35

if.then35:                                        ; preds = %if.end33
  %52 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 28
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %47, align 4, !tbaa !189
  %idx.ext.i = sext i32 %54 to i64
  %add.ptr.i424 = getelementptr inbounds i32, i32* %53, i64 %idx.ext.i
  %55 = bitcast i32* %add.ptr.i424 to i8*
  %conv38 = zext i32 %mul to i64
  %call39 = tail call i8* @memcpy(i8* nonnull %55, i8* nonnull %51, i64 %conv38) #17
  br label %if.end40

if.end40:                                         ; preds = %if.then35, %if.end33
  %56 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 28
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %47, align 4, !tbaa !189
  %idx.ext.i.i425 = sext i32 %58 to i64
  %add.ptr.i.i426 = getelementptr inbounds i32, i32* %57, i64 %idx.ext.i.i425
  %59 = bitcast i32* %add.ptr.i.i426 to i8*
  %lanes.i = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 10
  %60 = bitcast i8* %lanes.i to i16*
  %61 = load i16, i16* %60, align 2, !tbaa !192
  %conv.i427 = zext i16 %61 to i32
  %62 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 9
  %63 = load i8, i8* %62, align 1, !tbaa !144
  %conv.i.i428 = zext i8 %63 to i32
  %add.i.i429 = add nuw nsw i32 %conv.i.i428, 7
  %div.i.i = lshr i32 %add.i.i429, 3
  %mul.i = mul nuw nsw i32 %div.i.i, %conv.i427
  %idx.ext.i430 = zext i32 %mul.i to i64
  %add.ptr.i431 = getelementptr inbounds i8, i8* %59, i64 %idx.ext.i430
  %64 = load i8*, i8** %func, align 8, !tbaa !172
  %conv43 = zext i32 %conv5 to i64
  %call44 = tail call i8* @memcpy(i8* nonnull %add.ptr.i431, i8* %64, i64 %conv43) #17
  %65 = load i32, i32* %47, align 4, !tbaa !189
  %idx.ext.i.i.i = sext i32 %65 to i64
  %add.ptr.i.i.i = getelementptr inbounds i32, i32* %57, i64 %idx.ext.i.i.i
  %66 = bitcast i32* %add.ptr.i.i.i to i8*
  %67 = load i16, i16* %60, align 2, !tbaa !192
  %conv.i.i432 = zext i16 %67 to i32
  %68 = load i8, i8* %62, align 1, !tbaa !144
  %conv.i.i.i = zext i8 %68 to i32
  %add.i.i.i433 = add nuw nsw i32 %conv.i.i.i, 7
  %div.i.i.i = lshr i32 %add.i.i.i433, 3
  %mul.i.i = mul nuw nsw i32 %div.i.i.i, %conv.i.i432
  %idx.ext.i.i434 = zext i32 %mul.i.i to i64
  %add.ptr.i.i435 = getelementptr inbounds i8, i8* %66, i64 %idx.ext.i.i434
  br label %while.cond.i437

while.cond.i437:                                  ; preds = %while.cond.i437, %if.end40
  %f.0.i = phi i8* [ %add.ptr.i.i435, %if.end40 ], [ %incdec.ptr.i, %while.cond.i437 ]
  %incdec.ptr.i = getelementptr inbounds i8, i8* %f.0.i, i64 1
  %69 = load i8, i8* %f.0.i, align 1, !tbaa !14
  %tobool.not.i436 = icmp eq i8 %69, 0
  br i1 %tobool.not.i436, label %_ZN21halide_trace_packet_t9trace_tagEv.exit, label %while.cond.i437, !llvm.loop !193

_ZN21halide_trace_packet_t9trace_tagEv.exit:      ; preds = %while.cond.i437
  %70 = load i8*, i8** %trace_tag, align 8, !tbaa !173
  %tobool47.not = icmp eq i8* %70, null
  %spec.select = select i1 %tobool47.not, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.10, i64 0, i64 0), i8* %70
  %conv53 = zext i32 %cond to i64
  %call54 = tail call i8* @memcpy(i8* nonnull %incdec.ptr.i, i8* %spec.select, i64 %conv53) #17
  %71 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !10
  fence seq_cst
  %lock.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %71, i64 0, i32 0, i32 0
  %72 = atomicrmw sub i32* %lock.i.i, i32 1 seq_cst
  %73 = load i32, i32* %event, align 4, !tbaa !183
  %cmp56 = icmp eq i32 %73, 9
  br i1 %cmp56, label %if.then57, label %if.end277

if.then57:                                        ; preds = %_ZN21halide_trace_packet_t9trace_tagEv.exit
  %74 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !10
  %lock.i.i438 = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %74, i64 0, i32 0, i32 0
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i, %if.then57
  %75 = atomicrmw or i32* %lock.i.i438, i32 1073741824 seq_cst
  %76 = cmpxchg i32* %lock.i.i438, i32 1073741824, i32 -2147483648 seq_cst seq_cst
  %77 = extractvalue { i32, i1 } %76, 1
  br i1 %77, label %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i, label %while.body.i.i

_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i: ; preds = %while.body.i.i
  %cursor.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %74, i64 0, i32 1
  %78 = load i32, i32* %cursor.i, align 4, !tbaa !177
  %tobool.not.i439 = icmp eq i32 %78, 0
  br i1 %tobool.not.i439, label %do.end.critedge.i, label %if.then.i442

if.then.i442:                                     ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i
  %overage.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %74, i64 0, i32 2
  %79 = load i32, i32* %overage.i, align 4, !tbaa !179
  %sub.i = sub i32 %78, %79
  store i32 %sub.i, i32* %cursor.i, align 4, !tbaa !177
  %arraydecay.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %74, i64 0, i32 3, i64 0
  %conv.i440 = zext i32 %sub.i to i64
  %call.i441 = tail call i64 @write(i32 %call, i8* nonnull %arraydecay.i, i64 %conv.i440) #17
  %conv5.i = trunc i64 %call.i441 to i32
  %cmp.i = icmp eq i32 %sub.i, %conv5.i
  store i32 0, i32* %cursor.i, align 4, !tbaa !177
  store i32 0, i32* %overage.i, align 4, !tbaa !179
  %80 = atomicrmw and i32* %lock.i.i438, i32 2147483647 seq_cst
  br i1 %cmp.i, label %if.end277, label %if.then10.i

if.then10.i:                                      ; preds = %if.then.i442
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @.str.32, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %if.end277

do.end.critedge.i:                                ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i
  %81 = atomicrmw and i32* %lock.i.i438, i32 2147483647 seq_cst
  br label %if.end277

if.else:                                          ; preds = %entry
  %call.i445 = tail call i8* @malloc(i64 4096) #17
  %tobool.not.i448 = icmp eq i8* %call.i445, null
  br i1 %tobool.not.i448, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit, label %if.then6.i451

if.then6.i451:                                    ; preds = %if.else
  %add.ptr.i449 = getelementptr inbounds i8, i8* %call.i445, i64 4095
  store i8 0, i8* %add.ptr.i449, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit: ; preds = %if.then6.i451, %if.else
  %ss.sroa.74.0 = phi i8* [ %add.ptr.i449, %if.then6.i451 ], [ null, %if.else ]
  %bits = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 1
  %82 = load i8, i8* %bits, align 1, !tbaa !194
  %conv60 = zext i8 %82 to i32
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit
  %print_bits.0 = phi i32 [ 8, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit ], [ %shl, %while.cond ]
  %cmp61 = icmp slt i32 %print_bits.0, %conv60
  %shl = shl i32 %print_bits.0, 1
  br i1 %cmp61, label %while.cond, label %do.body, !llvm.loop !195

do.body:                                          ; preds = %while.cond
  %cmp62 = icmp slt i32 %print_bits.0, 65
  br i1 %cmp62, label %do.end, label %if.then63

if.then63:                                        ; preds = %do.body
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @.str.2.11, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.end

do.end:                                           ; preds = %if.then63, %do.body
  %event65 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 5
  %83 = load i32, i32* %event65, align 4, !tbaa !183
  %cmp66 = icmp slt i32 %83, 2
  %idxprom = zext i32 %83 to i64
  %arrayidx = getelementptr inbounds [11 x i8*], [11 x i8*]* @__const.halide_default_trace.event_types, i64 0, i64 %idxprom
  %84 = load i8*, i8** %arrayidx, align 8, !tbaa !10
  %call.i456 = tail call i8* @halide_string_to_string(i8* %call.i445, i8* %ss.sroa.74.0, i8* %84) #17
  %call.i459 = tail call i8* @halide_string_to_string(i8* %call.i456, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #17
  %func70 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 0
  %85 = load i8*, i8** %func70, align 8, !tbaa !172
  %call.i462 = tail call i8* @halide_string_to_string(i8* %call.i459, i8* %ss.sroa.74.0, i8* %85) #17
  %call.i465 = tail call i8* @halide_string_to_string(i8* %call.i462, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #17
  %value_index73 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 7
  %86 = load i32, i32* %value_index73, align 4, !tbaa !187
  %conv.i468 = sext i32 %86 to i64
  %call.i469 = tail call i8* @halide_int64_to_string(i8* %call.i465, i8* %ss.sroa.74.0, i64 %conv.i468, i32 1) #17
  %call.i472 = tail call i8* @halide_string_to_string(i8* %call.i469, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)) #17
  %lanes77 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 2
  %87 = load i16, i16* %lanes77, align 2, !tbaa !168
  %cmp79 = icmp ugt i16 %87, 1
  br i1 %cmp79, label %if.then80, label %if.end82

if.then80:                                        ; preds = %do.end
  %call.i475 = tail call i8* @halide_string_to_string(i8* %call.i472, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #17
  br label %if.end82

if.end82:                                         ; preds = %if.then80, %do.end
  %ss.sroa.7.0 = phi i8* [ %call.i475, %if.then80 ], [ %call.i472, %do.end ]
  %dimensions83 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 8
  %88 = load i32, i32* %dimensions83, align 8, !tbaa !171
  %cmp84660 = icmp sgt i32 %88, 0
  br i1 %cmp84660, label %if.end100.peel, label %for.cond.cleanup

if.end100.peel:                                   ; preds = %if.end82
  %coordinates101 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 2
  %.pre = load i32*, i32** %coordinates101, align 8, !tbaa !190
  %.pre673 = load i32, i32* %.pre, align 4, !tbaa !73
  %conv.i484.peel = sext i32 %.pre673 to i64
  %call.i485.peel = tail call i8* @halide_int64_to_string(i8* %ss.sroa.7.0, i8* %ss.sroa.74.0, i64 %conv.i484.peel, i32 1) #17
  %89 = load i32, i32* %dimensions83, align 8, !tbaa !171
  %cmp84.peel = icmp sgt i32 %89, 1
  br i1 %cmp84.peel, label %if.then86, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %if.end100, %if.end100.peel, %if.end82
  %ss.sroa.7.1.lcssa = phi i8* [ %ss.sroa.7.0, %if.end82 ], [ %call.i485.peel, %if.end100.peel ], [ %call.i485, %if.end100 ]
  %90 = load i16, i16* %lanes77, align 2, !tbaa !168
  %cmp108 = icmp ugt i16 %90, 1
  %.sink684 = select i1 %cmp108, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)
  %call.i491 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.1.lcssa, i8* %ss.sroa.74.0, i8* %.sink684) #17
  br i1 %cmp66, label %if.then115, label %if.end263

if.then86:                                        ; preds = %if.end100, %if.end100.peel
  %indvars.iv670 = phi i64 [ %indvars.iv.next671, %if.end100 ], [ 1, %if.end100.peel ]
  %ss.sroa.7.1661 = phi i8* [ %call.i485, %if.end100 ], [ %call.i485.peel, %if.end100.peel ]
  %91 = load i16, i16* %lanes77, align 2, !tbaa !168
  %cmp90 = icmp ugt i16 %91, 1
  br i1 %cmp90, label %land.lhs.true, label %if.else97

land.lhs.true:                                    ; preds = %if.then86
  %conv89 = zext i16 %91 to i32
  %92 = trunc i64 %indvars.iv670 to i32
  %rem = urem i32 %92, %conv89
  %cmp94 = icmp eq i32 %rem, 0
  br i1 %cmp94, label %if.end100, label %if.else97

if.else97:                                        ; preds = %land.lhs.true, %if.then86
  br label %if.end100

if.end100:                                        ; preds = %if.else97, %land.lhs.true
  %.sink = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), %if.else97 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), %land.lhs.true ]
  %call.i478 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.1661, i8* %ss.sroa.74.0, i8* %.sink) #17
  %93 = load i32*, i32** %coordinates101, align 8, !tbaa !190
  %arrayidx103 = getelementptr inbounds i32, i32* %93, i64 %indvars.iv670
  %94 = load i32, i32* %arrayidx103, align 4, !tbaa !73
  %conv.i484 = sext i32 %94 to i64
  %call.i485 = tail call i8* @halide_int64_to_string(i8* %call.i478, i8* %ss.sroa.74.0, i64 %conv.i484, i32 1) #17
  %indvars.iv.next671 = add nuw nsw i64 %indvars.iv670, 1
  %95 = load i32, i32* %dimensions83, align 8, !tbaa !171
  %96 = sext i32 %95 to i64
  %cmp84 = icmp slt i64 %indvars.iv.next671, %96
  br i1 %cmp84, label %if.then86, label %for.cond.cleanup, !llvm.loop !196

if.then115:                                       ; preds = %for.cond.cleanup
  %97 = load i16, i16* %lanes77, align 2, !tbaa !168
  %cmp119 = icmp ugt i16 %97, 1
  %.sink685 = select i1 %cmp119, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0)
  %call.i497 = tail call i8* @halide_string_to_string(i8* %call.i491, i8* %ss.sroa.74.0, i8* %.sink685) #17
  %98 = load i16, i16* %lanes77, align 2, !tbaa !168
  %cmp130655.not = icmp eq i16 %98, 0
  br i1 %cmp130655.not, label %if.end263, label %if.end136.peel

if.end136.peel:                                   ; preds = %if.then115
  %code = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 0
  %value245 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 1
  %99 = bitcast i8** %value245 to i8***
  %cmp214 = icmp sgt i32 %print_bits.0, 15
  %100 = bitcast i8** %value245 to i16**
  %101 = bitcast i8** %value245 to float**
  %102 = bitcast i8** %value245 to double**
  %103 = bitcast i8** %value245 to i32**
  %104 = bitcast i8** %value245 to i64**
  %.pre674 = load i8, i8* %code, align 8, !tbaa !198
  switch i8 %.pre674, label %for.inc253.peel [
    i8 0, label %if.then140.peel
    i8 1, label %if.then176.peel
    i8 2, label %do.body213.peel
    i8 3, label %if.then244.peel
  ]

if.then244.peel:                                  ; preds = %if.end136.peel
  %105 = load i8**, i8*** %99, align 8, !tbaa !191
  %106 = load i8*, i8** %105, align 8, !tbaa !10
  %call.i543.peel = tail call i8* @halide_pointer_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i8* %106) #17
  br label %for.inc253.peel

do.body213.peel:                                  ; preds = %if.end136.peel
  br i1 %cmp214, label %do.end218.peel, label %if.then215.peel

if.then215.peel:                                  ; preds = %do.body213.peel
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @.str.24, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.end218.peel

do.end218.peel:                                   ; preds = %if.then215.peel, %do.body213.peel
  switch i32 %print_bits.0, label %if.else232.peel [
    i32 32, label %if.then220.peel
    i32 16, label %if.then227.peel
  ]

if.then227.peel:                                  ; preds = %do.end218.peel
  %107 = load i16*, i16** %100, align 8, !tbaa !191
  %108 = load i16, i16* %107, align 2, !tbaa !154
  %call.i535.peel = tail call double @halide_float16_bits_to_double(i16 zeroext %108) #17
  %call2.i.peel = tail call i8* @halide_double_to_string(i8* %call.i497, i8* %ss.sroa.74.0, double %call.i535.peel, i32 1) #17
  br label %for.inc253.peel

if.then220.peel:                                  ; preds = %do.end218.peel
  %109 = load float*, float** %101, align 8, !tbaa !191
  %110 = load float, float* %109, align 4, !tbaa !199
  %conv.i533.peel = fpext float %110 to double
  %call.i534.peel = tail call i8* @halide_double_to_string(i8* %call.i497, i8* %ss.sroa.74.0, double %conv.i533.peel, i32 0) #17
  br label %for.inc253.peel

if.else232.peel:                                  ; preds = %do.end218.peel
  %111 = load double*, double** %102, align 8, !tbaa !191
  %112 = load double, double* %111, align 8, !tbaa !201
  %call.i540.peel = tail call i8* @halide_double_to_string(i8* %call.i497, i8* %ss.sroa.74.0, double %112, i32 1) #17
  br label %for.inc253.peel

if.then176.peel:                                  ; preds = %if.end136.peel
  switch i32 %print_bits.0, label %if.else199.peel [
    i32 8, label %if.then178.peel
    i32 16, label %if.then186.peel
    i32 32, label %if.then194.peel
  ]

if.then194.peel:                                  ; preds = %if.then176.peel
  %113 = load i32*, i32** %103, align 8, !tbaa !191
  %114 = load i32, i32* %113, align 4, !tbaa !73
  %conv.i526.peel = zext i32 %114 to i64
  %call.i527.peel = tail call i8* @halide_uint64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i526.peel, i32 1) #17
  br label %for.inc253.peel

if.then186.peel:                                  ; preds = %if.then176.peel
  %115 = load i16*, i16** %100, align 8, !tbaa !191
  %116 = load i16, i16* %115, align 2, !tbaa !154
  %conv.i522.peel = zext i16 %116 to i64
  %call.i523.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i522.peel, i32 1) #17
  br label %for.inc253.peel

if.then178.peel:                                  ; preds = %if.then176.peel
  %117 = load i8*, i8** %value245, align 8, !tbaa !191
  %118 = load i8, i8* %117, align 1, !tbaa !14
  %conv.i518.peel = zext i8 %118 to i64
  %call.i519.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i518.peel, i32 1) #17
  br label %for.inc253.peel

if.else199.peel:                                  ; preds = %if.then176.peel
  %119 = load i64*, i64** %104, align 8, !tbaa !191
  %120 = load i64, i64* %119, align 8, !tbaa !110
  %call.i530.peel = tail call i8* @halide_uint64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %120, i32 1) #17
  br label %for.inc253.peel

if.then140.peel:                                  ; preds = %if.end136.peel
  switch i32 %print_bits.0, label %if.else163.peel [
    i32 8, label %if.then142.peel
    i32 16, label %if.then150.peel
    i32 32, label %if.then158.peel
  ]

if.then158.peel:                                  ; preds = %if.then140.peel
  %121 = load i32*, i32** %103, align 8, !tbaa !191
  %122 = load i32, i32* %121, align 4, !tbaa !73
  %conv.i511.peel = sext i32 %122 to i64
  %call.i512.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i511.peel, i32 1) #17
  br label %for.inc253.peel

if.then150.peel:                                  ; preds = %if.then140.peel
  %123 = load i16*, i16** %100, align 8, !tbaa !191
  %124 = load i16, i16* %123, align 2, !tbaa !154
  %conv.i507.peel = sext i16 %124 to i64
  %call.i508.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i507.peel, i32 1) #17
  br label %for.inc253.peel

if.then142.peel:                                  ; preds = %if.then140.peel
  %125 = load i8*, i8** %value245, align 8, !tbaa !191
  %126 = load i8, i8* %125, align 1, !tbaa !14
  %conv.i503.peel = sext i8 %126 to i64
  %call.i504.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i503.peel, i32 1) #17
  br label %for.inc253.peel

if.else163.peel:                                  ; preds = %if.then140.peel
  %127 = load i64*, i64** %104, align 8, !tbaa !191
  %128 = load i64, i64* %127, align 8, !tbaa !110
  %call.i515.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %128, i32 1) #17
  br label %for.inc253.peel

for.inc253.peel:                                  ; preds = %if.else163.peel, %if.then142.peel, %if.then150.peel, %if.then158.peel, %if.else199.peel, %if.then178.peel, %if.then186.peel, %if.then194.peel, %if.else232.peel, %if.then220.peel, %if.then227.peel, %if.then244.peel, %if.end136.peel
  %ss.sroa.7.7.peel = phi i8* [ %call.i497, %if.end136.peel ], [ %call.i543.peel, %if.then244.peel ], [ %call.i540.peel, %if.else232.peel ], [ %call2.i.peel, %if.then227.peel ], [ %call.i534.peel, %if.then220.peel ], [ %call.i530.peel, %if.else199.peel ], [ %call.i527.peel, %if.then194.peel ], [ %call.i523.peel, %if.then186.peel ], [ %call.i519.peel, %if.then178.peel ], [ %call.i515.peel, %if.else163.peel ], [ %call.i512.peel, %if.then158.peel ], [ %call.i508.peel, %if.then150.peel ], [ %call.i504.peel, %if.then142.peel ]
  %129 = load i16, i16* %lanes77, align 2, !tbaa !168
  %cmp130.peel = icmp ugt i16 %129, 1
  br i1 %cmp130.peel, label %if.end136, label %if.end263

for.cond.cleanup131:                              ; preds = %for.inc253
  %cmp259 = icmp ugt i16 %155, 1
  br i1 %cmp259, label %if.then260, label %if.end263

if.end136:                                        ; preds = %for.inc253, %for.inc253.peel
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc253 ], [ 1, %for.inc253.peel ]
  %ss.sroa.7.5656 = phi i8* [ %ss.sroa.7.7, %for.inc253 ], [ %ss.sroa.7.7.peel, %for.inc253.peel ]
  %call.i500 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.5656, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0)) #17
  %130 = load i8, i8* %code, align 8, !tbaa !198
  switch i8 %130, label %for.inc253 [
    i8 0, label %if.then140
    i8 1, label %if.then176
    i8 2, label %do.body213
    i8 3, label %if.then244
  ]

if.then140:                                       ; preds = %if.end136
  switch i32 %print_bits.0, label %if.else163 [
    i32 8, label %if.then142
    i32 16, label %if.then150
    i32 32, label %if.then158
  ]

if.then142:                                       ; preds = %if.then140
  %131 = load i8*, i8** %value245, align 8, !tbaa !191
  %arrayidx145 = getelementptr inbounds i8, i8* %131, i64 %indvars.iv
  %132 = load i8, i8* %arrayidx145, align 1, !tbaa !14
  %conv.i503 = sext i8 %132 to i64
  %call.i504 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i503, i32 1) #17
  br label %for.inc253

if.then150:                                       ; preds = %if.then140
  %133 = load i16*, i16** %100, align 8, !tbaa !191
  %arrayidx153 = getelementptr inbounds i16, i16* %133, i64 %indvars.iv
  %134 = load i16, i16* %arrayidx153, align 2, !tbaa !154
  %conv.i507 = sext i16 %134 to i64
  %call.i508 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i507, i32 1) #17
  br label %for.inc253

if.then158:                                       ; preds = %if.then140
  %135 = load i32*, i32** %103, align 8, !tbaa !191
  %arrayidx161 = getelementptr inbounds i32, i32* %135, i64 %indvars.iv
  %136 = load i32, i32* %arrayidx161, align 4, !tbaa !73
  %conv.i511 = sext i32 %136 to i64
  %call.i512 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i511, i32 1) #17
  br label %for.inc253

if.else163:                                       ; preds = %if.then140
  %137 = load i64*, i64** %104, align 8, !tbaa !191
  %arrayidx166 = getelementptr inbounds i64, i64* %137, i64 %indvars.iv
  %138 = load i64, i64* %arrayidx166, align 8, !tbaa !110
  %call.i515 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %138, i32 1) #17
  br label %for.inc253

if.then176:                                       ; preds = %if.end136
  switch i32 %print_bits.0, label %if.else199 [
    i32 8, label %if.then178
    i32 16, label %if.then186
    i32 32, label %if.then194
  ]

if.then178:                                       ; preds = %if.then176
  %139 = load i8*, i8** %value245, align 8, !tbaa !191
  %arrayidx181 = getelementptr inbounds i8, i8* %139, i64 %indvars.iv
  %140 = load i8, i8* %arrayidx181, align 1, !tbaa !14
  %conv.i518 = zext i8 %140 to i64
  %call.i519 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i518, i32 1) #17
  br label %for.inc253

if.then186:                                       ; preds = %if.then176
  %141 = load i16*, i16** %100, align 8, !tbaa !191
  %arrayidx189 = getelementptr inbounds i16, i16* %141, i64 %indvars.iv
  %142 = load i16, i16* %arrayidx189, align 2, !tbaa !154
  %conv.i522 = zext i16 %142 to i64
  %call.i523 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i522, i32 1) #17
  br label %for.inc253

if.then194:                                       ; preds = %if.then176
  %143 = load i32*, i32** %103, align 8, !tbaa !191
  %arrayidx197 = getelementptr inbounds i32, i32* %143, i64 %indvars.iv
  %144 = load i32, i32* %arrayidx197, align 4, !tbaa !73
  %conv.i526 = zext i32 %144 to i64
  %call.i527 = tail call i8* @halide_uint64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i526, i32 1) #17
  br label %for.inc253

if.else199:                                       ; preds = %if.then176
  %145 = load i64*, i64** %104, align 8, !tbaa !191
  %arrayidx202 = getelementptr inbounds i64, i64* %145, i64 %indvars.iv
  %146 = load i64, i64* %arrayidx202, align 8, !tbaa !110
  %call.i530 = tail call i8* @halide_uint64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %146, i32 1) #17
  br label %for.inc253

do.body213:                                       ; preds = %if.end136
  br i1 %cmp214, label %do.end218, label %if.then215

if.then215:                                       ; preds = %do.body213
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @.str.24, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.end218

do.end218:                                        ; preds = %if.then215, %do.body213
  switch i32 %print_bits.0, label %if.else232 [
    i32 32, label %if.then220
    i32 16, label %if.then227
  ]

if.then220:                                       ; preds = %do.end218
  %147 = load float*, float** %101, align 8, !tbaa !191
  %arrayidx223 = getelementptr inbounds float, float* %147, i64 %indvars.iv
  %148 = load float, float* %arrayidx223, align 4, !tbaa !199
  %conv.i533 = fpext float %148 to double
  %call.i534 = tail call i8* @halide_double_to_string(i8* %call.i500, i8* %ss.sroa.74.0, double %conv.i533, i32 0) #17
  br label %for.inc253

if.then227:                                       ; preds = %do.end218
  %149 = load i16*, i16** %100, align 8, !tbaa !191
  %arrayidx230 = getelementptr inbounds i16, i16* %149, i64 %indvars.iv
  %150 = load i16, i16* %arrayidx230, align 2, !tbaa !154
  %call.i535 = tail call double @halide_float16_bits_to_double(i16 zeroext %150) #17
  %call2.i = tail call i8* @halide_double_to_string(i8* %call.i500, i8* %ss.sroa.74.0, double %call.i535, i32 1) #17
  br label %for.inc253

if.else232:                                       ; preds = %do.end218
  %151 = load double*, double** %102, align 8, !tbaa !191
  %arrayidx235 = getelementptr inbounds double, double* %151, i64 %indvars.iv
  %152 = load double, double* %arrayidx235, align 8, !tbaa !201
  %call.i540 = tail call i8* @halide_double_to_string(i8* %call.i500, i8* %ss.sroa.74.0, double %152, i32 1) #17
  br label %for.inc253

if.then244:                                       ; preds = %if.end136
  %153 = load i8**, i8*** %99, align 8, !tbaa !191
  %arrayidx247 = getelementptr inbounds i8*, i8** %153, i64 %indvars.iv
  %154 = load i8*, i8** %arrayidx247, align 8, !tbaa !10
  %call.i543 = tail call i8* @halide_pointer_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i8* %154) #17
  br label %for.inc253

for.inc253:                                       ; preds = %if.then244, %if.else232, %if.then227, %if.then220, %if.else199, %if.then194, %if.then186, %if.then178, %if.else163, %if.then158, %if.then150, %if.then142, %if.end136
  %ss.sroa.7.7 = phi i8* [ %call.i500, %if.end136 ], [ %call.i543, %if.then244 ], [ %call.i540, %if.else232 ], [ %call2.i, %if.then227 ], [ %call.i534, %if.then220 ], [ %call.i530, %if.else199 ], [ %call.i527, %if.then194 ], [ %call.i523, %if.then186 ], [ %call.i519, %if.then178 ], [ %call.i515, %if.else163 ], [ %call.i512, %if.then158 ], [ %call.i508, %if.then150 ], [ %call.i504, %if.then142 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %155 = load i16, i16* %lanes77, align 2, !tbaa !168
  %156 = zext i16 %155 to i64
  %cmp130 = icmp ult i64 %indvars.iv.next, %156
  br i1 %cmp130, label %if.end136, label %for.cond.cleanup131, !llvm.loop !203

if.then260:                                       ; preds = %for.cond.cleanup131
  %call.i546 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.7, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0)) #17
  br label %if.end263

if.end263:                                        ; preds = %if.then260, %for.cond.cleanup131, %for.inc253.peel, %if.then115, %for.cond.cleanup
  %ss.sroa.7.8 = phi i8* [ %call.i546, %if.then260 ], [ %ss.sroa.7.7, %for.cond.cleanup131 ], [ %call.i491, %for.cond.cleanup ], [ %ss.sroa.7.7.peel, %for.inc253.peel ], [ %call.i497, %if.then115 ]
  %trace_tag264 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 3
  %157 = load i8*, i8** %trace_tag264, align 8, !tbaa !173
  %tobool265.not = icmp eq i8* %157, null
  br i1 %tobool265.not, label %if.end274, label %land.lhs.true266

land.lhs.true266:                                 ; preds = %if.end263
  %158 = load i8, i8* %157, align 1, !tbaa !14
  %tobool268.not = icmp eq i8 %158, 0
  br i1 %tobool268.not, label %if.end274, label %if.then269

if.then269:                                       ; preds = %land.lhs.true266
  %call.i549 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.8, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0)) #17
  %159 = load i8*, i8** %trace_tag264, align 8, !tbaa !173
  %call.i552 = tail call i8* @halide_string_to_string(i8* %call.i549, i8* %ss.sroa.74.0, i8* %159) #17
  %call.i555 = tail call i8* @halide_string_to_string(i8* %call.i552, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0)) #17
  br label %if.end274

if.end274:                                        ; preds = %if.then269, %land.lhs.true266, %if.end263
  %ss.sroa.7.9 = phi i8* [ %ss.sroa.7.8, %if.end263 ], [ %ss.sroa.7.8, %land.lhs.true266 ], [ %call.i555, %if.then269 ]
  %call.i558 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.9, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #17
  br label %while.cond.i560

while.cond.i560:                                  ; preds = %while.cond.i560, %if.end274
  %160 = atomicrmw volatile xchg i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE, i8 1 acquire
  %tobool.not.i559 = icmp eq i8 %160, 0
  br i1 %tobool.not.i559, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit, label %while.cond.i560, !llvm.loop !204

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit: ; preds = %while.cond.i560
  br i1 %tobool.not.i448, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.33, i64 0, i64 0)) #17
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE release, align 1
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.33, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %sub.ptr.lhs.cast.i.i563 = ptrtoint i8* %call.i558 to i64
  %sub.ptr.rhs.cast.i.i564 = ptrtoint i8* %call.i445 to i64
  %sub.ptr.sub.i.i565 = sub i64 1, %sub.ptr.rhs.cast.i.i564
  %add.i.i566 = add i64 %sub.ptr.sub.i.i565, %sub.ptr.lhs.cast.i.i563
  %call.i.i567 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i445, i64 %add.i.i566) #17
  tail call void @halide_print(i8* %user_context, i8* nonnull %call.i445) #17
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE release, align 1
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i445, i64 %add.i.i566) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i445) #17
  br label %if.end277

if.end277:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EED2Ev.exit, %do.end.critedge.i, %if.then10.i, %if.then.i442, %_ZN21halide_trace_packet_t9trace_tagEv.exit
  ret i32 %0
}

; Function Attrs: nounwind
define weak i32 @halide_get_trace_file(i8* %user_context) local_unnamed_addr #4 {
entry:
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i, %entry
  %0 = atomicrmw volatile xchg i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE, i8 1 acquire
  %tobool.not.i = icmp eq i8 %0, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit, label %while.cond.i, !llvm.loop !204

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit: ; preds = %while.cond.i
  %1 = load i32, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !tbaa !73
  %cmp = icmp slt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end11

if.then:                                          ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0)) #17
  %tobool.not = icmp eq i8* %call, null
  br i1 %tobool.not, label %if.else, label %if.then1

if.then1:                                         ; preds = %if.then
  %call2 = tail call i8* @fopen(i8* nonnull %call, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0)) #17
  %tobool3.not = icmp eq i8* %call2, null
  br i1 %tobool3.not, label %if.then4, label %do.end

if.then4:                                         ; preds = %if.then1
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([146 x i8], [146 x i8]* @.str.30, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.end

do.end:                                           ; preds = %if.then4, %if.then1
  %call5 = tail call i32 @fileno(i8* %call2) #17
  tail call void @halide_set_trace_file(i32 %call5) #19
  store i8* %call2, i8** @_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE, align 8, !tbaa !10
  %2 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !10
  %tobool6.not = icmp eq %"class.Halide::Runtime::Internal::TraceBuffer"* %2, null
  br i1 %tobool6.not, label %if.then7, label %if.end11

if.then7:                                         ; preds = %do.end
  %call8 = tail call i8* @malloc(i64 1048588) #17
  store i8* %call8, i8** bitcast (%"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE to i8**), align 8, !tbaa !10
  %cursor.i = getelementptr inbounds i8, i8* %call8, i64 4
  %3 = bitcast i8* %cursor.i to i32*
  store i32 0, i32* %3, align 4, !tbaa !177
  %overage.i = getelementptr inbounds i8, i8* %call8, i64 8
  %4 = bitcast i8* %overage.i to i32*
  store i32 0, i32* %4, align 4, !tbaa !179
  %lock.i.i = bitcast i8* %call8 to i32*
  store volatile i32 0, i32* %lock.i.i, align 4, !tbaa !174
  br label %if.end11

if.else:                                          ; preds = %if.then
  tail call void @halide_set_trace_file(i32 0) #19
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then7, %do.end, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %5 = load i32, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !tbaa !73
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE release, align 1
  ret i32 %5
}

declare i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #1

declare i8* @fopen(i8*, i8*) local_unnamed_addr #1

declare i32 @fileno(i8*) local_unnamed_addr #1

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_set_trace_file(i32 %fd) local_unnamed_addr #2 {
entry:
  store i32 %fd, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !tbaa !73
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_trace_cleanup() #0 {
entry:
  %call = tail call i32 @halide_shutdown_trace() #19
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_shutdown_trace() local_unnamed_addr #0 {
entry:
  %0 = load i8*, i8** @_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE, align 8, !tbaa !10
  %tobool.not = icmp eq i8* %0, null
  br i1 %tobool.not, label %return, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 @fclose(i8* nonnull %0) #17
  store i32 0, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !tbaa !73
  store i8 0, i8* @_ZN6Halide7Runtime8Internal29halide_trace_file_initializedE, align 1, !tbaa !15
  store i8* null, i8** @_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE, align 8, !tbaa !10
  %1 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !10
  %tobool1.not = icmp eq %"class.Halide::Runtime::Internal::TraceBuffer"* %1, null
  br i1 %tobool1.not, label %return, label %if.then2

if.then2:                                         ; preds = %if.then
  %2 = bitcast %"class.Halide::Runtime::Internal::TraceBuffer"* %1 to i8*
  tail call void @free(i8* nonnull %2) #17
  br label %return

return:                                           ; preds = %if.then2, %if.then, %entry
  %retval.0 = phi i32 [ %call, %if.then2 ], [ %call, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

declare i32 @fclose(i8*) local_unnamed_addr #1

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, %struct.halide_trace_event_t*)* @halide_set_custom_trace(i32 (i8*, %struct.halide_trace_event_t*)* %t) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, %struct.halide_trace_event_t*)*, i32 (i8*, %struct.halide_trace_event_t*)** @_ZN6Halide7Runtime8Internal19halide_custom_traceE, align 8, !tbaa !10
  store i32 (i8*, %struct.halide_trace_event_t*)* %t, i32 (i8*, %struct.halide_trace_event_t*)** @_ZN6Halide7Runtime8Internal19halide_custom_traceE, align 8, !tbaa !10
  ret i32 (i8*, %struct.halide_trace_event_t*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_trace(i8* %user_context, %struct.halide_trace_event_t* %e) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, %struct.halide_trace_event_t*)*, i32 (i8*, %struct.halide_trace_event_t*)** @_ZN6Halide7Runtime8Internal19halide_custom_traceE, align 8, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, %struct.halide_trace_event_t* %e) #17
  ret i32 %call
}

; Function Attrs: nounwind
define weak i32 @halide_trace_helper(i8* %user_context, i8* %func, i8* %value, i32* %coords, i32 %type_code, i32 %type_bits, i32 %type_lanes, i32 %code, i32 %parent_id, i32 %value_index, i32 %dimensions, i8* %trace_tag) local_unnamed_addr #4 {
entry:
  %event = alloca %struct.halide_trace_event_t, align 8
  %0 = bitcast %struct.halide_trace_event_t* %event to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #18
  %code.i.i = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 4, i32 0
  %bits.i.i = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 4, i32 1
  %lanes.i.i = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 4, i32 2
  %func1 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 0
  store i8* %func, i8** %func1, align 8, !tbaa !172
  %value2 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 1
  store i8* %value, i8** %value2, align 8, !tbaa !191
  %coordinates = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 2
  store i32* %coords, i32** %coordinates, align 8, !tbaa !190
  %trace_tag3 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 3
  store i8* %trace_tag, i8** %trace_tag3, align 8, !tbaa !173
  %conv = trunc i32 %type_code to i8
  store i8 %conv, i8* %code.i.i, align 8, !tbaa !198
  %conv5 = trunc i32 %type_bits to i8
  store i8 %conv5, i8* %bits.i.i, align 1, !tbaa !194
  %conv7 = trunc i32 %type_lanes to i16
  store i16 %conv7, i16* %lanes.i.i, align 2, !tbaa !168
  %event9 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 5
  store i32 %code, i32* %event9, align 4, !tbaa !183
  %parent_id10 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 6
  store i32 %parent_id, i32* %parent_id10, align 8, !tbaa !185
  %value_index11 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 7
  store i32 %value_index, i32* %value_index11, align 4, !tbaa !187
  %dimensions12 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 8
  store i32 %dimensions, i32* %dimensions12, align 8, !tbaa !171
  %call = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %0, i64 56) #17
  %add = add nsw i32 %type_bits, 7
  %div = sdiv i32 %add, 8
  %mul = mul nsw i32 %div, %type_lanes
  %conv13 = sext i32 %mul to i64
  %call14 = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* %value, i64 %conv13) #17
  %1 = bitcast i32* %coords to i8*
  %conv15 = sext i32 %dimensions to i64
  %mul16 = shl nsw i64 %conv15, 2
  %call17 = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* %1, i64 %mul16) #17
  %call18 = call i32 @halide_trace(i8* %user_context, %struct.halide_trace_event_t* nonnull %event) #17
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #18
  ret i32 %call18
}

; Function Attrs: nounwind mustprogress
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal9ends_withEPKcS3_(i8* %filename, i8* %suffix) local_unnamed_addr #0 {
entry:
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %entry
  %f.0 = phi i8* [ %filename, %entry ], [ %incdec.ptr, %while.cond ]
  %0 = load i8, i8* %f.0, align 1, !tbaa !14
  %tobool.not = icmp eq i8 %0, 0
  %incdec.ptr = getelementptr inbounds i8, i8* %f.0, i64 1
  br i1 %tobool.not, label %while.cond1, label %while.cond, !llvm.loop !205

while.cond1:                                      ; preds = %while.cond1, %while.cond
  %s.0 = phi i8* [ %incdec.ptr4, %while.cond1 ], [ %suffix, %while.cond ]
  %1 = load i8, i8* %s.0, align 1, !tbaa !14
  %tobool2.not = icmp eq i8 %1, 0
  %incdec.ptr4 = getelementptr inbounds i8, i8* %s.0, i64 1
  br i1 %tobool2.not, label %while.cond6.preheader, label %while.cond1, !llvm.loop !206

while.cond6.preheader:                            ; preds = %while.cond1
  %cmp34 = icmp ne i8* %s.0, %suffix
  %cmp735 = icmp ne i8* %f.0, %filename
  %2 = and i1 %cmp735, %cmp34
  br i1 %2, label %if.end, label %while.end13

if.end:                                           ; preds = %if.end.while.body8_crit_edge, %while.cond6.preheader
  %f.13649 = phi i8* [ %incdec.ptr11, %if.end.while.body8_crit_edge ], [ %f.0, %while.cond6.preheader ]
  %s.13748 = phi i8* [ %incdec.ptr12, %if.end.while.body8_crit_edge ], [ %s.0, %while.cond6.preheader ]
  %incdec.ptr11 = getelementptr inbounds i8, i8* %f.13649, i64 -1
  %incdec.ptr12 = getelementptr inbounds i8, i8* %s.13748, i64 -1
  %cmp = icmp ne i8* %incdec.ptr12, %suffix
  %cmp7 = icmp ne i8* %incdec.ptr11, %filename
  %3 = and i1 %cmp7, %cmp
  %.pre = load i8, i8* %incdec.ptr11, align 1, !tbaa !14
  %.pre45 = load i8, i8* %incdec.ptr12, align 1, !tbaa !14
  br i1 %3, label %if.end.while.body8_crit_edge, label %while.end13, !llvm.loop !207

if.end.while.body8_crit_edge:                     ; preds = %if.end
  %cmp10.not = icmp eq i8 %.pre, %.pre45
  br i1 %cmp10.not, label %if.end, label %cleanup

while.end13:                                      ; preds = %if.end, %while.cond6.preheader
  %4 = phi i8 [ 0, %while.cond6.preheader ], [ %.pre45, %if.end ]
  %5 = phi i8 [ 0, %while.cond6.preheader ], [ %.pre, %if.end ]
  %cmp16 = icmp eq i8 %5, %4
  br label %cleanup

cleanup:                                          ; preds = %while.end13, %if.end.while.body8_crit_edge
  %retval.0 = phi i1 [ %cmp16, %while.end13 ], [ false, %if.end.while.body8_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind
define weak i32 @halide_debug_to_file(i8* %user_context, i8* %filename, i32 %type_code, %struct.halide_buffer_t* %buf) local_unnamed_addr #4 {
entry:
  %shape = alloca [4 x %struct.halide_dimension_t], align 4
  %header = alloca %"struct.Halide::Runtime::Internal::halide_tiff_header", align 2
  %offset = alloca i32, align 4
  %count = alloca i32, align 4
  %array_name = alloca [256 x i8], align 1
  %header198 = alloca [129 x i8], align 1
  %tags = alloca [8 x i32], align 4
  %extents = alloca [4 x i32], align 4
  %name_header = alloca [2 x i32], align 4
  %payload_header = alloca [2 x i32], align 4
  %header289 = alloca [5 x i32], align 4
  %temp = alloca [4096 x i8], align 1
  %idx = alloca [4 x i32], align 4
  %zero = alloca i64, align 8
  %host.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %0 = load i8*, i8** %host.i, align 8, !tbaa !134
  %cmp.i = icmp eq i8* %0, null
  br i1 %cmp.i, label %_ZNK15halide_buffer_t15is_bounds_queryEv.exit, label %if.end

_ZNK15halide_buffer_t15is_bounds_queryEv.exit:    ; preds = %entry
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !135
  %cmp2.i = icmp eq i64 %1, 0
  br i1 %cmp2.i, label %if.then, label %if.end

if.then:                                          ; preds = %_ZNK15halide_buffer_t15is_bounds_queryEv.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.34, i64 0, i64 0)) #17
  br label %return

if.end:                                           ; preds = %_ZNK15halide_buffer_t15is_bounds_queryEv.exit, %entry
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %2 = load i32, i32* %dimensions, align 4, !tbaa !129
  %cmp = icmp sgt i32 %2, 4
  br i1 %cmp, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1.35, i64 0, i64 0)) #17
  br label %return

if.end2:                                          ; preds = %if.end
  %call3 = tail call i32 @halide_copy_to_host(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #17
  %cmp4.not = icmp eq i32 %call3, 0
  br i1 %cmp4.not, label %if.end6, label %return

if.end6:                                          ; preds = %if.end2
  %call.i598 = tail call i8* @fopen(i8* %filename, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.36, i64 0, i64 0)) #17
  %cmp.i601.not = icmp eq i8* %call.i598, null
  br i1 %cmp.i601.not, label %return, label %if.end9

if.end9:                                          ; preds = %if.end6
  %3 = bitcast [4 x %struct.halide_dimension_t]* %shape to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #18
  %min.i = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 0
  store i32 0, i32* %min.i, align 4, !tbaa !138
  %extent.i = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 1
  store i32 0, i32* %extent.i, align 4, !tbaa !140
  %stride.i = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 2
  store i32 0, i32* %stride.i, align 4, !tbaa !141
  %flags.i = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 3
  store i32 0, i32* %flags.i, align 4, !tbaa !208
  %min.i.1 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 0
  store i32 0, i32* %min.i.1, align 4, !tbaa !138
  %extent.i.1 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 1
  store i32 0, i32* %extent.i.1, align 4, !tbaa !140
  %stride.i.1 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 2
  store i32 0, i32* %stride.i.1, align 4, !tbaa !141
  %flags.i.1 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 3
  store i32 0, i32* %flags.i.1, align 4, !tbaa !208
  %min.i.2 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 0
  store i32 0, i32* %min.i.2, align 4, !tbaa !138
  %extent.i.2 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 1
  store i32 0, i32* %extent.i.2, align 4, !tbaa !140
  %stride.i.2 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 2
  store i32 0, i32* %stride.i.2, align 4, !tbaa !141
  %flags.i.2 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 3
  store i32 0, i32* %flags.i.2, align 4, !tbaa !208
  %min.i.3 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 0
  store i32 0, i32* %min.i.3, align 4, !tbaa !138
  %extent.i.3 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 1
  store i32 0, i32* %extent.i.3, align 4, !tbaa !140
  %stride.i.3 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 2
  store i32 0, i32* %stride.i.3, align 4, !tbaa !141
  %flags.i.3 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 3
  store i32 0, i32* %flags.i.3, align 4, !tbaa !208
  %4 = load i32, i32* %dimensions, align 4, !tbaa !129
  %cmp11875 = icmp sgt i32 %4, 0
  br i1 %cmp11875, label %for.body.lr.ph, label %for.body22.preheader

for.body.lr.ph:                                   ; preds = %if.end9
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %5 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %6 = zext i32 %4 to i64
  br label %for.body

for.cond19.preheader:                             ; preds = %for.body
  %cmp20873 = icmp slt i32 %4, 4
  br i1 %cmp20873, label %for.body22.preheader, label %for.cond.cleanup21

for.body22.preheader:                             ; preds = %for.cond19.preheader, %if.end9
  %elts.0.lcssa907 = phi i64 [ %mul, %for.cond19.preheader ], [ 1, %if.end9 ]
  %7 = sext i32 %4 to i64
  br label %for.body22

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv887 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next888, %for.body ]
  %elts.0877 = phi i64 [ 1, %for.body.lr.ph ], [ %mul, %for.body ]
  %arrayidx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv887
  %arrayidx14 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %indvars.iv887
  %8 = bitcast %struct.halide_dimension_t* %arrayidx14 to i8*
  %9 = bitcast %struct.halide_dimension_t* %arrayidx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %8, i8* nonnull align 4 dereferenceable(16) %9, i64 16, i1 false), !tbaa.struct !149
  %extent = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %indvars.iv887, i32 1
  %10 = load i32, i32* %extent, align 4, !tbaa !140
  %conv903 = zext i32 %10 to i64
  %mul = mul i64 %elts.0877, %conv903
  %indvars.iv.next888 = add nuw nsw i64 %indvars.iv887, 1
  %cmp11 = icmp ult i64 %indvars.iv.next888, %6
  %cmp12 = icmp ult i64 %indvars.iv887, 3
  %11 = and i1 %cmp12, %cmp11
  br i1 %11, label %for.body, label %for.cond19.preheader, !llvm.loop !209

for.cond.cleanup21:                               ; preds = %for.body22, %for.cond19.preheader
  %elts.0.lcssa906 = phi i64 [ %mul, %for.cond19.preheader ], [ %elts.0.lcssa907, %for.body22 ]
  %bits.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 4, i32 1
  %12 = load i8, i8* %bits.i, align 1, !tbaa !144
  %conv.i = zext i8 %12 to i32
  %add.i = add nuw nsw i32 %conv.i, 7
  %div.i = lshr i32 %add.i, 3
  %call34 = call zeroext i1 @_ZN6Halide7Runtime8Internal9ends_withEPKcS3_(i8* %filename, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.37, i64 0, i64 0)) #19
  br i1 %call34, label %if.then36, label %lor.lhs.false

for.body22:                                       ; preds = %for.body22, %for.body22.preheader
  %indvars.iv = phi i64 [ %7, %for.body22.preheader ], [ %indvars.iv.next, %for.body22 ]
  %min = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %indvars.iv, i32 0
  store i32 0, i32* %min, align 4, !tbaa !138
  %extent27 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %indvars.iv, i32 1
  store i32 1, i32* %extent27, align 4, !tbaa !140
  %stride = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %indvars.iv, i32 2
  store i32 0, i32* %stride, align 4, !tbaa !141
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond886.not = icmp eq i32 %lftr.wideiv, 4
  br i1 %exitcond886.not, label %for.cond.cleanup21, label %for.body22, !llvm.loop !210

lor.lhs.false:                                    ; preds = %for.cond.cleanup21
  %call35 = call zeroext i1 @_ZN6Halide7Runtime8Internal9ends_withEPKcS3_(i8* %filename, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.38, i64 0, i64 0)) #19
  br i1 %call35, label %if.then36, label %if.else164

if.then36:                                        ; preds = %lor.lhs.false, %for.cond.cleanup21
  %extent38 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 1
  %13 = load i32, i32* %extent38, align 4, !tbaa !140
  %extent40 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 1
  %14 = load i32, i32* %extent40, align 4, !tbaa !140
  %extent42 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 1
  %15 = load i32, i32* %extent42, align 4, !tbaa !140
  %switch = icmp ult i32 %15, 2
  %extent49 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 1
  %16 = load i32, i32* %extent49, align 4, !tbaa !140
  %cmp50 = icmp slt i32 %16, 5
  %or.cond = and i1 %switch, %cmp50
  %depth.0 = select i1 %or.cond, i32 1, i32 %16
  %channels.0 = select i1 %or.cond, i32 %16, i32 %15
  %17 = bitcast %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header to i8*
  call void @llvm.lifetime.start.p0i8(i64 210, i8* nonnull %17) #18
  %byte_order_marker = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 0
  store i16 18761, i16* %byte_order_marker, align 2, !tbaa !211
  %version = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 1
  store i16 42, i16* %version, align 2, !tbaa !213
  %ifd0_offset = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 2
  store i32 8, i32* %ifd0_offset, align 2, !tbaa !214
  %entry_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 3
  store i16 15, i16* %entry_count, align 2, !tbaa !215
  %tag_code2.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 0, i32 0
  store i16 256, i16* %tag_code2.i, align 2, !tbaa !216
  %type_code.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 0, i32 1
  store i16 4, i16* %type_code.i, align 2, !tbaa !218
  %count3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 0, i32 2
  store i32 1, i32* %count3.i, align 2, !tbaa !219
  %i32.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 0, i32 3, i32 0
  store i32 %13, i32* %i32.i, align 2, !tbaa !14
  %tag_code2.i632 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 1, i32 0
  store i16 257, i16* %tag_code2.i632, align 2, !tbaa !216
  %type_code.i633 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 1, i32 1
  store i16 4, i16* %type_code.i633, align 2, !tbaa !218
  %count3.i634 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 1, i32 2
  store i32 1, i32* %count3.i634, align 2, !tbaa !219
  %i32.i635 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 1, i32 3, i32 0
  store i32 %14, i32* %i32.i635, align 2, !tbaa !14
  %18 = trunc i32 %add.i to i16
  %conv68 = and i16 %18, 504
  %tag_code2.i643 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 2, i32 0
  store i16 258, i16* %tag_code2.i643, align 2, !tbaa !216
  %type_code.i644 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 2, i32 1
  store i16 3, i16* %type_code.i644, align 2, !tbaa !218
  %count3.i645 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 2, i32 2
  store i32 1, i32* %count3.i645, align 2, !tbaa !219
  %value4.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 2, i32 3
  %i16.i = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i to i16*
  store i16 %conv68, i16* %i16.i, align 2, !tbaa !14
  %tag_code2.i653 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 3, i32 0
  store i16 259, i16* %tag_code2.i653, align 2, !tbaa !216
  %type_code.i654 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 3, i32 1
  store i16 3, i16* %type_code.i654, align 2, !tbaa !218
  %count3.i655 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 3, i32 2
  store i32 1, i32* %count3.i655, align 2, !tbaa !219
  %value4.i656 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 3, i32 3
  %i16.i657 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i656 to i16*
  store i16 1, i16* %i16.i657, align 2, !tbaa !14
  %cmp71 = icmp sgt i32 %channels.0, 2
  %conv72 = select i1 %cmp71, i16 2, i16 1
  %tag_code2.i665 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 4, i32 0
  store i16 262, i16* %tag_code2.i665, align 2, !tbaa !216
  %type_code.i666 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 4, i32 1
  store i16 3, i16* %type_code.i666, align 2, !tbaa !218
  %count3.i667 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 4, i32 2
  store i32 1, i32* %count3.i667, align 2, !tbaa !219
  %value4.i668 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 4, i32 3
  %i16.i669 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i668 to i16*
  store i16 %conv72, i16* %i16.i669, align 2, !tbaa !14
  %tag_code2.i677 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 5, i32 0
  store i16 273, i16* %tag_code2.i677, align 2, !tbaa !216
  %type_code.i678 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 5, i32 1
  store i16 4, i16* %type_code.i678, align 2, !tbaa !218
  %count3.i679 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 5, i32 2
  store i32 %channels.0, i32* %count3.i679, align 2, !tbaa !219
  %i32.i680 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 5, i32 3, i32 0
  store i32 210, i32* %i32.i680, align 2, !tbaa !14
  %conv75 = trunc i32 %channels.0 to i16
  %tag_code2.i688 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 6, i32 0
  store i16 277, i16* %tag_code2.i688, align 2, !tbaa !216
  %type_code.i689 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 6, i32 1
  store i16 3, i16* %type_code.i689, align 2, !tbaa !218
  %count3.i690 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 6, i32 2
  store i32 1, i32* %count3.i690, align 2, !tbaa !219
  %value4.i691 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 6, i32 3
  %i16.i692 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i691 to i16*
  store i16 %conv75, i16* %i16.i692, align 2, !tbaa !14
  %tag_code2.i706 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 7, i32 0
  store i16 278, i16* %tag_code2.i706, align 2, !tbaa !216
  %type_code.i707 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 7, i32 1
  store i16 4, i16* %type_code.i707, align 2, !tbaa !218
  %count3.i708 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 7, i32 2
  store i32 1, i32* %count3.i708, align 2, !tbaa !219
  %i32.i709 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 7, i32 3, i32 0
  store i32 %14, i32* %i32.i709, align 2, !tbaa !14
  %cmp80 = icmp eq i32 %channels.0, 1
  %19 = trunc i64 %elts.0.lcssa906 to i32
  %conv86595 = mul i32 %div.i, %19
  %mul84 = shl i32 %channels.0, 2
  %add = add i32 %mul84, 210
  %add.sink = select i1 %cmp80, i32 %conv86595, i32 %add
  %20 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 8, i32 0
  store i16 279, i16* %20, align 2
  %21 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 8, i32 1
  store i16 4, i16* %21, align 2
  %22 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 8, i32 2
  store i32 %channels.0, i32* %22, align 2
  %23 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 8, i32 3, i32 0
  store i32 %add.sink, i32* %23, align 2
  %tag_code2.i732 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 9, i32 0
  store i16 282, i16* %tag_code2.i732, align 2, !tbaa !216
  %type_code3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 9, i32 1
  store i16 5, i16* %type_code3.i, align 2, !tbaa !218
  %count4.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 9, i32 2
  store i32 1, i32* %count4.i, align 2, !tbaa !219
  %i32.i733 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 9, i32 3, i32 0
  store i32 194, i32* %i32.i733, align 2, !tbaa !14
  %tag_code2.i741 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 10, i32 0
  store i16 283, i16* %tag_code2.i741, align 2, !tbaa !216
  %type_code3.i742 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 10, i32 1
  store i16 5, i16* %type_code3.i742, align 2, !tbaa !218
  %count4.i743 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 10, i32 2
  store i32 1, i32* %count4.i743, align 2, !tbaa !219
  %i32.i744 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 10, i32 3, i32 0
  store i32 202, i32* %i32.i744, align 2, !tbaa !14
  %tag_code2.i759 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 11, i32 0
  store i16 284, i16* %tag_code2.i759, align 2, !tbaa !216
  %type_code.i760 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 11, i32 1
  store i16 3, i16* %type_code.i760, align 2, !tbaa !218
  %count3.i761 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 11, i32 2
  store i32 1, i32* %count3.i761, align 2, !tbaa !219
  %value4.i762 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 11, i32 3
  %i16.i763 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i762 to i16*
  store i16 2, i16* %i16.i763, align 2, !tbaa !14
  %tag_code2.i754 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 12, i32 0
  store i16 296, i16* %tag_code2.i754, align 2, !tbaa !216
  %type_code.i755 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 12, i32 1
  store i16 3, i16* %type_code.i755, align 2, !tbaa !218
  %count3.i756 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 12, i32 2
  store i32 1, i32* %count3.i756, align 2, !tbaa !219
  %value4.i757 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 12, i32 3
  %i16.i758 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i757 to i16*
  store i16 1, i16* %i16.i758, align 2, !tbaa !14
  %idxprom92 = sext i32 %type_code to i64
  %arrayidx93 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZN6Halide7Runtime8Internal30pixel_type_to_tiff_sample_typeE, i64 0, i64 %idxprom92
  %24 = load i16, i16* %arrayidx93, align 2, !tbaa !154
  %tag_code2.i749 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 13, i32 0
  store i16 339, i16* %tag_code2.i749, align 2, !tbaa !216
  %type_code.i750 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 13, i32 1
  store i16 3, i16* %type_code.i750, align 2, !tbaa !218
  %count3.i751 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 13, i32 2
  store i32 1, i32* %count3.i751, align 2, !tbaa !219
  %value4.i752 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 13, i32 3
  %i16.i753 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i752 to i16*
  store i16 %24, i16* %i16.i753, align 2, !tbaa !14
  %tag_code2.i745 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 14, i32 0
  store i16 -32539, i16* %tag_code2.i745, align 2, !tbaa !216
  %type_code.i746 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 14, i32 1
  store i16 4, i16* %type_code.i746, align 2, !tbaa !218
  %count3.i747 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 14, i32 2
  store i32 1, i32* %count3.i747, align 2, !tbaa !219
  %i32.i748 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 14, i32 3, i32 0
  store i32 %depth.0, i32* %i32.i748, align 2, !tbaa !14
  %ifd0_end = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 5
  store i32 0, i32* %ifd0_end, align 2, !tbaa !220
  %arrayidx95 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 6, i64 0
  store i32 1, i32* %arrayidx95, align 2, !tbaa !73
  %arrayidx97 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 6, i64 1
  store i32 1, i32* %arrayidx97, align 2, !tbaa !73
  %arrayidx98 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 7, i64 0
  store i32 1, i32* %arrayidx98, align 2, !tbaa !73
  %arrayidx100 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 7, i64 1
  store i32 1, i32* %arrayidx100, align 2, !tbaa !73
  %call.i736 = call i64 @fwrite(i8* nonnull %17, i64 210, i64 1, i8* nonnull %call.i598) #17
  %cmp.i737.not = icmp eq i64 %call.i736, 0
  br i1 %cmp.i737.not, label %cleanup154, label %if.end103

if.end103:                                        ; preds = %if.then36
  %cmp104 = icmp sgt i32 %channels.0, 1
  br i1 %cmp104, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731.lr.ph, label %cleanup154.thread

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731.lr.ph: ; preds = %if.end103
  %25 = bitcast i32* %offset to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #18
  %mul108 = shl i32 %channels.0, 3
  %add109 = add i32 %mul108, 210
  store i32 %add109, i32* %offset, align 4, !tbaa !73
  %mul123 = mul i32 %depth.0, %div.i
  br label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731: ; preds = %if.end118, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731.lr.ph
  %i111.0865 = phi i32 [ 0, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731.lr.ph ], [ %inc128, %if.end118 ]
  %call.i727 = call i64 @fwrite(i8* nonnull %25, i64 4, i64 1, i8* nonnull %call.i598) #17
  %cmp.i728.not = icmp eq i64 %call.i727, 0
  br i1 %cmp.i728.not, label %cleanup151.thread, label %if.end118

if.end118:                                        ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731
  %26 = load i32, i32* %extent38, align 4, !tbaa !140
  %27 = load i32, i32* %extent40, align 4, !tbaa !140
  %mul124 = mul i32 %mul123, %26
  %mul125 = mul i32 %mul124, %27
  %28 = load i32, i32* %offset, align 4, !tbaa !73
  %add126 = add nsw i32 %mul125, %28
  store i32 %add126, i32* %offset, align 4, !tbaa !73
  %inc128 = add nuw nsw i32 %i111.0865, 1
  %exitcond881.not = icmp eq i32 %inc128, %channels.0
  br i1 %exitcond881.not, label %for.end129, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731, !llvm.loop !221

for.end129:                                       ; preds = %if.end118
  %29 = bitcast i32* %count to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #18
  store i32 %mul125, i32* %count, align 4, !tbaa !73
  %cmp139862 = icmp sgt i32 %channels.0, 0
  br i1 %cmp139862, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720, label %cleanup151

for.cond138:                                      ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720
  %exitcond.not = icmp eq i32 %inc146, %channels.0
  br i1 %exitcond.not, label %cleanup151, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720, !llvm.loop !222

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720: ; preds = %for.cond138, %for.end129
  %i137.0863 = phi i32 [ %inc146, %for.cond138 ], [ 0, %for.end129 ]
  %call.i716 = call i64 @fwrite(i8* nonnull %29, i64 4, i64 1, i8* nonnull %call.i598) #17
  %cmp.i717.not = icmp eq i64 %call.i716, 0
  %inc146 = add nuw nsw i32 %i137.0863, 1
  br i1 %cmp.i717.not, label %select.unfold, label %for.cond138

select.unfold:                                    ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #18
  br label %cleanup151.thread

cleanup151.thread:                                ; preds = %select.unfold, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731
  %retval.2.ph = phi i32 [ -5, %select.unfold ], [ -4, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #18
  br label %cleanup154

cleanup151:                                       ; preds = %for.cond138, %for.end129
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #18
  br label %cleanup154.thread

cleanup154.thread:                                ; preds = %cleanup151, %if.end103
  call void @llvm.lifetime.end.p0i8(i64 210, i8* nonnull %17) #18
  br label %if.end311

cleanup154:                                       ; preds = %cleanup151.thread, %if.then36
  %retval.4 = phi i32 [ -3, %if.then36 ], [ %retval.2.ph, %cleanup151.thread ]
  call void @llvm.lifetime.end.p0i8(i64 210, i8* nonnull %17) #18
  br label %cleanup433

if.else164:                                       ; preds = %lor.lhs.false
  %call165 = call zeroext i1 @_ZN6Halide7Runtime8Internal9ends_withEPKcS3_(i8* %filename, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.39, i64 0, i64 0)) #19
  br i1 %call165, label %while.cond, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631

while.cond:                                       ; preds = %while.cond, %if.else164
  %end.0 = phi i8* [ %incdec.ptr167, %while.cond ], [ %filename, %if.else164 ]
  %30 = load i8, i8* %end.0, align 1, !tbaa !14
  %tobool.not = icmp eq i8 %30, 0
  %incdec.ptr167 = getelementptr inbounds i8, i8* %end.0, i64 1
  br i1 %tobool.not, label %while.body171, label %while.cond, !llvm.loop !223

while.cond174.preheader:                          ; preds = %while.body171
  %end.1872.lcssa883 = ptrtoint i8* %end.1872 to i64
  %31 = ptrtoint i8* %filename to i64
  %32 = sub i64 %31, %end.1872.lcssa883
  br label %while.cond174

while.body171:                                    ; preds = %while.body171, %while.cond
  %end.1872 = phi i8* [ %incdec.ptr172.ptr, %while.body171 ], [ %end.0, %while.cond ]
  %incdec.ptr172.ptr = getelementptr inbounds i8, i8* %end.1872, i64 -1
  %.pr = load i8, i8* %incdec.ptr172.ptr, align 1, !tbaa !14
  %cmp170.not = icmp eq i8 %.pr, 46
  br i1 %cmp170.not, label %while.cond174.preheader, label %while.body171, !llvm.loop !224

while.cond174:                                    ; preds = %land.rhs176, %while.cond174.preheader
  %start.0.idx = phi i64 [ %start.0.add, %land.rhs176 ], [ -1, %while.cond174.preheader ]
  %start.0.ptr.ptr = getelementptr inbounds i8, i8* %end.1872, i64 %start.0.idx
  %cmp175.not = icmp eq i8* %start.0.ptr.ptr, %filename
  br i1 %cmp175.not, label %while.end183, label %land.rhs176

land.rhs176:                                      ; preds = %while.cond174
  %start.0.add = add nsw i64 %start.0.idx, -1
  %arrayidx177.ptr = getelementptr inbounds i8, i8* %end.1872, i64 %start.0.add
  %33 = load i8, i8* %arrayidx177.ptr, align 1, !tbaa !14
  %cmp179.not = icmp eq i8 %33, 47
  br i1 %cmp179.not, label %while.end183, label %while.cond174, !llvm.loop !225

while.end183:                                     ; preds = %land.rhs176, %while.cond174
  %start.0.idx.lcssa = phi i64 [ %32, %while.cond174 ], [ %start.0.idx, %land.rhs176 ]
  %34 = trunc i64 %start.0.idx.lcssa to i32
  %conv184 = xor i32 %34, -1
  %35 = getelementptr inbounds [256 x i8], [256 x i8]* %array_name, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %35) #18
  %cmp186.not868 = icmp eq i64 %start.0.idx.lcssa, -1
  br i1 %cmp186.not868, label %while.body194.preheader, label %while.body187

while.cond191.preheader:                          ; preds = %while.body187
  %add.ptr = getelementptr inbounds [256 x i8], [256 x i8]* %array_name, i64 0, i64 256
  %cmp193866 = icmp ult i8* %incdec.ptr189, %add.ptr
  br i1 %cmp193866, label %while.body194.preheader, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705

while.body194.preheader:                          ; preds = %while.cond191.preheader, %while.end183
  %dst.0.lcssa911 = phi i8* [ %incdec.ptr189, %while.cond191.preheader ], [ %35, %while.end183 ]
  %scevgep = getelementptr inbounds [256 x i8], [256 x i8]* %array_name, i64 1, i64 0
  br label %while.body194

while.body187:                                    ; preds = %while.body187, %while.end183
  %dst.0870 = phi i8* [ %incdec.ptr189, %while.body187 ], [ %35, %while.end183 ]
  %start.1869.idx = phi i64 [ %start.1869.add, %while.body187 ], [ %start.0.idx.lcssa, %while.end183 ]
  %start.1869.ptr = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.idx
  %start.1869.add = add nuw nsw i64 %start.1869.idx, 1
  %36 = load i8, i8* %start.1869.ptr, align 1, !tbaa !14
  %incdec.ptr189 = getelementptr inbounds i8, i8* %dst.0870, i64 1
  store i8 %36, i8* %dst.0870, align 1, !tbaa !14
  %cmp186.not = icmp eq i64 %start.1869.add, -1
  br i1 %cmp186.not, label %while.cond191.preheader, label %while.body187, !llvm.loop !226

while.body194:                                    ; preds = %while.body194, %while.body194.preheader
  %dst.1867 = phi i8* [ %incdec.ptr195, %while.body194 ], [ %dst.0.lcssa911, %while.body194.preheader ]
  %incdec.ptr195 = getelementptr inbounds i8, i8* %dst.1867, i64 1
  store i8 0, i8* %dst.1867, align 1, !tbaa !14
  %exitcond882.not = icmp eq i8* %incdec.ptr195, %scevgep
  br i1 %exitcond882.not, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705, label %while.body194, !llvm.loop !227

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705: ; preds = %while.body194, %while.cond191.preheader
  %add197 = sub i32 6, %34
  %and = and i32 %add197, -8
  %37 = getelementptr inbounds [129 x i8], [129 x i8]* %header198, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 129, i8* nonnull %37) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(129) %37, i8* nonnull align 1 dereferenceable(129) getelementptr inbounds ([129 x i8], [129 x i8]* @__const.halide_debug_to_file.header, i64 0, i64 0), i64 129, i1 false)
  %call.i701 = call i64 @fwrite(i8* nonnull %37, i64 128, i64 1, i8* nonnull %call.i598) #17
  %38 = load i32, i32* %dimensions, align 4, !tbaa !129
  %cmp19.i.i = icmp sgt i32 %38, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %39 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !137
  %wide.trip.count.i.i = zext i32 %38 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %if.end.i.i ]
  %index.021.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %index.1.i.i, %if.end.i.i ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %39, i64 %indvars.iv.i.i, i32 2
  %40 = load i32, i32* %stride2.i.i, align 4, !tbaa !141
  %cmp3.i.i = icmp sgt i32 %40, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %40 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %39, i64 %indvars.iv.i.i, i32 1
  %41 = load i32, i32* %extent.i.i, align 4, !tbaa !140
  %sub.i.i = add nsw i32 %41, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i693 = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i693, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i, label %for.body.i.i, !llvm.loop !228

for.body.i13.i:                                   ; preds = %if.end.i24.i, %if.end.i.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ 0, %if.end.i.i ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ 0, %if.end.i.i ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %39, i64 %indvars.iv.i10.i, i32 2
  %42 = load i32, i32* %stride2.i11.i, align 4, !tbaa !141
  %cmp3.i12.i = icmp slt i32 %42, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %42 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %39, i64 %indvars.iv.i10.i, i32 1
  %43 = load i32, i32* %extent.i15.i, align 4, !tbaa !140
  %sub.i16.i = add nsw i32 %43, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !229

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i
  %add8.i.i = add nsw i64 %index.1.i.i, 1
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705
  %add8.i27.i = phi i64 [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705 ], [ %add8.i.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %index.0.lcssa.i9.i = phi i64 [ 0, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705 ], [ %index.1.i21.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i694 = sub nsw i64 %add8.i27.i, %index.0.lcssa.i9.i
  %44 = load i8, i8* %bits.i, align 1, !tbaa !144
  %conv.i.i696 = zext i8 %44 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i696, 7
  %div.i.i697 = lshr i64 %add.i4.i, 3
  %mul.i698 = mul i64 %div.i.i697, %sub.i694
  %45 = trunc i64 %mul.i698 to i32
  %46 = add i32 %45, 7
  %47 = and i32 %46, 7
  %conv204 = xor i32 %47, 7
  %conv205 = zext i32 %conv204 to i64
  %add206 = add i64 %mul.i698, %conv205
  %tobool207.not = icmp ult i64 %add206, 4294967296
  br i1 %tobool207.not, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687, label %cleanup278.thread

cleanup278.thread:                                ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6.40, i64 0, i64 0)) #17
  call void @llvm.lifetime.end.p0i8(i64 129, i8* nonnull %37) #18
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %35) #18
  br label %cleanup433

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687: ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %48 = icmp sgt i32 %38, 2
  %spec.store.select = select i1 %48, i32 %38, i32 2
  %49 = bitcast [8 x i32]* %tags to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #18
  %arrayinit.begin = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 0
  store i32 14, i32* %arrayinit.begin, align 4, !tbaa !73
  %arrayinit.element = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 1
  %add214 = shl i32 %spec.store.select, 2
  %and215 = add i32 %add214, 4
  %mul216 = and i32 %and215, -8
  %add217 = add i32 %and, 40
  %add218 = add i32 %add217, %mul216
  %add220 = add i32 %add218, %45
  %add221 = add i32 %add220, %conv204
  store i32 %add221, i32* %arrayinit.element, align 4, !tbaa !73
  %arrayinit.element222 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 2
  store i32 6, i32* %arrayinit.element222, align 4, !tbaa !73
  %arrayinit.element223 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 3
  store i32 8, i32* %arrayinit.element223, align 4, !tbaa !73
  %arrayinit.element224 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 4
  %idxprom225 = sext i32 %type_code to i64
  %arrayidx226 = getelementptr inbounds [10 x i8], [10 x i8]* @_ZN6Halide7Runtime8Internal31pixel_type_to_matlab_class_codeE, i64 0, i64 %idxprom225
  %50 = load i8, i8* %arrayidx226, align 1, !tbaa !14
  %conv227 = zext i8 %50 to i32
  store i32 %conv227, i32* %arrayinit.element224, align 4, !tbaa !73
  %arrayinit.element228 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 5
  store i32 1, i32* %arrayinit.element228, align 4, !tbaa !73
  %arrayinit.element229 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 6
  store i32 5, i32* %arrayinit.element229, align 4, !tbaa !73
  %arrayinit.element230 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 7
  store i32 %add214, i32* %arrayinit.element230, align 4, !tbaa !73
  %call.i683 = call i64 @fwrite(i8* nonnull %49, i64 32, i64 1, i8* nonnull %call.i598) #17
  %cmp.i684.not = icmp eq i64 %call.i683, 0
  br i1 %cmp.i684.not, label %cleanup278, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687
  %51 = bitcast [4 x i32]* %extents to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #18
  %arrayinit.begin235 = getelementptr inbounds [4 x i32], [4 x i32]* %extents, i64 0, i64 0
  %extent237 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 1
  %52 = load i32, i32* %extent237, align 4, !tbaa !140
  store i32 %52, i32* %arrayinit.begin235, align 4, !tbaa !73
  %arrayinit.element238 = getelementptr inbounds [4 x i32], [4 x i32]* %extents, i64 0, i64 1
  %extent240 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 1
  %53 = load i32, i32* %extent240, align 4, !tbaa !140
  store i32 %53, i32* %arrayinit.element238, align 4, !tbaa !73
  %arrayinit.element241 = getelementptr inbounds [4 x i32], [4 x i32]* %extents, i64 0, i64 2
  %extent243 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 1
  %54 = load i32, i32* %extent243, align 4, !tbaa !140
  store i32 %54, i32* %arrayinit.element241, align 4, !tbaa !73
  %arrayinit.element244 = getelementptr inbounds [4 x i32], [4 x i32]* %extents, i64 0, i64 3
  %extent246 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 1
  %55 = load i32, i32* %extent246, align 4, !tbaa !140
  store i32 %55, i32* %arrayinit.element244, align 4, !tbaa !73
  %conv248 = sext i32 %mul216 to i64
  %call.i672 = call i64 @fwrite(i8* nonnull %51, i64 %conv248, i64 1, i8* nonnull %call.i598) #17
  %cmp.i673.not = icmp eq i64 %call.i672, 0
  br i1 %cmp.i673.not, label %cleanup274, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676
  %56 = bitcast [2 x i32]* %name_header to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #18
  %arrayinit.begin252 = getelementptr inbounds [2 x i32], [2 x i32]* %name_header, i64 0, i64 0
  store i32 1, i32* %arrayinit.begin252, align 4, !tbaa !73
  %arrayinit.element253 = getelementptr inbounds [2 x i32], [2 x i32]* %name_header, i64 0, i64 1
  store i32 %conv184, i32* %arrayinit.element253, align 4, !tbaa !73
  %call.i660 = call i64 @fwrite(i8* nonnull %56, i64 8, i64 1, i8* nonnull %call.i598) #17
  %cmp.i661.not = icmp eq i64 %call.i660, 0
  br i1 %cmp.i661.not, label %cleanup273, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664
  %conv258 = zext i32 %and to i64
  %call.i648 = call i64 @fwrite(i8* nonnull %35, i64 %conv258, i64 1, i8* nonnull %call.i598) #17
  %cmp.i649.not = icmp eq i64 %call.i648, 0
  br i1 %cmp.i649.not, label %cleanup273, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652
  %57 = bitcast [2 x i32]* %payload_header to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #18
  %arrayinit.begin262 = getelementptr inbounds [2 x i32], [2 x i32]* %payload_header, i64 0, i64 0
  %arrayidx264 = getelementptr inbounds [10 x i8], [10 x i8]* @_ZN6Halide7Runtime8Internal30pixel_type_to_matlab_type_codeE, i64 0, i64 %idxprom225
  %58 = load i8, i8* %arrayidx264, align 1, !tbaa !14
  %conv265 = zext i8 %58 to i32
  store i32 %conv265, i32* %arrayinit.begin262, align 4, !tbaa !73
  %arrayinit.element266 = getelementptr inbounds [2 x i32], [2 x i32]* %payload_header, i64 0, i64 1
  store i32 %45, i32* %arrayinit.element266, align 4, !tbaa !73
  %call.i638 = call i64 @fwrite(i8* nonnull %57, i64 8, i64 1, i8* nonnull %call.i598) #17
  %cmp.i639.not = icmp eq i64 %call.i638, 0
  %cleanup.dest.slot.5 = zext i1 %cmp.i639.not to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #18
  br label %cleanup273

cleanup273:                                       ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664
  %cleanup.dest.slot.6 = phi i32 [ %cleanup.dest.slot.5, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642 ], [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664 ], [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652 ]
  %retval.6 = phi i32 [ -11, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642 ], [ -9, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664 ], [ -10, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #18
  br label %cleanup274

cleanup274:                                       ; preds = %cleanup273, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676
  %cleanup.dest.slot.7 = phi i32 [ %cleanup.dest.slot.6, %cleanup273 ], [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676 ]
  %retval.7 = phi i32 [ %retval.6, %cleanup273 ], [ -8, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #18
  br label %cleanup278

cleanup278:                                       ; preds = %cleanup274, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687
  %cleanup.dest.slot.8 = phi i32 [ %cleanup.dest.slot.7, %cleanup274 ], [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687 ]
  %retval.8 = phi i32 [ %retval.7, %cleanup274 ], [ -7, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #18
  call void @llvm.lifetime.end.p0i8(i64 129, i8* nonnull %37) #18
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %35) #18
  %cond442 = icmp eq i32 %cleanup.dest.slot.8, 0
  br i1 %cond442, label %if.end311, label %cleanup433

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631: ; preds = %if.else164
  %59 = bitcast [5 x i32]* %header289 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %59) #18
  %arrayinit.begin290 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 0
  %extent292 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 1
  %60 = load i32, i32* %extent292, align 4, !tbaa !140
  store i32 %60, i32* %arrayinit.begin290, align 4, !tbaa !73
  %arrayinit.element293 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 1
  %extent295 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 1
  %61 = load i32, i32* %extent295, align 4, !tbaa !140
  store i32 %61, i32* %arrayinit.element293, align 4, !tbaa !73
  %arrayinit.element296 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 2
  %extent298 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 1
  %62 = load i32, i32* %extent298, align 4, !tbaa !140
  store i32 %62, i32* %arrayinit.element296, align 4, !tbaa !73
  %arrayinit.element299 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 3
  %extent301 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 1
  %63 = load i32, i32* %extent301, align 4, !tbaa !140
  store i32 %63, i32* %arrayinit.element299, align 4, !tbaa !73
  %arrayinit.element302 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 4
  store i32 %type_code, i32* %arrayinit.element302, align 4, !tbaa !73
  %call.i627 = call i64 @fwrite(i8* nonnull %59, i64 20, i64 1, i8* nonnull %call.i598) #17
  %cmp.i628.not = icmp eq i64 %call.i627, 0
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %59) #18
  br i1 %cmp.i628.not, label %cleanup433, label %if.end311

if.end311:                                        ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631, %cleanup278, %cleanup154.thread
  %final_padding_bytes.0 = phi i32 [ %conv204, %cleanup278 ], [ 0, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631 ], [ 0, %cleanup154.thread ]
  %64 = getelementptr inbounds [4096 x i8], [4096 x i8]* %temp, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %64) #18
  %div = udiv i32 4096, %div.i
  %min313 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 0
  %extent316 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 1
  %65 = load i32, i32* %extent316, align 4, !tbaa !140
  %cmp320856 = icmp sgt i32 %65, 0
  br i1 %cmp320856, label %for.body322.lr.ph, label %if.end412

for.body322.lr.ph:                                ; preds = %if.end311
  %66 = load i32, i32* %min313, align 4, !tbaa !138
  %min324 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 0
  %extent327 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 1
  %min335 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 0
  %extent338 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 1
  %min346 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 0
  %extent349 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 1
  %67 = bitcast [4 x i32]* %idx to i8*
  %arrayinit.begin357 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 0
  %arrayinit.element358 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 1
  %arrayinit.element359 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 2
  %arrayinit.element360 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 3
  %dim.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %conv368 = zext i32 %div.i to i64
  %mul373 = mul nuw nsw i32 %div, %div.i
  %conv374 = zext i32 %mul373 to i64
  %.pre891 = load i32, i32* %min324, align 4, !tbaa !138
  %.pre892 = load i32, i32* %extent327, align 4, !tbaa !140
  br label %for.body322

for.body322:                                      ; preds = %for.inc399, %for.body322.lr.ph
  %68 = phi i32 [ %66, %for.body322.lr.ph ], [ %96, %for.inc399 ]
  %69 = phi i32 [ %65, %for.body322.lr.ph ], [ %97, %for.inc399 ]
  %70 = phi i32 [ %.pre891, %for.body322.lr.ph ], [ %98, %for.inc399 ]
  %71 = phi i32 [ %.pre892, %for.body322.lr.ph ], [ %99, %for.inc399 ]
  %72 = phi i32 [ %.pre892, %for.body322.lr.ph ], [ %100, %for.inc399 ]
  %73 = phi i32 [ %.pre891, %for.body322.lr.ph ], [ %101, %for.inc399 ]
  %dim3.0858 = phi i32 [ %66, %for.body322.lr.ph ], [ %inc400, %for.inc399 ]
  %counter.0857 = phi i32 [ 0, %for.body322.lr.ph ], [ %counter.1.lcssa, %for.inc399 ]
  %cmp331848 = icmp sgt i32 %72, 0
  br i1 %cmp331848, label %for.body333.preheader, label %for.inc399

for.body333.preheader:                            ; preds = %for.body322
  %.pre893 = load i32, i32* %min335, align 4, !tbaa !138
  %.pre894 = load i32, i32* %extent338, align 4, !tbaa !140
  br label %for.body333

for.body333:                                      ; preds = %for.inc394, %for.body333.preheader
  %74 = phi i32 [ %92, %for.inc394 ], [ %70, %for.body333.preheader ]
  %75 = phi i32 [ %93, %for.inc394 ], [ %71, %for.body333.preheader ]
  %76 = phi i32 [ %94, %for.inc394 ], [ %.pre894, %for.body333.preheader ]
  %77 = phi i32 [ %95, %for.inc394 ], [ %.pre893, %for.body333.preheader ]
  %dim2.0850 = phi i32 [ %inc395, %for.inc394 ], [ %73, %for.body333.preheader ]
  %counter.1849 = phi i32 [ %counter.2.lcssa, %for.inc394 ], [ %counter.0857, %for.body333.preheader ]
  %cmp342839 = icmp sgt i32 %76, 0
  br i1 %cmp342839, label %for.body344, label %for.inc394

for.body344:                                      ; preds = %for.inc389, %for.body333
  %dim1.0841 = phi i32 [ %inc390, %for.inc389 ], [ %77, %for.body333 ]
  %counter.2840 = phi i32 [ %counter.6797, %for.inc389 ], [ %counter.1849, %for.body333 ]
  %78 = load i32, i32* %extent349, align 4, !tbaa !140
  %cmp353834 = icmp sgt i32 %78, 0
  br i1 %cmp353834, label %for.body355.preheader, label %for.inc389

for.body355.preheader:                            ; preds = %for.body344
  %79 = load i32, i32* %min346, align 4, !tbaa !138
  br label %for.body355

for.body355:                                      ; preds = %for.inc384, %for.body355.preheader
  %dim0.0836 = phi i32 [ %inc385, %for.inc384 ], [ %79, %for.body355.preheader ]
  %counter.3835 = phi i32 [ %counter.4, %for.inc384 ], [ %counter.2840, %for.body355.preheader ]
  %inc356 = add nsw i32 %counter.3835, 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #18
  store i32 %dim0.0836, i32* %arrayinit.begin357, align 4, !tbaa !73
  store i32 %dim1.0841, i32* %arrayinit.element358, align 4, !tbaa !73
  store i32 %dim2.0850, i32* %arrayinit.element359, align 4, !tbaa !73
  store i32 %dim3.0858, i32* %arrayinit.element360, align 4, !tbaa !73
  %80 = load i32, i32* %dimensions, align 4, !tbaa !129
  %cmp17.i = icmp sgt i32 %80, 0
  br i1 %cmp17.i, label %for.body.lr.ph.i, label %_ZNK15halide_buffer_t10address_ofEPKi.exit

for.body.lr.ph.i:                                 ; preds = %for.body355
  %81 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !137
  %wide.trip.count.i = zext i32 %80 to i64
  %stride.i621920 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %81, i64 0, i32 2
  %82 = load i32, i32* %stride.i621920, align 4, !tbaa !141
  %conv.i622921 = sext i32 %82 to i64
  %min.i623922 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %81, i64 0, i32 0
  %83 = load i32, i32* %min.i623922, align 4, !tbaa !138
  %sub.i923 = sub nsw i32 %dim0.0836, %83
  %conv7.i924 = sext i32 %sub.i923 to i64
  %mul.i925 = mul nsw i64 %conv7.i924, %conv.i622921
  %exitcond.not.i927 = icmp eq i32 %80, 1
  br i1 %exitcond.not.i927, label %_ZNK15halide_buffer_t10address_ofEPKi.exit, label %for.body.i.for.body.i_crit_edge, !llvm.loop !230

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %indvars.iv.next.i929 = phi i64 [ %indvars.iv.next.i, %for.body.i.for.body.i_crit_edge ], [ 1, %for.body.lr.ph.i ]
  %add.i624928 = phi i64 [ %add.i624, %for.body.i.for.body.i_crit_edge ], [ %mul.i925, %for.body.lr.ph.i ]
  %arrayidx3.i.phi.trans.insert = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 %indvars.iv.next.i929
  %.pre895 = load i32, i32* %arrayidx3.i.phi.trans.insert, align 4, !tbaa !73
  %stride.i621 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %81, i64 %indvars.iv.next.i929, i32 2
  %84 = load i32, i32* %stride.i621, align 4, !tbaa !141
  %conv.i622 = sext i32 %84 to i64
  %min.i623 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %81, i64 %indvars.iv.next.i929, i32 0
  %85 = load i32, i32* %min.i623, align 4, !tbaa !138
  %sub.i = sub nsw i32 %.pre895, %85
  %conv7.i = sext i32 %sub.i to i64
  %mul.i = mul nsw i64 %conv7.i, %conv.i622
  %add.i624 = add nsw i64 %mul.i, %add.i624928
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.next.i929, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %_ZNK15halide_buffer_t10address_ofEPKi.exit, label %for.body.i.for.body.i_crit_edge, !llvm.loop !230

_ZNK15halide_buffer_t10address_ofEPKi.exit:       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i, %for.body355
  %index.0.lcssa.i = phi i64 [ 0, %for.body355 ], [ %mul.i925, %for.body.lr.ph.i ], [ %add.i624, %for.body.i.for.body.i_crit_edge ]
  %86 = load i8*, i8** %host.i, align 8, !tbaa !134
  %87 = load i8, i8* %bits.i, align 1, !tbaa !144
  %conv.i.i = zext i8 %87 to i64
  %add.i.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i.i, 3
  %mul9.i = mul nsw i64 %div.i.i, %index.0.lcssa.i
  %add.ptr.i = getelementptr inbounds i8, i8* %86, i64 %mul9.i
  %mul366 = mul nsw i32 %counter.3835, %div.i
  %idx.ext = sext i32 %mul366 to i64
  %add.ptr367 = getelementptr inbounds [4096 x i8], [4096 x i8]* %temp, i64 0, i64 %idx.ext
  %call369 = call i8* @memcpy(i8* nonnull %add.ptr367, i8* %add.ptr.i, i64 %conv368) #17
  %cmp370 = icmp eq i32 %inc356, %div
  br i1 %cmp370, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619, label %for.inc384

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619: ; preds = %_ZNK15halide_buffer_t10address_ofEPKi.exit
  %call.i615 = call i64 @fwrite(i8* nonnull %64, i64 %conv374, i64 1, i8* nonnull %call.i598) #17
  %cmp.i616.not = icmp eq i64 %call.i615, 0
  br i1 %cmp.i616.not, label %cleanup425.loopexit, label %for.inc384

for.inc384:                                       ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619, %_ZNK15halide_buffer_t10address_ofEPKi.exit
  %counter.4 = phi i32 [ 0, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619 ], [ %inc356, %_ZNK15halide_buffer_t10address_ofEPKi.exit ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #18
  %inc385 = add nsw i32 %dim0.0836, 1
  %88 = load i32, i32* %extent349, align 4, !tbaa !140
  %89 = load i32, i32* %min346, align 4, !tbaa !138
  %add352 = add nsw i32 %89, %88
  %cmp353 = icmp slt i32 %inc385, %add352
  br i1 %cmp353, label %for.body355, label %for.inc389, !llvm.loop !231

for.inc389:                                       ; preds = %for.inc384, %for.body344
  %counter.6797 = phi i32 [ %counter.2840, %for.body344 ], [ %counter.4, %for.inc384 ]
  %inc390 = add nsw i32 %dim1.0841, 1
  %90 = load i32, i32* %extent338, align 4, !tbaa !140
  %91 = load i32, i32* %min335, align 4, !tbaa !138
  %add341 = add nsw i32 %91, %90
  %cmp342 = icmp slt i32 %inc390, %add341
  br i1 %cmp342, label %for.body344, label %for.inc394.loopexit, !llvm.loop !232

for.inc394.loopexit:                              ; preds = %for.inc389
  %.pre896 = load i32, i32* %extent327, align 4, !tbaa !140
  %.pre897 = load i32, i32* %min324, align 4, !tbaa !138
  br label %for.inc394

for.inc394:                                       ; preds = %for.inc394.loopexit, %for.body333
  %92 = phi i32 [ %74, %for.body333 ], [ %.pre897, %for.inc394.loopexit ]
  %93 = phi i32 [ %75, %for.body333 ], [ %.pre896, %for.inc394.loopexit ]
  %94 = phi i32 [ %76, %for.body333 ], [ %90, %for.inc394.loopexit ]
  %95 = phi i32 [ %77, %for.body333 ], [ %91, %for.inc394.loopexit ]
  %counter.2.lcssa = phi i32 [ %counter.1849, %for.body333 ], [ %counter.6797, %for.inc394.loopexit ]
  %inc395 = add nsw i32 %dim2.0850, 1
  %add330 = add nsw i32 %92, %93
  %cmp331 = icmp slt i32 %inc395, %add330
  br i1 %cmp331, label %for.body333, label %for.inc399.loopexit, !llvm.loop !233

for.inc399.loopexit:                              ; preds = %for.inc394
  %.pre898 = load i32, i32* %extent316, align 4, !tbaa !140
  %.pre899 = load i32, i32* %min313, align 4, !tbaa !138
  br label %for.inc399

for.inc399:                                       ; preds = %for.inc399.loopexit, %for.body322
  %96 = phi i32 [ %68, %for.body322 ], [ %.pre899, %for.inc399.loopexit ]
  %97 = phi i32 [ %69, %for.body322 ], [ %.pre898, %for.inc399.loopexit ]
  %98 = phi i32 [ %70, %for.body322 ], [ %92, %for.inc399.loopexit ]
  %99 = phi i32 [ %71, %for.body322 ], [ %93, %for.inc399.loopexit ]
  %100 = phi i32 [ %72, %for.body322 ], [ %93, %for.inc399.loopexit ]
  %101 = phi i32 [ %73, %for.body322 ], [ %92, %for.inc399.loopexit ]
  %counter.1.lcssa = phi i32 [ %counter.0857, %for.body322 ], [ %counter.2.lcssa, %for.inc399.loopexit ]
  %inc400 = add nsw i32 %dim3.0858, 1
  %add319 = add nsw i32 %96, %97
  %cmp320 = icmp slt i32 %inc400, %add319
  br i1 %cmp320, label %for.body322, label %for.end403, !llvm.loop !234

for.end403:                                       ; preds = %for.inc399
  %cmp404 = icmp sgt i32 %counter.1.lcssa, 0
  br i1 %cmp404, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612, label %if.end412

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612: ; preds = %for.end403
  %mul407 = mul nsw i32 %counter.1.lcssa, %div.i
  %conv408 = sext i32 %mul407 to i64
  %call.i608 = call i64 @fwrite(i8* nonnull %64, i64 %conv408, i64 1, i8* nonnull %call.i598) #17
  %cmp.i609.not = icmp eq i64 %call.i608, 0
  br i1 %cmp.i609.not, label %cleanup425, label %if.end412

if.end412:                                        ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612, %for.end403, %if.end311
  %102 = bitcast i64* %zero to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #18
  store i64 0, i64* %zero, align 8, !tbaa !110
  %tobool413.not = icmp eq i32 %final_padding_bytes.0, 0
  br i1 %tobool413.not, label %if.end423, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit: ; preds = %if.end412
  %conv415 = zext i32 %final_padding_bytes.0 to i64
  %call.i604 = call i64 @fwrite(i8* nonnull %102, i64 %conv415, i64 1, i8* nonnull %call.i598) #17
  %cmp.i605.not = icmp eq i64 %call.i604, 0
  br i1 %cmp.i605.not, label %cleanup424, label %if.end423

if.end423:                                        ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit, %if.end412
  br label %cleanup424

cleanup424:                                       ; preds = %if.end423, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit
  %retval.21 = phi i32 [ 0, %if.end423 ], [ -16, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #18
  br label %cleanup425

cleanup425.loopexit:                              ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #18
  br label %cleanup425

cleanup425:                                       ; preds = %cleanup425.loopexit, %cleanup424, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612
  %retval.22 = phi i32 [ %retval.21, %cleanup424 ], [ -14, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612 ], [ -13, %cleanup425.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %64) #18
  br label %cleanup433

cleanup433:                                       ; preds = %cleanup425, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631, %cleanup278, %cleanup278.thread, %cleanup154
  %retval.23 = phi i32 [ %retval.22, %cleanup425 ], [ %retval.4, %cleanup154 ], [ %retval.8, %cleanup278 ], [ -12, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631 ], [ -6, %cleanup278.thread ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #18
  %call.i = call i32 @fclose(i8* nonnull %call.i598) #17
  br label %return

return:                                           ; preds = %cleanup433, %if.end6, %if.end2, %if.then1, %if.then
  %retval.26 = phi i32 [ -1, %if.then ], [ -1, %if.then1 ], [ %call3, %if.end2 ], [ %retval.23, %cleanup433 ], [ -2, %if.end6 ]
  ret i32 %retval.26
}

declare i64 @fwrite(i8*, i64, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_cache_cleanup() #0 {
entry:
  tail call void @halide_memoization_cache_cleanup() #19
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_memoization_cache_cleanup() local_unnamed_addr #0 {
entry:
  br label %for.body

for.cond.cleanup:                                 ; preds = %while.end
  store i64 0, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  ret void

for.body:                                         ; preds = %while.end, %entry
  %__begin1.018 = phi %"struct.Halide::Runtime::Internal::CacheEntry"** [ getelementptr inbounds ([256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 0), %entry ], [ %incdec.ptr, %while.end ]
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.018, align 8, !tbaa !10
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.018, align 8, !tbaa !10
  %cmp2.not16 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null
  br i1 %cmp2.not16, label %while.end, label %while.body

while.body:                                       ; preds = %while.body, %for.body
  %entry1.017 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %1, %while.body ], [ %0, %for.body ]
  %next3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.017, i64 0, i32 0
  %1 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next3, align 8, !tbaa !235
  tail call void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %entry1.017) #19
  %2 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.017 to i8*
  tail call void @halide_free(i8* null, i8* nonnull %2) #17
  %cmp2.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %1, null
  br i1 %cmp2.not, label %while.end, label %while.body, !llvm.loop !237

while.end:                                        ; preds = %while.body, %for.body
  %incdec.ptr = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.018, i64 1
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"** %incdec.ptr, getelementptr inbounds ([256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 1, i64 0)
  br i1 %cmp.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %this) local_unnamed_addr #0 align 2 {
entry:
  %tuple_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 8
  %0 = load i32, i32* %tuple_count, align 8, !tbaa !238
  %cmp11.not = icmp eq i32 %0, 0
  br i1 %cmp11.not, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %buf = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 11
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %metadata_storage = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 3
  %1 = load i8*, i8** %metadata_storage, align 8, !tbaa !239
  tail call void @halide_free(i8* null, i8* %1) #17
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %2 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !240
  %arrayidx = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %2, i64 %indvars.iv
  %call = tail call i32 @halide_device_free(i8* null, %struct.halide_buffer_t* %arrayidx) #17
  %3 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !240
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %3, i64 %indvars.iv, i32 2
  %4 = load i8*, i8** %host, align 8, !tbaa !134
  %call6 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %4) #19
  %5 = bitcast %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call6 to i8*
  tail call void @halide_free(i8* null, i8* %5) #17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %6 = load i32, i32* %tuple_count, align 8, !tbaa !238
  %7 = zext i32 %6 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %7
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !241
}

; Function Attrs: nounwind mustprogress
define linkonce %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %host) local_unnamed_addr #0 {
entry:
  %call.i = tail call i32 @halide_malloc_alignment() #17
  %sub.i = add nsw i32 %call.i, -1
  %conv.i = sext i32 %sub.i to i64
  %add.i = add nsw i64 %conv.i, 16
  %neg.i = xor i64 %conv.i, -1
  %and.i = and i64 %add.i, %neg.i
  %idx.neg = sub nsw i64 0, %and.i
  %add.ptr = getelementptr inbounds i8, i8* %host, i64 %idx.neg
  %0 = bitcast i8* %add.ptr to %"struct.Halide::Runtime::Internal::CacheBlockHeader"*
  ret %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %0
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal18copy_memory_helperERKNS1_11device_copyEixx(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i32 %d, i64 %src_off, i64 %dst_off) local_unnamed_addr #0 {
entry:
  %cmp41 = icmp sgt i32 %d, -1
  br i1 %cmp41, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %while.body, %entry
  %d.addr.042 = phi i32 [ %dec, %while.body ], [ %d, %entry ]
  %idxprom36 = zext i32 %d.addr.042 to i64
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 3, i64 %idxprom36
  %0 = load i64, i64* %arrayidx, align 8, !tbaa !110
  %cmp1 = icmp eq i64 %0, 1
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %dec = add nsw i32 %d.addr.042, -1
  %cmp = icmp sgt i32 %d.addr.042, 0
  br i1 %cmp, label %land.rhs, label %if.then, !llvm.loop !242

while.end:                                        ; preds = %land.rhs, %entry
  %d.addr.0.lcssa = phi i32 [ %d, %entry ], [ %d.addr.042, %land.rhs ]
  %cmp2 = icmp eq i32 %d.addr.0.lcssa, -1
  br i1 %cmp2, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %while.end
  %idxprom5 = sext i32 %d.addr.0.lcssa to i64
  %arrayidx6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 3, i64 %idxprom5
  %1 = load i64, i64* %arrayidx6, align 8, !tbaa !110
  %cmp737.not = icmp eq i64 %1, 0
  br i1 %cmp737.not, label %if.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %sub = add nsw i32 %d.addr.0.lcssa, -1
  %arrayidx9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 4, i64 %idxprom5
  %arrayidx12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 5, i64 %idxprom5
  br label %for.body

if.then:                                          ; preds = %while.end, %while.body
  %src = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 0
  %2 = load i64, i64* %src, align 8, !tbaa !243
  %add = add i64 %2, %src_off
  %3 = inttoptr i64 %add to i8*
  %dst = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 1
  %4 = load i64, i64* %dst, align 8, !tbaa !245
  %add3 = add i64 %4, %dst_off
  %5 = inttoptr i64 %add3 to i8*
  %chunk_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 6
  %6 = load i64, i64* %chunk_size, align 8, !tbaa !246
  %call = tail call i8* @memcpy(i8* %5, i8* %3, i64 %6) #17
  br label %if.end

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %i.040 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %src_off.addr.039 = phi i64 [ %src_off, %for.body.lr.ph ], [ %add10, %for.body ]
  %dst_off.addr.038 = phi i64 [ %dst_off, %for.body.lr.ph ], [ %add13, %for.body ]
  tail call void @_ZN6Halide7Runtime8Internal18copy_memory_helperERKNS1_11device_copyEixx(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i32 %sub, i64 %src_off.addr.039, i64 %dst_off.addr.038) #19
  %7 = load i64, i64* %arrayidx9, align 8, !tbaa !110
  %add10 = add i64 %7, %src_off.addr.039
  %8 = load i64, i64* %arrayidx12, align 8, !tbaa !110
  %add13 = add i64 %8, %dst_off.addr.038
  %inc = add nuw i64 %i.040, 1
  %9 = load i64, i64* %arrayidx6, align 8, !tbaa !110
  %cmp7 = icmp ult i64 %inc, %9
  br i1 %cmp7, label %for.body, label %if.end, !llvm.loop !247

if.end:                                           ; preds = %for.body, %if.then, %for.cond.preheader
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal11copy_memoryERKNS1_11device_copyEPv(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i8* %user_context) local_unnamed_addr #0 {
entry:
  %src = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 0
  %0 = load i64, i64* %src, align 8, !tbaa !243
  %dst = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 1
  %1 = load i64, i64* %dst, align 8, !tbaa !245
  %cmp.not = icmp eq i64 %0, %1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %src_begin = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 2
  %2 = load i64, i64* %src_begin, align 8, !tbaa !248
  tail call void @_ZN6Halide7Runtime8Internal18copy_memory_helperERKNS1_11device_copyEixx(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i32 15, i64 %2, i64 0) #19
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal16make_buffer_copyEPK15halide_buffer_tbS4_b(%"struct.Halide::Runtime::Internal::device_copy"* noalias sret(%"struct.Halide::Runtime::Internal::device_copy") align 8 %agg.result, %struct.halide_buffer_t* %src, i1 zeroext %src_host, %struct.halide_buffer_t* %dst, i1 zeroext %dst_host) local_unnamed_addr #0 {
entry:
  %c = alloca %"struct.Halide::Runtime::Internal::device_copy", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %c to i8*
  call void @llvm.lifetime.start.p0i8(i64 416, i8* nonnull %0) #18
  br i1 %src_host, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 2
  %1 = load i8*, i8** %host, align 8, !tbaa !134
  %2 = ptrtoint i8* %1 to i64
  br label %cond.end

cond.false:                                       ; preds = %entry
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %3 = load i64, i64* %device, align 8, !tbaa !135
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ]
  %src2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 0
  store i64 %cond, i64* %src2, align 8, !tbaa !243
  br i1 %dst_host, label %cond.true4, label %cond.false6

cond.true4:                                       ; preds = %cond.end
  %host5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 2
  %4 = load i8*, i8** %host5, align 8, !tbaa !134
  %5 = ptrtoint i8* %4 to i64
  br label %cond.end8

cond.false6:                                      ; preds = %cond.end
  %device7 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  %6 = load i64, i64* %device7, align 8, !tbaa !135
  br label %cond.end8

cond.end8:                                        ; preds = %cond.false6, %cond.true4
  %cond9 = phi i64 [ %5, %cond.true4 ], [ %6, %cond.false6 ]
  %dst10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 1
  store i64 %cond9, i64* %dst10, align 8, !tbaa !245
  %bits.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 4, i32 1
  %7 = load i8, i8* %bits.i, align 1, !tbaa !144
  %conv.i = zext i8 %7 to i32
  %add.i = add nuw nsw i32 %conv.i, 7
  %div.i = lshr i32 %add.i, 3
  %conv = zext i32 %div.i to i64
  %chunk_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 6
  store i64 %conv, i64* %chunk_size, align 8, !tbaa !246
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 0
  store i64 1, i64* %arrayidx, align 8, !tbaa !110
  %arrayidx12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 0
  store i64 0, i64* %arrayidx12, align 8, !tbaa !110
  %arrayidx14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 0
  store i64 0, i64* %arrayidx14, align 8, !tbaa !110
  %arrayidx.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 1
  store i64 1, i64* %arrayidx.1, align 8, !tbaa !110
  %arrayidx12.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 1
  store i64 0, i64* %arrayidx12.1, align 8, !tbaa !110
  %arrayidx14.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 1
  store i64 0, i64* %arrayidx14.1, align 8, !tbaa !110
  %arrayidx.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 2
  store i64 1, i64* %arrayidx.2, align 8, !tbaa !110
  %arrayidx12.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 2
  store i64 0, i64* %arrayidx12.2, align 8, !tbaa !110
  %arrayidx14.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 2
  store i64 0, i64* %arrayidx14.2, align 8, !tbaa !110
  %arrayidx.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 3
  store i64 1, i64* %arrayidx.3, align 8, !tbaa !110
  %arrayidx12.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 3
  store i64 0, i64* %arrayidx12.3, align 8, !tbaa !110
  %arrayidx14.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 3
  store i64 0, i64* %arrayidx14.3, align 8, !tbaa !110
  %arrayidx.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 4
  store i64 1, i64* %arrayidx.4, align 8, !tbaa !110
  %arrayidx12.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 4
  store i64 0, i64* %arrayidx12.4, align 8, !tbaa !110
  %arrayidx14.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 4
  store i64 0, i64* %arrayidx14.4, align 8, !tbaa !110
  %arrayidx.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 5
  store i64 1, i64* %arrayidx.5, align 8, !tbaa !110
  %arrayidx12.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 5
  store i64 0, i64* %arrayidx12.5, align 8, !tbaa !110
  %arrayidx14.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 5
  store i64 0, i64* %arrayidx14.5, align 8, !tbaa !110
  %arrayidx.6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 6
  store i64 1, i64* %arrayidx.6, align 8, !tbaa !110
  %arrayidx12.6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 6
  store i64 0, i64* %arrayidx12.6, align 8, !tbaa !110
  %arrayidx14.6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 6
  store i64 0, i64* %arrayidx14.6, align 8, !tbaa !110
  %arrayidx.7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 7
  store i64 1, i64* %arrayidx.7, align 8, !tbaa !110
  %arrayidx12.7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 7
  store i64 0, i64* %arrayidx12.7, align 8, !tbaa !110
  %arrayidx14.7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 7
  store i64 0, i64* %arrayidx14.7, align 8, !tbaa !110
  %arrayidx.8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 8
  store i64 1, i64* %arrayidx.8, align 8, !tbaa !110
  %arrayidx12.8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 8
  store i64 0, i64* %arrayidx12.8, align 8, !tbaa !110
  %arrayidx14.8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 8
  store i64 0, i64* %arrayidx14.8, align 8, !tbaa !110
  %arrayidx.9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 9
  store i64 1, i64* %arrayidx.9, align 8, !tbaa !110
  %arrayidx12.9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 9
  store i64 0, i64* %arrayidx12.9, align 8, !tbaa !110
  %arrayidx14.9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 9
  store i64 0, i64* %arrayidx14.9, align 8, !tbaa !110
  %arrayidx.10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 10
  store i64 1, i64* %arrayidx.10, align 8, !tbaa !110
  %arrayidx12.10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 10
  store i64 0, i64* %arrayidx12.10, align 8, !tbaa !110
  %arrayidx14.10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 10
  store i64 0, i64* %arrayidx14.10, align 8, !tbaa !110
  %arrayidx.11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 11
  store i64 1, i64* %arrayidx.11, align 8, !tbaa !110
  %arrayidx12.11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 11
  store i64 0, i64* %arrayidx12.11, align 8, !tbaa !110
  %arrayidx14.11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 11
  store i64 0, i64* %arrayidx14.11, align 8, !tbaa !110
  %arrayidx.12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 12
  store i64 1, i64* %arrayidx.12, align 8, !tbaa !110
  %arrayidx12.12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 12
  store i64 0, i64* %arrayidx12.12, align 8, !tbaa !110
  %arrayidx14.12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 12
  store i64 0, i64* %arrayidx14.12, align 8, !tbaa !110
  %arrayidx.13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 13
  store i64 1, i64* %arrayidx.13, align 8, !tbaa !110
  %arrayidx12.13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 13
  store i64 0, i64* %arrayidx12.13, align 8, !tbaa !110
  %arrayidx14.13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 13
  store i64 0, i64* %arrayidx14.13, align 8, !tbaa !110
  %arrayidx.14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 14
  store i64 1, i64* %arrayidx.14, align 8, !tbaa !110
  %arrayidx12.14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 14
  store i64 0, i64* %arrayidx12.14, align 8, !tbaa !110
  %arrayidx14.14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 14
  store i64 0, i64* %arrayidx14.14, align 8, !tbaa !110
  %arrayidx.15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 15
  store i64 1, i64* %arrayidx.15, align 8, !tbaa !110
  %arrayidx12.15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 15
  store i64 0, i64* %arrayidx12.15, align 8, !tbaa !110
  %arrayidx14.15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 15
  store i64 0, i64* %arrayidx14.15, align 8, !tbaa !110
  %src_begin = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 2
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 5
  %8 = load i32, i32* %dimensions, align 4, !tbaa !129
  %cmp17272 = icmp sgt i32 %8, 0
  br i1 %cmp17272, label %for.body19.lr.ph, label %for.cond.cleanup18

for.body19.lr.ph:                                 ; preds = %cond.end8
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 6
  %9 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %dim23 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 6
  %10 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim23, align 8, !tbaa !137
  %wide.trip.count = zext i32 %8 to i64
  br label %for.body19

for.cond.cleanup18:                               ; preds = %for.body19, %cond.end8
  %11 = phi i64 [ 0, %cond.end8 ], [ %add, %for.body19 ]
  %12 = load i64, i64* %chunk_size, align 8, !tbaa !246
  %mul37 = mul i64 %11, %12
  store i64 %mul37, i64* %src_begin, align 8, !tbaa !248
  %dimensions39 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 5
  %13 = load i32, i32* %dimensions39, align 4, !tbaa !129
  %cmp40.not = icmp eq i32 %8, %13
  br i1 %cmp40.not, label %lor.lhs.false, label %if.then

for.body19:                                       ; preds = %for.body19, %for.body19.lr.ph
  %indvars.iv284 = phi i64 [ 0, %for.body19.lr.ph ], [ %indvars.iv.next285, %for.body19 ]
  %14 = phi i64 [ 0, %for.body19.lr.ph ], [ %add, %for.body19 ]
  %stride = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %9, i64 %indvars.iv284, i32 2
  %15 = load i32, i32* %stride, align 4, !tbaa !141
  %conv22 = sext i32 %15 to i64
  %min = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i64 %indvars.iv284, i32 0
  %16 = load i32, i32* %min, align 4, !tbaa !138
  %min29 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %9, i64 %indvars.iv284, i32 0
  %17 = load i32, i32* %min29, align 4, !tbaa !138
  %sub = sub nsw i32 %16, %17
  %conv30 = sext i32 %sub to i64
  %mul = mul nsw i64 %conv30, %conv22
  %add = add i64 %mul, %14
  %indvars.iv.next285 = add nuw nsw i64 %indvars.iv284, 1
  %exitcond286.not = icmp eq i64 %indvars.iv.next285, %wide.trip.count
  br i1 %exitcond286.not, label %for.cond.cleanup18, label %for.body19, !llvm.loop !249

lor.lhs.false:                                    ; preds = %for.cond.cleanup18
  %bits.i253 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 4, i32 1
  %18 = load i8, i8* %bits.i253, align 1, !tbaa !144
  %conv.i254 = zext i8 %18 to i32
  %add.i255 = add nuw nsw i32 %conv.i254, 7
  %div.i256 = lshr i32 %add.i255, 3
  %cmp45.not = icmp ne i32 %div.i, %div.i256
  %cmp48 = icmp sgt i32 %8, 16
  %or.cond261 = or i1 %cmp48, %cmp45.not
  br i1 %or.cond261, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.cond.cleanup18
  %19 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %agg.result to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(416) %19, i8 0, i64 416, i1 false)
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %cmp50 = icmp eq i64 %12, 0
  br i1 %cmp50, label %if.then51, label %for.cond54.preheader

for.cond54.preheader:                             ; preds = %if.end
  br i1 %cmp17272, label %for.body58.lr.ph, label %while.end

for.body58.lr.ph:                                 ; preds = %for.cond54.preheader
  %dim60 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 6
  %20 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim60, align 8, !tbaa !137
  %dim70 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 6
  %21 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim70, align 8, !tbaa !137
  %wide.trip.count282 = zext i32 %8 to i64
  br label %for.body58

if.then51:                                        ; preds = %if.end
  %22 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %agg.result to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(416) %22, i8 0, i64 416, i1 false)
  br label %cleanup

while.cond.preheader:                             ; preds = %for.cond.cleanup94
  %.pre = load i64, i64* %chunk_size, align 8, !tbaa !246
  %.pre290 = load i64, i64* %arrayidx12, align 8, !tbaa !110
  %cmp139263 = icmp eq i64 %.pre, %.pre290
  br i1 %cmp139263, label %land.rhs.lr.ph, label %while.end

land.rhs.lr.ph:                                   ; preds = %while.cond.preheader
  %.pre291 = load i64, i64* %arrayidx14, align 8, !tbaa !110
  br label %land.rhs

for.body58:                                       ; preds = %for.cond.cleanup94, %for.body58.lr.ph
  %indvars.iv278 = phi i64 [ 0, %for.body58.lr.ph ], [ %indvars.iv.next279, %for.cond.cleanup94 ]
  %stride63 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %20, i64 %indvars.iv278, i32 2
  %23 = load i32, i32* %stride63, align 4, !tbaa !141
  %conv64 = sext i32 %23 to i64
  %mul68 = mul nsw i64 %conv64, %conv
  %stride73 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %21, i64 %indvars.iv278, i32 2
  %24 = load i32, i32* %stride73, align 4, !tbaa !141
  %conv74 = sext i32 %24 to i64
  %mul78 = mul nsw i64 %conv74, %conv
  %cmp80264.not = icmp eq i64 %indvars.iv278, 0
  br i1 %cmp80264.not, label %for.end91, label %for.body81.lr.ph

for.body81.lr.ph:                                 ; preds = %for.body58
  %cmp86.not = icmp eq i64 %mul68, 0
  br i1 %cmp86.not, label %for.body81.preheader, label %for.body81.us

for.body81.preheader:                             ; preds = %for.body81.lr.ph
  %25 = trunc i64 %indvars.iv278 to i32
  br label %for.end91

for.body81.us:                                    ; preds = %for.inc89.us, %for.body81.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc89.us ], [ 0, %for.body81.lr.ph ]
  %arrayidx84.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv
  %26 = load i64, i64* %arrayidx84.us, align 8, !tbaa !110
  %cmp85.us = icmp ult i64 %mul68, %26
  br i1 %cmp85.us, label %for.end91.loopexit, label %for.inc89.us

for.inc89.us:                                     ; preds = %for.body81.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %indvars.iv278
  br i1 %exitcond.not, label %for.end91.loopexit, label %for.body81.us, !llvm.loop !250

for.end91.loopexit:                               ; preds = %for.inc89.us, %for.body81.us
  %insert.0.lcssa.ph.in = phi i64 [ %indvars.iv278, %for.inc89.us ], [ %indvars.iv, %for.body81.us ]
  %insert.0.lcssa.ph = trunc i64 %insert.0.lcssa.ph.in to i32
  br label %for.end91

for.end91:                                        ; preds = %for.end91.loopexit, %for.body81.preheader, %for.body58
  %insert.0.lcssa = phi i32 [ 0, %for.body58 ], [ %insert.0.lcssa.ph, %for.end91.loopexit ], [ %25, %for.body81.preheader ]
  %27 = zext i32 %insert.0.lcssa to i64
  %cmp93267 = icmp ugt i64 %indvars.iv278, %27
  br i1 %cmp93267, label %for.body95.preheader, label %for.cond.cleanup94

for.body95.preheader:                             ; preds = %for.end91
  %28 = sext i32 %insert.0.lcssa to i64
  br label %for.body95

for.cond.cleanup94:                               ; preds = %for.body95, %for.end91
  %extent122 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %20, i64 %indvars.iv278, i32 1
  %29 = load i32, i32* %extent122, align 4, !tbaa !140
  %conv123 = sext i32 %29 to i64
  %arrayidx126 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %27
  store i64 %conv123, i64* %arrayidx126, align 8, !tbaa !110
  %arrayidx129 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %27
  store i64 %mul68, i64* %arrayidx129, align 8, !tbaa !110
  %arrayidx132 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %27
  store i64 %mul78, i64* %arrayidx132, align 8, !tbaa !110
  %indvars.iv.next279 = add nuw nsw i64 %indvars.iv278, 1
  %exitcond283.not = icmp eq i64 %indvars.iv.next279, %wide.trip.count282
  br i1 %exitcond283.not, label %while.cond.preheader, label %for.body58, !llvm.loop !251

for.body95:                                       ; preds = %for.body95, %for.body95.preheader
  %indvars.iv280 = phi i64 [ %indvars.iv278, %for.body95.preheader ], [ %indvars.iv.next281, %for.body95 ]
  %indvars.iv.next281 = add nsw i64 %indvars.iv280, -1
  %arrayidx99 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281
  %30 = load i64, i64* %arrayidx99, align 8, !tbaa !110
  %arrayidx102 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv280
  store i64 %30, i64* %arrayidx102, align 8, !tbaa !110
  %arrayidx106 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281
  %31 = load i64, i64* %arrayidx106, align 8, !tbaa !110
  %arrayidx109 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv280
  store i64 %31, i64* %arrayidx109, align 8, !tbaa !110
  %arrayidx113 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281
  %32 = load i64, i64* %arrayidx113, align 8, !tbaa !110
  %arrayidx116 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv280
  store i64 %32, i64* %arrayidx116, align 8, !tbaa !110
  %cmp93 = icmp sgt i64 %indvars.iv.next281, %28
  br i1 %cmp93, label %for.body95, label %for.cond.cleanup94, !llvm.loop !252

land.rhs:                                         ; preds = %while.body, %land.rhs.lr.ph
  %33 = phi i64 [ %.pre291, %land.rhs.lr.ph ], [ %38, %while.body ]
  %34 = phi i64 [ %.pre290, %land.rhs.lr.ph ], [ %mul147, %while.body ]
  %cmp143 = icmp eq i64 %34, %33
  br i1 %cmp143, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %35 = load i64, i64* %arrayidx, align 8, !tbaa !110
  %mul147 = mul i64 %35, %33
  store i64 %mul147, i64* %chunk_size, align 8, !tbaa !246
  %36 = load i64, i64* %arrayidx.1, align 8, !tbaa !110
  store i64 %36, i64* %arrayidx, align 8, !tbaa !110
  %37 = load i64, i64* %arrayidx12.1, align 8, !tbaa !110
  store i64 %37, i64* %arrayidx12, align 8, !tbaa !110
  %38 = load i64, i64* %arrayidx14.1, align 8, !tbaa !110
  store i64 %38, i64* %arrayidx14, align 8, !tbaa !110
  %39 = load i64, i64* %arrayidx.2, align 8, !tbaa !110
  store i64 %39, i64* %arrayidx.1, align 8, !tbaa !110
  %40 = load i64, i64* %arrayidx12.2, align 8, !tbaa !110
  store i64 %40, i64* %arrayidx12.1, align 8, !tbaa !110
  %41 = load i64, i64* %arrayidx14.2, align 8, !tbaa !110
  store i64 %41, i64* %arrayidx14.1, align 8, !tbaa !110
  %42 = load i64, i64* %arrayidx.3, align 8, !tbaa !110
  store i64 %42, i64* %arrayidx.2, align 8, !tbaa !110
  %43 = load i64, i64* %arrayidx12.3, align 8, !tbaa !110
  store i64 %43, i64* %arrayidx12.2, align 8, !tbaa !110
  %44 = load i64, i64* %arrayidx14.3, align 8, !tbaa !110
  store i64 %44, i64* %arrayidx14.2, align 8, !tbaa !110
  %45 = load i64, i64* %arrayidx.4, align 8, !tbaa !110
  store i64 %45, i64* %arrayidx.3, align 8, !tbaa !110
  %46 = load i64, i64* %arrayidx12.4, align 8, !tbaa !110
  store i64 %46, i64* %arrayidx12.3, align 8, !tbaa !110
  %47 = load i64, i64* %arrayidx14.4, align 8, !tbaa !110
  store i64 %47, i64* %arrayidx14.3, align 8, !tbaa !110
  %48 = load i64, i64* %arrayidx.5, align 8, !tbaa !110
  store i64 %48, i64* %arrayidx.4, align 8, !tbaa !110
  %49 = load i64, i64* %arrayidx12.5, align 8, !tbaa !110
  store i64 %49, i64* %arrayidx12.4, align 8, !tbaa !110
  %50 = load i64, i64* %arrayidx14.5, align 8, !tbaa !110
  store i64 %50, i64* %arrayidx14.4, align 8, !tbaa !110
  %51 = load i64, i64* %arrayidx.6, align 8, !tbaa !110
  store i64 %51, i64* %arrayidx.5, align 8, !tbaa !110
  %52 = load i64, i64* %arrayidx12.6, align 8, !tbaa !110
  store i64 %52, i64* %arrayidx12.5, align 8, !tbaa !110
  %53 = load i64, i64* %arrayidx14.6, align 8, !tbaa !110
  store i64 %53, i64* %arrayidx14.5, align 8, !tbaa !110
  %54 = load i64, i64* %arrayidx.7, align 8, !tbaa !110
  store i64 %54, i64* %arrayidx.6, align 8, !tbaa !110
  %55 = load i64, i64* %arrayidx12.7, align 8, !tbaa !110
  store i64 %55, i64* %arrayidx12.6, align 8, !tbaa !110
  %56 = load i64, i64* %arrayidx14.7, align 8, !tbaa !110
  store i64 %56, i64* %arrayidx14.6, align 8, !tbaa !110
  %57 = load i64, i64* %arrayidx.8, align 8, !tbaa !110
  store i64 %57, i64* %arrayidx.7, align 8, !tbaa !110
  %58 = load i64, i64* %arrayidx12.8, align 8, !tbaa !110
  store i64 %58, i64* %arrayidx12.7, align 8, !tbaa !110
  %59 = load i64, i64* %arrayidx14.8, align 8, !tbaa !110
  store i64 %59, i64* %arrayidx14.7, align 8, !tbaa !110
  %60 = load i64, i64* %arrayidx.9, align 8, !tbaa !110
  store i64 %60, i64* %arrayidx.8, align 8, !tbaa !110
  %61 = load i64, i64* %arrayidx12.9, align 8, !tbaa !110
  store i64 %61, i64* %arrayidx12.8, align 8, !tbaa !110
  %62 = load i64, i64* %arrayidx14.9, align 8, !tbaa !110
  store i64 %62, i64* %arrayidx14.8, align 8, !tbaa !110
  %63 = load i64, i64* %arrayidx.10, align 8, !tbaa !110
  store i64 %63, i64* %arrayidx.9, align 8, !tbaa !110
  %64 = load i64, i64* %arrayidx12.10, align 8, !tbaa !110
  store i64 %64, i64* %arrayidx12.9, align 8, !tbaa !110
  %65 = load i64, i64* %arrayidx14.10, align 8, !tbaa !110
  store i64 %65, i64* %arrayidx14.9, align 8, !tbaa !110
  %66 = load i64, i64* %arrayidx.11, align 8, !tbaa !110
  store i64 %66, i64* %arrayidx.10, align 8, !tbaa !110
  %67 = load i64, i64* %arrayidx12.11, align 8, !tbaa !110
  store i64 %67, i64* %arrayidx12.10, align 8, !tbaa !110
  %68 = load i64, i64* %arrayidx14.11, align 8, !tbaa !110
  store i64 %68, i64* %arrayidx14.10, align 8, !tbaa !110
  %69 = load i64, i64* %arrayidx.12, align 8, !tbaa !110
  store i64 %69, i64* %arrayidx.11, align 8, !tbaa !110
  %70 = load i64, i64* %arrayidx12.12, align 8, !tbaa !110
  store i64 %70, i64* %arrayidx12.11, align 8, !tbaa !110
  %71 = load i64, i64* %arrayidx14.12, align 8, !tbaa !110
  store i64 %71, i64* %arrayidx14.11, align 8, !tbaa !110
  %72 = load i64, i64* %arrayidx.13, align 8, !tbaa !110
  store i64 %72, i64* %arrayidx.12, align 8, !tbaa !110
  %73 = load i64, i64* %arrayidx12.13, align 8, !tbaa !110
  store i64 %73, i64* %arrayidx12.12, align 8, !tbaa !110
  %74 = load i64, i64* %arrayidx14.13, align 8, !tbaa !110
  store i64 %74, i64* %arrayidx14.12, align 8, !tbaa !110
  %75 = load i64, i64* %arrayidx.14, align 8, !tbaa !110
  store i64 %75, i64* %arrayidx.13, align 8, !tbaa !110
  %76 = load i64, i64* %arrayidx12.14, align 8, !tbaa !110
  store i64 %76, i64* %arrayidx12.13, align 8, !tbaa !110
  %77 = load i64, i64* %arrayidx14.14, align 8, !tbaa !110
  store i64 %77, i64* %arrayidx14.13, align 8, !tbaa !110
  %78 = load i64, i64* %arrayidx.15, align 8, !tbaa !110
  store i64 %78, i64* %arrayidx.14, align 8, !tbaa !110
  %79 = load i64, i64* %arrayidx12.15, align 8, !tbaa !110
  store i64 %79, i64* %arrayidx12.14, align 8, !tbaa !110
  %80 = load i64, i64* %arrayidx14.15, align 8, !tbaa !110
  store i64 %80, i64* %arrayidx14.14, align 8, !tbaa !110
  store i64 1, i64* %arrayidx.15, align 8, !tbaa !110
  store i64 0, i64* %arrayidx12.15, align 8, !tbaa !110
  store i64 0, i64* %arrayidx14.15, align 8, !tbaa !110
  %cmp139 = icmp eq i64 %mul147, %37
  br i1 %cmp139, label %land.rhs, label %while.end, !llvm.loop !253

while.end:                                        ; preds = %while.body, %land.rhs, %while.cond.preheader, %for.cond54.preheader
  %81 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(416) %81, i8* nonnull align 8 dereferenceable(416) %0, i64 416, i1 false), !tbaa.struct !254
  br label %cleanup

cleanup:                                          ; preds = %while.end, %if.then51, %if.then
  call void @llvm.lifetime.end.p0i8(i64 416, i8* nonnull %0) #18
  ret void
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #10

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal24make_host_to_device_copyEPK15halide_buffer_t(%"struct.Halide::Runtime::Internal::device_copy"* noalias sret(%"struct.Halide::Runtime::Internal::device_copy") align 8 %agg.result, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  tail call void @_ZN6Halide7Runtime8Internal16make_buffer_copyEPK15halide_buffer_tbS4_b(%"struct.Halide::Runtime::Internal::device_copy"* sret(%"struct.Halide::Runtime::Internal::device_copy") align 8 %agg.result, %struct.halide_buffer_t* %buf, i1 zeroext true, %struct.halide_buffer_t* %buf, i1 zeroext false) #19
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal24make_device_to_host_copyEPK15halide_buffer_t(%"struct.Halide::Runtime::Internal::device_copy"* noalias sret(%"struct.Halide::Runtime::Internal::device_copy") align 8 %agg.result, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  tail call void @_ZN6Halide7Runtime8Internal16make_buffer_copyEPK15halide_buffer_tbS4_b(%"struct.Halide::Runtime::Internal::device_copy"* sret(%"struct.Halide::Runtime::Internal::device_copy") align 8 %agg.result, %struct.halide_buffer_t* %buf, i1 zeroext false, %struct.halide_buffer_t* %buf, i1 zeroext true) #19
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %key1, i8* %key2, i64 %key_size) local_unnamed_addr #0 {
entry:
  %call = tail call i32 @memcmp(i8* %key1, i8* %key2, i64 %key_size) #17
  %cmp = icmp eq i32 %call, 0
  ret i1 %cmp
}

declare i32 @memcmp(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %buf, %struct.halide_dimension_t* %shape) local_unnamed_addr #0 {
entry:
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %0 = load i32, i32* %dimensions, align 4, !tbaa !129
  %cmp9 = icmp sgt i32 %0, 0
  br i1 %cmp9, label %for.body.lr.ph, label %return

for.body.lr.ph:                                   ; preds = %entry
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %1 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %2 = sext i32 %0 to i64
  br label %for.body

for.cond:                                         ; preds = %_ZNK18halide_dimension_tneERKS_.exit
  %cmp = icmp slt i64 %indvars.iv.next, %2
  br i1 %cmp, label %for.body, label %return, !llvm.loop !255

for.body:                                         ; preds = %for.cond, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %min.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %1, i64 %indvars.iv, i32 0
  %3 = load i32, i32* %min.i.i, align 4, !tbaa !138
  %min2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv, i32 0
  %4 = load i32, i32* %min2.i.i, align 4, !tbaa !138
  %cmp.i.i = icmp eq i32 %3, %4
  br i1 %cmp.i.i, label %land.lhs.true.i.i, label %return

land.lhs.true.i.i:                                ; preds = %for.body
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %1, i64 %indvars.iv, i32 1
  %5 = load i32, i32* %extent.i.i, align 4, !tbaa !140
  %extent3.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv, i32 1
  %6 = load i32, i32* %extent3.i.i, align 4, !tbaa !140
  %cmp4.i.i = icmp eq i32 %5, %6
  br i1 %cmp4.i.i, label %land.lhs.true5.i.i, label %return

land.lhs.true5.i.i:                               ; preds = %land.lhs.true.i.i
  %stride.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %1, i64 %indvars.iv, i32 2
  %7 = load i32, i32* %stride.i.i, align 4, !tbaa !141
  %stride6.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv, i32 2
  %8 = load i32, i32* %stride6.i.i, align 4, !tbaa !141
  %cmp7.i.i = icmp eq i32 %7, %8
  br i1 %cmp7.i.i, label %_ZNK18halide_dimension_tneERKS_.exit, label %return

_ZNK18halide_dimension_tneERKS_.exit:             ; preds = %land.lhs.true5.i.i
  %flags.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %1, i64 %indvars.iv, i32 3
  %9 = load i32, i32* %flags.i.i, align 4, !tbaa !208
  %flags8.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv, i32 3
  %10 = load i32, i32* %flags8.i.i, align 4, !tbaa !208
  %cmp9.i.i.not = icmp eq i32 %9, %10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp9.i.i.not, label %for.cond, label %return

return:                                           ; preds = %_ZNK18halide_dimension_tneERKS_.exit, %land.lhs.true5.i.i, %land.lhs.true.i.i, %for.body, %for.cond, %entry
  %cmp.lcssa = phi i1 [ true, %entry ], [ false, %for.body ], [ false, %land.lhs.true.i.i ], [ false, %land.lhs.true5.i.i ], [ true, %for.cond ], [ false, %_ZNK18halide_dimension_tneERKS_.exit ]
  ret i1 %cmp.lcssa
}

; Function Attrs: alwaysinline nounwind mustprogress
define linkonce i64 @_ZN6Halide7Runtime8Internal12header_bytesEv() local_unnamed_addr #6 {
entry:
  %call = tail call i32 @halide_malloc_alignment() #17
  %sub = add nsw i32 %call, -1
  %conv = sext i32 %sub to i64
  %add = add nsw i64 %conv, 16
  %neg = xor i64 %conv, -1
  %and = and i64 %add, %neg
  ret i64 %and
}

; Function Attrs: nounwind mustprogress
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal10CacheEntry4initEPKhmjPK15halide_buffer_tiPPS5_by(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %this, i8* %cache_key, i64 %cache_key_size, i32 %key_hash, %struct.halide_buffer_t* %computed_bounds_buf, i32 %tuples, %struct.halide_buffer_t** %tuple_buffers, i1 zeroext %has_eviction_key_arg, i64 %eviction_key_arg) local_unnamed_addr #0 align 2 {
entry:
  %frombool = zext i1 %has_eviction_key_arg to i8
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %next, align 8, !tbaa !235
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 1
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !256
  %less_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !257
  %key_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 4
  store i64 %cache_key_size, i64* %key_size, align 8, !tbaa !258
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 6
  store i32 %key_hash, i32* %hash, align 8, !tbaa !259
  %in_use_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 7
  store i32 0, i32* %in_use_count, align 4, !tbaa !260
  %tuple_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 8
  store i32 %tuples, i32* %tuple_count, align 8, !tbaa !238
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %computed_bounds_buf, i64 0, i32 5
  %0 = load i32, i32* %dimensions, align 4, !tbaa !129
  %dimensions2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 9
  store i32 %0, i32* %dimensions2, align 4, !tbaa !261
  %conv = zext i32 %tuples to i64
  %mul = mul nuw nsw i64 %conv, 56
  %conv5 = sext i32 %0 to i64
  %add8 = add i32 %tuples, 1
  %conv9 = zext i32 %add8 to i64
  %mul6 = shl nuw nsw i64 %conv9, 4
  %mul10 = mul i64 %mul6, %conv5
  %add11 = add i64 %mul10, %mul
  %add13 = add i64 %add11, %cache_key_size
  %call = tail call i8* @halide_malloc(i8* null, i64 %add13) #17
  %metadata_storage = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 3
  store i8* %call, i8** %metadata_storage, align 8, !tbaa !239
  %tobool.not = icmp eq i8* %call, null
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %buf = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 11
  %1 = bitcast %struct.halide_buffer_t** %buf to i8**
  store i8* %call, i8** %1, align 8, !tbaa !240
  %add.ptr = getelementptr inbounds i8, i8* %call, i64 %mul
  %computed_bounds = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 10
  %2 = bitcast %struct.halide_dimension_t** %computed_bounds to i8**
  store i8* %add.ptr, i8** %2, align 8, !tbaa !262
  %add.ptr18 = getelementptr inbounds i8, i8* %call, i64 %add11
  %key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 5
  store i8* %add.ptr18, i8** %key, align 8, !tbaa !263
  %3 = load i64, i64* %key_size, align 8, !tbaa !258
  %cmp117.not = icmp eq i64 %3, 0
  br i1 %cmp117.not, label %for.cond23.preheader, label %for.body.preheader

for.body.preheader:                               ; preds = %if.end
  %4 = load i8, i8* %cache_key, align 1, !tbaa !14
  store i8 %4, i8* %add.ptr18, align 1, !tbaa !14
  %5 = load i64, i64* %key_size, align 8, !tbaa !258
  %cmp130 = icmp ugt i64 %5, 1
  br i1 %cmp130, label %for.body.for.body_crit_edge, label %for.cond23.preheader, !llvm.loop !264

for.cond23.preheader:                             ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %if.end
  %6 = load i32, i32* %dimensions2, align 4, !tbaa !261
  %cmp25115 = icmp sgt i32 %6, 0
  br i1 %cmp25115, label %for.body27.lr.ph, label %for.cond36.preheader

for.body27.lr.ph:                                 ; preds = %for.cond23.preheader
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %computed_bounds_buf, i64 0, i32 6
  br label %for.body27

for.body.for.body_crit_edge:                      ; preds = %for.body.for.body_crit_edge, %for.body.preheader
  %inc131 = phi i64 [ %inc, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.pre = load i8*, i8** %key, align 8, !tbaa !263
  %arrayidx = getelementptr inbounds i8, i8* %cache_key, i64 %inc131
  %7 = load i8, i8* %arrayidx, align 1, !tbaa !14
  %arrayidx21 = getelementptr inbounds i8, i8* %.pre, i64 %inc131
  store i8 %7, i8* %arrayidx21, align 1, !tbaa !14
  %inc = add nuw i64 %inc131, 1
  %8 = load i64, i64* %key_size, align 8, !tbaa !258
  %cmp = icmp ult i64 %inc, %8
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.cond23.preheader, !llvm.loop !264

for.cond36.preheader:                             ; preds = %for.body27, %for.cond23.preheader
  %9 = load i32, i32* %tuple_count, align 8, !tbaa !238
  %cmp38113.not = icmp eq i32 %9, 0
  br i1 %cmp38113.not, label %for.cond.cleanup39, label %for.body40

for.body27:                                       ; preds = %for.body27, %for.body27.lr.ph
  %indvars.iv121 = phi i64 [ 0, %for.body27.lr.ph ], [ %indvars.iv.next122, %for.body27 ]
  %10 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %arrayidx28 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i64 %indvars.iv121
  %11 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds, align 8, !tbaa !262
  %arrayidx31 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i64 %indvars.iv121
  %12 = bitcast %struct.halide_dimension_t* %arrayidx31 to i8*
  %13 = bitcast %struct.halide_dimension_t* %arrayidx28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %12, i8* nonnull align 4 dereferenceable(16) %13, i64 16, i1 false), !tbaa.struct !149
  %indvars.iv.next122 = add nuw nsw i64 %indvars.iv121, 1
  %14 = load i32, i32* %dimensions2, align 4, !tbaa !261
  %15 = sext i32 %14 to i64
  %cmp25 = icmp slt i64 %indvars.iv.next122, %15
  br i1 %cmp25, label %for.body27, label %for.cond36.preheader, !llvm.loop !265

for.cond36.loopexit:                              ; preds = %for.body59.for.body59_crit_edge, %for.body59.preheader, %for.body40
  %16 = load i32, i32* %tuple_count, align 8, !tbaa !238
  %17 = zext i32 %16 to i64
  %cmp38 = icmp ult i64 %indvars.iv.next120, %17
  br i1 %cmp38, label %for.body40, label %for.cond.cleanup39, !llvm.loop !266

for.cond.cleanup39:                               ; preds = %for.cond36.loopexit, %for.cond36.preheader
  %has_eviction_key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 13
  store i8 %frombool, i8* %has_eviction_key, align 8, !tbaa !267
  %eviction_key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 12
  store i64 %eviction_key_arg, i64* %eviction_key, align 8, !tbaa !268
  br label %cleanup

for.body40:                                       ; preds = %for.cond36.loopexit, %for.cond36.preheader
  %indvars.iv119 = phi i64 [ %indvars.iv.next120, %for.cond36.loopexit ], [ 0, %for.cond36.preheader ]
  %arrayidx42 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv119
  %18 = bitcast %struct.halide_buffer_t** %arrayidx42 to i8**
  %19 = load i8*, i8** %18, align 8, !tbaa !10
  %20 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !240
  %arrayidx45 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %20, i64 %indvars.iv119
  %21 = bitcast %struct.halide_buffer_t* %arrayidx45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %21, i8* nonnull align 8 dereferenceable(56) %19, i64 56, i1 false), !tbaa.struct !152
  %22 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds, align 8, !tbaa !262
  %indvars.iv.next120 = add nuw nsw i64 %indvars.iv119, 1
  %23 = load i32, i32* %dimensions2, align 4, !tbaa !261
  %24 = trunc i64 %indvars.iv.next120 to i32
  %mul49 = mul i32 %23, %24
  %idx.ext = zext i32 %mul49 to i64
  %add.ptr50 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %idx.ext
  %25 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !240
  %dim54 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %25, i64 %indvars.iv119, i32 6
  store %struct.halide_dimension_t* %add.ptr50, %struct.halide_dimension_t** %dim54, align 8, !tbaa !137
  %cmp57111 = icmp sgt i32 %23, 0
  br i1 %cmp57111, label %for.body59.preheader, label %for.cond36.loopexit

for.body59.preheader:                             ; preds = %for.body40
  %26 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx42, align 8, !tbaa !10
  %dim62125 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %26, i64 0, i32 6
  %27 = bitcast %struct.halide_dimension_t** %dim62125 to i8**
  %28 = load i8*, i8** %27, align 8, !tbaa !137
  %29 = bitcast %struct.halide_dimension_t* %add.ptr50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %29, i8* nonnull align 4 dereferenceable(16) %28, i64 16, i1 false), !tbaa.struct !149
  %30 = load i32, i32* %dimensions2, align 4, !tbaa !261
  %cmp57128 = icmp sgt i32 %30, 1
  br i1 %cmp57128, label %for.body59.for.body59_crit_edge, label %for.cond36.loopexit, !llvm.loop !269

for.body59.for.body59_crit_edge:                  ; preds = %for.body59.for.body59_crit_edge, %for.body59.preheader
  %indvars.iv.next129 = phi i64 [ %indvars.iv.next, %for.body59.for.body59_crit_edge ], [ 1, %for.body59.preheader ]
  %.pre123 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !240
  %dim68.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %.pre123, i64 %indvars.iv119, i32 6
  %.pre124 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim68.phi.trans.insert, align 8, !tbaa !137
  %31 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx42, align 8, !tbaa !10
  %dim62 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %31, i64 0, i32 6
  %32 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim62, align 8, !tbaa !137
  %arrayidx64 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %32, i64 %indvars.iv.next129
  %arrayidx70 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre124, i64 %indvars.iv.next129
  %33 = bitcast %struct.halide_dimension_t* %arrayidx70 to i8*
  %34 = bitcast %struct.halide_dimension_t* %arrayidx64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %33, i8* nonnull align 4 dereferenceable(16) %34, i64 16, i1 false), !tbaa.struct !149
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next129, 1
  %35 = load i32, i32* %dimensions2, align 4, !tbaa !261
  %36 = sext i32 %35 to i64
  %cmp57 = icmp slt i64 %indvars.iv.next, %36
  br i1 %cmp57, label %for.body59.for.body59_crit_edge, label %for.cond36.loopexit, !llvm.loop !269

cleanup:                                          ; preds = %for.cond.cleanup39, %entry
  %37 = xor i1 %tobool.not, true
  ret i1 %37
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @_ZN6Halide7Runtime8Internal8djb_hashEPKhm(i8* %key, i64 %key_size) local_unnamed_addr #0 {
entry:
  %cmp8.not = icmp eq i64 %key_size, 0
  br i1 %cmp8.not, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %h.0.lcssa = phi i32 [ 5381, %entry ], [ %add1, %for.body ]
  ret i32 %h.0.lcssa

for.body:                                         ; preds = %for.body, %entry
  %i.010 = phi i64 [ %inc, %for.body ], [ 0, %entry ]
  %h.09 = phi i32 [ %add1, %for.body ], [ 5381, %entry ]
  %add = mul i32 %h.09, 33
  %arrayidx = getelementptr inbounds i8, i8* %key, i64 %i.010
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !14
  %conv = zext i8 %0 to i32
  %add1 = add i32 %add, %conv
  %inc = add nuw i64 %i.010, 1
  %exitcond.not = icmp eq i64 %inc, %key_size
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !270
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal11prune_cacheEv() local_unnamed_addr #0 {
entry:
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  %1 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  %2 = load i64, i64* @_ZN6Halide7Runtime8Internal14max_cache_sizeE, align 8, !tbaa !110
  %cmp84 = icmp sgt i64 %1, %2
  %cmp185 = icmp ne %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null
  %3 = and i1 %cmp185, %cmp84
  br i1 %3, label %while.body, label %while.end42

while.body:                                       ; preds = %if.end41, %entry
  %4 = phi i64 [ %28, %if.end41 ], [ %2, %entry ]
  %5 = phi i64 [ %29, %if.end41 ], [ %1, %entry ]
  %prune_candidate.086 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %6, %if.end41 ], [ %0, %entry ]
  %more_recent2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 1
  %6 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent2, align 8, !tbaa !256
  %in_use_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 7
  %7 = load i32, i32* %in_use_count, align 4, !tbaa !260
  %cmp3 = icmp eq i32 %7, 0
  br i1 %cmp3, label %if.then, label %if.end41

if.then:                                          ; preds = %while.body
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 6
  %8 = load i32, i32* %hash, align 8, !tbaa !259
  %9 = and i32 %8, 255
  %idxprom = zext i32 %9 to i64
  %arrayidx = getelementptr inbounds [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 %idxprom
  %10 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 8, !tbaa !10
  %cmp5 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %10, %prune_candidate.086
  br i1 %cmp5, label %if.then6, label %while.cond9

if.then6:                                         ; preds = %if.then
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 0
  %11 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next, align 8, !tbaa !235
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %11, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 8, !tbaa !10
  br label %if.end21

while.cond9:                                      ; preds = %land.rhs11, %if.then
  %prev_hash_entry.0 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %12, %land.rhs11 ], [ %10, %if.then ]
  %cmp10.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %prev_hash_entry.0, null
  br i1 %cmp10.not, label %if.then18, label %land.rhs11

land.rhs11:                                       ; preds = %while.cond9
  %next12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prev_hash_entry.0, i64 0, i32 0
  %12 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next12, align 8, !tbaa !235
  %cmp13.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %12, %prune_candidate.086
  br i1 %cmp13.not, label %do.end, label %while.cond9, !llvm.loop !271

if.then18:                                        ; preds = %while.cond9
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @.str.2.42, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.end

do.end:                                           ; preds = %if.then18, %land.rhs11
  %next19 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 0
  %13 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next19, align 8, !tbaa !235
  %next20 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prev_hash_entry.0, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %13, %"struct.Halide::Runtime::Internal::CacheEntry"** %next20, align 8, !tbaa !235
  br label %if.end21

if.end21:                                         ; preds = %do.end, %if.then6
  %14 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  %cmp22 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %14, %prune_candidate.086
  br i1 %cmp22, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end21
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %6, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.end21
  %cmp25.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %6, null
  br i1 %cmp25.not, label %if.end28, label %if.then26

if.then26:                                        ; preds = %if.end24
  %less_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 2
  %15 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !257
  %less_recent27 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %6, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %15, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent27, align 8, !tbaa !257
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.end24
  %16 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  %cmp29 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %16, %prune_candidate.086
  %less_recent31 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 2
  %17 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent31, align 8, !tbaa !257
  br i1 %cmp29, label %if.then30, label %if.end32

if.then30:                                        ; preds = %if.end28
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %17, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  br label %if.end32

if.end32:                                         ; preds = %if.then30, %if.end28
  %cmp34.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %17, null
  br i1 %cmp34.not, label %if.end37, label %if.then35

if.then35:                                        ; preds = %if.end32
  %less_recent33 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %6, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent33, align 8, !tbaa !257
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.end32
  %tuple_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 8
  %18 = load i32, i32* %tuple_count, align 8, !tbaa !238
  %cmp3882.not = icmp eq i32 %18, 0
  br i1 %cmp3882.not, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end37
  %buf = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 11
  %19 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !240
  %_ZN6Halide7Runtime8Internal18current_cache_sizeE.promoted = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  %wide.trip.count = zext i32 %18 to i64
  br label %for.body

for.cond.for.cond.cleanup_crit_edge:              ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  store i64 %sub, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.for.cond.cleanup_crit_edge, %if.end37
  tail call void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %prune_candidate.086) #19
  %20 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086 to i8*
  tail call void @halide_free(i8* null, i8* nonnull %20) #17
  %.pre92 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  %.pre93 = load i64, i64* @_ZN6Halide7Runtime8Internal14max_cache_sizeE, align 8, !tbaa !110
  br label %if.end41

for.body:                                         ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %sub89 = phi i64 [ %_ZN6Halide7Runtime8Internal18current_cache_sizeE.promoted, %for.body.lr.ph ], [ %sub, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %19, i64 %indvars.iv, i32 5
  %21 = load i32, i32* %dimensions.i.i, align 4, !tbaa !129
  %cmp19.i.i = icmp sgt i32 %21, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %for.body
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %19, i64 %indvars.iv, i32 6
  %22 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !137
  %wide.trip.count.i.i = zext i32 %21 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %if.end.i.i ]
  %index.021.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %index.1.i.i, %if.end.i.i ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv.i.i, i32 2
  %23 = load i32, i32* %stride2.i.i, align 4, !tbaa !141
  %cmp3.i.i = icmp sgt i32 %23, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %23 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv.i.i, i32 1
  %24 = load i32, i32* %extent.i.i, align 4, !tbaa !140
  %sub.i.i = add nsw i32 %24, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i, label %for.body.i.i, !llvm.loop !272

for.body.i13.i:                                   ; preds = %if.end.i24.i, %if.end.i.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ 0, %if.end.i.i ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ 0, %if.end.i.i ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv.i10.i, i32 2
  %25 = load i32, i32* %stride2.i11.i, align 4, !tbaa !141
  %cmp3.i12.i = icmp slt i32 %25, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %25 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv.i10.i, i32 1
  %26 = load i32, i32* %extent.i15.i, align 4, !tbaa !140
  %sub.i16.i = add nsw i32 %26, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !273

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i
  %add8.i.i.neg = xor i64 %index.1.i.i, -1
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, %for.body
  %add8.i27.i.neg = phi i64 [ -1, %for.body ], [ %add8.i.i.neg, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %index.0.lcssa.i9.i = phi i64 [ 0, %for.body ], [ %index.1.i21.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i.neg = add i64 %index.0.lcssa.i9.i, %add8.i27.i.neg
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %19, i64 %indvars.iv, i32 4, i32 1
  %27 = load i8, i8* %bits.i.i, align 1, !tbaa !144
  %conv.i.i = zext i8 %27 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i4.i, 3
  %mul.i.neg = mul i64 %div.i.i, %sub.i.neg
  %sub = add i64 %mul.i.neg, %sub89
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.for.cond.cleanup_crit_edge, label %for.body, !llvm.loop !274

if.end41:                                         ; preds = %for.cond.cleanup, %while.body
  %28 = phi i64 [ %.pre93, %for.cond.cleanup ], [ %4, %while.body ]
  %29 = phi i64 [ %.pre92, %for.cond.cleanup ], [ %5, %while.body ]
  %cmp = icmp sgt i64 %29, %28
  %cmp1 = icmp ne %"struct.Halide::Runtime::Internal::CacheEntry"* %6, null
  %30 = and i1 %cmp1, %cmp
  br i1 %30, label %while.body, label %while.end42, !llvm.loop !275

while.end42:                                      ; preds = %if.end41, %entry
  ret void
}

; Function Attrs: nounwind
define weak void @halide_memoization_cache_set_size(i64 %size) local_unnamed_addr #4 {
entry:
  %cmp = icmp eq i64 %size, 0
  %spec.store.select = select i1 %cmp, i64 1048576, i64 %size
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #17
  store i64 %spec.store.select, i64* @_ZN6Halide7Runtime8Internal14max_cache_sizeE, align 8, !tbaa !110
  tail call void @_ZN6Halide7Runtime8Internal11prune_cacheEv() #19
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #17
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_memoization_cache_lookup(i8* %user_context, i8* %cache_key, i32 %size, %struct.halide_buffer_t* %computed_bounds, i32 %tuple_count, %struct.halide_buffer_t** %tuple_buffers) local_unnamed_addr #4 {
entry:
  %conv = sext i32 %size to i64
  %call = tail call i32 @_ZN6Halide7Runtime8Internal8djb_hashEPKhm(i8* %cache_key, i64 %conv) #19
  %0 = and i32 %call, 255
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #17
  %idxprom = zext i32 %0 to i64
  %arrayidx = getelementptr inbounds [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 %idxprom
  %entry3.0220 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 8, !tbaa !10
  %cmp.not221 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0220, null
  br i1 %cmp.not221, label %for.cond75.preheader, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %cmp16215 = icmp sgt i32 %tuple_count, 0
  %1 = sext i32 %tuple_count to i64
  br label %while.body

for.cond75.preheader:                             ; preds = %if.end73, %entry
  %cmp76210 = icmp sgt i32 %tuple_count, 0
  br i1 %cmp76210, label %for.body78.preheader, label %cleanup119

for.body78.preheader:                             ; preds = %for.cond75.preheader
  %wide.trip.count = zext i32 %tuple_count to i64
  br label %for.body78

while.body:                                       ; preds = %if.end73, %while.body.lr.ph
  %entry3.0222 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry3.0220, %while.body.lr.ph ], [ %entry3.0, %if.end73 ]
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 6
  %2 = load i32, i32* %hash, align 8, !tbaa !259
  %cmp4 = icmp eq i32 %2, %call
  br i1 %cmp4, label %land.lhs.true, label %if.end73

land.lhs.true:                                    ; preds = %while.body
  %key_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 4
  %3 = load i64, i64* %key_size, align 8, !tbaa !258
  %cmp6 = icmp eq i64 %3, %conv
  br i1 %cmp6, label %land.lhs.true7, label %if.end73

land.lhs.true7:                                   ; preds = %land.lhs.true
  %key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 5
  %4 = load i8*, i8** %key, align 8, !tbaa !263
  %call9 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %4, i8* %cache_key, i64 %conv) #19
  br i1 %call9, label %land.lhs.true10, label %if.end73

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %computed_bounds11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 10
  %5 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds11, align 8, !tbaa !262
  %call12 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %computed_bounds, %struct.halide_dimension_t* %5) #19
  br i1 %call12, label %land.lhs.true13, label %if.end73

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %tuple_count14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 8
  %6 = load i32, i32* %tuple_count14, align 8, !tbaa !238
  %cmp15 = icmp eq i32 %6, %tuple_count
  br i1 %cmp15, label %for.cond.preheader, label %if.end73

for.cond.preheader:                               ; preds = %land.lhs.true13
  br i1 %cmp16215, label %for.body.lr.ph, label %if.then23

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %buf = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 11
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  br i1 %call21, label %if.then23, label %if.end73

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv226 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next227, %for.body ]
  %arrayidx18 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv226
  %7 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx18, align 8, !tbaa !10
  %8 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !240
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %8, i64 %indvars.iv226, i32 6
  %9 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %call21 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %7, %struct.halide_dimension_t* %9) #19
  %indvars.iv.next227 = add nuw nsw i64 %indvars.iv226, 1
  %cmp16 = icmp slt i64 %indvars.iv.next227, %1
  %10 = and i1 %call21, %cmp16
  br i1 %10, label %for.body, label %for.cond.cleanup, !llvm.loop !276

if.then23:                                        ; preds = %for.cond.cleanup, %for.cond.preheader
  %11 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  %cmp24.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, %11
  br i1 %cmp24.not, label %if.end57, label %do.body

do.body:                                          ; preds = %if.then23
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 1
  %12 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !256
  %cmp26.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %12, null
  br i1 %cmp26.not, label %if.then27, label %do.end

if.then27:                                        ; preds = %do.body
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @.str.3.43, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.end

do.end:                                           ; preds = %if.then27, %do.body
  %less_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 2
  %13 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !257
  %cmp28.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %13, null
  br i1 %cmp28.not, label %do.body33, label %if.then29

if.then29:                                        ; preds = %do.end
  %14 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !256
  %more_recent32 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %13, i64 0, i32 1
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %14, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent32, align 8, !tbaa !256
  %.pr = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !256
  br label %do.body41

do.body33:                                        ; preds = %do.end
  %15 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  %cmp34 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %15, %entry3.0222
  br i1 %cmp34, label %do.end38, label %if.then35

if.then35:                                        ; preds = %do.body33
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.4.44, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.end38

do.end38:                                         ; preds = %if.then35, %do.body33
  %16 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !256
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %16, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  br label %do.body41

do.body41:                                        ; preds = %do.end38, %if.then29
  %17 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %.pr, %if.then29 ], [ %16, %do.end38 ]
  %cmp43.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %17, null
  br i1 %cmp43.not, label %if.then44, label %do.end47

if.then44:                                        ; preds = %do.body41
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @.str.5.45, i64 0, i64 0)) #17
  tail call void @abort() #17
  %.pre = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !256
  br label %do.end47

do.end47:                                         ; preds = %if.then44, %do.body41
  %18 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %.pre, %if.then44 ], [ %17, %do.body41 ]
  %19 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !257
  %less_recent50 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %18, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %19, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent50, align 8, !tbaa !257
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !256
  %20 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %20, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !257
  %cmp53.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %20, null
  br i1 %cmp53.not, label %if.end56, label %if.then54

if.then54:                                        ; preds = %do.end47
  %more_recent55 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %20, i64 0, i32 1
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent55, align 8, !tbaa !256
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %do.end47
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then23
  br i1 %cmp16215, label %for.body62.lr.ph, label %cleanup119.loopexit223

for.body62.lr.ph:                                 ; preds = %if.end57
  %buf66 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 11
  %wide.trip.count230 = zext i32 %tuple_count to i64
  br label %for.body62

for.body62:                                       ; preds = %for.body62, %for.body62.lr.ph
  %indvars.iv228 = phi i64 [ 0, %for.body62.lr.ph ], [ %indvars.iv.next229, %for.body62 ]
  %arrayidx65 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv228
  %21 = bitcast %struct.halide_buffer_t** %arrayidx65 to i8**
  %22 = load i8*, i8** %21, align 8, !tbaa !10
  %23 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf66, align 8, !tbaa !240
  %arrayidx68 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %23, i64 %indvars.iv228
  %24 = bitcast %struct.halide_buffer_t* %arrayidx68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %22, i8* nonnull align 8 dereferenceable(56) %24, i64 56, i1 false), !tbaa.struct !152
  %indvars.iv.next229 = add nuw nsw i64 %indvars.iv228, 1
  %exitcond231.not = icmp eq i64 %indvars.iv.next229, %wide.trip.count230
  br i1 %exitcond231.not, label %cleanup119.loopexit223, label %for.body62, !llvm.loop !277

if.end73:                                         ; preds = %for.cond.cleanup, %land.lhs.true13, %land.lhs.true10, %land.lhs.true7, %land.lhs.true, %while.body
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 0
  %entry3.0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next, align 8, !tbaa !10
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0, null
  br i1 %cmp.not, label %for.cond75.preheader, label %while.body, !llvm.loop !278

for.body78:                                       ; preds = %for.inc114, %for.body78.preheader
  %indvars.iv = phi i64 [ 0, %for.body78.preheader ], [ %indvars.iv.next, %for.inc114 ]
  %arrayidx81 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv
  %25 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx81, align 8, !tbaa !10
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %25, i64 0, i32 5
  %26 = load i32, i32* %dimensions.i.i, align 4, !tbaa !129
  %cmp19.i.i = icmp sgt i32 %26, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %for.body78
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %25, i64 0, i32 6
  %27 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !137
  %wide.trip.count.i.i = zext i32 %26 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %if.end.i.i ]
  %index.021.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %index.1.i.i, %if.end.i.i ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %27, i64 %indvars.iv.i.i, i32 2
  %28 = load i32, i32* %stride2.i.i, align 4, !tbaa !141
  %cmp3.i.i = icmp sgt i32 %28, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %28 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %27, i64 %indvars.iv.i.i, i32 1
  %29 = load i32, i32* %extent.i.i, align 4, !tbaa !140
  %sub.i.i = add nsw i32 %29, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i, label %for.body.i.i, !llvm.loop !272

for.body.i13.i:                                   ; preds = %if.end.i24.i, %if.end.i.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ 0, %if.end.i.i ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ 0, %if.end.i.i ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %27, i64 %indvars.iv.i10.i, i32 2
  %30 = load i32, i32* %stride2.i11.i, align 4, !tbaa !141
  %cmp3.i12.i = icmp slt i32 %30, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %30 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %27, i64 %indvars.iv.i10.i, i32 1
  %31 = load i32, i32* %extent.i15.i, align 4, !tbaa !140
  %sub.i16.i = add nsw i32 %31, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !273

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i
  %add8.i.i = add nsw i64 %index.1.i.i, 1
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, %for.body78
  %add8.i27.i = phi i64 [ 1, %for.body78 ], [ %add8.i.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %index.0.lcssa.i9.i = phi i64 [ 0, %for.body78 ], [ %index.1.i21.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i = sub nsw i64 %add8.i27.i, %index.0.lcssa.i9.i
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %25, i64 0, i32 4, i32 1
  %32 = load i8, i8* %bits.i.i, align 1, !tbaa !144
  %conv.i.i = zext i8 %32 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i4.i, 3
  %mul.i = mul i64 %div.i.i, %sub.i
  %call.i = tail call i32 @halide_malloc_alignment() #17
  %sub.i197 = add nsw i32 %call.i, -1
  %conv.i = sext i32 %sub.i197 to i64
  %add.i = add nsw i64 %conv.i, 16
  %neg.i = xor i64 %conv.i, -1
  %and.i = and i64 %add.i, %neg.i
  %add84 = add i64 %and.i, %mul.i
  %call85 = tail call i8* @halide_malloc(i8* %user_context, i64 %add84) #17
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %25, i64 0, i32 2
  store i8* %call85, i8** %host, align 8, !tbaa !134
  %cmp87 = icmp eq i8* %call85, null
  br i1 %cmp87, label %for.cond89.preheader, label %for.inc114

for.cond89.preheader:                             ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %cmp90208.not = icmp eq i64 %indvars.iv, 0
  br i1 %cmp90208.not, label %cleanup119, label %for.body92

for.body92:                                       ; preds = %for.body92, %for.cond89.preheader
  %indvars.iv224 = phi i64 [ %indvars.iv.next225, %for.body92 ], [ %indvars.iv, %for.cond89.preheader ]
  %sub = add i64 %indvars.iv224, 4294967295
  %33 = and i64 %sub, 4294967295
  %arrayidx94 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %33
  %34 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx94, align 8, !tbaa !10
  %host95 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %34, i64 0, i32 2
  %35 = load i8*, i8** %host95, align 8, !tbaa !134
  %call96 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %35) #19
  %36 = bitcast %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call96 to i8*
  tail call void @halide_free(i8* %user_context, i8* %36) #17
  %37 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx94, align 8, !tbaa !10
  %host100 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %37, i64 0, i32 2
  store i8* null, i8** %host100, align 8, !tbaa !134
  %38 = icmp sgt i64 %indvars.iv224, 1
  %indvars.iv.next225 = add nsw i64 %indvars.iv224, -1
  br i1 %38, label %for.body92, label %cleanup119, !llvm.loop !279

for.inc114:                                       ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %call.i198 = tail call i32 @halide_malloc_alignment() #17
  %sub.i199 = add nsw i32 %call.i198, -1
  %conv.i200 = sext i32 %sub.i199 to i64
  %add.i201 = add nsw i64 %conv.i200, 16
  %neg.i202 = xor i64 %conv.i200, -1
  %and.i203 = and i64 %add.i201, %neg.i202
  %39 = load i8*, i8** %host, align 8, !tbaa !134
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %and.i203
  store i8* %add.ptr, i8** %host, align 8, !tbaa !134
  %call108 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %add.ptr) #19
  %hash109 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call108, i64 0, i32 1
  store i32 %call, i32* %hash109, align 8, !tbaa !280
  %entry110 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call108, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %entry110, align 8, !tbaa !282
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup119, label %for.body78, !llvm.loop !283

cleanup119.loopexit223:                           ; preds = %for.body62, %if.end57
  %in_use_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 7
  %40 = load i32, i32* %in_use_count, align 4, !tbaa !260
  %add = add i32 %40, %tuple_count
  store i32 %add, i32* %in_use_count, align 4, !tbaa !260
  br label %cleanup119

cleanup119:                                       ; preds = %cleanup119.loopexit223, %for.inc114, %for.body92, %for.cond89.preheader, %for.cond75.preheader
  %retval.6 = phi i32 [ 1, %for.cond75.preheader ], [ 0, %cleanup119.loopexit223 ], [ -1, %for.cond89.preheader ], [ -1, %for.body92 ], [ 1, %for.inc114 ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #17
  ret i32 %retval.6
}

; Function Attrs: nounwind
define weak i32 @halide_memoization_cache_store(i8* %user_context, i8* %cache_key, i32 %size, %struct.halide_buffer_t* %computed_bounds, i32 %tuple_count, %struct.halide_buffer_t** %tuple_buffers, i1 zeroext %has_eviction_key, i64 %eviction_key) local_unnamed_addr #4 {
entry:
  %0 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, align 8, !tbaa !10
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %0, i64 0, i32 2
  %1 = load i8*, i8** %host, align 8, !tbaa !134
  %call = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %1) #19
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call, i64 0, i32 1
  %2 = load i32, i32* %hash, align 8, !tbaa !280
  %3 = and i32 %2, 255
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #17
  %idxprom = zext i32 %3 to i64
  %arrayidx7 = getelementptr inbounds [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 %idxprom
  %entry6.0228 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx7, align 8, !tbaa !10
  %cmp.not229 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0228, null
  br i1 %cmp.not229, label %for.cond61.preheader, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %conv10 = sext i32 %size to i64
  %cmp22221 = icmp sgt i32 %tuple_count, 0
  br i1 %cmp22221, label %while.body.us.preheader, label %while.body

while.body.us.preheader:                          ; preds = %while.body.lr.ph
  %4 = zext i32 %tuple_count to i64
  br label %while.body.us

while.body.us:                                    ; preds = %if.end59.us, %while.body.us.preheader
  %entry6.0230.us = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry6.0.us, %if.end59.us ], [ %entry6.0228, %while.body.us.preheader ]
  %hash8.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 6
  %5 = load i32, i32* %hash8.us, align 8, !tbaa !259
  %cmp9.us = icmp eq i32 %5, %2
  br i1 %cmp9.us, label %land.lhs.true.us, label %if.end59.us

land.lhs.true.us:                                 ; preds = %while.body.us
  %key_size.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 4
  %6 = load i64, i64* %key_size.us, align 8, !tbaa !258
  %cmp11.us = icmp eq i64 %6, %conv10
  br i1 %cmp11.us, label %land.lhs.true12.us, label %if.end59.us

land.lhs.true12.us:                               ; preds = %land.lhs.true.us
  %key.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 5
  %7 = load i8*, i8** %key.us, align 8, !tbaa !263
  %call14.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %7, i8* %cache_key, i64 %conv10) #19
  br i1 %call14.us, label %land.lhs.true15.us, label %if.end59.us

land.lhs.true15.us:                               ; preds = %land.lhs.true12.us
  %computed_bounds16.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 10
  %8 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds16.us, align 8, !tbaa !262
  %call17.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %computed_bounds, %struct.halide_dimension_t* %8) #19
  br i1 %call17.us, label %land.lhs.true18.us, label %if.end59.us

land.lhs.true18.us:                               ; preds = %land.lhs.true15.us
  %tuple_count19.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 8
  %9 = load i32, i32* %tuple_count19.us, align 8, !tbaa !238
  %cmp20.us = icmp eq i32 %9, %tuple_count
  br i1 %cmp20.us, label %for.body.lr.ph.us, label %if.end59.us

for.cond.cleanup.us:                              ; preds = %for.body.us
  br i1 %call30.us, label %do.body.us, label %if.end59.us

do.body.us:                                       ; preds = %for.cond.cleanup.us
  %10 = and i8 %spec.select.us, 1
  %tobool41.not.us = icmp eq i8 %10, 0
  br i1 %tobool41.not.us, label %if.then42.us, label %for.body48.lr.ph.us

if.then42.us:                                     ; preds = %do.body.us
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.9.46, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %for.body48.lr.ph.us

if.end59.us:                                      ; preds = %for.cond.cleanup.us, %land.lhs.true18.us, %land.lhs.true15.us, %land.lhs.true12.us, %land.lhs.true.us, %while.body.us
  %next.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 0
  %entry6.0.us = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next.us, align 8, !tbaa !10
  %cmp.not.us = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0.us, null
  br i1 %cmp.not.us, label %for.cond61.preheader, label %while.body.us, !llvm.loop !284

for.body48.us:                                    ; preds = %for.body48.lr.ph.us, %for.body48.us
  %indvars.iv244 = phi i64 [ 0, %for.body48.lr.ph.us ], [ %indvars.iv.next245, %for.body48.us ]
  %arrayidx50.us = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv244
  %11 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx50.us, align 8, !tbaa !10
  %host51.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %11, i64 0, i32 2
  %12 = load i8*, i8** %host51.us, align 8, !tbaa !134
  %call52.us = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %12) #19
  %entry53.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call52.us, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %entry53.us, align 8, !tbaa !282
  %indvars.iv.next245 = add nuw nsw i64 %indvars.iv244, 1
  %exitcond247.not = icmp eq i64 %indvars.iv.next245, %wide.trip.count246
  br i1 %exitcond247.not, label %cleanup132, label %for.body48.us, !llvm.loop !285

for.body.us:                                      ; preds = %for.body.lr.ph.us, %for.body.us
  %13 = phi %struct.halide_buffer_t* [ %.pre, %for.body.lr.ph.us ], [ %16, %for.body.us ]
  %indvars.iv242 = phi i64 [ 0, %for.body.lr.ph.us ], [ %indvars.iv.next243, %for.body.us ]
  %no_host_pointers_equal.0222.us = phi i8 [ 1, %for.body.lr.ph.us ], [ %spec.select.us, %for.body.us ]
  %arrayidx24.us = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv242
  %14 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx24.us, align 8, !tbaa !10
  %dim.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %13, i64 %indvars.iv242, i32 6
  %15 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.us, align 8, !tbaa !137
  %call30.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %14, %struct.halide_dimension_t* %15) #19
  %16 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf27.us, align 8, !tbaa !240
  %host35.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %16, i64 %indvars.iv242, i32 2
  %17 = load i8*, i8** %host35.us, align 8, !tbaa !134
  %host36.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %14, i64 0, i32 2
  %18 = load i8*, i8** %host36.us, align 8, !tbaa !134
  %cmp37.us = icmp eq i8* %17, %18
  %spec.select.us = select i1 %cmp37.us, i8 0, i8 %no_host_pointers_equal.0222.us
  %indvars.iv.next243 = add nuw nsw i64 %indvars.iv242, 1
  %cmp22.us = icmp ult i64 %indvars.iv.next243, %4
  %19 = and i1 %call30.us, %cmp22.us
  br i1 %19, label %for.body.us, label %for.cond.cleanup.us, !llvm.loop !286

for.body.lr.ph.us:                                ; preds = %land.lhs.true18.us
  %buf27.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 11
  %.pre = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf27.us, align 8, !tbaa !240
  br label %for.body.us

for.body48.lr.ph.us:                              ; preds = %if.then42.us, %do.body.us
  %wide.trip.count246 = zext i32 %tuple_count to i64
  br label %for.body48.us

for.cond61.preheader:                             ; preds = %if.end59, %if.end59.us, %entry
  %cmp62218 = icmp sgt i32 %tuple_count, 0
  br i1 %cmp62218, label %for.body64.preheader, label %for.cond.cleanup63

for.body64.preheader:                             ; preds = %for.cond61.preheader
  %wide.trip.count240 = zext i32 %tuple_count to i64
  br label %for.body64

while.body:                                       ; preds = %if.end59, %while.body.lr.ph
  %entry6.0230 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry6.0, %if.end59 ], [ %entry6.0228, %while.body.lr.ph ]
  %hash8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 6
  %20 = load i32, i32* %hash8, align 8, !tbaa !259
  %cmp9 = icmp eq i32 %20, %2
  br i1 %cmp9, label %land.lhs.true, label %if.end59

land.lhs.true:                                    ; preds = %while.body
  %key_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 4
  %21 = load i64, i64* %key_size, align 8, !tbaa !258
  %cmp11 = icmp eq i64 %21, %conv10
  br i1 %cmp11, label %land.lhs.true12, label %if.end59

land.lhs.true12:                                  ; preds = %land.lhs.true
  %key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 5
  %22 = load i8*, i8** %key, align 8, !tbaa !263
  %call14 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %22, i8* %cache_key, i64 %conv10) #19
  br i1 %call14, label %land.lhs.true15, label %if.end59

land.lhs.true15:                                  ; preds = %land.lhs.true12
  %computed_bounds16 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 10
  %23 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds16, align 8, !tbaa !262
  %call17 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %computed_bounds, %struct.halide_dimension_t* %23) #19
  br i1 %call17, label %land.lhs.true18, label %if.end59

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %tuple_count19 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 8
  %24 = load i32, i32* %tuple_count19, align 8, !tbaa !238
  %cmp20 = icmp eq i32 %24, %tuple_count
  br i1 %cmp20, label %cleanup132, label %if.end59

if.end59:                                         ; preds = %land.lhs.true18, %land.lhs.true15, %land.lhs.true12, %land.lhs.true, %while.body
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 0
  %entry6.0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next, align 8, !tbaa !10
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0, null
  br i1 %cmp.not, label %for.cond61.preheader, label %while.body, !llvm.loop !284

for.cond.cleanup63:                               ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %for.cond61.preheader
  %added_size.0.lcssa = phi i64 [ 0, %for.cond61.preheader ], [ %add, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %25 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  %add73 = add i64 %25, %added_size.0.lcssa
  store i64 %add73, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  tail call void @_ZN6Halide7Runtime8Internal11prune_cacheEv() #19
  %call74 = tail call i8* @halide_malloc(i8* null, i64 96) #17
  %tobool75.not = icmp eq i8* %call74, null
  br i1 %tobool75.not, label %if.then83, label %if.then76

for.body64:                                       ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %for.body64.preheader
  %indvars.iv238 = phi i64 [ 0, %for.body64.preheader ], [ %indvars.iv.next239, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %added_size.0219 = phi i64 [ 0, %for.body64.preheader ], [ %add, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %arrayidx67 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv238
  %26 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx67, align 8, !tbaa !10
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %26, i64 0, i32 5
  %27 = load i32, i32* %dimensions.i.i, align 4, !tbaa !129
  %cmp19.i.i = icmp sgt i32 %27, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %for.body64
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %26, i64 0, i32 6
  %28 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !137
  %wide.trip.count.i.i = zext i32 %27 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %if.end.i.i ]
  %index.021.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %index.1.i.i, %if.end.i.i ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %indvars.iv.i.i, i32 2
  %29 = load i32, i32* %stride2.i.i, align 4, !tbaa !141
  %cmp3.i.i = icmp sgt i32 %29, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %29 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %indvars.iv.i.i, i32 1
  %30 = load i32, i32* %extent.i.i, align 4, !tbaa !140
  %sub.i.i = add nsw i32 %30, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i, label %for.body.i.i, !llvm.loop !272

for.body.i13.i:                                   ; preds = %if.end.i24.i, %if.end.i.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ 0, %if.end.i.i ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ 0, %if.end.i.i ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %indvars.iv.i10.i, i32 2
  %31 = load i32, i32* %stride2.i11.i, align 4, !tbaa !141
  %cmp3.i12.i = icmp slt i32 %31, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %31 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %indvars.iv.i10.i, i32 1
  %32 = load i32, i32* %extent.i15.i, align 4, !tbaa !140
  %sub.i16.i = add nsw i32 %32, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !273

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i
  %add8.i.i = add nsw i64 %index.1.i.i, 1
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, %for.body64
  %add8.i27.i = phi i64 [ 1, %for.body64 ], [ %add8.i.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %index.0.lcssa.i9.i = phi i64 [ 0, %for.body64 ], [ %index.1.i21.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i = sub nsw i64 %add8.i27.i, %index.0.lcssa.i9.i
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %26, i64 0, i32 4, i32 1
  %33 = load i8, i8* %bits.i.i, align 1, !tbaa !144
  %conv.i.i = zext i8 %33 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i4.i, 3
  %mul.i = mul i64 %div.i.i, %sub.i
  %add = add i64 %mul.i, %added_size.0219
  %indvars.iv.next239 = add nuw nsw i64 %indvars.iv238, 1
  %exitcond241.not = icmp eq i64 %indvars.iv.next239, %wide.trip.count240
  br i1 %exitcond241.not, label %for.cond.cleanup63, label %for.body64, !llvm.loop !287

if.then76:                                        ; preds = %for.cond.cleanup63
  %34 = bitcast i8* %call74 to %"struct.Halide::Runtime::Internal::CacheEntry"*
  %conv77 = sext i32 %size to i64
  %call79 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10CacheEntry4initEPKhmjPK15halide_buffer_tiPPS5_by(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %34, i8* %cache_key, i64 %conv77, i32 %2, %struct.halide_buffer_t* %computed_bounds, i32 %tuple_count, %struct.halide_buffer_t** nonnull %tuple_buffers, i1 zeroext %has_eviction_key, i64 %eviction_key) #19
  br i1 %call79, label %if.end101, label %if.then83

if.then83:                                        ; preds = %if.then76, %for.cond.cleanup63
  %35 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  %sub = sub i64 %35, %added_size.0.lcssa
  store i64 %sub, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  br i1 %cmp62218, label %for.body88.preheader, label %for.cond.cleanup87

for.body88.preheader:                             ; preds = %if.then83
  %wide.trip.count = zext i32 %tuple_count to i64
  br label %for.body88

for.cond.cleanup87:                               ; preds = %for.body88, %if.then83
  br i1 %tobool75.not, label %cleanup132, label %if.then99

for.body88:                                       ; preds = %for.body88, %for.body88.preheader
  %indvars.iv = phi i64 [ 0, %for.body88.preheader ], [ %indvars.iv.next, %for.body88 ]
  %arrayidx90 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv
  %36 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx90, align 8, !tbaa !10
  %host91 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %36, i64 0, i32 2
  %37 = load i8*, i8** %host91, align 8, !tbaa !134
  %call92 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %37) #19
  %entry93 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call92, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %entry93, align 8, !tbaa !282
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup87, label %for.body88, !llvm.loop !288

if.then99:                                        ; preds = %for.cond.cleanup87
  tail call void @halide_free(i8* %user_context, i8* nonnull %call74) #17
  br label %cleanup132

if.end101:                                        ; preds = %if.then76
  %38 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx7, align 8, !tbaa !10
  %next104 = bitcast i8* %call74 to %"struct.Halide::Runtime::Internal::CacheEntry"**
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %38, %"struct.Halide::Runtime::Internal::CacheEntry"** %next104, align 8, !tbaa !235
  %39 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  %less_recent = getelementptr inbounds i8, i8* %call74, i64 16
  %40 = bitcast i8* %less_recent to %"struct.Halide::Runtime::Internal::CacheEntry"**
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %39, %"struct.Halide::Runtime::Internal::CacheEntry"** %40, align 8, !tbaa !257
  %cmp105.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %39, null
  br i1 %cmp105.not, label %if.end107, label %if.then106

if.then106:                                       ; preds = %if.end101
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %39, i64 0, i32 1
  %41 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent to i8**
  store i8* %call74, i8** %41, align 8, !tbaa !256
  br label %if.end107

if.end107:                                        ; preds = %if.then106, %if.end101
  store i8* %call74, i8** bitcast (%"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE to i8**), align 8, !tbaa !10
  %42 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  %cmp108 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %42, null
  br i1 %cmp108, label %if.then109, label %if.end110

if.then109:                                       ; preds = %if.end107
  store i8* %call74, i8** bitcast (%"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE to i8**), align 8, !tbaa !10
  br label %if.end110

if.end110:                                        ; preds = %if.then109, %if.end107
  %43 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx7 to i8**
  store i8* %call74, i8** %43, align 8, !tbaa !10
  %in_use_count = getelementptr inbounds i8, i8* %call74, i64 52
  %44 = bitcast i8* %in_use_count to i32*
  store i32 %tuple_count, i32* %44, align 4, !tbaa !260
  br i1 %cmp62218, label %for.body117.preheader, label %cleanup132

for.body117.preheader:                            ; preds = %if.end110
  %wide.trip.count236 = zext i32 %tuple_count to i64
  br label %for.body117

for.body117:                                      ; preds = %for.body117, %for.body117.preheader
  %indvars.iv234 = phi i64 [ 0, %for.body117.preheader ], [ %indvars.iv.next235, %for.body117 ]
  %arrayidx119 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv234
  %45 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx119, align 8, !tbaa !10
  %host120 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %45, i64 0, i32 2
  %46 = load i8*, i8** %host120, align 8, !tbaa !134
  %call121 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %46) #19
  %47 = bitcast %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call121 to i8**
  store i8* %call74, i8** %47, align 8, !tbaa !282
  %indvars.iv.next235 = add nuw nsw i64 %indvars.iv234, 1
  %exitcond237.not = icmp eq i64 %indvars.iv.next235, %wide.trip.count236
  br i1 %exitcond237.not, label %cleanup132, label %for.body117, !llvm.loop !289

cleanup132:                                       ; preds = %for.body117, %if.end110, %if.then99, %for.cond.cleanup87, %land.lhs.true18, %for.body48.us
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #17
  ret i32 0
}

; Function Attrs: nounwind
define weak void @halide_memoization_cache_release(i8* %user_context, i8* %host) local_unnamed_addr #4 {
entry:
  %call = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %host) #19
  %entry2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call, i64 0, i32 0
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %entry2, align 8, !tbaa !282
  %cmp = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call to i8*
  tail call void @halide_free(i8* %user_context, i8* %1) #17
  br label %if.end6

if.else:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #17
  %in_use_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %0, i64 0, i32 7
  %2 = load i32, i32* %in_use_count, align 4, !tbaa !260
  %cmp3.not = icmp eq i32 %2, 0
  br i1 %cmp3.not, label %if.then4, label %do.end

if.then4:                                         ; preds = %if.else
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.12.47, i64 0, i64 0)) #17
  tail call void @abort() #17
  %.pre = load i32, i32* %in_use_count, align 4, !tbaa !260
  br label %do.end

do.end:                                           ; preds = %if.then4, %if.else
  %3 = phi i32 [ %.pre, %if.then4 ], [ %2, %if.else ]
  %dec = add i32 %3, -1
  store i32 %dec, i32* %in_use_count, align 4, !tbaa !260
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #17
  br label %if.end6

if.end6:                                          ; preds = %do.end, %if.then
  ret void
}

; Function Attrs: nounwind
define weak void @halide_memoization_cache_evict(i8* %user_context, i64 %eviction_key) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #17
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end25
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #17
  ret void

for.body:                                         ; preds = %if.end25, %entry
  %__begin1.059 = phi %"struct.Halide::Runtime::Internal::CacheEntry"** [ getelementptr inbounds ([256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 0), %entry ], [ %incdec.ptr, %if.end25 ]
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.059, align 8, !tbaa !10
  %cmp2.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null
  br i1 %cmp2.not, label %if.end25, label %while.body

while.body:                                       ; preds = %if.end24, %for.body
  %prev.058 = phi %"struct.Halide::Runtime::Internal::CacheEntry"** [ %prev.1, %if.end24 ], [ %__begin1.059, %for.body ]
  %entry1.056 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %1, %if.end24 ], [ %0, %for.body ]
  %next4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 0
  %1 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next4, align 8, !tbaa !235
  %has_eviction_key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 13
  %2 = load i8, i8* %has_eviction_key, align 8, !tbaa !267, !range !17
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %if.end24, label %land.lhs.true

land.lhs.true:                                    ; preds = %while.body
  %eviction_key5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 12
  %3 = load i64, i64* %eviction_key5, align 8, !tbaa !268
  %cmp6 = icmp eq i64 %3, %eviction_key
  br i1 %cmp6, label %if.then7, label %if.end24

if.then7:                                         ; preds = %land.lhs.true
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %1, %"struct.Halide::Runtime::Internal::CacheEntry"** %prev.058, align 8, !tbaa !10
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 1
  %4 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !256
  %cmp8.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %4, null
  %less_recent12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 2
  %5 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent12, align 8, !tbaa !257
  br i1 %cmp8.not, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.then7
  %less_recent11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %4, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %5, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent11, align 8, !tbaa !257
  %.pre = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent12, align 8, !tbaa !257
  br label %if.end

if.else:                                          ; preds = %if.then7
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %5, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %6 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %5, %if.else ], [ %.pre, %if.then9 ]
  %cmp14.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %6, null
  %more_recent18 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %6, i64 0, i32 1
  %_ZN6Halide7Runtime8Internal19least_recently_usedE.sink = select i1 %cmp14.not, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent18
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %4, %"struct.Halide::Runtime::Internal::CacheEntry"** %_ZN6Halide7Runtime8Internal19least_recently_usedE.sink, align 8, !tbaa !10
  tail call void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %entry1.056) #19
  %7 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056 to i8*
  tail call void @halide_free(i8* %user_context, i8* nonnull %7) #17
  br label %if.end24

if.end24:                                         ; preds = %if.end, %land.lhs.true, %while.body
  %prev.1 = phi %"struct.Halide::Runtime::Internal::CacheEntry"** [ %prev.058, %if.end ], [ %next4, %land.lhs.true ], [ %next4, %while.body ]
  %cmp3.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %1, null
  br i1 %cmp3.not, label %if.end25, label %while.body, !llvm.loop !290

if.end25:                                         ; preds = %if.end24, %for.body
  %incdec.ptr = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.059, i64 1
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"** %incdec.ptr, getelementptr inbounds ([256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 1, i64 0)
  br i1 %cmp.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nounwind
define weak i8* @halide_string_to_string(i8* %dst, i8* %end, i8* %arg) local_unnamed_addr #4 {
entry:
  %cmp.not = icmp ult i8* %dst, %end
  br i1 %cmp.not, label %if.end, label %return

if.end:                                           ; preds = %entry
  %tobool.not = icmp eq i8* %arg, null
  %spec.select = select i1 %tobool.not, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i64 0, i64 0), i8* %arg
  br label %if.end5

if.then4:                                         ; preds = %if.end8
  store i8 0, i8* %dst.addr.023, align 1, !tbaa !14
  br label %return

if.end5:                                          ; preds = %if.end8, %if.end
  %arg.addr.124 = phi i8* [ %spec.select, %if.end ], [ %incdec.ptr9, %if.end8 ]
  %dst.addr.023 = phi i8* [ %dst, %if.end ], [ %incdec.ptr, %if.end8 ]
  %0 = load i8, i8* %arg.addr.124, align 1, !tbaa !14
  store i8 %0, i8* %dst.addr.023, align 1, !tbaa !14
  %cmp6 = icmp eq i8 %0, 0
  br i1 %cmp6, label %return, label %if.end8

if.end8:                                          ; preds = %if.end5
  %incdec.ptr = getelementptr inbounds i8, i8* %dst.addr.023, i64 1
  %incdec.ptr9 = getelementptr inbounds i8, i8* %arg.addr.124, i64 1
  %cmp3 = icmp eq i8* %incdec.ptr, %end
  br i1 %cmp3, label %if.then4, label %if.end5

return:                                           ; preds = %if.end5, %if.then4, %entry
  %retval.0 = phi i8* [ %end, %if.then4 ], [ %dst, %entry ], [ %dst.addr.023, %if.end5 ]
  ret i8* %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_uint64_to_string(i8* %dst, i8* %end, i64 %arg, i32 %min_digits) local_unnamed_addr #0 {
entry:
  %buf = alloca [32 x i8], align 1
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #18
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 31
  store i8 0, i8* %arrayidx, align 1, !tbaa !14
  %add.ptr = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 30
  %cmp13 = icmp sgt i32 %min_digits, 0
  %tobool14 = icmp ne i64 %arg, 0
  %1 = or i1 %cmp13, %tobool14
  br i1 %1, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %digits.0.lcssa = phi i8* [ %add.ptr, %entry ], [ %incdec.ptr, %for.body ]
  %incdec.ptr1 = getelementptr inbounds i8, i8* %digits.0.lcssa, i64 1
  %call = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* nonnull %incdec.ptr1) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #18
  ret i8* %call

for.body:                                         ; preds = %for.body, %entry
  %arg.addr.017 = phi i64 [ %div, %for.body ], [ %arg, %entry ]
  %digits.016 = phi i8* [ %incdec.ptr, %for.body ], [ %add.ptr, %entry ]
  %i.015 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %div = udiv i64 %arg.addr.017, 10
  %mul.neg = mul i64 %div, -10
  %sub = add i64 %mul.neg, %arg.addr.017
  %2 = trunc i64 %sub to i8
  %conv = add i8 %2, 48
  store i8 %conv, i8* %digits.016, align 1, !tbaa !14
  %incdec.ptr = getelementptr inbounds i8, i8* %digits.016, i64 -1
  %inc = add nuw nsw i32 %i.015, 1
  %cmp = icmp slt i32 %inc, %min_digits
  %3 = icmp ugt i64 %arg.addr.017, 9
  %4 = or i1 %cmp, %3
  br i1 %4, label %for.body, label %for.cond.cleanup, !llvm.loop !291
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_int64_to_string(i8* %dst, i8* %end, i64 %arg, i32 %min_digits) local_unnamed_addr #0 {
entry:
  %cmp = icmp slt i64 %arg, 0
  %cmp1 = icmp ult i8* %dst, %end
  %or.cond = and i1 %cmp1, %cmp
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %dst, i64 1
  store i8 45, i8* %dst, align 1, !tbaa !14
  %sub = sub nsw i64 0, %arg
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %arg.addr.0 = phi i64 [ %sub, %if.then ], [ %arg, %entry ]
  %dst.addr.0 = phi i8* [ %incdec.ptr, %if.then ], [ %dst, %entry ]
  %call = tail call i8* @halide_uint64_to_string(i8* %dst.addr.0, i8* %end, i64 %arg.addr.0, i32 %min_digits) #19
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_double_to_string(i8* %dst, i8* %end, double %arg, i32 %scientific) local_unnamed_addr #0 {
entry:
  %arg.addr = alloca double, align 8
  %bits = alloca i64, align 8
  %buf = alloca [512 x i8], align 1
  store double %arg, double* %arg.addr, align 8, !tbaa !201
  %0 = bitcast i64* %bits to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #18
  store i64 0, i64* %bits, align 8, !tbaa !110
  %1 = bitcast double* %arg.addr to i8*
  %call = call i8* @memcpy(i8* nonnull %0, i8* nonnull %1, i64 8) #17
  %2 = load i64, i64* %bits, align 8, !tbaa !110
  %and = and i64 %2, 4503599627370495
  %shr = lshr i64 %2, 52
  %3 = trunc i64 %shr to i32
  %conv = and i32 %3, 2047
  %cmp = icmp eq i32 %conv, 2047
  br i1 %cmp, label %if.then, label %if.else15

if.then:                                          ; preds = %entry
  %tobool.not = icmp eq i64 %and, 0
  %tobool10.not = icmp sgt i64 %2, -1
  br i1 %tobool.not, label %if.else9, label %if.then4

if.then4:                                         ; preds = %if.then
  br i1 %tobool10.not, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.then4
  %call7 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.57, i64 0, i64 0)) #19
  br label %cleanup147

if.else:                                          ; preds = %if.then4
  %call8 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.58, i64 0, i64 0)) #19
  br label %cleanup147

if.else9:                                         ; preds = %if.then
  br i1 %tobool10.not, label %if.else13, label %if.then11

if.then11:                                        ; preds = %if.else9
  %call12 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.59, i64 0, i64 0)) #19
  br label %cleanup147

if.else13:                                        ; preds = %if.else9
  %call14 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.60, i64 0, i64 0)) #19
  br label %cleanup147

if.else15:                                        ; preds = %entry
  %cmp16 = icmp eq i32 %conv, 0
  %cmp17 = icmp eq i64 %and, 0
  %or.cond = and i1 %cmp17, %cmp16
  br i1 %or.cond, label %if.then18, label %if.end32

if.then18:                                        ; preds = %if.else15
  %tobool19.not = icmp eq i32 %scientific, 0
  %tobool27.not = icmp sgt i64 %2, -1
  br i1 %tobool19.not, label %if.else26, label %if.then20

if.then20:                                        ; preds = %if.then18
  br i1 %tobool27.not, label %if.else24, label %if.then22

if.then22:                                        ; preds = %if.then20
  %call23 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.61, i64 0, i64 0)) #19
  br label %cleanup147

if.else24:                                        ; preds = %if.then20
  %call25 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6.62, i64 0, i64 0)) #19
  br label %cleanup147

if.else26:                                        ; preds = %if.then18
  br i1 %tobool27.not, label %if.else30, label %if.then28

if.then28:                                        ; preds = %if.else26
  %call29 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.63, i64 0, i64 0)) #19
  br label %cleanup147

if.else30:                                        ; preds = %if.else26
  %call31 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.64, i64 0, i64 0)) #19
  br label %cleanup147

if.end32:                                         ; preds = %if.else15
  %tobool33.not = icmp sgt i64 %2, -1
  br i1 %tobool33.not, label %if.end36, label %if.then34

if.then34:                                        ; preds = %if.end32
  %call35 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.65, i64 0, i64 0)) #19
  %4 = load double, double* %arg.addr, align 8, !tbaa !201
  %fneg = fneg double %4
  store double %fneg, double* %arg.addr, align 8, !tbaa !201
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %if.end32
  %dst.addr.0 = phi i8* [ %call35, %if.then34 ], [ %dst, %if.end32 ]
  %tobool37.not = icmp eq i32 %scientific, 0
  br i1 %tobool37.not, label %if.else61, label %while.condthread-pre-split

while.condthread-pre-split:                       ; preds = %if.end36
  %.pr = load double, double* %arg.addr, align 8, !tbaa !201
  %cmp39276 = fcmp olt double %.pr, 1.000000e+00
  br i1 %cmp39276, label %while.body, label %while.cond40thread-pre-split

while.body:                                       ; preds = %while.body, %while.condthread-pre-split
  %exponent_base_10.0277 = phi i32 [ %dec, %while.body ], [ 0, %while.condthread-pre-split ]
  %5 = phi double [ %mul, %while.body ], [ %.pr, %while.condthread-pre-split ]
  %mul = fmul double %5, 1.000000e+01
  %dec = add nsw i32 %exponent_base_10.0277, -1
  %cmp39 = fcmp olt double %mul, 1.000000e+00
  br i1 %cmp39, label %while.body, label %while.cond.while.cond40thread-pre-split_crit_edge, !llvm.loop !292

while.cond.while.cond40thread-pre-split_crit_edge: ; preds = %while.body
  store double %mul, double* %arg.addr, align 8, !tbaa !201
  br label %while.cond40thread-pre-split

while.cond40thread-pre-split:                     ; preds = %while.cond.while.cond40thread-pre-split_crit_edge, %while.condthread-pre-split
  %.pr261 = phi double [ %mul, %while.cond.while.cond40thread-pre-split_crit_edge ], [ %.pr, %while.condthread-pre-split ]
  %exponent_base_10.0.lcssa = phi i32 [ %dec, %while.cond.while.cond40thread-pre-split_crit_edge ], [ 0, %while.condthread-pre-split ]
  %cmp41272 = fcmp ult double %.pr261, 1.000000e+01
  br i1 %cmp41272, label %while.end43, label %while.body42

while.body42:                                     ; preds = %while.body42, %while.cond40thread-pre-split
  %exponent_base_10.1273 = phi i32 [ %inc, %while.body42 ], [ %exponent_base_10.0.lcssa, %while.cond40thread-pre-split ]
  %6 = phi double [ %div, %while.body42 ], [ %.pr261, %while.cond40thread-pre-split ]
  %div = fdiv double %6, 1.000000e+01
  %inc = add nsw i32 %exponent_base_10.1273, 1
  %cmp41 = fcmp ult double %div, 1.000000e+01
  br i1 %cmp41, label %while.cond40.while.end43_crit_edge, label %while.body42, !llvm.loop !293

while.cond40.while.end43_crit_edge:               ; preds = %while.body42
  store double %div, double* %arg.addr, align 8, !tbaa !201
  br label %while.end43

while.end43:                                      ; preds = %while.cond40.while.end43_crit_edge, %while.cond40thread-pre-split
  %.lcssa = phi double [ %div, %while.cond40.while.end43_crit_edge ], [ %.pr261, %while.cond40thread-pre-split ]
  %exponent_base_10.1.lcssa = phi i32 [ %inc, %while.cond40.while.end43_crit_edge ], [ %exponent_base_10.0.lcssa, %while.cond40thread-pre-split ]
  %mul44 = fmul double %.lcssa, 1.000000e+06
  %add = fadd double %mul44, 5.000000e-01
  %conv45 = fptoui double %add to i64
  %div46 = udiv i64 %conv45, 1000000
  %mul47.neg = mul i64 %div46, -1000000
  %sub48 = add i64 %mul47.neg, %conv45
  %call49 = call i8* @halide_int64_to_string(i8* %dst.addr.0, i8* %end, i64 %div46, i32 1) #19
  %call50 = call i8* @halide_string_to_string(i8* %call49, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.66, i64 0, i64 0)) #19
  %call51 = call i8* @halide_int64_to_string(i8* %call50, i8* %end, i64 %sub48, i32 6) #19
  %cmp52 = icmp sgt i32 %exponent_base_10.1.lcssa, -1
  br i1 %cmp52, label %if.then53, label %if.else55

if.then53:                                        ; preds = %while.end43
  %call54 = call i8* @halide_string_to_string(i8* %call51, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.67, i64 0, i64 0)) #19
  br label %if.end58

if.else55:                                        ; preds = %while.end43
  %call56 = call i8* @halide_string_to_string(i8* %call51, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.68, i64 0, i64 0)) #19
  %sub57 = sub nsw i32 0, %exponent_base_10.1.lcssa
  br label %if.end58

if.end58:                                         ; preds = %if.else55, %if.then53
  %exponent_base_10.2 = phi i32 [ %exponent_base_10.1.lcssa, %if.then53 ], [ %sub57, %if.else55 ]
  %dst.addr.1 = phi i8* [ %call54, %if.then53 ], [ %call56, %if.else55 ]
  %conv59262 = zext i32 %exponent_base_10.2 to i64
  %call60 = call i8* @halide_int64_to_string(i8* %dst.addr.1, i8* %end, i64 %conv59262, i32 2) #19
  br label %cleanup147

if.else61:                                        ; preds = %if.end36
  br i1 %cmp16, label %if.then63, label %if.end65

if.then63:                                        ; preds = %if.else61
  %call64 = call i8* @halide_double_to_string(i8* %dst.addr.0, i8* %end, double 0.000000e+00, i32 0) #19
  br label %cleanup147

if.end65:                                         ; preds = %if.else61
  %add67 = or i64 %and, 4503599627370496
  %sub69 = add nsw i32 %conv, -1075
  %cmp70 = icmp ult i32 %conv, 1075
  br i1 %cmp70, label %if.then71, label %if.end104

if.then71:                                        ; preds = %if.end65
  %cmp72 = icmp ult i32 %conv, 1023
  br i1 %cmp72, label %if.end83, label %if.else75

if.else75:                                        ; preds = %if.then71
  %sub76 = sub nuw nsw i32 1075, %conv
  %sh_prom = zext i32 %sub76 to i64
  %shr77 = lshr i64 %add67, %sh_prom
  %shl80 = shl i64 %shr77, %sh_prom
  %sub81 = sub i64 %add67, %shl80
  br label %if.end83

if.end83:                                         ; preds = %if.else75, %if.then71
  %integer_part.0 = phi i64 [ %shr77, %if.else75 ], [ 0, %if.then71 ]
  %f.0.in = phi i64 [ %sub81, %if.else75 ], [ %add67, %if.then71 ]
  %f.0 = uitofp i64 %f.0.in to double
  %conv84258 = zext i32 %sub69 to i64
  %shl85 = shl i64 %conv84258, 52
  %add87 = add i64 %shl85, 4696837146684686336
  %7 = bitcast i64 %add87 to double
  %mul89 = fmul double %7, %f.0
  %add90 = fadd double %mul89, 5.000000e-01
  %conv91 = fptoui double %add90 to i64
  %conv92 = uitofp i64 %conv91 to double
  %cmp93 = fcmp oeq double %add90, %conv92
  %and95 = and i64 %conv91, 1
  %tobool96.not = icmp ne i64 %and95, 0
  %not.or.cond259 = and i1 %cmp93, %tobool96.not
  %dec98 = sext i1 %not.or.cond259 to i64
  %fractional_part.0 = add i64 %dec98, %conv91
  %cmp100 = icmp eq i64 %fractional_part.0, 1000000
  %inc102 = zext i1 %cmp100 to i64
  %spec.select = add nuw i64 %integer_part.0, %inc102
  %spec.select260 = select i1 %cmp100, i64 0, i64 %fractional_part.0
  br label %if.end104

if.end104:                                        ; preds = %if.end83, %if.end65
  %integer_part.2 = phi i64 [ %spec.select, %if.end83 ], [ %add67, %if.end65 ]
  %integer_exponent.0 = phi i32 [ 0, %if.end83 ], [ %sub69, %if.end65 ]
  %fractional_part.2 = phi i64 [ %spec.select260, %if.end83 ], [ 0, %if.end65 ]
  %8 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %8) #18
  %add.ptr = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 512
  %add.ptr105 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 480
  %call108 = call i8* @halide_int64_to_string(i8* nonnull %add.ptr105, i8* nonnull %add.ptr, i64 %integer_part.2, i32 1) #19
  %cmp109267 = icmp sgt i32 %integer_exponent.0, 0
  br i1 %cmp109267, label %for.cond111.preheader, label %for.cond.cleanup

for.cond111.preheader:                            ; preds = %if.end137, %if.end104
  %i.0270 = phi i32 [ %inc139, %if.end137 ], [ 0, %if.end104 ]
  %int_part_ptr.0268 = phi i8* [ %int_part_ptr.1, %if.end137 ], [ %add.ptr105, %if.end104 ]
  %cmp113.not264 = icmp eq i8* %call108, %int_part_ptr.0268
  br i1 %cmp113.not264, label %if.end137, label %for.body115

for.cond.cleanup:                                 ; preds = %if.end137, %if.end104
  %int_part_ptr.0.lcssa = phi i8* [ %add.ptr105, %if.end104 ], [ %int_part_ptr.1, %if.end137 ]
  %call141 = call i8* @halide_string_to_string(i8* %dst.addr.0, i8* %end, i8* %int_part_ptr.0.lcssa) #19
  %call142 = call i8* @halide_string_to_string(i8* %call141, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.66, i64 0, i64 0)) #19
  %call143 = call i8* @halide_int64_to_string(i8* %call142, i8* %end, i64 %fractional_part.2, i32 6) #19
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %8) #18
  br label %cleanup147

for.cond.cleanup114:                              ; preds = %for.body115
  br i1 %cmp124, label %if.then135, label %if.end137

for.body115:                                      ; preds = %for.body115, %for.cond111.preheader
  %p.0266.pn = phi i8* [ %p.0266, %for.body115 ], [ %call108, %for.cond111.preheader ]
  %carry.0265 = phi i32 [ %carry.1, %for.body115 ], [ 0, %for.cond111.preheader ]
  %p.0266 = getelementptr inbounds i8, i8* %p.0266.pn, i64 -1
  %9 = load i8, i8* %p.0266, align 1, !tbaa !14
  %sub117 = add i8 %9, -48
  %conv119 = sext i8 %sub117 to i32
  %mul120 = shl nsw i32 %conv119, 1
  %add121 = or i32 %mul120, %carry.0265
  %10 = trunc i32 %add121 to i8
  %cmp124 = icmp sgt i8 %10, 9
  %sub127 = add nsw i32 %add121, 246
  %carry.1 = zext i1 %cmp124 to i32
  %new_digit.0.in = select i1 %cmp124, i32 %sub127, i32 %add121
  %11 = trunc i32 %new_digit.0.in to i8
  %conv133 = add i8 %11, 48
  store i8 %conv133, i8* %p.0266, align 1, !tbaa !14
  %cmp113.not = icmp eq i8* %p.0266, %int_part_ptr.0268
  br i1 %cmp113.not, label %for.cond.cleanup114, label %for.body115, !llvm.loop !294

if.then135:                                       ; preds = %for.cond.cleanup114
  %incdec.ptr136 = getelementptr inbounds i8, i8* %int_part_ptr.0268, i64 -1
  store i8 49, i8* %incdec.ptr136, align 1, !tbaa !14
  br label %if.end137

if.end137:                                        ; preds = %if.then135, %for.cond.cleanup114, %for.cond111.preheader
  %int_part_ptr.1 = phi i8* [ %incdec.ptr136, %if.then135 ], [ %int_part_ptr.0268, %for.cond.cleanup114 ], [ %int_part_ptr.0268, %for.cond111.preheader ]
  %inc139 = add nuw nsw i32 %i.0270, 1
  %exitcond.not = icmp eq i32 %inc139, %integer_exponent.0
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond111.preheader, !llvm.loop !295

cleanup147:                                       ; preds = %for.cond.cleanup, %if.then63, %if.end58, %if.else30, %if.then28, %if.else24, %if.then22, %if.else13, %if.then11, %if.else, %if.then6
  %retval.1 = phi i8* [ %call7, %if.then6 ], [ %call8, %if.else ], [ %call12, %if.then11 ], [ %call14, %if.else13 ], [ %call23, %if.then22 ], [ %call25, %if.else24 ], [ %call29, %if.then28 ], [ %call31, %if.else30 ], [ %call64, %if.then63 ], [ %call60, %if.end58 ], [ %call143, %for.cond.cleanup ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #18
  ret i8* %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_pointer_to_string(i8* %dst, i8* %end, i8* %arg) local_unnamed_addr #0 {
entry:
  %buf = alloca [20 x i8], align 1
  %0 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %0) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 dereferenceable(20) %0, i8 0, i64 20, i1 false)
  %add.ptr = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 18
  %1 = ptrtoint i8* %arg to i64
  %and = and i64 %1, 15
  %arrayidx = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !14
  %incdec.ptr = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 17
  store i8 %2, i8* %add.ptr, align 1, !tbaa !14
  %shr = lshr i64 %1, 4
  %tobool.not = icmp eq i64 %shr, 0
  br i1 %tobool.not, label %cleanup, label %for.cond

for.cond:                                         ; preds = %entry
  %and.1 = and i64 %shr, 15
  %arrayidx.1 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.1
  %3 = load i8, i8* %arrayidx.1, align 1, !tbaa !14
  %incdec.ptr.1 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 16
  store i8 %3, i8* %incdec.ptr, align 1, !tbaa !14
  %shr.1 = lshr i64 %1, 8
  %tobool.not.1 = icmp eq i64 %shr.1, 0
  br i1 %tobool.not.1, label %cleanup, label %for.cond.1

cleanup:                                          ; preds = %for.cond.14, %for.cond.13, %for.cond.12, %for.cond.11, %for.cond.10, %for.cond.9, %for.cond.8, %for.cond.7, %for.cond.6, %for.cond.5, %for.cond.4, %for.cond.3, %for.cond.2, %for.cond.1, %for.cond, %entry
  %buf_ptr.016.lcssa = phi i8* [ %add.ptr, %entry ], [ %incdec.ptr, %for.cond ], [ %incdec.ptr.1, %for.cond.1 ], [ %incdec.ptr.2, %for.cond.2 ], [ %incdec.ptr.3, %for.cond.3 ], [ %incdec.ptr.4, %for.cond.4 ], [ %incdec.ptr.5, %for.cond.5 ], [ %incdec.ptr.6, %for.cond.6 ], [ %incdec.ptr.7, %for.cond.7 ], [ %incdec.ptr.8, %for.cond.8 ], [ %incdec.ptr.9, %for.cond.9 ], [ %incdec.ptr.10, %for.cond.10 ], [ %incdec.ptr.11, %for.cond.11 ], [ %incdec.ptr.12, %for.cond.12 ], [ %incdec.ptr.13, %for.cond.13 ], [ %incdec.ptr.14, %for.cond.14 ]
  %incdec.ptr.lcssa = phi i8* [ %incdec.ptr, %entry ], [ %incdec.ptr.1, %for.cond ], [ %incdec.ptr.2, %for.cond.1 ], [ %incdec.ptr.3, %for.cond.2 ], [ %incdec.ptr.4, %for.cond.3 ], [ %incdec.ptr.5, %for.cond.4 ], [ %incdec.ptr.6, %for.cond.5 ], [ %incdec.ptr.7, %for.cond.6 ], [ %incdec.ptr.8, %for.cond.7 ], [ %incdec.ptr.9, %for.cond.8 ], [ %incdec.ptr.10, %for.cond.9 ], [ %incdec.ptr.11, %for.cond.10 ], [ %incdec.ptr.12, %for.cond.11 ], [ %incdec.ptr.13, %for.cond.12 ], [ %incdec.ptr.14, %for.cond.13 ], [ %incdec.ptr.15, %for.cond.14 ]
  %incdec.ptr1 = getelementptr inbounds i8, i8* %buf_ptr.016.lcssa, i64 -2
  store i8 120, i8* %incdec.ptr.lcssa, align 1, !tbaa !14
  store i8 48, i8* %incdec.ptr1, align 1, !tbaa !14
  %call = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* nonnull %incdec.ptr1) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %0) #18
  ret i8* %call

for.cond.1:                                       ; preds = %for.cond
  %and.2 = and i64 %shr.1, 15
  %arrayidx.2 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.2
  %4 = load i8, i8* %arrayidx.2, align 1, !tbaa !14
  %incdec.ptr.2 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 15
  store i8 %4, i8* %incdec.ptr.1, align 1, !tbaa !14
  %shr.2 = lshr i64 %1, 12
  %tobool.not.2 = icmp eq i64 %shr.2, 0
  br i1 %tobool.not.2, label %cleanup, label %for.cond.2

for.cond.2:                                       ; preds = %for.cond.1
  %and.3 = and i64 %shr.2, 15
  %arrayidx.3 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.3
  %5 = load i8, i8* %arrayidx.3, align 1, !tbaa !14
  %incdec.ptr.3 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 14
  store i8 %5, i8* %incdec.ptr.2, align 1, !tbaa !14
  %shr.3 = lshr i64 %1, 16
  %tobool.not.3 = icmp eq i64 %shr.3, 0
  br i1 %tobool.not.3, label %cleanup, label %for.cond.3

for.cond.3:                                       ; preds = %for.cond.2
  %and.4 = and i64 %shr.3, 15
  %arrayidx.4 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.4
  %6 = load i8, i8* %arrayidx.4, align 1, !tbaa !14
  %incdec.ptr.4 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 13
  store i8 %6, i8* %incdec.ptr.3, align 1, !tbaa !14
  %shr.4 = lshr i64 %1, 20
  %tobool.not.4 = icmp eq i64 %shr.4, 0
  br i1 %tobool.not.4, label %cleanup, label %for.cond.4

for.cond.4:                                       ; preds = %for.cond.3
  %and.5 = and i64 %shr.4, 15
  %arrayidx.5 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.5
  %7 = load i8, i8* %arrayidx.5, align 1, !tbaa !14
  %incdec.ptr.5 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 12
  store i8 %7, i8* %incdec.ptr.4, align 1, !tbaa !14
  %shr.5 = lshr i64 %1, 24
  %tobool.not.5 = icmp eq i64 %shr.5, 0
  br i1 %tobool.not.5, label %cleanup, label %for.cond.5

for.cond.5:                                       ; preds = %for.cond.4
  %and.6 = and i64 %shr.5, 15
  %arrayidx.6 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.6
  %8 = load i8, i8* %arrayidx.6, align 1, !tbaa !14
  %incdec.ptr.6 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 11
  store i8 %8, i8* %incdec.ptr.5, align 1, !tbaa !14
  %shr.6 = lshr i64 %1, 28
  %tobool.not.6 = icmp eq i64 %shr.6, 0
  br i1 %tobool.not.6, label %cleanup, label %for.cond.6

for.cond.6:                                       ; preds = %for.cond.5
  %and.7 = and i64 %shr.6, 15
  %arrayidx.7 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.7
  %9 = load i8, i8* %arrayidx.7, align 1, !tbaa !14
  %incdec.ptr.7 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 10
  store i8 %9, i8* %incdec.ptr.6, align 1, !tbaa !14
  %shr.7 = lshr i64 %1, 32
  %tobool.not.7 = icmp eq i64 %shr.7, 0
  br i1 %tobool.not.7, label %cleanup, label %for.cond.7

for.cond.7:                                       ; preds = %for.cond.6
  %and.8 = and i64 %shr.7, 15
  %arrayidx.8 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.8
  %10 = load i8, i8* %arrayidx.8, align 1, !tbaa !14
  %incdec.ptr.8 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 9
  store i8 %10, i8* %incdec.ptr.7, align 1, !tbaa !14
  %shr.8 = lshr i64 %1, 36
  %tobool.not.8 = icmp eq i64 %shr.8, 0
  br i1 %tobool.not.8, label %cleanup, label %for.cond.8

for.cond.8:                                       ; preds = %for.cond.7
  %and.9 = and i64 %shr.8, 15
  %arrayidx.9 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.9
  %11 = load i8, i8* %arrayidx.9, align 1, !tbaa !14
  %incdec.ptr.9 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 8
  store i8 %11, i8* %incdec.ptr.8, align 1, !tbaa !14
  %shr.9 = lshr i64 %1, 40
  %tobool.not.9 = icmp eq i64 %shr.9, 0
  br i1 %tobool.not.9, label %cleanup, label %for.cond.9

for.cond.9:                                       ; preds = %for.cond.8
  %and.10 = and i64 %shr.9, 15
  %arrayidx.10 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.10
  %12 = load i8, i8* %arrayidx.10, align 1, !tbaa !14
  %incdec.ptr.10 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 7
  store i8 %12, i8* %incdec.ptr.9, align 1, !tbaa !14
  %shr.10 = lshr i64 %1, 44
  %tobool.not.10 = icmp eq i64 %shr.10, 0
  br i1 %tobool.not.10, label %cleanup, label %for.cond.10

for.cond.10:                                      ; preds = %for.cond.9
  %and.11 = and i64 %shr.10, 15
  %arrayidx.11 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.11
  %13 = load i8, i8* %arrayidx.11, align 1, !tbaa !14
  %incdec.ptr.11 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 6
  store i8 %13, i8* %incdec.ptr.10, align 1, !tbaa !14
  %shr.11 = lshr i64 %1, 48
  %tobool.not.11 = icmp eq i64 %shr.11, 0
  br i1 %tobool.not.11, label %cleanup, label %for.cond.11

for.cond.11:                                      ; preds = %for.cond.10
  %and.12 = and i64 %shr.11, 15
  %arrayidx.12 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.12
  %14 = load i8, i8* %arrayidx.12, align 1, !tbaa !14
  %incdec.ptr.12 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 5
  store i8 %14, i8* %incdec.ptr.11, align 1, !tbaa !14
  %shr.12 = lshr i64 %1, 52
  %tobool.not.12 = icmp eq i64 %shr.12, 0
  br i1 %tobool.not.12, label %cleanup, label %for.cond.12

for.cond.12:                                      ; preds = %for.cond.11
  %and.13 = and i64 %shr.12, 15
  %arrayidx.13 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.13
  %15 = load i8, i8* %arrayidx.13, align 1, !tbaa !14
  %incdec.ptr.13 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 4
  store i8 %15, i8* %incdec.ptr.12, align 1, !tbaa !14
  %shr.13 = lshr i64 %1, 56
  %tobool.not.13 = icmp eq i64 %shr.13, 0
  br i1 %tobool.not.13, label %cleanup, label %for.cond.13

for.cond.13:                                      ; preds = %for.cond.12
  %and.14 = and i64 %shr.13, 15
  %arrayidx.14 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.14
  %16 = load i8, i8* %arrayidx.14, align 1, !tbaa !14
  %incdec.ptr.14 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 3
  store i8 %16, i8* %incdec.ptr.13, align 1, !tbaa !14
  %shr.14 = lshr i64 %1, 60
  %tobool.not.14 = icmp eq i64 %shr.14, 0
  br i1 %tobool.not.14, label %cleanup, label %for.cond.14

for.cond.14:                                      ; preds = %for.cond.13
  %arrayidx.15 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %shr.14
  %17 = load i8, i8* %arrayidx.15, align 1, !tbaa !14
  %incdec.ptr.15 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 2
  store i8 %17, i8* %incdec.ptr.14, align 1, !tbaa !14
  br label %cleanup
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_type_to_string(i8* %dst, i8* %end, %struct.halide_type_t* %t) local_unnamed_addr #0 {
entry:
  %code = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %t, i64 0, i32 0
  %0 = load i8, i8* %code, align 2, !tbaa !143
  switch i8 %0, label %sw.default [
    i8 0, label %sw.epilog
    i8 1, label %sw.bb1
    i8 2, label %sw.bb2
    i8 3, label %sw.bb3
  ]

sw.bb1:                                           ; preds = %entry
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %entry
  %code_name.0 = phi i8* [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18.72, i64 0, i64 0), %sw.default ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17.73, i64 0, i64 0), %sw.bb3 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.74, i64 0, i64 0), %sw.bb2 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.75, i64 0, i64 0), %sw.bb1 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.76, i64 0, i64 0), %entry ]
  %call = tail call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* nonnull %code_name.0) #19
  %bits = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %t, i64 0, i32 1
  %1 = load i8, i8* %bits, align 1, !tbaa !144
  %conv4 = zext i8 %1 to i64
  %call5 = tail call i8* @halide_uint64_to_string(i8* %call, i8* %end, i64 %conv4, i32 1) #19
  %lanes = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %t, i64 0, i32 2
  %2 = load i16, i16* %lanes, align 2, !tbaa !145
  %cmp.not = icmp eq i16 %2, 1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %sw.epilog
  %call7 = tail call i8* @halide_string_to_string(i8* %call5, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19.77, i64 0, i64 0)) #19
  %3 = load i16, i16* %lanes, align 2, !tbaa !145
  %conv9 = zext i16 %3 to i64
  %call10 = tail call i8* @halide_uint64_to_string(i8* %call7, i8* %end, i64 %conv9, i32 1) #19
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.epilog
  %dst.addr.0 = phi i8* [ %call10, %if.then ], [ %call5, %sw.epilog ]
  ret i8* %dst.addr.0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_buffer_to_string(i8* %dst, i8* %end, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20.78, i64 0, i64 0)) #19
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21.79, i64 0, i64 0)) #19
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !135
  %call2 = tail call i8* @halide_uint64_to_string(i8* %call1, i8* %end, i64 %0, i32 1) #19
  %call3 = tail call i8* @halide_string_to_string(i8* %call2, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.80, i64 0, i64 0)) #19
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %1 = bitcast %struct.halide_device_interface_t** %device_interface to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !136
  %call4 = tail call i8* @halide_pointer_to_string(i8* %call3, i8* %end, i8* %2) #19
  %call5 = tail call i8* @halide_string_to_string(i8* %call4, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.80, i64 0, i64 0)) #19
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %3 = load i8*, i8** %host, align 8, !tbaa !134
  %call6 = tail call i8* @halide_pointer_to_string(i8* %call5, i8* %end, i8* %3) #19
  %call7 = tail call i8* @halide_string_to_string(i8* %call6, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.80, i64 0, i64 0)) #19
  %flags = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %4 = load i64, i64* %flags, align 8, !tbaa !142
  %call8 = tail call i8* @halide_uint64_to_string(i8* %call7, i8* %end, i64 %4, i32 1) #19
  %call9 = tail call i8* @halide_string_to_string(i8* %call8, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.80, i64 0, i64 0)) #19
  %type = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 4
  %call10 = tail call i8* @halide_type_to_string(i8* %call9, i8* %end, %struct.halide_type_t* nonnull %type) #19
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %5 = load i32, i32* %dimensions, align 4, !tbaa !129
  %cmp1179 = icmp sgt i32 %5, 0
  br i1 %cmp1179, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.end
  %dst.addr.0.lcssa = phi i8* [ %call10, %if.end ], [ %call26, %for.body ]
  %call27 = tail call i8* @halide_string_to_string(i8* %dst.addr.0.lcssa, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25.81, i64 0, i64 0)) #19
  br label %return

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %dst.addr.080 = phi i8* [ %call10, %for.body.lr.ph ], [ %call26, %for.body ]
  %call12 = tail call i8* @halide_string_to_string(i8* %dst.addr.080, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23.82, i64 0, i64 0)) #19
  %6 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %min = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %6, i64 %indvars.iv, i32 0
  %7 = load i32, i32* %min, align 4, !tbaa !138
  %conv = sext i32 %7 to i64
  %call13 = tail call i8* @halide_int64_to_string(i8* %call12, i8* %end, i64 %conv, i32 1) #19
  %call14 = tail call i8* @halide_string_to_string(i8* %call13, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.80, i64 0, i64 0)) #19
  %8 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %extent = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %8, i64 %indvars.iv, i32 1
  %9 = load i32, i32* %extent, align 4, !tbaa !140
  %conv18 = sext i32 %9 to i64
  %call19 = tail call i8* @halide_int64_to_string(i8* %call14, i8* %end, i64 %conv18, i32 1) #19
  %call20 = tail call i8* @halide_string_to_string(i8* %call19, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.80, i64 0, i64 0)) #19
  %10 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !137
  %stride = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i64 %indvars.iv, i32 2
  %11 = load i32, i32* %stride, align 4, !tbaa !141
  %conv24 = sext i32 %11 to i64
  %call25 = tail call i8* @halide_int64_to_string(i8* %call20, i8* %end, i64 %conv24, i32 1) #19
  %call26 = tail call i8* @halide_string_to_string(i8* %call25, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.83, i64 0, i64 0)) #19
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %12 = load i32, i32* %dimensions, align 4, !tbaa !129
  %13 = sext i32 %12 to i64
  %cmp11 = icmp slt i64 %indvars.iv.next, %13
  br i1 %cmp11, label %for.body, label %for.cond.cleanup, !llvm.loop !296

return:                                           ; preds = %for.cond.cleanup, %if.then
  %retval.0 = phi i8* [ %call, %if.then ], [ %call27, %for.cond.cleanup ]
  ret i8* %retval.0
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define weak i32 @halide_malloc_alignment() local_unnamed_addr #5 {
entry:
  ret i32 64
}

; Function Attrs: nounwind
define weak i32 @halide_reuse_device_allocations(i8* %user_context, i1 zeroext %flag) local_unnamed_addr #4 {
entry:
  %frombool = zext i1 %flag to i8
  store i8 %frombool, i8* @_ZN6Halide7Runtime8Internal36halide_reuse_device_allocations_flagE, align 1, !tbaa !15
  br i1 %flag, label %if.end5, label %if.then

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #17
  %p.014 = load %struct.halide_device_allocation_pool*, %struct.halide_device_allocation_pool** @_ZN6Halide7Runtime8Internal23device_allocation_poolsE, align 8, !tbaa !10
  %cmp.not15 = icmp eq %struct.halide_device_allocation_pool* %p.014, null
  br i1 %cmp.not15, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.then
  %err.0.lcssa = phi i32 [ 0, %if.then ], [ %spec.select, %for.body ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #17
  br label %if.end5

for.body:                                         ; preds = %for.body, %if.then
  %p.017 = phi %struct.halide_device_allocation_pool* [ %p.0, %for.body ], [ %p.014, %if.then ]
  %err.016 = phi i32 [ %spec.select, %for.body ], [ 0, %if.then ]
  %release_unused = getelementptr inbounds %struct.halide_device_allocation_pool, %struct.halide_device_allocation_pool* %p.017, i64 0, i32 0
  %0 = load i32 (i8*)*, i32 (i8*)** %release_unused, align 8, !tbaa !297
  %call = tail call i32 %0(i8* %user_context) #17
  %tobool3.not = icmp eq i32 %call, 0
  %spec.select = select i1 %tobool3.not, i32 %err.016, i32 %call
  %next = getelementptr inbounds %struct.halide_device_allocation_pool, %struct.halide_device_allocation_pool* %p.017, i64 0, i32 1
  %p.0 = load %struct.halide_device_allocation_pool*, %struct.halide_device_allocation_pool** %next, align 8, !tbaa !10
  %cmp.not = icmp eq %struct.halide_device_allocation_pool* %p.0, null
  br i1 %cmp.not, label %for.cond.cleanup, label %for.body, !llvm.loop !299

if.end5:                                          ; preds = %for.cond.cleanup, %entry
  %err.2 = phi i32 [ 0, %entry ], [ %err.0.lcssa, %for.cond.cleanup ]
  ret i32 %err.2
}

; Function Attrs: nounwind willreturn mustprogress
define weak zeroext i1 @halide_can_reuse_device_allocations(i8* %user_context) local_unnamed_addr #2 {
entry:
  %0 = load i8, i8* @_ZN6Halide7Runtime8Internal36halide_reuse_device_allocations_flagE, align 1, !tbaa !15, !range !17
  %tobool = icmp ne i8 %0, 0
  ret i1 %tobool
}

; Function Attrs: nounwind
define weak void @halide_register_device_allocation_pool(%struct.halide_device_allocation_pool* %pool) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #17
  %0 = load %struct.halide_device_allocation_pool*, %struct.halide_device_allocation_pool** @_ZN6Halide7Runtime8Internal23device_allocation_poolsE, align 8, !tbaa !10
  %next = getelementptr inbounds %struct.halide_device_allocation_pool, %struct.halide_device_allocation_pool* %pool, i64 0, i32 1
  store %struct.halide_device_allocation_pool* %0, %struct.halide_device_allocation_pool** %next, align 8, !tbaa !300
  store %struct.halide_device_allocation_pool* %pool, %struct.halide_device_allocation_pool** @_ZN6Halide7Runtime8Internal23device_allocation_poolsE, align 8, !tbaa !10
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #17
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %flags.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %0 = load i64, i64* %flags.i.i, align 8, !tbaa !142
  %and.i.i = and i64 %0, 2
  %cmp.i.i.not = icmp eq i64 %and.i.i, 0
  br i1 %cmp.i.i.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %1 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  %and.i.i46 = and i64 %0, 1
  %cmp.i.i47.not = icmp eq i64 %and.i.i46, 0
  br i1 %cmp.i.i47.not, label %if.end9, label %return

if.end9:                                          ; preds = %if.end
  %cmp = icmp eq %struct.halide_device_interface_t* %1, null
  br i1 %cmp, label %return, label %if.end15

if.end15:                                         ; preds = %if.end9
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %1, i64 0, i32 15
  %2 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %copy_to_host = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %2, i64 0, i32 6
  %3 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %copy_to_host, align 8, !tbaa !302
  %call16 = tail call i32 %3(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #17
  %cmp17.not = icmp eq i32 %call16, 0
  br i1 %cmp17.not, label %if.end23, label %return

if.end23:                                         ; preds = %if.end15
  %4 = load i64, i64* %flags.i.i, align 8, !tbaa !142
  %and.i.i44 = and i64 %4, -3
  store i64 %and.i.i44, i64* %flags.i.i, align 8, !tbaa !142
  %call24 = tail call i32 @halide_msan_annotate_buffer_is_initialized(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #17
  br label %return

return:                                           ; preds = %if.end23, %if.end15, %if.end9, %if.end, %entry
  %retval.2 = phi i32 [ 0, %entry ], [ 0, %if.end23 ], [ -14, %if.end ], [ -19, %if.end9 ], [ -14, %if.end15 ]
  ret i32 %retval.2
}

; Function Attrs: nounwind mustprogress
define weak void @halide_device_release(i8* %user_context, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i64 0, i32 15
  %0 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %device_release = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %0, i64 0, i32 5
  %1 = load i32 (i8*)*, i32 (i8*)** %device_release, align 8, !tbaa !304
  %call = tail call i32 %1(i8* %user_context) #17
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_copy_to_host(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #17
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.88, i64 0, i64 0)) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !136
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !135
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !142
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit, %if.end16.i
  %call1 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* %buf) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %call1, %if.end ], [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #17
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @copy_to_device_already_locked(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.89, i64 0, i64 0)) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !136
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !135
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !142
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit, %if.end16.i
  %cmp1 = icmp eq %struct.halide_device_interface_t* %device_interface, null
  br i1 %cmp1, label %if.then2, label %if.end11

if.then2:                                         ; preds = %if.end
  %device_interface5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %4 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface5, align 8, !tbaa !136
  %cmp6 = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp6, label %if.then7, label %if.end11

if.then7:                                         ; preds = %if.then2
  %call8 = tail call i32 @halide_error_no_device_interface(i8* %user_context) #17
  br label %cleanup

if.end11:                                         ; preds = %if.then2, %if.end
  %device_interface.addr.0 = phi %struct.halide_device_interface_t* [ %device_interface, %if.end ], [ %4, %if.then2 ]
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %5 = load i64, i64* %device, align 8, !tbaa !135
  %tobool.not = icmp eq i64 %5, 0
  br i1 %tobool.not, label %if.then18, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end11
  %device_interface12 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %6 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface12, align 8, !tbaa !136
  %cmp13.not = icmp eq %struct.halide_device_interface_t* %6, %device_interface.addr.0
  br i1 %cmp13.not, label %if.end27, label %if.then14

if.then14:                                        ; preds = %land.lhs.true
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.9.90, i64 0, i64 0)) #17
  br label %cleanup

if.then18:                                        ; preds = %if.end11
  %call19 = tail call i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* nonnull %buf, %struct.halide_device_interface_t* nonnull %device_interface.addr.0) #19
  %cmp20.not = icmp eq i32 %call19, 0
  br i1 %cmp20.not, label %if.end27, label %cleanup

if.end27:                                         ; preds = %if.then18, %land.lhs.true
  %flags.i.i97 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %7 = load i64, i64* %flags.i.i97, align 8, !tbaa !142
  %and.i.i98 = and i64 %7, 1
  %cmp.i.i99.not = icmp eq i64 %and.i.i98, 0
  br i1 %cmp.i.i99.not, label %cleanup, label %if.then29

if.then29:                                        ; preds = %if.end27
  %and.i.i96 = and i64 %7, 2
  %cmp.i.i.not = icmp eq i64 %and.i.i96, 0
  br i1 %cmp.i.i.not, label %if.else, label %cleanup

if.else:                                          ; preds = %if.then29
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface.addr.0, i64 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %copy_to_device = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i64 0, i32 7
  %9 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %copy_to_device, align 8, !tbaa !305
  %call44 = tail call i32 %9(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #17
  %cmp45 = icmp eq i32 %call44, 0
  br i1 %cmp45, label %if.then46, label %cleanup

if.then46:                                        ; preds = %if.else
  %10 = load i64, i64* %flags.i.i97, align 8, !tbaa !142
  %and.i.i = and i64 %10, -2
  store i64 %and.i.i, i64* %flags.i.i97, align 8, !tbaa !142
  br label %cleanup

cleanup:                                          ; preds = %if.then46, %if.else, %if.then29, %if.end27, %if.then18, %if.then14, %if.then7, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %call8, %if.then7 ], [ -42, %if.then14 ], [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.then46 ], [ %call19, %if.then18 ], [ -15, %if.then29 ], [ -15, %if.else ], [ 0, %if.end27 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17.91, i64 0, i64 0)) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !136
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !135
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !142
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup12

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface3.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface3.phi.trans.insert, align 8, !tbaa !136
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp4.not = icmp eq %struct.halide_device_interface_t* %4, null
  %cmp5.not = icmp eq %struct.halide_device_interface_t* %4, %device_interface
  %or.cond = or i1 %cmp4.not, %cmp5.not
  br i1 %or.cond, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20.92, i64 0, i64 0)) #17
  br label %cleanup12

if.end7:                                          ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !306
  tail call void %6() #17
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %device_malloc = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 2
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_malloc, align 8, !tbaa !307
  %call9 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #17
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !308
  tail call void %10() #17
  %tobool.not = icmp eq i32 %call9, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -16
  ret i32 %spec.select

cleanup12:                                        ; preds = %if.then6, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -42, %if.then6 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind
define weak i32 @halide_copy_to_device(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #17
  %call = tail call i32 @copy_to_device_already_locked(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) #19
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #17
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_sync(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16.93, i64 0, i64 0)) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !136
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !135
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !142
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup8

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !136
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2 = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %call4 = tail call i32 @halide_error_no_device_interface(i8* %user_context) #17
  br label %cleanup8

if.end5:                                          ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %device_sync = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 4
  %6 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_sync, align 8, !tbaa !309
  %call6 = tail call i32 %6(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #17
  %tobool.not = icmp eq i32 %call6, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -17
  ret i32 %spec.select

cleanup8:                                         ; preds = %if.then3, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ %call4, %if.then3 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21.96, i64 0, i64 0)) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !136
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !135
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !142
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup12

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !136
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2.not, label %if.end11, label %if.then3

if.then3:                                         ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !306
  tail call void %6() #17
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %device_free = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 3
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_free, align 8, !tbaa !310
  %call5 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #17
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !308
  tail call void %10() #17
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %11 = load i64, i64* %device, align 8, !tbaa !135
  %cmp7 = icmp eq i64 %11, 0
  br i1 %cmp7, label %do.end, label %if.then8

if.then8:                                         ; preds = %if.then3
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.22.97, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.end

do.end:                                           ; preds = %if.then8, %if.then3
  %tobool.not = icmp eq i32 %call5, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -18
  ret i32 %spec.select

if.end11:                                         ; preds = %if.end
  %flags3.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %12 = load i64, i64* %flags3.i.i, align 8, !tbaa !142
  %and.i.i = and i64 %12, -3
  store i64 %and.i.i, i64* %flags3.i.i, align 8, !tbaa !142
  br label %cleanup12

cleanup12:                                        ; preds = %if.end11, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end11 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak void @halide_device_free_as_destructor(i8* %user_context, i8* %obj) local_unnamed_addr #0 {
entry:
  %0 = bitcast i8* %obj to %struct.halide_buffer_t*
  %call = tail call i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* %0) #19
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_and_host_malloc(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23.98, i64 0, i64 0)) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !136
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !135
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !142
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup14

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface3.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface3.phi.trans.insert, align 8, !tbaa !136
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp4.not = icmp eq %struct.halide_device_interface_t* %4, null
  %cmp5.not = icmp eq %struct.halide_device_interface_t* %4, %device_interface
  %or.cond = or i1 %cmp4.not, %cmp5.not
  br i1 %or.cond, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.25.99, i64 0, i64 0)) #17
  br label %cleanup14

if.end7:                                          ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !306
  tail call void %6() #17
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %device_and_host_malloc = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 8
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_and_host_malloc, align 8, !tbaa !311
  %call9 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #17
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !308
  tail call void %10() #17
  %cmp11.not = icmp eq i32 %call9, 0
  br i1 %cmp11.not, label %cleanup14, label %if.then12

if.then12:                                        ; preds = %if.end7
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.26.100, i64 0, i64 0)) #17
  br label %cleanup14

cleanup14:                                        ; preds = %if.then12, %if.end7, %if.then6, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -42, %if.then6 ], [ -16, %if.then12 ], [ 0, %if.end7 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_and_host_free(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.27.101, i64 0, i64 0)) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !136
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !135
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !142
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup18

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !136
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2.not, label %if.else11, label %if.then3

if.then3:                                         ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !306
  tail call void %6() #17
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %device_and_host_free = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 9
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_and_host_free, align 8, !tbaa !312
  %call5 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #17
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !308
  tail call void %10() #17
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %11 = load i64, i64* %device, align 8, !tbaa !135
  %cmp7 = icmp eq i64 %11, 0
  br i1 %cmp7, label %do.end, label %if.then8

if.then8:                                         ; preds = %if.then3
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.28.102, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.end

do.end:                                           ; preds = %if.then8, %if.then3
  %tobool.not = icmp eq i32 %call5, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -18
  ret i32 %spec.select

if.else11:                                        ; preds = %if.end
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %12 = load i8*, i8** %host, align 8, !tbaa !134
  %tobool12.not = icmp eq i8* %12, null
  br i1 %tobool12.not, label %if.end17, label %if.then13

if.then13:                                        ; preds = %if.else11
  tail call void @halide_free(i8* %user_context, i8* nonnull %12) #17
  store i8* null, i8** %host, align 8, !tbaa !134
  br label %if.end17

if.end17:                                         ; preds = %if.then13, %if.else11
  %flags3.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %13 = load i64, i64* %flags3.i.i, align 8, !tbaa !142
  %and.i.i = and i64 %13, -3
  store i64 %and.i.i, i64* %flags3.i.i, align 8, !tbaa !142
  br label %cleanup18

cleanup18:                                        ; preds = %if.end17, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end17 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_and_host_malloc(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.103, i64 0, i64 0)) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !136
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !135
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !142
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %if.end, label %cleanup13

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit, %if.end16.i
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %4 = load i32, i32* %dimensions.i.i, align 4, !tbaa !129
  %cmp19.i.i = icmp sgt i32 %4, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %if.end
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %5 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !137
  %wide.trip.count.i.i = zext i32 %4 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %if.end.i.i ]
  %index.021.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %index.1.i.i, %if.end.i.i ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv.i.i, i32 2
  %6 = load i32, i32* %stride2.i.i, align 4, !tbaa !141
  %cmp3.i.i = icmp sgt i32 %6, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %6 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv.i.i, i32 1
  %7 = load i32, i32* %extent.i.i, align 4, !tbaa !140
  %sub.i.i = add nsw i32 %7, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i, label %for.body.i.i, !llvm.loop !313

for.body.i13.i:                                   ; preds = %if.end.i24.i, %if.end.i.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ 0, %if.end.i.i ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ 0, %if.end.i.i ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv.i10.i, i32 2
  %8 = load i32, i32* %stride2.i11.i, align 4, !tbaa !141
  %cmp3.i12.i = icmp slt i32 %8, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %8 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv.i10.i, i32 1
  %9 = load i32, i32* %extent.i15.i, align 4, !tbaa !140
  %sub.i16.i = add nsw i32 %9, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !314

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i
  %add8.i.i = add nsw i64 %index.1.i.i, 1
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, %if.end
  %add8.i27.i = phi i64 [ 1, %if.end ], [ %add8.i.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %index.0.lcssa.i9.i = phi i64 [ 0, %if.end ], [ %index.1.i21.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i = sub nsw i64 %add8.i27.i, %index.0.lcssa.i9.i
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 4, i32 1
  %10 = load i8, i8* %bits.i.i, align 1, !tbaa !144
  %conv.i.i = zext i8 %10 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i4.i, 3
  %mul.i = mul i64 %div.i.i, %sub.i
  %call2 = tail call i8* @halide_malloc(i8* %user_context, i64 %mul.i) #17
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  store i8* %call2, i8** %host, align 8, !tbaa !134
  %cmp4 = icmp eq i8* %call2, null
  br i1 %cmp4, label %cleanup13, label %if.end6

if.end6:                                          ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %call7 = tail call i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* nonnull %buf, %struct.halide_device_interface_t* %device_interface) #19
  %cmp8.not = icmp eq i32 %call7, 0
  br i1 %cmp8.not, label %cleanup13, label %if.then9

if.then9:                                         ; preds = %if.end6
  %11 = load i8*, i8** %host, align 8, !tbaa !134
  tail call void @halide_free(i8* %user_context, i8* %11) #17
  store i8* null, i8** %host, align 8, !tbaa !134
  br label %cleanup13

cleanup13:                                        ; preds = %if.then9, %if.end6, %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -1, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ], [ %call7, %if.then9 ], [ 0, %if.end6 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_and_host_free(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.30.104, i64 0, i64 0)) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !136
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !135
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !142
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit, %if.end16.i
  %call1 = tail call i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* %buf) #19
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %4 = load i8*, i8** %host, align 8, !tbaa !134
  %tobool.not = icmp eq i8* %4, null
  br i1 %tobool.not, label %if.end5, label %if.then2

if.then2:                                         ; preds = %if.end
  tail call void @halide_free(i8* %user_context, i8* nonnull %4) #17
  store i8* null, i8** %host, align 8, !tbaa !134
  br label %if.end5

if.end5:                                          ; preds = %if.then2, %if.end
  %flags3.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %5 = load i64, i64* %flags3.i.i, align 8, !tbaa !142
  %and.i.i18 = and i64 %5, -4
  store i64 %and.i.i18, i64* %flags3.i.i, align 8, !tbaa !142
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %call1, %if.end5 ], [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_wrap_native(i8* %user_context, %struct.halide_buffer_t* %buf, i64 %handle, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31.105, i64 0, i64 0)) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !136
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !135
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !142
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup12

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !136
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  %cmp3.not = icmp eq %struct.halide_device_interface_t* %4, %device_interface
  %or.cond = or i1 %cmp2.not, %cmp3.not
  br i1 %or.cond, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.32.106, i64 0, i64 0)) #17
  br label %cleanup12

if.end5:                                          ; preds = %if.end
  %device_interface1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !306
  tail call void %6() #17
  store %struct.halide_device_interface_t* %device_interface, %struct.halide_device_interface_t** %device_interface1, align 8, !tbaa !136
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %wrap_native = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 14
  %8 = load i32 (i8*, %struct.halide_buffer_t*, i64)*, i32 (i8*, %struct.halide_buffer_t*, i64)** %wrap_native, align 8, !tbaa !315
  %call8 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf, i64 %handle) #17
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !308
  tail call void %10() #17
  %tobool.not = icmp eq i32 %call8, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -16
  ret i32 %spec.select

cleanup12:                                        ; preds = %if.then4, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -42, %if.then4 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_detach_native(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33.107, i64 0, i64 0)) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !136
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !135
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !142
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !136
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2.not, label %cleanup, label %if.then3

if.then3:                                         ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !306
  tail call void %6() #17
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %detach_native = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 15
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %detach_native, align 8, !tbaa !316
  %call5 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #17
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !308
  tail call void %10() #17
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %11 = load i64, i64* %device, align 8, !tbaa !135
  %cmp7 = icmp eq i64 %11, 0
  br i1 %cmp7, label %do.end, label %if.then8

if.then8:                                         ; preds = %if.then3
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.34.108, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.end

do.end:                                           ; preds = %if.then8, %if.then3
  %tobool.not = icmp eq i32 %call5, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -33
  ret i32 %spec.select

cleanup:                                          ; preds = %if.end, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_wrap_native(i8* %user_context, %struct.halide_buffer_t* %buf, i64 %handle) local_unnamed_addr #0 {
entry:
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !135
  %cmp.not = icmp eq i64 %0, 0
  br i1 %cmp.not, label %if.end, label %return

if.end:                                           ; preds = %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %1 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %1, i64 0, i32 15
  %2 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %2, i64 0, i32 0
  %3 = load void ()*, void ()** %use_module, align 8, !tbaa !306
  tail call void %3() #17
  store i64 %handle, i64* %device, align 8, !tbaa !135
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -32, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_detach_native(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35, i64 0, i64 0)) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !136
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !135
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !142
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #17
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %.pre = load i64, i64* %device.phi.trans.insert, align 8, !tbaa !135
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi i64 [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %1, %if.end16.i ]
  %cmp1 = icmp eq i64 %4, 0
  br i1 %cmp1, label %cleanup, label %if.end3

if.end3:                                          ; preds = %if.end
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %5 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %5, i64 0, i32 15
  %6 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %6, i64 0, i32 1
  %7 = load void ()*, void ()** %release_module, align 8, !tbaa !308
  tail call void %7() #17
  store i64 0, i64* %device, align 8, !tbaa !135
  store %struct.halide_device_interface_t* null, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %if.end, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ 0, %if.end3 ], [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_device_and_host_free_as_destructor(i8* %user_context, i8* %obj) local_unnamed_addr #0 {
entry:
  %0 = bitcast i8* %obj to %struct.halide_buffer_t*
  %call = tail call i32 @halide_device_and_host_free(i8* %user_context, %struct.halide_buffer_t* %0) #19
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_device_host_nop_free(i8* %user_context, i8* %obj) local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_default_buffer_copy(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) local_unnamed_addr #2 {
entry:
  ret i32 -39
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_buffer_copy_already_locked(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) local_unnamed_addr #0 {
entry:
  %c = alloca %"struct.Halide::Runtime::Internal::device_copy", align 8
  %tobool.not = icmp eq %struct.halide_device_interface_t* %dst_device_interface, null
  br i1 %tobool.not, label %if.end13, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  %tobool1.not = icmp eq %struct.halide_device_interface_t* %0, null
  %cmp.not = icmp eq %struct.halide_device_interface_t* %0, %dst_device_interface
  %or.cond = or i1 %tobool1.not, %cmp.not
  br i1 %or.cond, label %land.lhs.true5, label %if.then

if.then:                                          ; preds = %land.lhs.true
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.41, i64 0, i64 0)) #17
  br label %cleanup143

land.lhs.true5:                                   ; preds = %land.lhs.true
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  %1 = load i64, i64* %device, align 8, !tbaa !135
  %tobool6.not = icmp eq i64 %1, 0
  br i1 %tobool6.not, label %if.then7, label %if.end13

if.then7:                                         ; preds = %land.lhs.true5
  %call = tail call i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* nonnull %dst, %struct.halide_device_interface_t* nonnull %dst_device_interface) #19
  %tobool10.not = icmp eq i32 %call, 0
  br i1 %tobool10.not, label %if.end13, label %cleanup143

if.end13:                                         ; preds = %if.then7, %land.lhs.true5, %entry
  %device14 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %2 = load i64, i64* %device14, align 8, !tbaa !135
  %cmp15.not = icmp eq i64 %2, 0
  %host22.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 2
  %.pre = load i8*, i8** %host22.phi.trans.insert, align 8, !tbaa !134
  %cmp23.not = icmp eq i8* %.pre, null
  br i1 %cmp15.not, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end13
  br i1 %cmp23.not, label %land.end32, label %land.end.thread264

land.end.thread264:                               ; preds = %land.rhs
  %flags.i.i243 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 3
  %3 = load i64, i64* %flags.i.i243, align 8, !tbaa !142
  %and.i.i244 = and i64 %3, 1
  %cmp.i.i.not = icmp ne i64 %and.i.i244, 0
  br label %land.rhs26

land.end:                                         ; preds = %if.end13
  br i1 %cmp23.not, label %land.end32, label %land.rhs26

land.rhs26:                                       ; preds = %land.end, %land.end.thread264
  %4 = phi i1 [ %cmp.i.i.not, %land.end.thread264 ], [ true, %land.end ]
  %flags.i.i247 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 3
  %5 = load i64, i64* %flags.i.i247, align 8, !tbaa !142
  %and.i.i248 = and i64 %5, 2
  %cmp.i.i249.not = icmp eq i64 %and.i.i248, 0
  br i1 %cmp.i.i249.not, label %land.end32, label %lor.rhs28

lor.rhs28:                                        ; preds = %land.rhs26
  %device_interface29 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %6 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface29, align 8, !tbaa !136
  %cmp30 = icmp ne %struct.halide_device_interface_t* %6, null
  br label %land.end32

land.end32:                                       ; preds = %lor.rhs28, %land.rhs26, %land.end, %land.rhs
  %cmp23.not263 = phi i1 [ true, %land.end ], [ false, %land.rhs26 ], [ false, %lor.rhs28 ], [ true, %land.rhs ]
  %7 = phi i1 [ true, %land.end ], [ %4, %land.rhs26 ], [ %4, %lor.rhs28 ], [ false, %land.rhs ]
  %8 = phi i1 [ true, %land.end ], [ false, %land.rhs26 ], [ %cmp30, %lor.rhs28 ], [ true, %land.rhs ]
  %host34 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 2
  %9 = load i8*, i8** %host34, align 8, !tbaa !134
  %cmp35.not = icmp eq i8* %9, null
  %cmp20.not = xor i1 %tobool.not, true
  %10 = and i1 %tobool.not, %cmp35.not
  br i1 %10, label %cleanup143, label %if.end41

if.end41:                                         ; preds = %land.end32
  %brmerge229 = or i1 %tobool.not, %7
  br i1 %brmerge229, label %if.then51, label %if.end49

if.end49:                                         ; preds = %if.end41
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i64 0, i32 15
  %11 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %buffer_copy = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %11, i64 0, i32 10
  %12 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy, align 8, !tbaa !317
  %call48 = tail call i32 %12(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* nonnull %dst_device_interface, %struct.halide_buffer_t* nonnull %dst) #17
  %cmp50 = icmp eq i32 %call48, -42
  br i1 %cmp50, label %if.then51, label %if.end117

if.then51:                                        ; preds = %if.end49, %if.end41
  %brmerge231.demorgan = and i1 %cmp23.not263, %cmp35.not
  br i1 %brmerge231.demorgan, label %cleanup143, label %if.end58

if.end58:                                         ; preds = %if.then51
  %brmerge234 = or i1 %8, %cmp20.not
  br i1 %brmerge234, label %if.else, label %if.end117.thread258

if.end117.thread258:                              ; preds = %if.end58
  %13 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %c to i8*
  call void @llvm.lifetime.start.p0i8(i64 416, i8* nonnull %13) #18
  call void @_ZN6Halide7Runtime8Internal16make_buffer_copyEPK15halide_buffer_tbS4_b(%"struct.Halide::Runtime::Internal::device_copy"* nonnull sret(%"struct.Halide::Runtime::Internal::device_copy") align 8 %c, %struct.halide_buffer_t* nonnull %src, i1 zeroext true, %struct.halide_buffer_t* nonnull %dst, i1 zeroext true) #19
  call void @_ZN6Halide7Runtime8Internal11copy_memoryERKNS1_11device_copyEPv(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %c, i8* %user_context) #19
  call void @llvm.lifetime.end.p0i8(i64 416, i8* nonnull %13) #18
  br label %land.lhs.true126

if.else:                                          ; preds = %if.end58
  %brmerge237 = or i1 %7, %cmp20.not
  br i1 %brmerge237, label %if.else81, label %if.then66

if.then66:                                        ; preds = %if.else
  %device_interface69 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %14 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface69, align 8, !tbaa !136
  %impl70 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %14, i64 0, i32 15
  %15 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl70, align 8, !tbaa !301
  %buffer_copy71 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %15, i64 0, i32 10
  %16 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy71, align 8, !tbaa !317
  %call72 = tail call i32 %16(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* null, %struct.halide_buffer_t* nonnull %dst) #17
  %cmp73 = icmp eq i32 %call72, -42
  br i1 %cmp73, label %if.then74, label %if.end117

if.then74:                                        ; preds = %if.then66
  %call75 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* nonnull %src) #19
  %tobool76.not = icmp eq i32 %call75, 0
  br i1 %tobool76.not, label %if.then77, label %cleanup143

if.then77:                                        ; preds = %if.then74
  %call78 = tail call i32 @halide_buffer_copy_already_locked(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* null, %struct.halide_buffer_t* nonnull %dst) #19
  br label %if.end117

if.else81:                                        ; preds = %if.else
  %brmerge239 = or i1 %7, %cmp35.not
  br i1 %brmerge239, label %if.else98, label %if.then85

if.then85:                                        ; preds = %if.else81
  %device_interface90 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %17 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface90, align 8, !tbaa !136
  %impl91 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %17, i64 0, i32 15
  %18 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl91, align 8, !tbaa !301
  %buffer_copy92 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %18, i64 0, i32 10
  %19 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy92, align 8, !tbaa !317
  %call93 = tail call i32 %19(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* null, %struct.halide_buffer_t* nonnull %dst) #17
  %cmp94 = icmp eq i32 %call93, 0
  br i1 %cmp94, label %if.then95, label %cleanup143

if.then95:                                        ; preds = %if.then85
  %flags.i.i245 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 3
  %20 = load i64, i64* %flags.i.i245, align 8, !tbaa !142
  %or.i.i246 = or i64 %20, 1
  store i64 %or.i.i246, i64* %flags.i.i245, align 8, !tbaa !142
  %call96 = tail call i32 @copy_to_device_already_locked(i8* %user_context, %struct.halide_buffer_t* nonnull %dst, %struct.halide_device_interface_t* %dst_device_interface) #19
  br label %if.end117

if.else98:                                        ; preds = %if.else81
  br i1 %tobool.not, label %cleanup143, label %if.then100

if.then100:                                       ; preds = %if.else98
  %call103 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* nonnull %src) #19
  %cmp104 = icmp eq i32 %call103, 0
  br i1 %cmp104, label %if.then105, label %cleanup143

if.then105:                                       ; preds = %if.then100
  %impl106 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i64 0, i32 15
  %21 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl106, align 8, !tbaa !301
  %buffer_copy107 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %21, i64 0, i32 10
  %22 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy107, align 8, !tbaa !317
  %call108 = tail call i32 %22(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* nonnull %dst_device_interface, %struct.halide_buffer_t* nonnull %dst) #17
  br label %if.end117

if.end117:                                        ; preds = %if.then105, %if.then95, %if.then77, %if.then66, %if.end49
  %err.1 = phi i32 [ %call78, %if.then77 ], [ %call72, %if.then66 ], [ %call96, %if.then95 ], [ %call108, %if.then105 ], [ %call48, %if.end49 ]
  %cond = icmp eq i32 %err.1, 0
  br i1 %cond, label %land.lhs.true126, label %cleanup143

land.lhs.true126:                                 ; preds = %if.end117, %if.end117.thread258
  %cmp127.not.old = icmp eq %struct.halide_buffer_t* %dst, %src
  br i1 %cmp127.not.old, label %cleanup143, label %if.then128

if.then128:                                       ; preds = %land.lhs.true126
  %flags.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 3
  %23 = load i64, i64* %flags.i.i, align 8, !tbaa !142
  %or.i.i = and i64 %23, -4
  br i1 %tobool.not, label %if.else133, label %if.then130

if.then130:                                       ; preds = %if.then128
  %or.i.i242 = or i64 %or.i.i, 2
  store i64 %or.i.i242, i64* %flags.i.i, align 8, !tbaa !142
  br label %cleanup143

if.else133:                                       ; preds = %if.then128
  %and.i.i251 = or i64 %or.i.i, 1
  store i64 %and.i.i251, i64* %flags.i.i, align 8, !tbaa !142
  br label %cleanup143

cleanup143:                                       ; preds = %if.else133, %if.then130, %land.lhs.true126, %if.end117, %if.then100, %if.else98, %if.then85, %if.then74, %if.then51, %land.end32, %if.then7, %if.then
  %retval.1 = phi i32 [ -42, %if.then ], [ %call, %if.then7 ], [ -34, %land.end32 ], [ 0, %if.then130 ], [ 0, %if.else133 ], [ 0, %land.lhs.true126 ], [ -42, %if.then51 ], [ %err.1, %if.end117 ], [ -42, %if.else98 ], [ %call103, %if.then100 ], [ %call93, %if.then85 ], [ %call75, %if.then74 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind
define weak i32 @halide_buffer_copy(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #17
  %tobool.not = icmp eq %struct.halide_device_interface_t* %dst_device_interface, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i64 0, i32 15
  %0 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %0, i64 0, i32 0
  %1 = load void ()*, void ()** %use_module, align 8, !tbaa !306
  tail call void %1() #17
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %2 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  %tobool11.not = icmp eq %struct.halide_device_interface_t* %2, null
  br i1 %tobool11.not, label %if.end16, label %if.then12

if.then12:                                        ; preds = %if.end
  %impl14 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %2, i64 0, i32 15
  %3 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl14, align 8, !tbaa !301
  %use_module15 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %3, i64 0, i32 0
  %4 = load void ()*, void ()** %use_module15, align 8, !tbaa !306
  tail call void %4() #17
  br label %if.end16

if.end16:                                         ; preds = %if.then12, %if.end
  %call = tail call i32 @halide_buffer_copy_already_locked(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) #19
  br i1 %tobool.not, label %if.end20, label %if.then18

if.then18:                                        ; preds = %if.end16
  %impl19 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl19, align 8, !tbaa !301
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 1
  %6 = load void ()*, void ()** %release_module, align 8, !tbaa !308
  tail call void %6() #17
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end16
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  %tobool22.not = icmp eq %struct.halide_device_interface_t* %7, null
  br i1 %tobool22.not, label %if.end27, label %if.then23

if.then23:                                        ; preds = %if.end20
  %impl25 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i64 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl25, align 8, !tbaa !301
  %release_module26 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i64 0, i32 1
  %9 = load void ()*, void ()** %release_module26, align 8, !tbaa !308
  tail call void %9() #17
  br label %if.end27

if.end27:                                         ; preds = %if.then23, %if.end20
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #17
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_crop(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_buffer_t* %dst) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.58, i64 0, i64 0)) #17
  ret i32 -40
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_slice(i8* %user_context, %struct.halide_buffer_t* %src, i32 %slice_dim, i32 %slice_pos, %struct.halide_buffer_t* %dst) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.59, i64 0, i64 0)) #17
  ret i32 -40
}

; Function Attrs: nounwind
define weak i32 @halide_device_crop(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_buffer_t* %dst) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #17
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !135
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %device1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  %1 = load i64, i64* %device1, align 8, !tbaa !135
  %tobool2.not = icmp eq i64 %1, 0
  br i1 %tobool2.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.60, i64 0, i64 0)) #17
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 5
  %2 = load i32, i32* %dimensions, align 4, !tbaa !129
  %dimensions5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 5
  %3 = load i32, i32* %dimensions5, align 4, !tbaa !129
  %cmp.not = icmp eq i32 %2, %3
  br i1 %cmp.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end4
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.61, i64 0, i64 0)) #17
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %4 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !306
  tail call void %6() #17
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  %impl9 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i64 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl9, align 8, !tbaa !301
  %device_crop = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i64 0, i32 11
  %9 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)** %device_crop, align 8, !tbaa !318
  %call = tail call i32 %9(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_buffer_t* nonnull %dst) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.then6, %if.then3, %entry
  %retval.0 = phi i32 [ -41, %if.then3 ], [ -41, %if.then6 ], [ %call, %if.end7 ], [ 0, %entry ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #17
  ret i32 %retval.0
}

; Function Attrs: nounwind
define weak i32 @halide_device_slice(i8* %user_context, %struct.halide_buffer_t* %src, i32 %slice_dim, i32 %slice_pos, %struct.halide_buffer_t* %dst) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #17
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !135
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %device1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  %1 = load i64, i64* %device1, align 8, !tbaa !135
  %tobool2.not = icmp eq i64 %1, 0
  br i1 %tobool2.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.60, i64 0, i64 0)) #17
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 5
  %2 = load i32, i32* %dimensions, align 4, !tbaa !129
  %dimensions5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 5
  %3 = load i32, i32* %dimensions5, align 4, !tbaa !129
  %add = add nsw i32 %3, 1
  %cmp.not = icmp eq i32 %2, %add
  br i1 %cmp.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end4
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.64, i64 0, i64 0)) #17
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %4 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !306
  tail call void %6() #17
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  %impl9 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i64 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl9, align 8, !tbaa !301
  %device_slice = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i64 0, i32 12
  %9 = load i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)** %device_slice, align 8, !tbaa !319
  %call = tail call i32 %9(i8* %user_context, %struct.halide_buffer_t* nonnull %src, i32 %slice_dim, i32 %slice_pos, %struct.halide_buffer_t* nonnull %dst) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.then6, %if.then3, %entry
  %retval.0 = phi i32 [ -41, %if.then3 ], [ -41, %if.then6 ], [ %call, %if.end7 ], [ 0, %entry ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #17
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_release_crop(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !135
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.58, i64 0, i64 0)) #17
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ -40, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
define weak i32 @halide_device_release_crop(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #4 {
entry:
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !135
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %return, label %if.then

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #17
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %1 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %1, i64 0, i32 15
  %2 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %device_release_crop = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %2, i64 0, i32 13
  %3 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_release_crop, align 8, !tbaa !320
  %call = tail call i32 %3(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #17
  store i64 0, i64* %device, align 8, !tbaa !135
  %4 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !301
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %4, i64 0, i32 1
  %5 = load void ()*, void ()** %release_module, align 8, !tbaa !308
  tail call void %5() #17
  store %struct.halide_device_interface_t* null, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !136
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #17
  br label %return

return:                                           ; preds = %if.then, %entry
  %retval.0 = phi i32 [ %call, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce %struct.halide_filter_metadata_t* @_ZN6Halide7Runtime8Internal56unused_function_to_get_halide_filter_metadata_t_declaredEv() local_unnamed_addr #2 {
entry:
  ret %struct.halide_filter_metadata_t* null
}

; Function Attrs: nounwind willreturn mustprogress
define weak float @halide_float16_bits_to_float(i16 zeroext %bits) local_unnamed_addr #2 {
entry:
  %conv = zext i16 %bits to i32
  %and2 = and i32 %conv, 1023
  %and4 = lshr i32 %conv, 10
  %0 = and i32 %and4, 31
  %cmp = icmp eq i32 %0, 0
  %cmp5 = icmp ne i32 %and2, 0
  %or.cond = and i1 %cmp5, %cmp
  br i1 %or.cond, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = tail call i32 @llvm.ctlz.i32(i32 %and2, i1 true), !range !321
  %sub6 = xor i32 %1, 31
  %shl7 = shl nuw i32 1, %sub6
  %neg = xor i32 %shl7, -1
  %and8 = and i32 %and2, %neg
  %sub9 = sub nsw i32 23, %sub6
  %shl10 = shl i32 %and8, %sub9
  %add11.neg = mul nsw i32 %1, -8388608
  %shl12 = add i32 %add11.neg, 1124073472
  br label %if.end28

if.else:                                          ; preds = %entry
  %shl14 = shl nuw nsw i32 %and2, 13
  br i1 %cmp, label %if.end28, label %if.else18

if.else18:                                        ; preds = %if.else
  %cmp19 = icmp eq i32 %0, 31
  br i1 %cmp19, label %if.end28, label %if.else21

if.else21:                                        ; preds = %if.else18
  %add22 = shl nuw nsw i32 %0, 23
  %phi.bo = add nuw nsw i32 %add22, 939524096
  br label %if.end28

if.end28:                                         ; preds = %if.else21, %if.else18, %if.else, %if.then
  %shl14.sink = phi i32 [ %shl12, %if.then ], [ %shl14, %if.else18 ], [ %shl14, %if.else ], [ %shl14, %if.else21 ]
  %reEncodedExponent15.0.sink = phi i32 [ %shl10, %if.then ], [ 2139095040, %if.else18 ], [ 0, %if.else ], [ %phi.bo, %if.else21 ]
  %bits.signext = sext i16 %bits to i32
  %shl = and i32 %bits.signext, -2147483648
  %or25 = or i32 %shl14.sink, %shl
  %or26 = or i32 %or25, %reEncodedExponent15.0.sink
  %result.sroa.0.0 = bitcast i32 %or26 to float
  ret float %result.sroa.0.0
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

; Function Attrs: nounwind willreturn mustprogress
define weak double @halide_float16_bits_to_double(i16 zeroext %bits) local_unnamed_addr #2 {
entry:
  %call = tail call float @halide_float16_bits_to_float(i16 zeroext %bits) #19
  %conv = fpext float %call to double
  ret double %conv
}

; Function Attrs: nounwind
define weak i32 @halide_error_bounds_inference_call_failed(i8* %user_context, i8* %extern_stage_name, i32 %result) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.16.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i7 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.111, i64 0, i64 0)) #17
  %call.i10 = tail call i8* @halide_string_to_string(i8* %call.i7, i8* %ref.tmp.sroa.16.0, i8* %extern_stage_name) #17
  %call.i13 = tail call i8* @halide_string_to_string(i8* %call.i10, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.112, i64 0, i64 0)) #17
  %conv.i = sext i32 %result to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %call.i13, i8* %ref.tmp.sroa.16.0, i64 %conv.i, i32 1) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i16 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 %result
}

; Function Attrs: nounwind
define weak i32 @halide_error_extern_stage_failed(i8* %user_context, i8* %extern_stage_name, i32 %result) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.16.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i7 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.113, i64 0, i64 0)) #17
  %call.i10 = tail call i8* @halide_string_to_string(i8* %call.i7, i8* %ref.tmp.sroa.16.0, i8* %extern_stage_name) #17
  %call.i13 = tail call i8* @halide_string_to_string(i8* %call.i10, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.112, i64 0, i64 0)) #17
  %conv.i = sext i32 %result to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %call.i13, i8* %ref.tmp.sroa.16.0, i64 %conv.i, i32 1) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i16 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 %result
}

; Function Attrs: nounwind
define weak i32 @halide_error_explicit_bounds_too_small(i8* %user_context, i8* %func_name, i8* %var_name, i32 %min_bound, i32 %max_bound, i32 %min_required, i32 %max_required) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.34.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.114, i64 0, i64 0)) #17
  %call.i18 = tail call i8* @halide_string_to_string(i8* %call.i15, i8* %ref.tmp.sroa.34.0, i8* %var_name) #17
  %call.i21 = tail call i8* @halide_string_to_string(i8* %call.i18, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.115, i64 0, i64 0)) #17
  %call.i24 = tail call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.34.0, i8* %func_name) #17
  %call.i27 = tail call i8* @halide_string_to_string(i8* %call.i24, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.116, i64 0, i64 0)) #17
  %conv.i = sext i32 %min_bound to i64
  %call.i30 = tail call i8* @halide_int64_to_string(i8* %call.i27, i8* %ref.tmp.sroa.34.0, i64 %conv.i, i32 1) #17
  %call.i33 = tail call i8* @halide_string_to_string(i8* %call.i30, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.117, i64 0, i64 0)) #17
  %conv.i36 = sext i32 %max_bound to i64
  %call.i37 = tail call i8* @halide_int64_to_string(i8* %call.i33, i8* %ref.tmp.sroa.34.0, i64 %conv.i36, i32 1) #17
  %call.i40 = tail call i8* @halide_string_to_string(i8* %call.i37, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.118, i64 0, i64 0)) #17
  %conv.i43 = sext i32 %min_required to i64
  %call.i44 = tail call i8* @halide_int64_to_string(i8* %call.i40, i8* %ref.tmp.sroa.34.0, i64 %conv.i43, i32 1) #17
  %call.i47 = tail call i8* @halide_string_to_string(i8* %call.i44, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.117, i64 0, i64 0)) #17
  %conv.i50 = sext i32 %max_required to i64
  %call.i51 = tail call i8* @halide_int64_to_string(i8* %call.i47, i8* %ref.tmp.sroa.34.0, i64 %conv.i50, i32 1) #17
  %call.i54 = tail call i8* @halide_string_to_string(i8* %call.i51, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i54 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -2
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_type(i8* %user_context, i8* %func_name, i32 %type_given_bits, i32 %correct_type_bits) local_unnamed_addr #4 {
entry:
  %type_given_bits.addr = alloca i32, align 4
  %correct_type_bits.addr = alloca i32, align 4
  %correct_type = alloca %struct.halide_type_t, align 2
  %type_given = alloca %struct.halide_type_t, align 2
  store i32 %type_given_bits, i32* %type_given_bits.addr, align 4, !tbaa !73
  store i32 %correct_type_bits, i32* %correct_type_bits.addr, align 4, !tbaa !73
  %0 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %correct_type, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #18
  store i8 0, i8* %0, align 2, !tbaa !143
  %bits.i = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %correct_type, i64 0, i32 1
  store i8 0, i8* %bits.i, align 1, !tbaa !144
  %lanes.i = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %correct_type, i64 0, i32 2
  store i16 0, i16* %lanes.i, align 2, !tbaa !145
  %1 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %type_given, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #18
  store i8 0, i8* %1, align 2, !tbaa !143
  %bits.i8 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %type_given, i64 0, i32 1
  store i8 0, i8* %bits.i8, align 1, !tbaa !144
  %lanes.i9 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %type_given, i64 0, i32 2
  store i16 0, i16* %lanes.i9, align 2, !tbaa !145
  %2 = bitcast i32* %correct_type_bits.addr to i8*
  %call = call i8* @memcpy(i8* nonnull %0, i8* nonnull %2, i64 4) #17
  %3 = bitcast i32* %type_given_bits.addr to i8*
  %call1 = call i8* @memcpy(i8* nonnull %1, i8* nonnull %3, i64 4) #17
  %call.i = call i8* @malloc(i64 1024) #17
  %tobool.not.i12 = icmp eq i8* %call.i, null
  br i1 %tobool.not.i12, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.18.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i15 = call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.18.0, i8* %func_name) #17
  %call.i18 = call i8* @halide_string_to_string(i8* %call.i15, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9.120, i64 0, i64 0)) #17
  %call.i21 = call i8* @halide_type_to_string(i8* %call.i18, i8* %ref.tmp.sroa.18.0, %struct.halide_type_t* nonnull %correct_type) #17
  %call.i24 = call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10.121, i64 0, i64 0)) #17
  %call.i27 = call i8* @halide_type_to_string(i8* %call.i24, i8* %ref.tmp.sroa.18.0, %struct.halide_type_t* nonnull %type_given) #17
  br i1 %tobool.not.i12, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i27 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  call void @free(i8* %call.i) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #18
  ret i32 -3
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_dimensions(i8* %user_context, i8* %func_name, i32 %dimensions_given, i32 %correct_dimensions) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.20.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.20.0, i8* %func_name) #17
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.122, i64 0, i64 0)) #17
  %conv.i = sext i32 %correct_dimensions to i64
  %call.i14 = tail call i8* @halide_int64_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i64 %conv.i, i32 1) #17
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.12.123, i64 0, i64 0)) #17
  %conv.i20 = sext i32 %dimensions_given to i64
  %call.i21 = tail call i8* @halide_int64_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i64 %conv.i20, i32 1) #17
  %call.i24 = tail call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13.124, i64 0, i64 0)) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i24 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -43
}

; Function Attrs: nounwind
define weak i32 @halide_error_access_out_of_bounds(i8* %user_context, i8* %func_name, i32 %dimension, i32 %min_touched, i32 %max_touched, i32 %min_valid, i32 %max_valid) local_unnamed_addr #4 {
entry:
  %cmp = icmp slt i32 %min_touched, %min_valid
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %if.then
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %if.then
  %ref.tmp.sroa.22.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %if.then ]
  %call.i27 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.22.0, i8* %func_name) #17
  %call.i30 = tail call i8* @halide_string_to_string(i8* %call.i27, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14.125, i64 0, i64 0)) #17
  %conv.i = sext i32 %min_touched to i64
  %call.i33 = tail call i8* @halide_int64_to_string(i8* %call.i30, i8* %ref.tmp.sroa.22.0, i64 %conv.i, i32 1) #17
  %call.i36 = tail call i8* @halide_string_to_string(i8* %call.i33, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15.126, i64 0, i64 0)) #17
  %conv.i39 = sext i32 %min_valid to i64
  %call.i40 = tail call i8* @halide_int64_to_string(i8* %call.i36, i8* %ref.tmp.sroa.22.0, i64 %conv.i39, i32 1) #17
  %call.i43 = tail call i8* @halide_string_to_string(i8* %call.i40, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16.127, i64 0, i64 0)) #17
  %conv.i46 = sext i32 %dimension to i64
  %call.i47 = tail call i8* @halide_int64_to_string(i8* %call.i43, i8* %ref.tmp.sroa.22.0, i64 %conv.i46, i32 1) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %if.end17.sink.split

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i47 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %if.end17.sink.split

if.else:                                          ; preds = %entry
  %cmp7 = icmp sgt i32 %max_touched, %max_valid
  br i1 %cmp7, label %if.then8, label %if.end17

if.then8:                                         ; preds = %if.else
  %call.i53 = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i56 = icmp eq i8* %call.i53, null
  br i1 %tobool.not.i56, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62, label %if.then6.i59

if.then6.i59:                                     ; preds = %if.then8
  %add.ptr.i57 = getelementptr inbounds i8, i8* %call.i53, i64 1023
  store i8 0, i8* %add.ptr.i57, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62: ; preds = %if.then6.i59, %if.then8
  %ref.tmp9.sroa.22.0 = phi i8* [ %add.ptr.i57, %if.then6.i59 ], [ null, %if.then8 ]
  %call.i65 = tail call i8* @halide_string_to_string(i8* %call.i53, i8* %ref.tmp9.sroa.22.0, i8* %func_name) #17
  %call.i68 = tail call i8* @halide_string_to_string(i8* %call.i65, i8* %ref.tmp9.sroa.22.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14.125, i64 0, i64 0)) #17
  %conv.i71 = sext i32 %max_touched to i64
  %call.i72 = tail call i8* @halide_int64_to_string(i8* %call.i68, i8* %ref.tmp9.sroa.22.0, i64 %conv.i71, i32 1) #17
  %call.i75 = tail call i8* @halide_string_to_string(i8* %call.i72, i8* %ref.tmp9.sroa.22.0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17.128, i64 0, i64 0)) #17
  %conv.i78 = sext i32 %max_valid to i64
  %call.i79 = tail call i8* @halide_int64_to_string(i8* %call.i75, i8* %ref.tmp9.sroa.22.0, i64 %conv.i78, i32 1) #17
  %call.i82 = tail call i8* @halide_string_to_string(i8* %call.i79, i8* %ref.tmp9.sroa.22.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16.127, i64 0, i64 0)) #17
  %conv.i85 = sext i32 %dimension to i64
  %call.i86 = tail call i8* @halide_int64_to_string(i8* %call.i82, i8* %ref.tmp9.sroa.22.0, i64 %conv.i85, i32 1) #17
  br i1 %tobool.not.i56, label %if.then.i90, label %if.else.i100

if.then.i90:                                      ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %if.end17.sink.split

if.else.i100:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62
  %sub.ptr.lhs.cast.i.i95 = ptrtoint i8* %call.i86 to i64
  %sub.ptr.rhs.cast.i.i96 = ptrtoint i8* %call.i53 to i64
  %sub.ptr.sub.i.i97 = sub i64 1, %sub.ptr.rhs.cast.i.i96
  %add.i.i98 = add i64 %sub.ptr.sub.i.i97, %sub.ptr.lhs.cast.i.i95
  %call.i.i99 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i53, i64 %add.i.i98) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i53) #17
  br label %if.end17.sink.split

if.end17.sink.split:                              ; preds = %if.else.i100, %if.then.i90, %if.else.i, %if.then.i
  %call.i53.sink = phi i8* [ %call.i, %if.else.i ], [ %call.i, %if.then.i ], [ %call.i53, %if.else.i100 ], [ %call.i53, %if.then.i90 ]
  tail call void @free(i8* %call.i53.sink) #17
  br label %if.end17

if.end17:                                         ; preds = %if.end17.sink.split, %if.else
  ret i32 -4
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_allocation_too_large(i8* %user_context, i8* %buffer_name, i64 %allocation_size, i64 %max_size) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.20.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.129, i64 0, i64 0)) #17
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.20.0, i8* %buffer_name) #17
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #17
  %call.i17 = tail call i8* @halide_uint64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %allocation_size, i32 1) #17
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20.131, i64 0, i64 0)) #17
  %call.i23 = tail call i8* @halide_uint64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_size, i32 1) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -5
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_extents_negative(i8* %user_context, i8* %buffer_name, i32 %dimension, i32 %extent) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.22.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i9 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21.132, i64 0, i64 0)) #17
  %call.i12 = tail call i8* @halide_string_to_string(i8* %call.i9, i8* %ref.tmp.sroa.22.0, i8* %buffer_name) #17
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22.133, i64 0, i64 0)) #17
  %conv.i = sext i32 %dimension to i64
  %call.i18 = tail call i8* @halide_int64_to_string(i8* %call.i15, i8* %ref.tmp.sroa.22.0, i64 %conv.i, i32 1) #17
  %call.i21 = tail call i8* @halide_string_to_string(i8* %call.i18, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.134, i64 0, i64 0)) #17
  %conv.i24 = sext i32 %extent to i64
  %call.i25 = tail call i8* @halide_int64_to_string(i8* %call.i21, i8* %ref.tmp.sroa.22.0, i64 %conv.i24, i32 1) #17
  %call.i28 = tail call i8* @halide_string_to_string(i8* %call.i25, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i28 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -28
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_extents_too_large(i8* %user_context, i8* %buffer_name, i64 %actual_size, i64 %max_size) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.20.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.135, i64 0, i64 0)) #17
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.20.0, i8* %buffer_name) #17
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #17
  %call.i17 = tail call i8* @halide_int64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %actual_size, i32 1) #17
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20.131, i64 0, i64 0)) #17
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_size, i32 1) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -6
}

; Function Attrs: nounwind
define weak i32 @halide_error_constraints_make_required_region_smaller(i8* %user_context, i8* %buffer_name, i32 %dimension, i32 %constrained_min, i32 %constrained_extent, i32 %required_min, i32 %required_extent) local_unnamed_addr #4 {
entry:
  %add = add i32 %required_min, -1
  %sub = add i32 %add, %required_extent
  %add1 = add i32 %constrained_min, -1
  %sub2 = add i32 %add1, %constrained_extent
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.38.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i23 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25.136, i64 0, i64 0)) #17
  %call.i26 = tail call i8* @halide_string_to_string(i8* %call.i23, i8* %ref.tmp.sroa.38.0, i8* %buffer_name) #17
  %call.i29 = tail call i8* @halide_string_to_string(i8* %call.i26, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.26.137, i64 0, i64 0)) #17
  %conv.i = sext i32 %dimension to i64
  %call.i32 = tail call i8* @halide_int64_to_string(i8* %call.i29, i8* %ref.tmp.sroa.38.0, i64 %conv.i, i32 1) #17
  %call.i35 = tail call i8* @halide_string_to_string(i8* %call.i32, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.138, i64 0, i64 0)) #17
  %call.i38 = tail call i8* @halide_string_to_string(i8* %call.i35, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28.139, i64 0, i64 0)) #17
  %conv.i41 = sext i32 %required_min to i64
  %call.i42 = tail call i8* @halide_int64_to_string(i8* %call.i38, i8* %ref.tmp.sroa.38.0, i64 %conv.i41, i32 1) #17
  %call.i45 = tail call i8* @halide_string_to_string(i8* %call.i42, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.117, i64 0, i64 0)) #17
  %conv.i48 = sext i32 %sub to i64
  %call.i49 = tail call i8* @halide_int64_to_string(i8* %call.i45, i8* %ref.tmp.sroa.38.0, i64 %conv.i48, i32 1) #17
  %call.i52 = tail call i8* @halide_string_to_string(i8* %call.i49, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.138, i64 0, i64 0)) #17
  %call.i55 = tail call i8* @halide_string_to_string(i8* %call.i52, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29.140, i64 0, i64 0)) #17
  %conv.i58 = sext i32 %constrained_min to i64
  %call.i59 = tail call i8* @halide_int64_to_string(i8* %call.i55, i8* %ref.tmp.sroa.38.0, i64 %conv.i58, i32 1) #17
  %call.i62 = tail call i8* @halide_string_to_string(i8* %call.i59, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.117, i64 0, i64 0)) #17
  %conv.i65 = sext i32 %sub2 to i64
  %call.i66 = tail call i8* @halide_int64_to_string(i8* %call.i62, i8* %ref.tmp.sroa.38.0, i64 %conv.i65, i32 1) #17
  %call.i69 = tail call i8* @halide_string_to_string(i8* %call.i66, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i69 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -7
}

; Function Attrs: nounwind
define weak i32 @halide_error_constraint_violated(i8* %user_context, i8* %var, i32 %val, i8* %constrained_var, i32 %constrained_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.26.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31.142, i64 0, i64 0)) #17
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.26.0, i8* %var) #17
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.143, i64 0, i64 0)) #17
  %conv.i = sext i32 %val to i64
  %call.i20 = tail call i8* @halide_int64_to_string(i8* %call.i17, i8* %ref.tmp.sroa.26.0, i64 %conv.i, i32 1) #17
  %call.i23 = tail call i8* @halide_string_to_string(i8* %call.i20, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33.144, i64 0, i64 0)) #17
  %call.i26 = tail call i8* @halide_string_to_string(i8* %call.i23, i8* %ref.tmp.sroa.26.0, i8* %constrained_var) #17
  %call.i29 = tail call i8* @halide_string_to_string(i8* %call.i26, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.143, i64 0, i64 0)) #17
  %conv.i32 = sext i32 %constrained_val to i64
  %call.i33 = tail call i8* @halide_int64_to_string(i8* %call.i29, i8* %ref.tmp.sroa.26.0, i64 %conv.i32, i32 1) #17
  %call.i36 = tail call i8* @halide_string_to_string(i8* %call.i33, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i36 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -8
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_i64(i8* %user_context, i8* %param_name, i64 %val, i64 %min_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.20.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #17
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.20.0, i8* %param_name) #17
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #17
  %call.i17 = tail call i8* @halide_int64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #17
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35.146, i64 0, i64 0)) #17
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %min_val, i32 1) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -9
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_u64(i8* %user_context, i8* %param_name, i64 %val, i64 %min_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.20.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #17
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.20.0, i8* %param_name) #17
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #17
  %call.i17 = tail call i8* @halide_uint64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #17
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35.146, i64 0, i64 0)) #17
  %call.i23 = tail call i8* @halide_uint64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %min_val, i32 1) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -9
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_f64(i8* %user_context, i8* %param_name, double %val, double %min_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.20.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #17
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.20.0, i8* %param_name) #17
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #17
  %call.i17 = tail call i8* @halide_double_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, double %val, i32 1) #17
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35.146, i64 0, i64 0)) #17
  %call.i23 = tail call i8* @halide_double_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, double %min_val, i32 1) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -9
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_i64(i8* %user_context, i8* %param_name, i64 %val, i64 %max_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.20.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #17
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.20.0, i8* %param_name) #17
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #17
  %call.i17 = tail call i8* @halide_int64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #17
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0)) #17
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_val, i32 1) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -10
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_u64(i8* %user_context, i8* %param_name, i64 %val, i64 %max_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.20.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #17
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.20.0, i8* %param_name) #17
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #17
  %call.i17 = tail call i8* @halide_uint64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #17
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0)) #17
  %call.i23 = tail call i8* @halide_uint64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_val, i32 1) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -10
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_f64(i8* %user_context, i8* %param_name, double %val, double %max_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.20.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #17
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.20.0, i8* %param_name) #17
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #17
  %call.i17 = tail call i8* @halide_double_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, double %val, i32 1) #17
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0)) #17
  %call.i23 = tail call i8* @halide_double_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, double %max_val, i32 1) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -10
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_error_out_of_memory(i8* %user_context) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.37, i64 0, i64 0)) #17
  ret i32 -11
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_argument_is_null(i8* %user_context, i8* %buffer_name) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.14.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i5 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0)) #17
  %call.i8 = tail call i8* @halide_string_to_string(i8* %call.i5, i8* %ref.tmp.sroa.14.0, i8* %buffer_name) #17
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0)) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i11 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -12
}

; Function Attrs: nounwind
define weak i32 @halide_error_debug_to_file_failed(i8* %user_context, i8* %func, i8* %filename, i32 %error_code) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.20.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.40, i64 0, i64 0)) #17
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.20.0, i8* %func) #17
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41.147, i64 0, i64 0)) #17
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i8* %filename) #17
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0)) #17
  %conv.i = sext i32 %error_code to i64
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %conv.i, i32 1) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -13
}

; Function Attrs: nounwind
define weak i32 @halide_error_unaligned_host_ptr(i8* %user_context, i8* %func, i32 %alignment) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.18.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i7 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #17
  %call.i10 = tail call i8* @halide_string_to_string(i8* %call.i7, i8* %ref.tmp.sroa.18.0, i8* %func) #17
  %call.i13 = tail call i8* @halide_string_to_string(i8* %call.i10, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44, i64 0, i64 0)) #17
  %conv.i = sext i32 %alignment to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %call.i13, i8* %ref.tmp.sroa.18.0, i64 %conv.i, i32 1) #17
  %call.i19 = tail call i8* @halide_string_to_string(i8* %call.i16, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.45, i64 0, i64 0)) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i19 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -24
}

; Function Attrs: nounwind
define weak i32 @halide_error_device_dirty_with_no_device_support(i8* %user_context, i8* %func) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.16.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i6 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0)) #17
  %call.i9 = tail call i8* @halide_string_to_string(i8* %call.i6, i8* %ref.tmp.sroa.16.0, i8* %func) #17
  %call.i12 = tail call i8* @halide_string_to_string(i8* %call.i9, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.47, i64 0, i64 0)) #17
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.48, i64 0, i64 0)) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i15 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -44
}

; Function Attrs: nounwind
define weak i32 @halide_error_host_is_null(i8* %user_context, i8* %func) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.14.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i5 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #17
  %call.i8 = tail call i8* @halide_string_to_string(i8* %call.i5, i8* %ref.tmp.sroa.14.0, i8* %func) #17
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.49, i64 0, i64 0)) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i11 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -34
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_fold(i8* %user_context, i8* %func_name, i8* %var_name, i8* %loop_name) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.22.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i9 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50.148, i64 0, i64 0)) #17
  %call.i12 = tail call i8* @halide_string_to_string(i8* %call.i9, i8* %ref.tmp.sroa.22.0, i8* %var_name) #17
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #17
  %call.i18 = tail call i8* @halide_string_to_string(i8* %call.i15, i8* %ref.tmp.sroa.22.0, i8* %func_name) #17
  %call.i21 = tail call i8* @halide_string_to_string(i8* %call.i18, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.52, i64 0, i64 0)) #17
  %call.i24 = tail call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.22.0, i8* %loop_name) #17
  %call.i27 = tail call i8* @halide_string_to_string(i8* %call.i24, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i27 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -25
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_extern_fold(i8* %user_context, i8* %func_name, i32 %dim, i32 %min, i32 %extent, i32 %valid_min, i32 %fold_factor) local_unnamed_addr #4 {
entry:
  %cmp = icmp slt i32 %min, %valid_min
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %add = add nsw i32 %extent, %min
  %add1 = add nsw i32 %fold_factor, %valid_min
  %cmp2 = icmp sgt i32 %add, %add1
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %if.then
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %if.then
  %ref.tmp.sroa.36.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %if.then ]
  %call.i52 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)) #17
  %conv.i = sext i32 %dim to i64
  %call.i55 = tail call i8* @halide_int64_to_string(i8* %call.i52, i8* %ref.tmp.sroa.36.0, i64 %conv.i, i32 1) #17
  %call.i58 = tail call i8* @halide_string_to_string(i8* %call.i55, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #17
  %call.i61 = tail call i8* @halide_string_to_string(i8* %call.i58, i8* %ref.tmp.sroa.36.0, i8* %func_name) #17
  %call.i64 = tail call i8* @halide_string_to_string(i8* %call.i61, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.54, i64 0, i64 0)) #17
  %conv.i67 = sext i32 %min to i64
  %call.i68 = tail call i8* @halide_int64_to_string(i8* %call.i64, i8* %ref.tmp.sroa.36.0, i64 %conv.i67, i32 1) #17
  %call.i71 = tail call i8* @halide_string_to_string(i8* %call.i68, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #17
  %add9 = add nsw i32 %extent, %min
  %sub = add nsw i32 %add9, -1
  %conv.i74 = sext i32 %sub to i64
  %call.i75 = tail call i8* @halide_int64_to_string(i8* %call.i71, i8* %ref.tmp.sroa.36.0, i64 %conv.i74, i32 1) #17
  %call.i78 = tail call i8* @halide_string_to_string(i8* %call.i75, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0)) #17
  %call.i81 = tail call i8* @halide_string_to_string(i8* %call.i78, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.57, i64 0, i64 0)) #17
  %conv.i84 = sext i32 %valid_min to i64
  %call.i85 = tail call i8* @halide_int64_to_string(i8* %call.i81, i8* %ref.tmp.sroa.36.0, i64 %conv.i84, i32 1) #17
  %call.i88 = tail call i8* @halide_string_to_string(i8* %call.i85, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #17
  %add15 = add nsw i32 %fold_factor, %valid_min
  %sub16 = add nsw i32 %add15, -1
  %conv.i91 = sext i32 %sub16 to i64
  %call.i92 = tail call i8* @halide_int64_to_string(i8* %call.i88, i8* %ref.tmp.sroa.36.0, i64 %conv.i91, i32 1) #17
  %call.i95 = tail call i8* @halide_string_to_string(i8* %call.i92, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58.149, i64 0, i64 0)) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %if.end

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i95 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false
  %call.i101 = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i104 = icmp eq i8* %call.i101, null
  br i1 %tobool.not.i104, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110, label %if.then6.i107

if.then6.i107:                                    ; preds = %if.else
  %add.ptr.i105 = getelementptr inbounds i8, i8* %call.i101, i64 1023
  store i8 0, i8* %add.ptr.i105, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110: ; preds = %if.then6.i107, %if.else
  %ref.tmp19.sroa.34.0 = phi i8* [ %add.ptr.i105, %if.then6.i107 ], [ null, %if.else ]
  %call.i113 = tail call i8* @halide_string_to_string(i8* %call.i101, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)) #17
  %conv.i116 = sext i32 %dim to i64
  %call.i117 = tail call i8* @halide_int64_to_string(i8* %call.i113, i8* %ref.tmp19.sroa.34.0, i64 %conv.i116, i32 1) #17
  %call.i120 = tail call i8* @halide_string_to_string(i8* %call.i117, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #17
  %call.i123 = tail call i8* @halide_string_to_string(i8* %call.i120, i8* %ref.tmp19.sroa.34.0, i8* %func_name) #17
  %call.i126 = tail call i8* @halide_string_to_string(i8* %call.i123, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.54, i64 0, i64 0)) #17
  %conv.i129 = sext i32 %min to i64
  %call.i130 = tail call i8* @halide_int64_to_string(i8* %call.i126, i8* %ref.tmp19.sroa.34.0, i64 %conv.i129, i32 1) #17
  %call.i133 = tail call i8* @halide_string_to_string(i8* %call.i130, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #17
  %sub28 = add nsw i32 %add, -1
  %conv.i136 = sext i32 %sub28 to i64
  %call.i137 = tail call i8* @halide_int64_to_string(i8* %call.i133, i8* %ref.tmp19.sroa.34.0, i64 %conv.i136, i32 1) #17
  %call.i140 = tail call i8* @halide_string_to_string(i8* %call.i137, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0)) #17
  %call.i143 = tail call i8* @halide_string_to_string(i8* %call.i140, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.59.150, i64 0, i64 0)) #17
  %call.i146 = tail call i8* @halide_string_to_string(i8* %call.i143, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.60.151, i64 0, i64 0)) #17
  %conv.i149 = sext i32 %fold_factor to i64
  %call.i150 = tail call i8* @halide_int64_to_string(i8* %call.i146, i8* %ref.tmp19.sroa.34.0, i64 %conv.i149, i32 1) #17
  %call.i153 = tail call i8* @halide_string_to_string(i8* %call.i150, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #17
  br i1 %tobool.not.i104, label %if.then.i157, label %if.else.i167

if.then.i157:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %if.end

if.else.i167:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110
  %sub.ptr.lhs.cast.i.i162 = ptrtoint i8* %call.i153 to i64
  %sub.ptr.rhs.cast.i.i163 = ptrtoint i8* %call.i101 to i64
  %sub.ptr.sub.i.i164 = sub i64 1, %sub.ptr.rhs.cast.i.i163
  %add.i.i165 = add i64 %sub.ptr.sub.i.i164, %sub.ptr.lhs.cast.i.i162
  %call.i.i166 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i101, i64 %add.i.i165) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i101) #17
  br label %if.end

if.end:                                           ; preds = %if.else.i167, %if.then.i157, %if.else.i, %if.then.i
  %call.i101.sink = phi i8* [ %call.i, %if.else.i ], [ %call.i, %if.then.i ], [ %call.i101, %if.else.i167 ], [ %call.i101, %if.then.i157 ]
  tail call void @free(i8* %call.i101.sink) #17
  ret i32 -35
}

; Function Attrs: nounwind
define weak i32 @halide_error_fold_factor_too_small(i8* %user_context, i8* %func_name, i8* %var_name, i32 %fold_factor, i8* %loop_name, i32 %required_extent) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.30.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i13 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.61.152, i64 0, i64 0)) #17
  %conv.i = sext i32 %fold_factor to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %call.i13, i8* %ref.tmp.sroa.30.0, i64 %conv.i, i32 1) #17
  %call.i19 = tail call i8* @halide_string_to_string(i8* %call.i16, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0)) #17
  %call.i22 = tail call i8* @halide_string_to_string(i8* %call.i19, i8* %ref.tmp.sroa.30.0, i8* %var_name) #17
  %call.i25 = tail call i8* @halide_string_to_string(i8* %call.i22, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #17
  %call.i28 = tail call i8* @halide_string_to_string(i8* %call.i25, i8* %ref.tmp.sroa.30.0, i8* %func_name) #17
  %call.i31 = tail call i8* @halide_string_to_string(i8* %call.i28, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.63, i64 0, i64 0)) #17
  %call.i34 = tail call i8* @halide_string_to_string(i8* %call.i31, i8* %ref.tmp.sroa.30.0, i8* %loop_name) #17
  %call.i37 = tail call i8* @halide_string_to_string(i8* %call.i34, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.143, i64 0, i64 0)) #17
  %conv.i40 = sext i32 %required_extent to i64
  %call.i41 = tail call i8* @halide_int64_to_string(i8* %call.i37, i8* %ref.tmp.sroa.30.0, i64 %conv.i40, i32 1) #17
  %call.i44 = tail call i8* @halide_string_to_string(i8* %call.i41, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64.153, i64 0, i64 0)) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i44 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -26
}

; Function Attrs: nounwind
define weak i32 @halide_error_requirement_failed(i8* %user_context, i8* %condition, i8* %message) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.16.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i6 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.65, i64 0, i64 0)) #17
  %call.i9 = tail call i8* @halide_string_to_string(i8* %call.i6, i8* %ref.tmp.sroa.16.0, i8* %condition) #17
  %call.i12 = tail call i8* @halide_string_to_string(i8* %call.i9, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i64 0, i64 0)) #17
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.16.0, i8* %message) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i15 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -27
}

; Function Attrs: nounwind
define weak i32 @halide_error_specialize_fail(i8* %user_context, i8* %message) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.12.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i4 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.12.0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0)) #17
  %call.i7 = tail call i8* @halide_string_to_string(i8* %call.i4, i8* %ref.tmp.sroa.12.0, i8* %message) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i7 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -31
}

; Function Attrs: nounwind
define weak i32 @halide_error_no_device_interface(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.68, i64 0, i64 0)) #17
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.68, i64 0, i64 0)) #17
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -19
}

; Function Attrs: nounwind
define weak i32 @halide_error_device_interface_no_device(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.69, i64 0, i64 0)) #17
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.69, i64 0, i64 0)) #17
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -36
}

; Function Attrs: nounwind
define weak i32 @halide_error_host_and_device_dirty(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.70, i64 0, i64 0)) #17
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.70, i64 0, i64 0)) #17
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -37
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_is_null(i8* %user_context, i8* %routine) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.14.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i5 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71, i64 0, i64 0)) #17
  %call.i8 = tail call i8* @halide_string_to_string(i8* %call.i5, i8* %ref.tmp.sroa.14.0, i8* %routine) #17
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.72, i64 0, i64 0)) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i11 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -38
}

; Function Attrs: nounwind
define weak i32 @halide_error_storage_bound_too_small(i8* %user_context, i8* %func_name, i8* %var_name, i32 %provided_size, i32 %required_size) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %ref.tmp.sroa.26.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.73, i64 0, i64 0)) #17
  %conv.i = sext i32 %provided_size to i64
  %call.i14 = tail call i8* @halide_int64_to_string(i8* %call.i11, i8* %ref.tmp.sroa.26.0, i64 %conv.i, i32 1) #17
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0)) #17
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.26.0, i8* %var_name) #17
  %call.i23 = tail call i8* @halide_string_to_string(i8* %call.i20, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #17
  %call.i26 = tail call i8* @halide_string_to_string(i8* %call.i23, i8* %ref.tmp.sroa.26.0, i8* %func_name) #17
  %call.i29 = tail call i8* @halide_string_to_string(i8* %call.i26, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.74, i64 0, i64 0)) #17
  %conv.i32 = sext i32 %required_size to i64
  %call.i33 = tail call i8* @halide_int64_to_string(i8* %call.i29, i8* %ref.tmp.sroa.26.0, i64 %conv.i32, i32 1) #17
  %call.i36 = tail call i8* @halide_string_to_string(i8* %call.i33, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64.153, i64 0, i64 0)) #17
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i36 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -45
}

; Function Attrs: nounwind
define weak i32 @halide_error_device_crop_failed(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.75, i64 0, i64 0)) #17
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.76, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.75, i64 0, i64 0)) #17
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret i32 -41
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_shutdown() #0 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #19
  %sampling_thread = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 7
  %0 = load %struct.halide_thread*, %struct.halide_thread** %sampling_thread, align 8, !tbaa !322
  %tobool.not = icmp eq %struct.halide_thread* %0, null
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %current_func = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 3
  store i32 -2, i32* %current_func, align 8, !tbaa !324
  tail call void @halide_join_thread(%struct.halide_thread* nonnull %0) #17
  store %struct.halide_thread* null, %struct.halide_thread** %sampling_thread, align 8, !tbaa !322
  store i32 -1, i32* %current_func, align 8, !tbaa !324
  tail call void @halide_profiler_report_unlocked(i8* null, %struct.halide_profiler_state* nonnull %call) #19
  tail call void @halide_profiler_reset_unlocked(%struct.halide_profiler_state* nonnull %call) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak %struct.halide_profiler_state* @halide_profiler_get_state() local_unnamed_addr #2 {
entry:
  ret %struct.halide_profiler_state* @_ZZ25halide_profiler_get_stateE1s
}

; Function Attrs: nounwind
define weak void @halide_profiler_report_unlocked(i8* %user_context, %struct.halide_profiler_state* %s) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #17
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %sstr.sroa.125.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 5
  %p.0624 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !10
  %tobool.not625 = icmp eq %struct.halide_profiler_pipeline_stats* %p.0624, null
  br i1 %tobool.not625, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit
  %sub.ptr.rhs.cast.i.i348 = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i349 = sub i64 1, %sub.ptr.rhs.cast.i.i348
  br label %for.body

for.cond.cleanup:                                 ; preds = %cleanup181, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit
  %sstr.sroa.19.0.lcssa = phi i8* [ %call.i, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit ], [ %sstr.sroa.19.15, %cleanup181 ]
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %for.cond.cleanup
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %for.cond.cleanup
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %sstr.sroa.19.0.lcssa to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #17
  ret void

for.body:                                         ; preds = %cleanup181, %for.body.lr.ph
  %p.0627 = phi %struct.halide_profiler_pipeline_stats* [ %p.0624, %for.body.lr.ph ], [ %p.0, %cleanup181 ]
  %sstr.sroa.19.0626 = phi i8* [ %call.i, %for.body.lr.ph ], [ %sstr.sroa.19.15, %cleanup181 ]
  %time = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 0
  %0 = load i64, i64* %time, align 8, !tbaa !325
  %conv = uitofp i64 %0 to float
  %div = fdiv float %conv, 1.000000e+06
  %runs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 11
  %1 = load i32, i32* %runs, align 8, !tbaa !327
  %tobool1.not = icmp eq i32 %1, 0
  br i1 %tobool1.not, label %cleanup181, label %if.end

if.end:                                           ; preds = %for.body
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit, label %if.then.i278

if.then.i278:                                     ; preds = %if.end
  store i8 0, i8* %call.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit: ; preds = %if.then.i278, %if.end
  %active_threads_numerator = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 4
  %2 = load i64, i64* %active_threads_numerator, align 8, !tbaa !328
  %active_threads_denominator = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 5
  %3 = load i64, i64* %active_threads_denominator, align 8, !tbaa !329
  %cmp = icmp eq i64 %2, %3
  %name = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 6
  %4 = load i8*, i8** %name, align 8, !tbaa !330
  %call.i282 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %sstr.sroa.125.0, i8* %4) #17
  %call.i285 = tail call i8* @halide_string_to_string(i8* %call.i282, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #17
  %call.i288 = tail call i8* @halide_string_to_string(i8* %call.i285, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.165, i64 0, i64 0)) #17
  %conv.i = fpext float %div to double
  %call.i291 = tail call i8* @halide_double_to_string(i8* %call.i288, i8* %sstr.sroa.125.0, double %conv.i, i32 0) #17
  %call.i294 = tail call i8* @halide_string_to_string(i8* %call.i291, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.166, i64 0, i64 0)) #17
  %call.i297 = tail call i8* @halide_string_to_string(i8* %call.i294, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10.167, i64 0, i64 0)) #17
  %samples = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 12
  %5 = load i32, i32* %samples, align 4, !tbaa !331
  %conv.i300 = sext i32 %5 to i64
  %call.i301 = tail call i8* @halide_int64_to_string(i8* %call.i297, i8* %sstr.sroa.125.0, i64 %conv.i300, i32 1) #17
  %call.i304 = tail call i8* @halide_string_to_string(i8* %call.i301, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.168, i64 0, i64 0)) #17
  %6 = load i32, i32* %runs, align 8, !tbaa !327
  %conv.i307 = sext i32 %6 to i64
  %call.i308 = tail call i8* @halide_int64_to_string(i8* %call.i304, i8* %sstr.sroa.125.0, i64 %conv.i307, i32 1) #17
  %call.i311 = tail call i8* @halide_string_to_string(i8* %call.i308, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.169, i64 0, i64 0)) #17
  %7 = load i32, i32* %runs, align 8, !tbaa !327
  %conv19 = sitofp i32 %7 to float
  %div20 = fdiv float %div, %conv19
  %conv.i314 = fpext float %div20 to double
  %call.i315 = tail call i8* @halide_double_to_string(i8* %call.i311, i8* %sstr.sroa.125.0, double %conv.i314, i32 0) #17
  %call.i318 = tail call i8* @halide_string_to_string(i8* %call.i315, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.170, i64 0, i64 0)) #17
  br i1 %cmp, label %if.end28, label %if.then24

if.then24:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit
  %conv3 = uitofp i64 %2 to double
  %conv5 = uitofp i64 %3 to double
  %add = fadd double %conv5, 1.000000e-10
  %div6 = fdiv double %conv3, %add
  %conv7 = fptrunc double %div6 to float
  %call.i321 = tail call i8* @halide_string_to_string(i8* %call.i318, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.171, i64 0, i64 0)) #17
  %conv.i324 = fpext float %conv7 to double
  %call.i325 = tail call i8* @halide_double_to_string(i8* %call.i321, i8* %sstr.sroa.125.0, double %conv.i324, i32 0) #17
  %call.i328 = tail call i8* @halide_string_to_string(i8* %call.i325, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #17
  br label %if.end28

if.end28:                                         ; preds = %if.then24, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit
  %sstr.sroa.19.1 = phi i8* [ %call.i318, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit ], [ %call.i328, %if.then24 ]
  %call.i331 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.1, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15.172, i64 0, i64 0)) #17
  %num_allocs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 13
  %8 = load i32, i32* %num_allocs, align 8, !tbaa !332
  %conv.i334 = sext i32 %8 to i64
  %call.i335 = tail call i8* @halide_int64_to_string(i8* %call.i331, i8* %sstr.sroa.125.0, i64 %conv.i334, i32 1) #17
  %call.i338 = tail call i8* @halide_string_to_string(i8* %call.i335, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.173, i64 0, i64 0)) #17
  %memory_peak = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 2
  %9 = load i64, i64* %memory_peak, align 8, !tbaa !333
  %call.i341 = tail call i8* @halide_uint64_to_string(i8* %call.i338, i8* %sstr.sroa.125.0, i64 %9, i32 1) #17
  %call.i344 = tail call i8* @halide_string_to_string(i8* %call.i341, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17.174, i64 0, i64 0)) #17
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit, label %if.then.i352

if.then.i352:                                     ; preds = %if.end28
  %sub.ptr.lhs.cast.i.i347 = ptrtoint i8* %call.i344 to i64
  %add.i.i350 = add i64 %sub.ptr.sub.i.i349, %sub.ptr.lhs.cast.i.i347
  %call.i.i351 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i350) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit: ; preds = %if.then.i352, %if.end28
  %retval.0.i = phi i8* [ %call.i, %if.then.i352 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0), %if.end28 ]
  tail call void @halide_print(i8* %user_context, i8* nonnull %retval.0.i) #17
  %10 = load i64, i64* %time, align 8, !tbaa !325
  %tobool36.not = icmp eq i64 %10, 0
  br i1 %tobool36.not, label %lor.end, label %for.cond53.preheader

lor.end:                                          ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit
  %memory_total = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 3
  %11 = load i64, i64* %memory_total, align 8, !tbaa !334
  %tobool37.not = icmp eq i64 %11, 0
  br i1 %tobool37.not, label %for.cond41.preheader, label %for.cond53.preheader

for.cond41.preheader:                             ; preds = %lor.end
  %num_funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 9
  %12 = load i32, i32* %num_funcs, align 8, !tbaa !335
  %cmp42589 = icmp sgt i32 %12, 0
  br i1 %cmp42589, label %for.body44.lr.ph, label %cleanup181

for.body44.lr.ph:                                 ; preds = %for.cond41.preheader
  %funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 7
  %13 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %funcs, align 8, !tbaa !336
  %14 = sext i32 %12 to i64
  br label %for.body44

for.cond41:                                       ; preds = %for.body44
  %cmp42 = icmp slt i64 %indvars.iv.next, %14
  br i1 %cmp42, label %for.body44, label %cleanup181, !llvm.loop !337

for.body44:                                       ; preds = %for.cond41, %for.body44.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body44.lr.ph ], [ %indvars.iv.next, %for.cond41 ]
  %stack_peak = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %13, i64 %indvars.iv, i32 4
  %15 = load i64, i64* %stack_peak, align 8, !tbaa !338
  %tobool45.not = icmp eq i64 %15, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool45.not, label %for.cond41, label %for.cond53.preheader

for.cond53.preheader:                             ; preds = %for.body44, %lor.end, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit
  %num_funcs54 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 9
  %16 = load i32, i32* %num_funcs54, align 8, !tbaa !335
  %cmp55621 = icmp sgt i32 %16, 0
  br i1 %cmp55621, label %for.body57.lr.ph, label %cleanup181

for.body57.lr.ph:                                 ; preds = %for.cond53.preheader
  %funcs59 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 7
  br label %for.body57

for.body57:                                       ; preds = %cleanup172, %for.body57.lr.ph
  %indvars.iv630 = phi i64 [ 0, %for.body57.lr.ph ], [ %indvars.iv.next631, %cleanup172 ]
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358, label %if.then.i356

if.then.i356:                                     ; preds = %for.body57
  store i8 0, i8* %call.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358: ; preds = %if.then.i356, %for.body57
  %17 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %funcs59, align 8, !tbaa !336
  %add.ptr61 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv630
  %cmp62 = icmp eq i64 %indvars.iv630, 0
  br i1 %cmp62, label %land.lhs.true, label %if.end66

land.lhs.true:                                    ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358
  %time63 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr61, i64 0, i32 0
  %18 = load i64, i64* %time63, align 8, !tbaa !340
  %cmp64 = icmp eq i64 %18, 0
  br i1 %cmp64, label %cleanup172, label %if.end66

if.end66:                                         ; preds = %land.lhs.true, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358
  %call.i361 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.175, i64 0, i64 0)) #17
  %name68 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv630, i32 7
  %19 = load i8*, i8** %name68, align 8, !tbaa !341
  %call.i364 = tail call i8* @halide_string_to_string(i8* %call.i361, i8* %sstr.sroa.125.0, i8* %19) #17
  %call.i367 = tail call i8* @halide_string_to_string(i8* %call.i364, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.176, i64 0, i64 0)) #17
  %sub.ptr.lhs.cast.i591 = ptrtoint i8* %call.i367 to i64
  %sub.ptr.sub.i592 = sub i64 %sub.ptr.lhs.cast.i591, %sub.ptr.rhs.cast.i.i348
  %cmp73593 = icmp ult i64 %sub.ptr.sub.i592, 25
  br i1 %cmp73593, label %while.body, label %while.end

while.body:                                       ; preds = %while.body, %if.end66
  %sstr.sroa.19.3594 = phi i8* [ %call.i384, %while.body ], [ %call.i367, %if.end66 ]
  %call.i384 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.3594, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #17
  %sub.ptr.lhs.cast.i = ptrtoint i8* %call.i384 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i.i348
  %cmp73 = icmp ult i64 %sub.ptr.sub.i, 25
  br i1 %cmp73, label %while.body, label %while.end, !llvm.loop !342

while.end:                                        ; preds = %while.body, %if.end66
  %sstr.sroa.19.3.lcssa = phi i8* [ %call.i367, %if.end66 ], [ %call.i384, %while.body ]
  %time75 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr61, i64 0, i32 0
  %20 = load i64, i64* %time75, align 8, !tbaa !340
  %conv76 = uitofp i64 %20 to float
  %21 = load i32, i32* %runs, align 8, !tbaa !327
  %conv78 = sitofp i32 %21 to float
  %mul = fmul float %conv78, 1.000000e+06
  %div79 = fdiv float %conv76, %mul
  %conv.i387 = fpext float %div79 to double
  %call.i388 = tail call i8* @halide_double_to_string(i8* %sstr.sroa.19.3.lcssa, i8* %sstr.sroa.125.0, double %conv.i387, i32 0) #17
  %tobool.not.i390 = icmp eq i8* %call.i388, null
  br i1 %tobool.not.i390, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit, label %if.then.i393

if.then.i393:                                     ; preds = %while.end
  %add.ptr.i391 = getelementptr inbounds i8, i8* %call.i388, i64 -3
  %cmp.i = icmp ult i8* %add.ptr.i391, %call.i
  %spec.store.select.i = select i1 %cmp.i, i8* %call.i, i8* %add.ptr.i391
  store i8 0, i8* %spec.store.select.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit: ; preds = %if.then.i393, %while.end
  %sstr.sroa.19.4 = phi i8* [ null, %while.end ], [ %spec.store.select.i, %if.then.i393 ]
  %call.i399 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.4, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21.178, i64 0, i64 0)) #17
  %sub.ptr.lhs.cast.i400596 = ptrtoint i8* %call.i399 to i64
  %sub.ptr.sub.i402597 = sub i64 %sub.ptr.lhs.cast.i400596, %sub.ptr.rhs.cast.i.i348
  %cmp85598 = icmp ult i64 %sub.ptr.sub.i402597, 35
  br i1 %cmp85598, label %while.body86, label %while.end88

while.body86:                                     ; preds = %while.body86, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit
  %sstr.sroa.19.5599 = phi i8* [ %call.i408, %while.body86 ], [ %call.i399, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit ]
  %call.i408 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.5599, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #17
  %sub.ptr.lhs.cast.i400 = ptrtoint i8* %call.i408 to i64
  %sub.ptr.sub.i402 = sub i64 %sub.ptr.lhs.cast.i400, %sub.ptr.rhs.cast.i.i348
  %cmp85 = icmp ult i64 %sub.ptr.sub.i402, 35
  br i1 %cmp85, label %while.body86, label %while.end88, !llvm.loop !343

while.end88:                                      ; preds = %while.body86, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit
  %sstr.sroa.19.5.lcssa = phi i8* [ %call.i399, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit ], [ %call.i408, %while.body86 ]
  %22 = load i64, i64* %time, align 8, !tbaa !325
  %cmp90.not = icmp eq i64 %22, 0
  br i1 %cmp90.not, label %if.end97, label %if.then91

if.then91:                                        ; preds = %while.end88
  %23 = load i64, i64* %time75, align 8, !tbaa !340
  %mul93 = mul i64 %23, 100
  %div95 = udiv i64 %mul93, %22
  br label %if.end97

if.end97:                                         ; preds = %if.then91, %while.end88
  %percent.0 = phi i64 [ %div95, %if.then91 ], [ 0, %while.end88 ]
  %call.i411 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.5.lcssa, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22.179, i64 0, i64 0)) #17
  %sext = shl i64 %percent.0, 32
  %conv.i414 = ashr exact i64 %sext, 32
  %call.i415 = tail call i8* @halide_int64_to_string(i8* %call.i411, i8* %sstr.sroa.125.0, i64 %conv.i414, i32 1) #17
  %call.i418 = tail call i8* @halide_string_to_string(i8* %call.i415, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.180, i64 0, i64 0)) #17
  %sub.ptr.lhs.cast.i419601 = ptrtoint i8* %call.i418 to i64
  %sub.ptr.sub.i421602 = sub i64 %sub.ptr.lhs.cast.i419601, %sub.ptr.rhs.cast.i.i348
  %cmp104603 = icmp ult i64 %sub.ptr.sub.i421602, 43
  br i1 %cmp104603, label %while.body105, label %while.end107

while.body105:                                    ; preds = %while.body105, %if.end97
  %sstr.sroa.19.6604 = phi i8* [ %call.i427, %while.body105 ], [ %call.i418, %if.end97 ]
  %call.i427 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.6604, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #17
  %sub.ptr.lhs.cast.i419 = ptrtoint i8* %call.i427 to i64
  %sub.ptr.sub.i421 = sub i64 %sub.ptr.lhs.cast.i419, %sub.ptr.rhs.cast.i.i348
  %cmp104 = icmp ult i64 %sub.ptr.sub.i421, 43
  br i1 %cmp104, label %while.body105, label %while.end107, !llvm.loop !344

while.end107:                                     ; preds = %while.body105, %if.end97
  %sstr.sroa.19.6.lcssa = phi i8* [ %call.i418, %if.end97 ], [ %call.i427, %while.body105 ]
  br i1 %cmp, label %if.end127, label %if.then109

if.then109:                                       ; preds = %while.end107
  %active_threads_numerator111 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv630, i32 5
  %24 = load i64, i64* %active_threads_numerator111, align 8, !tbaa !345
  %conv112 = uitofp i64 %24 to double
  %active_threads_denominator113 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv630, i32 6
  %25 = load i64, i64* %active_threads_denominator113, align 8, !tbaa !346
  %conv114 = uitofp i64 %25 to double
  %add115 = fadd double %conv114, 1.000000e-10
  %div116 = fdiv double %conv112, %add115
  %conv117 = fptrunc double %div116 to float
  %call.i430 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.6.lcssa, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24.181, i64 0, i64 0)) #17
  %conv.i433 = fpext float %conv117 to double
  %call.i434 = tail call i8* @halide_double_to_string(i8* %call.i430, i8* %sstr.sroa.125.0, double %conv.i433, i32 0) #17
  %tobool.not.i436 = icmp eq i8* %call.i434, null
  br i1 %tobool.not.i436, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442, label %if.then.i441

if.then.i441:                                     ; preds = %if.then109
  %add.ptr.i437 = getelementptr inbounds i8, i8* %call.i434, i64 -3
  %cmp.i439 = icmp ult i8* %add.ptr.i437, %call.i
  %spec.store.select.i440 = select i1 %cmp.i439, i8* %call.i, i8* %add.ptr.i437
  store i8 0, i8* %spec.store.select.i440, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442: ; preds = %if.then.i441, %if.then109
  %sstr.sroa.19.7 = phi i8* [ null, %if.then109 ], [ %spec.store.select.i440, %if.then.i441 ]
  %sub.ptr.lhs.cast.i447606 = ptrtoint i8* %sstr.sroa.19.7 to i64
  %sub.ptr.sub.i449607 = sub i64 %sub.ptr.lhs.cast.i447606, %sub.ptr.rhs.cast.i.i348
  %cmp123608 = icmp ult i64 %sub.ptr.sub.i449607, 58
  br i1 %cmp123608, label %while.body124, label %if.end127

while.body124:                                    ; preds = %while.body124, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442
  %sstr.sroa.19.8609 = phi i8* [ %call.i455, %while.body124 ], [ %sstr.sroa.19.7, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442 ]
  %call.i455 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.8609, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #17
  %sub.ptr.lhs.cast.i447 = ptrtoint i8* %call.i455 to i64
  %sub.ptr.sub.i449 = sub i64 %sub.ptr.lhs.cast.i447, %sub.ptr.rhs.cast.i.i348
  %cmp123 = icmp ult i64 %sub.ptr.sub.i449, 58
  br i1 %cmp123, label %while.body124, label %if.end127, !llvm.loop !347

if.end127:                                        ; preds = %while.body124, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442, %while.end107
  %sstr.sroa.19.9 = phi i8* [ %sstr.sroa.19.6.lcssa, %while.end107 ], [ %sstr.sroa.19.7, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442 ], [ %call.i455, %while.body124 ]
  %cursor.0 = phi i64 [ 58, %while.end107 ], [ 73, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442 ], [ 73, %while.body124 ]
  %memory_peak128 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv630, i32 2
  %26 = load i64, i64* %memory_peak128, align 8, !tbaa !348
  %tobool129.not = icmp eq i64 %26, 0
  br i1 %tobool129.not, label %if.end162, label %if.then130

if.then130:                                       ; preds = %if.end127
  %call.i458 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.9, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25.182, i64 0, i64 0)) #17
  %27 = load i64, i64* %memory_peak128, align 8, !tbaa !348
  %call.i461 = tail call i8* @halide_uint64_to_string(i8* %call.i458, i8* %sstr.sroa.125.0, i64 %27, i32 1) #17
  %sub.ptr.lhs.cast.i462611 = ptrtoint i8* %call.i461 to i64
  %sub.ptr.sub.i464612 = sub i64 %sub.ptr.lhs.cast.i462611, %sub.ptr.rhs.cast.i.i348
  %cmp137613 = icmp ult i64 %sub.ptr.sub.i464612, %cursor.0
  br i1 %cmp137613, label %while.body138, label %while.end140

while.body138:                                    ; preds = %while.body138, %if.then130
  %sstr.sroa.19.10614 = phi i8* [ %call.i470, %while.body138 ], [ %call.i461, %if.then130 ]
  %call.i470 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.10614, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #17
  %sub.ptr.lhs.cast.i462 = ptrtoint i8* %call.i470 to i64
  %sub.ptr.sub.i464 = sub i64 %sub.ptr.lhs.cast.i462, %sub.ptr.rhs.cast.i.i348
  %cmp137 = icmp ult i64 %sub.ptr.sub.i464, %cursor.0
  br i1 %cmp137, label %while.body138, label %while.end140, !llvm.loop !349

while.end140:                                     ; preds = %while.body138, %if.then130
  %sstr.sroa.19.10.lcssa = phi i8* [ %call.i461, %if.then130 ], [ %call.i470, %while.body138 ]
  %call.i473 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.10.lcssa, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.183, i64 0, i64 0)) #17
  %num_allocs142 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv630, i32 8
  %28 = load i32, i32* %num_allocs142, align 8, !tbaa !350
  %conv.i476 = sext i32 %28 to i64
  %call.i477 = tail call i8* @halide_int64_to_string(i8* %call.i473, i8* %sstr.sroa.125.0, i64 %conv.i476, i32 1) #17
  %add144 = add nuw nsw i64 %cursor.0, 15
  %sub.ptr.lhs.cast.i478616 = ptrtoint i8* %call.i477 to i64
  %sub.ptr.sub.i480617 = sub i64 %sub.ptr.lhs.cast.i478616, %sub.ptr.rhs.cast.i.i348
  %cmp147618 = icmp ult i64 %sub.ptr.sub.i480617, %add144
  br i1 %cmp147618, label %while.body148, label %while.end150

while.body148:                                    ; preds = %while.body148, %while.end140
  %sstr.sroa.19.11619 = phi i8* [ %call.i467, %while.body148 ], [ %call.i477, %while.end140 ]
  %call.i467 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.11619, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #17
  %sub.ptr.lhs.cast.i478 = ptrtoint i8* %call.i467 to i64
  %sub.ptr.sub.i480 = sub i64 %sub.ptr.lhs.cast.i478, %sub.ptr.rhs.cast.i.i348
  %cmp147 = icmp ult i64 %sub.ptr.sub.i480, %add144
  br i1 %cmp147, label %while.body148, label %while.end150, !llvm.loop !351

while.end150:                                     ; preds = %while.body148, %while.end140
  %sstr.sroa.19.11.lcssa = phi i8* [ %call.i477, %while.end140 ], [ %call.i467, %while.body148 ]
  %29 = load i32, i32* %num_allocs142, align 8, !tbaa !350
  %cmp152.not = icmp eq i32 %29, 0
  br i1 %cmp152.not, label %if.end159, label %if.then153

if.then153:                                       ; preds = %while.end150
  %memory_total154 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv630, i32 3
  %30 = load i64, i64* %memory_total154, align 8, !tbaa !352
  %conv156 = sext i32 %29 to i64
  %div157 = udiv i64 %30, %conv156
  br label %if.end159

if.end159:                                        ; preds = %if.then153, %while.end150
  %alloc_avg.0 = phi i64 [ %div157, %if.then153 ], [ 0, %while.end150 ]
  %call.i452 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.11.lcssa, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27.184, i64 0, i64 0)) #17
  %sext586 = shl i64 %alloc_avg.0, 32
  %conv.i445 = ashr exact i64 %sext586, 32
  %call.i446 = tail call i8* @halide_int64_to_string(i8* %call.i452, i8* %sstr.sroa.125.0, i64 %conv.i445, i32 1) #17
  br label %if.end162

if.end162:                                        ; preds = %if.end159, %if.end127
  %sstr.sroa.19.12 = phi i8* [ %sstr.sroa.19.9, %if.end127 ], [ %call.i446, %if.end159 ]
  %stack_peak163 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv630, i32 4
  %31 = load i64, i64* %stack_peak163, align 8, !tbaa !338
  %cmp164.not = icmp eq i64 %31, 0
  br i1 %cmp164.not, label %if.end169, label %if.then165

if.then165:                                       ; preds = %if.end162
  %call.i424 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.12, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28.185, i64 0, i64 0)) #17
  %32 = load i64, i64* %stack_peak163, align 8, !tbaa !338
  %call.i405 = tail call i8* @halide_uint64_to_string(i8* %call.i424, i8* %sstr.sroa.125.0, i64 %32, i32 1) #17
  br label %if.end169

if.end169:                                        ; preds = %if.then165, %if.end162
  %sstr.sroa.19.13 = phi i8* [ %sstr.sroa.19.12, %if.end162 ], [ %call.i405, %if.then165 ]
  %call.i396 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.13, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #17
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381, label %if.then.i379

if.then.i379:                                     ; preds = %if.end169
  %sub.ptr.lhs.cast.i.i374 = ptrtoint i8* %call.i396 to i64
  %add.i.i377 = add i64 %sub.ptr.sub.i.i349, %sub.ptr.lhs.cast.i.i374
  %call.i.i378 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i377) #17
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381: ; preds = %if.then.i379, %if.end169
  %retval.0.i380 = phi i8* [ %call.i, %if.then.i379 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0), %if.end169 ]
  tail call void @halide_print(i8* %user_context, i8* nonnull %retval.0.i380) #17
  br label %cleanup172

cleanup172:                                       ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381, %land.lhs.true
  %sstr.sroa.19.14 = phi i8* [ %call.i, %land.lhs.true ], [ %call.i396, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381 ]
  %indvars.iv.next631 = add nuw nsw i64 %indvars.iv630, 1
  %33 = load i32, i32* %num_funcs54, align 8, !tbaa !335
  %34 = sext i32 %33 to i64
  %cmp55 = icmp slt i64 %indvars.iv.next631, %34
  br i1 %cmp55, label %for.body57, label %cleanup181, !llvm.loop !353

cleanup181:                                       ; preds = %cleanup172, %for.cond53.preheader, %for.cond41, %for.cond41.preheader, %for.body
  %sstr.sroa.19.15 = phi i8* [ %sstr.sroa.19.0626, %for.body ], [ %call.i344, %for.cond53.preheader ], [ %call.i344, %for.cond41.preheader ], [ %sstr.sroa.19.14, %cleanup172 ], [ %call.i344, %for.cond41 ]
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 8
  %35 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  %p.0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %35, align 8, !tbaa !10
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %p.0, null
  br i1 %tobool.not, label %for.cond.cleanup, label %for.body, !llvm.loop !354
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_reset_unlocked(%struct.halide_profiler_state* %s) local_unnamed_addr #0 {
entry:
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 5
  %0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !355
  %tobool.not9 = icmp eq %struct.halide_profiler_pipeline_stats* %0, null
  br i1 %tobool.not9, label %while.end, label %while.body

while.body:                                       ; preds = %while.body, %entry
  %1 = phi %struct.halide_profiler_pipeline_stats* [ %7, %while.body ], [ %0, %entry ]
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %1, i64 0, i32 8
  %2 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  %3 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %2, align 8, !tbaa !356
  store %struct.halide_profiler_pipeline_stats* %3, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !355
  %funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %1, i64 0, i32 7
  %4 = bitcast %struct.halide_profiler_func_stats** %funcs to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !336
  tail call void @free(i8* %5) #17
  %6 = bitcast %struct.halide_profiler_pipeline_stats* %1 to i8*
  tail call void @free(i8* nonnull %6) #17
  %7 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !355
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %7, null
  br i1 %tobool.not, label %while.end, label %while.body, !llvm.loop !357

while.end:                                        ; preds = %while.body, %entry
  %first_free_id = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 2
  store i32 0, i32* %first_free_id, align 4, !tbaa !358
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce %struct.halide_profiler_pipeline_stats* @_ZN6Halide7Runtime8Internal23find_or_create_pipelineEPKciPKy(i8* %pipeline_name, i32 %num_funcs, i64* %func_names) local_unnamed_addr #0 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #19
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 5
  %p.0121 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !10
  %tobool.not122 = icmp eq %struct.halide_profiler_pipeline_stats* %p.0121, null
  br i1 %tobool.not122, label %for.end, label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %p.0123 = phi %struct.halide_profiler_pipeline_stats* [ %p.0, %for.inc ], [ %p.0121, %entry ]
  %name = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0123, i64 0, i32 6
  %0 = load i8*, i8** %name, align 8, !tbaa !330
  %cmp = icmp eq i8* %0, %pipeline_name
  br i1 %cmp, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %num_funcs1 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0123, i64 0, i32 9
  %1 = load i32, i32* %num_funcs1, align 8, !tbaa !335
  %cmp2 = icmp eq i32 %1, %num_funcs
  br i1 %cmp2, label %cleanup62, label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0123, i64 0, i32 8
  %2 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  %p.0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %2, align 8, !tbaa !10
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %p.0, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !359

for.end:                                          ; preds = %for.inc, %entry
  %call4 = tail call i8* @malloc(i64 96) #17
  %3 = bitcast i8* %call4 to %struct.halide_profiler_pipeline_stats*
  %tobool5.not = icmp eq i8* %call4, null
  br i1 %tobool5.not, label %cleanup62, label %if.end7

if.end7:                                          ; preds = %for.end
  %4 = bitcast %struct.halide_profiler_pipeline_stats** %pipelines to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !355
  %next9 = getelementptr inbounds i8, i8* %call4, i64 64
  %6 = bitcast i8* %next9 to i8**
  store i8* %5, i8** %6, align 8, !tbaa !356
  %name10 = getelementptr inbounds i8, i8* %call4, i64 48
  %7 = bitcast i8* %name10 to i8**
  store i8* %pipeline_name, i8** %7, align 8, !tbaa !330
  %first_free_id = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 2
  %8 = load i32, i32* %first_free_id, align 4, !tbaa !358
  %first_func_id = getelementptr inbounds i8, i8* %call4, i64 76
  %9 = bitcast i8* %first_func_id to i32*
  store i32 %8, i32* %9, align 4, !tbaa !360
  %num_funcs11 = getelementptr inbounds i8, i8* %call4, i64 72
  %10 = bitcast i8* %num_funcs11 to i32*
  store i32 %num_funcs, i32* %10, align 8, !tbaa !335
  %runs = getelementptr inbounds i8, i8* %call4, i64 80
  %11 = bitcast i8* %runs to i32*
  store i32 0, i32* %11, align 8, !tbaa !327
  %time = bitcast i8* %call4 to i64*
  store i64 0, i64* %time, align 8, !tbaa !325
  %samples = getelementptr inbounds i8, i8* %call4, i64 84
  %12 = bitcast i8* %samples to i32*
  store i32 0, i32* %12, align 4, !tbaa !331
  %memory_current = getelementptr inbounds i8, i8* %call4, i64 8
  %13 = bitcast i8* %memory_current to i64*
  store i64 0, i64* %13, align 8, !tbaa !361
  %memory_peak = getelementptr inbounds i8, i8* %call4, i64 16
  %14 = bitcast i8* %memory_peak to i64*
  store i64 0, i64* %14, align 8, !tbaa !333
  %memory_total = getelementptr inbounds i8, i8* %call4, i64 24
  %15 = bitcast i8* %memory_total to i64*
  store i64 0, i64* %15, align 8, !tbaa !334
  %num_allocs = getelementptr inbounds i8, i8* %call4, i64 88
  %16 = bitcast i8* %num_allocs to i32*
  store i32 0, i32* %16, align 8, !tbaa !332
  %active_threads_numerator = getelementptr inbounds i8, i8* %call4, i64 32
  %17 = bitcast i8* %active_threads_numerator to i64*
  store i64 0, i64* %17, align 8, !tbaa !328
  %active_threads_denominator = getelementptr inbounds i8, i8* %call4, i64 40
  %18 = bitcast i8* %active_threads_denominator to i64*
  store i64 0, i64* %18, align 8, !tbaa !329
  %conv = sext i32 %num_funcs to i64
  %mul = mul nsw i64 %conv, 72
  %call12 = tail call i8* @malloc(i64 %mul) #17
  %funcs = getelementptr inbounds i8, i8* %call4, i64 56
  %19 = bitcast i8* %funcs to i8**
  store i8* %call12, i8** %19, align 8, !tbaa !336
  %tobool14.not = icmp eq i8* %call12, null
  %20 = bitcast i8* %call12 to %struct.halide_profiler_func_stats*
  br i1 %tobool14.not, label %if.then15, label %for.cond17.preheader

for.cond17.preheader:                             ; preds = %if.end7
  %cmp18119 = icmp sgt i32 %num_funcs, 0
  br i1 %cmp18119, label %for.body20.lr.ph, label %for.cond.cleanup19

for.body20.lr.ph:                                 ; preds = %for.cond17.preheader
  %wide.trip.count = zext i32 %num_funcs to i64
  br label %for.body20

if.then15:                                        ; preds = %if.end7
  tail call void @free(i8* nonnull %call4) #17
  br label %cleanup62

for.cond.cleanup19:                               ; preds = %for.body20, %for.cond17.preheader
  %21 = load i32, i32* %first_free_id, align 4, !tbaa !358
  %add = add nsw i32 %21, %num_funcs
  store i32 %add, i32* %first_free_id, align 4, !tbaa !358
  store i8* %call4, i8** %4, align 8, !tbaa !355
  br label %cleanup62

for.body20:                                       ; preds = %for.body20, %for.body20.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body20.lr.ph ], [ %indvars.iv.next, %for.body20 ]
  %time22 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %20, i64 %indvars.iv, i32 0
  store i64 0, i64* %time22, align 8, !tbaa !340
  %arrayidx24 = getelementptr inbounds i64, i64* %func_names, i64 %indvars.iv
  %22 = load i64, i64* %arrayidx24, align 8, !tbaa !110
  %23 = inttoptr i64 %22 to i8*
  %name28 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %20, i64 %indvars.iv, i32 7
  store i8* %23, i8** %name28, align 8, !tbaa !341
  %memory_current32 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %20, i64 %indvars.iv, i32 1
  store i64 0, i64* %memory_current32, align 8, !tbaa !362
  %memory_peak36 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %20, i64 %indvars.iv, i32 2
  store i64 0, i64* %memory_peak36, align 8, !tbaa !348
  %memory_total40 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %20, i64 %indvars.iv, i32 3
  store i64 0, i64* %memory_total40, align 8, !tbaa !352
  %num_allocs44 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %20, i64 %indvars.iv, i32 8
  store i32 0, i32* %num_allocs44, align 8, !tbaa !350
  %stack_peak = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %20, i64 %indvars.iv, i32 4
  store i64 0, i64* %stack_peak, align 8, !tbaa !338
  %active_threads_numerator51 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %20, i64 %indvars.iv, i32 5
  store i64 0, i64* %active_threads_numerator51, align 8, !tbaa !345
  %active_threads_denominator55 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %20, i64 %indvars.iv, i32 6
  store i64 0, i64* %active_threads_denominator55, align 8, !tbaa !346
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup19, label %for.body20, !llvm.loop !363

cleanup62:                                        ; preds = %for.cond.cleanup19, %if.then15, %for.end, %land.lhs.true
  %retval.2 = phi %struct.halide_profiler_pipeline_stats* [ %3, %for.cond.cleanup19 ], [ null, %if.then15 ], [ null, %for.end ], [ %p.0123, %land.lhs.true ]
  ret %struct.halide_profiler_pipeline_stats* %retval.2
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal9bill_funcEP21halide_profiler_stateiyi(%struct.halide_profiler_state* %s, i32 %func_id, i64 %time, i32 %active_threads) local_unnamed_addr #0 {
entry:
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 5
  %p.055 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !10
  %tobool.not56 = icmp eq %struct.halide_profiler_pipeline_stats* %p.055, null
  br i1 %tobool.not56, label %cleanup25, label %for.body

for.body:                                         ; preds = %if.end23, %entry
  %p.058 = phi %struct.halide_profiler_pipeline_stats* [ %p.0, %if.end23 ], [ %p.055, %entry ]
  %p_prev.057 = phi %struct.halide_profiler_pipeline_stats* [ %p.058, %if.end23 ], [ null, %entry ]
  %first_func_id = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 10
  %0 = load i32, i32* %first_func_id, align 4, !tbaa !360
  %cmp.not = icmp sgt i32 %0, %func_id
  br i1 %cmp.not, label %if.end23, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %num_funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 9
  %1 = load i32, i32* %num_funcs, align 8, !tbaa !335
  %add = add nsw i32 %1, %0
  %cmp2 = icmp sgt i32 %add, %func_id
  br i1 %cmp2, label %if.then, label %if.end23

if.then:                                          ; preds = %land.lhs.true
  %tobool3.not = icmp eq %struct.halide_profiler_pipeline_stats* %p_prev.057, null
  br i1 %tobool3.not, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.then
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 8
  %2 = load i8*, i8** %next, align 8, !tbaa !356
  %next5 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p_prev.057, i64 0, i32 8
  store i8* %2, i8** %next5, align 8, !tbaa !356
  %3 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  store %struct.halide_profiler_pipeline_stats* %p.055, %struct.halide_profiler_pipeline_stats** %3, align 8, !tbaa !356
  store %struct.halide_profiler_pipeline_stats* %p.058, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !355
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  %funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 7
  %4 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %funcs, align 8, !tbaa !336
  %idx.ext = sext i32 %func_id to i64
  %add.ptr = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %4, i64 %idx.ext
  %idx.ext10 = sext i32 %0 to i64
  %idx.neg = sub nsw i64 0, %idx.ext10
  %add.ptr11 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr, i64 %idx.neg
  %time12 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr11, i64 0, i32 0
  %5 = load i64, i64* %time12, align 8, !tbaa !340
  %add13 = add i64 %5, %time
  store i64 %add13, i64* %time12, align 8, !tbaa !340
  %conv = sext i32 %active_threads to i64
  %active_threads_numerator = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr11, i64 0, i32 5
  %6 = load i64, i64* %active_threads_numerator, align 8, !tbaa !345
  %add14 = add i64 %6, %conv
  store i64 %add14, i64* %active_threads_numerator, align 8, !tbaa !345
  %active_threads_denominator = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr11, i64 0, i32 6
  %7 = load i64, i64* %active_threads_denominator, align 8, !tbaa !346
  %add15 = add i64 %7, 1
  store i64 %add15, i64* %active_threads_denominator, align 8, !tbaa !346
  %time16 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 0
  %8 = load i64, i64* %time16, align 8, !tbaa !325
  %add17 = add i64 %8, %time
  store i64 %add17, i64* %time16, align 8, !tbaa !325
  %samples = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 12
  %9 = load i32, i32* %samples, align 4, !tbaa !331
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %samples, align 4, !tbaa !331
  %active_threads_numerator19 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 4
  %10 = load i64, i64* %active_threads_numerator19, align 8, !tbaa !328
  %add20 = add i64 %10, %conv
  store i64 %add20, i64* %active_threads_numerator19, align 8, !tbaa !328
  %active_threads_denominator21 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 5
  %11 = load i64, i64* %active_threads_denominator21, align 8, !tbaa !329
  %add22 = add i64 %11, 1
  store i64 %add22, i64* %active_threads_denominator21, align 8, !tbaa !329
  ret void

if.end23:                                         ; preds = %land.lhs.true, %for.body
  %next24 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 8
  %12 = bitcast i8** %next24 to %struct.halide_profiler_pipeline_stats**
  %p.0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %12, align 8, !tbaa !10
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %p.0, null
  br i1 %tobool.not, label %cleanup25, label %for.body, !llvm.loop !364

cleanup25:                                        ; preds = %if.end23, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_profiler_sample(%struct.halide_profiler_state* %s, i64* %prev_t) local_unnamed_addr #0 {
entry:
  %func = alloca i32, align 4
  %active_threads = alloca i32, align 4
  %0 = bitcast i32* %func to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #18
  %1 = bitcast i32* %active_threads to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #18
  %get_remote_profiler_state = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 6
  %2 = load void (i32*, i32*)*, void (i32*, i32*)** %get_remote_profiler_state, align 8, !tbaa !365
  %tobool.not = icmp eq void (i32*, i32*)* %2, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void %2(i32* nonnull %func, i32* nonnull %active_threads) #17
  br label %if.end

if.else:                                          ; preds = %entry
  %current_func = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 3
  %3 = load i32, i32* %current_func, align 8, !tbaa !324
  store i32 %3, i32* %func, align 4, !tbaa !73
  %active_threads2 = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 4
  %4 = load i32, i32* %active_threads2, align 4, !tbaa !366
  store i32 %4, i32* %active_threads, align 4, !tbaa !73
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call = call i64 @halide_current_time_ns(i8* null) #17
  %5 = load i32, i32* %func, align 4, !tbaa !73
  %cmp = icmp eq i32 %5, -2
  br i1 %cmp, label %cleanup, label %if.else4

if.else4:                                         ; preds = %if.end
  %cmp5 = icmp sgt i32 %5, -1
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.else4
  %6 = load i64, i64* %prev_t, align 8, !tbaa !110
  %sub = sub i64 %call, %6
  %7 = load i32, i32* %active_threads, align 4, !tbaa !73
  call void @_ZN6Halide7Runtime8Internal9bill_funcEP21halide_profiler_stateiyi(%struct.halide_profiler_state* nonnull %s, i32 %5, i64 %sub, i32 %7) #19
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.else4
  store i64 %call, i64* %prev_t, align 8, !tbaa !110
  %sleep_time = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 1
  %8 = load i32, i32* %sleep_time, align 8, !tbaa !367
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.end
  %retval.0 = phi i32 [ %8, %if.end8 ], [ -1, %if.end ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #18
  ret i32 %retval.0
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal24sampling_profiler_threadEPv(i8* %0) #4 {
entry:
  %t = alloca i64, align 8
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #19
  %lock = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock) #17
  %current_func = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 3
  %1 = load i32, i32* %current_func, align 8, !tbaa !324
  %cmp.not23 = icmp eq i32 %1, -2
  br i1 %cmp.not23, label %while.end8, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %2 = bitcast i64* %t to i8*
  br label %while.body

while.body:                                       ; preds = %while.end, %while.body.lr.ph
  %call1 = call i64 @halide_current_time_ns(i8* null) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #18
  store i64 %call1, i64* %t, align 8, !tbaa !110
  %call420 = call i32 @halide_profiler_sample(%struct.halide_profiler_state* nonnull %call, i64* nonnull %t) #19
  %cmp521 = icmp slt i32 %call420, 0
  br i1 %cmp521, label %while.end, label %if.end

if.end:                                           ; preds = %if.end, %while.body
  %call422 = phi i32 [ %call4, %if.end ], [ %call420, %while.body ]
  call void @halide_mutex_unlock(%struct.halide_mutex* %lock) #17
  call void @halide_sleep_ms(i8* null, i32 %call422) #17
  call void @halide_mutex_lock(%struct.halide_mutex* %lock) #17
  %call4 = call i32 @halide_profiler_sample(%struct.halide_profiler_state* %call, i64* nonnull %t) #19
  %cmp5 = icmp slt i32 %call4, 0
  br i1 %cmp5, label %while.end, label %if.end

while.end:                                        ; preds = %if.end, %while.body
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #18
  %3 = load i32, i32* %current_func, align 8, !tbaa !324
  %cmp.not = icmp eq i32 %3, -2
  br i1 %cmp.not, label %while.end8, label %while.body, !llvm.loop !368

while.end8:                                       ; preds = %while.end, %entry
  call void @halide_mutex_unlock(%struct.halide_mutex* nonnull %lock) #17
  ret void
}

; Function Attrs: nounwind
define weak %struct.halide_profiler_pipeline_stats* @halide_profiler_get_pipeline_state(i8* %pipeline_name) local_unnamed_addr #4 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #19
  %lock.i = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock.i) #17
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 5
  %p.013 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !10
  %tobool.not14 = icmp eq %struct.halide_profiler_pipeline_stats* %p.013, null
  br i1 %tobool.not14, label %cleanup, label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %p.015 = phi %struct.halide_profiler_pipeline_stats* [ %p.0, %for.inc ], [ %p.013, %entry ]
  %name = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.015, i64 0, i32 6
  %0 = load i8*, i8** %name, align 8, !tbaa !330
  %cmp = icmp eq i8* %0, %pipeline_name
  br i1 %cmp, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.015, i64 0, i32 8
  %1 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  %p.0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %1, align 8, !tbaa !10
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %p.0, null
  br i1 %tobool.not, label %cleanup, label %for.body, !llvm.loop !369

cleanup:                                          ; preds = %for.inc, %for.body, %entry
  %p.0.lcssa = phi %struct.halide_profiler_pipeline_stats* [ null, %entry ], [ %p.015, %for.body ], [ null, %for.inc ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* %lock.i) #17
  ret %struct.halide_profiler_pipeline_stats* %p.0.lcssa
}

; Function Attrs: nounwind
define weak i32 @halide_profiler_pipeline_start(i8* %user_context, i8* %pipeline_name, i32 %num_funcs, i64* %func_names) local_unnamed_addr #4 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #19
  %lock.i = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock.i) #17
  %sampling_thread = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 7
  %0 = load %struct.halide_thread*, %struct.halide_thread** %sampling_thread, align 8, !tbaa !322
  %tobool.not = icmp eq %struct.halide_thread* %0, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @halide_start_clock(i8* %user_context) #17
  %call2 = tail call %struct.halide_thread* @halide_spawn_thread(void (i8*)* nonnull @_ZN6Halide7Runtime8Internal24sampling_profiler_threadEPv, i8* null) #17
  store %struct.halide_thread* %call2, %struct.halide_thread** %sampling_thread, align 8, !tbaa !322
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call4 = tail call %struct.halide_profiler_pipeline_stats* @_ZN6Halide7Runtime8Internal23find_or_create_pipelineEPKciPKy(i8* %pipeline_name, i32 %num_funcs, i64* %func_names) #19
  %tobool5.not = icmp eq %struct.halide_profiler_pipeline_stats* %call4, null
  br i1 %tobool5.not, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.end
  %call7 = tail call i32 @halide_error_out_of_memory(i8* %user_context) #17
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %runs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %call4, i64 0, i32 11
  %1 = load i32, i32* %runs, align 8, !tbaa !327
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %runs, align 8, !tbaa !327
  %first_func_id = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %call4, i64 0, i32 10
  %2 = load i32, i32* %first_func_id, align 4, !tbaa !360
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.then6
  %retval.0 = phi i32 [ %2, %if.end8 ], [ %call7, %if.then6 ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull %lock.i) #17
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_stack_peak_update(i8* %user_context, i8* %pipeline_state, i64* %f_values) local_unnamed_addr #0 {
entry:
  %cmp.not = icmp eq i8* %pipeline_state, null
  br i1 %cmp.not, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.186, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %num_funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 72
  %0 = bitcast i8* %num_funcs to i32*
  %1 = load i32, i32* %0, align 8, !tbaa !335
  %cmp118 = icmp sgt i32 %1, 0
  br i1 %cmp118, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %do.end
  %funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 56
  %2 = bitcast i8* %funcs to %struct.halide_profiler_func_stats**
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc, %do.end
  ret void

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %3 = phi i32 [ %1, %for.body.lr.ph ], [ %9, %for.inc ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds i64, i64* %f_values, i64 %indvars.iv
  %4 = load i64, i64* %arrayidx, align 8, !tbaa !110
  %cmp2.not = icmp eq i64 %4, 0
  br i1 %cmp2.not, label %for.inc, label %if.then3

if.then3:                                         ; preds = %for.body
  %5 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %2, align 8, !tbaa !336
  %stack_peak = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %5, i64 %indvars.iv, i32 4
  %6 = load i64, i64* %stack_peak, align 8, !tbaa !110
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %if.then3
  %old_val.0.i = phi i64 [ %6, %if.then3 ], [ %8, %while.body.i ]
  %cmp.i = icmp ult i64 %old_val.0.i, %4
  br i1 %cmp.i, label %while.body.i, label %for.inc.loopexit

while.body.i:                                     ; preds = %while.cond.i
  %7 = cmpxchg i64* %stack_peak, i64 %old_val.0.i, i64 %4 seq_cst seq_cst
  %8 = extractvalue { i64, i1 } %7, 0
  %cmp1.i = icmp eq i64 %old_val.0.i, %8
  br i1 %cmp1.i, label %for.inc.loopexit, label %while.cond.i, !llvm.loop !370

for.inc.loopexit:                                 ; preds = %while.body.i, %while.cond.i
  %.pre = load i32, i32* %0, align 8, !tbaa !335
  br label %for.inc

for.inc:                                          ; preds = %for.inc.loopexit, %for.body
  %9 = phi i32 [ %.pre, %for.inc.loopexit ], [ %3, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %10 = sext i32 %9 to i64
  %cmp1 = icmp slt i64 %indvars.iv.next, %10
  br i1 %cmp1, label %for.body, label %for.cond.cleanup, !llvm.loop !371
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_memory_allocate(i8* %user_context, i8* %pipeline_state, i32 %func_id, i64 %incr) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq i64 %incr, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp1.not = icmp eq i8* %pipeline_state, null
  br i1 %cmp1.not, label %if.then2, label %do.body4

if.then2:                                         ; preds = %if.end
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.1.187, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.body4

do.body4:                                         ; preds = %if.then2, %if.end
  %cmp5 = icmp sgt i32 %func_id, -1
  br i1 %cmp5, label %do.body10, label %if.then6

if.then6:                                         ; preds = %do.body4
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.2.188, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.body10

do.body10:                                        ; preds = %if.then6, %do.body4
  %num_funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 72
  %0 = bitcast i8* %num_funcs to i32*
  %1 = load i32, i32* %0, align 8, !tbaa !335
  %cmp11 = icmp sgt i32 %1, %func_id
  br i1 %cmp11, label %do.end15, label %if.then12

if.then12:                                        ; preds = %do.body10
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.3.189, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.end15

do.end15:                                         ; preds = %if.then12, %do.body10
  %funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 56
  %2 = bitcast i8* %funcs to %struct.halide_profiler_func_stats**
  %3 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %2, align 8, !tbaa !336
  %idxprom = sext i32 %func_id to i64
  %num_allocs = getelementptr inbounds i8, i8* %pipeline_state, i64 88
  %4 = bitcast i8* %num_allocs to i32*
  %5 = atomicrmw add i32* %4, i32 1 seq_cst
  %memory_total = getelementptr inbounds i8, i8* %pipeline_state, i64 24
  %6 = bitcast i8* %memory_total to i64*
  %7 = atomicrmw add i64* %6, i64 %incr seq_cst
  %memory_current = getelementptr inbounds i8, i8* %pipeline_state, i64 8
  %8 = bitcast i8* %memory_current to i64*
  %9 = atomicrmw add i64* %8, i64 %incr seq_cst
  %10 = add i64 %9, %incr
  %memory_peak = getelementptr inbounds i8, i8* %pipeline_state, i64 16
  %11 = bitcast i8* %memory_peak to i64*
  %12 = load i64, i64* %11, align 8, !tbaa !110
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %do.end15
  %old_val.0.i = phi i64 [ %12, %do.end15 ], [ %14, %while.body.i ]
  %cmp.i = icmp ult i64 %old_val.0.i, %10
  br i1 %cmp.i, label %while.body.i, label %_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit

while.body.i:                                     ; preds = %while.cond.i
  %13 = cmpxchg i64* %11, i64 %old_val.0.i, i64 %10 seq_cst seq_cst
  %14 = extractvalue { i64, i1 } %13, 0
  %cmp1.i = icmp eq i64 %old_val.0.i, %14
  br i1 %cmp1.i, label %_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit, label %while.cond.i, !llvm.loop !370

_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit: ; preds = %while.body.i, %while.cond.i
  %num_allocs16 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 8
  %15 = atomicrmw add i32* %num_allocs16, i32 1 seq_cst
  %memory_total17 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 3
  %16 = atomicrmw add i64* %memory_total17, i64 %incr seq_cst
  %memory_current18 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 1
  %17 = atomicrmw add i64* %memory_current18, i64 %incr seq_cst
  %18 = add i64 %17, %incr
  %memory_peak19 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 2
  %19 = load i64, i64* %memory_peak19, align 8, !tbaa !110
  br label %while.cond.i43

while.cond.i43:                                   ; preds = %while.body.i45, %_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit
  %old_val.0.i41 = phi i64 [ %19, %_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit ], [ %21, %while.body.i45 ]
  %cmp.i42 = icmp ult i64 %old_val.0.i41, %18
  br i1 %cmp.i42, label %while.body.i45, label %return

while.body.i45:                                   ; preds = %while.cond.i43
  %20 = cmpxchg i64* %memory_peak19, i64 %old_val.0.i41, i64 %18 seq_cst seq_cst
  %21 = extractvalue { i64, i1 } %20, 0
  %cmp1.i44 = icmp eq i64 %old_val.0.i41, %21
  br i1 %cmp1.i44, label %return, label %while.cond.i43, !llvm.loop !370

return:                                           ; preds = %while.body.i45, %while.cond.i43, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_memory_free(i8* %user_context, i8* %pipeline_state, i32 %func_id, i64 %decr) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq i64 %decr, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp1.not = icmp eq i8* %pipeline_state, null
  br i1 %cmp1.not, label %if.then2, label %do.body4

if.then2:                                         ; preds = %if.end
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.4.190, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.body4

do.body4:                                         ; preds = %if.then2, %if.end
  %cmp5 = icmp sgt i32 %func_id, -1
  br i1 %cmp5, label %do.body10, label %if.then6

if.then6:                                         ; preds = %do.body4
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.5.191, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.body10

do.body10:                                        ; preds = %if.then6, %do.body4
  %num_funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 72
  %0 = bitcast i8* %num_funcs to i32*
  %1 = load i32, i32* %0, align 8, !tbaa !335
  %cmp11 = icmp sgt i32 %1, %func_id
  br i1 %cmp11, label %do.end15, label %if.then12

if.then12:                                        ; preds = %do.body10
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.6.192, i64 0, i64 0)) #17
  tail call void @abort() #17
  br label %do.end15

do.end15:                                         ; preds = %if.then12, %do.body10
  %funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 56
  %2 = bitcast i8* %funcs to %struct.halide_profiler_func_stats**
  %3 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %2, align 8, !tbaa !336
  %idxprom = sext i32 %func_id to i64
  %memory_current = getelementptr inbounds i8, i8* %pipeline_state, i64 8
  %4 = bitcast i8* %memory_current to i64*
  %5 = atomicrmw sub i64* %4, i64 %decr seq_cst
  %memory_current16 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 1
  %6 = atomicrmw sub i64* %memory_current16, i64 %decr seq_cst
  br label %return

return:                                           ; preds = %do.end15, %entry
  ret void
}

; Function Attrs: nounwind
define weak void @halide_profiler_report(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #19
  %lock.i = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock.i) #17
  tail call void @halide_profiler_report_unlocked(i8* %user_context, %struct.halide_profiler_state* %call) #19
  tail call void @halide_mutex_unlock(%struct.halide_mutex* %lock.i) #17
  ret void
}

; Function Attrs: nounwind
define weak void @halide_profiler_reset() local_unnamed_addr #4 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #19
  %lock.i = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock.i) #17
  tail call void @halide_profiler_reset_unlocked(%struct.halide_profiler_state* %call) #19
  tail call void @halide_mutex_unlock(%struct.halide_mutex* %lock.i) #17
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_profiler_pipeline_end(i8* %user_context, i8* %state) local_unnamed_addr #2 {
entry:
  %current_func = getelementptr inbounds i8, i8* %state, i64 16
  %0 = bitcast i8* %current_func to i32*
  store i32 -1, i32* %0, align 8, !tbaa !324
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* %ptr, i64 %len) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_check_memory_is_initialized(i8* %user_context, i8* %ptr, i64 %len, i8* %name) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_check_buffer_is_initialized(i8* %user_context, %struct.halide_buffer_t* %b, i8* %buf_name) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_annotate_buffer_is_initialized(i8* %user_context, %struct.halide_buffer_t* %b) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_msan_annotate_buffer_is_initialized_as_destructor(i8* %user_context, i8* %b) local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: alwaysinline nounwind readnone
define linkonce_odr <16 x i8> @paddusbx16(<16 x i8> %a0, <16 x i8> %a1) #11 {
  %1 = add <16 x i8> %a0, %a1
  %2 = icmp ugt <16 x i8> %a0, %1
  %3 = select <16 x i1> %2, <16 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <16 x i8> %1
  ret <16 x i8> %3
}

; Function Attrs: alwaysinline nounwind readnone
define linkonce_odr <8 x i16> @padduswx8(<8 x i16> %a0, <8 x i16> %a1) #11 {
  %1 = add <8 x i16> %a0, %a1
  %2 = icmp ugt <8 x i16> %a0, %1
  %3 = select <8 x i1> %2, <8 x i16> <i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1>, <8 x i16> %1
  ret <8 x i16> %3
}

; Function Attrs: alwaysinline nounwind readnone
define linkonce_odr <16 x i8> @psubusbx16(<16 x i8> %a0, <16 x i8> %a1) #11 {
  %1 = icmp ugt <16 x i8> %a0, %a1
  %2 = select <16 x i1> %1, <16 x i8> %a0, <16 x i8> %a1
  %3 = sub <16 x i8> %2, %a1
  ret <16 x i8> %3
}

; Function Attrs: alwaysinline nounwind readnone
define linkonce_odr <8 x i16> @psubuswx8(<8 x i16> %a0, <8 x i16> %a1) #11 {
  %1 = icmp ugt <8 x i16> %a0, %a1
  %2 = select <8 x i1> %1, <8 x i16> %a0, <8 x i16> %a1
  %3 = sub <8 x i16> %2, %a1
  ret <8 x i16> %3
}

; Function Attrs: alwaysinline nounwind readnone
define linkonce_odr <16 x i8> @packsswbx16(<16 x i16> %arg) #11 {
  %1 = shufflevector <16 x i16> %arg, <16 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %2 = shufflevector <16 x i16> %arg, <16 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3 = tail call <16 x i8> @llvm.x86.sse2.packsswb.128(<8 x i16> %1, <8 x i16> %2)
  ret <16 x i8> %3
}

; Function Attrs: nounwind readnone
declare <16 x i8> @llvm.x86.sse2.packsswb.128(<8 x i16>, <8 x i16>) #9

; Function Attrs: alwaysinline nounwind readnone
define linkonce_odr <16 x i8> @packuswbx16(<16 x i16> %arg) #11 {
  %1 = shufflevector <16 x i16> %arg, <16 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %2 = shufflevector <16 x i16> %arg, <16 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %1, <8 x i16> %2)
  ret <16 x i8> %3
}

; Function Attrs: nounwind readnone
declare <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16>, <8 x i16>) #9

; Function Attrs: alwaysinline nounwind readnone
define linkonce_odr <8 x i16> @packssdwx8(<8 x i32> %arg) #11 {
  %1 = shufflevector <8 x i32> %arg, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2 = shufflevector <8 x i32> %arg, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3 = tail call <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32> %1, <4 x i32> %2)
  ret <8 x i16> %3
}

; Function Attrs: nounwind readnone
declare <8 x i16> @llvm.x86.sse2.packssdw.128(<4 x i32>, <4 x i32>) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr <4 x float> @sqrt_f32x4(<4 x float> %x) #7 {
  %1 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %x)
  ret <4 x float> %1
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <4 x float> @llvm.sqrt.v4f32(<4 x float>) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr <2 x double> @sqrt_f64x2(<2 x double> %x) #7 {
  %1 = call <2 x double> @llvm.sqrt.v2f64(<2 x double> %x)
  ret <2 x double> %1
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <2 x double> @llvm.sqrt.v2f64(<2 x double>) #8

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr <4 x float> @abs_f32x4(<4 x float> %x) #7 {
  %arg = bitcast <4 x float> %x to <4 x i32>
  %mask = lshr <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, <i32 1, i32 1, i32 1, i32 1>
  %masked = and <4 x i32> %arg, %mask
  %result = bitcast <4 x i32> %masked to <4 x float>
  ret <4 x float> %result
}

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr <2 x double> @abs_f64x2(<2 x double> %x) #7 {
  %arg = bitcast <2 x double> %x to <2 x i64>
  %mask = lshr <2 x i64> <i64 -1, i64 -1>, <i64 1, i64 1>
  %masked = and <2 x i64> %arg, %mask
  %result = bitcast <2 x i64> %masked to <2 x double>
  ret <2 x double> %result
}

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @fast_inverse_f32(float %x) #7 {
  %vec = insertelement <4 x float> undef, float %x, i32 0
  %approx = tail call <4 x float> @llvm.x86.sse.rcp.ss(<4 x float> %vec)
  %result = extractelement <4 x float> %approx, i32 0
  ret float %result
}

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse.rcp.ss(<4 x float>) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr <4 x float> @fast_inverse_f32x4(<4 x float> %x) #7 {
  %approx = tail call <4 x float> @llvm.x86.sse.rcp.ps(<4 x float> %x)
  ret <4 x float> %approx
}

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse.rcp.ps(<4 x float>) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr float @fast_inverse_sqrt_f32(float %x) #7 {
  %vec = insertelement <4 x float> undef, float %x, i32 0
  %approx = tail call <4 x float> @llvm.x86.sse.rsqrt.ss(<4 x float> %vec)
  %result = extractelement <4 x float> %approx, i32 0
  ret float %result
}

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse.rsqrt.ss(<4 x float>) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr <4 x float> @fast_inverse_sqrt_f32x4(<4 x float> %x) #7 {
  %approx = tail call <4 x float> @llvm.x86.sse.rsqrt.ps(<4 x float> %x)
  ret <4 x float> %approx
}

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse.rsqrt.ps(<4 x float>) #9

; Function Attrs: nounwind uwtable
define linkonce_odr void @x86_cpuid_halide(i32* %info) #12 {
  call void asm sideeffect inteldialect "xchg ebx, esi\0A\09mov eax, dword ptr $$0 $0\0A\09mov ecx, dword ptr $$4 $0\0A\09cpuid\0A\09mov dword ptr $$0 $0, eax\0A\09mov dword ptr $$4 $0, ebx\0A\09mov dword ptr $$8 $0, ecx\0A\09mov dword ptr $$12 $0, edx\0A\09xchg ebx, esi", "=*m,~{eax},~{ebx},~{ecx},~{edx},~{esi},~{dirflag},~{fpsr},~{flags}"(i32* %info)
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @x64_cpuid_halide(i32* %info) #12 {
  call void asm sideeffect inteldialect "xchg rbx, rsi\0A\09mov eax, dword ptr $$0 $0\0A\09mov ecx, dword ptr $$4 $0\0A\09cpuid\0A\09mov dword ptr $$0 $0, eax\0A\09mov dword ptr $$4 $0, ebx\0A\09mov dword ptr $$8 $0, ecx\0A\09mov dword ptr $$12 $0, edx\0A\09xchg rbx, rsi", "=*m,~{eax},~{ebx},~{ecx},~{edx},~{esi},~{dirflag},~{fpsr},~{flags}"(i32* %info)
  ret void
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define linkonce i32 @_halide_prefetch(i8* %ptr) local_unnamed_addr #5 {
entry:
  tail call void @llvm.prefetch.p0i8(i8* %ptr, i32 0, i32 0, i32 1)
  ret i32 0
}

; Function Attrs: inaccessiblemem_or_argmemonly nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #13

; Function Attrs: alwaysinline nounwind readnone
define linkonce_odr <8 x i16> @packusdwx8(<8 x i32> %arg) #11 {
  %1 = shufflevector <8 x i32> %arg, <8 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %2 = shufflevector <8 x i32> %arg, <8 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3 = tail call <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32> %1, <4 x i32> %2)
  ret <8 x i16> %3
}

; Function Attrs: nounwind readnone
declare <8 x i16> @llvm.x86.sse41.packusdw(<4 x i32>, <4 x i32>) #9

; Function Attrs: alwaysinline inlinehint nounwind optsize readnone uwtable
define linkonce_odr <4 x float> @floor_f32x4(<4 x float> %x) #14 {
  %1 = tail call <4 x float> @llvm.x86.sse41.round.ps(<4 x float> %x, i32 1)
  ret <4 x float> %1
}

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse41.round.ps(<4 x float>, i32 immarg) #9

; Function Attrs: alwaysinline inlinehint nounwind optsize readnone uwtable
define linkonce_odr <2 x double> @floor_f64x2(<2 x double> %x) #14 {
  %1 = tail call <2 x double> @llvm.x86.sse41.round.pd(<2 x double> %x, i32 1)
  ret <2 x double> %1
}

; Function Attrs: nounwind readnone
declare <2 x double> @llvm.x86.sse41.round.pd(<2 x double>, i32 immarg) #9

; Function Attrs: alwaysinline inlinehint nounwind optsize readnone uwtable
define linkonce_odr <4 x float> @ceil_f32x4(<4 x float> %x) #14 {
  %1 = tail call <4 x float> @llvm.x86.sse41.round.ps(<4 x float> %x, i32 2)
  ret <4 x float> %1
}

; Function Attrs: alwaysinline inlinehint nounwind optsize readnone uwtable
define linkonce_odr <2 x double> @ceil_f64x2(<2 x double> %x) #14 {
  %1 = tail call <2 x double> @llvm.x86.sse41.round.pd(<2 x double> %x, i32 2)
  ret <2 x double> %1
}

; Function Attrs: alwaysinline inlinehint nounwind optsize readnone uwtable
define linkonce_odr <4 x float> @round_f32x4(<4 x float> %x) #14 {
  %1 = tail call <4 x float> @llvm.x86.sse41.round.ps(<4 x float> %x, i32 0)
  ret <4 x float> %1
}

; Function Attrs: alwaysinline inlinehint nounwind optsize readnone uwtable
define linkonce_odr <2 x double> @round_f64x2(<2 x double> %x) #14 {
  %1 = tail call <2 x double> @llvm.x86.sse41.round.pd(<2 x double> %x, i32 0)
  ret <2 x double> %1
}

; Function Attrs: alwaysinline inlinehint nounwind optsize readnone uwtable
define linkonce_odr <4 x float> @trunc_f32x4(<4 x float> %x) #14 {
  %1 = tail call <4 x float> @llvm.x86.sse41.round.ps(<4 x float> %x, i32 3)
  ret <4 x float> %1
}

; Function Attrs: alwaysinline inlinehint nounwind optsize readnone uwtable
define linkonce_odr <2 x double> @trunc_f64x2(<2 x double> %x) #14 {
  %1 = tail call <2 x double> @llvm.x86.sse41.round.pd(<2 x double> %x, i32 3)
  ret <2 x double> %1
}

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr <16 x i8> @abs_i8x16(<16 x i8> %x) #7 {
  %1 = sub <16 x i8> zeroinitializer, %x
  %2 = icmp sgt <16 x i8> %x, zeroinitializer
  %3 = select <16 x i1> %2, <16 x i8> %x, <16 x i8> %1
  ret <16 x i8> %3
}

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr <8 x i16> @abs_i16x8(<8 x i16> %x) #7 {
  %1 = sub <8 x i16> zeroinitializer, %x
  %2 = icmp sgt <8 x i16> %x, zeroinitializer
  %3 = select <8 x i1> %2, <8 x i16> %x, <8 x i16> %1
  ret <8 x i16> %3
}

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr <4 x i32> @abs_i32x4(<4 x i32> %x) #7 {
  %1 = sub <4 x i32> zeroinitializer, %x
  %2 = icmp sgt <4 x i32> %x, zeroinitializer
  %3 = select <4 x i1> %2, <4 x i32> %x, <4 x i32> %1
  ret <4 x i32> %3
}

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr <8 x i16> @saturating_pmulhrswx8(<8 x i16> %a, <8 x i16> %b) #7 {
  %1 = tail call <8 x i16> @llvm.x86.ssse3.pmul.hr.sw.128(<8 x i16> %a, <8 x i16> %b)
  %2 = icmp eq <8 x i16> %a, <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>
  %3 = icmp eq <8 x i16> %b, <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>
  %4 = and <8 x i1> %2, %3
  %5 = select <8 x i1> %4, <8 x i16> <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, <8 x i16> %1
  ret <8 x i16> %5
}

; Function Attrs: nounwind readnone
declare <8 x i16> @llvm.x86.ssse3.pmul.hr.sw.128(<8 x i16>, <8 x i16>) #9

; Function Attrs: alwaysinline nounwind readnone
define linkonce_odr <32 x i8> @paddusbx32(<32 x i8> %a0, <32 x i8> %a1) #11 {
  %1 = add <32 x i8> %a0, %a1
  %2 = icmp ugt <32 x i8> %a0, %1
  %3 = select <32 x i1> %2, <32 x i8> <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>, <32 x i8> %1
  ret <32 x i8> %3
}

; Function Attrs: alwaysinline nounwind readnone
define linkonce_odr <16 x i16> @padduswx16(<16 x i16> %a0, <16 x i16> %a1) #11 {
  %1 = add <16 x i16> %a0, %a1
  %2 = icmp ugt <16 x i16> %a0, %1
  %3 = select <16 x i1> %2, <16 x i16> <i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1>, <16 x i16> %1
  ret <16 x i16> %3
}

; Function Attrs: alwaysinline nounwind readnone
define linkonce_odr <32 x i8> @psubusbx32(<32 x i8> %a0, <32 x i8> %a1) #11 {
  %1 = icmp ugt <32 x i8> %a0, %a1
  %2 = select <32 x i1> %1, <32 x i8> %a0, <32 x i8> %a1
  %3 = sub <32 x i8> %2, %a1
  ret <32 x i8> %3
}

; Function Attrs: alwaysinline nounwind readnone
define linkonce_odr <16 x i16> @psubuswx16(<16 x i16> %a0, <16 x i16> %a1) #11 {
  %1 = icmp ugt <16 x i16> %a0, %a1
  %2 = select <16 x i1> %1, <16 x i16> %a0, <16 x i16> %a1
  %3 = sub <16 x i16> %2, %a1
  ret <16 x i16> %3
}

; Function Attrs: alwaysinline nounwind
define linkonce_odr <8 x float> @sqrt_f32x8(<8 x float> %arg) #15 {
  %1 = call <8 x float> @llvm.sqrt.v8f32(<8 x float> %arg)
  ret <8 x float> %1
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <8 x float> @llvm.sqrt.v8f32(<8 x float>) #8

; Function Attrs: alwaysinline nounwind
define linkonce_odr <4 x double> @sqrt_f64x4(<4 x double> %arg) #15 {
  %1 = call <4 x double> @llvm.sqrt.v4f64(<4 x double> %arg)
  ret <4 x double> %1
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <4 x double> @llvm.sqrt.v4f64(<4 x double>) #8

; Function Attrs: alwaysinline nounwind
define linkonce_odr <8 x float> @round_f32x8(<8 x float> %arg) #15 {
  %1 = tail call <8 x float> @llvm.x86.avx.round.ps.256(<8 x float> %arg, i32 0) #18
  ret <8 x float> %1
}

; Function Attrs: nounwind readnone
declare <8 x float> @llvm.x86.avx.round.ps.256(<8 x float>, i32 immarg) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <4 x double> @round_f64x4(<4 x double> %arg) #15 {
  %1 = tail call <4 x double> @llvm.x86.avx.round.pd.256(<4 x double> %arg, i32 0) #18
  ret <4 x double> %1
}

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.x86.avx.round.pd.256(<4 x double>, i32 immarg) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <8 x float> @ceil_f32x8(<8 x float> %arg) #15 {
  %1 = tail call <8 x float> @llvm.x86.avx.round.ps.256(<8 x float> %arg, i32 2) #18
  ret <8 x float> %1
}

; Function Attrs: alwaysinline nounwind
define linkonce_odr <4 x double> @ceil_f64x4(<4 x double> %arg) #15 {
  %1 = tail call <4 x double> @llvm.x86.avx.round.pd.256(<4 x double> %arg, i32 2) #18
  ret <4 x double> %1
}

; Function Attrs: alwaysinline nounwind
define linkonce_odr <8 x float> @floor_f32x8(<8 x float> %arg) #15 {
  %1 = tail call <8 x float> @llvm.x86.avx.round.ps.256(<8 x float> %arg, i32 1) #18
  ret <8 x float> %1
}

; Function Attrs: alwaysinline nounwind
define linkonce_odr <4 x double> @floor_f64x4(<4 x double> %arg) #15 {
  %1 = tail call <4 x double> @llvm.x86.avx.round.pd.256(<4 x double> %arg, i32 1) #18
  ret <4 x double> %1
}

; Function Attrs: alwaysinline nounwind
define linkonce_odr <8 x float> @trunc_f32x8(<8 x float> %arg) #15 {
  %1 = tail call <8 x float> @llvm.x86.avx.round.ps.256(<8 x float> %arg, i32 3) #18
  ret <8 x float> %1
}

; Function Attrs: alwaysinline nounwind
define linkonce_odr <4 x double> @trunc_f64x4(<4 x double> %arg) #15 {
  %1 = tail call <4 x double> @llvm.x86.avx.round.pd.256(<4 x double> %arg, i32 3) #18
  ret <4 x double> %1
}

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr <8 x float> @abs_f32x8(<8 x float> %x) #7 {
  %arg = bitcast <8 x float> %x to <8 x i32>
  %mask = lshr <8 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %masked = and <8 x i32> %arg, %mask
  %result = bitcast <8 x i32> %masked to <8 x float>
  ret <8 x float> %result
}

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr <4 x double> @abs_f64x4(<4 x double> %x) #7 {
  %arg = bitcast <4 x double> %x to <4 x i64>
  %mask = lshr <4 x i64> <i64 -1, i64 -1, i64 -1, i64 -1>, <i64 1, i64 1, i64 1, i64 1>
  %masked = and <4 x i64> %arg, %mask
  %result = bitcast <4 x i64> %masked to <4 x double>
  ret <4 x double> %result
}

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr <8 x float> @fast_inverse_f32x8(<8 x float> %x) #7 {
  %approx = tail call <8 x float> @llvm.x86.avx.rcp.ps.256(<8 x float> %x)
  ret <8 x float> %approx
}

; Function Attrs: nounwind readnone
declare <8 x float> @llvm.x86.avx.rcp.ps.256(<8 x float>) #9

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr <8 x float> @fast_inverse_sqrt_f32x8(<8 x float> %x) #7 {
  %approx = tail call <8 x float> @llvm.x86.avx.rsqrt.ps.256(<8 x float> %x)
  ret <8 x float> %approx
}

; Function Attrs: nounwind readnone
declare <8 x float> @llvm.x86.avx.rsqrt.ps.256(<8 x float>) #9

; Function Attrs: alwaysinline nounwind readnone
define linkonce_odr <16 x i16> @packssdwx16(<16 x i32> %arg) #11 {
  %1 = shufflevector <16 x i32> %arg, <16 x i32> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 10, i32 11>
  %2 = shufflevector <16 x i32> %arg, <16 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 12, i32 13, i32 14, i32 15>
  %3 = tail call <16 x i16> @llvm.x86.avx2.packssdw(<8 x i32> %1, <8 x i32> %2)
  ret <16 x i16> %3
}

; Function Attrs: nounwind readnone
declare <16 x i16> @llvm.x86.avx2.packssdw(<8 x i32>, <8 x i32>) #9

; Function Attrs: alwaysinline nounwind readnone
define linkonce_odr <32 x i8> @packuswbx32(<32 x i16> %arg) #11 {
  %1 = shufflevector <32 x i16> %arg, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2 = shufflevector <32 x i16> %arg, <32 x i16> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3 = call <32 x i8> @llvm.x86.avx2.packuswb(<16 x i16> %1, <16 x i16> %2)
  ret <32 x i8> %3
}

; Function Attrs: nounwind readnone
declare <32 x i8> @llvm.x86.avx2.packuswb(<16 x i16>, <16 x i16>) #9

; Function Attrs: alwaysinline nounwind readnone
define linkonce_odr <32 x i8> @packsswbx32(<32 x i16> %arg) #11 {
  %1 = shufflevector <32 x i16> %arg, <32 x i16> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2 = shufflevector <32 x i16> %arg, <32 x i16> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3 = call <32 x i8> @llvm.x86.avx2.packsswb(<16 x i16> %1, <16 x i16> %2)
  ret <32 x i8> %3
}

; Function Attrs: nounwind readnone
declare <32 x i8> @llvm.x86.avx2.packsswb(<16 x i16>, <16 x i16>) #9

; Function Attrs: alwaysinline nounwind readnone
define linkonce_odr <16 x i16> @packusdwx16(<16 x i32> %arg) #11 {
  %1 = shufflevector <16 x i32> %arg, <16 x i32> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 10, i32 11>
  %2 = shufflevector <16 x i32> %arg, <16 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 12, i32 13, i32 14, i32 15>
  %3 = tail call <16 x i16> @llvm.x86.avx2.packusdw(<8 x i32> %1, <8 x i32> %2)
  ret <16 x i16> %3
}

; Function Attrs: nounwind readnone
declare <16 x i16> @llvm.x86.avx2.packusdw(<8 x i32>, <8 x i32>) #9

; Function Attrs: nounwind readnone
define linkonce_odr <32 x i8> @abs_i8x32(<32 x i8> %arg) #9 {
  %1 = sub <32 x i8> zeroinitializer, %arg
  %2 = icmp sgt <32 x i8> %arg, zeroinitializer
  %3 = select <32 x i1> %2, <32 x i8> %arg, <32 x i8> %1
  ret <32 x i8> %3
}

; Function Attrs: nounwind readnone
define linkonce_odr <16 x i16> @abs_i16x16(<16 x i16> %arg) #9 {
  %1 = sub <16 x i16> zeroinitializer, %arg
  %2 = icmp sgt <16 x i16> %arg, zeroinitializer
  %3 = select <16 x i1> %2, <16 x i16> %arg, <16 x i16> %1
  ret <16 x i16> %3
}

; Function Attrs: nounwind readnone
define linkonce_odr <8 x i32> @abs_i32x8(<8 x i32> %arg) #9 {
  %1 = sub <8 x i32> zeroinitializer, %arg
  %2 = icmp sgt <8 x i32> %arg, zeroinitializer
  %3 = select <8 x i1> %2, <8 x i32> %arg, <8 x i32> %1
  ret <8 x i32> %3
}

; Function Attrs: alwaysinline nounwind readnone uwtable
define linkonce_odr <16 x i16> @saturating_pmulhrswx16(<16 x i16> %a, <16 x i16> %b) #7 {
  %1 = tail call <16 x i16> @llvm.x86.avx2.pmul.hr.sw(<16 x i16> %a, <16 x i16> %b)
  %2 = icmp eq <16 x i16> %a, <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>
  %3 = icmp eq <16 x i16> %b, <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>
  %4 = and <16 x i1> %2, %3
  %5 = select <16 x i1> %4, <16 x i16> <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, <16 x i16> %1
  ret <16 x i16> %5
}

; Function Attrs: nounwind readnone
declare <16 x i16> @llvm.x86.avx2.pmul.hr.sw(<16 x i16>, <16 x i16>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <32 x i16> @vcvtne2ps2bf16x32(<32 x float> %arg) #15 {
  %1 = shufflevector <32 x float> %arg, <32 x float> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2 = shufflevector <32 x float> %arg, <32 x float> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3 = tail call <32 x i16> @llvm.x86.avx512bf16.cvtne2ps2bf16.512(<16 x float> %2, <16 x float> %1)
  ret <32 x i16> %3
}

; Function Attrs: nounwind readnone
declare <32 x i16> @llvm.x86.avx512bf16.cvtne2ps2bf16.512(<16 x float>, <16 x float>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <4 x i16> @vcvtneps2bf16x4(<4 x float> %arg) #15 {
  %1 = tail call <8 x i16> @llvm.x86.avx512bf16.mask.cvtneps2bf16.128(<4 x float> %arg, <8 x i16> undef, <4 x i1> <i1 true, i1 true, i1 true, i1 true>)
  %2 = shufflevector <8 x i16> %1, <8 x i16> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  ret <4 x i16> %2
}

; Function Attrs: nounwind readnone
declare <8 x i16> @llvm.x86.avx512bf16.mask.cvtneps2bf16.128(<4 x float>, <8 x i16>, <4 x i1>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <16 x float> @dpbf16psx16(<16 x float> %init, <32 x i16> %a, <32 x i16> %b) #15 {
  %1 = bitcast <32 x i16> %a to <16 x i32>
  %2 = bitcast <32 x i16> %b to <16 x i32>
  %3 = tail call <16 x float> @llvm.x86.avx512bf16.dpbf16ps.512(<16 x float> %init, <16 x i32> %1, <16 x i32> %2)
  ret <16 x float> %3
}

; Function Attrs: nounwind readnone
declare <16 x float> @llvm.x86.avx512bf16.dpbf16ps.512(<16 x float>, <16 x i32>, <16 x i32>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <8 x float> @dpbf16psx8(<8 x float> %init, <16 x i16> %a, <16 x i16> %b) #15 {
  %1 = bitcast <16 x i16> %a to <8 x i32>
  %2 = bitcast <16 x i16> %b to <8 x i32>
  %3 = tail call <8 x float> @llvm.x86.avx512bf16.dpbf16ps.256(<8 x float> %init, <8 x i32> %1, <8 x i32> %2)
  ret <8 x float> %3
}

; Function Attrs: nounwind readnone
declare <8 x float> @llvm.x86.avx512bf16.dpbf16ps.256(<8 x float>, <8 x i32>, <8 x i32>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <4 x float> @dpbf16psx4(<4 x float> %init, <8 x i16> %a, <8 x i16> %b) #15 {
  %1 = bitcast <8 x i16> %a to <4 x i32>
  %2 = bitcast <8 x i16> %b to <4 x i32>
  %3 = tail call <4 x float> @llvm.x86.avx512bf16.dpbf16ps.128(<4 x float> %init, <4 x i32> %1, <4 x i32> %2)
  ret <4 x float> %3
}

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.avx512bf16.dpbf16ps.128(<4 x float>, <4 x i32>, <4 x i32>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <16 x i32> @dpbusdx16(<16 x i32> %init, <64 x i8> %a, <64 x i8> %b) #15 {
  %1 = bitcast <64 x i8> %a to <16 x i32>
  %2 = bitcast <64 x i8> %b to <16 x i32>
  %3 = tail call <16 x i32> @llvm.x86.avx512.vpdpbusd.512(<16 x i32> %init, <16 x i32> %1, <16 x i32> %2)
  ret <16 x i32> %3
}

; Function Attrs: nounwind readnone
declare <16 x i32> @llvm.x86.avx512.vpdpbusd.512(<16 x i32>, <16 x i32>, <16 x i32>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <8 x i32> @dpbusdx8(<8 x i32> %init, <32 x i8> %a, <32 x i8> %b) #15 {
  %1 = bitcast <32 x i8> %a to <8 x i32>
  %2 = bitcast <32 x i8> %b to <8 x i32>
  %3 = tail call <8 x i32> @llvm.x86.avx512.vpdpbusd.256(<8 x i32> %init, <8 x i32> %1, <8 x i32> %2)
  ret <8 x i32> %3
}

; Function Attrs: nounwind readnone
declare <8 x i32> @llvm.x86.avx512.vpdpbusd.256(<8 x i32>, <8 x i32>, <8 x i32>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <4 x i32> @dpbusdx4(<4 x i32> %init, <16 x i8> %a, <16 x i8> %b) #15 {
  %1 = bitcast <16 x i8> %a to <4 x i32>
  %2 = bitcast <16 x i8> %b to <4 x i32>
  %3 = tail call <4 x i32> @llvm.x86.avx512.vpdpbusd.128(<4 x i32> %init, <4 x i32> %1, <4 x i32> %2)
  ret <4 x i32> %3
}

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.avx512.vpdpbusd.128(<4 x i32>, <4 x i32>, <4 x i32>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <16 x i32> @dpwssdx16(<16 x i32> %init, <32 x i16> %a, <32 x i16> %b) #15 {
  %1 = bitcast <32 x i16> %a to <16 x i32>
  %2 = bitcast <32 x i16> %b to <16 x i32>
  %3 = tail call <16 x i32> @llvm.x86.avx512.vpdpwssd.512(<16 x i32> %init, <16 x i32> %1, <16 x i32> %2)
  ret <16 x i32> %3
}

; Function Attrs: nounwind readnone
declare <16 x i32> @llvm.x86.avx512.vpdpwssd.512(<16 x i32>, <16 x i32>, <16 x i32>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <8 x i32> @dpwssdx8(<8 x i32> %init, <16 x i16> %a, <16 x i16> %b) #15 {
  %1 = bitcast <16 x i16> %a to <8 x i32>
  %2 = bitcast <16 x i16> %b to <8 x i32>
  %3 = tail call <8 x i32> @llvm.x86.avx512.vpdpwssd.256(<8 x i32> %init, <8 x i32> %1, <8 x i32> %2)
  ret <8 x i32> %3
}

; Function Attrs: nounwind readnone
declare <8 x i32> @llvm.x86.avx512.vpdpwssd.256(<8 x i32>, <8 x i32>, <8 x i32>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <4 x i32> @dpwssdx4(<4 x i32> %init, <8 x i16> %a, <8 x i16> %b) #15 {
  %1 = bitcast <8 x i16> %a to <4 x i32>
  %2 = bitcast <8 x i16> %b to <4 x i32>
  %3 = tail call <4 x i32> @llvm.x86.avx512.vpdpwssd.128(<4 x i32> %init, <4 x i32> %1, <4 x i32> %2)
  ret <4 x i32> %3
}

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.avx512.vpdpwssd.128(<4 x i32>, <4 x i32>, <4 x i32>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <16 x i32> @dpbusdsx16(<16 x i32> %init, <64 x i8> %a, <64 x i8> %b) #15 {
  %1 = bitcast <64 x i8> %a to <16 x i32>
  %2 = bitcast <64 x i8> %b to <16 x i32>
  %3 = tail call <16 x i32> @llvm.x86.avx512.vpdpbusds.512(<16 x i32> %init, <16 x i32> %1, <16 x i32> %2)
  ret <16 x i32> %3
}

; Function Attrs: nounwind readnone
declare <16 x i32> @llvm.x86.avx512.vpdpbusds.512(<16 x i32>, <16 x i32>, <16 x i32>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <8 x i32> @dpbusdsx8(<8 x i32> %init, <32 x i8> %a, <32 x i8> %b) #15 {
  %1 = bitcast <32 x i8> %a to <8 x i32>
  %2 = bitcast <32 x i8> %b to <8 x i32>
  %3 = tail call <8 x i32> @llvm.x86.avx512.vpdpbusds.256(<8 x i32> %init, <8 x i32> %1, <8 x i32> %2)
  ret <8 x i32> %3
}

; Function Attrs: nounwind readnone
declare <8 x i32> @llvm.x86.avx512.vpdpbusds.256(<8 x i32>, <8 x i32>, <8 x i32>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <4 x i32> @dpbusdsx4(<4 x i32> %init, <16 x i8> %a, <16 x i8> %b) #15 {
  %1 = bitcast <16 x i8> %a to <4 x i32>
  %2 = bitcast <16 x i8> %b to <4 x i32>
  %3 = tail call <4 x i32> @llvm.x86.avx512.vpdpbusds.128(<4 x i32> %init, <4 x i32> %1, <4 x i32> %2)
  ret <4 x i32> %3
}

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.avx512.vpdpbusds.128(<4 x i32>, <4 x i32>, <4 x i32>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <16 x i32> @dpwssdsx16(<16 x i32> %init, <32 x i16> %a, <32 x i16> %b) #15 {
  %1 = bitcast <32 x i16> %a to <16 x i32>
  %2 = bitcast <32 x i16> %b to <16 x i32>
  %3 = tail call <16 x i32> @llvm.x86.avx512.vpdpwssds.512(<16 x i32> %init, <16 x i32> %1, <16 x i32> %2)
  ret <16 x i32> %3
}

; Function Attrs: nounwind readnone
declare <16 x i32> @llvm.x86.avx512.vpdpwssds.512(<16 x i32>, <16 x i32>, <16 x i32>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <8 x i32> @dpwssdsx8(<8 x i32> %init, <16 x i16> %a, <16 x i16> %b) #15 {
  %1 = bitcast <16 x i16> %a to <8 x i32>
  %2 = bitcast <16 x i16> %b to <8 x i32>
  %3 = tail call <8 x i32> @llvm.x86.avx512.vpdpwssds.256(<8 x i32> %init, <8 x i32> %1, <8 x i32> %2)
  ret <8 x i32> %3
}

; Function Attrs: nounwind readnone
declare <8 x i32> @llvm.x86.avx512.vpdpwssds.256(<8 x i32>, <8 x i32>, <8 x i32>) #9

; Function Attrs: alwaysinline nounwind
define linkonce_odr <4 x i32> @dpwssdsx4(<4 x i32> %init, <8 x i16> %a, <8 x i16> %b) #15 {
  %1 = bitcast <8 x i16> %a to <4 x i32>
  %2 = bitcast <8 x i16> %b to <4 x i32>
  %3 = tail call <4 x i32> @llvm.x86.avx512.vpdpwssds.128(<4 x i32> %init, <4 x i32> %1, <4 x i32> %2)
  ret <4 x i32> %3
}

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.avx512.vpdpwssds.128(<4 x i32>, <4 x i32>, <4 x i32>) #9

; Function Attrs: nounwind
define weak i32 @halide_default_can_use_target_features(i32 %count, i64* %features) #4 {
entry:
  %tmp = alloca %"struct.Halide::Runtime::Internal::CpuFeatures", align 8
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal36halide_cpu_features_initialized_lockE) #17
  %0 = load i8, i8* @_ZN6Halide7Runtime8Internal31halide_cpu_features_initializedE, align 1, !tbaa !15, !range !17
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::CpuFeatures"* %tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #18
  call void @_ZN6Halide7Runtime8Internal23halide_get_cpu_featuresEv(%"struct.Halide::Runtime::Internal::CpuFeatures"* nonnull sret(%"struct.Halide::Runtime::Internal::CpuFeatures") align 8 %tmp) #17
  %call = call i8* @memcpy(i8* bitcast ([4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE to i8*), i8* nonnull %1, i64 32) #17
  store i8 1, i8* @_ZN6Halide7Runtime8Internal31halide_cpu_features_initializedE, align 1, !tbaa !15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #18
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal36halide_cpu_features_initialized_lockE) #17
  %cmp.not = icmp eq i32 %count, 2
  br i1 %cmp.not, label %if.end2, label %if.then1

if.then1:                                         ; preds = %if.end
  call void @halide_error(i8* null, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.197, i64 0, i64 0)) #17
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.end
  %2 = load i64, i64* %features, align 8, !tbaa !110
  %3 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i64 0, i64 0), align 8, !tbaa !110
  %and = and i64 %3, %2
  %cmp6.not = icmp eq i64 %and, 0
  br i1 %cmp6.not, label %for.inc.critedge, label %if.then7

if.then7:                                         ; preds = %if.end2
  %4 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i64 0, i64 2), align 8, !tbaa !110
  %and10 = and i64 %4, %and
  %cmp11.not = icmp eq i64 %and10, %and
  br i1 %cmp11.not, label %for.inc.critedge, label %cleanup15

for.inc.critedge:                                 ; preds = %if.then7, %if.end2
  %arrayidx.1 = getelementptr inbounds i64, i64* %features, i64 1
  %5 = load i64, i64* %arrayidx.1, align 8, !tbaa !110
  %6 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i64 0, i64 1), align 8, !tbaa !110
  %and.1 = and i64 %6, %5
  %cmp6.not.1 = icmp eq i64 %and.1, 0
  br i1 %cmp6.not.1, label %for.inc.critedge.1, label %if.then7.1

cleanup15:                                        ; preds = %for.inc.critedge.1, %if.then7.1, %if.then7
  %cmp3.lcssa = phi i32 [ 0, %if.then7 ], [ 0, %if.then7.1 ], [ 1, %for.inc.critedge.1 ]
  ret i32 %cmp3.lcssa

if.then7.1:                                       ; preds = %for.inc.critedge
  %7 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i64 0, i64 3), align 8, !tbaa !110
  %and10.1 = and i64 %7, %and.1
  %cmp11.not.1 = icmp eq i64 %and10.1, %and.1
  br i1 %cmp11.not.1, label %for.inc.critedge.1, label %cleanup15

for.inc.critedge.1:                               ; preds = %if.then7.1, %for.inc.critedge
  br label %cleanup15
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i32, i64*)* @halide_set_custom_can_use_target_features(i32 (i32, i64*)* %fn) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i32, i64*)*, i32 (i32, i64*)** @_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE, align 8, !tbaa !10
  store i32 (i32, i64*)* %fn, i32 (i32, i64*)** @_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE, align 8, !tbaa !10
  ret i32 (i32, i64*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_can_use_target_features(i32 %count, i64* %features) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i32, i64*)*, i32 (i32, i64*)** @_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE, align 8, !tbaa !10
  %call = tail call i32 %0(i32 %count, i64* %features) #17
  ret i32 %call
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal23halide_get_cpu_featuresEv(%"struct.Halide::Runtime::Internal::CpuFeatures"* noalias sret(%"struct.Halide::Runtime::Internal::CpuFeatures") align 8 %agg.result) local_unnamed_addr #4 {
entry:
  %info = alloca [4 x i32], align 4
  %info2 = alloca [4 x i32], align 4
  %info3 = alloca [4 x i32], align 4
  %arrayidx.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::CpuFeatures", %"struct.Halide::Runtime::Internal::CpuFeatures"* %agg.result, i64 0, i32 0, i64 0
  %arrayidx3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::CpuFeatures", %"struct.Halide::Runtime::Internal::CpuFeatures"* %agg.result, i64 0, i32 1, i64 0
  store i64 0, i64* %arrayidx3.i, align 8, !tbaa !110
  %arrayidx.1.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::CpuFeatures", %"struct.Halide::Runtime::Internal::CpuFeatures"* %agg.result, i64 0, i32 0, i64 1
  store i64 0, i64* %arrayidx.1.i, align 8, !tbaa !110
  %arrayidx3.1.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::CpuFeatures", %"struct.Halide::Runtime::Internal::CpuFeatures"* %agg.result, i64 0, i32 1, i64 1
  store i64 0, i64* %arrayidx3.1.i, align 8, !tbaa !110
  store i64 34084860461808, i64* %arrayidx.i, align 8, !tbaa !110
  %0 = bitcast [4 x i32]* %info to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #18
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %info, i64 0, i64 0
  store i32 1, i32* %arraydecay, align 4, !tbaa !73
  %arrayidx1.i110 = getelementptr inbounds [4 x i32], [4 x i32]* %info, i64 0, i64 1
  store i32 0, i32* %arrayidx1.i110, align 4, !tbaa !73
  call void @x64_cpuid_halide(i32* nonnull %arraydecay) #17
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %info, i64 0, i64 2
  %1 = load i32, i32* %arrayidx, align 4, !tbaa !73
  %and = lshr i32 %1, 15
  %2 = and i32 %and, 16
  %and2 = lshr i32 %1, 23
  %3 = and i32 %and2, 32
  %4 = or i32 %3, %2
  %and6 = lshr i32 %1, 20
  %5 = and i32 %and6, 512
  %6 = or i32 %5, %4
  %and14 = lshr i32 %1, 5
  %7 = and i32 %and14, 128
  %8 = or i32 %7, %6
  %9 = zext i32 %8 to i64
  %10 = and i32 %1, 805834752
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %entry
  store i64 %9, i64* %arrayidx3.i, align 8, !tbaa !110
  br label %13

13:                                               ; preds = %12, %entry
  %14 = and i32 %1, 1879048192
  %.not = icmp eq i32 %14, 1879048192
  br i1 %.not, label %if.then30, label %if.end67

if.then30:                                        ; preds = %13
  %15 = bitcast [4 x i32]* %info2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #18
  %arraydecay31 = getelementptr inbounds [4 x i32], [4 x i32]* %info2, i64 0, i64 0
  store i32 7, i32* %arraydecay31, align 4, !tbaa !73
  %arrayidx1.i99 = getelementptr inbounds [4 x i32], [4 x i32]* %info2, i64 0, i64 1
  store i32 0, i32* %arrayidx1.i99, align 4, !tbaa !73
  call void @x64_cpuid_halide(i32* nonnull %arraydecay31) #17
  %16 = load i32, i32* %arrayidx1.i99, align 4, !tbaa !73
  %and33 = and i32 %16, 32
  %cmp34.not = icmp eq i32 %and33, 0
  br i1 %cmp34.not, label %if.end36, label %if.then35

if.then35:                                        ; preds = %if.then30
  %or.i98 = or i64 %9, 64
  store i64 %or.i98, i64* %arrayidx3.i, align 8, !tbaa !110
  br label %if.end36

if.end36:                                         ; preds = %if.then35, %if.then30
  %17 = phi i64 [ %or.i98, %if.then35 ], [ %9, %if.then30 ]
  %and38 = and i32 %16, 268500992
  %cmp39 = icmp eq i32 %and38, 268500992
  br i1 %cmp39, label %if.then40, label %if.end66

if.then40:                                        ; preds = %if.end36
  %and42 = and i32 %16, 469827584
  %cmp43 = icmp eq i32 %and42, 469827584
  %spec.select.v = select i1 %cmp43, i64 3298534883328, i64 1099511627776
  %spec.select = or i64 %17, %spec.select.v
  %and47 = and i32 %16, -805109760
  %cmp48 = icmp eq i32 %and47, -805109760
  %or.i92 = or i64 %spec.select, 4398046511104
  %spec.select130 = select i1 %cmp48, i64 %or.i92, i64 %spec.select
  store i64 %spec.select130, i64* %arrayidx3.i, align 8, !tbaa !110
  %and52 = and i32 %16, -803012608
  %cmp53 = icmp eq i32 %and52, -803012608
  br i1 %cmp53, label %if.then54, label %if.end66

if.then54:                                        ; preds = %if.then40
  %or.i90 = or i64 %spec.select130, 8796093022208
  store i64 %or.i90, i64* %arrayidx3.i, align 8, !tbaa !110
  %18 = bitcast [4 x i32]* %info3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #18
  %arraydecay55 = getelementptr inbounds [4 x i32], [4 x i32]* %info3, i64 0, i64 0
  store i32 7, i32* %arraydecay55, align 4, !tbaa !73
  %arrayidx1.i = getelementptr inbounds [4 x i32], [4 x i32]* %info3, i64 0, i64 1
  store i32 1, i32* %arrayidx1.i, align 4, !tbaa !73
  call void @x64_cpuid_halide(i32* nonnull %arraydecay55) #17
  %arrayidx56 = getelementptr inbounds [4 x i32], [4 x i32]* %info2, i64 0, i64 2
  %19 = load i32, i32* %arrayidx56, align 4, !tbaa !73
  %and57 = and i32 %19, 2048
  %cmp58.not = icmp eq i32 %and57, 0
  br i1 %cmp58.not, label %if.end64, label %land.lhs.true59

land.lhs.true59:                                  ; preds = %if.then54
  %20 = load i32, i32* %arraydecay55, align 4, !tbaa !73
  %and61 = and i32 %20, 32
  %cmp62.not = icmp eq i32 %and61, 0
  br i1 %cmp62.not, label %if.end64, label %if.then63

if.then63:                                        ; preds = %land.lhs.true59
  %or.i = or i64 %spec.select130, 26388279066624
  store i64 %or.i, i64* %arrayidx3.i, align 8, !tbaa !110
  br label %if.end64

if.end64:                                         ; preds = %if.then63, %land.lhs.true59, %if.then54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #18
  br label %if.end66

if.end66:                                         ; preds = %if.end64, %if.then40, %if.end36
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #18
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #18
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_use_jit_module() local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_release_jit_module() local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <32 x i8> @llvm.sadd.sat.v32i8(<32 x i8>, <32 x i8>) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <16 x i8> @llvm.sadd.sat.v16i8(<16 x i8>, <16 x i8>) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <8 x i8> @llvm.sadd.sat.v8i8(<8 x i8>, <8 x i8>) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <32 x i8> @llvm.ssub.sat.v32i8(<32 x i8>, <32 x i8>) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <16 x i8> @llvm.ssub.sat.v16i8(<16 x i8>, <16 x i8>) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <8 x i8> @llvm.ssub.sat.v8i8(<8 x i8>, <8 x i8>) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <16 x i16> @llvm.sadd.sat.v16i16(<16 x i16>, <16 x i16>) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <8 x i16> @llvm.sadd.sat.v8i16(<8 x i16>, <8 x i16>) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <16 x i16> @llvm.ssub.sat.v16i16(<16 x i16>, <16 x i16>) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <8 x i16> @llvm.ssub.sat.v8i16(<8 x i16>, <8 x i16>) #8

; Function Attrs: nounwind readnone
declare <64 x i8> @llvm.x86.avx512.pavg.b.512(<64 x i8>, <64 x i8>) #9

; Function Attrs: nounwind readnone
declare <32 x i8> @llvm.x86.avx2.pavg.b(<32 x i8>, <32 x i8>) #9

; Function Attrs: nounwind readnone
declare <16 x i8> @llvm.x86.sse2.pavg.b(<16 x i8>, <16 x i8>) #9

; Function Attrs: nounwind readnone
declare <32 x i16> @llvm.x86.avx512.pavg.w.512(<32 x i16>, <32 x i16>) #9

; Function Attrs: nounwind readnone
declare <16 x i16> @llvm.x86.avx2.pavg.w(<16 x i16>, <16 x i16>) #9

; Function Attrs: nounwind readnone
declare <8 x i16> @llvm.x86.sse2.pavg.w(<8 x i16>, <8 x i16>) #9

; Function Attrs: nounwind readnone
declare <16 x i16> @llvm.x86.avx2.pmulh.w(<16 x i16>, <16 x i16>) #9

; Function Attrs: nounwind readnone
declare <16 x i16> @llvm.x86.avx2.pmulhu.w(<16 x i16>, <16 x i16>) #9

; Function Attrs: nounwind readnone
declare <8 x i16> @llvm.x86.sse2.pmulh.w(<8 x i16>, <8 x i16>) #9

; Function Attrs: nounwind readnone
declare <8 x i16> @llvm.x86.sse2.pmulhu.w(<8 x i16>, <8 x i16>) #9

; Function Attrs: nounwind readnone
declare <16 x i16> @llvm.x86.avx2.pmadd.ub.sw(<32 x i8>, <32 x i8>) #9

; Function Attrs: nounwind readnone
declare <8 x i16> @llvm.x86.ssse3.pmadd.ub.sw.128(<16 x i8>, <16 x i8>) #9

; Function Attrs: nounwind readnone
declare <16 x i32> @llvm.x86.avx512.pmaddw.d.512(<32 x i16>, <32 x i16>) #9

; Function Attrs: nounwind readnone
declare <8 x i32> @llvm.x86.avx2.pmadd.wd(<16 x i16>, <16 x i16>) #9

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.sse2.pmadd.wd(<8 x i16>, <8 x i16>) #9

define i32 @convolution(%struct.halide_buffer_t* noalias %IMG.buffer, %struct.halide_buffer_t* noalias %Filter.buffer, %struct.halide_buffer_t* noalias %Output.buffer) #16 {
entry:
  call void @pimInitDeviceWrapper()
  %0 = alloca [12 x i32], align 4
  %1 = alloca [12 x i32], align 4
  %2 = alloca [12 x i32], align 4
  %3 = alloca [12 x i32], align 4
  %4 = alloca [12 x i32], align 4
  %5 = alloca [12 x i32], align 4
  %6 = ptrtoint %struct.halide_buffer_t* %Output.buffer to i64
  %7 = icmp eq i64 %6, 0
  %8 = xor i1 %7, true
  br i1 %8, label %"assert succeeded", label %"assert failed", !prof !372

"assert failed":                                  ; preds = %entry
  %9 = call i32 @halide_error_buffer_argument_is_null(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i32 0, i32 0)) #18
  br label %destructor_block

"assert succeeded":                               ; preds = %entry
  %10 = ptrtoint %struct.halide_buffer_t* %IMG.buffer to i64
  %11 = icmp eq i64 %10, 0
  %12 = xor i1 %11, true
  br i1 %12, label %"assert succeeded2", label %"assert failed1", !prof !372

destructor_block:                                 ; preds = %after_bb133, %"assert failed79", %"assert failed77", %"assert failed75", %"assert failed3", %"assert failed1", %"assert failed"
  %13 = phi i32 [ %9, %"assert failed" ], [ %14, %"assert failed1" ], [ %18, %"assert failed3" ], [ %2897, %"assert failed75" ], [ %2901, %"assert failed77" ], [ %2905, %"assert failed79" ], [ 0, %after_bb133 ]
  call void @pimShowStatsWrapper()
  ret i32 %13

"assert failed1":                                 ; preds = %"assert succeeded"
  %14 = call i32 @halide_error_buffer_argument_is_null(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i32 0, i32 0)) #18
  br label %destructor_block

"assert succeeded2":                              ; preds = %"assert succeeded"
  %15 = ptrtoint %struct.halide_buffer_t* %Filter.buffer to i64
  %16 = icmp eq i64 %15, 0
  %17 = xor i1 %16, true
  br i1 %17, label %"assert succeeded4", label %"assert failed3", !prof !372

"assert failed3":                                 ; preds = %"assert succeeded2"
  %18 = call i32 @halide_error_buffer_argument_is_null(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i32 0, i32 0)) #18
  br label %destructor_block

"assert succeeded4":                              ; preds = %"assert succeeded2"
  %Filter = call i8* @_halide_buffer_get_host(%struct.halide_buffer_t* %Filter.buffer) #18
  %Filter.type = call i32 @_halide_buffer_get_type(%struct.halide_buffer_t* %Filter.buffer) #18
  %Filter.device_dirty = call i1 @_halide_buffer_get_device_dirty(%struct.halide_buffer_t* %Filter.buffer) #18
  %Filter.dimensions = call i32 @_halide_buffer_get_dimensions(%struct.halide_buffer_t* %Filter.buffer) #18
  %Filter.min.0 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %Filter.buffer, i32 0) #18
  %Filter.extent.0 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %Filter.buffer, i32 0) #18
  %Filter.stride.0 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %Filter.buffer, i32 0) #18
  %Filter.min.1 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %Filter.buffer, i32 1) #18
  %Filter.extent.1 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %Filter.buffer, i32 1) #18
  %Filter.stride.1 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %Filter.buffer, i32 1) #18
  %Filter.min.2 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %Filter.buffer, i32 2) #18
  %Filter.extent.2 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %Filter.buffer, i32 2) #18
  %Filter.stride.2 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %Filter.buffer, i32 2) #18
  %IMG = call i8* @_halide_buffer_get_host(%struct.halide_buffer_t* %IMG.buffer) #18
  %IMG.type = call i32 @_halide_buffer_get_type(%struct.halide_buffer_t* %IMG.buffer) #18
  %IMG.device_dirty = call i1 @_halide_buffer_get_device_dirty(%struct.halide_buffer_t* %IMG.buffer) #18
  %IMG.dimensions = call i32 @_halide_buffer_get_dimensions(%struct.halide_buffer_t* %IMG.buffer) #18
  %b8 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %IMG.buffer, i32 0) #18
  %IMG.extent.0 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %IMG.buffer, i32 0) #18
  %IMG.stride.0 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %IMG.buffer, i32 0) #18
  %b14 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %IMG.buffer, i32 1) #18
  %IMG.extent.1 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %IMG.buffer, i32 1) #18
  %IMG.stride.1 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %IMG.buffer, i32 1) #18
  %a33 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %IMG.buffer, i32 2) #18
  %b32 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %IMG.buffer, i32 2) #18
  %IMG.stride.2 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %IMG.buffer, i32 2) #18
  %Output = call i8* @_halide_buffer_get_host(%struct.halide_buffer_t* %Output.buffer) #18
  %Output.type = call i32 @_halide_buffer_get_type(%struct.halide_buffer_t* %Output.buffer) #18
  %Output.device_dirty = call i1 @_halide_buffer_get_device_dirty(%struct.halide_buffer_t* %Output.buffer) #18
  %Output.dimensions = call i32 @_halide_buffer_get_dimensions(%struct.halide_buffer_t* %Output.buffer) #18
  %Output.min.0 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %Output.buffer, i32 0) #18
  %b22 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %Output.buffer, i32 0) #18
  %Output.stride.0 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %Output.buffer, i32 0) #18
  %Output.min.1 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %Output.buffer, i32 1) #18
  %Output.extent.1 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %Output.buffer, i32 1) #18
  %Output.stride.1 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %Output.buffer, i32 1) #18
  %Output.min.2 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %Output.buffer, i32 2) #18
  %Output.extent.2 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %Output.buffer, i32 2) #18
  %Output.stride.2 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %Output.buffer, i32 2) #18
  %b7 = add nsw i32 %IMG.extent.0, %b8
  %a2 = sub nsw i32 -1, %b22
  %19 = icmp sgt i32 %b22, 1
  %20 = select i1 %19, i32 %b22, i32 1
  %b4 = add nsw i32 %20, -1
  %21 = icmp sgt i32 %a2, %b4
  %22 = select i1 %21, i32 %a2, i32 %b4
  %23 = ashr i32 %Filter.extent.0, 1
  %24 = add nsw i32 %22, %23
  %a1 = add nsw i32 %24, %Output.min.0
  %b3 = add nsw i32 %b7, -1
  %25 = icmp sgt i32 %b3, %a1
  %a0 = select i1 %25, i32 %a1, i32 %b3
  %26 = icmp sgt i32 %a0, %b8
  %27 = select i1 %26, i32 %a0, i32 %b8
  %28 = ashr i32 %Filter.extent.0, 1
  %29 = add nsw i32 %28, %Output.min.0
  %30 = sub nsw i32 %29, %Filter.extent.0
  %a5 = add nsw i32 %30, 2
  %31 = icmp sgt i32 %b7, %a5
  %32 = select i1 %31, i32 %a5, i32 %b7
  %a4 = add nsw i32 %32, -1
  %33 = icmp sgt i32 %a4, %b8
  %34 = select i1 %33, i32 %a4, i32 %b8
  %IMG.extent.0.required.s = sub nsw i32 %27, %34
  %35 = ashr i32 %Filter.extent.0, 1
  %36 = add nsw i32 %35, %Output.min.0
  %37 = sub nsw i32 %36, %Filter.extent.0
  %a7 = add nsw i32 %37, 2
  %b9 = add nsw i32 %IMG.extent.0, %b8
  %38 = icmp sgt i32 %b9, %a7
  %39 = select i1 %38, i32 %a7, i32 %b9
  %a6 = add nsw i32 %39, -1
  %40 = icmp sgt i32 %a6, %b8
  %IMG.min.0.required = select i1 %40, i32 %a6, i32 %b8
  %t180 = icmp sgt i32 %b22, 0
  %41 = mul nsw i32 %b22, %Output.extent.1
  %42 = icmp sgt i32 1, %41
  %t188 = select i1 %42, i32 -1, i32 0
  %43 = icmp eq i32 %b22, 0
  %t189 = select i1 %43, i32 -1, i32 0
  %44 = icmp sgt i32 0, %b22
  %t190 = select i1 %44, i32 -1, i32 0
  %45 = mul nsw i32 %b22, %Output.extent.1
  %46 = add nsw i32 %45, -1
  %47 = ashr i32 %46, 5
  %48 = mul nsw i32 %47, 32
  %49 = sub nsw i32 %48, %t188
  %50 = add nsw i32 %49, 31
  %51 = sub nsw i32 %b22, %t189
  %52 = sdiv i32 %50, %51
  %53 = xor i32 %t190, -1
  %54 = sub nsw i32 %53, %t190
  %55 = and i32 %t188, %54
  %56 = add nsw i32 %52, %55
  %57 = xor i32 %t189, -1
  %t181 = and i32 %56, %57
  %b13 = add nsw i32 %IMG.extent.1, %b14
  %58 = select i1 %t180, i32 %t181, i32 0
  %59 = ashr i32 %Filter.extent.1, 1
  %60 = add nsw i32 %58, %59
  %a9 = add nsw i32 %60, %Output.min.1
  %b11 = add nsw i32 %b13, -1
  %61 = icmp sgt i32 %b11, %a9
  %a8 = select i1 %61, i32 %a9, i32 %b11
  %62 = icmp sgt i32 %a8, %b14
  %63 = select i1 %62, i32 %a8, i32 %b14
  %64 = select i1 %t180, i32 0, i32 %t181
  %65 = ashr i32 %Filter.extent.1, 1
  %66 = add nsw i32 %64, %65
  %67 = add nsw i32 %66, %Output.min.1
  %68 = sub nsw i32 %67, %Filter.extent.1
  %a11 = add nsw i32 %68, 2
  %69 = icmp sgt i32 %b13, %a11
  %70 = select i1 %69, i32 %a11, i32 %b13
  %a10 = add nsw i32 %70, -1
  %71 = icmp sgt i32 %a10, %b14
  %72 = select i1 %71, i32 %a10, i32 %b14
  %IMG.extent.1.required.s = sub nsw i32 %63, %72
  %73 = icmp sgt i32 %b22, 0
  %74 = mul nsw i32 %b22, %Output.extent.1
  %75 = icmp sgt i32 1, %74
  %t192 = select i1 %75, i32 -1, i32 0
  %76 = icmp eq i32 %b22, 0
  %t193 = select i1 %76, i32 -1, i32 0
  %77 = icmp sgt i32 0, %b22
  %t194 = select i1 %77, i32 -1, i32 0
  %78 = mul nsw i32 %b22, %Output.extent.1
  %79 = add nsw i32 %78, -1
  %80 = ashr i32 %79, 5
  %81 = mul nsw i32 %80, 32
  %82 = sub nsw i32 %81, %t192
  %83 = add nsw i32 %82, 31
  %84 = sub nsw i32 %b22, %t193
  %85 = sdiv i32 %83, %84
  %86 = xor i32 %t194, -1
  %87 = sub nsw i32 %86, %t194
  %88 = and i32 %t192, %87
  %89 = add nsw i32 %85, %88
  %90 = xor i32 %t193, -1
  %91 = and i32 %89, %90
  %92 = select i1 %73, i32 0, i32 %91
  %93 = ashr i32 %Filter.extent.1, 1
  %94 = add nsw i32 %92, %93
  %95 = add nsw i32 %94, %Output.min.1
  %96 = sub nsw i32 %95, %Filter.extent.1
  %a13 = add nsw i32 %96, 2
  %b15 = add nsw i32 %IMG.extent.1, %b14
  %97 = icmp sgt i32 %b15, %a13
  %98 = select i1 %97, i32 %a13, i32 %b15
  %a12 = add nsw i32 %98, -1
  %99 = icmp sgt i32 %a12, %b14
  %IMG.min.1.required = select i1 %99, i32 %a12, i32 %b14
  %100 = icmp sgt i32 0, %a33
  %101 = select i1 %100, i32 %a33, i32 0
  %a14 = add nsw i32 %101, %b32
  %b16 = add nsw i32 %a33, 1
  %102 = icmp sgt i32 %a14, %b16
  %103 = select i1 %102, i32 %a14, i32 %b16
  %a17 = add nsw i32 %b32, %a33
  %104 = icmp sgt i32 1, %a17
  %105 = select i1 %104, i32 %a17, i32 1
  %a16 = add nsw i32 %105, -1
  %106 = icmp sgt i32 %a16, %a33
  %107 = select i1 %106, i32 %a16, i32 %a33
  %IMG.extent.2.required = sub nsw i32 %103, %107
  %a19 = add nsw i32 %b32, %a33
  %108 = icmp sgt i32 1, %a19
  %109 = select i1 %108, i32 %a19, i32 1
  %a18 = add nsw i32 %109, -1
  %110 = icmp sgt i32 %a18, %a33
  %IMG.min.2.required = select i1 %110, i32 %a18, i32 %a33
  %111 = add nsw i32 %IMG.extent.0.required.s, 1
  %112 = add nsw i32 %IMG.extent.1.required.s, 1
  %IMG.stride.2.required = mul nsw i32 %111, %112
  %a20 = sub nsw i32 0, %b22
  %113 = icmp sgt i32 %a20, %b22
  %a28 = select i1 %113, i32 %a20, i32 %b22
  %t183 = icmp sgt i32 %b22, 0
  %114 = mul nsw i32 %b22, %Output.extent.1
  %115 = icmp sgt i32 1, %114
  %t196 = select i1 %115, i32 -1, i32 0
  %116 = icmp eq i32 %b22, 0
  %t197 = select i1 %116, i32 -1, i32 0
  %117 = icmp sgt i32 0, %b22
  %t198 = select i1 %117, i32 -1, i32 0
  %118 = mul nsw i32 %b22, %Output.extent.1
  %119 = add nsw i32 %118, -1
  %120 = ashr i32 %119, 5
  %121 = mul nsw i32 %120, 32
  %122 = sub nsw i32 %121, %t196
  %123 = add nsw i32 %122, 31
  %124 = sub nsw i32 %b22, %t197
  %125 = sdiv i32 %123, %124
  %126 = xor i32 %t198, -1
  %127 = sub nsw i32 %126, %t198
  %128 = and i32 %t196, %127
  %129 = add nsw i32 %125, %128
  %130 = xor i32 %t197, -1
  %t184 = and i32 %129, %130
  %a21 = select i1 %t183, i32 %t184, i32 0
  %b23 = add nsw i32 %Output.extent.1, -1
  %131 = icmp sgt i32 %a21, %b23
  %132 = select i1 %131, i32 %a21, i32 %b23
  %a22 = select i1 %t183, i32 0, i32 %t184
  %133 = icmp sgt i32 0, %a22
  %134 = select i1 %133, i32 %a22, i32 0
  %Output.extent.1.required.s = sub nsw i32 %132, %134
  %135 = icmp sgt i32 %b22, 0
  %136 = mul nsw i32 %b22, %Output.extent.1
  %137 = icmp sgt i32 1, %136
  %t200 = select i1 %137, i32 -1, i32 0
  %138 = icmp eq i32 %b22, 0
  %t201 = select i1 %138, i32 -1, i32 0
  %139 = icmp sgt i32 0, %b22
  %t202 = select i1 %139, i32 -1, i32 0
  %140 = mul nsw i32 %b22, %Output.extent.1
  %141 = add nsw i32 %140, -1
  %142 = ashr i32 %141, 5
  %143 = mul nsw i32 %142, 32
  %144 = sub nsw i32 %143, %t200
  %145 = add nsw i32 %144, 31
  %146 = sub nsw i32 %b22, %t201
  %147 = sdiv i32 %145, %146
  %148 = xor i32 %t202, -1
  %149 = sub nsw i32 %148, %t202
  %150 = and i32 %t200, %149
  %151 = add nsw i32 %147, %150
  %152 = xor i32 %t201, -1
  %153 = and i32 %151, %152
  %a29 = select i1 %135, i32 0, i32 %153
  %154 = icmp sgt i32 %a28, 1
  %155 = select i1 %154, i32 %a28, i32 1
  %156 = add nsw i32 %Output.extent.1.required.s, 1
  %Output.stride.2.required = mul nsw i32 %155, %156
  %157 = call i1 @_halide_buffer_is_bounds_query(%struct.halide_buffer_t* %Filter.buffer) #18
  br i1 %157, label %then_bb, label %next_bb

after_bb:                                         ; preds = %next_bb, %then_bb
  %158 = call i1 @_halide_buffer_is_bounds_query(%struct.halide_buffer_t* %IMG.buffer) #18
  br i1 %158, label %then_bb6, label %next_bb7

then_bb:                                          ; preds = %"assert succeeded4"
  %159 = call %struct.halide_dimension_t* @_halide_buffer_get_shape(%struct.halide_buffer_t* %Filter.buffer) #18
  %160 = mul nsw i32 %Filter.extent.0, %Filter.extent.1
  %161 = getelementptr inbounds [12 x i32], [12 x i32]* %5, i32 0, i32 0
  store i32 0, i32* %161, align 4
  %162 = getelementptr inbounds [12 x i32], [12 x i32]* %5, i32 0, i32 1
  store i32 %Filter.extent.0, i32* %162, align 4
  %163 = getelementptr inbounds [12 x i32], [12 x i32]* %5, i32 0, i32 2
  store i32 1, i32* %163, align 4
  %164 = getelementptr inbounds [12 x i32], [12 x i32]* %5, i32 0, i32 3
  store i32 0, i32* %164, align 4
  %165 = getelementptr inbounds [12 x i32], [12 x i32]* %5, i32 0, i32 4
  store i32 0, i32* %165, align 4
  %166 = getelementptr inbounds [12 x i32], [12 x i32]* %5, i32 0, i32 5
  store i32 %Filter.extent.1, i32* %166, align 4
  %167 = getelementptr inbounds [12 x i32], [12 x i32]* %5, i32 0, i32 6
  store i32 %Filter.extent.0, i32* %167, align 4
  %168 = getelementptr inbounds [12 x i32], [12 x i32]* %5, i32 0, i32 7
  store i32 0, i32* %168, align 4
  %169 = getelementptr inbounds [12 x i32], [12 x i32]* %5, i32 0, i32 8
  store i32 %Output.min.2, i32* %169, align 4
  %170 = getelementptr inbounds [12 x i32], [12 x i32]* %5, i32 0, i32 9
  store i32 %Output.extent.2, i32* %170, align 4
  %171 = getelementptr inbounds [12 x i32], [12 x i32]* %5, i32 0, i32 10
  store i32 %160, i32* %171, align 4
  %172 = getelementptr inbounds [12 x i32], [12 x i32]* %5, i32 0, i32 11
  store i32 0, i32* %172, align 4
  %173 = bitcast [12 x i32]* %5 to %struct.halide_dimension_t*
  %174 = call %struct.halide_buffer_t* @_halide_buffer_init(%struct.halide_buffer_t* %Filter.buffer, %struct.halide_dimension_t* %159, i8* null, i64 0, %struct.halide_device_interface_t* null, i32 0, i32 32, i32 3, %struct.halide_dimension_t* %173, i64 0) #18
  br label %after_bb

next_bb:                                          ; preds = %"assert succeeded4"
  br label %after_bb

after_bb5:                                        ; preds = %next_bb7, %then_bb6
  %175 = call i1 @_halide_buffer_is_bounds_query(%struct.halide_buffer_t* %Output.buffer) #18
  br i1 %175, label %then_bb9, label %next_bb10

then_bb6:                                         ; preds = %after_bb
  %176 = call %struct.halide_dimension_t* @_halide_buffer_get_shape(%struct.halide_buffer_t* %IMG.buffer) #18
  %177 = add nsw i32 %IMG.extent.0.required.s, 1
  %178 = add nsw i32 %IMG.extent.1.required.s, 1
  %179 = add nsw i32 %IMG.extent.0.required.s, 1
  %180 = getelementptr inbounds [12 x i32], [12 x i32]* %4, i32 0, i32 0
  store i32 %IMG.min.0.required, i32* %180, align 4
  %181 = getelementptr inbounds [12 x i32], [12 x i32]* %4, i32 0, i32 1
  store i32 %177, i32* %181, align 4
  %182 = getelementptr inbounds [12 x i32], [12 x i32]* %4, i32 0, i32 2
  store i32 1, i32* %182, align 4
  %183 = getelementptr inbounds [12 x i32], [12 x i32]* %4, i32 0, i32 3
  store i32 0, i32* %183, align 4
  %184 = getelementptr inbounds [12 x i32], [12 x i32]* %4, i32 0, i32 4
  store i32 %IMG.min.1.required, i32* %184, align 4
  %185 = getelementptr inbounds [12 x i32], [12 x i32]* %4, i32 0, i32 5
  store i32 %178, i32* %185, align 4
  %186 = getelementptr inbounds [12 x i32], [12 x i32]* %4, i32 0, i32 6
  store i32 %179, i32* %186, align 4
  %187 = getelementptr inbounds [12 x i32], [12 x i32]* %4, i32 0, i32 7
  store i32 0, i32* %187, align 4
  %188 = getelementptr inbounds [12 x i32], [12 x i32]* %4, i32 0, i32 8
  store i32 %IMG.min.2.required, i32* %188, align 4
  %189 = getelementptr inbounds [12 x i32], [12 x i32]* %4, i32 0, i32 9
  store i32 %IMG.extent.2.required, i32* %189, align 4
  %190 = getelementptr inbounds [12 x i32], [12 x i32]* %4, i32 0, i32 10
  store i32 %IMG.stride.2.required, i32* %190, align 4
  %191 = getelementptr inbounds [12 x i32], [12 x i32]* %4, i32 0, i32 11
  store i32 0, i32* %191, align 4
  %192 = bitcast [12 x i32]* %4 to %struct.halide_dimension_t*
  %193 = call %struct.halide_buffer_t* @_halide_buffer_init(%struct.halide_buffer_t* %IMG.buffer, %struct.halide_dimension_t* %176, i8* null, i64 0, %struct.halide_device_interface_t* null, i32 0, i32 32, i32 3, %struct.halide_dimension_t* %192, i64 0) #18
  br label %after_bb5

next_bb7:                                         ; preds = %after_bb
  br label %after_bb5

after_bb8:                                        ; preds = %next_bb10, %then_bb9
  %194 = call i1 @_halide_buffer_is_bounds_query(%struct.halide_buffer_t* %Output.buffer) #18
  %195 = call i1 @_halide_buffer_is_bounds_query(%struct.halide_buffer_t* %Filter.buffer) #18
  %196 = call i1 @_halide_buffer_is_bounds_query(%struct.halide_buffer_t* %IMG.buffer) #18
  %197 = or i1 %195, %196
  %198 = or i1 %194, %197
  %199 = xor i1 %198, true
  br i1 %199, label %then_bb12, label %next_bb13

then_bb9:                                         ; preds = %after_bb5
  %200 = icmp sgt i32 %a28, 1
  %t185 = select i1 %200, i32 %a28, i32 1
  %201 = call %struct.halide_dimension_t* @_halide_buffer_get_shape(%struct.halide_buffer_t* %Output.buffer) #18
  %202 = icmp sgt i32 0, %a29
  %203 = select i1 %202, i32 %a29, i32 0
  %204 = add nsw i32 %203, %Output.min.1
  %205 = add nsw i32 %Output.extent.1.required.s, 1
  %206 = getelementptr inbounds [12 x i32], [12 x i32]* %3, i32 0, i32 0
  store i32 %Output.min.0, i32* %206, align 4
  %207 = getelementptr inbounds [12 x i32], [12 x i32]* %3, i32 0, i32 1
  store i32 %t185, i32* %207, align 4
  %208 = getelementptr inbounds [12 x i32], [12 x i32]* %3, i32 0, i32 2
  store i32 1, i32* %208, align 4
  %209 = getelementptr inbounds [12 x i32], [12 x i32]* %3, i32 0, i32 3
  store i32 0, i32* %209, align 4
  %210 = getelementptr inbounds [12 x i32], [12 x i32]* %3, i32 0, i32 4
  store i32 %204, i32* %210, align 4
  %211 = getelementptr inbounds [12 x i32], [12 x i32]* %3, i32 0, i32 5
  store i32 %205, i32* %211, align 4
  %212 = getelementptr inbounds [12 x i32], [12 x i32]* %3, i32 0, i32 6
  store i32 %t185, i32* %212, align 4
  %213 = getelementptr inbounds [12 x i32], [12 x i32]* %3, i32 0, i32 7
  store i32 0, i32* %213, align 4
  %214 = getelementptr inbounds [12 x i32], [12 x i32]* %3, i32 0, i32 8
  store i32 %Output.min.2, i32* %214, align 4
  %215 = getelementptr inbounds [12 x i32], [12 x i32]* %3, i32 0, i32 9
  store i32 %Output.extent.2, i32* %215, align 4
  %216 = getelementptr inbounds [12 x i32], [12 x i32]* %3, i32 0, i32 10
  store i32 %Output.stride.2.required, i32* %216, align 4
  %217 = getelementptr inbounds [12 x i32], [12 x i32]* %3, i32 0, i32 11
  store i32 0, i32* %217, align 4
  %218 = bitcast [12 x i32]* %3 to %struct.halide_dimension_t*
  %219 = call %struct.halide_buffer_t* @_halide_buffer_init(%struct.halide_buffer_t* %Output.buffer, %struct.halide_dimension_t* %201, i8* null, i64 0, %struct.halide_device_interface_t* null, i32 0, i32 32, i32 3, %struct.halide_dimension_t* %218, i64 0) #18
  br label %after_bb8

next_bb10:                                        ; preds = %after_bb5
  br label %after_bb8

after_bb11:                                       ; preds = %next_bb13, %"end for Output.s1.c_out.rebased"
  %220 = ptrtoint %struct.halide_buffer_t* %Output.buffer to i64
  %221 = icmp eq i64 %220, 0
  %222 = xor i1 %221, true
  br i1 %222, label %"assert succeeded76", label %"assert failed75", !prof !372

then_bb12:                                        ; preds = %after_bb8
  %223 = icmp eq i32 %Filter.type, 73728
  %224 = xor i1 %223, true
  %225 = zext i1 %224 to i64
  %226 = shl i64 %225, 0
  %227 = or i64 -9223372036854775808, %226
  %228 = icmp eq i32 %Filter.dimensions, 3
  %229 = xor i1 %228, true
  %230 = zext i1 %229 to i64
  %231 = shl i64 %230, 1
  %232 = or i64 %227, %231
  %233 = icmp eq i32 %IMG.type, 73728
  %234 = xor i1 %233, true
  %235 = zext i1 %234 to i64
  %236 = shl i64 %235, 2
  %237 = or i64 %232, %236
  %238 = icmp eq i32 %IMG.dimensions, 3
  %239 = xor i1 %238, true
  %240 = zext i1 %239 to i64
  %241 = shl i64 %240, 3
  %242 = or i64 %237, %241
  %243 = icmp eq i32 %Output.type, 73728
  %244 = xor i1 %243, true
  %245 = zext i1 %244 to i64
  %246 = shl i64 %245, 4
  %247 = or i64 %242, %246
  %248 = icmp eq i32 %Output.dimensions, 3
  %249 = xor i1 %248, true
  %250 = zext i1 %249 to i64
  %251 = shl i64 %250, 5
  %252 = or i64 %247, %251
  %253 = icmp sgt i32 %Filter.min.0, 0
  %254 = xor i1 %253, true
  %255 = icmp sgt i32 0, %Filter.min.0
  %256 = xor i1 %255, true
  %257 = and i1 %254, %256
  %258 = xor i1 %257, true
  %259 = zext i1 %258 to i64
  %260 = shl i64 %259, 6
  %261 = or i64 %252, %260
  %262 = icmp sgt i32 0, %Filter.extent.0
  %263 = xor i1 %262, true
  %264 = xor i1 %263, true
  %265 = zext i1 %264 to i64
  %266 = shl i64 %265, 7
  %267 = or i64 %261, %266
  %268 = icmp sgt i32 %Filter.min.1, 0
  %269 = xor i1 %268, true
  %270 = icmp sgt i32 0, %Filter.min.1
  %271 = xor i1 %270, true
  %272 = and i1 %269, %271
  %273 = xor i1 %272, true
  %274 = zext i1 %273 to i64
  %275 = shl i64 %274, 8
  %276 = or i64 %267, %275
  %277 = icmp sgt i32 0, %Filter.extent.1
  %278 = xor i1 %277, true
  %279 = xor i1 %278, true
  %280 = zext i1 %279 to i64
  %281 = shl i64 %280, 9
  %282 = or i64 %276, %281
  %283 = icmp sgt i32 %Filter.min.2, %Output.min.2
  %284 = xor i1 %283, true
  %285 = add nsw i32 %Output.extent.2, %Output.min.2
  %286 = add nsw i32 %Filter.extent.2, %Filter.min.2
  %287 = icmp sgt i32 %285, %286
  %288 = xor i1 %287, true
  %289 = and i1 %284, %288
  %290 = xor i1 %289, true
  %291 = zext i1 %290 to i64
  %292 = shl i64 %291, 10
  %293 = or i64 %282, %292
  %294 = icmp sgt i32 0, %Filter.extent.2
  %295 = xor i1 %294, true
  %296 = xor i1 %295, true
  %297 = zext i1 %296 to i64
  %298 = shl i64 %297, 11
  %299 = or i64 %293, %298
  %300 = icmp sgt i32 %b8, %IMG.min.0.required
  %301 = xor i1 %300, true
  %302 = add nsw i32 %IMG.extent.0.required.s, %IMG.min.0.required
  %303 = add nsw i32 %302, 1
  %304 = add nsw i32 %IMG.extent.0, %b8
  %305 = icmp sgt i32 %303, %304
  %306 = xor i1 %305, true
  %307 = and i1 %301, %306
  %308 = xor i1 %307, true
  %309 = zext i1 %308 to i64
  %310 = shl i64 %309, 12
  %311 = or i64 %299, %310
  %312 = icmp sgt i32 0, %IMG.extent.0
  %313 = xor i1 %312, true
  %314 = xor i1 %313, true
  %315 = zext i1 %314 to i64
  %316 = shl i64 %315, 13
  %317 = or i64 %311, %316
  %318 = icmp sgt i32 %b14, %IMG.min.1.required
  %319 = xor i1 %318, true
  %320 = add nsw i32 %IMG.extent.1.required.s, %IMG.min.1.required
  %321 = add nsw i32 %320, 1
  %322 = add nsw i32 %IMG.extent.1, %b14
  %323 = icmp sgt i32 %321, %322
  %324 = xor i1 %323, true
  %325 = and i1 %319, %324
  %326 = xor i1 %325, true
  %327 = zext i1 %326 to i64
  %328 = shl i64 %327, 14
  %329 = or i64 %317, %328
  %330 = icmp sgt i32 0, %IMG.extent.1
  %331 = xor i1 %330, true
  %332 = xor i1 %331, true
  %333 = zext i1 %332 to i64
  %334 = shl i64 %333, 15
  %335 = or i64 %329, %334
  %336 = icmp sgt i32 %a33, %IMG.min.2.required
  %337 = xor i1 %336, true
  %338 = add nsw i32 %IMG.extent.2.required, %IMG.min.2.required
  %339 = add nsw i32 %b32, %a33
  %340 = icmp sgt i32 %338, %339
  %341 = xor i1 %340, true
  %342 = and i1 %337, %341
  %343 = xor i1 %342, true
  %344 = zext i1 %343 to i64
  %345 = shl i64 %344, 16
  %346 = or i64 %335, %345
  %347 = icmp sgt i32 0, %b32
  %348 = xor i1 %347, true
  %349 = xor i1 %348, true
  %350 = zext i1 %349 to i64
  %351 = shl i64 %350, 17
  %352 = or i64 %346, %351
  %353 = icmp sgt i32 %a28, 1
  %354 = select i1 %353, i32 %a28, i32 1
  %355 = icmp sgt i32 %354, %b22
  %356 = xor i1 %355, true
  %357 = xor i1 %356, true
  %358 = zext i1 %357 to i64
  %359 = shl i64 %358, 18
  %360 = or i64 %352, %359
  %361 = icmp sgt i32 0, %a29
  %362 = xor i1 %361, true
  %363 = icmp sgt i32 0, %a29
  %364 = select i1 %363, i32 %a29, i32 0
  %365 = add nsw i32 %364, %Output.min.1
  %366 = add nsw i32 %365, %Output.extent.1.required.s
  %367 = add nsw i32 %366, 1
  %368 = add nsw i32 %Output.extent.1, %Output.min.1
  %369 = icmp sgt i32 %367, %368
  %370 = xor i1 %369, true
  %371 = and i1 %362, %370
  %372 = xor i1 %371, true
  %373 = zext i1 %372 to i64
  %374 = shl i64 %373, 19
  %375 = or i64 %360, %374
  %376 = icmp sgt i32 0, %Output.extent.1
  %377 = xor i1 %376, true
  %378 = xor i1 %377, true
  %379 = zext i1 %378 to i64
  %380 = shl i64 %379, 20
  %381 = or i64 %375, %380
  %382 = icmp sgt i32 0, %Output.extent.2
  %383 = xor i1 %382, true
  %384 = xor i1 %383, true
  %385 = zext i1 %384 to i64
  %386 = shl i64 %385, 21
  %387 = or i64 %381, %386
  %388 = icmp eq i32 %Filter.stride.0, 1
  %389 = xor i1 %388, true
  %390 = zext i1 %389 to i64
  %391 = shl i64 %390, 22
  %392 = or i64 %387, %391
  %393 = icmp eq i32 %IMG.stride.0, 1
  %394 = xor i1 %393, true
  %395 = zext i1 %394 to i64
  %396 = shl i64 %395, 23
  %397 = or i64 %392, %396
  %398 = icmp eq i32 %Output.stride.0, 1
  %399 = xor i1 %398, true
  %400 = zext i1 %399 to i64
  %401 = shl i64 %400, 24
  %402 = or i64 %397, %401
  %403 = call i64 @llvm.cttz.i64(i64 %402, i1 false)
  %404 = trunc i64 %403 to i32
  switch i32 %404, label %no_errors_bb [
    i32 0, label %assert_failed
    i32 1, label %assert_failed14
    i32 2, label %assert_failed15
    i32 3, label %assert_failed16
    i32 4, label %assert_failed17
    i32 5, label %assert_failed18
    i32 6, label %assert_failed19
    i32 7, label %assert_failed20
    i32 8, label %assert_failed21
    i32 9, label %assert_failed22
    i32 10, label %assert_failed23
    i32 11, label %assert_failed24
    i32 12, label %assert_failed25
    i32 13, label %assert_failed26
    i32 14, label %assert_failed27
    i32 15, label %assert_failed28
    i32 16, label %assert_failed29
    i32 17, label %assert_failed30
    i32 18, label %assert_failed31
    i32 19, label %assert_failed32
    i32 20, label %assert_failed33
    i32 21, label %assert_failed34
    i32 22, label %assert_failed35
    i32 23, label %assert_failed36
    i32 24, label %assert_failed37
  ], !prof !373

next_bb13:                                        ; preds = %after_bb8
  br label %after_bb11

no_errors_bb:                                     ; preds = %then_bb12
  %405 = sext i32 %Filter.extent.1 to i64
  %406 = sext i32 %Filter.extent.0 to i64
  %Filter.total_extent.1 = mul nsw i64 %405, %406
  %407 = sext i32 %Filter.extent.2 to i64
  %Filter.total_extent.2 = mul nsw i64 %Filter.total_extent.1, %407
  %408 = sext i32 %IMG.extent.1 to i64
  %409 = sext i32 %IMG.extent.0 to i64
  %IMG.total_extent.1 = mul nsw i64 %408, %409
  %410 = sext i32 %b32 to i64
  %IMG.total_extent.2 = mul nsw i64 %IMG.total_extent.1, %410
  %411 = sext i32 %Output.extent.1 to i64
  %412 = sext i32 %b22 to i64
  %Output.total_extent.1 = mul nsw i64 %411, %412
  %413 = sext i32 %Output.extent.2 to i64
  %Output.total_extent.2 = mul nsw i64 %Output.total_extent.1, %413
  %414 = sext i32 %Filter.extent.0 to i64
  %415 = icmp ugt i64 %414, 2147483647
  %416 = xor i1 %415, true
  %417 = xor i1 %416, true
  %418 = zext i1 %417 to i64
  %419 = shl i64 %418, 0
  %420 = or i64 -9223372036854775808, %419
  %421 = sext i32 %Filter.extent.1 to i64
  %422 = sext i32 %Filter.stride.1 to i64
  %x0 = mul nsw i64 %421, %422
  %423 = icmp sgt i64 0, %x0
  %424 = xor i1 %423, true
  %425 = sub nsw i64 0, %x0
  %426 = select i1 %424, i64 %x0, i64 %425
  %427 = icmp ugt i64 %426, 2147483647
  %428 = xor i1 %427, true
  %429 = xor i1 %428, true
  %430 = zext i1 %429 to i64
  %431 = shl i64 %430, 1
  %432 = or i64 %420, %431
  %433 = icmp sgt i64 %Filter.total_extent.1, 2147483647
  %434 = xor i1 %433, true
  %435 = xor i1 %434, true
  %436 = zext i1 %435 to i64
  %437 = shl i64 %436, 2
  %438 = or i64 %432, %437
  %439 = sext i32 %Filter.extent.2 to i64
  %440 = sext i32 %Filter.stride.2 to i64
  %x1 = mul nsw i64 %439, %440
  %441 = icmp sgt i64 0, %x1
  %442 = xor i1 %441, true
  %443 = sub nsw i64 0, %x1
  %444 = select i1 %442, i64 %x1, i64 %443
  %445 = icmp ugt i64 %444, 2147483647
  %446 = xor i1 %445, true
  %447 = xor i1 %446, true
  %448 = zext i1 %447 to i64
  %449 = shl i64 %448, 3
  %450 = or i64 %438, %449
  %451 = icmp sgt i64 %Filter.total_extent.2, 2147483647
  %452 = xor i1 %451, true
  %453 = xor i1 %452, true
  %454 = zext i1 %453 to i64
  %455 = shl i64 %454, 4
  %456 = or i64 %450, %455
  %457 = sext i32 %IMG.extent.0 to i64
  %458 = icmp ugt i64 %457, 2147483647
  %459 = xor i1 %458, true
  %460 = xor i1 %459, true
  %461 = zext i1 %460 to i64
  %462 = shl i64 %461, 5
  %463 = or i64 %456, %462
  %464 = sext i32 %IMG.extent.1 to i64
  %465 = sext i32 %IMG.stride.1 to i64
  %x2 = mul nsw i64 %464, %465
  %466 = icmp sgt i64 0, %x2
  %467 = xor i1 %466, true
  %468 = sub nsw i64 0, %x2
  %469 = select i1 %467, i64 %x2, i64 %468
  %470 = icmp ugt i64 %469, 2147483647
  %471 = xor i1 %470, true
  %472 = xor i1 %471, true
  %473 = zext i1 %472 to i64
  %474 = shl i64 %473, 6
  %475 = or i64 %463, %474
  %476 = icmp sgt i64 %IMG.total_extent.1, 2147483647
  %477 = xor i1 %476, true
  %478 = xor i1 %477, true
  %479 = zext i1 %478 to i64
  %480 = shl i64 %479, 7
  %481 = or i64 %475, %480
  %482 = sext i32 %b32 to i64
  %483 = sext i32 %IMG.stride.2 to i64
  %x3 = mul nsw i64 %482, %483
  %484 = icmp sgt i64 0, %x3
  %485 = xor i1 %484, true
  %486 = sub nsw i64 0, %x3
  %487 = select i1 %485, i64 %x3, i64 %486
  %488 = icmp ugt i64 %487, 2147483647
  %489 = xor i1 %488, true
  %490 = xor i1 %489, true
  %491 = zext i1 %490 to i64
  %492 = shl i64 %491, 8
  %493 = or i64 %481, %492
  %494 = icmp sgt i64 %IMG.total_extent.2, 2147483647
  %495 = xor i1 %494, true
  %496 = xor i1 %495, true
  %497 = zext i1 %496 to i64
  %498 = shl i64 %497, 9
  %499 = or i64 %493, %498
  %500 = sext i32 %b22 to i64
  %501 = icmp ugt i64 %500, 2147483647
  %502 = xor i1 %501, true
  %503 = xor i1 %502, true
  %504 = zext i1 %503 to i64
  %505 = shl i64 %504, 10
  %506 = or i64 %499, %505
  %507 = sext i32 %Output.extent.1 to i64
  %508 = sext i32 %Output.stride.1 to i64
  %x4 = mul nsw i64 %507, %508
  %509 = icmp sgt i64 0, %x4
  %510 = xor i1 %509, true
  %511 = sub nsw i64 0, %x4
  %512 = select i1 %510, i64 %x4, i64 %511
  %513 = icmp ugt i64 %512, 2147483647
  %514 = xor i1 %513, true
  %515 = xor i1 %514, true
  %516 = zext i1 %515 to i64
  %517 = shl i64 %516, 11
  %518 = or i64 %506, %517
  %519 = icmp sgt i64 %Output.total_extent.1, 2147483647
  %520 = xor i1 %519, true
  %521 = xor i1 %520, true
  %522 = zext i1 %521 to i64
  %523 = shl i64 %522, 12
  %524 = or i64 %518, %523
  %525 = sext i32 %Output.extent.2 to i64
  %526 = sext i32 %Output.stride.2 to i64
  %x5 = mul nsw i64 %525, %526
  %527 = icmp sgt i64 0, %x5
  %528 = xor i1 %527, true
  %529 = sub nsw i64 0, %x5
  %530 = select i1 %528, i64 %x5, i64 %529
  %531 = icmp ugt i64 %530, 2147483647
  %532 = xor i1 %531, true
  %533 = xor i1 %532, true
  %534 = zext i1 %533 to i64
  %535 = shl i64 %534, 13
  %536 = or i64 %524, %535
  %537 = icmp sgt i64 %Output.total_extent.2, 2147483647
  %538 = xor i1 %537, true
  %539 = xor i1 %538, true
  %540 = zext i1 %539 to i64
  %541 = shl i64 %540, 14
  %542 = or i64 %536, %541
  %543 = xor i1 %Filter.device_dirty, true
  %544 = xor i1 %543, true
  %545 = zext i1 %544 to i64
  %546 = shl i64 %545, 15
  %547 = or i64 %542, %546
  %548 = xor i1 %IMG.device_dirty, true
  %549 = xor i1 %548, true
  %550 = zext i1 %549 to i64
  %551 = shl i64 %550, 16
  %552 = or i64 %547, %551
  %553 = xor i1 %Output.device_dirty, true
  %554 = xor i1 %553, true
  %555 = zext i1 %554 to i64
  %556 = shl i64 %555, 17
  %557 = or i64 %552, %556
  %558 = icmp eq i8* %Filter, null
  %559 = xor i1 %558, true
  %560 = xor i1 %559, true
  %561 = zext i1 %560 to i64
  %562 = shl i64 %561, 18
  %563 = or i64 %557, %562
  %564 = icmp eq i8* %IMG, null
  %565 = xor i1 %564, true
  %566 = xor i1 %565, true
  %567 = zext i1 %566 to i64
  %568 = shl i64 %567, 19
  %569 = or i64 %563, %568
  %570 = icmp eq i8* %Output, null
  %571 = xor i1 %570, true
  %572 = xor i1 %571, true
  %573 = zext i1 %572 to i64
  %574 = shl i64 %573, 20
  %575 = or i64 %569, %574
  %576 = call i64 @llvm.cttz.i64(i64 %575, i1 false)
  %577 = trunc i64 %576 to i32
  switch i32 %577, label %no_errors_bb38 [
    i32 0, label %assert_failed39
    i32 1, label %assert_failed40
    i32 2, label %assert_failed41
    i32 3, label %assert_failed42
    i32 4, label %assert_failed43
    i32 5, label %assert_failed44
    i32 6, label %assert_failed45
    i32 7, label %assert_failed46
    i32 8, label %assert_failed47
    i32 9, label %assert_failed48
    i32 10, label %assert_failed49
    i32 11, label %assert_failed50
    i32 12, label %assert_failed51
    i32 13, label %assert_failed52
    i32 14, label %assert_failed53
    i32 15, label %assert_failed54
    i32 16, label %assert_failed55
    i32 17, label %assert_failed56
    i32 18, label %assert_failed57
    i32 19, label %assert_failed58
    i32 20, label %assert_failed59
  ], !prof !374

assert_failed:                                    ; preds = %then_bb12
  %578 = call i32 @halide_error_bad_type(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0), i32 %Filter.type, i32 73728) #18
  call void @pimShowStatsWrapper()
  ret i32 %578

assert_failed14:                                  ; preds = %then_bb12
  %579 = call i32 @halide_error_bad_dimensions(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0), i32 %Filter.dimensions, i32 3) #18
  call void @pimShowStatsWrapper()
  ret i32 %579

assert_failed15:                                  ; preds = %then_bb12
  %580 = call i32 @halide_error_bad_type(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0), i32 %IMG.type, i32 73728) #18
  call void @pimShowStatsWrapper()
  ret i32 %580

assert_failed16:                                  ; preds = %then_bb12
  %581 = call i32 @halide_error_bad_dimensions(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0), i32 %IMG.dimensions, i32 3) #18
  call void @pimShowStatsWrapper()
  ret i32 %581

assert_failed17:                                  ; preds = %then_bb12
  %582 = call i32 @halide_error_bad_type(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i32 0, i32 0), i32 %Output.type, i32 73728) #18
  call void @pimShowStatsWrapper()
  ret i32 %582

assert_failed18:                                  ; preds = %then_bb12
  %583 = call i32 @halide_error_bad_dimensions(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i32 0, i32 0), i32 %Output.dimensions, i32 3) #18
  call void @pimShowStatsWrapper()
  ret i32 %583

assert_failed19:                                  ; preds = %then_bb12
  %584 = add nsw i32 %Filter.extent.0, -1
  %585 = add nsw i32 %Filter.extent.0, %Filter.min.0
  %586 = add nsw i32 %585, -1
  %587 = call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0), i32 0, i32 0, i32 %584, i32 %Filter.min.0, i32 %586) #18
  call void @pimShowStatsWrapper()
  ret i32 %587

assert_failed20:                                  ; preds = %then_bb12
  %588 = call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0), i32 0, i32 %Filter.extent.0) #18
  call void @pimShowStatsWrapper()
  ret i32 %588

assert_failed21:                                  ; preds = %then_bb12
  %589 = add nsw i32 %Filter.extent.1, -1
  %590 = add nsw i32 %Filter.extent.1, %Filter.min.1
  %591 = add nsw i32 %590, -1
  %592 = call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0), i32 1, i32 0, i32 %589, i32 %Filter.min.1, i32 %591) #18
  call void @pimShowStatsWrapper()
  ret i32 %592

assert_failed22:                                  ; preds = %then_bb12
  %593 = call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0), i32 1, i32 %Filter.extent.1) #18
  call void @pimShowStatsWrapper()
  ret i32 %593

assert_failed23:                                  ; preds = %then_bb12
  %594 = add nsw i32 %Output.extent.2, %Output.min.2
  %595 = add nsw i32 %594, -1
  %596 = add nsw i32 %Filter.extent.2, %Filter.min.2
  %597 = add nsw i32 %596, -1
  %598 = call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0), i32 2, i32 %Output.min.2, i32 %595, i32 %Filter.min.2, i32 %597) #18
  call void @pimShowStatsWrapper()
  ret i32 %598

assert_failed24:                                  ; preds = %then_bb12
  %599 = call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0), i32 2, i32 %Filter.extent.2) #18
  call void @pimShowStatsWrapper()
  ret i32 %599

assert_failed25:                                  ; preds = %then_bb12
  %600 = add nsw i32 %IMG.extent.0.required.s, %IMG.min.0.required
  %601 = add nsw i32 %IMG.extent.0, %b8
  %602 = add nsw i32 %601, -1
  %603 = call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0), i32 0, i32 %IMG.min.0.required, i32 %600, i32 %b8, i32 %602) #18
  call void @pimShowStatsWrapper()
  ret i32 %603

assert_failed26:                                  ; preds = %then_bb12
  %604 = call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0), i32 0, i32 %IMG.extent.0) #18
  call void @pimShowStatsWrapper()
  ret i32 %604

assert_failed27:                                  ; preds = %then_bb12
  %605 = add nsw i32 %IMG.extent.1.required.s, %IMG.min.1.required
  %606 = add nsw i32 %IMG.extent.1, %b14
  %607 = add nsw i32 %606, -1
  %608 = call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0), i32 1, i32 %IMG.min.1.required, i32 %605, i32 %b14, i32 %607) #18
  call void @pimShowStatsWrapper()
  ret i32 %608

assert_failed28:                                  ; preds = %then_bb12
  %609 = call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0), i32 1, i32 %IMG.extent.1) #18
  call void @pimShowStatsWrapper()
  ret i32 %609

assert_failed29:                                  ; preds = %then_bb12
  %610 = add nsw i32 %IMG.extent.2.required, %IMG.min.2.required
  %611 = add nsw i32 %610, -1
  %612 = add nsw i32 %b32, %a33
  %613 = add nsw i32 %612, -1
  %614 = call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0), i32 2, i32 %IMG.min.2.required, i32 %611, i32 %a33, i32 %613) #18
  call void @pimShowStatsWrapper()
  ret i32 %614

assert_failed30:                                  ; preds = %then_bb12
  %615 = call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0), i32 2, i32 %b32) #18
  call void @pimShowStatsWrapper()
  ret i32 %615

assert_failed31:                                  ; preds = %then_bb12
  %616 = icmp sgt i32 %a28, 1
  %617 = select i1 %616, i32 %a28, i32 1
  %618 = add nsw i32 %617, %Output.min.0
  %619 = add nsw i32 %618, -1
  %620 = add nsw i32 %b22, %Output.min.0
  %621 = add nsw i32 %620, -1
  %622 = call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i32 0, i32 0), i32 0, i32 %Output.min.0, i32 %619, i32 %Output.min.0, i32 %621) #18
  call void @pimShowStatsWrapper()
  ret i32 %622

assert_failed32:                                  ; preds = %then_bb12
  %623 = icmp sgt i32 0, %a29
  %624 = select i1 %623, i32 %a29, i32 0
  %t186 = add nsw i32 %624, %Output.min.1
  %625 = add nsw i32 %t186, %Output.extent.1.required.s
  %626 = add nsw i32 %Output.extent.1, %Output.min.1
  %627 = add nsw i32 %626, -1
  %628 = call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i32 0, i32 0), i32 1, i32 %t186, i32 %625, i32 %Output.min.1, i32 %627) #18
  call void @pimShowStatsWrapper()
  ret i32 %628

assert_failed33:                                  ; preds = %then_bb12
  %629 = call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i32 0, i32 0), i32 1, i32 %Output.extent.1) #18
  call void @pimShowStatsWrapper()
  ret i32 %629

assert_failed34:                                  ; preds = %then_bb12
  %630 = call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i32 0, i32 0), i32 2, i32 %Output.extent.2) #18
  call void @pimShowStatsWrapper()
  ret i32 %630

assert_failed35:                                  ; preds = %then_bb12
  %631 = call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.207, i32 0, i32 0), i32 %Filter.stride.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.208, i32 0, i32 0), i32 1) #18
  call void @pimShowStatsWrapper()
  ret i32 %631

assert_failed36:                                  ; preds = %then_bb12
  %632 = call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.209, i32 0, i32 0), i32 %IMG.stride.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.208, i32 0, i32 0), i32 1) #18
  call void @pimShowStatsWrapper()
  ret i32 %632

assert_failed37:                                  ; preds = %then_bb12
  %633 = call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.210, i32 0, i32 0), i32 %Output.stride.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.208, i32 0, i32 0), i32 1) #18
  call void @pimShowStatsWrapper()
  ret i32 %633

no_errors_bb38:                                   ; preds = %no_errors_bb
  br label %"produce Output"

assert_failed39:                                  ; preds = %no_errors_bb
  %634 = sext i32 %Filter.extent.0 to i64
  %635 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i32 0, i32 0), i64 %634, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %635

assert_failed40:                                  ; preds = %no_errors_bb
  %636 = sext i32 %Filter.extent.1 to i64
  %637 = sext i32 %Filter.stride.1 to i64
  %x6 = mul nsw i64 %636, %637
  %638 = icmp sgt i64 0, %x6
  %639 = xor i1 %638, true
  %640 = sub nsw i64 0, %x6
  %641 = select i1 %639, i64 %x6, i64 %640
  %642 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i32 0, i32 0), i64 %641, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %642

assert_failed41:                                  ; preds = %no_errors_bb
  %643 = call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i32 0, i32 0), i64 %Filter.total_extent.1, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %643

assert_failed42:                                  ; preds = %no_errors_bb
  %644 = sext i32 %Filter.extent.2 to i64
  %645 = sext i32 %Filter.stride.2 to i64
  %x7 = mul nsw i64 %644, %645
  %646 = icmp sgt i64 0, %x7
  %647 = xor i1 %646, true
  %648 = sub nsw i64 0, %x7
  %649 = select i1 %647, i64 %x7, i64 %648
  %650 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i32 0, i32 0), i64 %649, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %650

assert_failed43:                                  ; preds = %no_errors_bb
  %651 = call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i32 0, i32 0), i64 %Filter.total_extent.2, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %651

assert_failed44:                                  ; preds = %no_errors_bb
  %652 = sext i32 %IMG.extent.0 to i64
  %653 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i32 0, i32 0), i64 %652, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %653

assert_failed45:                                  ; preds = %no_errors_bb
  %654 = sext i32 %IMG.extent.1 to i64
  %655 = sext i32 %IMG.stride.1 to i64
  %x8 = mul nsw i64 %654, %655
  %656 = icmp sgt i64 0, %x8
  %657 = xor i1 %656, true
  %658 = sub nsw i64 0, %x8
  %659 = select i1 %657, i64 %x8, i64 %658
  %660 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i32 0, i32 0), i64 %659, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %660

assert_failed46:                                  ; preds = %no_errors_bb
  %661 = call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i32 0, i32 0), i64 %IMG.total_extent.1, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %661

assert_failed47:                                  ; preds = %no_errors_bb
  %662 = sext i32 %b32 to i64
  %663 = sext i32 %IMG.stride.2 to i64
  %x9 = mul nsw i64 %662, %663
  %664 = icmp sgt i64 0, %x9
  %665 = xor i1 %664, true
  %666 = sub nsw i64 0, %x9
  %667 = select i1 %665, i64 %x9, i64 %666
  %668 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i32 0, i32 0), i64 %667, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %668

assert_failed48:                                  ; preds = %no_errors_bb
  %669 = call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i32 0, i32 0), i64 %IMG.total_extent.2, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %669

assert_failed49:                                  ; preds = %no_errors_bb
  %670 = sext i32 %b22 to i64
  %671 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i32 0, i32 0), i64 %670, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %671

assert_failed50:                                  ; preds = %no_errors_bb
  %672 = sext i32 %Output.extent.1 to i64
  %673 = sext i32 %Output.stride.1 to i64
  %x10 = mul nsw i64 %672, %673
  %674 = icmp sgt i64 0, %x10
  %675 = xor i1 %674, true
  %676 = sub nsw i64 0, %x10
  %677 = select i1 %675, i64 %x10, i64 %676
  %678 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i32 0, i32 0), i64 %677, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %678

assert_failed51:                                  ; preds = %no_errors_bb
  %679 = call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i32 0, i32 0), i64 %Output.total_extent.1, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %679

assert_failed52:                                  ; preds = %no_errors_bb
  %680 = sext i32 %Output.extent.2 to i64
  %681 = sext i32 %Output.stride.2 to i64
  %x11 = mul nsw i64 %680, %681
  %682 = icmp sgt i64 0, %x11
  %683 = xor i1 %682, true
  %684 = sub nsw i64 0, %x11
  %685 = select i1 %683, i64 %x11, i64 %684
  %686 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i32 0, i32 0), i64 %685, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %686

assert_failed53:                                  ; preds = %no_errors_bb
  %687 = call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i32 0, i32 0), i64 %Output.total_extent.2, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %687

assert_failed54:                                  ; preds = %no_errors_bb
  %688 = call i32 @halide_error_device_dirty_with_no_device_support(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0)) #18
  call void @pimShowStatsWrapper()
  ret i32 %688

assert_failed55:                                  ; preds = %no_errors_bb
  %689 = call i32 @halide_error_device_dirty_with_no_device_support(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0)) #18
  call void @pimShowStatsWrapper()
  ret i32 %689

assert_failed56:                                  ; preds = %no_errors_bb
  %690 = call i32 @halide_error_device_dirty_with_no_device_support(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i32 0, i32 0)) #18
  call void @pimShowStatsWrapper()
  ret i32 %690

assert_failed57:                                  ; preds = %no_errors_bb
  %691 = call i32 @halide_error_host_is_null(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0)) #18
  call void @pimShowStatsWrapper()
  ret i32 %691

assert_failed58:                                  ; preds = %no_errors_bb
  %692 = call i32 @halide_error_host_is_null(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0)) #18
  call void @pimShowStatsWrapper()
  ret i32 %692

assert_failed59:                                  ; preds = %no_errors_bb
  %693 = call i32 @halide_error_host_is_null(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i32 0, i32 0)) #18
  call void @pimShowStatsWrapper()
  ret i32 %693

"produce Output":                                 ; preds = %no_errors_bb38
  %694 = mul nsw i32 %Output.min.2, %Output.stride.2
  %695 = mul nsw i32 %Output.min.1, %Output.stride.1
  %696 = add nsw i32 %694, %695
  %t146 = sub nsw i32 0, %696
  %697 = add nsw i32 0, %Output.extent.2
  %698 = icmp slt i32 0, %697
  br i1 %698, label %"for Output.s0.c_out.rebased", label %"end for Output.s0.c_out.rebased", !prof !372

"for Output.s0.c_out.rebased":                    ; preds = %"end for Output.s0.y.rebased", %"produce Output"
  %Output.s0.c_out.rebased = phi i32 [ 0, %"produce Output" ], [ %720, %"end for Output.s0.y.rebased" ]
  %699 = add nsw i32 %Output.min.2, %Output.s0.c_out.rebased
  %700 = mul nsw i32 %699, %Output.stride.2
  %t147 = add nsw i32 %700, %t146
  %701 = add nsw i32 0, %Output.extent.1
  %702 = icmp slt i32 0, %701
  br i1 %702, label %"for Output.s0.y.rebased", label %"end for Output.s0.y.rebased", !prof !372

"end for Output.s0.c_out.rebased":                ; preds = %"end for Output.s0.y.rebased", %"produce Output"
  %703 = icmp sgt i32 %a33, 0
  %a30 = select i1 %703, i32 %a33, i32 0
  %704 = icmp sgt i32 %b32, %a30
  %b34 = select i1 %704, i32 %a30, i32 %b32
  %705 = icmp sgt i32 0, %a33
  %706 = select i1 %705, i32 %a33, i32 0
  %a32 = add nsw i32 %706, %b32
  %707 = icmp sgt i32 %a32, %b34
  %t151 = select i1 %707, i32 %a32, i32 %b34
  %708 = mul nsw i32 %b22, %Output.extent.1
  %709 = add nsw i32 %708, 31
  %t149 = ashr i32 %709, 5
  %t158 = sub nsw i32 %Output.min.2, %Filter.min.2
  %710 = ashr i32 %Filter.extent.1, 1
  %t154 = add nsw i32 %710, %Output.min.1
  %711 = ashr i32 %Filter.extent.0, 1
  %t156 = add nsw i32 %711, %Output.min.0
  %712 = mul nsw i32 %Output.min.1, %Output.stride.1
  %t152 = add nsw i32 %712, %Output.min.0
  %713 = mul nsw i32 %b14, %IMG.stride.1
  %t153 = add nsw i32 %713, %b8
  %t155 = add nsw i32 %IMG.extent.1, %b14
  %t157 = add nsw i32 %IMG.extent.0, %b8
  %714 = add nsw i32 0, %Output.extent.2
  %715 = icmp slt i32 0, %714
  br i1 %715, label %"for Output.s1.c_out.rebased", label %"end for Output.s1.c_out.rebased", !prof !372

"for Output.s0.y.rebased":                        ; preds = %"end for Output.s0.x.rebased", %"for Output.s0.c_out.rebased"
  %Output.s0.y.rebased = phi i32 [ 0, %"for Output.s0.c_out.rebased" ], [ %729, %"end for Output.s0.x.rebased" ]
  %716 = add nsw i32 %Output.min.1, %Output.s0.y.rebased
  %717 = mul nsw i32 %716, %Output.stride.1
  %t148 = add nsw i32 %717, %t147
  %718 = add nsw i32 0, %b22
  %719 = icmp slt i32 0, %718
  br i1 %719, label %"for Output.s0.x.rebased", label %"end for Output.s0.x.rebased", !prof !372

"end for Output.s0.y.rebased":                    ; preds = %"end for Output.s0.x.rebased", %"for Output.s0.c_out.rebased"
  %720 = add nsw i32 %Output.s0.c_out.rebased, 1
  %721 = icmp ne i32 %720, %697
  br i1 %721, label %"for Output.s0.c_out.rebased", label %"end for Output.s0.c_out.rebased"

"for Output.s0.x.rebased":                        ; preds = %"for Output.s0.x.rebased", %"for Output.s0.y.rebased"
  %Output.s0.x.rebased = phi i32 [ 0, %"for Output.s0.y.rebased" ], [ %727, %"for Output.s0.x.rebased" ]
  %722 = sext i32 %Output.s0.x.rebased to i64
  %723 = sext i32 %t148 to i64
  %724 = add nsw i64 %722, %723
  %725 = bitcast i8* %Output to i32*
  %726 = getelementptr inbounds i32, i32* %725, i64 %724
  store i32 0, i32* %726, align 4, !tbaa !375
  %727 = add nsw i32 %Output.s0.x.rebased, 1
  %728 = icmp ne i32 %727, %718
  br i1 %728, label %"for Output.s0.x.rebased", label %"end for Output.s0.x.rebased"

"end for Output.s0.x.rebased":                    ; preds = %"for Output.s0.x.rebased", %"for Output.s0.y.rebased"
  %729 = add nsw i32 %Output.s0.y.rebased, 1
  %730 = icmp ne i32 %729, %701
  br i1 %730, label %"for Output.s0.y.rebased", label %"end for Output.s0.y.rebased"

"for Output.s1.c_out.rebased":                    ; preds = %"end for Output.s1.x.x.x", %"end for Output.s0.c_out.rebased"
  %Output.s1.c_out.rebased = phi i32 [ 0, %"end for Output.s0.c_out.rebased" ], [ %737, %"end for Output.s1.x.x.x" ]
  %731 = add nsw i32 %Output.s1.c_out.rebased, %t158
  %t161 = mul nsw i32 %731, %Filter.stride.2
  %732 = mul nsw i32 %Output.s1.c_out.rebased, %Output.stride.2
  %t160 = sub nsw i32 %732, %t152
  %t162 = sub nsw i32 %t151, %b34
  %t165 = sub nsw i32 %t151, %a33
  %t164 = sub nsw i32 %b32, %t151
  %733 = add nsw i32 0, %t149
  %734 = icmp slt i32 0, %733
  br i1 %734, label %"for Output.s1.x.x.x", label %"end for Output.s1.x.x.x", !prof !372

"end for Output.s1.c_out.rebased":                ; preds = %"end for Output.s1.x.x.x", %"end for Output.s0.c_out.rebased"
  br label %after_bb11

"for Output.s1.x.x.x":                            ; preds = %"end for Output.s1.r10$z.rebased67", %"for Output.s1.c_out.rebased"
  %Output.s1.x.x.x = phi i32 [ 0, %"for Output.s1.c_out.rebased" ], [ %2183, %"end for Output.s1.r10$z.rebased67" ]
  %t166 = mul nsw i32 %Output.s1.x.x.x, 32
  %735 = add nsw i32 0, %b34
  %736 = icmp slt i32 0, %735
  br i1 %736, label %"for Output.s1.r10$z", label %"end for Output.s1.r10$z", !prof !372

"end for Output.s1.x.x.x":                        ; preds = %"end for Output.s1.r10$z.rebased67", %"for Output.s1.c_out.rebased"
  %737 = add nsw i32 %Output.s1.c_out.rebased, 1
  %738 = icmp ne i32 %737, %714
  br i1 %738, label %"for Output.s1.c_out.rebased", label %"end for Output.s1.c_out.rebased"

"for Output.s1.r10$z":                            ; preds = %"end for Output.s1.r10$y", %"for Output.s1.x.x.x"
  %"Output.s1.r10$z" = phi i32 [ 0, %"for Output.s1.x.x.x" ], [ %750, %"end for Output.s1.r10$y" ]
  %a35 = sub nsw i32 %"Output.s1.r10$z", %a33
  %b37 = add nsw i32 %b32, -1
  %739 = icmp sgt i32 %b37, %a35
  %a34 = select i1 %739, i32 %a35, i32 %b37
  %740 = icmp sgt i32 %a34, 0
  %741 = select i1 %740, i32 %a34, i32 0
  %742 = mul nsw i32 %741, %IMG.stride.2
  %t167 = sub nsw i32 %742, %t153
  %743 = add nsw i32 0, %Filter.extent.1
  %744 = icmp slt i32 0, %743
  br i1 %744, label %"for Output.s1.r10$y", label %"end for Output.s1.r10$y", !prof !372

"end for Output.s1.r10$z":                        ; preds = %"end for Output.s1.r10$y", %"for Output.s1.x.x.x"
  %t170 = mul nsw i32 %Output.s1.x.x.x, 32
  %t171 = sub nsw i32 %b34, %a33
  %745 = add nsw i32 0, %t162
  %746 = icmp slt i32 0, %745
  br i1 %746, label %"for Output.s1.r10$z.rebased", label %"end for Output.s1.r10$z.rebased", !prof !372

"for Output.s1.r10$y":                            ; preds = %"end for Output.s1.r10$x", %"for Output.s1.r10$z"
  %"Output.s1.r10$y" = phi i32 [ 0, %"for Output.s1.r10$z" ], [ %1457, %"end for Output.s1.r10$x" ]
  %t168 = sub nsw i32 %t154, %"Output.s1.r10$y"
  %747 = mul nsw i32 %Filter.stride.1, %"Output.s1.r10$y"
  %t169 = add nsw i32 %747, %t161
  %748 = add nsw i32 0, %Filter.extent.0
  %749 = icmp slt i32 0, %748
  br i1 %749, label %"for Output.s1.r10$x", label %"end for Output.s1.r10$x", !prof !372

"end for Output.s1.r10$y":                        ; preds = %"end for Output.s1.r10$x", %"for Output.s1.r10$z"
  %750 = add nsw i32 %"Output.s1.r10$z", 1
  %751 = icmp ne i32 %750, %735
  br i1 %751, label %"for Output.s1.r10$z", label %"end for Output.s1.r10$z"

"for Output.s1.r10$x":                            ; preds = %"for Output.s1.r10$x", %"for Output.s1.r10$y"
  %"Output.s1.r10$x" = phi i32 [ 0, %"for Output.s1.r10$y" ], [ %1455, %"for Output.s1.r10$x" ]
  %752 = insertelement <32 x i32> undef, i32 %t166, i32 0
  %753 = shufflevector <32 x i32> %752, <32 x i32> undef, <32 x i32> zeroinitializer
  %754 = add nsw <32 x i32> %753, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %755 = shufflevector <32 x i32> %754, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %756 = icmp sgt <16 x i32> zeroinitializer, %755
  %757 = shufflevector <32 x i32> %754, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %758 = icmp sgt <16 x i32> zeroinitializer, %757
  %759 = shufflevector <16 x i1> %756, <16 x i1> %758, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %760 = shufflevector <32 x i1> %759, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %761 = select <16 x i1> %760, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %762 = shufflevector <32 x i1> %759, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %763 = select <16 x i1> %762, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %t203 = shufflevector <16 x i32> %761, <16 x i32> %763, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %764 = icmp eq i32 %b22, 0
  %t204 = select i1 %764, <32 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <32 x i32> zeroinitializer
  %765 = icmp sgt i32 0, %b22
  %t205.s = select i1 %765, i32 -1, i32 0
  %766 = insertelement <32 x i32> undef, i32 %t166, i32 0
  %767 = shufflevector <32 x i32> %766, <32 x i32> undef, <32 x i32> zeroinitializer
  %768 = add nsw <32 x i32> %767, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %769 = sub nsw <32 x i32> %768, %t203
  %770 = insertelement <32 x i32> undef, i32 %b22, i32 0
  %771 = shufflevector <32 x i32> %770, <32 x i32> undef, <32 x i32> zeroinitializer
  %772 = sub nsw <32 x i32> %771, %t204
  %773 = sdiv <32 x i32> %769, %772
  %774 = xor i32 %t205.s, -1
  %775 = sub nsw i32 %774, %t205.s
  %776 = insertelement <32 x i32> undef, i32 %775, i32 0
  %777 = shufflevector <32 x i32> %776, <32 x i32> undef, <32 x i32> zeroinitializer
  %778 = and <32 x i32> %t203, %777
  %779 = add nsw <32 x i32> %773, %778
  %780 = xor <32 x i32> %t204, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %t120 = and <32 x i32> %779, %780
  %781 = insertelement <32 x i32> undef, i32 %t166, i32 0
  %782 = shufflevector <32 x i32> %781, <32 x i32> undef, <32 x i32> zeroinitializer
  %783 = add nsw <32 x i32> %782, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %784 = shufflevector <32 x i32> %783, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %785 = icmp sgt <16 x i32> zeroinitializer, %784
  %786 = shufflevector <32 x i32> %783, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %787 = icmp sgt <16 x i32> zeroinitializer, %786
  %788 = shufflevector <16 x i1> %785, <16 x i1> %787, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %789 = shufflevector <32 x i1> %788, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %790 = select <16 x i1> %789, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %791 = shufflevector <32 x i1> %788, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %792 = select <16 x i1> %791, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %t206 = shufflevector <16 x i32> %790, <16 x i32> %792, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %793 = icmp eq i32 %b22, 0
  %t207 = select i1 %793, <32 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <32 x i32> zeroinitializer
  %794 = icmp sgt i32 0, %b22
  %t208.s = select i1 %794, i32 -1, i32 0
  %795 = insertelement <32 x i32> undef, i32 %t166, i32 0
  %796 = shufflevector <32 x i32> %795, <32 x i32> undef, <32 x i32> zeroinitializer
  %797 = add nsw <32 x i32> %796, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %798 = sub nsw <32 x i32> %797, %t206
  %799 = insertelement <32 x i32> undef, i32 %b22, i32 0
  %800 = shufflevector <32 x i32> %799, <32 x i32> undef, <32 x i32> zeroinitializer
  %801 = or <32 x i32> %800, %t207
  %802 = srem <32 x i32> %798, %801
  %803 = xor i32 %b22, %t208.s
  %804 = xor i32 %t208.s, -1
  %805 = add nsw i32 %803, %804
  %806 = insertelement <32 x i32> undef, i32 %805, i32 0
  %807 = shufflevector <32 x i32> %806, <32 x i32> undef, <32 x i32> zeroinitializer
  %808 = and <32 x i32> %t206, %807
  %809 = add nsw <32 x i32> %802, %808
  %810 = xor <32 x i32> %t207, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %t121 = and <32 x i32> %809, %810
  %811 = insertelement <32 x i32> undef, i32 %Output.min.1, i32 0
  %812 = shufflevector <32 x i32> %811, <32 x i32> undef, <32 x i32> zeroinitializer
  %813 = add nsw <32 x i32> %t120, %812
  %814 = insertelement <32 x i32> undef, i32 %Output.stride.1, i32 0
  %815 = shufflevector <32 x i32> %814, <32 x i32> undef, <32 x i32> zeroinitializer
  %816 = mul nsw <32 x i32> %813, %815
  %817 = add nsw i32 %Output.min.0, %t160
  %818 = insertelement <32 x i32> undef, i32 %817, i32 0
  %819 = shufflevector <32 x i32> %818, <32 x i32> undef, <32 x i32> zeroinitializer
  %820 = add nsw <32 x i32> %816, %819
  %t122 = add nsw <32 x i32> %820, %t121
  %821 = extractelement <32 x i32> %t122, i32 0
  %822 = bitcast i8* %Output to i32*
  %823 = sext i32 %821 to i64
  %824 = getelementptr inbounds i32, i32* %822, i64 %823
  %825 = load i32, i32* %824, align 4, !tbaa !375
  %826 = insertelement <32 x i32> undef, i32 %825, i32 0
  %827 = extractelement <32 x i32> %t122, i32 1
  %828 = bitcast i8* %Output to i32*
  %829 = sext i32 %827 to i64
  %830 = getelementptr inbounds i32, i32* %828, i64 %829
  %831 = load i32, i32* %830, align 4, !tbaa !375
  %832 = insertelement <32 x i32> %826, i32 %831, i32 1
  %833 = extractelement <32 x i32> %t122, i32 2
  %834 = bitcast i8* %Output to i32*
  %835 = sext i32 %833 to i64
  %836 = getelementptr inbounds i32, i32* %834, i64 %835
  %837 = load i32, i32* %836, align 4, !tbaa !375
  %838 = insertelement <32 x i32> %832, i32 %837, i32 2
  %839 = extractelement <32 x i32> %t122, i32 3
  %840 = bitcast i8* %Output to i32*
  %841 = sext i32 %839 to i64
  %842 = getelementptr inbounds i32, i32* %840, i64 %841
  %843 = load i32, i32* %842, align 4, !tbaa !375
  %844 = insertelement <32 x i32> %838, i32 %843, i32 3
  %845 = extractelement <32 x i32> %t122, i32 4
  %846 = bitcast i8* %Output to i32*
  %847 = sext i32 %845 to i64
  %848 = getelementptr inbounds i32, i32* %846, i64 %847
  %849 = load i32, i32* %848, align 4, !tbaa !375
  %850 = insertelement <32 x i32> %844, i32 %849, i32 4
  %851 = extractelement <32 x i32> %t122, i32 5
  %852 = bitcast i8* %Output to i32*
  %853 = sext i32 %851 to i64
  %854 = getelementptr inbounds i32, i32* %852, i64 %853
  %855 = load i32, i32* %854, align 4, !tbaa !375
  %856 = insertelement <32 x i32> %850, i32 %855, i32 5
  %857 = extractelement <32 x i32> %t122, i32 6
  %858 = bitcast i8* %Output to i32*
  %859 = sext i32 %857 to i64
  %860 = getelementptr inbounds i32, i32* %858, i64 %859
  %861 = load i32, i32* %860, align 4, !tbaa !375
  %862 = insertelement <32 x i32> %856, i32 %861, i32 6
  %863 = extractelement <32 x i32> %t122, i32 7
  %864 = bitcast i8* %Output to i32*
  %865 = sext i32 %863 to i64
  %866 = getelementptr inbounds i32, i32* %864, i64 %865
  %867 = load i32, i32* %866, align 4, !tbaa !375
  %868 = insertelement <32 x i32> %862, i32 %867, i32 7
  %869 = extractelement <32 x i32> %t122, i32 8
  %870 = bitcast i8* %Output to i32*
  %871 = sext i32 %869 to i64
  %872 = getelementptr inbounds i32, i32* %870, i64 %871
  %873 = load i32, i32* %872, align 4, !tbaa !375
  %874 = insertelement <32 x i32> %868, i32 %873, i32 8
  %875 = extractelement <32 x i32> %t122, i32 9
  %876 = bitcast i8* %Output to i32*
  %877 = sext i32 %875 to i64
  %878 = getelementptr inbounds i32, i32* %876, i64 %877
  %879 = load i32, i32* %878, align 4, !tbaa !375
  %880 = insertelement <32 x i32> %874, i32 %879, i32 9
  %881 = extractelement <32 x i32> %t122, i32 10
  %882 = bitcast i8* %Output to i32*
  %883 = sext i32 %881 to i64
  %884 = getelementptr inbounds i32, i32* %882, i64 %883
  %885 = load i32, i32* %884, align 4, !tbaa !375
  %886 = insertelement <32 x i32> %880, i32 %885, i32 10
  %887 = extractelement <32 x i32> %t122, i32 11
  %888 = bitcast i8* %Output to i32*
  %889 = sext i32 %887 to i64
  %890 = getelementptr inbounds i32, i32* %888, i64 %889
  %891 = load i32, i32* %890, align 4, !tbaa !375
  %892 = insertelement <32 x i32> %886, i32 %891, i32 11
  %893 = extractelement <32 x i32> %t122, i32 12
  %894 = bitcast i8* %Output to i32*
  %895 = sext i32 %893 to i64
  %896 = getelementptr inbounds i32, i32* %894, i64 %895
  %897 = load i32, i32* %896, align 4, !tbaa !375
  %898 = insertelement <32 x i32> %892, i32 %897, i32 12
  %899 = extractelement <32 x i32> %t122, i32 13
  %900 = bitcast i8* %Output to i32*
  %901 = sext i32 %899 to i64
  %902 = getelementptr inbounds i32, i32* %900, i64 %901
  %903 = load i32, i32* %902, align 4, !tbaa !375
  %904 = insertelement <32 x i32> %898, i32 %903, i32 13
  %905 = extractelement <32 x i32> %t122, i32 14
  %906 = bitcast i8* %Output to i32*
  %907 = sext i32 %905 to i64
  %908 = getelementptr inbounds i32, i32* %906, i64 %907
  %909 = load i32, i32* %908, align 4, !tbaa !375
  %910 = insertelement <32 x i32> %904, i32 %909, i32 14
  %911 = extractelement <32 x i32> %t122, i32 15
  %912 = bitcast i8* %Output to i32*
  %913 = sext i32 %911 to i64
  %914 = getelementptr inbounds i32, i32* %912, i64 %913
  %915 = load i32, i32* %914, align 4, !tbaa !375
  %916 = insertelement <32 x i32> %910, i32 %915, i32 15
  %917 = extractelement <32 x i32> %t122, i32 16
  %918 = bitcast i8* %Output to i32*
  %919 = sext i32 %917 to i64
  %920 = getelementptr inbounds i32, i32* %918, i64 %919
  %921 = load i32, i32* %920, align 4, !tbaa !375
  %922 = insertelement <32 x i32> %916, i32 %921, i32 16
  %923 = extractelement <32 x i32> %t122, i32 17
  %924 = bitcast i8* %Output to i32*
  %925 = sext i32 %923 to i64
  %926 = getelementptr inbounds i32, i32* %924, i64 %925
  %927 = load i32, i32* %926, align 4, !tbaa !375
  %928 = insertelement <32 x i32> %922, i32 %927, i32 17
  %929 = extractelement <32 x i32> %t122, i32 18
  %930 = bitcast i8* %Output to i32*
  %931 = sext i32 %929 to i64
  %932 = getelementptr inbounds i32, i32* %930, i64 %931
  %933 = load i32, i32* %932, align 4, !tbaa !375
  %934 = insertelement <32 x i32> %928, i32 %933, i32 18
  %935 = extractelement <32 x i32> %t122, i32 19
  %936 = bitcast i8* %Output to i32*
  %937 = sext i32 %935 to i64
  %938 = getelementptr inbounds i32, i32* %936, i64 %937
  %939 = load i32, i32* %938, align 4, !tbaa !375
  %940 = insertelement <32 x i32> %934, i32 %939, i32 19
  %941 = extractelement <32 x i32> %t122, i32 20
  %942 = bitcast i8* %Output to i32*
  %943 = sext i32 %941 to i64
  %944 = getelementptr inbounds i32, i32* %942, i64 %943
  %945 = load i32, i32* %944, align 4, !tbaa !375
  %946 = insertelement <32 x i32> %940, i32 %945, i32 20
  %947 = extractelement <32 x i32> %t122, i32 21
  %948 = bitcast i8* %Output to i32*
  %949 = sext i32 %947 to i64
  %950 = getelementptr inbounds i32, i32* %948, i64 %949
  %951 = load i32, i32* %950, align 4, !tbaa !375
  %952 = insertelement <32 x i32> %946, i32 %951, i32 21
  %953 = extractelement <32 x i32> %t122, i32 22
  %954 = bitcast i8* %Output to i32*
  %955 = sext i32 %953 to i64
  %956 = getelementptr inbounds i32, i32* %954, i64 %955
  %957 = load i32, i32* %956, align 4, !tbaa !375
  %958 = insertelement <32 x i32> %952, i32 %957, i32 22
  %959 = extractelement <32 x i32> %t122, i32 23
  %960 = bitcast i8* %Output to i32*
  %961 = sext i32 %959 to i64
  %962 = getelementptr inbounds i32, i32* %960, i64 %961
  %963 = load i32, i32* %962, align 4, !tbaa !375
  %964 = insertelement <32 x i32> %958, i32 %963, i32 23
  %965 = extractelement <32 x i32> %t122, i32 24
  %966 = bitcast i8* %Output to i32*
  %967 = sext i32 %965 to i64
  %968 = getelementptr inbounds i32, i32* %966, i64 %967
  %969 = load i32, i32* %968, align 4, !tbaa !375
  %970 = insertelement <32 x i32> %964, i32 %969, i32 24
  %971 = extractelement <32 x i32> %t122, i32 25
  %972 = bitcast i8* %Output to i32*
  %973 = sext i32 %971 to i64
  %974 = getelementptr inbounds i32, i32* %972, i64 %973
  %975 = load i32, i32* %974, align 4, !tbaa !375
  %976 = insertelement <32 x i32> %970, i32 %975, i32 25
  %977 = extractelement <32 x i32> %t122, i32 26
  %978 = bitcast i8* %Output to i32*
  %979 = sext i32 %977 to i64
  %980 = getelementptr inbounds i32, i32* %978, i64 %979
  %981 = load i32, i32* %980, align 4, !tbaa !375
  %982 = insertelement <32 x i32> %976, i32 %981, i32 26
  %983 = extractelement <32 x i32> %t122, i32 27
  %984 = bitcast i8* %Output to i32*
  %985 = sext i32 %983 to i64
  %986 = getelementptr inbounds i32, i32* %984, i64 %985
  %987 = load i32, i32* %986, align 4, !tbaa !375
  %988 = insertelement <32 x i32> %982, i32 %987, i32 27
  %989 = extractelement <32 x i32> %t122, i32 28
  %990 = bitcast i8* %Output to i32*
  %991 = sext i32 %989 to i64
  %992 = getelementptr inbounds i32, i32* %990, i64 %991
  %993 = load i32, i32* %992, align 4, !tbaa !375
  %994 = insertelement <32 x i32> %988, i32 %993, i32 28
  %995 = extractelement <32 x i32> %t122, i32 29
  %996 = bitcast i8* %Output to i32*
  %997 = sext i32 %995 to i64
  %998 = getelementptr inbounds i32, i32* %996, i64 %997
  %999 = load i32, i32* %998, align 4, !tbaa !375
  %1000 = insertelement <32 x i32> %994, i32 %999, i32 29
  %1001 = extractelement <32 x i32> %t122, i32 30
  %1002 = bitcast i8* %Output to i32*
  %1003 = sext i32 %1001 to i64
  %1004 = getelementptr inbounds i32, i32* %1002, i64 %1003
  %1005 = load i32, i32* %1004, align 4, !tbaa !375
  %1006 = insertelement <32 x i32> %1000, i32 %1005, i32 30
  %1007 = extractelement <32 x i32> %t122, i32 31
  %1008 = bitcast i8* %Output to i32*
  %1009 = sext i32 %1007 to i64
  %1010 = getelementptr inbounds i32, i32* %1008, i64 %1009
  %1011 = load i32, i32* %1010, align 4, !tbaa !375
  %1012 = insertelement <32 x i32> %1006, i32 %1011, i32 31
  %1013 = sub nsw i32 %t156, %"Output.s1.r10$x"
  %1014 = insertelement <32 x i32> undef, i32 %1013, i32 0
  %1015 = shufflevector <32 x i32> %1014, <32 x i32> undef, <32 x i32> zeroinitializer
  %a37 = add nsw <32 x i32> %t121, %1015
  %1016 = add nsw i32 %t157, -1
  %1017 = insertelement <32 x i32> undef, i32 %1016, i32 0
  %b39 = shufflevector <32 x i32> %1017, <32 x i32> undef, <32 x i32> zeroinitializer
  %1018 = shufflevector <32 x i32> %b39, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1019 = shufflevector <32 x i32> %a37, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1020 = icmp sgt <16 x i32> %1018, %1019
  %1021 = shufflevector <32 x i32> %b39, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1022 = shufflevector <32 x i32> %a37, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1023 = icmp sgt <16 x i32> %1021, %1022
  %1024 = shufflevector <16 x i1> %1020, <16 x i1> %1023, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1025 = shufflevector <32 x i32> %a37, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1026 = shufflevector <32 x i32> %b39, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1027 = shufflevector <32 x i1> %1024, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1028 = select <16 x i1> %1027, <16 x i32> %1025, <16 x i32> %1026
  %1029 = shufflevector <32 x i32> %a37, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1030 = shufflevector <32 x i32> %b39, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1031 = shufflevector <32 x i1> %1024, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1032 = select <16 x i1> %1031, <16 x i32> %1029, <16 x i32> %1030
  %a36 = shufflevector <16 x i32> %1028, <16 x i32> %1032, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1033 = insertelement <32 x i32> undef, i32 %b8, i32 0
  %b38 = shufflevector <32 x i32> %1033, <32 x i32> undef, <32 x i32> zeroinitializer
  %1034 = shufflevector <32 x i32> %a36, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1035 = shufflevector <32 x i32> %b38, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1036 = icmp sgt <16 x i32> %1034, %1035
  %1037 = shufflevector <32 x i32> %a36, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1038 = shufflevector <32 x i32> %b38, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1039 = icmp sgt <16 x i32> %1037, %1038
  %1040 = shufflevector <16 x i1> %1036, <16 x i1> %1039, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1041 = shufflevector <32 x i32> %a36, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1042 = shufflevector <32 x i32> %b38, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1043 = shufflevector <32 x i1> %1040, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1044 = select <16 x i1> %1043, <16 x i32> %1041, <16 x i32> %1042
  %1045 = shufflevector <32 x i32> %a36, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1046 = shufflevector <32 x i32> %b38, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1047 = shufflevector <32 x i1> %1040, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1048 = select <16 x i1> %1047, <16 x i32> %1045, <16 x i32> %1046
  %1049 = shufflevector <16 x i32> %1044, <16 x i32> %1048, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1050 = insertelement <32 x i32> undef, i32 %t168, i32 0
  %1051 = shufflevector <32 x i32> %1050, <32 x i32> undef, <32 x i32> zeroinitializer
  %a39 = add nsw <32 x i32> %t120, %1051
  %1052 = add nsw i32 %t155, -1
  %1053 = insertelement <32 x i32> undef, i32 %1052, i32 0
  %b41 = shufflevector <32 x i32> %1053, <32 x i32> undef, <32 x i32> zeroinitializer
  %1054 = shufflevector <32 x i32> %b41, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1055 = shufflevector <32 x i32> %a39, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1056 = icmp sgt <16 x i32> %1054, %1055
  %1057 = shufflevector <32 x i32> %b41, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1058 = shufflevector <32 x i32> %a39, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1059 = icmp sgt <16 x i32> %1057, %1058
  %1060 = shufflevector <16 x i1> %1056, <16 x i1> %1059, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1061 = shufflevector <32 x i32> %a39, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1062 = shufflevector <32 x i32> %b41, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1063 = shufflevector <32 x i1> %1060, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1064 = select <16 x i1> %1063, <16 x i32> %1061, <16 x i32> %1062
  %1065 = shufflevector <32 x i32> %a39, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1066 = shufflevector <32 x i32> %b41, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1067 = shufflevector <32 x i1> %1060, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1068 = select <16 x i1> %1067, <16 x i32> %1065, <16 x i32> %1066
  %a38 = shufflevector <16 x i32> %1064, <16 x i32> %1068, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1069 = insertelement <32 x i32> undef, i32 %b14, i32 0
  %b40 = shufflevector <32 x i32> %1069, <32 x i32> undef, <32 x i32> zeroinitializer
  %1070 = shufflevector <32 x i32> %a38, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1071 = shufflevector <32 x i32> %b40, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1072 = icmp sgt <16 x i32> %1070, %1071
  %1073 = shufflevector <32 x i32> %a38, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1074 = shufflevector <32 x i32> %b40, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1075 = icmp sgt <16 x i32> %1073, %1074
  %1076 = shufflevector <16 x i1> %1072, <16 x i1> %1075, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1077 = shufflevector <32 x i32> %a38, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1078 = shufflevector <32 x i32> %b40, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1079 = shufflevector <32 x i1> %1076, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1080 = select <16 x i1> %1079, <16 x i32> %1077, <16 x i32> %1078
  %1081 = shufflevector <32 x i32> %a38, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1082 = shufflevector <32 x i32> %b40, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1083 = shufflevector <32 x i1> %1076, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1084 = select <16 x i1> %1083, <16 x i32> %1081, <16 x i32> %1082
  %1085 = shufflevector <16 x i32> %1080, <16 x i32> %1084, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1086 = insertelement <32 x i32> undef, i32 %IMG.stride.1, i32 0
  %1087 = shufflevector <32 x i32> %1086, <32 x i32> undef, <32 x i32> zeroinitializer
  %1088 = mul nsw <32 x i32> %1085, %1087
  %1089 = insertelement <32 x i32> undef, i32 %t167, i32 0
  %1090 = shufflevector <32 x i32> %1089, <32 x i32> undef, <32 x i32> zeroinitializer
  %1091 = add nsw <32 x i32> %1088, %1090
  %1092 = add nsw <32 x i32> %1049, %1091
  %1093 = extractelement <32 x i32> %1092, i32 0
  %1094 = bitcast i8* %IMG to i32*
  %1095 = sext i32 %1093 to i64
  %1096 = getelementptr inbounds i32, i32* %1094, i64 %1095
  %1097 = load i32, i32* %1096, align 4, !tbaa !378
  %1098 = insertelement <32 x i32> undef, i32 %1097, i32 0
  %1099 = extractelement <32 x i32> %1092, i32 1
  %1100 = bitcast i8* %IMG to i32*
  %1101 = sext i32 %1099 to i64
  %1102 = getelementptr inbounds i32, i32* %1100, i64 %1101
  %1103 = load i32, i32* %1102, align 4, !tbaa !378
  %1104 = insertelement <32 x i32> %1098, i32 %1103, i32 1
  %1105 = extractelement <32 x i32> %1092, i32 2
  %1106 = bitcast i8* %IMG to i32*
  %1107 = sext i32 %1105 to i64
  %1108 = getelementptr inbounds i32, i32* %1106, i64 %1107
  %1109 = load i32, i32* %1108, align 4, !tbaa !378
  %1110 = insertelement <32 x i32> %1104, i32 %1109, i32 2
  %1111 = extractelement <32 x i32> %1092, i32 3
  %1112 = bitcast i8* %IMG to i32*
  %1113 = sext i32 %1111 to i64
  %1114 = getelementptr inbounds i32, i32* %1112, i64 %1113
  %1115 = load i32, i32* %1114, align 4, !tbaa !378
  %1116 = insertelement <32 x i32> %1110, i32 %1115, i32 3
  %1117 = extractelement <32 x i32> %1092, i32 4
  %1118 = bitcast i8* %IMG to i32*
  %1119 = sext i32 %1117 to i64
  %1120 = getelementptr inbounds i32, i32* %1118, i64 %1119
  %1121 = load i32, i32* %1120, align 4, !tbaa !378
  %1122 = insertelement <32 x i32> %1116, i32 %1121, i32 4
  %1123 = extractelement <32 x i32> %1092, i32 5
  %1124 = bitcast i8* %IMG to i32*
  %1125 = sext i32 %1123 to i64
  %1126 = getelementptr inbounds i32, i32* %1124, i64 %1125
  %1127 = load i32, i32* %1126, align 4, !tbaa !378
  %1128 = insertelement <32 x i32> %1122, i32 %1127, i32 5
  %1129 = extractelement <32 x i32> %1092, i32 6
  %1130 = bitcast i8* %IMG to i32*
  %1131 = sext i32 %1129 to i64
  %1132 = getelementptr inbounds i32, i32* %1130, i64 %1131
  %1133 = load i32, i32* %1132, align 4, !tbaa !378
  %1134 = insertelement <32 x i32> %1128, i32 %1133, i32 6
  %1135 = extractelement <32 x i32> %1092, i32 7
  %1136 = bitcast i8* %IMG to i32*
  %1137 = sext i32 %1135 to i64
  %1138 = getelementptr inbounds i32, i32* %1136, i64 %1137
  %1139 = load i32, i32* %1138, align 4, !tbaa !378
  %1140 = insertelement <32 x i32> %1134, i32 %1139, i32 7
  %1141 = extractelement <32 x i32> %1092, i32 8
  %1142 = bitcast i8* %IMG to i32*
  %1143 = sext i32 %1141 to i64
  %1144 = getelementptr inbounds i32, i32* %1142, i64 %1143
  %1145 = load i32, i32* %1144, align 4, !tbaa !378
  %1146 = insertelement <32 x i32> %1140, i32 %1145, i32 8
  %1147 = extractelement <32 x i32> %1092, i32 9
  %1148 = bitcast i8* %IMG to i32*
  %1149 = sext i32 %1147 to i64
  %1150 = getelementptr inbounds i32, i32* %1148, i64 %1149
  %1151 = load i32, i32* %1150, align 4, !tbaa !378
  %1152 = insertelement <32 x i32> %1146, i32 %1151, i32 9
  %1153 = extractelement <32 x i32> %1092, i32 10
  %1154 = bitcast i8* %IMG to i32*
  %1155 = sext i32 %1153 to i64
  %1156 = getelementptr inbounds i32, i32* %1154, i64 %1155
  %1157 = load i32, i32* %1156, align 4, !tbaa !378
  %1158 = insertelement <32 x i32> %1152, i32 %1157, i32 10
  %1159 = extractelement <32 x i32> %1092, i32 11
  %1160 = bitcast i8* %IMG to i32*
  %1161 = sext i32 %1159 to i64
  %1162 = getelementptr inbounds i32, i32* %1160, i64 %1161
  %1163 = load i32, i32* %1162, align 4, !tbaa !378
  %1164 = insertelement <32 x i32> %1158, i32 %1163, i32 11
  %1165 = extractelement <32 x i32> %1092, i32 12
  %1166 = bitcast i8* %IMG to i32*
  %1167 = sext i32 %1165 to i64
  %1168 = getelementptr inbounds i32, i32* %1166, i64 %1167
  %1169 = load i32, i32* %1168, align 4, !tbaa !378
  %1170 = insertelement <32 x i32> %1164, i32 %1169, i32 12
  %1171 = extractelement <32 x i32> %1092, i32 13
  %1172 = bitcast i8* %IMG to i32*
  %1173 = sext i32 %1171 to i64
  %1174 = getelementptr inbounds i32, i32* %1172, i64 %1173
  %1175 = load i32, i32* %1174, align 4, !tbaa !378
  %1176 = insertelement <32 x i32> %1170, i32 %1175, i32 13
  %1177 = extractelement <32 x i32> %1092, i32 14
  %1178 = bitcast i8* %IMG to i32*
  %1179 = sext i32 %1177 to i64
  %1180 = getelementptr inbounds i32, i32* %1178, i64 %1179
  %1181 = load i32, i32* %1180, align 4, !tbaa !378
  %1182 = insertelement <32 x i32> %1176, i32 %1181, i32 14
  %1183 = extractelement <32 x i32> %1092, i32 15
  %1184 = bitcast i8* %IMG to i32*
  %1185 = sext i32 %1183 to i64
  %1186 = getelementptr inbounds i32, i32* %1184, i64 %1185
  %1187 = load i32, i32* %1186, align 4, !tbaa !378
  %1188 = insertelement <32 x i32> %1182, i32 %1187, i32 15
  %1189 = extractelement <32 x i32> %1092, i32 16
  %1190 = bitcast i8* %IMG to i32*
  %1191 = sext i32 %1189 to i64
  %1192 = getelementptr inbounds i32, i32* %1190, i64 %1191
  %1193 = load i32, i32* %1192, align 4, !tbaa !378
  %1194 = insertelement <32 x i32> %1188, i32 %1193, i32 16
  %1195 = extractelement <32 x i32> %1092, i32 17
  %1196 = bitcast i8* %IMG to i32*
  %1197 = sext i32 %1195 to i64
  %1198 = getelementptr inbounds i32, i32* %1196, i64 %1197
  %1199 = load i32, i32* %1198, align 4, !tbaa !378
  %1200 = insertelement <32 x i32> %1194, i32 %1199, i32 17
  %1201 = extractelement <32 x i32> %1092, i32 18
  %1202 = bitcast i8* %IMG to i32*
  %1203 = sext i32 %1201 to i64
  %1204 = getelementptr inbounds i32, i32* %1202, i64 %1203
  %1205 = load i32, i32* %1204, align 4, !tbaa !378
  %1206 = insertelement <32 x i32> %1200, i32 %1205, i32 18
  %1207 = extractelement <32 x i32> %1092, i32 19
  %1208 = bitcast i8* %IMG to i32*
  %1209 = sext i32 %1207 to i64
  %1210 = getelementptr inbounds i32, i32* %1208, i64 %1209
  %1211 = load i32, i32* %1210, align 4, !tbaa !378
  %1212 = insertelement <32 x i32> %1206, i32 %1211, i32 19
  %1213 = extractelement <32 x i32> %1092, i32 20
  %1214 = bitcast i8* %IMG to i32*
  %1215 = sext i32 %1213 to i64
  %1216 = getelementptr inbounds i32, i32* %1214, i64 %1215
  %1217 = load i32, i32* %1216, align 4, !tbaa !378
  %1218 = insertelement <32 x i32> %1212, i32 %1217, i32 20
  %1219 = extractelement <32 x i32> %1092, i32 21
  %1220 = bitcast i8* %IMG to i32*
  %1221 = sext i32 %1219 to i64
  %1222 = getelementptr inbounds i32, i32* %1220, i64 %1221
  %1223 = load i32, i32* %1222, align 4, !tbaa !378
  %1224 = insertelement <32 x i32> %1218, i32 %1223, i32 21
  %1225 = extractelement <32 x i32> %1092, i32 22
  %1226 = bitcast i8* %IMG to i32*
  %1227 = sext i32 %1225 to i64
  %1228 = getelementptr inbounds i32, i32* %1226, i64 %1227
  %1229 = load i32, i32* %1228, align 4, !tbaa !378
  %1230 = insertelement <32 x i32> %1224, i32 %1229, i32 22
  %1231 = extractelement <32 x i32> %1092, i32 23
  %1232 = bitcast i8* %IMG to i32*
  %1233 = sext i32 %1231 to i64
  %1234 = getelementptr inbounds i32, i32* %1232, i64 %1233
  %1235 = load i32, i32* %1234, align 4, !tbaa !378
  %1236 = insertelement <32 x i32> %1230, i32 %1235, i32 23
  %1237 = extractelement <32 x i32> %1092, i32 24
  %1238 = bitcast i8* %IMG to i32*
  %1239 = sext i32 %1237 to i64
  %1240 = getelementptr inbounds i32, i32* %1238, i64 %1239
  %1241 = load i32, i32* %1240, align 4, !tbaa !378
  %1242 = insertelement <32 x i32> %1236, i32 %1241, i32 24
  %1243 = extractelement <32 x i32> %1092, i32 25
  %1244 = bitcast i8* %IMG to i32*
  %1245 = sext i32 %1243 to i64
  %1246 = getelementptr inbounds i32, i32* %1244, i64 %1245
  %1247 = load i32, i32* %1246, align 4, !tbaa !378
  %1248 = insertelement <32 x i32> %1242, i32 %1247, i32 25
  %1249 = extractelement <32 x i32> %1092, i32 26
  %1250 = bitcast i8* %IMG to i32*
  %1251 = sext i32 %1249 to i64
  %1252 = getelementptr inbounds i32, i32* %1250, i64 %1251
  %1253 = load i32, i32* %1252, align 4, !tbaa !378
  %1254 = insertelement <32 x i32> %1248, i32 %1253, i32 26
  %1255 = extractelement <32 x i32> %1092, i32 27
  %1256 = bitcast i8* %IMG to i32*
  %1257 = sext i32 %1255 to i64
  %1258 = getelementptr inbounds i32, i32* %1256, i64 %1257
  %1259 = load i32, i32* %1258, align 4, !tbaa !378
  %1260 = insertelement <32 x i32> %1254, i32 %1259, i32 27
  %1261 = extractelement <32 x i32> %1092, i32 28
  %1262 = bitcast i8* %IMG to i32*
  %1263 = sext i32 %1261 to i64
  %1264 = getelementptr inbounds i32, i32* %1262, i64 %1263
  %1265 = load i32, i32* %1264, align 4, !tbaa !378
  %1266 = insertelement <32 x i32> %1260, i32 %1265, i32 28
  %1267 = extractelement <32 x i32> %1092, i32 29
  %1268 = bitcast i8* %IMG to i32*
  %1269 = sext i32 %1267 to i64
  %1270 = getelementptr inbounds i32, i32* %1268, i64 %1269
  %1271 = load i32, i32* %1270, align 4, !tbaa !378
  %1272 = insertelement <32 x i32> %1266, i32 %1271, i32 29
  %1273 = extractelement <32 x i32> %1092, i32 30
  %1274 = bitcast i8* %IMG to i32*
  %1275 = sext i32 %1273 to i64
  %1276 = getelementptr inbounds i32, i32* %1274, i64 %1275
  %1277 = load i32, i32* %1276, align 4, !tbaa !378
  %1278 = insertelement <32 x i32> %1272, i32 %1277, i32 30
  %1279 = extractelement <32 x i32> %1092, i32 31
  %1280 = bitcast i8* %IMG to i32*
  %1281 = sext i32 %1279 to i64
  %1282 = getelementptr inbounds i32, i32* %1280, i64 %1281
  %1283 = load i32, i32* %1282, align 4, !tbaa !378
  %1284 = insertelement <32 x i32> %1278, i32 %1283, i32 31
  %1285 = sext i32 %"Output.s1.r10$x" to i64
  %1286 = sext i32 %t169 to i64
  %1287 = add nsw i64 %1285, %1286
  %1288 = bitcast i8* %Filter to i32*
  %1289 = getelementptr inbounds i32, i32* %1288, i64 %1287
  %1290 = load i32, i32* %1289, align 4, !tbaa !380
  %1291 = insertelement <32 x i32> undef, i32 %1290, i32 0
  %1292 = shufflevector <32 x i32> %1291, <32 x i32> undef, <32 x i32> zeroinitializer
  %1293 = mul nsw <32 x i32> %1284, %1292
  %1294 = add nsw <32 x i32> %1012, %1293
  %1295 = extractelement <32 x i32> %t122, i32 0
  %1296 = extractelement <32 x i32> %1294, i32 0
  %1297 = bitcast i8* %Output to i32*
  %1298 = sext i32 %1295 to i64
  %1299 = getelementptr inbounds i32, i32* %1297, i64 %1298
  store i32 %1296, i32* %1299, align 4, !tbaa !375
  %1300 = extractelement <32 x i32> %t122, i32 1
  %1301 = extractelement <32 x i32> %1294, i32 1
  %1302 = bitcast i8* %Output to i32*
  %1303 = sext i32 %1300 to i64
  %1304 = getelementptr inbounds i32, i32* %1302, i64 %1303
  store i32 %1301, i32* %1304, align 4, !tbaa !375
  %1305 = extractelement <32 x i32> %t122, i32 2
  %1306 = extractelement <32 x i32> %1294, i32 2
  %1307 = bitcast i8* %Output to i32*
  %1308 = sext i32 %1305 to i64
  %1309 = getelementptr inbounds i32, i32* %1307, i64 %1308
  store i32 %1306, i32* %1309, align 4, !tbaa !375
  %1310 = extractelement <32 x i32> %t122, i32 3
  %1311 = extractelement <32 x i32> %1294, i32 3
  %1312 = bitcast i8* %Output to i32*
  %1313 = sext i32 %1310 to i64
  %1314 = getelementptr inbounds i32, i32* %1312, i64 %1313
  store i32 %1311, i32* %1314, align 4, !tbaa !375
  %1315 = extractelement <32 x i32> %t122, i32 4
  %1316 = extractelement <32 x i32> %1294, i32 4
  %1317 = bitcast i8* %Output to i32*
  %1318 = sext i32 %1315 to i64
  %1319 = getelementptr inbounds i32, i32* %1317, i64 %1318
  store i32 %1316, i32* %1319, align 4, !tbaa !375
  %1320 = extractelement <32 x i32> %t122, i32 5
  %1321 = extractelement <32 x i32> %1294, i32 5
  %1322 = bitcast i8* %Output to i32*
  %1323 = sext i32 %1320 to i64
  %1324 = getelementptr inbounds i32, i32* %1322, i64 %1323
  store i32 %1321, i32* %1324, align 4, !tbaa !375
  %1325 = extractelement <32 x i32> %t122, i32 6
  %1326 = extractelement <32 x i32> %1294, i32 6
  %1327 = bitcast i8* %Output to i32*
  %1328 = sext i32 %1325 to i64
  %1329 = getelementptr inbounds i32, i32* %1327, i64 %1328
  store i32 %1326, i32* %1329, align 4, !tbaa !375
  %1330 = extractelement <32 x i32> %t122, i32 7
  %1331 = extractelement <32 x i32> %1294, i32 7
  %1332 = bitcast i8* %Output to i32*
  %1333 = sext i32 %1330 to i64
  %1334 = getelementptr inbounds i32, i32* %1332, i64 %1333
  store i32 %1331, i32* %1334, align 4, !tbaa !375
  %1335 = extractelement <32 x i32> %t122, i32 8
  %1336 = extractelement <32 x i32> %1294, i32 8
  %1337 = bitcast i8* %Output to i32*
  %1338 = sext i32 %1335 to i64
  %1339 = getelementptr inbounds i32, i32* %1337, i64 %1338
  store i32 %1336, i32* %1339, align 4, !tbaa !375
  %1340 = extractelement <32 x i32> %t122, i32 9
  %1341 = extractelement <32 x i32> %1294, i32 9
  %1342 = bitcast i8* %Output to i32*
  %1343 = sext i32 %1340 to i64
  %1344 = getelementptr inbounds i32, i32* %1342, i64 %1343
  store i32 %1341, i32* %1344, align 4, !tbaa !375
  %1345 = extractelement <32 x i32> %t122, i32 10
  %1346 = extractelement <32 x i32> %1294, i32 10
  %1347 = bitcast i8* %Output to i32*
  %1348 = sext i32 %1345 to i64
  %1349 = getelementptr inbounds i32, i32* %1347, i64 %1348
  store i32 %1346, i32* %1349, align 4, !tbaa !375
  %1350 = extractelement <32 x i32> %t122, i32 11
  %1351 = extractelement <32 x i32> %1294, i32 11
  %1352 = bitcast i8* %Output to i32*
  %1353 = sext i32 %1350 to i64
  %1354 = getelementptr inbounds i32, i32* %1352, i64 %1353
  store i32 %1351, i32* %1354, align 4, !tbaa !375
  %1355 = extractelement <32 x i32> %t122, i32 12
  %1356 = extractelement <32 x i32> %1294, i32 12
  %1357 = bitcast i8* %Output to i32*
  %1358 = sext i32 %1355 to i64
  %1359 = getelementptr inbounds i32, i32* %1357, i64 %1358
  store i32 %1356, i32* %1359, align 4, !tbaa !375
  %1360 = extractelement <32 x i32> %t122, i32 13
  %1361 = extractelement <32 x i32> %1294, i32 13
  %1362 = bitcast i8* %Output to i32*
  %1363 = sext i32 %1360 to i64
  %1364 = getelementptr inbounds i32, i32* %1362, i64 %1363
  store i32 %1361, i32* %1364, align 4, !tbaa !375
  %1365 = extractelement <32 x i32> %t122, i32 14
  %1366 = extractelement <32 x i32> %1294, i32 14
  %1367 = bitcast i8* %Output to i32*
  %1368 = sext i32 %1365 to i64
  %1369 = getelementptr inbounds i32, i32* %1367, i64 %1368
  store i32 %1366, i32* %1369, align 4, !tbaa !375
  %1370 = extractelement <32 x i32> %t122, i32 15
  %1371 = extractelement <32 x i32> %1294, i32 15
  %1372 = bitcast i8* %Output to i32*
  %1373 = sext i32 %1370 to i64
  %1374 = getelementptr inbounds i32, i32* %1372, i64 %1373
  store i32 %1371, i32* %1374, align 4, !tbaa !375
  %1375 = extractelement <32 x i32> %t122, i32 16
  %1376 = extractelement <32 x i32> %1294, i32 16
  %1377 = bitcast i8* %Output to i32*
  %1378 = sext i32 %1375 to i64
  %1379 = getelementptr inbounds i32, i32* %1377, i64 %1378
  store i32 %1376, i32* %1379, align 4, !tbaa !375
  %1380 = extractelement <32 x i32> %t122, i32 17
  %1381 = extractelement <32 x i32> %1294, i32 17
  %1382 = bitcast i8* %Output to i32*
  %1383 = sext i32 %1380 to i64
  %1384 = getelementptr inbounds i32, i32* %1382, i64 %1383
  store i32 %1381, i32* %1384, align 4, !tbaa !375
  %1385 = extractelement <32 x i32> %t122, i32 18
  %1386 = extractelement <32 x i32> %1294, i32 18
  %1387 = bitcast i8* %Output to i32*
  %1388 = sext i32 %1385 to i64
  %1389 = getelementptr inbounds i32, i32* %1387, i64 %1388
  store i32 %1386, i32* %1389, align 4, !tbaa !375
  %1390 = extractelement <32 x i32> %t122, i32 19
  %1391 = extractelement <32 x i32> %1294, i32 19
  %1392 = bitcast i8* %Output to i32*
  %1393 = sext i32 %1390 to i64
  %1394 = getelementptr inbounds i32, i32* %1392, i64 %1393
  store i32 %1391, i32* %1394, align 4, !tbaa !375
  %1395 = extractelement <32 x i32> %t122, i32 20
  %1396 = extractelement <32 x i32> %1294, i32 20
  %1397 = bitcast i8* %Output to i32*
  %1398 = sext i32 %1395 to i64
  %1399 = getelementptr inbounds i32, i32* %1397, i64 %1398
  store i32 %1396, i32* %1399, align 4, !tbaa !375
  %1400 = extractelement <32 x i32> %t122, i32 21
  %1401 = extractelement <32 x i32> %1294, i32 21
  %1402 = bitcast i8* %Output to i32*
  %1403 = sext i32 %1400 to i64
  %1404 = getelementptr inbounds i32, i32* %1402, i64 %1403
  store i32 %1401, i32* %1404, align 4, !tbaa !375
  %1405 = extractelement <32 x i32> %t122, i32 22
  %1406 = extractelement <32 x i32> %1294, i32 22
  %1407 = bitcast i8* %Output to i32*
  %1408 = sext i32 %1405 to i64
  %1409 = getelementptr inbounds i32, i32* %1407, i64 %1408
  store i32 %1406, i32* %1409, align 4, !tbaa !375
  %1410 = extractelement <32 x i32> %t122, i32 23
  %1411 = extractelement <32 x i32> %1294, i32 23
  %1412 = bitcast i8* %Output to i32*
  %1413 = sext i32 %1410 to i64
  %1414 = getelementptr inbounds i32, i32* %1412, i64 %1413
  store i32 %1411, i32* %1414, align 4, !tbaa !375
  %1415 = extractelement <32 x i32> %t122, i32 24
  %1416 = extractelement <32 x i32> %1294, i32 24
  %1417 = bitcast i8* %Output to i32*
  %1418 = sext i32 %1415 to i64
  %1419 = getelementptr inbounds i32, i32* %1417, i64 %1418
  store i32 %1416, i32* %1419, align 4, !tbaa !375
  %1420 = extractelement <32 x i32> %t122, i32 25
  %1421 = extractelement <32 x i32> %1294, i32 25
  %1422 = bitcast i8* %Output to i32*
  %1423 = sext i32 %1420 to i64
  %1424 = getelementptr inbounds i32, i32* %1422, i64 %1423
  store i32 %1421, i32* %1424, align 4, !tbaa !375
  %1425 = extractelement <32 x i32> %t122, i32 26
  %1426 = extractelement <32 x i32> %1294, i32 26
  %1427 = bitcast i8* %Output to i32*
  %1428 = sext i32 %1425 to i64
  %1429 = getelementptr inbounds i32, i32* %1427, i64 %1428
  store i32 %1426, i32* %1429, align 4, !tbaa !375
  %1430 = extractelement <32 x i32> %t122, i32 27
  %1431 = extractelement <32 x i32> %1294, i32 27
  %1432 = bitcast i8* %Output to i32*
  %1433 = sext i32 %1430 to i64
  %1434 = getelementptr inbounds i32, i32* %1432, i64 %1433
  store i32 %1431, i32* %1434, align 4, !tbaa !375
  %1435 = extractelement <32 x i32> %t122, i32 28
  %1436 = extractelement <32 x i32> %1294, i32 28
  %1437 = bitcast i8* %Output to i32*
  %1438 = sext i32 %1435 to i64
  %1439 = getelementptr inbounds i32, i32* %1437, i64 %1438
  store i32 %1436, i32* %1439, align 4, !tbaa !375
  %1440 = extractelement <32 x i32> %t122, i32 29
  %1441 = extractelement <32 x i32> %1294, i32 29
  %1442 = bitcast i8* %Output to i32*
  %1443 = sext i32 %1440 to i64
  %1444 = getelementptr inbounds i32, i32* %1442, i64 %1443
  store i32 %1441, i32* %1444, align 4, !tbaa !375
  %1445 = extractelement <32 x i32> %t122, i32 30
  %1446 = extractelement <32 x i32> %1294, i32 30
  %1447 = bitcast i8* %Output to i32*
  %1448 = sext i32 %1445 to i64
  %1449 = getelementptr inbounds i32, i32* %1447, i64 %1448
  store i32 %1446, i32* %1449, align 4, !tbaa !375
  %1450 = extractelement <32 x i32> %t122, i32 31
  %1451 = extractelement <32 x i32> %1294, i32 31
  %1452 = bitcast i8* %Output to i32*
  %1453 = sext i32 %1450 to i64
  %1454 = getelementptr inbounds i32, i32* %1452, i64 %1453
  store i32 %1451, i32* %1454, align 4, !tbaa !375
  %1455 = add nsw i32 %"Output.s1.r10$x", 1
  %1456 = icmp ne i32 %1455, %748
  br i1 %1456, label %"for Output.s1.r10$x", label %"end for Output.s1.r10$x"

"end for Output.s1.r10$x":                        ; preds = %"for Output.s1.r10$x", %"for Output.s1.r10$y"
  %1457 = add nsw i32 %"Output.s1.r10$y", 1
  %1458 = icmp ne i32 %1457, %743
  br i1 %1458, label %"for Output.s1.r10$y", label %"end for Output.s1.r10$y"

"for Output.s1.r10$z.rebased":                    ; preds = %"end for Output.s1.r10$y61", %"end for Output.s1.r10$z"
  %"Output.s1.r10$z.rebased" = phi i32 [ 0, %"end for Output.s1.r10$z" ], [ %1468, %"end for Output.s1.r10$y61" ]
  %1459 = add nsw i32 %"Output.s1.r10$z.rebased", %t171
  %1460 = mul nsw i32 %1459, %IMG.stride.2
  %t172 = sub nsw i32 %1460, %t153
  %1461 = add nsw i32 0, %Filter.extent.1
  %1462 = icmp slt i32 0, %1461
  br i1 %1462, label %"for Output.s1.r10$y60", label %"end for Output.s1.r10$y61", !prof !372

"end for Output.s1.r10$z.rebased":                ; preds = %"end for Output.s1.r10$y61", %"end for Output.s1.r10$z"
  %t175 = mul nsw i32 %Output.s1.x.x.x, 32
  %1463 = add nsw i32 0, %t164
  %1464 = icmp slt i32 0, %1463
  br i1 %1464, label %"for Output.s1.r10$z.rebased66", label %"end for Output.s1.r10$z.rebased67", !prof !372

"for Output.s1.r10$y60":                          ; preds = %"end for Output.s1.r10$x64", %"for Output.s1.r10$z.rebased"
  %"Output.s1.r10$y62" = phi i32 [ 0, %"for Output.s1.r10$z.rebased" ], [ %2175, %"end for Output.s1.r10$x64" ]
  %t173 = sub nsw i32 %t154, %"Output.s1.r10$y62"
  %1465 = mul nsw i32 %Filter.stride.1, %"Output.s1.r10$y62"
  %t174 = add nsw i32 %1465, %t161
  %1466 = add nsw i32 0, %Filter.extent.0
  %1467 = icmp slt i32 0, %1466
  br i1 %1467, label %"for Output.s1.r10$x63", label %"end for Output.s1.r10$x64", !prof !372

"end for Output.s1.r10$y61":                      ; preds = %"end for Output.s1.r10$x64", %"for Output.s1.r10$z.rebased"
  %1468 = add nsw i32 %"Output.s1.r10$z.rebased", 1
  %1469 = icmp ne i32 %1468, %745
  br i1 %1469, label %"for Output.s1.r10$z.rebased", label %"end for Output.s1.r10$z.rebased"

"for Output.s1.r10$x63":                          ; preds = %"for Output.s1.r10$x63", %"for Output.s1.r10$y60"
  %"Output.s1.r10$x65" = phi i32 [ 0, %"for Output.s1.r10$y60" ], [ %2173, %"for Output.s1.r10$x63" ]
  %1470 = insertelement <32 x i32> undef, i32 %t170, i32 0
  %1471 = shufflevector <32 x i32> %1470, <32 x i32> undef, <32 x i32> zeroinitializer
  %1472 = add nsw <32 x i32> %1471, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1473 = shufflevector <32 x i32> %1472, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1474 = icmp sgt <16 x i32> zeroinitializer, %1473
  %1475 = shufflevector <32 x i32> %1472, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1476 = icmp sgt <16 x i32> zeroinitializer, %1475
  %1477 = shufflevector <16 x i1> %1474, <16 x i1> %1476, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1478 = shufflevector <32 x i1> %1477, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1479 = select <16 x i1> %1478, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %1480 = shufflevector <32 x i1> %1477, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1481 = select <16 x i1> %1480, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %t209 = shufflevector <16 x i32> %1479, <16 x i32> %1481, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1482 = icmp eq i32 %b22, 0
  %t210 = select i1 %1482, <32 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <32 x i32> zeroinitializer
  %1483 = icmp sgt i32 0, %b22
  %t211.s = select i1 %1483, i32 -1, i32 0
  %1484 = insertelement <32 x i32> undef, i32 %t170, i32 0
  %1485 = shufflevector <32 x i32> %1484, <32 x i32> undef, <32 x i32> zeroinitializer
  %1486 = add nsw <32 x i32> %1485, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1487 = sub nsw <32 x i32> %1486, %t209
  %1488 = insertelement <32 x i32> undef, i32 %b22, i32 0
  %1489 = shufflevector <32 x i32> %1488, <32 x i32> undef, <32 x i32> zeroinitializer
  %1490 = sub nsw <32 x i32> %1489, %t210
  %1491 = sdiv <32 x i32> %1487, %1490
  %1492 = xor i32 %t211.s, -1
  %1493 = sub nsw i32 %1492, %t211.s
  %1494 = insertelement <32 x i32> undef, i32 %1493, i32 0
  %1495 = shufflevector <32 x i32> %1494, <32 x i32> undef, <32 x i32> zeroinitializer
  %1496 = and <32 x i32> %t209, %1495
  %1497 = add nsw <32 x i32> %1491, %1496
  %1498 = xor <32 x i32> %t210, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %t123 = and <32 x i32> %1497, %1498
  %1499 = insertelement <32 x i32> undef, i32 %t170, i32 0
  %1500 = shufflevector <32 x i32> %1499, <32 x i32> undef, <32 x i32> zeroinitializer
  %1501 = add nsw <32 x i32> %1500, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1502 = shufflevector <32 x i32> %1501, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1503 = icmp sgt <16 x i32> zeroinitializer, %1502
  %1504 = shufflevector <32 x i32> %1501, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1505 = icmp sgt <16 x i32> zeroinitializer, %1504
  %1506 = shufflevector <16 x i1> %1503, <16 x i1> %1505, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1507 = shufflevector <32 x i1> %1506, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1508 = select <16 x i1> %1507, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %1509 = shufflevector <32 x i1> %1506, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1510 = select <16 x i1> %1509, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %t212 = shufflevector <16 x i32> %1508, <16 x i32> %1510, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1511 = icmp eq i32 %b22, 0
  %t213 = select i1 %1511, <32 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <32 x i32> zeroinitializer
  %1512 = icmp sgt i32 0, %b22
  %t214.s = select i1 %1512, i32 -1, i32 0
  %1513 = insertelement <32 x i32> undef, i32 %t170, i32 0
  %1514 = shufflevector <32 x i32> %1513, <32 x i32> undef, <32 x i32> zeroinitializer
  %1515 = add nsw <32 x i32> %1514, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1516 = sub nsw <32 x i32> %1515, %t212
  %1517 = insertelement <32 x i32> undef, i32 %b22, i32 0
  %1518 = shufflevector <32 x i32> %1517, <32 x i32> undef, <32 x i32> zeroinitializer
  %1519 = or <32 x i32> %1518, %t213
  %1520 = srem <32 x i32> %1516, %1519
  %1521 = xor i32 %b22, %t214.s
  %1522 = xor i32 %t214.s, -1
  %1523 = add nsw i32 %1521, %1522
  %1524 = insertelement <32 x i32> undef, i32 %1523, i32 0
  %1525 = shufflevector <32 x i32> %1524, <32 x i32> undef, <32 x i32> zeroinitializer
  %1526 = and <32 x i32> %t212, %1525
  %1527 = add nsw <32 x i32> %1520, %1526
  %1528 = xor <32 x i32> %t213, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %t124 = and <32 x i32> %1527, %1528
  %1529 = insertelement <32 x i32> undef, i32 %Output.min.1, i32 0
  %1530 = shufflevector <32 x i32> %1529, <32 x i32> undef, <32 x i32> zeroinitializer
  %1531 = add nsw <32 x i32> %t123, %1530
  %1532 = insertelement <32 x i32> undef, i32 %Output.stride.1, i32 0
  %1533 = shufflevector <32 x i32> %1532, <32 x i32> undef, <32 x i32> zeroinitializer
  %1534 = mul nsw <32 x i32> %1531, %1533
  %1535 = add nsw i32 %Output.min.0, %t160
  %1536 = insertelement <32 x i32> undef, i32 %1535, i32 0
  %1537 = shufflevector <32 x i32> %1536, <32 x i32> undef, <32 x i32> zeroinitializer
  %1538 = add nsw <32 x i32> %1534, %1537
  %t125 = add nsw <32 x i32> %1538, %t124
  %1539 = extractelement <32 x i32> %t125, i32 0
  %1540 = bitcast i8* %Output to i32*
  %1541 = sext i32 %1539 to i64
  %1542 = getelementptr inbounds i32, i32* %1540, i64 %1541
  %1543 = load i32, i32* %1542, align 4, !tbaa !375
  %1544 = insertelement <32 x i32> undef, i32 %1543, i32 0
  %1545 = extractelement <32 x i32> %t125, i32 1
  %1546 = bitcast i8* %Output to i32*
  %1547 = sext i32 %1545 to i64
  %1548 = getelementptr inbounds i32, i32* %1546, i64 %1547
  %1549 = load i32, i32* %1548, align 4, !tbaa !375
  %1550 = insertelement <32 x i32> %1544, i32 %1549, i32 1
  %1551 = extractelement <32 x i32> %t125, i32 2
  %1552 = bitcast i8* %Output to i32*
  %1553 = sext i32 %1551 to i64
  %1554 = getelementptr inbounds i32, i32* %1552, i64 %1553
  %1555 = load i32, i32* %1554, align 4, !tbaa !375
  %1556 = insertelement <32 x i32> %1550, i32 %1555, i32 2
  %1557 = extractelement <32 x i32> %t125, i32 3
  %1558 = bitcast i8* %Output to i32*
  %1559 = sext i32 %1557 to i64
  %1560 = getelementptr inbounds i32, i32* %1558, i64 %1559
  %1561 = load i32, i32* %1560, align 4, !tbaa !375
  %1562 = insertelement <32 x i32> %1556, i32 %1561, i32 3
  %1563 = extractelement <32 x i32> %t125, i32 4
  %1564 = bitcast i8* %Output to i32*
  %1565 = sext i32 %1563 to i64
  %1566 = getelementptr inbounds i32, i32* %1564, i64 %1565
  %1567 = load i32, i32* %1566, align 4, !tbaa !375
  %1568 = insertelement <32 x i32> %1562, i32 %1567, i32 4
  %1569 = extractelement <32 x i32> %t125, i32 5
  %1570 = bitcast i8* %Output to i32*
  %1571 = sext i32 %1569 to i64
  %1572 = getelementptr inbounds i32, i32* %1570, i64 %1571
  %1573 = load i32, i32* %1572, align 4, !tbaa !375
  %1574 = insertelement <32 x i32> %1568, i32 %1573, i32 5
  %1575 = extractelement <32 x i32> %t125, i32 6
  %1576 = bitcast i8* %Output to i32*
  %1577 = sext i32 %1575 to i64
  %1578 = getelementptr inbounds i32, i32* %1576, i64 %1577
  %1579 = load i32, i32* %1578, align 4, !tbaa !375
  %1580 = insertelement <32 x i32> %1574, i32 %1579, i32 6
  %1581 = extractelement <32 x i32> %t125, i32 7
  %1582 = bitcast i8* %Output to i32*
  %1583 = sext i32 %1581 to i64
  %1584 = getelementptr inbounds i32, i32* %1582, i64 %1583
  %1585 = load i32, i32* %1584, align 4, !tbaa !375
  %1586 = insertelement <32 x i32> %1580, i32 %1585, i32 7
  %1587 = extractelement <32 x i32> %t125, i32 8
  %1588 = bitcast i8* %Output to i32*
  %1589 = sext i32 %1587 to i64
  %1590 = getelementptr inbounds i32, i32* %1588, i64 %1589
  %1591 = load i32, i32* %1590, align 4, !tbaa !375
  %1592 = insertelement <32 x i32> %1586, i32 %1591, i32 8
  %1593 = extractelement <32 x i32> %t125, i32 9
  %1594 = bitcast i8* %Output to i32*
  %1595 = sext i32 %1593 to i64
  %1596 = getelementptr inbounds i32, i32* %1594, i64 %1595
  %1597 = load i32, i32* %1596, align 4, !tbaa !375
  %1598 = insertelement <32 x i32> %1592, i32 %1597, i32 9
  %1599 = extractelement <32 x i32> %t125, i32 10
  %1600 = bitcast i8* %Output to i32*
  %1601 = sext i32 %1599 to i64
  %1602 = getelementptr inbounds i32, i32* %1600, i64 %1601
  %1603 = load i32, i32* %1602, align 4, !tbaa !375
  %1604 = insertelement <32 x i32> %1598, i32 %1603, i32 10
  %1605 = extractelement <32 x i32> %t125, i32 11
  %1606 = bitcast i8* %Output to i32*
  %1607 = sext i32 %1605 to i64
  %1608 = getelementptr inbounds i32, i32* %1606, i64 %1607
  %1609 = load i32, i32* %1608, align 4, !tbaa !375
  %1610 = insertelement <32 x i32> %1604, i32 %1609, i32 11
  %1611 = extractelement <32 x i32> %t125, i32 12
  %1612 = bitcast i8* %Output to i32*
  %1613 = sext i32 %1611 to i64
  %1614 = getelementptr inbounds i32, i32* %1612, i64 %1613
  %1615 = load i32, i32* %1614, align 4, !tbaa !375
  %1616 = insertelement <32 x i32> %1610, i32 %1615, i32 12
  %1617 = extractelement <32 x i32> %t125, i32 13
  %1618 = bitcast i8* %Output to i32*
  %1619 = sext i32 %1617 to i64
  %1620 = getelementptr inbounds i32, i32* %1618, i64 %1619
  %1621 = load i32, i32* %1620, align 4, !tbaa !375
  %1622 = insertelement <32 x i32> %1616, i32 %1621, i32 13
  %1623 = extractelement <32 x i32> %t125, i32 14
  %1624 = bitcast i8* %Output to i32*
  %1625 = sext i32 %1623 to i64
  %1626 = getelementptr inbounds i32, i32* %1624, i64 %1625
  %1627 = load i32, i32* %1626, align 4, !tbaa !375
  %1628 = insertelement <32 x i32> %1622, i32 %1627, i32 14
  %1629 = extractelement <32 x i32> %t125, i32 15
  %1630 = bitcast i8* %Output to i32*
  %1631 = sext i32 %1629 to i64
  %1632 = getelementptr inbounds i32, i32* %1630, i64 %1631
  %1633 = load i32, i32* %1632, align 4, !tbaa !375
  %1634 = insertelement <32 x i32> %1628, i32 %1633, i32 15
  %1635 = extractelement <32 x i32> %t125, i32 16
  %1636 = bitcast i8* %Output to i32*
  %1637 = sext i32 %1635 to i64
  %1638 = getelementptr inbounds i32, i32* %1636, i64 %1637
  %1639 = load i32, i32* %1638, align 4, !tbaa !375
  %1640 = insertelement <32 x i32> %1634, i32 %1639, i32 16
  %1641 = extractelement <32 x i32> %t125, i32 17
  %1642 = bitcast i8* %Output to i32*
  %1643 = sext i32 %1641 to i64
  %1644 = getelementptr inbounds i32, i32* %1642, i64 %1643
  %1645 = load i32, i32* %1644, align 4, !tbaa !375
  %1646 = insertelement <32 x i32> %1640, i32 %1645, i32 17
  %1647 = extractelement <32 x i32> %t125, i32 18
  %1648 = bitcast i8* %Output to i32*
  %1649 = sext i32 %1647 to i64
  %1650 = getelementptr inbounds i32, i32* %1648, i64 %1649
  %1651 = load i32, i32* %1650, align 4, !tbaa !375
  %1652 = insertelement <32 x i32> %1646, i32 %1651, i32 18
  %1653 = extractelement <32 x i32> %t125, i32 19
  %1654 = bitcast i8* %Output to i32*
  %1655 = sext i32 %1653 to i64
  %1656 = getelementptr inbounds i32, i32* %1654, i64 %1655
  %1657 = load i32, i32* %1656, align 4, !tbaa !375
  %1658 = insertelement <32 x i32> %1652, i32 %1657, i32 19
  %1659 = extractelement <32 x i32> %t125, i32 20
  %1660 = bitcast i8* %Output to i32*
  %1661 = sext i32 %1659 to i64
  %1662 = getelementptr inbounds i32, i32* %1660, i64 %1661
  %1663 = load i32, i32* %1662, align 4, !tbaa !375
  %1664 = insertelement <32 x i32> %1658, i32 %1663, i32 20
  %1665 = extractelement <32 x i32> %t125, i32 21
  %1666 = bitcast i8* %Output to i32*
  %1667 = sext i32 %1665 to i64
  %1668 = getelementptr inbounds i32, i32* %1666, i64 %1667
  %1669 = load i32, i32* %1668, align 4, !tbaa !375
  %1670 = insertelement <32 x i32> %1664, i32 %1669, i32 21
  %1671 = extractelement <32 x i32> %t125, i32 22
  %1672 = bitcast i8* %Output to i32*
  %1673 = sext i32 %1671 to i64
  %1674 = getelementptr inbounds i32, i32* %1672, i64 %1673
  %1675 = load i32, i32* %1674, align 4, !tbaa !375
  %1676 = insertelement <32 x i32> %1670, i32 %1675, i32 22
  %1677 = extractelement <32 x i32> %t125, i32 23
  %1678 = bitcast i8* %Output to i32*
  %1679 = sext i32 %1677 to i64
  %1680 = getelementptr inbounds i32, i32* %1678, i64 %1679
  %1681 = load i32, i32* %1680, align 4, !tbaa !375
  %1682 = insertelement <32 x i32> %1676, i32 %1681, i32 23
  %1683 = extractelement <32 x i32> %t125, i32 24
  %1684 = bitcast i8* %Output to i32*
  %1685 = sext i32 %1683 to i64
  %1686 = getelementptr inbounds i32, i32* %1684, i64 %1685
  %1687 = load i32, i32* %1686, align 4, !tbaa !375
  %1688 = insertelement <32 x i32> %1682, i32 %1687, i32 24
  %1689 = extractelement <32 x i32> %t125, i32 25
  %1690 = bitcast i8* %Output to i32*
  %1691 = sext i32 %1689 to i64
  %1692 = getelementptr inbounds i32, i32* %1690, i64 %1691
  %1693 = load i32, i32* %1692, align 4, !tbaa !375
  %1694 = insertelement <32 x i32> %1688, i32 %1693, i32 25
  %1695 = extractelement <32 x i32> %t125, i32 26
  %1696 = bitcast i8* %Output to i32*
  %1697 = sext i32 %1695 to i64
  %1698 = getelementptr inbounds i32, i32* %1696, i64 %1697
  %1699 = load i32, i32* %1698, align 4, !tbaa !375
  %1700 = insertelement <32 x i32> %1694, i32 %1699, i32 26
  %1701 = extractelement <32 x i32> %t125, i32 27
  %1702 = bitcast i8* %Output to i32*
  %1703 = sext i32 %1701 to i64
  %1704 = getelementptr inbounds i32, i32* %1702, i64 %1703
  %1705 = load i32, i32* %1704, align 4, !tbaa !375
  %1706 = insertelement <32 x i32> %1700, i32 %1705, i32 27
  %1707 = extractelement <32 x i32> %t125, i32 28
  %1708 = bitcast i8* %Output to i32*
  %1709 = sext i32 %1707 to i64
  %1710 = getelementptr inbounds i32, i32* %1708, i64 %1709
  %1711 = load i32, i32* %1710, align 4, !tbaa !375
  %1712 = insertelement <32 x i32> %1706, i32 %1711, i32 28
  %1713 = extractelement <32 x i32> %t125, i32 29
  %1714 = bitcast i8* %Output to i32*
  %1715 = sext i32 %1713 to i64
  %1716 = getelementptr inbounds i32, i32* %1714, i64 %1715
  %1717 = load i32, i32* %1716, align 4, !tbaa !375
  %1718 = insertelement <32 x i32> %1712, i32 %1717, i32 29
  %1719 = extractelement <32 x i32> %t125, i32 30
  %1720 = bitcast i8* %Output to i32*
  %1721 = sext i32 %1719 to i64
  %1722 = getelementptr inbounds i32, i32* %1720, i64 %1721
  %1723 = load i32, i32* %1722, align 4, !tbaa !375
  %1724 = insertelement <32 x i32> %1718, i32 %1723, i32 30
  %1725 = extractelement <32 x i32> %t125, i32 31
  %1726 = bitcast i8* %Output to i32*
  %1727 = sext i32 %1725 to i64
  %1728 = getelementptr inbounds i32, i32* %1726, i64 %1727
  %1729 = load i32, i32* %1728, align 4, !tbaa !375
  %1730 = insertelement <32 x i32> %1724, i32 %1729, i32 31
  %1731 = sub nsw i32 %t156, %"Output.s1.r10$x65"
  %1732 = insertelement <32 x i32> undef, i32 %1731, i32 0
  %1733 = shufflevector <32 x i32> %1732, <32 x i32> undef, <32 x i32> zeroinitializer
  %a41 = add nsw <32 x i32> %t124, %1733
  %1734 = add nsw i32 %t157, -1
  %1735 = insertelement <32 x i32> undef, i32 %1734, i32 0
  %b43 = shufflevector <32 x i32> %1735, <32 x i32> undef, <32 x i32> zeroinitializer
  %1736 = shufflevector <32 x i32> %b43, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1737 = shufflevector <32 x i32> %a41, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1738 = icmp sgt <16 x i32> %1736, %1737
  %1739 = shufflevector <32 x i32> %b43, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1740 = shufflevector <32 x i32> %a41, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1741 = icmp sgt <16 x i32> %1739, %1740
  %1742 = shufflevector <16 x i1> %1738, <16 x i1> %1741, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1743 = shufflevector <32 x i32> %a41, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1744 = shufflevector <32 x i32> %b43, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1745 = shufflevector <32 x i1> %1742, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1746 = select <16 x i1> %1745, <16 x i32> %1743, <16 x i32> %1744
  %1747 = shufflevector <32 x i32> %a41, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1748 = shufflevector <32 x i32> %b43, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1749 = shufflevector <32 x i1> %1742, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1750 = select <16 x i1> %1749, <16 x i32> %1747, <16 x i32> %1748
  %a40 = shufflevector <16 x i32> %1746, <16 x i32> %1750, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1751 = insertelement <32 x i32> undef, i32 %b8, i32 0
  %b42 = shufflevector <32 x i32> %1751, <32 x i32> undef, <32 x i32> zeroinitializer
  %1752 = shufflevector <32 x i32> %a40, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1753 = shufflevector <32 x i32> %b42, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1754 = icmp sgt <16 x i32> %1752, %1753
  %1755 = shufflevector <32 x i32> %a40, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1756 = shufflevector <32 x i32> %b42, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1757 = icmp sgt <16 x i32> %1755, %1756
  %1758 = shufflevector <16 x i1> %1754, <16 x i1> %1757, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1759 = shufflevector <32 x i32> %a40, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1760 = shufflevector <32 x i32> %b42, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1761 = shufflevector <32 x i1> %1758, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1762 = select <16 x i1> %1761, <16 x i32> %1759, <16 x i32> %1760
  %1763 = shufflevector <32 x i32> %a40, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1764 = shufflevector <32 x i32> %b42, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1765 = shufflevector <32 x i1> %1758, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1766 = select <16 x i1> %1765, <16 x i32> %1763, <16 x i32> %1764
  %1767 = shufflevector <16 x i32> %1762, <16 x i32> %1766, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1768 = insertelement <32 x i32> undef, i32 %t173, i32 0
  %1769 = shufflevector <32 x i32> %1768, <32 x i32> undef, <32 x i32> zeroinitializer
  %a43 = add nsw <32 x i32> %t123, %1769
  %1770 = add nsw i32 %t155, -1
  %1771 = insertelement <32 x i32> undef, i32 %1770, i32 0
  %b45 = shufflevector <32 x i32> %1771, <32 x i32> undef, <32 x i32> zeroinitializer
  %1772 = shufflevector <32 x i32> %b45, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1773 = shufflevector <32 x i32> %a43, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1774 = icmp sgt <16 x i32> %1772, %1773
  %1775 = shufflevector <32 x i32> %b45, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1776 = shufflevector <32 x i32> %a43, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1777 = icmp sgt <16 x i32> %1775, %1776
  %1778 = shufflevector <16 x i1> %1774, <16 x i1> %1777, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1779 = shufflevector <32 x i32> %a43, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1780 = shufflevector <32 x i32> %b45, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1781 = shufflevector <32 x i1> %1778, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1782 = select <16 x i1> %1781, <16 x i32> %1779, <16 x i32> %1780
  %1783 = shufflevector <32 x i32> %a43, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1784 = shufflevector <32 x i32> %b45, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1785 = shufflevector <32 x i1> %1778, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1786 = select <16 x i1> %1785, <16 x i32> %1783, <16 x i32> %1784
  %a42 = shufflevector <16 x i32> %1782, <16 x i32> %1786, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1787 = insertelement <32 x i32> undef, i32 %b14, i32 0
  %b44 = shufflevector <32 x i32> %1787, <32 x i32> undef, <32 x i32> zeroinitializer
  %1788 = shufflevector <32 x i32> %a42, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1789 = shufflevector <32 x i32> %b44, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1790 = icmp sgt <16 x i32> %1788, %1789
  %1791 = shufflevector <32 x i32> %a42, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1792 = shufflevector <32 x i32> %b44, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1793 = icmp sgt <16 x i32> %1791, %1792
  %1794 = shufflevector <16 x i1> %1790, <16 x i1> %1793, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1795 = shufflevector <32 x i32> %a42, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1796 = shufflevector <32 x i32> %b44, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1797 = shufflevector <32 x i1> %1794, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1798 = select <16 x i1> %1797, <16 x i32> %1795, <16 x i32> %1796
  %1799 = shufflevector <32 x i32> %a42, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1800 = shufflevector <32 x i32> %b44, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1801 = shufflevector <32 x i1> %1794, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1802 = select <16 x i1> %1801, <16 x i32> %1799, <16 x i32> %1800
  %1803 = shufflevector <16 x i32> %1798, <16 x i32> %1802, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1804 = insertelement <32 x i32> undef, i32 %IMG.stride.1, i32 0
  %1805 = shufflevector <32 x i32> %1804, <32 x i32> undef, <32 x i32> zeroinitializer
  %1806 = mul nsw <32 x i32> %1803, %1805
  %1807 = insertelement <32 x i32> undef, i32 %t172, i32 0
  %1808 = shufflevector <32 x i32> %1807, <32 x i32> undef, <32 x i32> zeroinitializer
  %1809 = add nsw <32 x i32> %1806, %1808
  %1810 = add nsw <32 x i32> %1767, %1809
  %1811 = extractelement <32 x i32> %1810, i32 0
  %1812 = bitcast i8* %IMG to i32*
  %1813 = sext i32 %1811 to i64
  %1814 = getelementptr inbounds i32, i32* %1812, i64 %1813
  %1815 = load i32, i32* %1814, align 4, !tbaa !378
  %1816 = insertelement <32 x i32> undef, i32 %1815, i32 0
  %1817 = extractelement <32 x i32> %1810, i32 1
  %1818 = bitcast i8* %IMG to i32*
  %1819 = sext i32 %1817 to i64
  %1820 = getelementptr inbounds i32, i32* %1818, i64 %1819
  %1821 = load i32, i32* %1820, align 4, !tbaa !378
  %1822 = insertelement <32 x i32> %1816, i32 %1821, i32 1
  %1823 = extractelement <32 x i32> %1810, i32 2
  %1824 = bitcast i8* %IMG to i32*
  %1825 = sext i32 %1823 to i64
  %1826 = getelementptr inbounds i32, i32* %1824, i64 %1825
  %1827 = load i32, i32* %1826, align 4, !tbaa !378
  %1828 = insertelement <32 x i32> %1822, i32 %1827, i32 2
  %1829 = extractelement <32 x i32> %1810, i32 3
  %1830 = bitcast i8* %IMG to i32*
  %1831 = sext i32 %1829 to i64
  %1832 = getelementptr inbounds i32, i32* %1830, i64 %1831
  %1833 = load i32, i32* %1832, align 4, !tbaa !378
  %1834 = insertelement <32 x i32> %1828, i32 %1833, i32 3
  %1835 = extractelement <32 x i32> %1810, i32 4
  %1836 = bitcast i8* %IMG to i32*
  %1837 = sext i32 %1835 to i64
  %1838 = getelementptr inbounds i32, i32* %1836, i64 %1837
  %1839 = load i32, i32* %1838, align 4, !tbaa !378
  %1840 = insertelement <32 x i32> %1834, i32 %1839, i32 4
  %1841 = extractelement <32 x i32> %1810, i32 5
  %1842 = bitcast i8* %IMG to i32*
  %1843 = sext i32 %1841 to i64
  %1844 = getelementptr inbounds i32, i32* %1842, i64 %1843
  %1845 = load i32, i32* %1844, align 4, !tbaa !378
  %1846 = insertelement <32 x i32> %1840, i32 %1845, i32 5
  %1847 = extractelement <32 x i32> %1810, i32 6
  %1848 = bitcast i8* %IMG to i32*
  %1849 = sext i32 %1847 to i64
  %1850 = getelementptr inbounds i32, i32* %1848, i64 %1849
  %1851 = load i32, i32* %1850, align 4, !tbaa !378
  %1852 = insertelement <32 x i32> %1846, i32 %1851, i32 6
  %1853 = extractelement <32 x i32> %1810, i32 7
  %1854 = bitcast i8* %IMG to i32*
  %1855 = sext i32 %1853 to i64
  %1856 = getelementptr inbounds i32, i32* %1854, i64 %1855
  %1857 = load i32, i32* %1856, align 4, !tbaa !378
  %1858 = insertelement <32 x i32> %1852, i32 %1857, i32 7
  %1859 = extractelement <32 x i32> %1810, i32 8
  %1860 = bitcast i8* %IMG to i32*
  %1861 = sext i32 %1859 to i64
  %1862 = getelementptr inbounds i32, i32* %1860, i64 %1861
  %1863 = load i32, i32* %1862, align 4, !tbaa !378
  %1864 = insertelement <32 x i32> %1858, i32 %1863, i32 8
  %1865 = extractelement <32 x i32> %1810, i32 9
  %1866 = bitcast i8* %IMG to i32*
  %1867 = sext i32 %1865 to i64
  %1868 = getelementptr inbounds i32, i32* %1866, i64 %1867
  %1869 = load i32, i32* %1868, align 4, !tbaa !378
  %1870 = insertelement <32 x i32> %1864, i32 %1869, i32 9
  %1871 = extractelement <32 x i32> %1810, i32 10
  %1872 = bitcast i8* %IMG to i32*
  %1873 = sext i32 %1871 to i64
  %1874 = getelementptr inbounds i32, i32* %1872, i64 %1873
  %1875 = load i32, i32* %1874, align 4, !tbaa !378
  %1876 = insertelement <32 x i32> %1870, i32 %1875, i32 10
  %1877 = extractelement <32 x i32> %1810, i32 11
  %1878 = bitcast i8* %IMG to i32*
  %1879 = sext i32 %1877 to i64
  %1880 = getelementptr inbounds i32, i32* %1878, i64 %1879
  %1881 = load i32, i32* %1880, align 4, !tbaa !378
  %1882 = insertelement <32 x i32> %1876, i32 %1881, i32 11
  %1883 = extractelement <32 x i32> %1810, i32 12
  %1884 = bitcast i8* %IMG to i32*
  %1885 = sext i32 %1883 to i64
  %1886 = getelementptr inbounds i32, i32* %1884, i64 %1885
  %1887 = load i32, i32* %1886, align 4, !tbaa !378
  %1888 = insertelement <32 x i32> %1882, i32 %1887, i32 12
  %1889 = extractelement <32 x i32> %1810, i32 13
  %1890 = bitcast i8* %IMG to i32*
  %1891 = sext i32 %1889 to i64
  %1892 = getelementptr inbounds i32, i32* %1890, i64 %1891
  %1893 = load i32, i32* %1892, align 4, !tbaa !378
  %1894 = insertelement <32 x i32> %1888, i32 %1893, i32 13
  %1895 = extractelement <32 x i32> %1810, i32 14
  %1896 = bitcast i8* %IMG to i32*
  %1897 = sext i32 %1895 to i64
  %1898 = getelementptr inbounds i32, i32* %1896, i64 %1897
  %1899 = load i32, i32* %1898, align 4, !tbaa !378
  %1900 = insertelement <32 x i32> %1894, i32 %1899, i32 14
  %1901 = extractelement <32 x i32> %1810, i32 15
  %1902 = bitcast i8* %IMG to i32*
  %1903 = sext i32 %1901 to i64
  %1904 = getelementptr inbounds i32, i32* %1902, i64 %1903
  %1905 = load i32, i32* %1904, align 4, !tbaa !378
  %1906 = insertelement <32 x i32> %1900, i32 %1905, i32 15
  %1907 = extractelement <32 x i32> %1810, i32 16
  %1908 = bitcast i8* %IMG to i32*
  %1909 = sext i32 %1907 to i64
  %1910 = getelementptr inbounds i32, i32* %1908, i64 %1909
  %1911 = load i32, i32* %1910, align 4, !tbaa !378
  %1912 = insertelement <32 x i32> %1906, i32 %1911, i32 16
  %1913 = extractelement <32 x i32> %1810, i32 17
  %1914 = bitcast i8* %IMG to i32*
  %1915 = sext i32 %1913 to i64
  %1916 = getelementptr inbounds i32, i32* %1914, i64 %1915
  %1917 = load i32, i32* %1916, align 4, !tbaa !378
  %1918 = insertelement <32 x i32> %1912, i32 %1917, i32 17
  %1919 = extractelement <32 x i32> %1810, i32 18
  %1920 = bitcast i8* %IMG to i32*
  %1921 = sext i32 %1919 to i64
  %1922 = getelementptr inbounds i32, i32* %1920, i64 %1921
  %1923 = load i32, i32* %1922, align 4, !tbaa !378
  %1924 = insertelement <32 x i32> %1918, i32 %1923, i32 18
  %1925 = extractelement <32 x i32> %1810, i32 19
  %1926 = bitcast i8* %IMG to i32*
  %1927 = sext i32 %1925 to i64
  %1928 = getelementptr inbounds i32, i32* %1926, i64 %1927
  %1929 = load i32, i32* %1928, align 4, !tbaa !378
  %1930 = insertelement <32 x i32> %1924, i32 %1929, i32 19
  %1931 = extractelement <32 x i32> %1810, i32 20
  %1932 = bitcast i8* %IMG to i32*
  %1933 = sext i32 %1931 to i64
  %1934 = getelementptr inbounds i32, i32* %1932, i64 %1933
  %1935 = load i32, i32* %1934, align 4, !tbaa !378
  %1936 = insertelement <32 x i32> %1930, i32 %1935, i32 20
  %1937 = extractelement <32 x i32> %1810, i32 21
  %1938 = bitcast i8* %IMG to i32*
  %1939 = sext i32 %1937 to i64
  %1940 = getelementptr inbounds i32, i32* %1938, i64 %1939
  %1941 = load i32, i32* %1940, align 4, !tbaa !378
  %1942 = insertelement <32 x i32> %1936, i32 %1941, i32 21
  %1943 = extractelement <32 x i32> %1810, i32 22
  %1944 = bitcast i8* %IMG to i32*
  %1945 = sext i32 %1943 to i64
  %1946 = getelementptr inbounds i32, i32* %1944, i64 %1945
  %1947 = load i32, i32* %1946, align 4, !tbaa !378
  %1948 = insertelement <32 x i32> %1942, i32 %1947, i32 22
  %1949 = extractelement <32 x i32> %1810, i32 23
  %1950 = bitcast i8* %IMG to i32*
  %1951 = sext i32 %1949 to i64
  %1952 = getelementptr inbounds i32, i32* %1950, i64 %1951
  %1953 = load i32, i32* %1952, align 4, !tbaa !378
  %1954 = insertelement <32 x i32> %1948, i32 %1953, i32 23
  %1955 = extractelement <32 x i32> %1810, i32 24
  %1956 = bitcast i8* %IMG to i32*
  %1957 = sext i32 %1955 to i64
  %1958 = getelementptr inbounds i32, i32* %1956, i64 %1957
  %1959 = load i32, i32* %1958, align 4, !tbaa !378
  %1960 = insertelement <32 x i32> %1954, i32 %1959, i32 24
  %1961 = extractelement <32 x i32> %1810, i32 25
  %1962 = bitcast i8* %IMG to i32*
  %1963 = sext i32 %1961 to i64
  %1964 = getelementptr inbounds i32, i32* %1962, i64 %1963
  %1965 = load i32, i32* %1964, align 4, !tbaa !378
  %1966 = insertelement <32 x i32> %1960, i32 %1965, i32 25
  %1967 = extractelement <32 x i32> %1810, i32 26
  %1968 = bitcast i8* %IMG to i32*
  %1969 = sext i32 %1967 to i64
  %1970 = getelementptr inbounds i32, i32* %1968, i64 %1969
  %1971 = load i32, i32* %1970, align 4, !tbaa !378
  %1972 = insertelement <32 x i32> %1966, i32 %1971, i32 26
  %1973 = extractelement <32 x i32> %1810, i32 27
  %1974 = bitcast i8* %IMG to i32*
  %1975 = sext i32 %1973 to i64
  %1976 = getelementptr inbounds i32, i32* %1974, i64 %1975
  %1977 = load i32, i32* %1976, align 4, !tbaa !378
  %1978 = insertelement <32 x i32> %1972, i32 %1977, i32 27
  %1979 = extractelement <32 x i32> %1810, i32 28
  %1980 = bitcast i8* %IMG to i32*
  %1981 = sext i32 %1979 to i64
  %1982 = getelementptr inbounds i32, i32* %1980, i64 %1981
  %1983 = load i32, i32* %1982, align 4, !tbaa !378
  %1984 = insertelement <32 x i32> %1978, i32 %1983, i32 28
  %1985 = extractelement <32 x i32> %1810, i32 29
  %1986 = bitcast i8* %IMG to i32*
  %1987 = sext i32 %1985 to i64
  %1988 = getelementptr inbounds i32, i32* %1986, i64 %1987
  %1989 = load i32, i32* %1988, align 4, !tbaa !378
  %1990 = insertelement <32 x i32> %1984, i32 %1989, i32 29
  %1991 = extractelement <32 x i32> %1810, i32 30
  %1992 = bitcast i8* %IMG to i32*
  %1993 = sext i32 %1991 to i64
  %1994 = getelementptr inbounds i32, i32* %1992, i64 %1993
  %1995 = load i32, i32* %1994, align 4, !tbaa !378
  %1996 = insertelement <32 x i32> %1990, i32 %1995, i32 30
  %1997 = extractelement <32 x i32> %1810, i32 31
  %1998 = bitcast i8* %IMG to i32*
  %1999 = sext i32 %1997 to i64
  %2000 = getelementptr inbounds i32, i32* %1998, i64 %1999
  %2001 = load i32, i32* %2000, align 4, !tbaa !378
  %2002 = insertelement <32 x i32> %1996, i32 %2001, i32 31
  %2003 = sext i32 %"Output.s1.r10$x65" to i64
  %2004 = sext i32 %t174 to i64
  %2005 = add nsw i64 %2003, %2004
  %2006 = bitcast i8* %Filter to i32*
  %2007 = getelementptr inbounds i32, i32* %2006, i64 %2005
  %2008 = load i32, i32* %2007, align 4, !tbaa !380
  %2009 = insertelement <32 x i32> undef, i32 %2008, i32 0
  %2010 = shufflevector <32 x i32> %2009, <32 x i32> undef, <32 x i32> zeroinitializer
  %2011 = mul nsw <32 x i32> %2002, %2010
  %2012 = add nsw <32 x i32> %1730, %2011
  %2013 = extractelement <32 x i32> %t125, i32 0
  %2014 = extractelement <32 x i32> %2012, i32 0
  %2015 = bitcast i8* %Output to i32*
  %2016 = sext i32 %2013 to i64
  %2017 = getelementptr inbounds i32, i32* %2015, i64 %2016
  store i32 %2014, i32* %2017, align 4, !tbaa !375
  %2018 = extractelement <32 x i32> %t125, i32 1
  %2019 = extractelement <32 x i32> %2012, i32 1
  %2020 = bitcast i8* %Output to i32*
  %2021 = sext i32 %2018 to i64
  %2022 = getelementptr inbounds i32, i32* %2020, i64 %2021
  store i32 %2019, i32* %2022, align 4, !tbaa !375
  %2023 = extractelement <32 x i32> %t125, i32 2
  %2024 = extractelement <32 x i32> %2012, i32 2
  %2025 = bitcast i8* %Output to i32*
  %2026 = sext i32 %2023 to i64
  %2027 = getelementptr inbounds i32, i32* %2025, i64 %2026
  store i32 %2024, i32* %2027, align 4, !tbaa !375
  %2028 = extractelement <32 x i32> %t125, i32 3
  %2029 = extractelement <32 x i32> %2012, i32 3
  %2030 = bitcast i8* %Output to i32*
  %2031 = sext i32 %2028 to i64
  %2032 = getelementptr inbounds i32, i32* %2030, i64 %2031
  store i32 %2029, i32* %2032, align 4, !tbaa !375
  %2033 = extractelement <32 x i32> %t125, i32 4
  %2034 = extractelement <32 x i32> %2012, i32 4
  %2035 = bitcast i8* %Output to i32*
  %2036 = sext i32 %2033 to i64
  %2037 = getelementptr inbounds i32, i32* %2035, i64 %2036
  store i32 %2034, i32* %2037, align 4, !tbaa !375
  %2038 = extractelement <32 x i32> %t125, i32 5
  %2039 = extractelement <32 x i32> %2012, i32 5
  %2040 = bitcast i8* %Output to i32*
  %2041 = sext i32 %2038 to i64
  %2042 = getelementptr inbounds i32, i32* %2040, i64 %2041
  store i32 %2039, i32* %2042, align 4, !tbaa !375
  %2043 = extractelement <32 x i32> %t125, i32 6
  %2044 = extractelement <32 x i32> %2012, i32 6
  %2045 = bitcast i8* %Output to i32*
  %2046 = sext i32 %2043 to i64
  %2047 = getelementptr inbounds i32, i32* %2045, i64 %2046
  store i32 %2044, i32* %2047, align 4, !tbaa !375
  %2048 = extractelement <32 x i32> %t125, i32 7
  %2049 = extractelement <32 x i32> %2012, i32 7
  %2050 = bitcast i8* %Output to i32*
  %2051 = sext i32 %2048 to i64
  %2052 = getelementptr inbounds i32, i32* %2050, i64 %2051
  store i32 %2049, i32* %2052, align 4, !tbaa !375
  %2053 = extractelement <32 x i32> %t125, i32 8
  %2054 = extractelement <32 x i32> %2012, i32 8
  %2055 = bitcast i8* %Output to i32*
  %2056 = sext i32 %2053 to i64
  %2057 = getelementptr inbounds i32, i32* %2055, i64 %2056
  store i32 %2054, i32* %2057, align 4, !tbaa !375
  %2058 = extractelement <32 x i32> %t125, i32 9
  %2059 = extractelement <32 x i32> %2012, i32 9
  %2060 = bitcast i8* %Output to i32*
  %2061 = sext i32 %2058 to i64
  %2062 = getelementptr inbounds i32, i32* %2060, i64 %2061
  store i32 %2059, i32* %2062, align 4, !tbaa !375
  %2063 = extractelement <32 x i32> %t125, i32 10
  %2064 = extractelement <32 x i32> %2012, i32 10
  %2065 = bitcast i8* %Output to i32*
  %2066 = sext i32 %2063 to i64
  %2067 = getelementptr inbounds i32, i32* %2065, i64 %2066
  store i32 %2064, i32* %2067, align 4, !tbaa !375
  %2068 = extractelement <32 x i32> %t125, i32 11
  %2069 = extractelement <32 x i32> %2012, i32 11
  %2070 = bitcast i8* %Output to i32*
  %2071 = sext i32 %2068 to i64
  %2072 = getelementptr inbounds i32, i32* %2070, i64 %2071
  store i32 %2069, i32* %2072, align 4, !tbaa !375
  %2073 = extractelement <32 x i32> %t125, i32 12
  %2074 = extractelement <32 x i32> %2012, i32 12
  %2075 = bitcast i8* %Output to i32*
  %2076 = sext i32 %2073 to i64
  %2077 = getelementptr inbounds i32, i32* %2075, i64 %2076
  store i32 %2074, i32* %2077, align 4, !tbaa !375
  %2078 = extractelement <32 x i32> %t125, i32 13
  %2079 = extractelement <32 x i32> %2012, i32 13
  %2080 = bitcast i8* %Output to i32*
  %2081 = sext i32 %2078 to i64
  %2082 = getelementptr inbounds i32, i32* %2080, i64 %2081
  store i32 %2079, i32* %2082, align 4, !tbaa !375
  %2083 = extractelement <32 x i32> %t125, i32 14
  %2084 = extractelement <32 x i32> %2012, i32 14
  %2085 = bitcast i8* %Output to i32*
  %2086 = sext i32 %2083 to i64
  %2087 = getelementptr inbounds i32, i32* %2085, i64 %2086
  store i32 %2084, i32* %2087, align 4, !tbaa !375
  %2088 = extractelement <32 x i32> %t125, i32 15
  %2089 = extractelement <32 x i32> %2012, i32 15
  %2090 = bitcast i8* %Output to i32*
  %2091 = sext i32 %2088 to i64
  %2092 = getelementptr inbounds i32, i32* %2090, i64 %2091
  store i32 %2089, i32* %2092, align 4, !tbaa !375
  %2093 = extractelement <32 x i32> %t125, i32 16
  %2094 = extractelement <32 x i32> %2012, i32 16
  %2095 = bitcast i8* %Output to i32*
  %2096 = sext i32 %2093 to i64
  %2097 = getelementptr inbounds i32, i32* %2095, i64 %2096
  store i32 %2094, i32* %2097, align 4, !tbaa !375
  %2098 = extractelement <32 x i32> %t125, i32 17
  %2099 = extractelement <32 x i32> %2012, i32 17
  %2100 = bitcast i8* %Output to i32*
  %2101 = sext i32 %2098 to i64
  %2102 = getelementptr inbounds i32, i32* %2100, i64 %2101
  store i32 %2099, i32* %2102, align 4, !tbaa !375
  %2103 = extractelement <32 x i32> %t125, i32 18
  %2104 = extractelement <32 x i32> %2012, i32 18
  %2105 = bitcast i8* %Output to i32*
  %2106 = sext i32 %2103 to i64
  %2107 = getelementptr inbounds i32, i32* %2105, i64 %2106
  store i32 %2104, i32* %2107, align 4, !tbaa !375
  %2108 = extractelement <32 x i32> %t125, i32 19
  %2109 = extractelement <32 x i32> %2012, i32 19
  %2110 = bitcast i8* %Output to i32*
  %2111 = sext i32 %2108 to i64
  %2112 = getelementptr inbounds i32, i32* %2110, i64 %2111
  store i32 %2109, i32* %2112, align 4, !tbaa !375
  %2113 = extractelement <32 x i32> %t125, i32 20
  %2114 = extractelement <32 x i32> %2012, i32 20
  %2115 = bitcast i8* %Output to i32*
  %2116 = sext i32 %2113 to i64
  %2117 = getelementptr inbounds i32, i32* %2115, i64 %2116
  store i32 %2114, i32* %2117, align 4, !tbaa !375
  %2118 = extractelement <32 x i32> %t125, i32 21
  %2119 = extractelement <32 x i32> %2012, i32 21
  %2120 = bitcast i8* %Output to i32*
  %2121 = sext i32 %2118 to i64
  %2122 = getelementptr inbounds i32, i32* %2120, i64 %2121
  store i32 %2119, i32* %2122, align 4, !tbaa !375
  %2123 = extractelement <32 x i32> %t125, i32 22
  %2124 = extractelement <32 x i32> %2012, i32 22
  %2125 = bitcast i8* %Output to i32*
  %2126 = sext i32 %2123 to i64
  %2127 = getelementptr inbounds i32, i32* %2125, i64 %2126
  store i32 %2124, i32* %2127, align 4, !tbaa !375
  %2128 = extractelement <32 x i32> %t125, i32 23
  %2129 = extractelement <32 x i32> %2012, i32 23
  %2130 = bitcast i8* %Output to i32*
  %2131 = sext i32 %2128 to i64
  %2132 = getelementptr inbounds i32, i32* %2130, i64 %2131
  store i32 %2129, i32* %2132, align 4, !tbaa !375
  %2133 = extractelement <32 x i32> %t125, i32 24
  %2134 = extractelement <32 x i32> %2012, i32 24
  %2135 = bitcast i8* %Output to i32*
  %2136 = sext i32 %2133 to i64
  %2137 = getelementptr inbounds i32, i32* %2135, i64 %2136
  store i32 %2134, i32* %2137, align 4, !tbaa !375
  %2138 = extractelement <32 x i32> %t125, i32 25
  %2139 = extractelement <32 x i32> %2012, i32 25
  %2140 = bitcast i8* %Output to i32*
  %2141 = sext i32 %2138 to i64
  %2142 = getelementptr inbounds i32, i32* %2140, i64 %2141
  store i32 %2139, i32* %2142, align 4, !tbaa !375
  %2143 = extractelement <32 x i32> %t125, i32 26
  %2144 = extractelement <32 x i32> %2012, i32 26
  %2145 = bitcast i8* %Output to i32*
  %2146 = sext i32 %2143 to i64
  %2147 = getelementptr inbounds i32, i32* %2145, i64 %2146
  store i32 %2144, i32* %2147, align 4, !tbaa !375
  %2148 = extractelement <32 x i32> %t125, i32 27
  %2149 = extractelement <32 x i32> %2012, i32 27
  %2150 = bitcast i8* %Output to i32*
  %2151 = sext i32 %2148 to i64
  %2152 = getelementptr inbounds i32, i32* %2150, i64 %2151
  store i32 %2149, i32* %2152, align 4, !tbaa !375
  %2153 = extractelement <32 x i32> %t125, i32 28
  %2154 = extractelement <32 x i32> %2012, i32 28
  %2155 = bitcast i8* %Output to i32*
  %2156 = sext i32 %2153 to i64
  %2157 = getelementptr inbounds i32, i32* %2155, i64 %2156
  store i32 %2154, i32* %2157, align 4, !tbaa !375
  %2158 = extractelement <32 x i32> %t125, i32 29
  %2159 = extractelement <32 x i32> %2012, i32 29
  %2160 = bitcast i8* %Output to i32*
  %2161 = sext i32 %2158 to i64
  %2162 = getelementptr inbounds i32, i32* %2160, i64 %2161
  store i32 %2159, i32* %2162, align 4, !tbaa !375
  %2163 = extractelement <32 x i32> %t125, i32 30
  %2164 = extractelement <32 x i32> %2012, i32 30
  %2165 = bitcast i8* %Output to i32*
  %2166 = sext i32 %2163 to i64
  %2167 = getelementptr inbounds i32, i32* %2165, i64 %2166
  store i32 %2164, i32* %2167, align 4, !tbaa !375
  %2168 = extractelement <32 x i32> %t125, i32 31
  %2169 = extractelement <32 x i32> %2012, i32 31
  %2170 = bitcast i8* %Output to i32*
  %2171 = sext i32 %2168 to i64
  %2172 = getelementptr inbounds i32, i32* %2170, i64 %2171
  store i32 %2169, i32* %2172, align 4, !tbaa !375
  %2173 = add nsw i32 %"Output.s1.r10$x65", 1
  %2174 = icmp ne i32 %2173, %1466
  br i1 %2174, label %"for Output.s1.r10$x63", label %"end for Output.s1.r10$x64"

"end for Output.s1.r10$x64":                      ; preds = %"for Output.s1.r10$x63", %"for Output.s1.r10$y60"
  %2175 = add nsw i32 %"Output.s1.r10$y62", 1
  %2176 = icmp ne i32 %2175, %1461
  br i1 %2176, label %"for Output.s1.r10$y60", label %"end for Output.s1.r10$y61"

"for Output.s1.r10$z.rebased66":                  ; preds = %"end for Output.s1.r10$y70", %"end for Output.s1.r10$z.rebased"
  %"Output.s1.r10$z.rebased68" = phi i32 [ 0, %"end for Output.s1.r10$z.rebased" ], [ %2188, %"end for Output.s1.r10$y70" ]
  %a45 = add nsw i32 %"Output.s1.r10$z.rebased68", %t165
  %b47 = add nsw i32 %b32, -1
  %2177 = icmp sgt i32 %b47, %a45
  %a44 = select i1 %2177, i32 %a45, i32 %b47
  %2178 = icmp sgt i32 %a44, 0
  %2179 = select i1 %2178, i32 %a44, i32 0
  %2180 = mul nsw i32 %2179, %IMG.stride.2
  %t176 = sub nsw i32 %2180, %t153
  %2181 = add nsw i32 0, %Filter.extent.1
  %2182 = icmp slt i32 0, %2181
  br i1 %2182, label %"for Output.s1.r10$y69", label %"end for Output.s1.r10$y70", !prof !372

"end for Output.s1.r10$z.rebased67":              ; preds = %"end for Output.s1.r10$y70", %"end for Output.s1.r10$z.rebased"
  %2183 = add nsw i32 %Output.s1.x.x.x, 1
  %2184 = icmp ne i32 %2183, %733
  br i1 %2184, label %"for Output.s1.x.x.x", label %"end for Output.s1.x.x.x"

"for Output.s1.r10$y69":                          ; preds = %"end for Output.s1.r10$x73", %"for Output.s1.r10$z.rebased66"
  %"Output.s1.r10$y71" = phi i32 [ 0, %"for Output.s1.r10$z.rebased66" ], [ %2895, %"end for Output.s1.r10$x73" ]
  %t177 = sub nsw i32 %t154, %"Output.s1.r10$y71"
  %2185 = mul nsw i32 %Filter.stride.1, %"Output.s1.r10$y71"
  %t178 = add nsw i32 %2185, %t161
  %2186 = add nsw i32 0, %Filter.extent.0
  %2187 = icmp slt i32 0, %2186
  br i1 %2187, label %"for Output.s1.r10$x72", label %"end for Output.s1.r10$x73", !prof !372

"end for Output.s1.r10$y70":                      ; preds = %"end for Output.s1.r10$x73", %"for Output.s1.r10$z.rebased66"
  %2188 = add nsw i32 %"Output.s1.r10$z.rebased68", 1
  %2189 = icmp ne i32 %2188, %1463
  br i1 %2189, label %"for Output.s1.r10$z.rebased66", label %"end for Output.s1.r10$z.rebased67"

"for Output.s1.r10$x72":                          ; preds = %"for Output.s1.r10$x72", %"for Output.s1.r10$y69"
  %"Output.s1.r10$x74" = phi i32 [ 0, %"for Output.s1.r10$y69" ], [ %2893, %"for Output.s1.r10$x72" ]
  %2190 = insertelement <32 x i32> undef, i32 %t175, i32 0
  %2191 = shufflevector <32 x i32> %2190, <32 x i32> undef, <32 x i32> zeroinitializer
  %2192 = add nsw <32 x i32> %2191, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2193 = shufflevector <32 x i32> %2192, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2194 = icmp sgt <16 x i32> zeroinitializer, %2193
  %2195 = shufflevector <32 x i32> %2192, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2196 = icmp sgt <16 x i32> zeroinitializer, %2195
  %2197 = shufflevector <16 x i1> %2194, <16 x i1> %2196, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2198 = shufflevector <32 x i1> %2197, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2199 = select <16 x i1> %2198, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %2200 = shufflevector <32 x i1> %2197, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2201 = select <16 x i1> %2200, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %t215 = shufflevector <16 x i32> %2199, <16 x i32> %2201, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2202 = icmp eq i32 %b22, 0
  %t216 = select i1 %2202, <32 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <32 x i32> zeroinitializer
  %2203 = icmp sgt i32 0, %b22
  %t217.s = select i1 %2203, i32 -1, i32 0
  %2204 = insertelement <32 x i32> undef, i32 %t175, i32 0
  %2205 = shufflevector <32 x i32> %2204, <32 x i32> undef, <32 x i32> zeroinitializer
  %2206 = add nsw <32 x i32> %2205, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2207 = sub nsw <32 x i32> %2206, %t215
  %2208 = insertelement <32 x i32> undef, i32 %b22, i32 0
  %2209 = shufflevector <32 x i32> %2208, <32 x i32> undef, <32 x i32> zeroinitializer
  %2210 = sub nsw <32 x i32> %2209, %t216
  %2211 = sdiv <32 x i32> %2207, %2210
  %2212 = xor i32 %t217.s, -1
  %2213 = sub nsw i32 %2212, %t217.s
  %2214 = insertelement <32 x i32> undef, i32 %2213, i32 0
  %2215 = shufflevector <32 x i32> %2214, <32 x i32> undef, <32 x i32> zeroinitializer
  %2216 = and <32 x i32> %t215, %2215
  %2217 = add nsw <32 x i32> %2211, %2216
  %2218 = xor <32 x i32> %t216, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %t126 = and <32 x i32> %2217, %2218
  %2219 = insertelement <32 x i32> undef, i32 %t175, i32 0
  %2220 = shufflevector <32 x i32> %2219, <32 x i32> undef, <32 x i32> zeroinitializer
  %2221 = add nsw <32 x i32> %2220, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2222 = shufflevector <32 x i32> %2221, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2223 = icmp sgt <16 x i32> zeroinitializer, %2222
  %2224 = shufflevector <32 x i32> %2221, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2225 = icmp sgt <16 x i32> zeroinitializer, %2224
  %2226 = shufflevector <16 x i1> %2223, <16 x i1> %2225, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2227 = shufflevector <32 x i1> %2226, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2228 = select <16 x i1> %2227, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %2229 = shufflevector <32 x i1> %2226, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2230 = select <16 x i1> %2229, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %t218 = shufflevector <16 x i32> %2228, <16 x i32> %2230, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2231 = icmp eq i32 %b22, 0
  %t219 = select i1 %2231, <32 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <32 x i32> zeroinitializer
  %2232 = icmp sgt i32 0, %b22
  %t220.s = select i1 %2232, i32 -1, i32 0
  %2233 = insertelement <32 x i32> undef, i32 %t175, i32 0
  %2234 = shufflevector <32 x i32> %2233, <32 x i32> undef, <32 x i32> zeroinitializer
  %2235 = add nsw <32 x i32> %2234, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2236 = sub nsw <32 x i32> %2235, %t218
  %2237 = insertelement <32 x i32> undef, i32 %b22, i32 0
  %2238 = shufflevector <32 x i32> %2237, <32 x i32> undef, <32 x i32> zeroinitializer
  %2239 = or <32 x i32> %2238, %t219
  %2240 = srem <32 x i32> %2236, %2239
  %2241 = xor i32 %b22, %t220.s
  %2242 = xor i32 %t220.s, -1
  %2243 = add nsw i32 %2241, %2242
  %2244 = insertelement <32 x i32> undef, i32 %2243, i32 0
  %2245 = shufflevector <32 x i32> %2244, <32 x i32> undef, <32 x i32> zeroinitializer
  %2246 = and <32 x i32> %t218, %2245
  %2247 = add nsw <32 x i32> %2240, %2246
  %2248 = xor <32 x i32> %t219, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %t127 = and <32 x i32> %2247, %2248
  %2249 = insertelement <32 x i32> undef, i32 %Output.min.1, i32 0
  %2250 = shufflevector <32 x i32> %2249, <32 x i32> undef, <32 x i32> zeroinitializer
  %2251 = add nsw <32 x i32> %t126, %2250
  %2252 = insertelement <32 x i32> undef, i32 %Output.stride.1, i32 0
  %2253 = shufflevector <32 x i32> %2252, <32 x i32> undef, <32 x i32> zeroinitializer
  %2254 = mul nsw <32 x i32> %2251, %2253
  %2255 = add nsw i32 %Output.min.0, %t160
  %2256 = insertelement <32 x i32> undef, i32 %2255, i32 0
  %2257 = shufflevector <32 x i32> %2256, <32 x i32> undef, <32 x i32> zeroinitializer
  %2258 = add nsw <32 x i32> %2254, %2257
  %t128 = add nsw <32 x i32> %2258, %t127
  %2259 = extractelement <32 x i32> %t128, i32 0
  %2260 = bitcast i8* %Output to i32*
  %2261 = sext i32 %2259 to i64
  %2262 = getelementptr inbounds i32, i32* %2260, i64 %2261
  %2263 = load i32, i32* %2262, align 4, !tbaa !375
  %2264 = insertelement <32 x i32> undef, i32 %2263, i32 0
  %2265 = extractelement <32 x i32> %t128, i32 1
  %2266 = bitcast i8* %Output to i32*
  %2267 = sext i32 %2265 to i64
  %2268 = getelementptr inbounds i32, i32* %2266, i64 %2267
  %2269 = load i32, i32* %2268, align 4, !tbaa !375
  %2270 = insertelement <32 x i32> %2264, i32 %2269, i32 1
  %2271 = extractelement <32 x i32> %t128, i32 2
  %2272 = bitcast i8* %Output to i32*
  %2273 = sext i32 %2271 to i64
  %2274 = getelementptr inbounds i32, i32* %2272, i64 %2273
  %2275 = load i32, i32* %2274, align 4, !tbaa !375
  %2276 = insertelement <32 x i32> %2270, i32 %2275, i32 2
  %2277 = extractelement <32 x i32> %t128, i32 3
  %2278 = bitcast i8* %Output to i32*
  %2279 = sext i32 %2277 to i64
  %2280 = getelementptr inbounds i32, i32* %2278, i64 %2279
  %2281 = load i32, i32* %2280, align 4, !tbaa !375
  %2282 = insertelement <32 x i32> %2276, i32 %2281, i32 3
  %2283 = extractelement <32 x i32> %t128, i32 4
  %2284 = bitcast i8* %Output to i32*
  %2285 = sext i32 %2283 to i64
  %2286 = getelementptr inbounds i32, i32* %2284, i64 %2285
  %2287 = load i32, i32* %2286, align 4, !tbaa !375
  %2288 = insertelement <32 x i32> %2282, i32 %2287, i32 4
  %2289 = extractelement <32 x i32> %t128, i32 5
  %2290 = bitcast i8* %Output to i32*
  %2291 = sext i32 %2289 to i64
  %2292 = getelementptr inbounds i32, i32* %2290, i64 %2291
  %2293 = load i32, i32* %2292, align 4, !tbaa !375
  %2294 = insertelement <32 x i32> %2288, i32 %2293, i32 5
  %2295 = extractelement <32 x i32> %t128, i32 6
  %2296 = bitcast i8* %Output to i32*
  %2297 = sext i32 %2295 to i64
  %2298 = getelementptr inbounds i32, i32* %2296, i64 %2297
  %2299 = load i32, i32* %2298, align 4, !tbaa !375
  %2300 = insertelement <32 x i32> %2294, i32 %2299, i32 6
  %2301 = extractelement <32 x i32> %t128, i32 7
  %2302 = bitcast i8* %Output to i32*
  %2303 = sext i32 %2301 to i64
  %2304 = getelementptr inbounds i32, i32* %2302, i64 %2303
  %2305 = load i32, i32* %2304, align 4, !tbaa !375
  %2306 = insertelement <32 x i32> %2300, i32 %2305, i32 7
  %2307 = extractelement <32 x i32> %t128, i32 8
  %2308 = bitcast i8* %Output to i32*
  %2309 = sext i32 %2307 to i64
  %2310 = getelementptr inbounds i32, i32* %2308, i64 %2309
  %2311 = load i32, i32* %2310, align 4, !tbaa !375
  %2312 = insertelement <32 x i32> %2306, i32 %2311, i32 8
  %2313 = extractelement <32 x i32> %t128, i32 9
  %2314 = bitcast i8* %Output to i32*
  %2315 = sext i32 %2313 to i64
  %2316 = getelementptr inbounds i32, i32* %2314, i64 %2315
  %2317 = load i32, i32* %2316, align 4, !tbaa !375
  %2318 = insertelement <32 x i32> %2312, i32 %2317, i32 9
  %2319 = extractelement <32 x i32> %t128, i32 10
  %2320 = bitcast i8* %Output to i32*
  %2321 = sext i32 %2319 to i64
  %2322 = getelementptr inbounds i32, i32* %2320, i64 %2321
  %2323 = load i32, i32* %2322, align 4, !tbaa !375
  %2324 = insertelement <32 x i32> %2318, i32 %2323, i32 10
  %2325 = extractelement <32 x i32> %t128, i32 11
  %2326 = bitcast i8* %Output to i32*
  %2327 = sext i32 %2325 to i64
  %2328 = getelementptr inbounds i32, i32* %2326, i64 %2327
  %2329 = load i32, i32* %2328, align 4, !tbaa !375
  %2330 = insertelement <32 x i32> %2324, i32 %2329, i32 11
  %2331 = extractelement <32 x i32> %t128, i32 12
  %2332 = bitcast i8* %Output to i32*
  %2333 = sext i32 %2331 to i64
  %2334 = getelementptr inbounds i32, i32* %2332, i64 %2333
  %2335 = load i32, i32* %2334, align 4, !tbaa !375
  %2336 = insertelement <32 x i32> %2330, i32 %2335, i32 12
  %2337 = extractelement <32 x i32> %t128, i32 13
  %2338 = bitcast i8* %Output to i32*
  %2339 = sext i32 %2337 to i64
  %2340 = getelementptr inbounds i32, i32* %2338, i64 %2339
  %2341 = load i32, i32* %2340, align 4, !tbaa !375
  %2342 = insertelement <32 x i32> %2336, i32 %2341, i32 13
  %2343 = extractelement <32 x i32> %t128, i32 14
  %2344 = bitcast i8* %Output to i32*
  %2345 = sext i32 %2343 to i64
  %2346 = getelementptr inbounds i32, i32* %2344, i64 %2345
  %2347 = load i32, i32* %2346, align 4, !tbaa !375
  %2348 = insertelement <32 x i32> %2342, i32 %2347, i32 14
  %2349 = extractelement <32 x i32> %t128, i32 15
  %2350 = bitcast i8* %Output to i32*
  %2351 = sext i32 %2349 to i64
  %2352 = getelementptr inbounds i32, i32* %2350, i64 %2351
  %2353 = load i32, i32* %2352, align 4, !tbaa !375
  %2354 = insertelement <32 x i32> %2348, i32 %2353, i32 15
  %2355 = extractelement <32 x i32> %t128, i32 16
  %2356 = bitcast i8* %Output to i32*
  %2357 = sext i32 %2355 to i64
  %2358 = getelementptr inbounds i32, i32* %2356, i64 %2357
  %2359 = load i32, i32* %2358, align 4, !tbaa !375
  %2360 = insertelement <32 x i32> %2354, i32 %2359, i32 16
  %2361 = extractelement <32 x i32> %t128, i32 17
  %2362 = bitcast i8* %Output to i32*
  %2363 = sext i32 %2361 to i64
  %2364 = getelementptr inbounds i32, i32* %2362, i64 %2363
  %2365 = load i32, i32* %2364, align 4, !tbaa !375
  %2366 = insertelement <32 x i32> %2360, i32 %2365, i32 17
  %2367 = extractelement <32 x i32> %t128, i32 18
  %2368 = bitcast i8* %Output to i32*
  %2369 = sext i32 %2367 to i64
  %2370 = getelementptr inbounds i32, i32* %2368, i64 %2369
  %2371 = load i32, i32* %2370, align 4, !tbaa !375
  %2372 = insertelement <32 x i32> %2366, i32 %2371, i32 18
  %2373 = extractelement <32 x i32> %t128, i32 19
  %2374 = bitcast i8* %Output to i32*
  %2375 = sext i32 %2373 to i64
  %2376 = getelementptr inbounds i32, i32* %2374, i64 %2375
  %2377 = load i32, i32* %2376, align 4, !tbaa !375
  %2378 = insertelement <32 x i32> %2372, i32 %2377, i32 19
  %2379 = extractelement <32 x i32> %t128, i32 20
  %2380 = bitcast i8* %Output to i32*
  %2381 = sext i32 %2379 to i64
  %2382 = getelementptr inbounds i32, i32* %2380, i64 %2381
  %2383 = load i32, i32* %2382, align 4, !tbaa !375
  %2384 = insertelement <32 x i32> %2378, i32 %2383, i32 20
  %2385 = extractelement <32 x i32> %t128, i32 21
  %2386 = bitcast i8* %Output to i32*
  %2387 = sext i32 %2385 to i64
  %2388 = getelementptr inbounds i32, i32* %2386, i64 %2387
  %2389 = load i32, i32* %2388, align 4, !tbaa !375
  %2390 = insertelement <32 x i32> %2384, i32 %2389, i32 21
  %2391 = extractelement <32 x i32> %t128, i32 22
  %2392 = bitcast i8* %Output to i32*
  %2393 = sext i32 %2391 to i64
  %2394 = getelementptr inbounds i32, i32* %2392, i64 %2393
  %2395 = load i32, i32* %2394, align 4, !tbaa !375
  %2396 = insertelement <32 x i32> %2390, i32 %2395, i32 22
  %2397 = extractelement <32 x i32> %t128, i32 23
  %2398 = bitcast i8* %Output to i32*
  %2399 = sext i32 %2397 to i64
  %2400 = getelementptr inbounds i32, i32* %2398, i64 %2399
  %2401 = load i32, i32* %2400, align 4, !tbaa !375
  %2402 = insertelement <32 x i32> %2396, i32 %2401, i32 23
  %2403 = extractelement <32 x i32> %t128, i32 24
  %2404 = bitcast i8* %Output to i32*
  %2405 = sext i32 %2403 to i64
  %2406 = getelementptr inbounds i32, i32* %2404, i64 %2405
  %2407 = load i32, i32* %2406, align 4, !tbaa !375
  %2408 = insertelement <32 x i32> %2402, i32 %2407, i32 24
  %2409 = extractelement <32 x i32> %t128, i32 25
  %2410 = bitcast i8* %Output to i32*
  %2411 = sext i32 %2409 to i64
  %2412 = getelementptr inbounds i32, i32* %2410, i64 %2411
  %2413 = load i32, i32* %2412, align 4, !tbaa !375
  %2414 = insertelement <32 x i32> %2408, i32 %2413, i32 25
  %2415 = extractelement <32 x i32> %t128, i32 26
  %2416 = bitcast i8* %Output to i32*
  %2417 = sext i32 %2415 to i64
  %2418 = getelementptr inbounds i32, i32* %2416, i64 %2417
  %2419 = load i32, i32* %2418, align 4, !tbaa !375
  %2420 = insertelement <32 x i32> %2414, i32 %2419, i32 26
  %2421 = extractelement <32 x i32> %t128, i32 27
  %2422 = bitcast i8* %Output to i32*
  %2423 = sext i32 %2421 to i64
  %2424 = getelementptr inbounds i32, i32* %2422, i64 %2423
  %2425 = load i32, i32* %2424, align 4, !tbaa !375
  %2426 = insertelement <32 x i32> %2420, i32 %2425, i32 27
  %2427 = extractelement <32 x i32> %t128, i32 28
  %2428 = bitcast i8* %Output to i32*
  %2429 = sext i32 %2427 to i64
  %2430 = getelementptr inbounds i32, i32* %2428, i64 %2429
  %2431 = load i32, i32* %2430, align 4, !tbaa !375
  %2432 = insertelement <32 x i32> %2426, i32 %2431, i32 28
  %2433 = extractelement <32 x i32> %t128, i32 29
  %2434 = bitcast i8* %Output to i32*
  %2435 = sext i32 %2433 to i64
  %2436 = getelementptr inbounds i32, i32* %2434, i64 %2435
  %2437 = load i32, i32* %2436, align 4, !tbaa !375
  %2438 = insertelement <32 x i32> %2432, i32 %2437, i32 29
  %2439 = extractelement <32 x i32> %t128, i32 30
  %2440 = bitcast i8* %Output to i32*
  %2441 = sext i32 %2439 to i64
  %2442 = getelementptr inbounds i32, i32* %2440, i64 %2441
  %2443 = load i32, i32* %2442, align 4, !tbaa !375
  %2444 = insertelement <32 x i32> %2438, i32 %2443, i32 30
  %2445 = extractelement <32 x i32> %t128, i32 31
  %2446 = bitcast i8* %Output to i32*
  %2447 = sext i32 %2445 to i64
  %2448 = getelementptr inbounds i32, i32* %2446, i64 %2447
  %2449 = load i32, i32* %2448, align 4, !tbaa !375
  %2450 = insertelement <32 x i32> %2444, i32 %2449, i32 31
  %2451 = sub nsw i32 %t156, %"Output.s1.r10$x74"
  %2452 = insertelement <32 x i32> undef, i32 %2451, i32 0
  %2453 = shufflevector <32 x i32> %2452, <32 x i32> undef, <32 x i32> zeroinitializer
  %a47 = add nsw <32 x i32> %t127, %2453
  %2454 = add nsw i32 %t157, -1
  %2455 = insertelement <32 x i32> undef, i32 %2454, i32 0
  %b49 = shufflevector <32 x i32> %2455, <32 x i32> undef, <32 x i32> zeroinitializer
  %2456 = shufflevector <32 x i32> %b49, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2457 = shufflevector <32 x i32> %a47, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2458 = icmp sgt <16 x i32> %2456, %2457
  %2459 = shufflevector <32 x i32> %b49, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2460 = shufflevector <32 x i32> %a47, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2461 = icmp sgt <16 x i32> %2459, %2460
  %2462 = shufflevector <16 x i1> %2458, <16 x i1> %2461, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2463 = shufflevector <32 x i32> %a47, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2464 = shufflevector <32 x i32> %b49, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2465 = shufflevector <32 x i1> %2462, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2466 = select <16 x i1> %2465, <16 x i32> %2463, <16 x i32> %2464
  %2467 = shufflevector <32 x i32> %a47, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2468 = shufflevector <32 x i32> %b49, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2469 = shufflevector <32 x i1> %2462, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2470 = select <16 x i1> %2469, <16 x i32> %2467, <16 x i32> %2468
  %a46 = shufflevector <16 x i32> %2466, <16 x i32> %2470, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2471 = insertelement <32 x i32> undef, i32 %b8, i32 0
  %b48 = shufflevector <32 x i32> %2471, <32 x i32> undef, <32 x i32> zeroinitializer
  %2472 = shufflevector <32 x i32> %a46, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2473 = shufflevector <32 x i32> %b48, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2474 = icmp sgt <16 x i32> %2472, %2473
  %2475 = shufflevector <32 x i32> %a46, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2476 = shufflevector <32 x i32> %b48, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2477 = icmp sgt <16 x i32> %2475, %2476
  %2478 = shufflevector <16 x i1> %2474, <16 x i1> %2477, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2479 = shufflevector <32 x i32> %a46, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2480 = shufflevector <32 x i32> %b48, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2481 = shufflevector <32 x i1> %2478, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2482 = select <16 x i1> %2481, <16 x i32> %2479, <16 x i32> %2480
  %2483 = shufflevector <32 x i32> %a46, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2484 = shufflevector <32 x i32> %b48, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2485 = shufflevector <32 x i1> %2478, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2486 = select <16 x i1> %2485, <16 x i32> %2483, <16 x i32> %2484
  %2487 = shufflevector <16 x i32> %2482, <16 x i32> %2486, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2488 = insertelement <32 x i32> undef, i32 %t177, i32 0
  %2489 = shufflevector <32 x i32> %2488, <32 x i32> undef, <32 x i32> zeroinitializer
  %a49 = add nsw <32 x i32> %t126, %2489
  %2490 = add nsw i32 %t155, -1
  %2491 = insertelement <32 x i32> undef, i32 %2490, i32 0
  %b51 = shufflevector <32 x i32> %2491, <32 x i32> undef, <32 x i32> zeroinitializer
  %2492 = shufflevector <32 x i32> %b51, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2493 = shufflevector <32 x i32> %a49, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2494 = icmp sgt <16 x i32> %2492, %2493
  %2495 = shufflevector <32 x i32> %b51, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2496 = shufflevector <32 x i32> %a49, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2497 = icmp sgt <16 x i32> %2495, %2496
  %2498 = shufflevector <16 x i1> %2494, <16 x i1> %2497, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2499 = shufflevector <32 x i32> %a49, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2500 = shufflevector <32 x i32> %b51, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2501 = shufflevector <32 x i1> %2498, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2502 = select <16 x i1> %2501, <16 x i32> %2499, <16 x i32> %2500
  %2503 = shufflevector <32 x i32> %a49, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2504 = shufflevector <32 x i32> %b51, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2505 = shufflevector <32 x i1> %2498, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2506 = select <16 x i1> %2505, <16 x i32> %2503, <16 x i32> %2504
  %a48 = shufflevector <16 x i32> %2502, <16 x i32> %2506, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2507 = insertelement <32 x i32> undef, i32 %b14, i32 0
  %b50 = shufflevector <32 x i32> %2507, <32 x i32> undef, <32 x i32> zeroinitializer
  %2508 = shufflevector <32 x i32> %a48, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2509 = shufflevector <32 x i32> %b50, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2510 = icmp sgt <16 x i32> %2508, %2509
  %2511 = shufflevector <32 x i32> %a48, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2512 = shufflevector <32 x i32> %b50, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2513 = icmp sgt <16 x i32> %2511, %2512
  %2514 = shufflevector <16 x i1> %2510, <16 x i1> %2513, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2515 = shufflevector <32 x i32> %a48, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2516 = shufflevector <32 x i32> %b50, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2517 = shufflevector <32 x i1> %2514, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2518 = select <16 x i1> %2517, <16 x i32> %2515, <16 x i32> %2516
  %2519 = shufflevector <32 x i32> %a48, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2520 = shufflevector <32 x i32> %b50, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2521 = shufflevector <32 x i1> %2514, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2522 = select <16 x i1> %2521, <16 x i32> %2519, <16 x i32> %2520
  %2523 = shufflevector <16 x i32> %2518, <16 x i32> %2522, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2524 = insertelement <32 x i32> undef, i32 %IMG.stride.1, i32 0
  %2525 = shufflevector <32 x i32> %2524, <32 x i32> undef, <32 x i32> zeroinitializer
  %2526 = mul nsw <32 x i32> %2523, %2525
  %2527 = insertelement <32 x i32> undef, i32 %t176, i32 0
  %2528 = shufflevector <32 x i32> %2527, <32 x i32> undef, <32 x i32> zeroinitializer
  %2529 = add nsw <32 x i32> %2526, %2528
  %2530 = add nsw <32 x i32> %2487, %2529
  %2531 = extractelement <32 x i32> %2530, i32 0
  %2532 = bitcast i8* %IMG to i32*
  %2533 = sext i32 %2531 to i64
  %2534 = getelementptr inbounds i32, i32* %2532, i64 %2533
  %2535 = load i32, i32* %2534, align 4, !tbaa !378
  %2536 = insertelement <32 x i32> undef, i32 %2535, i32 0
  %2537 = extractelement <32 x i32> %2530, i32 1
  %2538 = bitcast i8* %IMG to i32*
  %2539 = sext i32 %2537 to i64
  %2540 = getelementptr inbounds i32, i32* %2538, i64 %2539
  %2541 = load i32, i32* %2540, align 4, !tbaa !378
  %2542 = insertelement <32 x i32> %2536, i32 %2541, i32 1
  %2543 = extractelement <32 x i32> %2530, i32 2
  %2544 = bitcast i8* %IMG to i32*
  %2545 = sext i32 %2543 to i64
  %2546 = getelementptr inbounds i32, i32* %2544, i64 %2545
  %2547 = load i32, i32* %2546, align 4, !tbaa !378
  %2548 = insertelement <32 x i32> %2542, i32 %2547, i32 2
  %2549 = extractelement <32 x i32> %2530, i32 3
  %2550 = bitcast i8* %IMG to i32*
  %2551 = sext i32 %2549 to i64
  %2552 = getelementptr inbounds i32, i32* %2550, i64 %2551
  %2553 = load i32, i32* %2552, align 4, !tbaa !378
  %2554 = insertelement <32 x i32> %2548, i32 %2553, i32 3
  %2555 = extractelement <32 x i32> %2530, i32 4
  %2556 = bitcast i8* %IMG to i32*
  %2557 = sext i32 %2555 to i64
  %2558 = getelementptr inbounds i32, i32* %2556, i64 %2557
  %2559 = load i32, i32* %2558, align 4, !tbaa !378
  %2560 = insertelement <32 x i32> %2554, i32 %2559, i32 4
  %2561 = extractelement <32 x i32> %2530, i32 5
  %2562 = bitcast i8* %IMG to i32*
  %2563 = sext i32 %2561 to i64
  %2564 = getelementptr inbounds i32, i32* %2562, i64 %2563
  %2565 = load i32, i32* %2564, align 4, !tbaa !378
  %2566 = insertelement <32 x i32> %2560, i32 %2565, i32 5
  %2567 = extractelement <32 x i32> %2530, i32 6
  %2568 = bitcast i8* %IMG to i32*
  %2569 = sext i32 %2567 to i64
  %2570 = getelementptr inbounds i32, i32* %2568, i64 %2569
  %2571 = load i32, i32* %2570, align 4, !tbaa !378
  %2572 = insertelement <32 x i32> %2566, i32 %2571, i32 6
  %2573 = extractelement <32 x i32> %2530, i32 7
  %2574 = bitcast i8* %IMG to i32*
  %2575 = sext i32 %2573 to i64
  %2576 = getelementptr inbounds i32, i32* %2574, i64 %2575
  %2577 = load i32, i32* %2576, align 4, !tbaa !378
  %2578 = insertelement <32 x i32> %2572, i32 %2577, i32 7
  %2579 = extractelement <32 x i32> %2530, i32 8
  %2580 = bitcast i8* %IMG to i32*
  %2581 = sext i32 %2579 to i64
  %2582 = getelementptr inbounds i32, i32* %2580, i64 %2581
  %2583 = load i32, i32* %2582, align 4, !tbaa !378
  %2584 = insertelement <32 x i32> %2578, i32 %2583, i32 8
  %2585 = extractelement <32 x i32> %2530, i32 9
  %2586 = bitcast i8* %IMG to i32*
  %2587 = sext i32 %2585 to i64
  %2588 = getelementptr inbounds i32, i32* %2586, i64 %2587
  %2589 = load i32, i32* %2588, align 4, !tbaa !378
  %2590 = insertelement <32 x i32> %2584, i32 %2589, i32 9
  %2591 = extractelement <32 x i32> %2530, i32 10
  %2592 = bitcast i8* %IMG to i32*
  %2593 = sext i32 %2591 to i64
  %2594 = getelementptr inbounds i32, i32* %2592, i64 %2593
  %2595 = load i32, i32* %2594, align 4, !tbaa !378
  %2596 = insertelement <32 x i32> %2590, i32 %2595, i32 10
  %2597 = extractelement <32 x i32> %2530, i32 11
  %2598 = bitcast i8* %IMG to i32*
  %2599 = sext i32 %2597 to i64
  %2600 = getelementptr inbounds i32, i32* %2598, i64 %2599
  %2601 = load i32, i32* %2600, align 4, !tbaa !378
  %2602 = insertelement <32 x i32> %2596, i32 %2601, i32 11
  %2603 = extractelement <32 x i32> %2530, i32 12
  %2604 = bitcast i8* %IMG to i32*
  %2605 = sext i32 %2603 to i64
  %2606 = getelementptr inbounds i32, i32* %2604, i64 %2605
  %2607 = load i32, i32* %2606, align 4, !tbaa !378
  %2608 = insertelement <32 x i32> %2602, i32 %2607, i32 12
  %2609 = extractelement <32 x i32> %2530, i32 13
  %2610 = bitcast i8* %IMG to i32*
  %2611 = sext i32 %2609 to i64
  %2612 = getelementptr inbounds i32, i32* %2610, i64 %2611
  %2613 = load i32, i32* %2612, align 4, !tbaa !378
  %2614 = insertelement <32 x i32> %2608, i32 %2613, i32 13
  %2615 = extractelement <32 x i32> %2530, i32 14
  %2616 = bitcast i8* %IMG to i32*
  %2617 = sext i32 %2615 to i64
  %2618 = getelementptr inbounds i32, i32* %2616, i64 %2617
  %2619 = load i32, i32* %2618, align 4, !tbaa !378
  %2620 = insertelement <32 x i32> %2614, i32 %2619, i32 14
  %2621 = extractelement <32 x i32> %2530, i32 15
  %2622 = bitcast i8* %IMG to i32*
  %2623 = sext i32 %2621 to i64
  %2624 = getelementptr inbounds i32, i32* %2622, i64 %2623
  %2625 = load i32, i32* %2624, align 4, !tbaa !378
  %2626 = insertelement <32 x i32> %2620, i32 %2625, i32 15
  %2627 = extractelement <32 x i32> %2530, i32 16
  %2628 = bitcast i8* %IMG to i32*
  %2629 = sext i32 %2627 to i64
  %2630 = getelementptr inbounds i32, i32* %2628, i64 %2629
  %2631 = load i32, i32* %2630, align 4, !tbaa !378
  %2632 = insertelement <32 x i32> %2626, i32 %2631, i32 16
  %2633 = extractelement <32 x i32> %2530, i32 17
  %2634 = bitcast i8* %IMG to i32*
  %2635 = sext i32 %2633 to i64
  %2636 = getelementptr inbounds i32, i32* %2634, i64 %2635
  %2637 = load i32, i32* %2636, align 4, !tbaa !378
  %2638 = insertelement <32 x i32> %2632, i32 %2637, i32 17
  %2639 = extractelement <32 x i32> %2530, i32 18
  %2640 = bitcast i8* %IMG to i32*
  %2641 = sext i32 %2639 to i64
  %2642 = getelementptr inbounds i32, i32* %2640, i64 %2641
  %2643 = load i32, i32* %2642, align 4, !tbaa !378
  %2644 = insertelement <32 x i32> %2638, i32 %2643, i32 18
  %2645 = extractelement <32 x i32> %2530, i32 19
  %2646 = bitcast i8* %IMG to i32*
  %2647 = sext i32 %2645 to i64
  %2648 = getelementptr inbounds i32, i32* %2646, i64 %2647
  %2649 = load i32, i32* %2648, align 4, !tbaa !378
  %2650 = insertelement <32 x i32> %2644, i32 %2649, i32 19
  %2651 = extractelement <32 x i32> %2530, i32 20
  %2652 = bitcast i8* %IMG to i32*
  %2653 = sext i32 %2651 to i64
  %2654 = getelementptr inbounds i32, i32* %2652, i64 %2653
  %2655 = load i32, i32* %2654, align 4, !tbaa !378
  %2656 = insertelement <32 x i32> %2650, i32 %2655, i32 20
  %2657 = extractelement <32 x i32> %2530, i32 21
  %2658 = bitcast i8* %IMG to i32*
  %2659 = sext i32 %2657 to i64
  %2660 = getelementptr inbounds i32, i32* %2658, i64 %2659
  %2661 = load i32, i32* %2660, align 4, !tbaa !378
  %2662 = insertelement <32 x i32> %2656, i32 %2661, i32 21
  %2663 = extractelement <32 x i32> %2530, i32 22
  %2664 = bitcast i8* %IMG to i32*
  %2665 = sext i32 %2663 to i64
  %2666 = getelementptr inbounds i32, i32* %2664, i64 %2665
  %2667 = load i32, i32* %2666, align 4, !tbaa !378
  %2668 = insertelement <32 x i32> %2662, i32 %2667, i32 22
  %2669 = extractelement <32 x i32> %2530, i32 23
  %2670 = bitcast i8* %IMG to i32*
  %2671 = sext i32 %2669 to i64
  %2672 = getelementptr inbounds i32, i32* %2670, i64 %2671
  %2673 = load i32, i32* %2672, align 4, !tbaa !378
  %2674 = insertelement <32 x i32> %2668, i32 %2673, i32 23
  %2675 = extractelement <32 x i32> %2530, i32 24
  %2676 = bitcast i8* %IMG to i32*
  %2677 = sext i32 %2675 to i64
  %2678 = getelementptr inbounds i32, i32* %2676, i64 %2677
  %2679 = load i32, i32* %2678, align 4, !tbaa !378
  %2680 = insertelement <32 x i32> %2674, i32 %2679, i32 24
  %2681 = extractelement <32 x i32> %2530, i32 25
  %2682 = bitcast i8* %IMG to i32*
  %2683 = sext i32 %2681 to i64
  %2684 = getelementptr inbounds i32, i32* %2682, i64 %2683
  %2685 = load i32, i32* %2684, align 4, !tbaa !378
  %2686 = insertelement <32 x i32> %2680, i32 %2685, i32 25
  %2687 = extractelement <32 x i32> %2530, i32 26
  %2688 = bitcast i8* %IMG to i32*
  %2689 = sext i32 %2687 to i64
  %2690 = getelementptr inbounds i32, i32* %2688, i64 %2689
  %2691 = load i32, i32* %2690, align 4, !tbaa !378
  %2692 = insertelement <32 x i32> %2686, i32 %2691, i32 26
  %2693 = extractelement <32 x i32> %2530, i32 27
  %2694 = bitcast i8* %IMG to i32*
  %2695 = sext i32 %2693 to i64
  %2696 = getelementptr inbounds i32, i32* %2694, i64 %2695
  %2697 = load i32, i32* %2696, align 4, !tbaa !378
  %2698 = insertelement <32 x i32> %2692, i32 %2697, i32 27
  %2699 = extractelement <32 x i32> %2530, i32 28
  %2700 = bitcast i8* %IMG to i32*
  %2701 = sext i32 %2699 to i64
  %2702 = getelementptr inbounds i32, i32* %2700, i64 %2701
  %2703 = load i32, i32* %2702, align 4, !tbaa !378
  %2704 = insertelement <32 x i32> %2698, i32 %2703, i32 28
  %2705 = extractelement <32 x i32> %2530, i32 29
  %2706 = bitcast i8* %IMG to i32*
  %2707 = sext i32 %2705 to i64
  %2708 = getelementptr inbounds i32, i32* %2706, i64 %2707
  %2709 = load i32, i32* %2708, align 4, !tbaa !378
  %2710 = insertelement <32 x i32> %2704, i32 %2709, i32 29
  %2711 = extractelement <32 x i32> %2530, i32 30
  %2712 = bitcast i8* %IMG to i32*
  %2713 = sext i32 %2711 to i64
  %2714 = getelementptr inbounds i32, i32* %2712, i64 %2713
  %2715 = load i32, i32* %2714, align 4, !tbaa !378
  %2716 = insertelement <32 x i32> %2710, i32 %2715, i32 30
  %2717 = extractelement <32 x i32> %2530, i32 31
  %2718 = bitcast i8* %IMG to i32*
  %2719 = sext i32 %2717 to i64
  %2720 = getelementptr inbounds i32, i32* %2718, i64 %2719
  %2721 = load i32, i32* %2720, align 4, !tbaa !378
  %2722 = insertelement <32 x i32> %2716, i32 %2721, i32 31
  %2723 = sext i32 %"Output.s1.r10$x74" to i64
  %2724 = sext i32 %t178 to i64
  %2725 = add nsw i64 %2723, %2724
  %2726 = bitcast i8* %Filter to i32*
  %2727 = getelementptr inbounds i32, i32* %2726, i64 %2725
  %2728 = load i32, i32* %2727, align 4, !tbaa !380
  %2729 = insertelement <32 x i32> undef, i32 %2728, i32 0
  %2730 = shufflevector <32 x i32> %2729, <32 x i32> undef, <32 x i32> zeroinitializer
  %2731 = mul nsw <32 x i32> %2722, %2730
  %2732 = add nsw <32 x i32> %2450, %2731
  %2733 = extractelement <32 x i32> %t128, i32 0
  %2734 = extractelement <32 x i32> %2732, i32 0
  %2735 = bitcast i8* %Output to i32*
  %2736 = sext i32 %2733 to i64
  %2737 = getelementptr inbounds i32, i32* %2735, i64 %2736
  store i32 %2734, i32* %2737, align 4, !tbaa !375
  %2738 = extractelement <32 x i32> %t128, i32 1
  %2739 = extractelement <32 x i32> %2732, i32 1
  %2740 = bitcast i8* %Output to i32*
  %2741 = sext i32 %2738 to i64
  %2742 = getelementptr inbounds i32, i32* %2740, i64 %2741
  store i32 %2739, i32* %2742, align 4, !tbaa !375
  %2743 = extractelement <32 x i32> %t128, i32 2
  %2744 = extractelement <32 x i32> %2732, i32 2
  %2745 = bitcast i8* %Output to i32*
  %2746 = sext i32 %2743 to i64
  %2747 = getelementptr inbounds i32, i32* %2745, i64 %2746
  store i32 %2744, i32* %2747, align 4, !tbaa !375
  %2748 = extractelement <32 x i32> %t128, i32 3
  %2749 = extractelement <32 x i32> %2732, i32 3
  %2750 = bitcast i8* %Output to i32*
  %2751 = sext i32 %2748 to i64
  %2752 = getelementptr inbounds i32, i32* %2750, i64 %2751
  store i32 %2749, i32* %2752, align 4, !tbaa !375
  %2753 = extractelement <32 x i32> %t128, i32 4
  %2754 = extractelement <32 x i32> %2732, i32 4
  %2755 = bitcast i8* %Output to i32*
  %2756 = sext i32 %2753 to i64
  %2757 = getelementptr inbounds i32, i32* %2755, i64 %2756
  store i32 %2754, i32* %2757, align 4, !tbaa !375
  %2758 = extractelement <32 x i32> %t128, i32 5
  %2759 = extractelement <32 x i32> %2732, i32 5
  %2760 = bitcast i8* %Output to i32*
  %2761 = sext i32 %2758 to i64
  %2762 = getelementptr inbounds i32, i32* %2760, i64 %2761
  store i32 %2759, i32* %2762, align 4, !tbaa !375
  %2763 = extractelement <32 x i32> %t128, i32 6
  %2764 = extractelement <32 x i32> %2732, i32 6
  %2765 = bitcast i8* %Output to i32*
  %2766 = sext i32 %2763 to i64
  %2767 = getelementptr inbounds i32, i32* %2765, i64 %2766
  store i32 %2764, i32* %2767, align 4, !tbaa !375
  %2768 = extractelement <32 x i32> %t128, i32 7
  %2769 = extractelement <32 x i32> %2732, i32 7
  %2770 = bitcast i8* %Output to i32*
  %2771 = sext i32 %2768 to i64
  %2772 = getelementptr inbounds i32, i32* %2770, i64 %2771
  store i32 %2769, i32* %2772, align 4, !tbaa !375
  %2773 = extractelement <32 x i32> %t128, i32 8
  %2774 = extractelement <32 x i32> %2732, i32 8
  %2775 = bitcast i8* %Output to i32*
  %2776 = sext i32 %2773 to i64
  %2777 = getelementptr inbounds i32, i32* %2775, i64 %2776
  store i32 %2774, i32* %2777, align 4, !tbaa !375
  %2778 = extractelement <32 x i32> %t128, i32 9
  %2779 = extractelement <32 x i32> %2732, i32 9
  %2780 = bitcast i8* %Output to i32*
  %2781 = sext i32 %2778 to i64
  %2782 = getelementptr inbounds i32, i32* %2780, i64 %2781
  store i32 %2779, i32* %2782, align 4, !tbaa !375
  %2783 = extractelement <32 x i32> %t128, i32 10
  %2784 = extractelement <32 x i32> %2732, i32 10
  %2785 = bitcast i8* %Output to i32*
  %2786 = sext i32 %2783 to i64
  %2787 = getelementptr inbounds i32, i32* %2785, i64 %2786
  store i32 %2784, i32* %2787, align 4, !tbaa !375
  %2788 = extractelement <32 x i32> %t128, i32 11
  %2789 = extractelement <32 x i32> %2732, i32 11
  %2790 = bitcast i8* %Output to i32*
  %2791 = sext i32 %2788 to i64
  %2792 = getelementptr inbounds i32, i32* %2790, i64 %2791
  store i32 %2789, i32* %2792, align 4, !tbaa !375
  %2793 = extractelement <32 x i32> %t128, i32 12
  %2794 = extractelement <32 x i32> %2732, i32 12
  %2795 = bitcast i8* %Output to i32*
  %2796 = sext i32 %2793 to i64
  %2797 = getelementptr inbounds i32, i32* %2795, i64 %2796
  store i32 %2794, i32* %2797, align 4, !tbaa !375
  %2798 = extractelement <32 x i32> %t128, i32 13
  %2799 = extractelement <32 x i32> %2732, i32 13
  %2800 = bitcast i8* %Output to i32*
  %2801 = sext i32 %2798 to i64
  %2802 = getelementptr inbounds i32, i32* %2800, i64 %2801
  store i32 %2799, i32* %2802, align 4, !tbaa !375
  %2803 = extractelement <32 x i32> %t128, i32 14
  %2804 = extractelement <32 x i32> %2732, i32 14
  %2805 = bitcast i8* %Output to i32*
  %2806 = sext i32 %2803 to i64
  %2807 = getelementptr inbounds i32, i32* %2805, i64 %2806
  store i32 %2804, i32* %2807, align 4, !tbaa !375
  %2808 = extractelement <32 x i32> %t128, i32 15
  %2809 = extractelement <32 x i32> %2732, i32 15
  %2810 = bitcast i8* %Output to i32*
  %2811 = sext i32 %2808 to i64
  %2812 = getelementptr inbounds i32, i32* %2810, i64 %2811
  store i32 %2809, i32* %2812, align 4, !tbaa !375
  %2813 = extractelement <32 x i32> %t128, i32 16
  %2814 = extractelement <32 x i32> %2732, i32 16
  %2815 = bitcast i8* %Output to i32*
  %2816 = sext i32 %2813 to i64
  %2817 = getelementptr inbounds i32, i32* %2815, i64 %2816
  store i32 %2814, i32* %2817, align 4, !tbaa !375
  %2818 = extractelement <32 x i32> %t128, i32 17
  %2819 = extractelement <32 x i32> %2732, i32 17
  %2820 = bitcast i8* %Output to i32*
  %2821 = sext i32 %2818 to i64
  %2822 = getelementptr inbounds i32, i32* %2820, i64 %2821
  store i32 %2819, i32* %2822, align 4, !tbaa !375
  %2823 = extractelement <32 x i32> %t128, i32 18
  %2824 = extractelement <32 x i32> %2732, i32 18
  %2825 = bitcast i8* %Output to i32*
  %2826 = sext i32 %2823 to i64
  %2827 = getelementptr inbounds i32, i32* %2825, i64 %2826
  store i32 %2824, i32* %2827, align 4, !tbaa !375
  %2828 = extractelement <32 x i32> %t128, i32 19
  %2829 = extractelement <32 x i32> %2732, i32 19
  %2830 = bitcast i8* %Output to i32*
  %2831 = sext i32 %2828 to i64
  %2832 = getelementptr inbounds i32, i32* %2830, i64 %2831
  store i32 %2829, i32* %2832, align 4, !tbaa !375
  %2833 = extractelement <32 x i32> %t128, i32 20
  %2834 = extractelement <32 x i32> %2732, i32 20
  %2835 = bitcast i8* %Output to i32*
  %2836 = sext i32 %2833 to i64
  %2837 = getelementptr inbounds i32, i32* %2835, i64 %2836
  store i32 %2834, i32* %2837, align 4, !tbaa !375
  %2838 = extractelement <32 x i32> %t128, i32 21
  %2839 = extractelement <32 x i32> %2732, i32 21
  %2840 = bitcast i8* %Output to i32*
  %2841 = sext i32 %2838 to i64
  %2842 = getelementptr inbounds i32, i32* %2840, i64 %2841
  store i32 %2839, i32* %2842, align 4, !tbaa !375
  %2843 = extractelement <32 x i32> %t128, i32 22
  %2844 = extractelement <32 x i32> %2732, i32 22
  %2845 = bitcast i8* %Output to i32*
  %2846 = sext i32 %2843 to i64
  %2847 = getelementptr inbounds i32, i32* %2845, i64 %2846
  store i32 %2844, i32* %2847, align 4, !tbaa !375
  %2848 = extractelement <32 x i32> %t128, i32 23
  %2849 = extractelement <32 x i32> %2732, i32 23
  %2850 = bitcast i8* %Output to i32*
  %2851 = sext i32 %2848 to i64
  %2852 = getelementptr inbounds i32, i32* %2850, i64 %2851
  store i32 %2849, i32* %2852, align 4, !tbaa !375
  %2853 = extractelement <32 x i32> %t128, i32 24
  %2854 = extractelement <32 x i32> %2732, i32 24
  %2855 = bitcast i8* %Output to i32*
  %2856 = sext i32 %2853 to i64
  %2857 = getelementptr inbounds i32, i32* %2855, i64 %2856
  store i32 %2854, i32* %2857, align 4, !tbaa !375
  %2858 = extractelement <32 x i32> %t128, i32 25
  %2859 = extractelement <32 x i32> %2732, i32 25
  %2860 = bitcast i8* %Output to i32*
  %2861 = sext i32 %2858 to i64
  %2862 = getelementptr inbounds i32, i32* %2860, i64 %2861
  store i32 %2859, i32* %2862, align 4, !tbaa !375
  %2863 = extractelement <32 x i32> %t128, i32 26
  %2864 = extractelement <32 x i32> %2732, i32 26
  %2865 = bitcast i8* %Output to i32*
  %2866 = sext i32 %2863 to i64
  %2867 = getelementptr inbounds i32, i32* %2865, i64 %2866
  store i32 %2864, i32* %2867, align 4, !tbaa !375
  %2868 = extractelement <32 x i32> %t128, i32 27
  %2869 = extractelement <32 x i32> %2732, i32 27
  %2870 = bitcast i8* %Output to i32*
  %2871 = sext i32 %2868 to i64
  %2872 = getelementptr inbounds i32, i32* %2870, i64 %2871
  store i32 %2869, i32* %2872, align 4, !tbaa !375
  %2873 = extractelement <32 x i32> %t128, i32 28
  %2874 = extractelement <32 x i32> %2732, i32 28
  %2875 = bitcast i8* %Output to i32*
  %2876 = sext i32 %2873 to i64
  %2877 = getelementptr inbounds i32, i32* %2875, i64 %2876
  store i32 %2874, i32* %2877, align 4, !tbaa !375
  %2878 = extractelement <32 x i32> %t128, i32 29
  %2879 = extractelement <32 x i32> %2732, i32 29
  %2880 = bitcast i8* %Output to i32*
  %2881 = sext i32 %2878 to i64
  %2882 = getelementptr inbounds i32, i32* %2880, i64 %2881
  store i32 %2879, i32* %2882, align 4, !tbaa !375
  %2883 = extractelement <32 x i32> %t128, i32 30
  %2884 = extractelement <32 x i32> %2732, i32 30
  %2885 = bitcast i8* %Output to i32*
  %2886 = sext i32 %2883 to i64
  %2887 = getelementptr inbounds i32, i32* %2885, i64 %2886
  store i32 %2884, i32* %2887, align 4, !tbaa !375
  %2888 = extractelement <32 x i32> %t128, i32 31
  %2889 = extractelement <32 x i32> %2732, i32 31
  %2890 = bitcast i8* %Output to i32*
  %2891 = sext i32 %2888 to i64
  %2892 = getelementptr inbounds i32, i32* %2890, i64 %2891
  store i32 %2889, i32* %2892, align 4, !tbaa !375
  %2893 = add nsw i32 %"Output.s1.r10$x74", 1
  %2894 = icmp ne i32 %2893, %2186
  br i1 %2894, label %"for Output.s1.r10$x72", label %"end for Output.s1.r10$x73"

"end for Output.s1.r10$x73":                      ; preds = %"for Output.s1.r10$x72", %"for Output.s1.r10$y69"
  %2895 = add nsw i32 %"Output.s1.r10$y71", 1
  %2896 = icmp ne i32 %2895, %2181
  br i1 %2896, label %"for Output.s1.r10$y69", label %"end for Output.s1.r10$y70"

"assert failed75":                                ; preds = %after_bb11
  %2897 = call i32 @halide_error_buffer_argument_is_null(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i32 0, i32 0)) #18
  br label %destructor_block

"assert succeeded76":                             ; preds = %after_bb11
  %2898 = ptrtoint %struct.halide_buffer_t* %IMG.buffer to i64
  %2899 = icmp eq i64 %2898, 0
  %2900 = xor i1 %2899, true
  br i1 %2900, label %"assert succeeded78", label %"assert failed77", !prof !372

"assert failed77":                                ; preds = %"assert succeeded76"
  %2901 = call i32 @halide_error_buffer_argument_is_null(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i32 0, i32 0)) #18
  br label %destructor_block

"assert succeeded78":                             ; preds = %"assert succeeded76"
  %2902 = ptrtoint %struct.halide_buffer_t* %Filter.buffer to i64
  %2903 = icmp eq i64 %2902, 0
  %2904 = xor i1 %2903, true
  br i1 %2904, label %"assert succeeded80", label %"assert failed79", !prof !372

"assert failed79":                                ; preds = %"assert succeeded78"
  %2905 = call i32 @halide_error_buffer_argument_is_null(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i32 0, i32 0)) #18
  br label %destructor_block

"assert succeeded80":                             ; preds = %"assert succeeded78"
  %Filter81 = call i8* @_halide_buffer_get_host(%struct.halide_buffer_t* %Filter.buffer) #18
  %Filter.type82 = call i32 @_halide_buffer_get_type(%struct.halide_buffer_t* %Filter.buffer) #18
  %Filter.device_dirty83 = call i1 @_halide_buffer_get_device_dirty(%struct.halide_buffer_t* %Filter.buffer) #18
  %Filter.dimensions84 = call i32 @_halide_buffer_get_dimensions(%struct.halide_buffer_t* %Filter.buffer) #18
  %Filter.min.085 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %Filter.buffer, i32 0) #18
  %Filter.extent.086 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %Filter.buffer, i32 0) #18
  %Filter.stride.087 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %Filter.buffer, i32 0) #18
  %Filter.min.188 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %Filter.buffer, i32 1) #18
  %Filter.extent.189 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %Filter.buffer, i32 1) #18
  %Filter.stride.190 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %Filter.buffer, i32 1) #18
  %Filter.min.291 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %Filter.buffer, i32 2) #18
  %Filter.extent.292 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %Filter.buffer, i32 2) #18
  %Filter.stride.293 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %Filter.buffer, i32 2) #18
  %IMG94 = call i8* @_halide_buffer_get_host(%struct.halide_buffer_t* %IMG.buffer) #18
  %IMG.type95 = call i32 @_halide_buffer_get_type(%struct.halide_buffer_t* %IMG.buffer) #18
  %IMG.device_dirty96 = call i1 @_halide_buffer_get_device_dirty(%struct.halide_buffer_t* %IMG.buffer) #18
  %IMG.dimensions97 = call i32 @_halide_buffer_get_dimensions(%struct.halide_buffer_t* %IMG.buffer) #18
  %b58 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %IMG.buffer, i32 0) #18
  %IMG.extent.098 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %IMG.buffer, i32 0) #18
  %IMG.stride.099 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %IMG.buffer, i32 0) #18
  %b64 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %IMG.buffer, i32 1) #18
  %IMG.extent.1100 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %IMG.buffer, i32 1) #18
  %IMG.stride.1101 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %IMG.buffer, i32 1) #18
  %a83 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %IMG.buffer, i32 2) #18
  %b82 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %IMG.buffer, i32 2) #18
  %IMG.stride.2102 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %IMG.buffer, i32 2) #18
  %Output103 = call i8* @_halide_buffer_get_host(%struct.halide_buffer_t* %Output.buffer) #18
  %Output.type104 = call i32 @_halide_buffer_get_type(%struct.halide_buffer_t* %Output.buffer) #18
  %Output.device_dirty105 = call i1 @_halide_buffer_get_device_dirty(%struct.halide_buffer_t* %Output.buffer) #18
  %Output.dimensions106 = call i32 @_halide_buffer_get_dimensions(%struct.halide_buffer_t* %Output.buffer) #18
  %Output.min.0107 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %Output.buffer, i32 0) #18
  %b72 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %Output.buffer, i32 0) #18
  %Output.stride.0108 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %Output.buffer, i32 0) #18
  %Output.min.1109 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %Output.buffer, i32 1) #18
  %Output.extent.1110 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %Output.buffer, i32 1) #18
  %Output.stride.1111 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %Output.buffer, i32 1) #18
  %Output.min.2112 = call i32 @_halide_buffer_get_min(%struct.halide_buffer_t* %Output.buffer, i32 2) #18
  %Output.extent.2113 = call i32 @_halide_buffer_get_extent(%struct.halide_buffer_t* %Output.buffer, i32 2) #18
  %Output.stride.2114 = call i32 @_halide_buffer_get_stride(%struct.halide_buffer_t* %Output.buffer, i32 2) #18
  %b57 = add nsw i32 %IMG.extent.098, %b58
  %a52 = sub nsw i32 -1, %b72
  %2906 = icmp sgt i32 %b72, 1
  %2907 = select i1 %2906, i32 %b72, i32 1
  %b54 = add nsw i32 %2907, -1
  %2908 = icmp sgt i32 %a52, %b54
  %2909 = select i1 %2908, i32 %a52, i32 %b54
  %2910 = ashr i32 %Filter.extent.086, 1
  %2911 = add nsw i32 %2909, %2910
  %a51 = add nsw i32 %2911, %Output.min.0107
  %b53 = add nsw i32 %b57, -1
  %2912 = icmp sgt i32 %b53, %a51
  %a50 = select i1 %2912, i32 %a51, i32 %b53
  %2913 = icmp sgt i32 %a50, %b58
  %2914 = select i1 %2913, i32 %a50, i32 %b58
  %2915 = ashr i32 %Filter.extent.086, 1
  %2916 = add nsw i32 %2915, %Output.min.0107
  %2917 = sub nsw i32 %2916, %Filter.extent.086
  %a55 = add nsw i32 %2917, 2
  %2918 = icmp sgt i32 %b57, %a55
  %2919 = select i1 %2918, i32 %a55, i32 %b57
  %a54 = add nsw i32 %2919, -1
  %2920 = icmp sgt i32 %a54, %b58
  %2921 = select i1 %2920, i32 %a54, i32 %b58
  %IMG.extent.0.required.s115 = sub nsw i32 %2914, %2921
  %2922 = ashr i32 %Filter.extent.086, 1
  %2923 = add nsw i32 %2922, %Output.min.0107
  %2924 = sub nsw i32 %2923, %Filter.extent.086
  %a57 = add nsw i32 %2924, 2
  %b59 = add nsw i32 %IMG.extent.098, %b58
  %2925 = icmp sgt i32 %b59, %a57
  %2926 = select i1 %2925, i32 %a57, i32 %b59
  %a56 = add nsw i32 %2926, -1
  %2927 = icmp sgt i32 %a56, %b58
  %IMG.min.0.required116 = select i1 %2927, i32 %a56, i32 %b58
  %t222 = icmp sgt i32 %b72, 0
  %2928 = mul nsw i32 %b72, %Output.extent.1110
  %2929 = icmp sgt i32 1, %2928
  %t230 = select i1 %2929, i32 -1, i32 0
  %2930 = icmp eq i32 %b72, 0
  %t231 = select i1 %2930, i32 -1, i32 0
  %2931 = icmp sgt i32 0, %b72
  %t232 = select i1 %2931, i32 -1, i32 0
  %2932 = mul nsw i32 %b72, %Output.extent.1110
  %2933 = add nsw i32 %2932, -1
  %2934 = ashr i32 %2933, 5
  %2935 = mul nsw i32 %2934, 32
  %2936 = sub nsw i32 %2935, %t230
  %2937 = add nsw i32 %2936, 31
  %2938 = sub nsw i32 %b72, %t231
  %2939 = sdiv i32 %2937, %2938
  %2940 = xor i32 %t232, -1
  %2941 = sub nsw i32 %2940, %t232
  %2942 = and i32 %t230, %2941
  %2943 = add nsw i32 %2939, %2942
  %2944 = xor i32 %t231, -1
  %t223 = and i32 %2943, %2944
  %b63 = add nsw i32 %IMG.extent.1100, %b64
  %2945 = select i1 %t222, i32 %t223, i32 0
  %2946 = ashr i32 %Filter.extent.189, 1
  %2947 = add nsw i32 %2945, %2946
  %a59 = add nsw i32 %2947, %Output.min.1109
  %b61 = add nsw i32 %b63, -1
  %2948 = icmp sgt i32 %b61, %a59
  %a58 = select i1 %2948, i32 %a59, i32 %b61
  %2949 = icmp sgt i32 %a58, %b64
  %2950 = select i1 %2949, i32 %a58, i32 %b64
  %2951 = select i1 %t222, i32 0, i32 %t223
  %2952 = ashr i32 %Filter.extent.189, 1
  %2953 = add nsw i32 %2951, %2952
  %2954 = add nsw i32 %2953, %Output.min.1109
  %2955 = sub nsw i32 %2954, %Filter.extent.189
  %a61 = add nsw i32 %2955, 2
  %2956 = icmp sgt i32 %b63, %a61
  %2957 = select i1 %2956, i32 %a61, i32 %b63
  %a60 = add nsw i32 %2957, -1
  %2958 = icmp sgt i32 %a60, %b64
  %2959 = select i1 %2958, i32 %a60, i32 %b64
  %IMG.extent.1.required.s117 = sub nsw i32 %2950, %2959
  %2960 = icmp sgt i32 %b72, 0
  %2961 = mul nsw i32 %b72, %Output.extent.1110
  %2962 = icmp sgt i32 1, %2961
  %t234 = select i1 %2962, i32 -1, i32 0
  %2963 = icmp eq i32 %b72, 0
  %t235 = select i1 %2963, i32 -1, i32 0
  %2964 = icmp sgt i32 0, %b72
  %t236 = select i1 %2964, i32 -1, i32 0
  %2965 = mul nsw i32 %b72, %Output.extent.1110
  %2966 = add nsw i32 %2965, -1
  %2967 = ashr i32 %2966, 5
  %2968 = mul nsw i32 %2967, 32
  %2969 = sub nsw i32 %2968, %t234
  %2970 = add nsw i32 %2969, 31
  %2971 = sub nsw i32 %b72, %t235
  %2972 = sdiv i32 %2970, %2971
  %2973 = xor i32 %t236, -1
  %2974 = sub nsw i32 %2973, %t236
  %2975 = and i32 %t234, %2974
  %2976 = add nsw i32 %2972, %2975
  %2977 = xor i32 %t235, -1
  %2978 = and i32 %2976, %2977
  %2979 = select i1 %2960, i32 0, i32 %2978
  %2980 = ashr i32 %Filter.extent.189, 1
  %2981 = add nsw i32 %2979, %2980
  %2982 = add nsw i32 %2981, %Output.min.1109
  %2983 = sub nsw i32 %2982, %Filter.extent.189
  %a63 = add nsw i32 %2983, 2
  %b65 = add nsw i32 %IMG.extent.1100, %b64
  %2984 = icmp sgt i32 %b65, %a63
  %2985 = select i1 %2984, i32 %a63, i32 %b65
  %a62 = add nsw i32 %2985, -1
  %2986 = icmp sgt i32 %a62, %b64
  %IMG.min.1.required118 = select i1 %2986, i32 %a62, i32 %b64
  %2987 = icmp sgt i32 0, %a83
  %2988 = select i1 %2987, i32 %a83, i32 0
  %a64 = add nsw i32 %2988, %b82
  %b66 = add nsw i32 %a83, 1
  %2989 = icmp sgt i32 %a64, %b66
  %2990 = select i1 %2989, i32 %a64, i32 %b66
  %a67 = add nsw i32 %b82, %a83
  %2991 = icmp sgt i32 1, %a67
  %2992 = select i1 %2991, i32 %a67, i32 1
  %a66 = add nsw i32 %2992, -1
  %2993 = icmp sgt i32 %a66, %a83
  %2994 = select i1 %2993, i32 %a66, i32 %a83
  %IMG.extent.2.required119 = sub nsw i32 %2990, %2994
  %a69 = add nsw i32 %b82, %a83
  %2995 = icmp sgt i32 1, %a69
  %2996 = select i1 %2995, i32 %a69, i32 1
  %a68 = add nsw i32 %2996, -1
  %2997 = icmp sgt i32 %a68, %a83
  %IMG.min.2.required120 = select i1 %2997, i32 %a68, i32 %a83
  %2998 = add nsw i32 %IMG.extent.0.required.s115, 1
  %2999 = add nsw i32 %IMG.extent.1.required.s117, 1
  %IMG.stride.2.required121 = mul nsw i32 %2998, %2999
  %a70 = sub nsw i32 0, %b72
  %3000 = icmp sgt i32 %a70, %b72
  %a78 = select i1 %3000, i32 %a70, i32 %b72
  %t225 = icmp sgt i32 %b72, 0
  %3001 = mul nsw i32 %b72, %Output.extent.1110
  %3002 = icmp sgt i32 1, %3001
  %t238 = select i1 %3002, i32 -1, i32 0
  %3003 = icmp eq i32 %b72, 0
  %t239 = select i1 %3003, i32 -1, i32 0
  %3004 = icmp sgt i32 0, %b72
  %t240 = select i1 %3004, i32 -1, i32 0
  %3005 = mul nsw i32 %b72, %Output.extent.1110
  %3006 = add nsw i32 %3005, -1
  %3007 = ashr i32 %3006, 5
  %3008 = mul nsw i32 %3007, 32
  %3009 = sub nsw i32 %3008, %t238
  %3010 = add nsw i32 %3009, 31
  %3011 = sub nsw i32 %b72, %t239
  %3012 = sdiv i32 %3010, %3011
  %3013 = xor i32 %t240, -1
  %3014 = sub nsw i32 %3013, %t240
  %3015 = and i32 %t238, %3014
  %3016 = add nsw i32 %3012, %3015
  %3017 = xor i32 %t239, -1
  %t226 = and i32 %3016, %3017
  %a71 = select i1 %t225, i32 %t226, i32 0
  %b73 = add nsw i32 %Output.extent.1110, -1
  %3018 = icmp sgt i32 %a71, %b73
  %3019 = select i1 %3018, i32 %a71, i32 %b73
  %a72 = select i1 %t225, i32 0, i32 %t226
  %3020 = icmp sgt i32 0, %a72
  %3021 = select i1 %3020, i32 %a72, i32 0
  %Output.extent.1.required.s122 = sub nsw i32 %3019, %3021
  %3022 = icmp sgt i32 %b72, 0
  %3023 = mul nsw i32 %b72, %Output.extent.1110
  %3024 = icmp sgt i32 1, %3023
  %t242 = select i1 %3024, i32 -1, i32 0
  %3025 = icmp eq i32 %b72, 0
  %t243 = select i1 %3025, i32 -1, i32 0
  %3026 = icmp sgt i32 0, %b72
  %t244 = select i1 %3026, i32 -1, i32 0
  %3027 = mul nsw i32 %b72, %Output.extent.1110
  %3028 = add nsw i32 %3027, -1
  %3029 = ashr i32 %3028, 5
  %3030 = mul nsw i32 %3029, 32
  %3031 = sub nsw i32 %3030, %t242
  %3032 = add nsw i32 %3031, 31
  %3033 = sub nsw i32 %b72, %t243
  %3034 = sdiv i32 %3032, %3033
  %3035 = xor i32 %t244, -1
  %3036 = sub nsw i32 %3035, %t244
  %3037 = and i32 %t242, %3036
  %3038 = add nsw i32 %3034, %3037
  %3039 = xor i32 %t243, -1
  %3040 = and i32 %3038, %3039
  %a79 = select i1 %3022, i32 0, i32 %3040
  %3041 = icmp sgt i32 %a78, 1
  %3042 = select i1 %3041, i32 %a78, i32 1
  %3043 = add nsw i32 %Output.extent.1.required.s122, 1
  %Output.stride.2.required123 = mul nsw i32 %3042, %3043
  %3044 = call i1 @_halide_buffer_is_bounds_query(%struct.halide_buffer_t* %Filter.buffer) #18
  br i1 %3044, label %then_bb125, label %next_bb126

after_bb124:                                      ; preds = %next_bb126, %then_bb125
  %3045 = call i1 @_halide_buffer_is_bounds_query(%struct.halide_buffer_t* %IMG.buffer) #18
  br i1 %3045, label %then_bb128, label %next_bb129

then_bb125:                                       ; preds = %"assert succeeded80"
  %3046 = call %struct.halide_dimension_t* @_halide_buffer_get_shape(%struct.halide_buffer_t* %Filter.buffer) #18
  %3047 = mul nsw i32 %Filter.extent.086, %Filter.extent.189
  %3048 = getelementptr inbounds [12 x i32], [12 x i32]* %2, i32 0, i32 0
  store i32 0, i32* %3048, align 4
  %3049 = getelementptr inbounds [12 x i32], [12 x i32]* %2, i32 0, i32 1
  store i32 %Filter.extent.086, i32* %3049, align 4
  %3050 = getelementptr inbounds [12 x i32], [12 x i32]* %2, i32 0, i32 2
  store i32 1, i32* %3050, align 4
  %3051 = getelementptr inbounds [12 x i32], [12 x i32]* %2, i32 0, i32 3
  store i32 0, i32* %3051, align 4
  %3052 = getelementptr inbounds [12 x i32], [12 x i32]* %2, i32 0, i32 4
  store i32 0, i32* %3052, align 4
  %3053 = getelementptr inbounds [12 x i32], [12 x i32]* %2, i32 0, i32 5
  store i32 %Filter.extent.189, i32* %3053, align 4
  %3054 = getelementptr inbounds [12 x i32], [12 x i32]* %2, i32 0, i32 6
  store i32 %Filter.extent.086, i32* %3054, align 4
  %3055 = getelementptr inbounds [12 x i32], [12 x i32]* %2, i32 0, i32 7
  store i32 0, i32* %3055, align 4
  %3056 = getelementptr inbounds [12 x i32], [12 x i32]* %2, i32 0, i32 8
  store i32 %Output.min.2112, i32* %3056, align 4
  %3057 = getelementptr inbounds [12 x i32], [12 x i32]* %2, i32 0, i32 9
  store i32 %Output.extent.2113, i32* %3057, align 4
  %3058 = getelementptr inbounds [12 x i32], [12 x i32]* %2, i32 0, i32 10
  store i32 %3047, i32* %3058, align 4
  %3059 = getelementptr inbounds [12 x i32], [12 x i32]* %2, i32 0, i32 11
  store i32 0, i32* %3059, align 4
  %3060 = bitcast [12 x i32]* %2 to %struct.halide_dimension_t*
  %3061 = call %struct.halide_buffer_t* @_halide_buffer_init(%struct.halide_buffer_t* %Filter.buffer, %struct.halide_dimension_t* %3046, i8* null, i64 0, %struct.halide_device_interface_t* null, i32 0, i32 32, i32 3, %struct.halide_dimension_t* %3060, i64 0) #18
  br label %after_bb124

next_bb126:                                       ; preds = %"assert succeeded80"
  br label %after_bb124

after_bb127:                                      ; preds = %next_bb129, %then_bb128
  %3062 = call i1 @_halide_buffer_is_bounds_query(%struct.halide_buffer_t* %Output.buffer) #18
  br i1 %3062, label %then_bb131, label %next_bb132

then_bb128:                                       ; preds = %after_bb124
  %3063 = call %struct.halide_dimension_t* @_halide_buffer_get_shape(%struct.halide_buffer_t* %IMG.buffer) #18
  %3064 = add nsw i32 %IMG.extent.0.required.s115, 1
  %3065 = add nsw i32 %IMG.extent.1.required.s117, 1
  %3066 = add nsw i32 %IMG.extent.0.required.s115, 1
  %3067 = getelementptr inbounds [12 x i32], [12 x i32]* %1, i32 0, i32 0
  store i32 %IMG.min.0.required116, i32* %3067, align 4
  %3068 = getelementptr inbounds [12 x i32], [12 x i32]* %1, i32 0, i32 1
  store i32 %3064, i32* %3068, align 4
  %3069 = getelementptr inbounds [12 x i32], [12 x i32]* %1, i32 0, i32 2
  store i32 1, i32* %3069, align 4
  %3070 = getelementptr inbounds [12 x i32], [12 x i32]* %1, i32 0, i32 3
  store i32 0, i32* %3070, align 4
  %3071 = getelementptr inbounds [12 x i32], [12 x i32]* %1, i32 0, i32 4
  store i32 %IMG.min.1.required118, i32* %3071, align 4
  %3072 = getelementptr inbounds [12 x i32], [12 x i32]* %1, i32 0, i32 5
  store i32 %3065, i32* %3072, align 4
  %3073 = getelementptr inbounds [12 x i32], [12 x i32]* %1, i32 0, i32 6
  store i32 %3066, i32* %3073, align 4
  %3074 = getelementptr inbounds [12 x i32], [12 x i32]* %1, i32 0, i32 7
  store i32 0, i32* %3074, align 4
  %3075 = getelementptr inbounds [12 x i32], [12 x i32]* %1, i32 0, i32 8
  store i32 %IMG.min.2.required120, i32* %3075, align 4
  %3076 = getelementptr inbounds [12 x i32], [12 x i32]* %1, i32 0, i32 9
  store i32 %IMG.extent.2.required119, i32* %3076, align 4
  %3077 = getelementptr inbounds [12 x i32], [12 x i32]* %1, i32 0, i32 10
  store i32 %IMG.stride.2.required121, i32* %3077, align 4
  %3078 = getelementptr inbounds [12 x i32], [12 x i32]* %1, i32 0, i32 11
  store i32 0, i32* %3078, align 4
  %3079 = bitcast [12 x i32]* %1 to %struct.halide_dimension_t*
  %3080 = call %struct.halide_buffer_t* @_halide_buffer_init(%struct.halide_buffer_t* %IMG.buffer, %struct.halide_dimension_t* %3063, i8* null, i64 0, %struct.halide_device_interface_t* null, i32 0, i32 32, i32 3, %struct.halide_dimension_t* %3079, i64 0) #18
  br label %after_bb127

next_bb129:                                       ; preds = %after_bb124
  br label %after_bb127

after_bb130:                                      ; preds = %next_bb132, %then_bb131
  %3081 = call i1 @_halide_buffer_is_bounds_query(%struct.halide_buffer_t* %Output.buffer) #18
  %3082 = call i1 @_halide_buffer_is_bounds_query(%struct.halide_buffer_t* %Filter.buffer) #18
  %3083 = call i1 @_halide_buffer_is_bounds_query(%struct.halide_buffer_t* %IMG.buffer) #18
  %3084 = or i1 %3082, %3083
  %3085 = or i1 %3081, %3084
  %3086 = xor i1 %3085, true
  br i1 %3086, label %then_bb134, label %next_bb135

then_bb131:                                       ; preds = %after_bb127
  %3087 = icmp sgt i32 %a78, 1
  %t227 = select i1 %3087, i32 %a78, i32 1
  %3088 = call %struct.halide_dimension_t* @_halide_buffer_get_shape(%struct.halide_buffer_t* %Output.buffer) #18
  %3089 = icmp sgt i32 0, %a79
  %3090 = select i1 %3089, i32 %a79, i32 0
  %3091 = add nsw i32 %3090, %Output.min.1109
  %3092 = add nsw i32 %Output.extent.1.required.s122, 1
  %3093 = getelementptr inbounds [12 x i32], [12 x i32]* %0, i32 0, i32 0
  store i32 %Output.min.0107, i32* %3093, align 4
  %3094 = getelementptr inbounds [12 x i32], [12 x i32]* %0, i32 0, i32 1
  store i32 %t227, i32* %3094, align 4
  %3095 = getelementptr inbounds [12 x i32], [12 x i32]* %0, i32 0, i32 2
  store i32 1, i32* %3095, align 4
  %3096 = getelementptr inbounds [12 x i32], [12 x i32]* %0, i32 0, i32 3
  store i32 0, i32* %3096, align 4
  %3097 = getelementptr inbounds [12 x i32], [12 x i32]* %0, i32 0, i32 4
  store i32 %3091, i32* %3097, align 4
  %3098 = getelementptr inbounds [12 x i32], [12 x i32]* %0, i32 0, i32 5
  store i32 %3092, i32* %3098, align 4
  %3099 = getelementptr inbounds [12 x i32], [12 x i32]* %0, i32 0, i32 6
  store i32 %t227, i32* %3099, align 4
  %3100 = getelementptr inbounds [12 x i32], [12 x i32]* %0, i32 0, i32 7
  store i32 0, i32* %3100, align 4
  %3101 = getelementptr inbounds [12 x i32], [12 x i32]* %0, i32 0, i32 8
  store i32 %Output.min.2112, i32* %3101, align 4
  %3102 = getelementptr inbounds [12 x i32], [12 x i32]* %0, i32 0, i32 9
  store i32 %Output.extent.2113, i32* %3102, align 4
  %3103 = getelementptr inbounds [12 x i32], [12 x i32]* %0, i32 0, i32 10
  store i32 %Output.stride.2.required123, i32* %3103, align 4
  %3104 = getelementptr inbounds [12 x i32], [12 x i32]* %0, i32 0, i32 11
  store i32 0, i32* %3104, align 4
  %3105 = bitcast [12 x i32]* %0 to %struct.halide_dimension_t*
  %3106 = call %struct.halide_buffer_t* @_halide_buffer_init(%struct.halide_buffer_t* %Output.buffer, %struct.halide_dimension_t* %3088, i8* null, i64 0, %struct.halide_device_interface_t* null, i32 0, i32 32, i32 3, %struct.halide_dimension_t* %3105, i64 0) #18
  br label %after_bb130

next_bb132:                                       ; preds = %after_bb127
  br label %after_bb130

after_bb133:                                      ; preds = %next_bb135, %"end for Output.s1.c_out.rebased213"
  br label %destructor_block

then_bb134:                                       ; preds = %after_bb130
  %3107 = icmp eq i32 %Filter.type82, 73728
  %3108 = xor i1 %3107, true
  %3109 = zext i1 %3108 to i64
  %3110 = shl i64 %3109, 0
  %3111 = or i64 -9223372036854775808, %3110
  %3112 = icmp eq i32 %Filter.dimensions84, 3
  %3113 = xor i1 %3112, true
  %3114 = zext i1 %3113 to i64
  %3115 = shl i64 %3114, 1
  %3116 = or i64 %3111, %3115
  %3117 = icmp eq i32 %IMG.type95, 73728
  %3118 = xor i1 %3117, true
  %3119 = zext i1 %3118 to i64
  %3120 = shl i64 %3119, 2
  %3121 = or i64 %3116, %3120
  %3122 = icmp eq i32 %IMG.dimensions97, 3
  %3123 = xor i1 %3122, true
  %3124 = zext i1 %3123 to i64
  %3125 = shl i64 %3124, 3
  %3126 = or i64 %3121, %3125
  %3127 = icmp eq i32 %Output.type104, 73728
  %3128 = xor i1 %3127, true
  %3129 = zext i1 %3128 to i64
  %3130 = shl i64 %3129, 4
  %3131 = or i64 %3126, %3130
  %3132 = icmp eq i32 %Output.dimensions106, 3
  %3133 = xor i1 %3132, true
  %3134 = zext i1 %3133 to i64
  %3135 = shl i64 %3134, 5
  %3136 = or i64 %3131, %3135
  %3137 = icmp sgt i32 %Filter.min.085, 0
  %3138 = xor i1 %3137, true
  %3139 = icmp sgt i32 0, %Filter.min.085
  %3140 = xor i1 %3139, true
  %3141 = and i1 %3138, %3140
  %3142 = xor i1 %3141, true
  %3143 = zext i1 %3142 to i64
  %3144 = shl i64 %3143, 6
  %3145 = or i64 %3136, %3144
  %3146 = icmp sgt i32 0, %Filter.extent.086
  %3147 = xor i1 %3146, true
  %3148 = xor i1 %3147, true
  %3149 = zext i1 %3148 to i64
  %3150 = shl i64 %3149, 7
  %3151 = or i64 %3145, %3150
  %3152 = icmp sgt i32 %Filter.min.188, 0
  %3153 = xor i1 %3152, true
  %3154 = icmp sgt i32 0, %Filter.min.188
  %3155 = xor i1 %3154, true
  %3156 = and i1 %3153, %3155
  %3157 = xor i1 %3156, true
  %3158 = zext i1 %3157 to i64
  %3159 = shl i64 %3158, 8
  %3160 = or i64 %3151, %3159
  %3161 = icmp sgt i32 0, %Filter.extent.189
  %3162 = xor i1 %3161, true
  %3163 = xor i1 %3162, true
  %3164 = zext i1 %3163 to i64
  %3165 = shl i64 %3164, 9
  %3166 = or i64 %3160, %3165
  %3167 = icmp sgt i32 %Filter.min.291, %Output.min.2112
  %3168 = xor i1 %3167, true
  %3169 = add nsw i32 %Output.extent.2113, %Output.min.2112
  %3170 = add nsw i32 %Filter.extent.292, %Filter.min.291
  %3171 = icmp sgt i32 %3169, %3170
  %3172 = xor i1 %3171, true
  %3173 = and i1 %3168, %3172
  %3174 = xor i1 %3173, true
  %3175 = zext i1 %3174 to i64
  %3176 = shl i64 %3175, 10
  %3177 = or i64 %3166, %3176
  %3178 = icmp sgt i32 0, %Filter.extent.292
  %3179 = xor i1 %3178, true
  %3180 = xor i1 %3179, true
  %3181 = zext i1 %3180 to i64
  %3182 = shl i64 %3181, 11
  %3183 = or i64 %3177, %3182
  %3184 = icmp sgt i32 %b58, %IMG.min.0.required116
  %3185 = xor i1 %3184, true
  %3186 = add nsw i32 %IMG.extent.0.required.s115, %IMG.min.0.required116
  %3187 = add nsw i32 %3186, 1
  %3188 = add nsw i32 %IMG.extent.098, %b58
  %3189 = icmp sgt i32 %3187, %3188
  %3190 = xor i1 %3189, true
  %3191 = and i1 %3185, %3190
  %3192 = xor i1 %3191, true
  %3193 = zext i1 %3192 to i64
  %3194 = shl i64 %3193, 12
  %3195 = or i64 %3183, %3194
  %3196 = icmp sgt i32 0, %IMG.extent.098
  %3197 = xor i1 %3196, true
  %3198 = xor i1 %3197, true
  %3199 = zext i1 %3198 to i64
  %3200 = shl i64 %3199, 13
  %3201 = or i64 %3195, %3200
  %3202 = icmp sgt i32 %b64, %IMG.min.1.required118
  %3203 = xor i1 %3202, true
  %3204 = add nsw i32 %IMG.extent.1.required.s117, %IMG.min.1.required118
  %3205 = add nsw i32 %3204, 1
  %3206 = add nsw i32 %IMG.extent.1100, %b64
  %3207 = icmp sgt i32 %3205, %3206
  %3208 = xor i1 %3207, true
  %3209 = and i1 %3203, %3208
  %3210 = xor i1 %3209, true
  %3211 = zext i1 %3210 to i64
  %3212 = shl i64 %3211, 14
  %3213 = or i64 %3201, %3212
  %3214 = icmp sgt i32 0, %IMG.extent.1100
  %3215 = xor i1 %3214, true
  %3216 = xor i1 %3215, true
  %3217 = zext i1 %3216 to i64
  %3218 = shl i64 %3217, 15
  %3219 = or i64 %3213, %3218
  %3220 = icmp sgt i32 %a83, %IMG.min.2.required120
  %3221 = xor i1 %3220, true
  %3222 = add nsw i32 %IMG.extent.2.required119, %IMG.min.2.required120
  %3223 = add nsw i32 %b82, %a83
  %3224 = icmp sgt i32 %3222, %3223
  %3225 = xor i1 %3224, true
  %3226 = and i1 %3221, %3225
  %3227 = xor i1 %3226, true
  %3228 = zext i1 %3227 to i64
  %3229 = shl i64 %3228, 16
  %3230 = or i64 %3219, %3229
  %3231 = icmp sgt i32 0, %b82
  %3232 = xor i1 %3231, true
  %3233 = xor i1 %3232, true
  %3234 = zext i1 %3233 to i64
  %3235 = shl i64 %3234, 17
  %3236 = or i64 %3230, %3235
  %3237 = icmp sgt i32 %a78, 1
  %3238 = select i1 %3237, i32 %a78, i32 1
  %3239 = icmp sgt i32 %3238, %b72
  %3240 = xor i1 %3239, true
  %3241 = xor i1 %3240, true
  %3242 = zext i1 %3241 to i64
  %3243 = shl i64 %3242, 18
  %3244 = or i64 %3236, %3243
  %3245 = icmp sgt i32 0, %a79
  %3246 = xor i1 %3245, true
  %3247 = icmp sgt i32 0, %a79
  %3248 = select i1 %3247, i32 %a79, i32 0
  %3249 = add nsw i32 %3248, %Output.min.1109
  %3250 = add nsw i32 %3249, %Output.extent.1.required.s122
  %3251 = add nsw i32 %3250, 1
  %3252 = add nsw i32 %Output.extent.1110, %Output.min.1109
  %3253 = icmp sgt i32 %3251, %3252
  %3254 = xor i1 %3253, true
  %3255 = and i1 %3246, %3254
  %3256 = xor i1 %3255, true
  %3257 = zext i1 %3256 to i64
  %3258 = shl i64 %3257, 19
  %3259 = or i64 %3244, %3258
  %3260 = icmp sgt i32 0, %Output.extent.1110
  %3261 = xor i1 %3260, true
  %3262 = xor i1 %3261, true
  %3263 = zext i1 %3262 to i64
  %3264 = shl i64 %3263, 20
  %3265 = or i64 %3259, %3264
  %3266 = icmp sgt i32 0, %Output.extent.2113
  %3267 = xor i1 %3266, true
  %3268 = xor i1 %3267, true
  %3269 = zext i1 %3268 to i64
  %3270 = shl i64 %3269, 21
  %3271 = or i64 %3265, %3270
  %3272 = icmp eq i32 %Filter.stride.087, 1
  %3273 = xor i1 %3272, true
  %3274 = zext i1 %3273 to i64
  %3275 = shl i64 %3274, 22
  %3276 = or i64 %3271, %3275
  %3277 = icmp eq i32 %IMG.stride.099, 1
  %3278 = xor i1 %3277, true
  %3279 = zext i1 %3278 to i64
  %3280 = shl i64 %3279, 23
  %3281 = or i64 %3276, %3280
  %3282 = icmp eq i32 %Output.stride.0108, 1
  %3283 = xor i1 %3282, true
  %3284 = zext i1 %3283 to i64
  %3285 = shl i64 %3284, 24
  %3286 = or i64 %3281, %3285
  %3287 = call i64 @llvm.cttz.i64(i64 %3286, i1 false)
  %3288 = trunc i64 %3287 to i32
  switch i32 %3288, label %no_errors_bb136 [
    i32 0, label %assert_failed137
    i32 1, label %assert_failed138
    i32 2, label %assert_failed139
    i32 3, label %assert_failed140
    i32 4, label %assert_failed141
    i32 5, label %assert_failed142
    i32 6, label %assert_failed143
    i32 7, label %assert_failed144
    i32 8, label %assert_failed145
    i32 9, label %assert_failed146
    i32 10, label %assert_failed147
    i32 11, label %assert_failed148
    i32 12, label %assert_failed149
    i32 13, label %assert_failed150
    i32 14, label %assert_failed151
    i32 15, label %assert_failed152
    i32 16, label %assert_failed153
    i32 17, label %assert_failed154
    i32 18, label %assert_failed155
    i32 19, label %assert_failed156
    i32 20, label %assert_failed157
    i32 21, label %assert_failed158
    i32 22, label %assert_failed159
    i32 23, label %assert_failed160
    i32 24, label %assert_failed161
  ], !prof !373

next_bb135:                                       ; preds = %after_bb130
  br label %after_bb133

no_errors_bb136:                                  ; preds = %then_bb134
  %3289 = sext i32 %Filter.extent.189 to i64
  %3290 = sext i32 %Filter.extent.086 to i64
  %Filter.total_extent.1162 = mul nsw i64 %3289, %3290
  %3291 = sext i32 %Filter.extent.292 to i64
  %Filter.total_extent.2163 = mul nsw i64 %Filter.total_extent.1162, %3291
  %3292 = sext i32 %IMG.extent.1100 to i64
  %3293 = sext i32 %IMG.extent.098 to i64
  %IMG.total_extent.1164 = mul nsw i64 %3292, %3293
  %3294 = sext i32 %b82 to i64
  %IMG.total_extent.2165 = mul nsw i64 %IMG.total_extent.1164, %3294
  %3295 = sext i32 %Output.extent.1110 to i64
  %3296 = sext i32 %b72 to i64
  %Output.total_extent.1166 = mul nsw i64 %3295, %3296
  %3297 = sext i32 %Output.extent.2113 to i64
  %Output.total_extent.2167 = mul nsw i64 %Output.total_extent.1166, %3297
  %3298 = sext i32 %Filter.extent.086 to i64
  %3299 = icmp ugt i64 %3298, 2147483647
  %3300 = xor i1 %3299, true
  %3301 = xor i1 %3300, true
  %3302 = zext i1 %3301 to i64
  %3303 = shl i64 %3302, 0
  %3304 = or i64 -9223372036854775808, %3303
  %3305 = sext i32 %Filter.extent.189 to i64
  %3306 = sext i32 %Filter.stride.190 to i64
  %x12 = mul nsw i64 %3305, %3306
  %3307 = icmp sgt i64 0, %x12
  %3308 = xor i1 %3307, true
  %3309 = sub nsw i64 0, %x12
  %3310 = select i1 %3308, i64 %x12, i64 %3309
  %3311 = icmp ugt i64 %3310, 2147483647
  %3312 = xor i1 %3311, true
  %3313 = xor i1 %3312, true
  %3314 = zext i1 %3313 to i64
  %3315 = shl i64 %3314, 1
  %3316 = or i64 %3304, %3315
  %3317 = icmp sgt i64 %Filter.total_extent.1162, 2147483647
  %3318 = xor i1 %3317, true
  %3319 = xor i1 %3318, true
  %3320 = zext i1 %3319 to i64
  %3321 = shl i64 %3320, 2
  %3322 = or i64 %3316, %3321
  %3323 = sext i32 %Filter.extent.292 to i64
  %3324 = sext i32 %Filter.stride.293 to i64
  %x13 = mul nsw i64 %3323, %3324
  %3325 = icmp sgt i64 0, %x13
  %3326 = xor i1 %3325, true
  %3327 = sub nsw i64 0, %x13
  %3328 = select i1 %3326, i64 %x13, i64 %3327
  %3329 = icmp ugt i64 %3328, 2147483647
  %3330 = xor i1 %3329, true
  %3331 = xor i1 %3330, true
  %3332 = zext i1 %3331 to i64
  %3333 = shl i64 %3332, 3
  %3334 = or i64 %3322, %3333
  %3335 = icmp sgt i64 %Filter.total_extent.2163, 2147483647
  %3336 = xor i1 %3335, true
  %3337 = xor i1 %3336, true
  %3338 = zext i1 %3337 to i64
  %3339 = shl i64 %3338, 4
  %3340 = or i64 %3334, %3339
  %3341 = sext i32 %IMG.extent.098 to i64
  %3342 = icmp ugt i64 %3341, 2147483647
  %3343 = xor i1 %3342, true
  %3344 = xor i1 %3343, true
  %3345 = zext i1 %3344 to i64
  %3346 = shl i64 %3345, 5
  %3347 = or i64 %3340, %3346
  %3348 = sext i32 %IMG.extent.1100 to i64
  %3349 = sext i32 %IMG.stride.1101 to i64
  %x14 = mul nsw i64 %3348, %3349
  %3350 = icmp sgt i64 0, %x14
  %3351 = xor i1 %3350, true
  %3352 = sub nsw i64 0, %x14
  %3353 = select i1 %3351, i64 %x14, i64 %3352
  %3354 = icmp ugt i64 %3353, 2147483647
  %3355 = xor i1 %3354, true
  %3356 = xor i1 %3355, true
  %3357 = zext i1 %3356 to i64
  %3358 = shl i64 %3357, 6
  %3359 = or i64 %3347, %3358
  %3360 = icmp sgt i64 %IMG.total_extent.1164, 2147483647
  %3361 = xor i1 %3360, true
  %3362 = xor i1 %3361, true
  %3363 = zext i1 %3362 to i64
  %3364 = shl i64 %3363, 7
  %3365 = or i64 %3359, %3364
  %3366 = sext i32 %b82 to i64
  %3367 = sext i32 %IMG.stride.2102 to i64
  %x15 = mul nsw i64 %3366, %3367
  %3368 = icmp sgt i64 0, %x15
  %3369 = xor i1 %3368, true
  %3370 = sub nsw i64 0, %x15
  %3371 = select i1 %3369, i64 %x15, i64 %3370
  %3372 = icmp ugt i64 %3371, 2147483647
  %3373 = xor i1 %3372, true
  %3374 = xor i1 %3373, true
  %3375 = zext i1 %3374 to i64
  %3376 = shl i64 %3375, 8
  %3377 = or i64 %3365, %3376
  %3378 = icmp sgt i64 %IMG.total_extent.2165, 2147483647
  %3379 = xor i1 %3378, true
  %3380 = xor i1 %3379, true
  %3381 = zext i1 %3380 to i64
  %3382 = shl i64 %3381, 9
  %3383 = or i64 %3377, %3382
  %3384 = sext i32 %b72 to i64
  %3385 = icmp ugt i64 %3384, 2147483647
  %3386 = xor i1 %3385, true
  %3387 = xor i1 %3386, true
  %3388 = zext i1 %3387 to i64
  %3389 = shl i64 %3388, 10
  %3390 = or i64 %3383, %3389
  %3391 = sext i32 %Output.extent.1110 to i64
  %3392 = sext i32 %Output.stride.1111 to i64
  %x16 = mul nsw i64 %3391, %3392
  %3393 = icmp sgt i64 0, %x16
  %3394 = xor i1 %3393, true
  %3395 = sub nsw i64 0, %x16
  %3396 = select i1 %3394, i64 %x16, i64 %3395
  %3397 = icmp ugt i64 %3396, 2147483647
  %3398 = xor i1 %3397, true
  %3399 = xor i1 %3398, true
  %3400 = zext i1 %3399 to i64
  %3401 = shl i64 %3400, 11
  %3402 = or i64 %3390, %3401
  %3403 = icmp sgt i64 %Output.total_extent.1166, 2147483647
  %3404 = xor i1 %3403, true
  %3405 = xor i1 %3404, true
  %3406 = zext i1 %3405 to i64
  %3407 = shl i64 %3406, 12
  %3408 = or i64 %3402, %3407
  %3409 = sext i32 %Output.extent.2113 to i64
  %3410 = sext i32 %Output.stride.2114 to i64
  %x17 = mul nsw i64 %3409, %3410
  %3411 = icmp sgt i64 0, %x17
  %3412 = xor i1 %3411, true
  %3413 = sub nsw i64 0, %x17
  %3414 = select i1 %3412, i64 %x17, i64 %3413
  %3415 = icmp ugt i64 %3414, 2147483647
  %3416 = xor i1 %3415, true
  %3417 = xor i1 %3416, true
  %3418 = zext i1 %3417 to i64
  %3419 = shl i64 %3418, 13
  %3420 = or i64 %3408, %3419
  %3421 = icmp sgt i64 %Output.total_extent.2167, 2147483647
  %3422 = xor i1 %3421, true
  %3423 = xor i1 %3422, true
  %3424 = zext i1 %3423 to i64
  %3425 = shl i64 %3424, 14
  %3426 = or i64 %3420, %3425
  %3427 = xor i1 %Filter.device_dirty83, true
  %3428 = xor i1 %3427, true
  %3429 = zext i1 %3428 to i64
  %3430 = shl i64 %3429, 15
  %3431 = or i64 %3426, %3430
  %3432 = xor i1 %IMG.device_dirty96, true
  %3433 = xor i1 %3432, true
  %3434 = zext i1 %3433 to i64
  %3435 = shl i64 %3434, 16
  %3436 = or i64 %3431, %3435
  %3437 = xor i1 %Output.device_dirty105, true
  %3438 = xor i1 %3437, true
  %3439 = zext i1 %3438 to i64
  %3440 = shl i64 %3439, 17
  %3441 = or i64 %3436, %3440
  %3442 = icmp eq i8* %Filter81, null
  %3443 = xor i1 %3442, true
  %3444 = xor i1 %3443, true
  %3445 = zext i1 %3444 to i64
  %3446 = shl i64 %3445, 18
  %3447 = or i64 %3441, %3446
  %3448 = icmp eq i8* %IMG94, null
  %3449 = xor i1 %3448, true
  %3450 = xor i1 %3449, true
  %3451 = zext i1 %3450 to i64
  %3452 = shl i64 %3451, 19
  %3453 = or i64 %3447, %3452
  %3454 = icmp eq i8* %Output103, null
  %3455 = xor i1 %3454, true
  %3456 = xor i1 %3455, true
  %3457 = zext i1 %3456 to i64
  %3458 = shl i64 %3457, 20
  %3459 = or i64 %3453, %3458
  %3460 = call i64 @llvm.cttz.i64(i64 %3459, i1 false)
  %3461 = trunc i64 %3460 to i32
  switch i32 %3461, label %no_errors_bb168 [
    i32 0, label %assert_failed169
    i32 1, label %assert_failed170
    i32 2, label %assert_failed171
    i32 3, label %assert_failed172
    i32 4, label %assert_failed173
    i32 5, label %assert_failed174
    i32 6, label %assert_failed175
    i32 7, label %assert_failed176
    i32 8, label %assert_failed177
    i32 9, label %assert_failed178
    i32 10, label %assert_failed179
    i32 11, label %assert_failed180
    i32 12, label %assert_failed181
    i32 13, label %assert_failed182
    i32 14, label %assert_failed183
    i32 15, label %assert_failed184
    i32 16, label %assert_failed185
    i32 17, label %assert_failed186
    i32 18, label %assert_failed187
    i32 19, label %assert_failed188
    i32 20, label %assert_failed189
  ], !prof !374

assert_failed137:                                 ; preds = %then_bb134
  %3462 = call i32 @halide_error_bad_type(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0), i32 %Filter.type82, i32 73728) #18
  call void @pimShowStatsWrapper()
  ret i32 %3462

assert_failed138:                                 ; preds = %then_bb134
  %3463 = call i32 @halide_error_bad_dimensions(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0), i32 %Filter.dimensions84, i32 3) #18
  call void @pimShowStatsWrapper()
  ret i32 %3463

assert_failed139:                                 ; preds = %then_bb134
  %3464 = call i32 @halide_error_bad_type(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0), i32 %IMG.type95, i32 73728) #18
  call void @pimShowStatsWrapper()
  ret i32 %3464

assert_failed140:                                 ; preds = %then_bb134
  %3465 = call i32 @halide_error_bad_dimensions(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0), i32 %IMG.dimensions97, i32 3) #18
  call void @pimShowStatsWrapper()
  ret i32 %3465

assert_failed141:                                 ; preds = %then_bb134
  %3466 = call i32 @halide_error_bad_type(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i32 0, i32 0), i32 %Output.type104, i32 73728) #18
  call void @pimShowStatsWrapper()
  ret i32 %3466

assert_failed142:                                 ; preds = %then_bb134
  %3467 = call i32 @halide_error_bad_dimensions(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i32 0, i32 0), i32 %Output.dimensions106, i32 3) #18
  call void @pimShowStatsWrapper()
  ret i32 %3467

assert_failed143:                                 ; preds = %then_bb134
  %3468 = add nsw i32 %Filter.extent.086, -1
  %3469 = add nsw i32 %Filter.extent.086, %Filter.min.085
  %3470 = add nsw i32 %3469, -1
  %3471 = call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0), i32 0, i32 0, i32 %3468, i32 %Filter.min.085, i32 %3470) #18
  call void @pimShowStatsWrapper()
  ret i32 %3471

assert_failed144:                                 ; preds = %then_bb134
  %3472 = call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0), i32 0, i32 %Filter.extent.086) #18
  call void @pimShowStatsWrapper()
  ret i32 %3472

assert_failed145:                                 ; preds = %then_bb134
  %3473 = add nsw i32 %Filter.extent.189, -1
  %3474 = add nsw i32 %Filter.extent.189, %Filter.min.188
  %3475 = add nsw i32 %3474, -1
  %3476 = call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0), i32 1, i32 0, i32 %3473, i32 %Filter.min.188, i32 %3475) #18
  call void @pimShowStatsWrapper()
  ret i32 %3476

assert_failed146:                                 ; preds = %then_bb134
  %3477 = call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0), i32 1, i32 %Filter.extent.189) #18
  call void @pimShowStatsWrapper()
  ret i32 %3477

assert_failed147:                                 ; preds = %then_bb134
  %3478 = add nsw i32 %Output.extent.2113, %Output.min.2112
  %3479 = add nsw i32 %3478, -1
  %3480 = add nsw i32 %Filter.extent.292, %Filter.min.291
  %3481 = add nsw i32 %3480, -1
  %3482 = call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0), i32 2, i32 %Output.min.2112, i32 %3479, i32 %Filter.min.291, i32 %3481) #18
  call void @pimShowStatsWrapper()
  ret i32 %3482

assert_failed148:                                 ; preds = %then_bb134
  %3483 = call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0), i32 2, i32 %Filter.extent.292) #18
  call void @pimShowStatsWrapper()
  ret i32 %3483

assert_failed149:                                 ; preds = %then_bb134
  %3484 = add nsw i32 %IMG.extent.0.required.s115, %IMG.min.0.required116
  %3485 = add nsw i32 %IMG.extent.098, %b58
  %3486 = add nsw i32 %3485, -1
  %3487 = call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0), i32 0, i32 %IMG.min.0.required116, i32 %3484, i32 %b58, i32 %3486) #18
  call void @pimShowStatsWrapper()
  ret i32 %3487

assert_failed150:                                 ; preds = %then_bb134
  %3488 = call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0), i32 0, i32 %IMG.extent.098) #18
  call void @pimShowStatsWrapper()
  ret i32 %3488

assert_failed151:                                 ; preds = %then_bb134
  %3489 = add nsw i32 %IMG.extent.1.required.s117, %IMG.min.1.required118
  %3490 = add nsw i32 %IMG.extent.1100, %b64
  %3491 = add nsw i32 %3490, -1
  %3492 = call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0), i32 1, i32 %IMG.min.1.required118, i32 %3489, i32 %b64, i32 %3491) #18
  call void @pimShowStatsWrapper()
  ret i32 %3492

assert_failed152:                                 ; preds = %then_bb134
  %3493 = call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0), i32 1, i32 %IMG.extent.1100) #18
  call void @pimShowStatsWrapper()
  ret i32 %3493

assert_failed153:                                 ; preds = %then_bb134
  %3494 = add nsw i32 %IMG.extent.2.required119, %IMG.min.2.required120
  %3495 = add nsw i32 %3494, -1
  %3496 = add nsw i32 %b82, %a83
  %3497 = add nsw i32 %3496, -1
  %3498 = call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0), i32 2, i32 %IMG.min.2.required120, i32 %3495, i32 %a83, i32 %3497) #18
  call void @pimShowStatsWrapper()
  ret i32 %3498

assert_failed154:                                 ; preds = %then_bb134
  %3499 = call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0), i32 2, i32 %b82) #18
  call void @pimShowStatsWrapper()
  ret i32 %3499

assert_failed155:                                 ; preds = %then_bb134
  %3500 = icmp sgt i32 %a78, 1
  %3501 = select i1 %3500, i32 %a78, i32 1
  %3502 = add nsw i32 %3501, %Output.min.0107
  %3503 = add nsw i32 %3502, -1
  %3504 = add nsw i32 %b72, %Output.min.0107
  %3505 = add nsw i32 %3504, -1
  %3506 = call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i32 0, i32 0), i32 0, i32 %Output.min.0107, i32 %3503, i32 %Output.min.0107, i32 %3505) #18
  call void @pimShowStatsWrapper()
  ret i32 %3506

assert_failed156:                                 ; preds = %then_bb134
  %3507 = icmp sgt i32 0, %a79
  %3508 = select i1 %3507, i32 %a79, i32 0
  %t228 = add nsw i32 %3508, %Output.min.1109
  %3509 = add nsw i32 %t228, %Output.extent.1.required.s122
  %3510 = add nsw i32 %Output.extent.1110, %Output.min.1109
  %3511 = add nsw i32 %3510, -1
  %3512 = call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i32 0, i32 0), i32 1, i32 %t228, i32 %3509, i32 %Output.min.1109, i32 %3511) #18
  call void @pimShowStatsWrapper()
  ret i32 %3512

assert_failed157:                                 ; preds = %then_bb134
  %3513 = call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i32 0, i32 0), i32 1, i32 %Output.extent.1110) #18
  call void @pimShowStatsWrapper()
  ret i32 %3513

assert_failed158:                                 ; preds = %then_bb134
  %3514 = call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i32 0, i32 0), i32 2, i32 %Output.extent.2113) #18
  call void @pimShowStatsWrapper()
  ret i32 %3514

assert_failed159:                                 ; preds = %then_bb134
  %3515 = call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.207, i32 0, i32 0), i32 %Filter.stride.087, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.208, i32 0, i32 0), i32 1) #18
  call void @pimShowStatsWrapper()
  ret i32 %3515

assert_failed160:                                 ; preds = %then_bb134
  %3516 = call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.209, i32 0, i32 0), i32 %IMG.stride.099, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.208, i32 0, i32 0), i32 1) #18
  call void @pimShowStatsWrapper()
  ret i32 %3516

assert_failed161:                                 ; preds = %then_bb134
  %3517 = call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.210, i32 0, i32 0), i32 %Output.stride.0108, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.208, i32 0, i32 0), i32 1) #18
  call void @pimShowStatsWrapper()
  ret i32 %3517

no_errors_bb168:                                  ; preds = %no_errors_bb136
  br label %"produce Output190"

assert_failed169:                                 ; preds = %no_errors_bb136
  %3518 = sext i32 %Filter.extent.086 to i64
  %3519 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i32 0, i32 0), i64 %3518, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %3519

assert_failed170:                                 ; preds = %no_errors_bb136
  %3520 = sext i32 %Filter.extent.189 to i64
  %3521 = sext i32 %Filter.stride.190 to i64
  %x18 = mul nsw i64 %3520, %3521
  %3522 = icmp sgt i64 0, %x18
  %3523 = xor i1 %3522, true
  %3524 = sub nsw i64 0, %x18
  %3525 = select i1 %3523, i64 %x18, i64 %3524
  %3526 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i32 0, i32 0), i64 %3525, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %3526

assert_failed171:                                 ; preds = %no_errors_bb136
  %3527 = call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i32 0, i32 0), i64 %Filter.total_extent.1162, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %3527

assert_failed172:                                 ; preds = %no_errors_bb136
  %3528 = sext i32 %Filter.extent.292 to i64
  %3529 = sext i32 %Filter.stride.293 to i64
  %x19 = mul nsw i64 %3528, %3529
  %3530 = icmp sgt i64 0, %x19
  %3531 = xor i1 %3530, true
  %3532 = sub nsw i64 0, %x19
  %3533 = select i1 %3531, i64 %x19, i64 %3532
  %3534 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i32 0, i32 0), i64 %3533, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %3534

assert_failed173:                                 ; preds = %no_errors_bb136
  %3535 = call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i32 0, i32 0), i64 %Filter.total_extent.2163, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %3535

assert_failed174:                                 ; preds = %no_errors_bb136
  %3536 = sext i32 %IMG.extent.098 to i64
  %3537 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i32 0, i32 0), i64 %3536, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %3537

assert_failed175:                                 ; preds = %no_errors_bb136
  %3538 = sext i32 %IMG.extent.1100 to i64
  %3539 = sext i32 %IMG.stride.1101 to i64
  %x20 = mul nsw i64 %3538, %3539
  %3540 = icmp sgt i64 0, %x20
  %3541 = xor i1 %3540, true
  %3542 = sub nsw i64 0, %x20
  %3543 = select i1 %3541, i64 %x20, i64 %3542
  %3544 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i32 0, i32 0), i64 %3543, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %3544

assert_failed176:                                 ; preds = %no_errors_bb136
  %3545 = call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i32 0, i32 0), i64 %IMG.total_extent.1164, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %3545

assert_failed177:                                 ; preds = %no_errors_bb136
  %3546 = sext i32 %b82 to i64
  %3547 = sext i32 %IMG.stride.2102 to i64
  %x21 = mul nsw i64 %3546, %3547
  %3548 = icmp sgt i64 0, %x21
  %3549 = xor i1 %3548, true
  %3550 = sub nsw i64 0, %x21
  %3551 = select i1 %3549, i64 %x21, i64 %3550
  %3552 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i32 0, i32 0), i64 %3551, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %3552

assert_failed178:                                 ; preds = %no_errors_bb136
  %3553 = call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i32 0, i32 0), i64 %IMG.total_extent.2165, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %3553

assert_failed179:                                 ; preds = %no_errors_bb136
  %3554 = sext i32 %b72 to i64
  %3555 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i32 0, i32 0), i64 %3554, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %3555

assert_failed180:                                 ; preds = %no_errors_bb136
  %3556 = sext i32 %Output.extent.1110 to i64
  %3557 = sext i32 %Output.stride.1111 to i64
  %x22 = mul nsw i64 %3556, %3557
  %3558 = icmp sgt i64 0, %x22
  %3559 = xor i1 %3558, true
  %3560 = sub nsw i64 0, %x22
  %3561 = select i1 %3559, i64 %x22, i64 %3560
  %3562 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i32 0, i32 0), i64 %3561, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %3562

assert_failed181:                                 ; preds = %no_errors_bb136
  %3563 = call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i32 0, i32 0), i64 %Output.total_extent.1166, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %3563

assert_failed182:                                 ; preds = %no_errors_bb136
  %3564 = sext i32 %Output.extent.2113 to i64
  %3565 = sext i32 %Output.stride.2114 to i64
  %x23 = mul nsw i64 %3564, %3565
  %3566 = icmp sgt i64 0, %x23
  %3567 = xor i1 %3566, true
  %3568 = sub nsw i64 0, %x23
  %3569 = select i1 %3567, i64 %x23, i64 %3568
  %3570 = call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i32 0, i32 0), i64 %3569, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %3570

assert_failed183:                                 ; preds = %no_errors_bb136
  %3571 = call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i32 0, i32 0), i64 %Output.total_extent.2167, i64 2147483647) #18
  call void @pimShowStatsWrapper()
  ret i32 %3571

assert_failed184:                                 ; preds = %no_errors_bb136
  %3572 = call i32 @halide_error_device_dirty_with_no_device_support(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0)) #18
  call void @pimShowStatsWrapper()
  ret i32 %3572

assert_failed185:                                 ; preds = %no_errors_bb136
  %3573 = call i32 @halide_error_device_dirty_with_no_device_support(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0)) #18
  call void @pimShowStatsWrapper()
  ret i32 %3573

assert_failed186:                                 ; preds = %no_errors_bb136
  %3574 = call i32 @halide_error_device_dirty_with_no_device_support(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i32 0, i32 0)) #18
  call void @pimShowStatsWrapper()
  ret i32 %3574

assert_failed187:                                 ; preds = %no_errors_bb136
  %3575 = call i32 @halide_error_host_is_null(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i32 0, i32 0)) #18
  call void @pimShowStatsWrapper()
  ret i32 %3575

assert_failed188:                                 ; preds = %no_errors_bb136
  %3576 = call i32 @halide_error_host_is_null(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i32 0, i32 0)) #18
  call void @pimShowStatsWrapper()
  ret i32 %3576

assert_failed189:                                 ; preds = %no_errors_bb136
  %3577 = call i32 @halide_error_host_is_null(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i32 0, i32 0)) #18
  call void @pimShowStatsWrapper()
  ret i32 %3577

"produce Output190":                              ; preds = %no_errors_bb168
  %3578 = mul nsw i32 %Output.min.2112, %Output.stride.2114
  %3579 = mul nsw i32 %Output.min.1109, %Output.stride.1111
  %3580 = add nsw i32 %3578, %3579
  %t146191 = sub nsw i32 0, %3580
  %3581 = add nsw i32 0, %Output.extent.2113
  %3582 = icmp slt i32 0, %3581
  br i1 %3582, label %"for Output.s0.c_out.rebased192", label %"end for Output.s0.c_out.rebased193", !prof !372

"for Output.s0.c_out.rebased192":                 ; preds = %"end for Output.s0.y.rebased197", %"produce Output190"
  %Output.s0.c_out.rebased194 = phi i32 [ 0, %"produce Output190" ], [ %3604, %"end for Output.s0.y.rebased197" ]
  %3583 = add nsw i32 %Output.min.2112, %Output.s0.c_out.rebased194
  %3584 = mul nsw i32 %3583, %Output.stride.2114
  %t147195 = add nsw i32 %3584, %t146191
  %3585 = add nsw i32 0, %Output.extent.1110
  %3586 = icmp slt i32 0, %3585
  br i1 %3586, label %"for Output.s0.y.rebased196", label %"end for Output.s0.y.rebased197", !prof !372

"end for Output.s0.c_out.rebased193":             ; preds = %"end for Output.s0.y.rebased197", %"produce Output190"
  %3587 = icmp sgt i32 %a83, 0
  %a80 = select i1 %3587, i32 %a83, i32 0
  %3588 = icmp sgt i32 %b82, %a80
  %b84 = select i1 %3588, i32 %a80, i32 %b82
  %3589 = icmp sgt i32 0, %a83
  %3590 = select i1 %3589, i32 %a83, i32 0
  %a82 = add nsw i32 %3590, %b82
  %3591 = icmp sgt i32 %a82, %b84
  %t151203 = select i1 %3591, i32 %a82, i32 %b84
  %3592 = mul nsw i32 %b72, %Output.extent.1110
  %3593 = add nsw i32 %3592, 31
  %t149204 = ashr i32 %3593, 5
  %t158205 = sub nsw i32 %Output.min.2112, %Filter.min.291
  %3594 = ashr i32 %Filter.extent.189, 1
  %t154206 = add nsw i32 %3594, %Output.min.1109
  %3595 = ashr i32 %Filter.extent.086, 1
  %t156207 = add nsw i32 %3595, %Output.min.0107
  %3596 = mul nsw i32 %Output.min.1109, %Output.stride.1111
  %t152208 = add nsw i32 %3596, %Output.min.0107
  %3597 = mul nsw i32 %b64, %IMG.stride.1101
  %t153209 = add nsw i32 %3597, %b58
  %t155210 = add nsw i32 %IMG.extent.1100, %b64
  %t157211 = add nsw i32 %IMG.extent.098, %b58
  %3598 = add nsw i32 0, %Output.extent.2113
  %3599 = icmp slt i32 0, %3598
  br i1 %3599, label %"for Output.s1.c_out.rebased212", label %"end for Output.s1.c_out.rebased213", !prof !372

"for Output.s0.y.rebased196":                     ; preds = %"end for Output.s0.x.rebased201", %"for Output.s0.c_out.rebased192"
  %Output.s0.y.rebased198 = phi i32 [ 0, %"for Output.s0.c_out.rebased192" ], [ %3613, %"end for Output.s0.x.rebased201" ]
  %3600 = add nsw i32 %Output.min.1109, %Output.s0.y.rebased198
  %3601 = mul nsw i32 %3600, %Output.stride.1111
  %t148199 = add nsw i32 %3601, %t147195
  %3602 = add nsw i32 0, %b72
  %3603 = icmp slt i32 0, %3602
  br i1 %3603, label %"for Output.s0.x.rebased200", label %"end for Output.s0.x.rebased201", !prof !372

"end for Output.s0.y.rebased197":                 ; preds = %"end for Output.s0.x.rebased201", %"for Output.s0.c_out.rebased192"
  %3604 = add nsw i32 %Output.s0.c_out.rebased194, 1
  %3605 = icmp ne i32 %3604, %3581
  br i1 %3605, label %"for Output.s0.c_out.rebased192", label %"end for Output.s0.c_out.rebased193"

"for Output.s0.x.rebased200":                     ; preds = %"for Output.s0.x.rebased200", %"for Output.s0.y.rebased196"
  %Output.s0.x.rebased202 = phi i32 [ 0, %"for Output.s0.y.rebased196" ], [ %3611, %"for Output.s0.x.rebased200" ]
  %3606 = sext i32 %Output.s0.x.rebased202 to i64
  %3607 = sext i32 %t148199 to i64
  %3608 = add nsw i64 %3606, %3607
  %3609 = bitcast i8* %Output103 to i32*
  %3610 = getelementptr inbounds i32, i32* %3609, i64 %3608
  store i32 0, i32* %3610, align 4, !tbaa !375
  %3611 = add nsw i32 %Output.s0.x.rebased202, 1
  %3612 = icmp ne i32 %3611, %3602
  br i1 %3612, label %"for Output.s0.x.rebased200", label %"end for Output.s0.x.rebased201"

"end for Output.s0.x.rebased201":                 ; preds = %"for Output.s0.x.rebased200", %"for Output.s0.y.rebased196"
  %3613 = add nsw i32 %Output.s0.y.rebased198, 1
  %3614 = icmp ne i32 %3613, %3585
  br i1 %3614, label %"for Output.s0.y.rebased196", label %"end for Output.s0.y.rebased197"

"for Output.s1.c_out.rebased212":                 ; preds = %"end for Output.s1.x.x.x221", %"end for Output.s0.c_out.rebased193"
  %Output.s1.c_out.rebased214 = phi i32 [ 0, %"end for Output.s0.c_out.rebased193" ], [ %3621, %"end for Output.s1.x.x.x221" ]
  %3615 = add nsw i32 %Output.s1.c_out.rebased214, %t158205
  %t161215 = mul nsw i32 %3615, %Filter.stride.293
  %3616 = mul nsw i32 %Output.s1.c_out.rebased214, %Output.stride.2114
  %t160216 = sub nsw i32 %3616, %t152208
  %t162217 = sub nsw i32 %t151203, %b84
  %t165218 = sub nsw i32 %t151203, %a83
  %t164219 = sub nsw i32 %b82, %t151203
  %3617 = add nsw i32 0, %t149204
  %3618 = icmp slt i32 0, %3617
  br i1 %3618, label %"for Output.s1.x.x.x220", label %"end for Output.s1.x.x.x221", !prof !372

"end for Output.s1.c_out.rebased213":             ; preds = %"end for Output.s1.x.x.x221", %"end for Output.s0.c_out.rebased193"
  br label %after_bb133

"for Output.s1.x.x.x220":                         ; preds = %"end for Output.s1.r10$z.rebased258", %"for Output.s1.c_out.rebased212"
  %Output.s1.x.x.x222 = phi i32 [ 0, %"for Output.s1.c_out.rebased212" ], [ %5043, %"end for Output.s1.r10$z.rebased258" ]
  %t166223 = mul nsw i32 %Output.s1.x.x.x222, 32
  %3619 = add nsw i32 0, %b84
  %3620 = icmp slt i32 0, %3619
  br i1 %3620, label %"for Output.s1.r10$z224", label %"end for Output.s1.r10$z225", !prof !372

"end for Output.s1.x.x.x221":                     ; preds = %"end for Output.s1.r10$z.rebased258", %"for Output.s1.c_out.rebased212"
  %3621 = add nsw i32 %Output.s1.c_out.rebased214, 1
  %3622 = icmp ne i32 %3621, %3598
  br i1 %3622, label %"for Output.s1.c_out.rebased212", label %"end for Output.s1.c_out.rebased213"

"for Output.s1.r10$z224":                         ; preds = %"end for Output.s1.r10$y229", %"for Output.s1.x.x.x220"
  %"Output.s1.r10$z226" = phi i32 [ 0, %"for Output.s1.x.x.x220" ], [ %3634, %"end for Output.s1.r10$y229" ]
  %a85 = sub nsw i32 %"Output.s1.r10$z226", %a83
  %b87 = add nsw i32 %b82, -1
  %3623 = icmp sgt i32 %b87, %a85
  %a84 = select i1 %3623, i32 %a85, i32 %b87
  %3624 = icmp sgt i32 %a84, 0
  %3625 = select i1 %3624, i32 %a84, i32 0
  %3626 = mul nsw i32 %3625, %IMG.stride.2102
  %t167227 = sub nsw i32 %3626, %t153209
  %3627 = add nsw i32 0, %Filter.extent.189
  %3628 = icmp slt i32 0, %3627
  br i1 %3628, label %"for Output.s1.r10$y228", label %"end for Output.s1.r10$y229", !prof !372

"end for Output.s1.r10$z225":                     ; preds = %"end for Output.s1.r10$y229", %"for Output.s1.x.x.x220"
  %t170239 = mul nsw i32 %Output.s1.x.x.x222, 32
  %t171240 = sub nsw i32 %b84, %a83
  %3629 = add nsw i32 0, %t162217
  %3630 = icmp slt i32 0, %3629
  br i1 %3630, label %"for Output.s1.r10$z.rebased241", label %"end for Output.s1.r10$z.rebased242", !prof !372

"for Output.s1.r10$y228":                         ; preds = %"end for Output.s1.r10$x234", %"for Output.s1.r10$z224"
  %"Output.s1.r10$y230" = phi i32 [ 0, %"for Output.s1.r10$z224" ], [ %4329, %"end for Output.s1.r10$x234" ]
  %t168231 = sub nsw i32 %t154206, %"Output.s1.r10$y230"
  %3631 = mul nsw i32 %Filter.stride.190, %"Output.s1.r10$y230"
  %t169232 = add nsw i32 %3631, %t161215
  %3632 = add nsw i32 0, %Filter.extent.086
  %3633 = icmp slt i32 0, %3632
  br i1 %3633, label %"for Output.s1.r10$x233", label %"end for Output.s1.r10$x234", !prof !372

"end for Output.s1.r10$y229":                     ; preds = %"end for Output.s1.r10$x234", %"for Output.s1.r10$z224"
  %3634 = add nsw i32 %"Output.s1.r10$z226", 1
  %3635 = icmp ne i32 %3634, %3619
  br i1 %3635, label %"for Output.s1.r10$z224", label %"end for Output.s1.r10$z225"

"for Output.s1.r10$x233":                         ; preds = %"for Output.s1.r10$x233", %"for Output.s1.r10$y228"
  %"Output.s1.r10$x235" = phi i32 [ 0, %"for Output.s1.r10$y228" ], [ %4327, %"for Output.s1.r10$x233" ]
  %3636 = insertelement <32 x i32> undef, i32 %t166223, i32 0
  %3637 = shufflevector <32 x i32> %3636, <32 x i32> undef, <32 x i32> zeroinitializer
  %3638 = add nsw <32 x i32> %3637, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3639 = shufflevector <32 x i32> %3638, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3640 = icmp sgt <16 x i32> zeroinitializer, %3639
  %3641 = shufflevector <32 x i32> %3638, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3642 = icmp sgt <16 x i32> zeroinitializer, %3641
  %3643 = shufflevector <16 x i1> %3640, <16 x i1> %3642, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3644 = shufflevector <32 x i1> %3643, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3645 = select <16 x i1> %3644, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %3646 = shufflevector <32 x i1> %3643, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3647 = select <16 x i1> %3646, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %t245 = shufflevector <16 x i32> %3645, <16 x i32> %3647, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3648 = icmp eq i32 %b72, 0
  %t246 = select i1 %3648, <32 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <32 x i32> zeroinitializer
  %3649 = icmp sgt i32 0, %b72
  %t247.s = select i1 %3649, i32 -1, i32 0
  %3650 = insertelement <32 x i32> undef, i32 %t166223, i32 0
  %3651 = shufflevector <32 x i32> %3650, <32 x i32> undef, <32 x i32> zeroinitializer
  %3652 = add nsw <32 x i32> %3651, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3653 = sub nsw <32 x i32> %3652, %t245
  %3654 = insertelement <32 x i32> undef, i32 %b72, i32 0
  %3655 = shufflevector <32 x i32> %3654, <32 x i32> undef, <32 x i32> zeroinitializer
  %3656 = sub nsw <32 x i32> %3655, %t246
  %3657 = sdiv <32 x i32> %3653, %3656
  %3658 = xor i32 %t247.s, -1
  %3659 = sub nsw i32 %3658, %t247.s
  %3660 = insertelement <32 x i32> undef, i32 %3659, i32 0
  %3661 = shufflevector <32 x i32> %3660, <32 x i32> undef, <32 x i32> zeroinitializer
  %3662 = and <32 x i32> %t245, %3661
  %3663 = add nsw <32 x i32> %3657, %3662
  %3664 = xor <32 x i32> %t246, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %t120236 = and <32 x i32> %3663, %3664
  %3665 = insertelement <32 x i32> undef, i32 %t166223, i32 0
  %3666 = shufflevector <32 x i32> %3665, <32 x i32> undef, <32 x i32> zeroinitializer
  %3667 = add nsw <32 x i32> %3666, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3668 = shufflevector <32 x i32> %3667, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3669 = icmp sgt <16 x i32> zeroinitializer, %3668
  %3670 = shufflevector <32 x i32> %3667, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3671 = icmp sgt <16 x i32> zeroinitializer, %3670
  %3672 = shufflevector <16 x i1> %3669, <16 x i1> %3671, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3673 = shufflevector <32 x i1> %3672, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3674 = select <16 x i1> %3673, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %3675 = shufflevector <32 x i1> %3672, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3676 = select <16 x i1> %3675, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %t248 = shufflevector <16 x i32> %3674, <16 x i32> %3676, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3677 = icmp eq i32 %b72, 0
  %t249 = select i1 %3677, <32 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <32 x i32> zeroinitializer
  %3678 = icmp sgt i32 0, %b72
  %t250.s = select i1 %3678, i32 -1, i32 0
  %3679 = insertelement <32 x i32> undef, i32 %t166223, i32 0
  %3680 = shufflevector <32 x i32> %3679, <32 x i32> undef, <32 x i32> zeroinitializer
  %3681 = add nsw <32 x i32> %3680, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3682 = sub nsw <32 x i32> %3681, %t248
  %3683 = insertelement <32 x i32> undef, i32 %b72, i32 0
  %3684 = shufflevector <32 x i32> %3683, <32 x i32> undef, <32 x i32> zeroinitializer
  %3685 = or <32 x i32> %3684, %t249
  %3686 = srem <32 x i32> %3682, %3685
  %3687 = xor i32 %b72, %t250.s
  %3688 = xor i32 %t250.s, -1
  %3689 = add nsw i32 %3687, %3688
  %3690 = insertelement <32 x i32> undef, i32 %3689, i32 0
  %3691 = shufflevector <32 x i32> %3690, <32 x i32> undef, <32 x i32> zeroinitializer
  %3692 = and <32 x i32> %t248, %3691
  %3693 = add nsw <32 x i32> %3686, %3692
  %3694 = xor <32 x i32> %t249, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %t121237 = and <32 x i32> %3693, %3694
  %3695 = add nsw i32 %Output.min.0107, %t160216
  %t122238 = call <32 x i32> bitcast (<32 x i32> (<32 x i32>, <1 x i32>, <1 x i32>, <1 x i32>, <32 x i32>)* @hydride.node.convolution_bitserial_depth2_rafae.0 to <32 x i32> (<32 x i32>, i32, i32, i32, <32 x i32>)*)(<32 x i32> %t120236, i32 %Output.min.1109, i32 %Output.stride.1111, i32 %3695, <32 x i32> %t121237) #18
  %3696 = extractelement <32 x i32> %t122238, i32 0
  %3697 = bitcast i8* %Output103 to i32*
  %3698 = sext i32 %3696 to i64
  %3699 = getelementptr inbounds i32, i32* %3697, i64 %3698
  %3700 = load i32, i32* %3699, align 4, !tbaa !375
  %3701 = insertelement <32 x i32> undef, i32 %3700, i32 0
  %3702 = extractelement <32 x i32> %t122238, i32 1
  %3703 = bitcast i8* %Output103 to i32*
  %3704 = sext i32 %3702 to i64
  %3705 = getelementptr inbounds i32, i32* %3703, i64 %3704
  %3706 = load i32, i32* %3705, align 4, !tbaa !375
  %3707 = insertelement <32 x i32> %3701, i32 %3706, i32 1
  %3708 = extractelement <32 x i32> %t122238, i32 2
  %3709 = bitcast i8* %Output103 to i32*
  %3710 = sext i32 %3708 to i64
  %3711 = getelementptr inbounds i32, i32* %3709, i64 %3710
  %3712 = load i32, i32* %3711, align 4, !tbaa !375
  %3713 = insertelement <32 x i32> %3707, i32 %3712, i32 2
  %3714 = extractelement <32 x i32> %t122238, i32 3
  %3715 = bitcast i8* %Output103 to i32*
  %3716 = sext i32 %3714 to i64
  %3717 = getelementptr inbounds i32, i32* %3715, i64 %3716
  %3718 = load i32, i32* %3717, align 4, !tbaa !375
  %3719 = insertelement <32 x i32> %3713, i32 %3718, i32 3
  %3720 = extractelement <32 x i32> %t122238, i32 4
  %3721 = bitcast i8* %Output103 to i32*
  %3722 = sext i32 %3720 to i64
  %3723 = getelementptr inbounds i32, i32* %3721, i64 %3722
  %3724 = load i32, i32* %3723, align 4, !tbaa !375
  %3725 = insertelement <32 x i32> %3719, i32 %3724, i32 4
  %3726 = extractelement <32 x i32> %t122238, i32 5
  %3727 = bitcast i8* %Output103 to i32*
  %3728 = sext i32 %3726 to i64
  %3729 = getelementptr inbounds i32, i32* %3727, i64 %3728
  %3730 = load i32, i32* %3729, align 4, !tbaa !375
  %3731 = insertelement <32 x i32> %3725, i32 %3730, i32 5
  %3732 = extractelement <32 x i32> %t122238, i32 6
  %3733 = bitcast i8* %Output103 to i32*
  %3734 = sext i32 %3732 to i64
  %3735 = getelementptr inbounds i32, i32* %3733, i64 %3734
  %3736 = load i32, i32* %3735, align 4, !tbaa !375
  %3737 = insertelement <32 x i32> %3731, i32 %3736, i32 6
  %3738 = extractelement <32 x i32> %t122238, i32 7
  %3739 = bitcast i8* %Output103 to i32*
  %3740 = sext i32 %3738 to i64
  %3741 = getelementptr inbounds i32, i32* %3739, i64 %3740
  %3742 = load i32, i32* %3741, align 4, !tbaa !375
  %3743 = insertelement <32 x i32> %3737, i32 %3742, i32 7
  %3744 = extractelement <32 x i32> %t122238, i32 8
  %3745 = bitcast i8* %Output103 to i32*
  %3746 = sext i32 %3744 to i64
  %3747 = getelementptr inbounds i32, i32* %3745, i64 %3746
  %3748 = load i32, i32* %3747, align 4, !tbaa !375
  %3749 = insertelement <32 x i32> %3743, i32 %3748, i32 8
  %3750 = extractelement <32 x i32> %t122238, i32 9
  %3751 = bitcast i8* %Output103 to i32*
  %3752 = sext i32 %3750 to i64
  %3753 = getelementptr inbounds i32, i32* %3751, i64 %3752
  %3754 = load i32, i32* %3753, align 4, !tbaa !375
  %3755 = insertelement <32 x i32> %3749, i32 %3754, i32 9
  %3756 = extractelement <32 x i32> %t122238, i32 10
  %3757 = bitcast i8* %Output103 to i32*
  %3758 = sext i32 %3756 to i64
  %3759 = getelementptr inbounds i32, i32* %3757, i64 %3758
  %3760 = load i32, i32* %3759, align 4, !tbaa !375
  %3761 = insertelement <32 x i32> %3755, i32 %3760, i32 10
  %3762 = extractelement <32 x i32> %t122238, i32 11
  %3763 = bitcast i8* %Output103 to i32*
  %3764 = sext i32 %3762 to i64
  %3765 = getelementptr inbounds i32, i32* %3763, i64 %3764
  %3766 = load i32, i32* %3765, align 4, !tbaa !375
  %3767 = insertelement <32 x i32> %3761, i32 %3766, i32 11
  %3768 = extractelement <32 x i32> %t122238, i32 12
  %3769 = bitcast i8* %Output103 to i32*
  %3770 = sext i32 %3768 to i64
  %3771 = getelementptr inbounds i32, i32* %3769, i64 %3770
  %3772 = load i32, i32* %3771, align 4, !tbaa !375
  %3773 = insertelement <32 x i32> %3767, i32 %3772, i32 12
  %3774 = extractelement <32 x i32> %t122238, i32 13
  %3775 = bitcast i8* %Output103 to i32*
  %3776 = sext i32 %3774 to i64
  %3777 = getelementptr inbounds i32, i32* %3775, i64 %3776
  %3778 = load i32, i32* %3777, align 4, !tbaa !375
  %3779 = insertelement <32 x i32> %3773, i32 %3778, i32 13
  %3780 = extractelement <32 x i32> %t122238, i32 14
  %3781 = bitcast i8* %Output103 to i32*
  %3782 = sext i32 %3780 to i64
  %3783 = getelementptr inbounds i32, i32* %3781, i64 %3782
  %3784 = load i32, i32* %3783, align 4, !tbaa !375
  %3785 = insertelement <32 x i32> %3779, i32 %3784, i32 14
  %3786 = extractelement <32 x i32> %t122238, i32 15
  %3787 = bitcast i8* %Output103 to i32*
  %3788 = sext i32 %3786 to i64
  %3789 = getelementptr inbounds i32, i32* %3787, i64 %3788
  %3790 = load i32, i32* %3789, align 4, !tbaa !375
  %3791 = insertelement <32 x i32> %3785, i32 %3790, i32 15
  %3792 = extractelement <32 x i32> %t122238, i32 16
  %3793 = bitcast i8* %Output103 to i32*
  %3794 = sext i32 %3792 to i64
  %3795 = getelementptr inbounds i32, i32* %3793, i64 %3794
  %3796 = load i32, i32* %3795, align 4, !tbaa !375
  %3797 = insertelement <32 x i32> %3791, i32 %3796, i32 16
  %3798 = extractelement <32 x i32> %t122238, i32 17
  %3799 = bitcast i8* %Output103 to i32*
  %3800 = sext i32 %3798 to i64
  %3801 = getelementptr inbounds i32, i32* %3799, i64 %3800
  %3802 = load i32, i32* %3801, align 4, !tbaa !375
  %3803 = insertelement <32 x i32> %3797, i32 %3802, i32 17
  %3804 = extractelement <32 x i32> %t122238, i32 18
  %3805 = bitcast i8* %Output103 to i32*
  %3806 = sext i32 %3804 to i64
  %3807 = getelementptr inbounds i32, i32* %3805, i64 %3806
  %3808 = load i32, i32* %3807, align 4, !tbaa !375
  %3809 = insertelement <32 x i32> %3803, i32 %3808, i32 18
  %3810 = extractelement <32 x i32> %t122238, i32 19
  %3811 = bitcast i8* %Output103 to i32*
  %3812 = sext i32 %3810 to i64
  %3813 = getelementptr inbounds i32, i32* %3811, i64 %3812
  %3814 = load i32, i32* %3813, align 4, !tbaa !375
  %3815 = insertelement <32 x i32> %3809, i32 %3814, i32 19
  %3816 = extractelement <32 x i32> %t122238, i32 20
  %3817 = bitcast i8* %Output103 to i32*
  %3818 = sext i32 %3816 to i64
  %3819 = getelementptr inbounds i32, i32* %3817, i64 %3818
  %3820 = load i32, i32* %3819, align 4, !tbaa !375
  %3821 = insertelement <32 x i32> %3815, i32 %3820, i32 20
  %3822 = extractelement <32 x i32> %t122238, i32 21
  %3823 = bitcast i8* %Output103 to i32*
  %3824 = sext i32 %3822 to i64
  %3825 = getelementptr inbounds i32, i32* %3823, i64 %3824
  %3826 = load i32, i32* %3825, align 4, !tbaa !375
  %3827 = insertelement <32 x i32> %3821, i32 %3826, i32 21
  %3828 = extractelement <32 x i32> %t122238, i32 22
  %3829 = bitcast i8* %Output103 to i32*
  %3830 = sext i32 %3828 to i64
  %3831 = getelementptr inbounds i32, i32* %3829, i64 %3830
  %3832 = load i32, i32* %3831, align 4, !tbaa !375
  %3833 = insertelement <32 x i32> %3827, i32 %3832, i32 22
  %3834 = extractelement <32 x i32> %t122238, i32 23
  %3835 = bitcast i8* %Output103 to i32*
  %3836 = sext i32 %3834 to i64
  %3837 = getelementptr inbounds i32, i32* %3835, i64 %3836
  %3838 = load i32, i32* %3837, align 4, !tbaa !375
  %3839 = insertelement <32 x i32> %3833, i32 %3838, i32 23
  %3840 = extractelement <32 x i32> %t122238, i32 24
  %3841 = bitcast i8* %Output103 to i32*
  %3842 = sext i32 %3840 to i64
  %3843 = getelementptr inbounds i32, i32* %3841, i64 %3842
  %3844 = load i32, i32* %3843, align 4, !tbaa !375
  %3845 = insertelement <32 x i32> %3839, i32 %3844, i32 24
  %3846 = extractelement <32 x i32> %t122238, i32 25
  %3847 = bitcast i8* %Output103 to i32*
  %3848 = sext i32 %3846 to i64
  %3849 = getelementptr inbounds i32, i32* %3847, i64 %3848
  %3850 = load i32, i32* %3849, align 4, !tbaa !375
  %3851 = insertelement <32 x i32> %3845, i32 %3850, i32 25
  %3852 = extractelement <32 x i32> %t122238, i32 26
  %3853 = bitcast i8* %Output103 to i32*
  %3854 = sext i32 %3852 to i64
  %3855 = getelementptr inbounds i32, i32* %3853, i64 %3854
  %3856 = load i32, i32* %3855, align 4, !tbaa !375
  %3857 = insertelement <32 x i32> %3851, i32 %3856, i32 26
  %3858 = extractelement <32 x i32> %t122238, i32 27
  %3859 = bitcast i8* %Output103 to i32*
  %3860 = sext i32 %3858 to i64
  %3861 = getelementptr inbounds i32, i32* %3859, i64 %3860
  %3862 = load i32, i32* %3861, align 4, !tbaa !375
  %3863 = insertelement <32 x i32> %3857, i32 %3862, i32 27
  %3864 = extractelement <32 x i32> %t122238, i32 28
  %3865 = bitcast i8* %Output103 to i32*
  %3866 = sext i32 %3864 to i64
  %3867 = getelementptr inbounds i32, i32* %3865, i64 %3866
  %3868 = load i32, i32* %3867, align 4, !tbaa !375
  %3869 = insertelement <32 x i32> %3863, i32 %3868, i32 28
  %3870 = extractelement <32 x i32> %t122238, i32 29
  %3871 = bitcast i8* %Output103 to i32*
  %3872 = sext i32 %3870 to i64
  %3873 = getelementptr inbounds i32, i32* %3871, i64 %3872
  %3874 = load i32, i32* %3873, align 4, !tbaa !375
  %3875 = insertelement <32 x i32> %3869, i32 %3874, i32 29
  %3876 = extractelement <32 x i32> %t122238, i32 30
  %3877 = bitcast i8* %Output103 to i32*
  %3878 = sext i32 %3876 to i64
  %3879 = getelementptr inbounds i32, i32* %3877, i64 %3878
  %3880 = load i32, i32* %3879, align 4, !tbaa !375
  %3881 = insertelement <32 x i32> %3875, i32 %3880, i32 30
  %3882 = extractelement <32 x i32> %t122238, i32 31
  %3883 = bitcast i8* %Output103 to i32*
  %3884 = sext i32 %3882 to i64
  %3885 = getelementptr inbounds i32, i32* %3883, i64 %3884
  %3886 = load i32, i32* %3885, align 4, !tbaa !375
  %3887 = insertelement <32 x i32> %3881, i32 %3886, i32 31
  %3888 = sub nsw i32 %t156207, %"Output.s1.r10$x235"
  %3889 = insertelement <32 x i32> undef, i32 %3888, i32 0
  %3890 = shufflevector <32 x i32> %3889, <32 x i32> undef, <32 x i32> zeroinitializer
  %a87 = add nsw <32 x i32> %t121237, %3890
  %3891 = add nsw i32 %t157211, -1
  %3892 = insertelement <32 x i32> undef, i32 %3891, i32 0
  %b89 = shufflevector <32 x i32> %3892, <32 x i32> undef, <32 x i32> zeroinitializer
  %3893 = shufflevector <32 x i32> %b89, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3894 = shufflevector <32 x i32> %a87, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3895 = icmp sgt <16 x i32> %3893, %3894
  %3896 = shufflevector <32 x i32> %b89, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3897 = shufflevector <32 x i32> %a87, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3898 = icmp sgt <16 x i32> %3896, %3897
  %3899 = shufflevector <16 x i1> %3895, <16 x i1> %3898, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3900 = shufflevector <32 x i32> %a87, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3901 = shufflevector <32 x i32> %b89, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3902 = shufflevector <32 x i1> %3899, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3903 = select <16 x i1> %3902, <16 x i32> %3900, <16 x i32> %3901
  %3904 = shufflevector <32 x i32> %a87, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3905 = shufflevector <32 x i32> %b89, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3906 = shufflevector <32 x i1> %3899, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3907 = select <16 x i1> %3906, <16 x i32> %3904, <16 x i32> %3905
  %a86 = shufflevector <16 x i32> %3903, <16 x i32> %3907, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3908 = insertelement <32 x i32> undef, i32 %b58, i32 0
  %b88 = shufflevector <32 x i32> %3908, <32 x i32> undef, <32 x i32> zeroinitializer
  %3909 = shufflevector <32 x i32> %a86, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3910 = shufflevector <32 x i32> %b88, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3911 = icmp sgt <16 x i32> %3909, %3910
  %3912 = shufflevector <32 x i32> %a86, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3913 = shufflevector <32 x i32> %b88, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3914 = icmp sgt <16 x i32> %3912, %3913
  %3915 = shufflevector <16 x i1> %3911, <16 x i1> %3914, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3916 = shufflevector <32 x i32> %a86, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3917 = shufflevector <32 x i32> %b88, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3918 = shufflevector <32 x i1> %3915, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3919 = select <16 x i1> %3918, <16 x i32> %3916, <16 x i32> %3917
  %3920 = shufflevector <32 x i32> %a86, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3921 = shufflevector <32 x i32> %b88, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3922 = shufflevector <32 x i1> %3915, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3923 = select <16 x i1> %3922, <16 x i32> %3920, <16 x i32> %3921
  %3924 = shufflevector <16 x i32> %3919, <16 x i32> %3923, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3925 = insertelement <32 x i32> undef, i32 %t168231, i32 0
  %3926 = shufflevector <32 x i32> %3925, <32 x i32> undef, <32 x i32> zeroinitializer
  %a89 = add nsw <32 x i32> %t120236, %3926
  %3927 = add nsw i32 %t155210, -1
  %3928 = insertelement <32 x i32> undef, i32 %3927, i32 0
  %b91 = shufflevector <32 x i32> %3928, <32 x i32> undef, <32 x i32> zeroinitializer
  %3929 = shufflevector <32 x i32> %b91, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3930 = shufflevector <32 x i32> %a89, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3931 = icmp sgt <16 x i32> %3929, %3930
  %3932 = shufflevector <32 x i32> %b91, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3933 = shufflevector <32 x i32> %a89, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3934 = icmp sgt <16 x i32> %3932, %3933
  %3935 = shufflevector <16 x i1> %3931, <16 x i1> %3934, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3936 = shufflevector <32 x i32> %a89, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3937 = shufflevector <32 x i32> %b91, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3938 = shufflevector <32 x i1> %3935, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3939 = select <16 x i1> %3938, <16 x i32> %3936, <16 x i32> %3937
  %3940 = shufflevector <32 x i32> %a89, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3941 = shufflevector <32 x i32> %b91, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3942 = shufflevector <32 x i1> %3935, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3943 = select <16 x i1> %3942, <16 x i32> %3940, <16 x i32> %3941
  %a88 = shufflevector <16 x i32> %3939, <16 x i32> %3943, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3944 = insertelement <32 x i32> undef, i32 %b64, i32 0
  %b90 = shufflevector <32 x i32> %3944, <32 x i32> undef, <32 x i32> zeroinitializer
  %3945 = shufflevector <32 x i32> %a88, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3946 = shufflevector <32 x i32> %b90, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3947 = icmp sgt <16 x i32> %3945, %3946
  %3948 = shufflevector <32 x i32> %a88, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3949 = shufflevector <32 x i32> %b90, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3950 = icmp sgt <16 x i32> %3948, %3949
  %3951 = shufflevector <16 x i1> %3947, <16 x i1> %3950, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3952 = shufflevector <32 x i32> %a88, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3953 = shufflevector <32 x i32> %b90, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3954 = shufflevector <32 x i1> %3951, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3955 = select <16 x i1> %3954, <16 x i32> %3952, <16 x i32> %3953
  %3956 = shufflevector <32 x i32> %a88, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3957 = shufflevector <32 x i32> %b90, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3958 = shufflevector <32 x i1> %3951, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3959 = select <16 x i1> %3958, <16 x i32> %3956, <16 x i32> %3957
  %3960 = shufflevector <16 x i32> %3955, <16 x i32> %3959, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3961 = insertelement <32 x i32> undef, i32 %IMG.stride.1101, i32 0
  %3962 = shufflevector <32 x i32> %3961, <32 x i32> undef, <32 x i32> zeroinitializer
  %3963 = mul nsw <32 x i32> %3960, %3962
  %3964 = insertelement <32 x i32> undef, i32 %t167227, i32 0
  %3965 = shufflevector <32 x i32> %3964, <32 x i32> undef, <32 x i32> zeroinitializer
  %3966 = add nsw <32 x i32> %3963, %3965
  %3967 = add nsw <32 x i32> %3924, %3966
  %3968 = extractelement <32 x i32> %3967, i32 0
  %3969 = bitcast i8* %IMG94 to i32*
  %3970 = sext i32 %3968 to i64
  %3971 = getelementptr inbounds i32, i32* %3969, i64 %3970
  %3972 = load i32, i32* %3971, align 4, !tbaa !378
  %3973 = insertelement <32 x i32> undef, i32 %3972, i32 0
  %3974 = extractelement <32 x i32> %3967, i32 1
  %3975 = bitcast i8* %IMG94 to i32*
  %3976 = sext i32 %3974 to i64
  %3977 = getelementptr inbounds i32, i32* %3975, i64 %3976
  %3978 = load i32, i32* %3977, align 4, !tbaa !378
  %3979 = insertelement <32 x i32> %3973, i32 %3978, i32 1
  %3980 = extractelement <32 x i32> %3967, i32 2
  %3981 = bitcast i8* %IMG94 to i32*
  %3982 = sext i32 %3980 to i64
  %3983 = getelementptr inbounds i32, i32* %3981, i64 %3982
  %3984 = load i32, i32* %3983, align 4, !tbaa !378
  %3985 = insertelement <32 x i32> %3979, i32 %3984, i32 2
  %3986 = extractelement <32 x i32> %3967, i32 3
  %3987 = bitcast i8* %IMG94 to i32*
  %3988 = sext i32 %3986 to i64
  %3989 = getelementptr inbounds i32, i32* %3987, i64 %3988
  %3990 = load i32, i32* %3989, align 4, !tbaa !378
  %3991 = insertelement <32 x i32> %3985, i32 %3990, i32 3
  %3992 = extractelement <32 x i32> %3967, i32 4
  %3993 = bitcast i8* %IMG94 to i32*
  %3994 = sext i32 %3992 to i64
  %3995 = getelementptr inbounds i32, i32* %3993, i64 %3994
  %3996 = load i32, i32* %3995, align 4, !tbaa !378
  %3997 = insertelement <32 x i32> %3991, i32 %3996, i32 4
  %3998 = extractelement <32 x i32> %3967, i32 5
  %3999 = bitcast i8* %IMG94 to i32*
  %4000 = sext i32 %3998 to i64
  %4001 = getelementptr inbounds i32, i32* %3999, i64 %4000
  %4002 = load i32, i32* %4001, align 4, !tbaa !378
  %4003 = insertelement <32 x i32> %3997, i32 %4002, i32 5
  %4004 = extractelement <32 x i32> %3967, i32 6
  %4005 = bitcast i8* %IMG94 to i32*
  %4006 = sext i32 %4004 to i64
  %4007 = getelementptr inbounds i32, i32* %4005, i64 %4006
  %4008 = load i32, i32* %4007, align 4, !tbaa !378
  %4009 = insertelement <32 x i32> %4003, i32 %4008, i32 6
  %4010 = extractelement <32 x i32> %3967, i32 7
  %4011 = bitcast i8* %IMG94 to i32*
  %4012 = sext i32 %4010 to i64
  %4013 = getelementptr inbounds i32, i32* %4011, i64 %4012
  %4014 = load i32, i32* %4013, align 4, !tbaa !378
  %4015 = insertelement <32 x i32> %4009, i32 %4014, i32 7
  %4016 = extractelement <32 x i32> %3967, i32 8
  %4017 = bitcast i8* %IMG94 to i32*
  %4018 = sext i32 %4016 to i64
  %4019 = getelementptr inbounds i32, i32* %4017, i64 %4018
  %4020 = load i32, i32* %4019, align 4, !tbaa !378
  %4021 = insertelement <32 x i32> %4015, i32 %4020, i32 8
  %4022 = extractelement <32 x i32> %3967, i32 9
  %4023 = bitcast i8* %IMG94 to i32*
  %4024 = sext i32 %4022 to i64
  %4025 = getelementptr inbounds i32, i32* %4023, i64 %4024
  %4026 = load i32, i32* %4025, align 4, !tbaa !378
  %4027 = insertelement <32 x i32> %4021, i32 %4026, i32 9
  %4028 = extractelement <32 x i32> %3967, i32 10
  %4029 = bitcast i8* %IMG94 to i32*
  %4030 = sext i32 %4028 to i64
  %4031 = getelementptr inbounds i32, i32* %4029, i64 %4030
  %4032 = load i32, i32* %4031, align 4, !tbaa !378
  %4033 = insertelement <32 x i32> %4027, i32 %4032, i32 10
  %4034 = extractelement <32 x i32> %3967, i32 11
  %4035 = bitcast i8* %IMG94 to i32*
  %4036 = sext i32 %4034 to i64
  %4037 = getelementptr inbounds i32, i32* %4035, i64 %4036
  %4038 = load i32, i32* %4037, align 4, !tbaa !378
  %4039 = insertelement <32 x i32> %4033, i32 %4038, i32 11
  %4040 = extractelement <32 x i32> %3967, i32 12
  %4041 = bitcast i8* %IMG94 to i32*
  %4042 = sext i32 %4040 to i64
  %4043 = getelementptr inbounds i32, i32* %4041, i64 %4042
  %4044 = load i32, i32* %4043, align 4, !tbaa !378
  %4045 = insertelement <32 x i32> %4039, i32 %4044, i32 12
  %4046 = extractelement <32 x i32> %3967, i32 13
  %4047 = bitcast i8* %IMG94 to i32*
  %4048 = sext i32 %4046 to i64
  %4049 = getelementptr inbounds i32, i32* %4047, i64 %4048
  %4050 = load i32, i32* %4049, align 4, !tbaa !378
  %4051 = insertelement <32 x i32> %4045, i32 %4050, i32 13
  %4052 = extractelement <32 x i32> %3967, i32 14
  %4053 = bitcast i8* %IMG94 to i32*
  %4054 = sext i32 %4052 to i64
  %4055 = getelementptr inbounds i32, i32* %4053, i64 %4054
  %4056 = load i32, i32* %4055, align 4, !tbaa !378
  %4057 = insertelement <32 x i32> %4051, i32 %4056, i32 14
  %4058 = extractelement <32 x i32> %3967, i32 15
  %4059 = bitcast i8* %IMG94 to i32*
  %4060 = sext i32 %4058 to i64
  %4061 = getelementptr inbounds i32, i32* %4059, i64 %4060
  %4062 = load i32, i32* %4061, align 4, !tbaa !378
  %4063 = insertelement <32 x i32> %4057, i32 %4062, i32 15
  %4064 = extractelement <32 x i32> %3967, i32 16
  %4065 = bitcast i8* %IMG94 to i32*
  %4066 = sext i32 %4064 to i64
  %4067 = getelementptr inbounds i32, i32* %4065, i64 %4066
  %4068 = load i32, i32* %4067, align 4, !tbaa !378
  %4069 = insertelement <32 x i32> %4063, i32 %4068, i32 16
  %4070 = extractelement <32 x i32> %3967, i32 17
  %4071 = bitcast i8* %IMG94 to i32*
  %4072 = sext i32 %4070 to i64
  %4073 = getelementptr inbounds i32, i32* %4071, i64 %4072
  %4074 = load i32, i32* %4073, align 4, !tbaa !378
  %4075 = insertelement <32 x i32> %4069, i32 %4074, i32 17
  %4076 = extractelement <32 x i32> %3967, i32 18
  %4077 = bitcast i8* %IMG94 to i32*
  %4078 = sext i32 %4076 to i64
  %4079 = getelementptr inbounds i32, i32* %4077, i64 %4078
  %4080 = load i32, i32* %4079, align 4, !tbaa !378
  %4081 = insertelement <32 x i32> %4075, i32 %4080, i32 18
  %4082 = extractelement <32 x i32> %3967, i32 19
  %4083 = bitcast i8* %IMG94 to i32*
  %4084 = sext i32 %4082 to i64
  %4085 = getelementptr inbounds i32, i32* %4083, i64 %4084
  %4086 = load i32, i32* %4085, align 4, !tbaa !378
  %4087 = insertelement <32 x i32> %4081, i32 %4086, i32 19
  %4088 = extractelement <32 x i32> %3967, i32 20
  %4089 = bitcast i8* %IMG94 to i32*
  %4090 = sext i32 %4088 to i64
  %4091 = getelementptr inbounds i32, i32* %4089, i64 %4090
  %4092 = load i32, i32* %4091, align 4, !tbaa !378
  %4093 = insertelement <32 x i32> %4087, i32 %4092, i32 20
  %4094 = extractelement <32 x i32> %3967, i32 21
  %4095 = bitcast i8* %IMG94 to i32*
  %4096 = sext i32 %4094 to i64
  %4097 = getelementptr inbounds i32, i32* %4095, i64 %4096
  %4098 = load i32, i32* %4097, align 4, !tbaa !378
  %4099 = insertelement <32 x i32> %4093, i32 %4098, i32 21
  %4100 = extractelement <32 x i32> %3967, i32 22
  %4101 = bitcast i8* %IMG94 to i32*
  %4102 = sext i32 %4100 to i64
  %4103 = getelementptr inbounds i32, i32* %4101, i64 %4102
  %4104 = load i32, i32* %4103, align 4, !tbaa !378
  %4105 = insertelement <32 x i32> %4099, i32 %4104, i32 22
  %4106 = extractelement <32 x i32> %3967, i32 23
  %4107 = bitcast i8* %IMG94 to i32*
  %4108 = sext i32 %4106 to i64
  %4109 = getelementptr inbounds i32, i32* %4107, i64 %4108
  %4110 = load i32, i32* %4109, align 4, !tbaa !378
  %4111 = insertelement <32 x i32> %4105, i32 %4110, i32 23
  %4112 = extractelement <32 x i32> %3967, i32 24
  %4113 = bitcast i8* %IMG94 to i32*
  %4114 = sext i32 %4112 to i64
  %4115 = getelementptr inbounds i32, i32* %4113, i64 %4114
  %4116 = load i32, i32* %4115, align 4, !tbaa !378
  %4117 = insertelement <32 x i32> %4111, i32 %4116, i32 24
  %4118 = extractelement <32 x i32> %3967, i32 25
  %4119 = bitcast i8* %IMG94 to i32*
  %4120 = sext i32 %4118 to i64
  %4121 = getelementptr inbounds i32, i32* %4119, i64 %4120
  %4122 = load i32, i32* %4121, align 4, !tbaa !378
  %4123 = insertelement <32 x i32> %4117, i32 %4122, i32 25
  %4124 = extractelement <32 x i32> %3967, i32 26
  %4125 = bitcast i8* %IMG94 to i32*
  %4126 = sext i32 %4124 to i64
  %4127 = getelementptr inbounds i32, i32* %4125, i64 %4126
  %4128 = load i32, i32* %4127, align 4, !tbaa !378
  %4129 = insertelement <32 x i32> %4123, i32 %4128, i32 26
  %4130 = extractelement <32 x i32> %3967, i32 27
  %4131 = bitcast i8* %IMG94 to i32*
  %4132 = sext i32 %4130 to i64
  %4133 = getelementptr inbounds i32, i32* %4131, i64 %4132
  %4134 = load i32, i32* %4133, align 4, !tbaa !378
  %4135 = insertelement <32 x i32> %4129, i32 %4134, i32 27
  %4136 = extractelement <32 x i32> %3967, i32 28
  %4137 = bitcast i8* %IMG94 to i32*
  %4138 = sext i32 %4136 to i64
  %4139 = getelementptr inbounds i32, i32* %4137, i64 %4138
  %4140 = load i32, i32* %4139, align 4, !tbaa !378
  %4141 = insertelement <32 x i32> %4135, i32 %4140, i32 28
  %4142 = extractelement <32 x i32> %3967, i32 29
  %4143 = bitcast i8* %IMG94 to i32*
  %4144 = sext i32 %4142 to i64
  %4145 = getelementptr inbounds i32, i32* %4143, i64 %4144
  %4146 = load i32, i32* %4145, align 4, !tbaa !378
  %4147 = insertelement <32 x i32> %4141, i32 %4146, i32 29
  %4148 = extractelement <32 x i32> %3967, i32 30
  %4149 = bitcast i8* %IMG94 to i32*
  %4150 = sext i32 %4148 to i64
  %4151 = getelementptr inbounds i32, i32* %4149, i64 %4150
  %4152 = load i32, i32* %4151, align 4, !tbaa !378
  %4153 = insertelement <32 x i32> %4147, i32 %4152, i32 30
  %4154 = extractelement <32 x i32> %3967, i32 31
  %4155 = bitcast i8* %IMG94 to i32*
  %4156 = sext i32 %4154 to i64
  %4157 = getelementptr inbounds i32, i32* %4155, i64 %4156
  %4158 = load i32, i32* %4157, align 4, !tbaa !378
  %4159 = insertelement <32 x i32> %4153, i32 %4158, i32 31
  %4160 = sext i32 %"Output.s1.r10$x235" to i64
  %4161 = sext i32 %t169232 to i64
  %4162 = add nsw i64 %4160, %4161
  %4163 = bitcast i8* %Filter81 to i32*
  %4164 = getelementptr inbounds i32, i32* %4163, i64 %4162
  %4165 = load i32, i32* %4164, align 4, !tbaa !380
  %4166 = call <32 x i32> bitcast (<32 x i32> (<32 x i32>, <32 x i32>, <1 x i32>)* @hydride.node.convolution_bitserial_depth2_rafae.1 to <32 x i32> (<32 x i32>, <32 x i32>, i32)*)(<32 x i32> %3887, <32 x i32> %4159, i32 %4165) #18
  %4167 = extractelement <32 x i32> %t122238, i32 0
  %4168 = extractelement <32 x i32> %4166, i32 0
  %4169 = bitcast i8* %Output103 to i32*
  %4170 = sext i32 %4167 to i64
  %4171 = getelementptr inbounds i32, i32* %4169, i64 %4170
  store i32 %4168, i32* %4171, align 4, !tbaa !375
  %4172 = extractelement <32 x i32> %t122238, i32 1
  %4173 = extractelement <32 x i32> %4166, i32 1
  %4174 = bitcast i8* %Output103 to i32*
  %4175 = sext i32 %4172 to i64
  %4176 = getelementptr inbounds i32, i32* %4174, i64 %4175
  store i32 %4173, i32* %4176, align 4, !tbaa !375
  %4177 = extractelement <32 x i32> %t122238, i32 2
  %4178 = extractelement <32 x i32> %4166, i32 2
  %4179 = bitcast i8* %Output103 to i32*
  %4180 = sext i32 %4177 to i64
  %4181 = getelementptr inbounds i32, i32* %4179, i64 %4180
  store i32 %4178, i32* %4181, align 4, !tbaa !375
  %4182 = extractelement <32 x i32> %t122238, i32 3
  %4183 = extractelement <32 x i32> %4166, i32 3
  %4184 = bitcast i8* %Output103 to i32*
  %4185 = sext i32 %4182 to i64
  %4186 = getelementptr inbounds i32, i32* %4184, i64 %4185
  store i32 %4183, i32* %4186, align 4, !tbaa !375
  %4187 = extractelement <32 x i32> %t122238, i32 4
  %4188 = extractelement <32 x i32> %4166, i32 4
  %4189 = bitcast i8* %Output103 to i32*
  %4190 = sext i32 %4187 to i64
  %4191 = getelementptr inbounds i32, i32* %4189, i64 %4190
  store i32 %4188, i32* %4191, align 4, !tbaa !375
  %4192 = extractelement <32 x i32> %t122238, i32 5
  %4193 = extractelement <32 x i32> %4166, i32 5
  %4194 = bitcast i8* %Output103 to i32*
  %4195 = sext i32 %4192 to i64
  %4196 = getelementptr inbounds i32, i32* %4194, i64 %4195
  store i32 %4193, i32* %4196, align 4, !tbaa !375
  %4197 = extractelement <32 x i32> %t122238, i32 6
  %4198 = extractelement <32 x i32> %4166, i32 6
  %4199 = bitcast i8* %Output103 to i32*
  %4200 = sext i32 %4197 to i64
  %4201 = getelementptr inbounds i32, i32* %4199, i64 %4200
  store i32 %4198, i32* %4201, align 4, !tbaa !375
  %4202 = extractelement <32 x i32> %t122238, i32 7
  %4203 = extractelement <32 x i32> %4166, i32 7
  %4204 = bitcast i8* %Output103 to i32*
  %4205 = sext i32 %4202 to i64
  %4206 = getelementptr inbounds i32, i32* %4204, i64 %4205
  store i32 %4203, i32* %4206, align 4, !tbaa !375
  %4207 = extractelement <32 x i32> %t122238, i32 8
  %4208 = extractelement <32 x i32> %4166, i32 8
  %4209 = bitcast i8* %Output103 to i32*
  %4210 = sext i32 %4207 to i64
  %4211 = getelementptr inbounds i32, i32* %4209, i64 %4210
  store i32 %4208, i32* %4211, align 4, !tbaa !375
  %4212 = extractelement <32 x i32> %t122238, i32 9
  %4213 = extractelement <32 x i32> %4166, i32 9
  %4214 = bitcast i8* %Output103 to i32*
  %4215 = sext i32 %4212 to i64
  %4216 = getelementptr inbounds i32, i32* %4214, i64 %4215
  store i32 %4213, i32* %4216, align 4, !tbaa !375
  %4217 = extractelement <32 x i32> %t122238, i32 10
  %4218 = extractelement <32 x i32> %4166, i32 10
  %4219 = bitcast i8* %Output103 to i32*
  %4220 = sext i32 %4217 to i64
  %4221 = getelementptr inbounds i32, i32* %4219, i64 %4220
  store i32 %4218, i32* %4221, align 4, !tbaa !375
  %4222 = extractelement <32 x i32> %t122238, i32 11
  %4223 = extractelement <32 x i32> %4166, i32 11
  %4224 = bitcast i8* %Output103 to i32*
  %4225 = sext i32 %4222 to i64
  %4226 = getelementptr inbounds i32, i32* %4224, i64 %4225
  store i32 %4223, i32* %4226, align 4, !tbaa !375
  %4227 = extractelement <32 x i32> %t122238, i32 12
  %4228 = extractelement <32 x i32> %4166, i32 12
  %4229 = bitcast i8* %Output103 to i32*
  %4230 = sext i32 %4227 to i64
  %4231 = getelementptr inbounds i32, i32* %4229, i64 %4230
  store i32 %4228, i32* %4231, align 4, !tbaa !375
  %4232 = extractelement <32 x i32> %t122238, i32 13
  %4233 = extractelement <32 x i32> %4166, i32 13
  %4234 = bitcast i8* %Output103 to i32*
  %4235 = sext i32 %4232 to i64
  %4236 = getelementptr inbounds i32, i32* %4234, i64 %4235
  store i32 %4233, i32* %4236, align 4, !tbaa !375
  %4237 = extractelement <32 x i32> %t122238, i32 14
  %4238 = extractelement <32 x i32> %4166, i32 14
  %4239 = bitcast i8* %Output103 to i32*
  %4240 = sext i32 %4237 to i64
  %4241 = getelementptr inbounds i32, i32* %4239, i64 %4240
  store i32 %4238, i32* %4241, align 4, !tbaa !375
  %4242 = extractelement <32 x i32> %t122238, i32 15
  %4243 = extractelement <32 x i32> %4166, i32 15
  %4244 = bitcast i8* %Output103 to i32*
  %4245 = sext i32 %4242 to i64
  %4246 = getelementptr inbounds i32, i32* %4244, i64 %4245
  store i32 %4243, i32* %4246, align 4, !tbaa !375
  %4247 = extractelement <32 x i32> %t122238, i32 16
  %4248 = extractelement <32 x i32> %4166, i32 16
  %4249 = bitcast i8* %Output103 to i32*
  %4250 = sext i32 %4247 to i64
  %4251 = getelementptr inbounds i32, i32* %4249, i64 %4250
  store i32 %4248, i32* %4251, align 4, !tbaa !375
  %4252 = extractelement <32 x i32> %t122238, i32 17
  %4253 = extractelement <32 x i32> %4166, i32 17
  %4254 = bitcast i8* %Output103 to i32*
  %4255 = sext i32 %4252 to i64
  %4256 = getelementptr inbounds i32, i32* %4254, i64 %4255
  store i32 %4253, i32* %4256, align 4, !tbaa !375
  %4257 = extractelement <32 x i32> %t122238, i32 18
  %4258 = extractelement <32 x i32> %4166, i32 18
  %4259 = bitcast i8* %Output103 to i32*
  %4260 = sext i32 %4257 to i64
  %4261 = getelementptr inbounds i32, i32* %4259, i64 %4260
  store i32 %4258, i32* %4261, align 4, !tbaa !375
  %4262 = extractelement <32 x i32> %t122238, i32 19
  %4263 = extractelement <32 x i32> %4166, i32 19
  %4264 = bitcast i8* %Output103 to i32*
  %4265 = sext i32 %4262 to i64
  %4266 = getelementptr inbounds i32, i32* %4264, i64 %4265
  store i32 %4263, i32* %4266, align 4, !tbaa !375
  %4267 = extractelement <32 x i32> %t122238, i32 20
  %4268 = extractelement <32 x i32> %4166, i32 20
  %4269 = bitcast i8* %Output103 to i32*
  %4270 = sext i32 %4267 to i64
  %4271 = getelementptr inbounds i32, i32* %4269, i64 %4270
  store i32 %4268, i32* %4271, align 4, !tbaa !375
  %4272 = extractelement <32 x i32> %t122238, i32 21
  %4273 = extractelement <32 x i32> %4166, i32 21
  %4274 = bitcast i8* %Output103 to i32*
  %4275 = sext i32 %4272 to i64
  %4276 = getelementptr inbounds i32, i32* %4274, i64 %4275
  store i32 %4273, i32* %4276, align 4, !tbaa !375
  %4277 = extractelement <32 x i32> %t122238, i32 22
  %4278 = extractelement <32 x i32> %4166, i32 22
  %4279 = bitcast i8* %Output103 to i32*
  %4280 = sext i32 %4277 to i64
  %4281 = getelementptr inbounds i32, i32* %4279, i64 %4280
  store i32 %4278, i32* %4281, align 4, !tbaa !375
  %4282 = extractelement <32 x i32> %t122238, i32 23
  %4283 = extractelement <32 x i32> %4166, i32 23
  %4284 = bitcast i8* %Output103 to i32*
  %4285 = sext i32 %4282 to i64
  %4286 = getelementptr inbounds i32, i32* %4284, i64 %4285
  store i32 %4283, i32* %4286, align 4, !tbaa !375
  %4287 = extractelement <32 x i32> %t122238, i32 24
  %4288 = extractelement <32 x i32> %4166, i32 24
  %4289 = bitcast i8* %Output103 to i32*
  %4290 = sext i32 %4287 to i64
  %4291 = getelementptr inbounds i32, i32* %4289, i64 %4290
  store i32 %4288, i32* %4291, align 4, !tbaa !375
  %4292 = extractelement <32 x i32> %t122238, i32 25
  %4293 = extractelement <32 x i32> %4166, i32 25
  %4294 = bitcast i8* %Output103 to i32*
  %4295 = sext i32 %4292 to i64
  %4296 = getelementptr inbounds i32, i32* %4294, i64 %4295
  store i32 %4293, i32* %4296, align 4, !tbaa !375
  %4297 = extractelement <32 x i32> %t122238, i32 26
  %4298 = extractelement <32 x i32> %4166, i32 26
  %4299 = bitcast i8* %Output103 to i32*
  %4300 = sext i32 %4297 to i64
  %4301 = getelementptr inbounds i32, i32* %4299, i64 %4300
  store i32 %4298, i32* %4301, align 4, !tbaa !375
  %4302 = extractelement <32 x i32> %t122238, i32 27
  %4303 = extractelement <32 x i32> %4166, i32 27
  %4304 = bitcast i8* %Output103 to i32*
  %4305 = sext i32 %4302 to i64
  %4306 = getelementptr inbounds i32, i32* %4304, i64 %4305
  store i32 %4303, i32* %4306, align 4, !tbaa !375
  %4307 = extractelement <32 x i32> %t122238, i32 28
  %4308 = extractelement <32 x i32> %4166, i32 28
  %4309 = bitcast i8* %Output103 to i32*
  %4310 = sext i32 %4307 to i64
  %4311 = getelementptr inbounds i32, i32* %4309, i64 %4310
  store i32 %4308, i32* %4311, align 4, !tbaa !375
  %4312 = extractelement <32 x i32> %t122238, i32 29
  %4313 = extractelement <32 x i32> %4166, i32 29
  %4314 = bitcast i8* %Output103 to i32*
  %4315 = sext i32 %4312 to i64
  %4316 = getelementptr inbounds i32, i32* %4314, i64 %4315
  store i32 %4313, i32* %4316, align 4, !tbaa !375
  %4317 = extractelement <32 x i32> %t122238, i32 30
  %4318 = extractelement <32 x i32> %4166, i32 30
  %4319 = bitcast i8* %Output103 to i32*
  %4320 = sext i32 %4317 to i64
  %4321 = getelementptr inbounds i32, i32* %4319, i64 %4320
  store i32 %4318, i32* %4321, align 4, !tbaa !375
  %4322 = extractelement <32 x i32> %t122238, i32 31
  %4323 = extractelement <32 x i32> %4166, i32 31
  %4324 = bitcast i8* %Output103 to i32*
  %4325 = sext i32 %4322 to i64
  %4326 = getelementptr inbounds i32, i32* %4324, i64 %4325
  store i32 %4323, i32* %4326, align 4, !tbaa !375
  %4327 = add nsw i32 %"Output.s1.r10$x235", 1
  %4328 = icmp ne i32 %4327, %3632
  br i1 %4328, label %"for Output.s1.r10$x233", label %"end for Output.s1.r10$x234"

"end for Output.s1.r10$x234":                     ; preds = %"for Output.s1.r10$x233", %"for Output.s1.r10$y228"
  %4329 = add nsw i32 %"Output.s1.r10$y230", 1
  %4330 = icmp ne i32 %4329, %3627
  br i1 %4330, label %"for Output.s1.r10$y228", label %"end for Output.s1.r10$y229"

"for Output.s1.r10$z.rebased241":                 ; preds = %"end for Output.s1.r10$y246", %"end for Output.s1.r10$z225"
  %"Output.s1.r10$z.rebased243" = phi i32 [ 0, %"end for Output.s1.r10$z225" ], [ %4340, %"end for Output.s1.r10$y246" ]
  %4331 = add nsw i32 %"Output.s1.r10$z.rebased243", %t171240
  %4332 = mul nsw i32 %4331, %IMG.stride.2102
  %t172244 = sub nsw i32 %4332, %t153209
  %4333 = add nsw i32 0, %Filter.extent.189
  %4334 = icmp slt i32 0, %4333
  br i1 %4334, label %"for Output.s1.r10$y245", label %"end for Output.s1.r10$y246", !prof !372

"end for Output.s1.r10$z.rebased242":             ; preds = %"end for Output.s1.r10$y246", %"end for Output.s1.r10$z225"
  %t175256 = mul nsw i32 %Output.s1.x.x.x222, 32
  %4335 = add nsw i32 0, %t164219
  %4336 = icmp slt i32 0, %4335
  br i1 %4336, label %"for Output.s1.r10$z.rebased257", label %"end for Output.s1.r10$z.rebased258", !prof !372

"for Output.s1.r10$y245":                         ; preds = %"end for Output.s1.r10$x251", %"for Output.s1.r10$z.rebased241"
  %"Output.s1.r10$y247" = phi i32 [ 0, %"for Output.s1.r10$z.rebased241" ], [ %5035, %"end for Output.s1.r10$x251" ]
  %t173248 = sub nsw i32 %t154206, %"Output.s1.r10$y247"
  %4337 = mul nsw i32 %Filter.stride.190, %"Output.s1.r10$y247"
  %t174249 = add nsw i32 %4337, %t161215
  %4338 = add nsw i32 0, %Filter.extent.086
  %4339 = icmp slt i32 0, %4338
  br i1 %4339, label %"for Output.s1.r10$x250", label %"end for Output.s1.r10$x251", !prof !372

"end for Output.s1.r10$y246":                     ; preds = %"end for Output.s1.r10$x251", %"for Output.s1.r10$z.rebased241"
  %4340 = add nsw i32 %"Output.s1.r10$z.rebased243", 1
  %4341 = icmp ne i32 %4340, %3629
  br i1 %4341, label %"for Output.s1.r10$z.rebased241", label %"end for Output.s1.r10$z.rebased242"

"for Output.s1.r10$x250":                         ; preds = %"for Output.s1.r10$x250", %"for Output.s1.r10$y245"
  %"Output.s1.r10$x252" = phi i32 [ 0, %"for Output.s1.r10$y245" ], [ %5033, %"for Output.s1.r10$x250" ]
  %4342 = insertelement <32 x i32> undef, i32 %t170239, i32 0
  %4343 = shufflevector <32 x i32> %4342, <32 x i32> undef, <32 x i32> zeroinitializer
  %4344 = add nsw <32 x i32> %4343, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4345 = shufflevector <32 x i32> %4344, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4346 = icmp sgt <16 x i32> zeroinitializer, %4345
  %4347 = shufflevector <32 x i32> %4344, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4348 = icmp sgt <16 x i32> zeroinitializer, %4347
  %4349 = shufflevector <16 x i1> %4346, <16 x i1> %4348, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4350 = shufflevector <32 x i1> %4349, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4351 = select <16 x i1> %4350, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %4352 = shufflevector <32 x i1> %4349, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4353 = select <16 x i1> %4352, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %t251 = shufflevector <16 x i32> %4351, <16 x i32> %4353, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4354 = icmp eq i32 %b72, 0
  %t252 = select i1 %4354, <32 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <32 x i32> zeroinitializer
  %4355 = icmp sgt i32 0, %b72
  %t253.s = select i1 %4355, i32 -1, i32 0
  %4356 = insertelement <32 x i32> undef, i32 %t170239, i32 0
  %4357 = shufflevector <32 x i32> %4356, <32 x i32> undef, <32 x i32> zeroinitializer
  %4358 = add nsw <32 x i32> %4357, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4359 = sub nsw <32 x i32> %4358, %t251
  %4360 = insertelement <32 x i32> undef, i32 %b72, i32 0
  %4361 = shufflevector <32 x i32> %4360, <32 x i32> undef, <32 x i32> zeroinitializer
  %4362 = sub nsw <32 x i32> %4361, %t252
  %4363 = sdiv <32 x i32> %4359, %4362
  %4364 = xor i32 %t253.s, -1
  %4365 = sub nsw i32 %4364, %t253.s
  %4366 = insertelement <32 x i32> undef, i32 %4365, i32 0
  %4367 = shufflevector <32 x i32> %4366, <32 x i32> undef, <32 x i32> zeroinitializer
  %4368 = and <32 x i32> %t251, %4367
  %4369 = add nsw <32 x i32> %4363, %4368
  %4370 = xor <32 x i32> %t252, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %t123253 = and <32 x i32> %4369, %4370
  %4371 = insertelement <32 x i32> undef, i32 %t170239, i32 0
  %4372 = shufflevector <32 x i32> %4371, <32 x i32> undef, <32 x i32> zeroinitializer
  %4373 = add nsw <32 x i32> %4372, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4374 = shufflevector <32 x i32> %4373, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4375 = icmp sgt <16 x i32> zeroinitializer, %4374
  %4376 = shufflevector <32 x i32> %4373, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4377 = icmp sgt <16 x i32> zeroinitializer, %4376
  %4378 = shufflevector <16 x i1> %4375, <16 x i1> %4377, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4379 = shufflevector <32 x i1> %4378, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4380 = select <16 x i1> %4379, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %4381 = shufflevector <32 x i1> %4378, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4382 = select <16 x i1> %4381, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %t254 = shufflevector <16 x i32> %4380, <16 x i32> %4382, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4383 = icmp eq i32 %b72, 0
  %t255 = select i1 %4383, <32 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <32 x i32> zeroinitializer
  %4384 = icmp sgt i32 0, %b72
  %t256.s = select i1 %4384, i32 -1, i32 0
  %4385 = insertelement <32 x i32> undef, i32 %t170239, i32 0
  %4386 = shufflevector <32 x i32> %4385, <32 x i32> undef, <32 x i32> zeroinitializer
  %4387 = add nsw <32 x i32> %4386, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4388 = sub nsw <32 x i32> %4387, %t254
  %4389 = insertelement <32 x i32> undef, i32 %b72, i32 0
  %4390 = shufflevector <32 x i32> %4389, <32 x i32> undef, <32 x i32> zeroinitializer
  %4391 = or <32 x i32> %4390, %t255
  %4392 = srem <32 x i32> %4388, %4391
  %4393 = xor i32 %b72, %t256.s
  %4394 = xor i32 %t256.s, -1
  %4395 = add nsw i32 %4393, %4394
  %4396 = insertelement <32 x i32> undef, i32 %4395, i32 0
  %4397 = shufflevector <32 x i32> %4396, <32 x i32> undef, <32 x i32> zeroinitializer
  %4398 = and <32 x i32> %t254, %4397
  %4399 = add nsw <32 x i32> %4392, %4398
  %4400 = xor <32 x i32> %t255, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %t124254 = and <32 x i32> %4399, %4400
  %4401 = add nsw i32 %Output.min.0107, %t160216
  %t125255 = call <32 x i32> bitcast (<32 x i32> (<32 x i32>, <1 x i32>, <1 x i32>, <1 x i32>, <32 x i32>)* @hydride.node.convolution_bitserial_depth2_rafae.2 to <32 x i32> (<32 x i32>, i32, i32, i32, <32 x i32>)*)(<32 x i32> %t123253, i32 %Output.min.1109, i32 %Output.stride.1111, i32 %4401, <32 x i32> %t124254) #18
  %4402 = extractelement <32 x i32> %t125255, i32 0
  %4403 = bitcast i8* %Output103 to i32*
  %4404 = sext i32 %4402 to i64
  %4405 = getelementptr inbounds i32, i32* %4403, i64 %4404
  %4406 = load i32, i32* %4405, align 4, !tbaa !375
  %4407 = insertelement <32 x i32> undef, i32 %4406, i32 0
  %4408 = extractelement <32 x i32> %t125255, i32 1
  %4409 = bitcast i8* %Output103 to i32*
  %4410 = sext i32 %4408 to i64
  %4411 = getelementptr inbounds i32, i32* %4409, i64 %4410
  %4412 = load i32, i32* %4411, align 4, !tbaa !375
  %4413 = insertelement <32 x i32> %4407, i32 %4412, i32 1
  %4414 = extractelement <32 x i32> %t125255, i32 2
  %4415 = bitcast i8* %Output103 to i32*
  %4416 = sext i32 %4414 to i64
  %4417 = getelementptr inbounds i32, i32* %4415, i64 %4416
  %4418 = load i32, i32* %4417, align 4, !tbaa !375
  %4419 = insertelement <32 x i32> %4413, i32 %4418, i32 2
  %4420 = extractelement <32 x i32> %t125255, i32 3
  %4421 = bitcast i8* %Output103 to i32*
  %4422 = sext i32 %4420 to i64
  %4423 = getelementptr inbounds i32, i32* %4421, i64 %4422
  %4424 = load i32, i32* %4423, align 4, !tbaa !375
  %4425 = insertelement <32 x i32> %4419, i32 %4424, i32 3
  %4426 = extractelement <32 x i32> %t125255, i32 4
  %4427 = bitcast i8* %Output103 to i32*
  %4428 = sext i32 %4426 to i64
  %4429 = getelementptr inbounds i32, i32* %4427, i64 %4428
  %4430 = load i32, i32* %4429, align 4, !tbaa !375
  %4431 = insertelement <32 x i32> %4425, i32 %4430, i32 4
  %4432 = extractelement <32 x i32> %t125255, i32 5
  %4433 = bitcast i8* %Output103 to i32*
  %4434 = sext i32 %4432 to i64
  %4435 = getelementptr inbounds i32, i32* %4433, i64 %4434
  %4436 = load i32, i32* %4435, align 4, !tbaa !375
  %4437 = insertelement <32 x i32> %4431, i32 %4436, i32 5
  %4438 = extractelement <32 x i32> %t125255, i32 6
  %4439 = bitcast i8* %Output103 to i32*
  %4440 = sext i32 %4438 to i64
  %4441 = getelementptr inbounds i32, i32* %4439, i64 %4440
  %4442 = load i32, i32* %4441, align 4, !tbaa !375
  %4443 = insertelement <32 x i32> %4437, i32 %4442, i32 6
  %4444 = extractelement <32 x i32> %t125255, i32 7
  %4445 = bitcast i8* %Output103 to i32*
  %4446 = sext i32 %4444 to i64
  %4447 = getelementptr inbounds i32, i32* %4445, i64 %4446
  %4448 = load i32, i32* %4447, align 4, !tbaa !375
  %4449 = insertelement <32 x i32> %4443, i32 %4448, i32 7
  %4450 = extractelement <32 x i32> %t125255, i32 8
  %4451 = bitcast i8* %Output103 to i32*
  %4452 = sext i32 %4450 to i64
  %4453 = getelementptr inbounds i32, i32* %4451, i64 %4452
  %4454 = load i32, i32* %4453, align 4, !tbaa !375
  %4455 = insertelement <32 x i32> %4449, i32 %4454, i32 8
  %4456 = extractelement <32 x i32> %t125255, i32 9
  %4457 = bitcast i8* %Output103 to i32*
  %4458 = sext i32 %4456 to i64
  %4459 = getelementptr inbounds i32, i32* %4457, i64 %4458
  %4460 = load i32, i32* %4459, align 4, !tbaa !375
  %4461 = insertelement <32 x i32> %4455, i32 %4460, i32 9
  %4462 = extractelement <32 x i32> %t125255, i32 10
  %4463 = bitcast i8* %Output103 to i32*
  %4464 = sext i32 %4462 to i64
  %4465 = getelementptr inbounds i32, i32* %4463, i64 %4464
  %4466 = load i32, i32* %4465, align 4, !tbaa !375
  %4467 = insertelement <32 x i32> %4461, i32 %4466, i32 10
  %4468 = extractelement <32 x i32> %t125255, i32 11
  %4469 = bitcast i8* %Output103 to i32*
  %4470 = sext i32 %4468 to i64
  %4471 = getelementptr inbounds i32, i32* %4469, i64 %4470
  %4472 = load i32, i32* %4471, align 4, !tbaa !375
  %4473 = insertelement <32 x i32> %4467, i32 %4472, i32 11
  %4474 = extractelement <32 x i32> %t125255, i32 12
  %4475 = bitcast i8* %Output103 to i32*
  %4476 = sext i32 %4474 to i64
  %4477 = getelementptr inbounds i32, i32* %4475, i64 %4476
  %4478 = load i32, i32* %4477, align 4, !tbaa !375
  %4479 = insertelement <32 x i32> %4473, i32 %4478, i32 12
  %4480 = extractelement <32 x i32> %t125255, i32 13
  %4481 = bitcast i8* %Output103 to i32*
  %4482 = sext i32 %4480 to i64
  %4483 = getelementptr inbounds i32, i32* %4481, i64 %4482
  %4484 = load i32, i32* %4483, align 4, !tbaa !375
  %4485 = insertelement <32 x i32> %4479, i32 %4484, i32 13
  %4486 = extractelement <32 x i32> %t125255, i32 14
  %4487 = bitcast i8* %Output103 to i32*
  %4488 = sext i32 %4486 to i64
  %4489 = getelementptr inbounds i32, i32* %4487, i64 %4488
  %4490 = load i32, i32* %4489, align 4, !tbaa !375
  %4491 = insertelement <32 x i32> %4485, i32 %4490, i32 14
  %4492 = extractelement <32 x i32> %t125255, i32 15
  %4493 = bitcast i8* %Output103 to i32*
  %4494 = sext i32 %4492 to i64
  %4495 = getelementptr inbounds i32, i32* %4493, i64 %4494
  %4496 = load i32, i32* %4495, align 4, !tbaa !375
  %4497 = insertelement <32 x i32> %4491, i32 %4496, i32 15
  %4498 = extractelement <32 x i32> %t125255, i32 16
  %4499 = bitcast i8* %Output103 to i32*
  %4500 = sext i32 %4498 to i64
  %4501 = getelementptr inbounds i32, i32* %4499, i64 %4500
  %4502 = load i32, i32* %4501, align 4, !tbaa !375
  %4503 = insertelement <32 x i32> %4497, i32 %4502, i32 16
  %4504 = extractelement <32 x i32> %t125255, i32 17
  %4505 = bitcast i8* %Output103 to i32*
  %4506 = sext i32 %4504 to i64
  %4507 = getelementptr inbounds i32, i32* %4505, i64 %4506
  %4508 = load i32, i32* %4507, align 4, !tbaa !375
  %4509 = insertelement <32 x i32> %4503, i32 %4508, i32 17
  %4510 = extractelement <32 x i32> %t125255, i32 18
  %4511 = bitcast i8* %Output103 to i32*
  %4512 = sext i32 %4510 to i64
  %4513 = getelementptr inbounds i32, i32* %4511, i64 %4512
  %4514 = load i32, i32* %4513, align 4, !tbaa !375
  %4515 = insertelement <32 x i32> %4509, i32 %4514, i32 18
  %4516 = extractelement <32 x i32> %t125255, i32 19
  %4517 = bitcast i8* %Output103 to i32*
  %4518 = sext i32 %4516 to i64
  %4519 = getelementptr inbounds i32, i32* %4517, i64 %4518
  %4520 = load i32, i32* %4519, align 4, !tbaa !375
  %4521 = insertelement <32 x i32> %4515, i32 %4520, i32 19
  %4522 = extractelement <32 x i32> %t125255, i32 20
  %4523 = bitcast i8* %Output103 to i32*
  %4524 = sext i32 %4522 to i64
  %4525 = getelementptr inbounds i32, i32* %4523, i64 %4524
  %4526 = load i32, i32* %4525, align 4, !tbaa !375
  %4527 = insertelement <32 x i32> %4521, i32 %4526, i32 20
  %4528 = extractelement <32 x i32> %t125255, i32 21
  %4529 = bitcast i8* %Output103 to i32*
  %4530 = sext i32 %4528 to i64
  %4531 = getelementptr inbounds i32, i32* %4529, i64 %4530
  %4532 = load i32, i32* %4531, align 4, !tbaa !375
  %4533 = insertelement <32 x i32> %4527, i32 %4532, i32 21
  %4534 = extractelement <32 x i32> %t125255, i32 22
  %4535 = bitcast i8* %Output103 to i32*
  %4536 = sext i32 %4534 to i64
  %4537 = getelementptr inbounds i32, i32* %4535, i64 %4536
  %4538 = load i32, i32* %4537, align 4, !tbaa !375
  %4539 = insertelement <32 x i32> %4533, i32 %4538, i32 22
  %4540 = extractelement <32 x i32> %t125255, i32 23
  %4541 = bitcast i8* %Output103 to i32*
  %4542 = sext i32 %4540 to i64
  %4543 = getelementptr inbounds i32, i32* %4541, i64 %4542
  %4544 = load i32, i32* %4543, align 4, !tbaa !375
  %4545 = insertelement <32 x i32> %4539, i32 %4544, i32 23
  %4546 = extractelement <32 x i32> %t125255, i32 24
  %4547 = bitcast i8* %Output103 to i32*
  %4548 = sext i32 %4546 to i64
  %4549 = getelementptr inbounds i32, i32* %4547, i64 %4548
  %4550 = load i32, i32* %4549, align 4, !tbaa !375
  %4551 = insertelement <32 x i32> %4545, i32 %4550, i32 24
  %4552 = extractelement <32 x i32> %t125255, i32 25
  %4553 = bitcast i8* %Output103 to i32*
  %4554 = sext i32 %4552 to i64
  %4555 = getelementptr inbounds i32, i32* %4553, i64 %4554
  %4556 = load i32, i32* %4555, align 4, !tbaa !375
  %4557 = insertelement <32 x i32> %4551, i32 %4556, i32 25
  %4558 = extractelement <32 x i32> %t125255, i32 26
  %4559 = bitcast i8* %Output103 to i32*
  %4560 = sext i32 %4558 to i64
  %4561 = getelementptr inbounds i32, i32* %4559, i64 %4560
  %4562 = load i32, i32* %4561, align 4, !tbaa !375
  %4563 = insertelement <32 x i32> %4557, i32 %4562, i32 26
  %4564 = extractelement <32 x i32> %t125255, i32 27
  %4565 = bitcast i8* %Output103 to i32*
  %4566 = sext i32 %4564 to i64
  %4567 = getelementptr inbounds i32, i32* %4565, i64 %4566
  %4568 = load i32, i32* %4567, align 4, !tbaa !375
  %4569 = insertelement <32 x i32> %4563, i32 %4568, i32 27
  %4570 = extractelement <32 x i32> %t125255, i32 28
  %4571 = bitcast i8* %Output103 to i32*
  %4572 = sext i32 %4570 to i64
  %4573 = getelementptr inbounds i32, i32* %4571, i64 %4572
  %4574 = load i32, i32* %4573, align 4, !tbaa !375
  %4575 = insertelement <32 x i32> %4569, i32 %4574, i32 28
  %4576 = extractelement <32 x i32> %t125255, i32 29
  %4577 = bitcast i8* %Output103 to i32*
  %4578 = sext i32 %4576 to i64
  %4579 = getelementptr inbounds i32, i32* %4577, i64 %4578
  %4580 = load i32, i32* %4579, align 4, !tbaa !375
  %4581 = insertelement <32 x i32> %4575, i32 %4580, i32 29
  %4582 = extractelement <32 x i32> %t125255, i32 30
  %4583 = bitcast i8* %Output103 to i32*
  %4584 = sext i32 %4582 to i64
  %4585 = getelementptr inbounds i32, i32* %4583, i64 %4584
  %4586 = load i32, i32* %4585, align 4, !tbaa !375
  %4587 = insertelement <32 x i32> %4581, i32 %4586, i32 30
  %4588 = extractelement <32 x i32> %t125255, i32 31
  %4589 = bitcast i8* %Output103 to i32*
  %4590 = sext i32 %4588 to i64
  %4591 = getelementptr inbounds i32, i32* %4589, i64 %4590
  %4592 = load i32, i32* %4591, align 4, !tbaa !375
  %4593 = insertelement <32 x i32> %4587, i32 %4592, i32 31
  %4594 = sub nsw i32 %t156207, %"Output.s1.r10$x252"
  %4595 = insertelement <32 x i32> undef, i32 %4594, i32 0
  %4596 = shufflevector <32 x i32> %4595, <32 x i32> undef, <32 x i32> zeroinitializer
  %a91 = add nsw <32 x i32> %t124254, %4596
  %4597 = add nsw i32 %t157211, -1
  %4598 = insertelement <32 x i32> undef, i32 %4597, i32 0
  %b93 = shufflevector <32 x i32> %4598, <32 x i32> undef, <32 x i32> zeroinitializer
  %4599 = shufflevector <32 x i32> %b93, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4600 = shufflevector <32 x i32> %a91, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4601 = icmp sgt <16 x i32> %4599, %4600
  %4602 = shufflevector <32 x i32> %b93, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4603 = shufflevector <32 x i32> %a91, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4604 = icmp sgt <16 x i32> %4602, %4603
  %4605 = shufflevector <16 x i1> %4601, <16 x i1> %4604, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4606 = shufflevector <32 x i32> %a91, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4607 = shufflevector <32 x i32> %b93, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4608 = shufflevector <32 x i1> %4605, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4609 = select <16 x i1> %4608, <16 x i32> %4606, <16 x i32> %4607
  %4610 = shufflevector <32 x i32> %a91, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4611 = shufflevector <32 x i32> %b93, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4612 = shufflevector <32 x i1> %4605, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4613 = select <16 x i1> %4612, <16 x i32> %4610, <16 x i32> %4611
  %a90 = shufflevector <16 x i32> %4609, <16 x i32> %4613, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4614 = insertelement <32 x i32> undef, i32 %b58, i32 0
  %b92 = shufflevector <32 x i32> %4614, <32 x i32> undef, <32 x i32> zeroinitializer
  %4615 = shufflevector <32 x i32> %a90, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4616 = shufflevector <32 x i32> %b92, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4617 = icmp sgt <16 x i32> %4615, %4616
  %4618 = shufflevector <32 x i32> %a90, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4619 = shufflevector <32 x i32> %b92, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4620 = icmp sgt <16 x i32> %4618, %4619
  %4621 = shufflevector <16 x i1> %4617, <16 x i1> %4620, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4622 = shufflevector <32 x i32> %a90, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4623 = shufflevector <32 x i32> %b92, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4624 = shufflevector <32 x i1> %4621, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4625 = select <16 x i1> %4624, <16 x i32> %4622, <16 x i32> %4623
  %4626 = shufflevector <32 x i32> %a90, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4627 = shufflevector <32 x i32> %b92, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4628 = shufflevector <32 x i1> %4621, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4629 = select <16 x i1> %4628, <16 x i32> %4626, <16 x i32> %4627
  %4630 = shufflevector <16 x i32> %4625, <16 x i32> %4629, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4631 = insertelement <32 x i32> undef, i32 %t173248, i32 0
  %4632 = shufflevector <32 x i32> %4631, <32 x i32> undef, <32 x i32> zeroinitializer
  %a93 = add nsw <32 x i32> %t123253, %4632
  %4633 = add nsw i32 %t155210, -1
  %4634 = insertelement <32 x i32> undef, i32 %4633, i32 0
  %b95 = shufflevector <32 x i32> %4634, <32 x i32> undef, <32 x i32> zeroinitializer
  %4635 = shufflevector <32 x i32> %b95, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4636 = shufflevector <32 x i32> %a93, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4637 = icmp sgt <16 x i32> %4635, %4636
  %4638 = shufflevector <32 x i32> %b95, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4639 = shufflevector <32 x i32> %a93, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4640 = icmp sgt <16 x i32> %4638, %4639
  %4641 = shufflevector <16 x i1> %4637, <16 x i1> %4640, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4642 = shufflevector <32 x i32> %a93, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4643 = shufflevector <32 x i32> %b95, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4644 = shufflevector <32 x i1> %4641, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4645 = select <16 x i1> %4644, <16 x i32> %4642, <16 x i32> %4643
  %4646 = shufflevector <32 x i32> %a93, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4647 = shufflevector <32 x i32> %b95, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4648 = shufflevector <32 x i1> %4641, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4649 = select <16 x i1> %4648, <16 x i32> %4646, <16 x i32> %4647
  %a92 = shufflevector <16 x i32> %4645, <16 x i32> %4649, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4650 = insertelement <32 x i32> undef, i32 %b64, i32 0
  %b94 = shufflevector <32 x i32> %4650, <32 x i32> undef, <32 x i32> zeroinitializer
  %4651 = shufflevector <32 x i32> %a92, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4652 = shufflevector <32 x i32> %b94, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4653 = icmp sgt <16 x i32> %4651, %4652
  %4654 = shufflevector <32 x i32> %a92, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4655 = shufflevector <32 x i32> %b94, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4656 = icmp sgt <16 x i32> %4654, %4655
  %4657 = shufflevector <16 x i1> %4653, <16 x i1> %4656, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4658 = shufflevector <32 x i32> %a92, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4659 = shufflevector <32 x i32> %b94, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4660 = shufflevector <32 x i1> %4657, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4661 = select <16 x i1> %4660, <16 x i32> %4658, <16 x i32> %4659
  %4662 = shufflevector <32 x i32> %a92, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4663 = shufflevector <32 x i32> %b94, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4664 = shufflevector <32 x i1> %4657, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4665 = select <16 x i1> %4664, <16 x i32> %4662, <16 x i32> %4663
  %4666 = shufflevector <16 x i32> %4661, <16 x i32> %4665, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4667 = insertelement <32 x i32> undef, i32 %IMG.stride.1101, i32 0
  %4668 = shufflevector <32 x i32> %4667, <32 x i32> undef, <32 x i32> zeroinitializer
  %4669 = mul nsw <32 x i32> %4666, %4668
  %4670 = insertelement <32 x i32> undef, i32 %t172244, i32 0
  %4671 = shufflevector <32 x i32> %4670, <32 x i32> undef, <32 x i32> zeroinitializer
  %4672 = add nsw <32 x i32> %4669, %4671
  %4673 = add nsw <32 x i32> %4630, %4672
  %4674 = extractelement <32 x i32> %4673, i32 0
  %4675 = bitcast i8* %IMG94 to i32*
  %4676 = sext i32 %4674 to i64
  %4677 = getelementptr inbounds i32, i32* %4675, i64 %4676
  %4678 = load i32, i32* %4677, align 4, !tbaa !378
  %4679 = insertelement <32 x i32> undef, i32 %4678, i32 0
  %4680 = extractelement <32 x i32> %4673, i32 1
  %4681 = bitcast i8* %IMG94 to i32*
  %4682 = sext i32 %4680 to i64
  %4683 = getelementptr inbounds i32, i32* %4681, i64 %4682
  %4684 = load i32, i32* %4683, align 4, !tbaa !378
  %4685 = insertelement <32 x i32> %4679, i32 %4684, i32 1
  %4686 = extractelement <32 x i32> %4673, i32 2
  %4687 = bitcast i8* %IMG94 to i32*
  %4688 = sext i32 %4686 to i64
  %4689 = getelementptr inbounds i32, i32* %4687, i64 %4688
  %4690 = load i32, i32* %4689, align 4, !tbaa !378
  %4691 = insertelement <32 x i32> %4685, i32 %4690, i32 2
  %4692 = extractelement <32 x i32> %4673, i32 3
  %4693 = bitcast i8* %IMG94 to i32*
  %4694 = sext i32 %4692 to i64
  %4695 = getelementptr inbounds i32, i32* %4693, i64 %4694
  %4696 = load i32, i32* %4695, align 4, !tbaa !378
  %4697 = insertelement <32 x i32> %4691, i32 %4696, i32 3
  %4698 = extractelement <32 x i32> %4673, i32 4
  %4699 = bitcast i8* %IMG94 to i32*
  %4700 = sext i32 %4698 to i64
  %4701 = getelementptr inbounds i32, i32* %4699, i64 %4700
  %4702 = load i32, i32* %4701, align 4, !tbaa !378
  %4703 = insertelement <32 x i32> %4697, i32 %4702, i32 4
  %4704 = extractelement <32 x i32> %4673, i32 5
  %4705 = bitcast i8* %IMG94 to i32*
  %4706 = sext i32 %4704 to i64
  %4707 = getelementptr inbounds i32, i32* %4705, i64 %4706
  %4708 = load i32, i32* %4707, align 4, !tbaa !378
  %4709 = insertelement <32 x i32> %4703, i32 %4708, i32 5
  %4710 = extractelement <32 x i32> %4673, i32 6
  %4711 = bitcast i8* %IMG94 to i32*
  %4712 = sext i32 %4710 to i64
  %4713 = getelementptr inbounds i32, i32* %4711, i64 %4712
  %4714 = load i32, i32* %4713, align 4, !tbaa !378
  %4715 = insertelement <32 x i32> %4709, i32 %4714, i32 6
  %4716 = extractelement <32 x i32> %4673, i32 7
  %4717 = bitcast i8* %IMG94 to i32*
  %4718 = sext i32 %4716 to i64
  %4719 = getelementptr inbounds i32, i32* %4717, i64 %4718
  %4720 = load i32, i32* %4719, align 4, !tbaa !378
  %4721 = insertelement <32 x i32> %4715, i32 %4720, i32 7
  %4722 = extractelement <32 x i32> %4673, i32 8
  %4723 = bitcast i8* %IMG94 to i32*
  %4724 = sext i32 %4722 to i64
  %4725 = getelementptr inbounds i32, i32* %4723, i64 %4724
  %4726 = load i32, i32* %4725, align 4, !tbaa !378
  %4727 = insertelement <32 x i32> %4721, i32 %4726, i32 8
  %4728 = extractelement <32 x i32> %4673, i32 9
  %4729 = bitcast i8* %IMG94 to i32*
  %4730 = sext i32 %4728 to i64
  %4731 = getelementptr inbounds i32, i32* %4729, i64 %4730
  %4732 = load i32, i32* %4731, align 4, !tbaa !378
  %4733 = insertelement <32 x i32> %4727, i32 %4732, i32 9
  %4734 = extractelement <32 x i32> %4673, i32 10
  %4735 = bitcast i8* %IMG94 to i32*
  %4736 = sext i32 %4734 to i64
  %4737 = getelementptr inbounds i32, i32* %4735, i64 %4736
  %4738 = load i32, i32* %4737, align 4, !tbaa !378
  %4739 = insertelement <32 x i32> %4733, i32 %4738, i32 10
  %4740 = extractelement <32 x i32> %4673, i32 11
  %4741 = bitcast i8* %IMG94 to i32*
  %4742 = sext i32 %4740 to i64
  %4743 = getelementptr inbounds i32, i32* %4741, i64 %4742
  %4744 = load i32, i32* %4743, align 4, !tbaa !378
  %4745 = insertelement <32 x i32> %4739, i32 %4744, i32 11
  %4746 = extractelement <32 x i32> %4673, i32 12
  %4747 = bitcast i8* %IMG94 to i32*
  %4748 = sext i32 %4746 to i64
  %4749 = getelementptr inbounds i32, i32* %4747, i64 %4748
  %4750 = load i32, i32* %4749, align 4, !tbaa !378
  %4751 = insertelement <32 x i32> %4745, i32 %4750, i32 12
  %4752 = extractelement <32 x i32> %4673, i32 13
  %4753 = bitcast i8* %IMG94 to i32*
  %4754 = sext i32 %4752 to i64
  %4755 = getelementptr inbounds i32, i32* %4753, i64 %4754
  %4756 = load i32, i32* %4755, align 4, !tbaa !378
  %4757 = insertelement <32 x i32> %4751, i32 %4756, i32 13
  %4758 = extractelement <32 x i32> %4673, i32 14
  %4759 = bitcast i8* %IMG94 to i32*
  %4760 = sext i32 %4758 to i64
  %4761 = getelementptr inbounds i32, i32* %4759, i64 %4760
  %4762 = load i32, i32* %4761, align 4, !tbaa !378
  %4763 = insertelement <32 x i32> %4757, i32 %4762, i32 14
  %4764 = extractelement <32 x i32> %4673, i32 15
  %4765 = bitcast i8* %IMG94 to i32*
  %4766 = sext i32 %4764 to i64
  %4767 = getelementptr inbounds i32, i32* %4765, i64 %4766
  %4768 = load i32, i32* %4767, align 4, !tbaa !378
  %4769 = insertelement <32 x i32> %4763, i32 %4768, i32 15
  %4770 = extractelement <32 x i32> %4673, i32 16
  %4771 = bitcast i8* %IMG94 to i32*
  %4772 = sext i32 %4770 to i64
  %4773 = getelementptr inbounds i32, i32* %4771, i64 %4772
  %4774 = load i32, i32* %4773, align 4, !tbaa !378
  %4775 = insertelement <32 x i32> %4769, i32 %4774, i32 16
  %4776 = extractelement <32 x i32> %4673, i32 17
  %4777 = bitcast i8* %IMG94 to i32*
  %4778 = sext i32 %4776 to i64
  %4779 = getelementptr inbounds i32, i32* %4777, i64 %4778
  %4780 = load i32, i32* %4779, align 4, !tbaa !378
  %4781 = insertelement <32 x i32> %4775, i32 %4780, i32 17
  %4782 = extractelement <32 x i32> %4673, i32 18
  %4783 = bitcast i8* %IMG94 to i32*
  %4784 = sext i32 %4782 to i64
  %4785 = getelementptr inbounds i32, i32* %4783, i64 %4784
  %4786 = load i32, i32* %4785, align 4, !tbaa !378
  %4787 = insertelement <32 x i32> %4781, i32 %4786, i32 18
  %4788 = extractelement <32 x i32> %4673, i32 19
  %4789 = bitcast i8* %IMG94 to i32*
  %4790 = sext i32 %4788 to i64
  %4791 = getelementptr inbounds i32, i32* %4789, i64 %4790
  %4792 = load i32, i32* %4791, align 4, !tbaa !378
  %4793 = insertelement <32 x i32> %4787, i32 %4792, i32 19
  %4794 = extractelement <32 x i32> %4673, i32 20
  %4795 = bitcast i8* %IMG94 to i32*
  %4796 = sext i32 %4794 to i64
  %4797 = getelementptr inbounds i32, i32* %4795, i64 %4796
  %4798 = load i32, i32* %4797, align 4, !tbaa !378
  %4799 = insertelement <32 x i32> %4793, i32 %4798, i32 20
  %4800 = extractelement <32 x i32> %4673, i32 21
  %4801 = bitcast i8* %IMG94 to i32*
  %4802 = sext i32 %4800 to i64
  %4803 = getelementptr inbounds i32, i32* %4801, i64 %4802
  %4804 = load i32, i32* %4803, align 4, !tbaa !378
  %4805 = insertelement <32 x i32> %4799, i32 %4804, i32 21
  %4806 = extractelement <32 x i32> %4673, i32 22
  %4807 = bitcast i8* %IMG94 to i32*
  %4808 = sext i32 %4806 to i64
  %4809 = getelementptr inbounds i32, i32* %4807, i64 %4808
  %4810 = load i32, i32* %4809, align 4, !tbaa !378
  %4811 = insertelement <32 x i32> %4805, i32 %4810, i32 22
  %4812 = extractelement <32 x i32> %4673, i32 23
  %4813 = bitcast i8* %IMG94 to i32*
  %4814 = sext i32 %4812 to i64
  %4815 = getelementptr inbounds i32, i32* %4813, i64 %4814
  %4816 = load i32, i32* %4815, align 4, !tbaa !378
  %4817 = insertelement <32 x i32> %4811, i32 %4816, i32 23
  %4818 = extractelement <32 x i32> %4673, i32 24
  %4819 = bitcast i8* %IMG94 to i32*
  %4820 = sext i32 %4818 to i64
  %4821 = getelementptr inbounds i32, i32* %4819, i64 %4820
  %4822 = load i32, i32* %4821, align 4, !tbaa !378
  %4823 = insertelement <32 x i32> %4817, i32 %4822, i32 24
  %4824 = extractelement <32 x i32> %4673, i32 25
  %4825 = bitcast i8* %IMG94 to i32*
  %4826 = sext i32 %4824 to i64
  %4827 = getelementptr inbounds i32, i32* %4825, i64 %4826
  %4828 = load i32, i32* %4827, align 4, !tbaa !378
  %4829 = insertelement <32 x i32> %4823, i32 %4828, i32 25
  %4830 = extractelement <32 x i32> %4673, i32 26
  %4831 = bitcast i8* %IMG94 to i32*
  %4832 = sext i32 %4830 to i64
  %4833 = getelementptr inbounds i32, i32* %4831, i64 %4832
  %4834 = load i32, i32* %4833, align 4, !tbaa !378
  %4835 = insertelement <32 x i32> %4829, i32 %4834, i32 26
  %4836 = extractelement <32 x i32> %4673, i32 27
  %4837 = bitcast i8* %IMG94 to i32*
  %4838 = sext i32 %4836 to i64
  %4839 = getelementptr inbounds i32, i32* %4837, i64 %4838
  %4840 = load i32, i32* %4839, align 4, !tbaa !378
  %4841 = insertelement <32 x i32> %4835, i32 %4840, i32 27
  %4842 = extractelement <32 x i32> %4673, i32 28
  %4843 = bitcast i8* %IMG94 to i32*
  %4844 = sext i32 %4842 to i64
  %4845 = getelementptr inbounds i32, i32* %4843, i64 %4844
  %4846 = load i32, i32* %4845, align 4, !tbaa !378
  %4847 = insertelement <32 x i32> %4841, i32 %4846, i32 28
  %4848 = extractelement <32 x i32> %4673, i32 29
  %4849 = bitcast i8* %IMG94 to i32*
  %4850 = sext i32 %4848 to i64
  %4851 = getelementptr inbounds i32, i32* %4849, i64 %4850
  %4852 = load i32, i32* %4851, align 4, !tbaa !378
  %4853 = insertelement <32 x i32> %4847, i32 %4852, i32 29
  %4854 = extractelement <32 x i32> %4673, i32 30
  %4855 = bitcast i8* %IMG94 to i32*
  %4856 = sext i32 %4854 to i64
  %4857 = getelementptr inbounds i32, i32* %4855, i64 %4856
  %4858 = load i32, i32* %4857, align 4, !tbaa !378
  %4859 = insertelement <32 x i32> %4853, i32 %4858, i32 30
  %4860 = extractelement <32 x i32> %4673, i32 31
  %4861 = bitcast i8* %IMG94 to i32*
  %4862 = sext i32 %4860 to i64
  %4863 = getelementptr inbounds i32, i32* %4861, i64 %4862
  %4864 = load i32, i32* %4863, align 4, !tbaa !378
  %4865 = insertelement <32 x i32> %4859, i32 %4864, i32 31
  %4866 = sext i32 %"Output.s1.r10$x252" to i64
  %4867 = sext i32 %t174249 to i64
  %4868 = add nsw i64 %4866, %4867
  %4869 = bitcast i8* %Filter81 to i32*
  %4870 = getelementptr inbounds i32, i32* %4869, i64 %4868
  %4871 = load i32, i32* %4870, align 4, !tbaa !380
  %4872 = call <32 x i32> bitcast (<32 x i32> (<32 x i32>, <32 x i32>, <1 x i32>)* @hydride.node.convolution_bitserial_depth2_rafae.3 to <32 x i32> (<32 x i32>, <32 x i32>, i32)*)(<32 x i32> %4593, <32 x i32> %4865, i32 %4871) #18
  %4873 = extractelement <32 x i32> %t125255, i32 0
  %4874 = extractelement <32 x i32> %4872, i32 0
  %4875 = bitcast i8* %Output103 to i32*
  %4876 = sext i32 %4873 to i64
  %4877 = getelementptr inbounds i32, i32* %4875, i64 %4876
  store i32 %4874, i32* %4877, align 4, !tbaa !375
  %4878 = extractelement <32 x i32> %t125255, i32 1
  %4879 = extractelement <32 x i32> %4872, i32 1
  %4880 = bitcast i8* %Output103 to i32*
  %4881 = sext i32 %4878 to i64
  %4882 = getelementptr inbounds i32, i32* %4880, i64 %4881
  store i32 %4879, i32* %4882, align 4, !tbaa !375
  %4883 = extractelement <32 x i32> %t125255, i32 2
  %4884 = extractelement <32 x i32> %4872, i32 2
  %4885 = bitcast i8* %Output103 to i32*
  %4886 = sext i32 %4883 to i64
  %4887 = getelementptr inbounds i32, i32* %4885, i64 %4886
  store i32 %4884, i32* %4887, align 4, !tbaa !375
  %4888 = extractelement <32 x i32> %t125255, i32 3
  %4889 = extractelement <32 x i32> %4872, i32 3
  %4890 = bitcast i8* %Output103 to i32*
  %4891 = sext i32 %4888 to i64
  %4892 = getelementptr inbounds i32, i32* %4890, i64 %4891
  store i32 %4889, i32* %4892, align 4, !tbaa !375
  %4893 = extractelement <32 x i32> %t125255, i32 4
  %4894 = extractelement <32 x i32> %4872, i32 4
  %4895 = bitcast i8* %Output103 to i32*
  %4896 = sext i32 %4893 to i64
  %4897 = getelementptr inbounds i32, i32* %4895, i64 %4896
  store i32 %4894, i32* %4897, align 4, !tbaa !375
  %4898 = extractelement <32 x i32> %t125255, i32 5
  %4899 = extractelement <32 x i32> %4872, i32 5
  %4900 = bitcast i8* %Output103 to i32*
  %4901 = sext i32 %4898 to i64
  %4902 = getelementptr inbounds i32, i32* %4900, i64 %4901
  store i32 %4899, i32* %4902, align 4, !tbaa !375
  %4903 = extractelement <32 x i32> %t125255, i32 6
  %4904 = extractelement <32 x i32> %4872, i32 6
  %4905 = bitcast i8* %Output103 to i32*
  %4906 = sext i32 %4903 to i64
  %4907 = getelementptr inbounds i32, i32* %4905, i64 %4906
  store i32 %4904, i32* %4907, align 4, !tbaa !375
  %4908 = extractelement <32 x i32> %t125255, i32 7
  %4909 = extractelement <32 x i32> %4872, i32 7
  %4910 = bitcast i8* %Output103 to i32*
  %4911 = sext i32 %4908 to i64
  %4912 = getelementptr inbounds i32, i32* %4910, i64 %4911
  store i32 %4909, i32* %4912, align 4, !tbaa !375
  %4913 = extractelement <32 x i32> %t125255, i32 8
  %4914 = extractelement <32 x i32> %4872, i32 8
  %4915 = bitcast i8* %Output103 to i32*
  %4916 = sext i32 %4913 to i64
  %4917 = getelementptr inbounds i32, i32* %4915, i64 %4916
  store i32 %4914, i32* %4917, align 4, !tbaa !375
  %4918 = extractelement <32 x i32> %t125255, i32 9
  %4919 = extractelement <32 x i32> %4872, i32 9
  %4920 = bitcast i8* %Output103 to i32*
  %4921 = sext i32 %4918 to i64
  %4922 = getelementptr inbounds i32, i32* %4920, i64 %4921
  store i32 %4919, i32* %4922, align 4, !tbaa !375
  %4923 = extractelement <32 x i32> %t125255, i32 10
  %4924 = extractelement <32 x i32> %4872, i32 10
  %4925 = bitcast i8* %Output103 to i32*
  %4926 = sext i32 %4923 to i64
  %4927 = getelementptr inbounds i32, i32* %4925, i64 %4926
  store i32 %4924, i32* %4927, align 4, !tbaa !375
  %4928 = extractelement <32 x i32> %t125255, i32 11
  %4929 = extractelement <32 x i32> %4872, i32 11
  %4930 = bitcast i8* %Output103 to i32*
  %4931 = sext i32 %4928 to i64
  %4932 = getelementptr inbounds i32, i32* %4930, i64 %4931
  store i32 %4929, i32* %4932, align 4, !tbaa !375
  %4933 = extractelement <32 x i32> %t125255, i32 12
  %4934 = extractelement <32 x i32> %4872, i32 12
  %4935 = bitcast i8* %Output103 to i32*
  %4936 = sext i32 %4933 to i64
  %4937 = getelementptr inbounds i32, i32* %4935, i64 %4936
  store i32 %4934, i32* %4937, align 4, !tbaa !375
  %4938 = extractelement <32 x i32> %t125255, i32 13
  %4939 = extractelement <32 x i32> %4872, i32 13
  %4940 = bitcast i8* %Output103 to i32*
  %4941 = sext i32 %4938 to i64
  %4942 = getelementptr inbounds i32, i32* %4940, i64 %4941
  store i32 %4939, i32* %4942, align 4, !tbaa !375
  %4943 = extractelement <32 x i32> %t125255, i32 14
  %4944 = extractelement <32 x i32> %4872, i32 14
  %4945 = bitcast i8* %Output103 to i32*
  %4946 = sext i32 %4943 to i64
  %4947 = getelementptr inbounds i32, i32* %4945, i64 %4946
  store i32 %4944, i32* %4947, align 4, !tbaa !375
  %4948 = extractelement <32 x i32> %t125255, i32 15
  %4949 = extractelement <32 x i32> %4872, i32 15
  %4950 = bitcast i8* %Output103 to i32*
  %4951 = sext i32 %4948 to i64
  %4952 = getelementptr inbounds i32, i32* %4950, i64 %4951
  store i32 %4949, i32* %4952, align 4, !tbaa !375
  %4953 = extractelement <32 x i32> %t125255, i32 16
  %4954 = extractelement <32 x i32> %4872, i32 16
  %4955 = bitcast i8* %Output103 to i32*
  %4956 = sext i32 %4953 to i64
  %4957 = getelementptr inbounds i32, i32* %4955, i64 %4956
  store i32 %4954, i32* %4957, align 4, !tbaa !375
  %4958 = extractelement <32 x i32> %t125255, i32 17
  %4959 = extractelement <32 x i32> %4872, i32 17
  %4960 = bitcast i8* %Output103 to i32*
  %4961 = sext i32 %4958 to i64
  %4962 = getelementptr inbounds i32, i32* %4960, i64 %4961
  store i32 %4959, i32* %4962, align 4, !tbaa !375
  %4963 = extractelement <32 x i32> %t125255, i32 18
  %4964 = extractelement <32 x i32> %4872, i32 18
  %4965 = bitcast i8* %Output103 to i32*
  %4966 = sext i32 %4963 to i64
  %4967 = getelementptr inbounds i32, i32* %4965, i64 %4966
  store i32 %4964, i32* %4967, align 4, !tbaa !375
  %4968 = extractelement <32 x i32> %t125255, i32 19
  %4969 = extractelement <32 x i32> %4872, i32 19
  %4970 = bitcast i8* %Output103 to i32*
  %4971 = sext i32 %4968 to i64
  %4972 = getelementptr inbounds i32, i32* %4970, i64 %4971
  store i32 %4969, i32* %4972, align 4, !tbaa !375
  %4973 = extractelement <32 x i32> %t125255, i32 20
  %4974 = extractelement <32 x i32> %4872, i32 20
  %4975 = bitcast i8* %Output103 to i32*
  %4976 = sext i32 %4973 to i64
  %4977 = getelementptr inbounds i32, i32* %4975, i64 %4976
  store i32 %4974, i32* %4977, align 4, !tbaa !375
  %4978 = extractelement <32 x i32> %t125255, i32 21
  %4979 = extractelement <32 x i32> %4872, i32 21
  %4980 = bitcast i8* %Output103 to i32*
  %4981 = sext i32 %4978 to i64
  %4982 = getelementptr inbounds i32, i32* %4980, i64 %4981
  store i32 %4979, i32* %4982, align 4, !tbaa !375
  %4983 = extractelement <32 x i32> %t125255, i32 22
  %4984 = extractelement <32 x i32> %4872, i32 22
  %4985 = bitcast i8* %Output103 to i32*
  %4986 = sext i32 %4983 to i64
  %4987 = getelementptr inbounds i32, i32* %4985, i64 %4986
  store i32 %4984, i32* %4987, align 4, !tbaa !375
  %4988 = extractelement <32 x i32> %t125255, i32 23
  %4989 = extractelement <32 x i32> %4872, i32 23
  %4990 = bitcast i8* %Output103 to i32*
  %4991 = sext i32 %4988 to i64
  %4992 = getelementptr inbounds i32, i32* %4990, i64 %4991
  store i32 %4989, i32* %4992, align 4, !tbaa !375
  %4993 = extractelement <32 x i32> %t125255, i32 24
  %4994 = extractelement <32 x i32> %4872, i32 24
  %4995 = bitcast i8* %Output103 to i32*
  %4996 = sext i32 %4993 to i64
  %4997 = getelementptr inbounds i32, i32* %4995, i64 %4996
  store i32 %4994, i32* %4997, align 4, !tbaa !375
  %4998 = extractelement <32 x i32> %t125255, i32 25
  %4999 = extractelement <32 x i32> %4872, i32 25
  %5000 = bitcast i8* %Output103 to i32*
  %5001 = sext i32 %4998 to i64
  %5002 = getelementptr inbounds i32, i32* %5000, i64 %5001
  store i32 %4999, i32* %5002, align 4, !tbaa !375
  %5003 = extractelement <32 x i32> %t125255, i32 26
  %5004 = extractelement <32 x i32> %4872, i32 26
  %5005 = bitcast i8* %Output103 to i32*
  %5006 = sext i32 %5003 to i64
  %5007 = getelementptr inbounds i32, i32* %5005, i64 %5006
  store i32 %5004, i32* %5007, align 4, !tbaa !375
  %5008 = extractelement <32 x i32> %t125255, i32 27
  %5009 = extractelement <32 x i32> %4872, i32 27
  %5010 = bitcast i8* %Output103 to i32*
  %5011 = sext i32 %5008 to i64
  %5012 = getelementptr inbounds i32, i32* %5010, i64 %5011
  store i32 %5009, i32* %5012, align 4, !tbaa !375
  %5013 = extractelement <32 x i32> %t125255, i32 28
  %5014 = extractelement <32 x i32> %4872, i32 28
  %5015 = bitcast i8* %Output103 to i32*
  %5016 = sext i32 %5013 to i64
  %5017 = getelementptr inbounds i32, i32* %5015, i64 %5016
  store i32 %5014, i32* %5017, align 4, !tbaa !375
  %5018 = extractelement <32 x i32> %t125255, i32 29
  %5019 = extractelement <32 x i32> %4872, i32 29
  %5020 = bitcast i8* %Output103 to i32*
  %5021 = sext i32 %5018 to i64
  %5022 = getelementptr inbounds i32, i32* %5020, i64 %5021
  store i32 %5019, i32* %5022, align 4, !tbaa !375
  %5023 = extractelement <32 x i32> %t125255, i32 30
  %5024 = extractelement <32 x i32> %4872, i32 30
  %5025 = bitcast i8* %Output103 to i32*
  %5026 = sext i32 %5023 to i64
  %5027 = getelementptr inbounds i32, i32* %5025, i64 %5026
  store i32 %5024, i32* %5027, align 4, !tbaa !375
  %5028 = extractelement <32 x i32> %t125255, i32 31
  %5029 = extractelement <32 x i32> %4872, i32 31
  %5030 = bitcast i8* %Output103 to i32*
  %5031 = sext i32 %5028 to i64
  %5032 = getelementptr inbounds i32, i32* %5030, i64 %5031
  store i32 %5029, i32* %5032, align 4, !tbaa !375
  %5033 = add nsw i32 %"Output.s1.r10$x252", 1
  %5034 = icmp ne i32 %5033, %4338
  br i1 %5034, label %"for Output.s1.r10$x250", label %"end for Output.s1.r10$x251"

"end for Output.s1.r10$x251":                     ; preds = %"for Output.s1.r10$x250", %"for Output.s1.r10$y245"
  %5035 = add nsw i32 %"Output.s1.r10$y247", 1
  %5036 = icmp ne i32 %5035, %4333
  br i1 %5036, label %"for Output.s1.r10$y245", label %"end for Output.s1.r10$y246"

"for Output.s1.r10$z.rebased257":                 ; preds = %"end for Output.s1.r10$y262", %"end for Output.s1.r10$z.rebased242"
  %"Output.s1.r10$z.rebased259" = phi i32 [ 0, %"end for Output.s1.r10$z.rebased242" ], [ %5048, %"end for Output.s1.r10$y262" ]
  %a95 = add nsw i32 %"Output.s1.r10$z.rebased259", %t165218
  %b97 = add nsw i32 %b82, -1
  %5037 = icmp sgt i32 %b97, %a95
  %a94 = select i1 %5037, i32 %a95, i32 %b97
  %5038 = icmp sgt i32 %a94, 0
  %5039 = select i1 %5038, i32 %a94, i32 0
  %5040 = mul nsw i32 %5039, %IMG.stride.2102
  %t176260 = sub nsw i32 %5040, %t153209
  %5041 = add nsw i32 0, %Filter.extent.189
  %5042 = icmp slt i32 0, %5041
  br i1 %5042, label %"for Output.s1.r10$y261", label %"end for Output.s1.r10$y262", !prof !372

"end for Output.s1.r10$z.rebased258":             ; preds = %"end for Output.s1.r10$y262", %"end for Output.s1.r10$z.rebased242"
  %5043 = add nsw i32 %Output.s1.x.x.x222, 1
  %5044 = icmp ne i32 %5043, %3617
  br i1 %5044, label %"for Output.s1.x.x.x220", label %"end for Output.s1.x.x.x221"

"for Output.s1.r10$y261":                         ; preds = %"end for Output.s1.r10$x267", %"for Output.s1.r10$z.rebased257"
  %"Output.s1.r10$y263" = phi i32 [ 0, %"for Output.s1.r10$z.rebased257" ], [ %5743, %"end for Output.s1.r10$x267" ]
  %t177264 = sub nsw i32 %t154206, %"Output.s1.r10$y263"
  %5045 = mul nsw i32 %Filter.stride.190, %"Output.s1.r10$y263"
  %t178265 = add nsw i32 %5045, %t161215
  %5046 = add nsw i32 0, %Filter.extent.086
  %5047 = icmp slt i32 0, %5046
  br i1 %5047, label %"for Output.s1.r10$x266", label %"end for Output.s1.r10$x267", !prof !372

"end for Output.s1.r10$y262":                     ; preds = %"end for Output.s1.r10$x267", %"for Output.s1.r10$z.rebased257"
  %5048 = add nsw i32 %"Output.s1.r10$z.rebased259", 1
  %5049 = icmp ne i32 %5048, %4335
  br i1 %5049, label %"for Output.s1.r10$z.rebased257", label %"end for Output.s1.r10$z.rebased258"

"for Output.s1.r10$x266":                         ; preds = %"for Output.s1.r10$x266", %"for Output.s1.r10$y261"
  %"Output.s1.r10$x268" = phi i32 [ 0, %"for Output.s1.r10$y261" ], [ %5741, %"for Output.s1.r10$x266" ]
  %5050 = insertelement <32 x i32> undef, i32 %t175256, i32 0
  %5051 = shufflevector <32 x i32> %5050, <32 x i32> undef, <32 x i32> zeroinitializer
  %5052 = add nsw <32 x i32> %5051, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5053 = shufflevector <32 x i32> %5052, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5054 = icmp sgt <16 x i32> zeroinitializer, %5053
  %5055 = shufflevector <32 x i32> %5052, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5056 = icmp sgt <16 x i32> zeroinitializer, %5055
  %5057 = shufflevector <16 x i1> %5054, <16 x i1> %5056, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5058 = shufflevector <32 x i1> %5057, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5059 = select <16 x i1> %5058, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %5060 = shufflevector <32 x i1> %5057, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5061 = select <16 x i1> %5060, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %t257 = shufflevector <16 x i32> %5059, <16 x i32> %5061, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5062 = icmp eq i32 %b72, 0
  %t258 = select i1 %5062, <32 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <32 x i32> zeroinitializer
  %5063 = icmp sgt i32 0, %b72
  %t259.s = select i1 %5063, i32 -1, i32 0
  %5064 = insertelement <32 x i32> undef, i32 %t175256, i32 0
  %5065 = shufflevector <32 x i32> %5064, <32 x i32> undef, <32 x i32> zeroinitializer
  %5066 = add nsw <32 x i32> %5065, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5067 = sub nsw <32 x i32> %5066, %t257
  %5068 = insertelement <32 x i32> undef, i32 %b72, i32 0
  %5069 = shufflevector <32 x i32> %5068, <32 x i32> undef, <32 x i32> zeroinitializer
  %5070 = sub nsw <32 x i32> %5069, %t258
  %5071 = sdiv <32 x i32> %5067, %5070
  %5072 = xor i32 %t259.s, -1
  %5073 = sub nsw i32 %5072, %t259.s
  %5074 = insertelement <32 x i32> undef, i32 %5073, i32 0
  %5075 = shufflevector <32 x i32> %5074, <32 x i32> undef, <32 x i32> zeroinitializer
  %5076 = and <32 x i32> %t257, %5075
  %5077 = add nsw <32 x i32> %5071, %5076
  %5078 = xor <32 x i32> %t258, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %t126269 = and <32 x i32> %5077, %5078
  %5079 = insertelement <32 x i32> undef, i32 %t175256, i32 0
  %5080 = shufflevector <32 x i32> %5079, <32 x i32> undef, <32 x i32> zeroinitializer
  %5081 = add nsw <32 x i32> %5080, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5082 = shufflevector <32 x i32> %5081, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5083 = icmp sgt <16 x i32> zeroinitializer, %5082
  %5084 = shufflevector <32 x i32> %5081, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5085 = icmp sgt <16 x i32> zeroinitializer, %5084
  %5086 = shufflevector <16 x i1> %5083, <16 x i1> %5085, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5087 = shufflevector <32 x i1> %5086, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5088 = select <16 x i1> %5087, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %5089 = shufflevector <32 x i1> %5086, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5090 = select <16 x i1> %5089, <16 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <16 x i32> zeroinitializer
  %t260 = shufflevector <16 x i32> %5088, <16 x i32> %5090, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5091 = icmp eq i32 %b72, 0
  %t261 = select i1 %5091, <32 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <32 x i32> zeroinitializer
  %5092 = icmp sgt i32 0, %b72
  %t262.s = select i1 %5092, i32 -1, i32 0
  %5093 = insertelement <32 x i32> undef, i32 %t175256, i32 0
  %5094 = shufflevector <32 x i32> %5093, <32 x i32> undef, <32 x i32> zeroinitializer
  %5095 = add nsw <32 x i32> %5094, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5096 = sub nsw <32 x i32> %5095, %t260
  %5097 = insertelement <32 x i32> undef, i32 %b72, i32 0
  %5098 = shufflevector <32 x i32> %5097, <32 x i32> undef, <32 x i32> zeroinitializer
  %5099 = or <32 x i32> %5098, %t261
  %5100 = srem <32 x i32> %5096, %5099
  %5101 = xor i32 %b72, %t262.s
  %5102 = xor i32 %t262.s, -1
  %5103 = add nsw i32 %5101, %5102
  %5104 = insertelement <32 x i32> undef, i32 %5103, i32 0
  %5105 = shufflevector <32 x i32> %5104, <32 x i32> undef, <32 x i32> zeroinitializer
  %5106 = and <32 x i32> %t260, %5105
  %5107 = add nsw <32 x i32> %5100, %5106
  %5108 = xor <32 x i32> %t261, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %t127270 = and <32 x i32> %5107, %5108
  %5109 = add nsw i32 %Output.min.0107, %t160216
  %t128271 = call <32 x i32> bitcast (<32 x i32> (<32 x i32>, <1 x i32>, <1 x i32>, <1 x i32>, <32 x i32>)* @hydride.node.convolution_bitserial_depth2_rafae.4 to <32 x i32> (<32 x i32>, i32, i32, i32, <32 x i32>)*)(<32 x i32> %t126269, i32 %Output.min.1109, i32 %Output.stride.1111, i32 %5109, <32 x i32> %t127270) #18
  %5110 = extractelement <32 x i32> %t128271, i32 0
  %5111 = bitcast i8* %Output103 to i32*
  %5112 = sext i32 %5110 to i64
  %5113 = getelementptr inbounds i32, i32* %5111, i64 %5112
  %5114 = load i32, i32* %5113, align 4, !tbaa !375
  %5115 = insertelement <32 x i32> undef, i32 %5114, i32 0
  %5116 = extractelement <32 x i32> %t128271, i32 1
  %5117 = bitcast i8* %Output103 to i32*
  %5118 = sext i32 %5116 to i64
  %5119 = getelementptr inbounds i32, i32* %5117, i64 %5118
  %5120 = load i32, i32* %5119, align 4, !tbaa !375
  %5121 = insertelement <32 x i32> %5115, i32 %5120, i32 1
  %5122 = extractelement <32 x i32> %t128271, i32 2
  %5123 = bitcast i8* %Output103 to i32*
  %5124 = sext i32 %5122 to i64
  %5125 = getelementptr inbounds i32, i32* %5123, i64 %5124
  %5126 = load i32, i32* %5125, align 4, !tbaa !375
  %5127 = insertelement <32 x i32> %5121, i32 %5126, i32 2
  %5128 = extractelement <32 x i32> %t128271, i32 3
  %5129 = bitcast i8* %Output103 to i32*
  %5130 = sext i32 %5128 to i64
  %5131 = getelementptr inbounds i32, i32* %5129, i64 %5130
  %5132 = load i32, i32* %5131, align 4, !tbaa !375
  %5133 = insertelement <32 x i32> %5127, i32 %5132, i32 3
  %5134 = extractelement <32 x i32> %t128271, i32 4
  %5135 = bitcast i8* %Output103 to i32*
  %5136 = sext i32 %5134 to i64
  %5137 = getelementptr inbounds i32, i32* %5135, i64 %5136
  %5138 = load i32, i32* %5137, align 4, !tbaa !375
  %5139 = insertelement <32 x i32> %5133, i32 %5138, i32 4
  %5140 = extractelement <32 x i32> %t128271, i32 5
  %5141 = bitcast i8* %Output103 to i32*
  %5142 = sext i32 %5140 to i64
  %5143 = getelementptr inbounds i32, i32* %5141, i64 %5142
  %5144 = load i32, i32* %5143, align 4, !tbaa !375
  %5145 = insertelement <32 x i32> %5139, i32 %5144, i32 5
  %5146 = extractelement <32 x i32> %t128271, i32 6
  %5147 = bitcast i8* %Output103 to i32*
  %5148 = sext i32 %5146 to i64
  %5149 = getelementptr inbounds i32, i32* %5147, i64 %5148
  %5150 = load i32, i32* %5149, align 4, !tbaa !375
  %5151 = insertelement <32 x i32> %5145, i32 %5150, i32 6
  %5152 = extractelement <32 x i32> %t128271, i32 7
  %5153 = bitcast i8* %Output103 to i32*
  %5154 = sext i32 %5152 to i64
  %5155 = getelementptr inbounds i32, i32* %5153, i64 %5154
  %5156 = load i32, i32* %5155, align 4, !tbaa !375
  %5157 = insertelement <32 x i32> %5151, i32 %5156, i32 7
  %5158 = extractelement <32 x i32> %t128271, i32 8
  %5159 = bitcast i8* %Output103 to i32*
  %5160 = sext i32 %5158 to i64
  %5161 = getelementptr inbounds i32, i32* %5159, i64 %5160
  %5162 = load i32, i32* %5161, align 4, !tbaa !375
  %5163 = insertelement <32 x i32> %5157, i32 %5162, i32 8
  %5164 = extractelement <32 x i32> %t128271, i32 9
  %5165 = bitcast i8* %Output103 to i32*
  %5166 = sext i32 %5164 to i64
  %5167 = getelementptr inbounds i32, i32* %5165, i64 %5166
  %5168 = load i32, i32* %5167, align 4, !tbaa !375
  %5169 = insertelement <32 x i32> %5163, i32 %5168, i32 9
  %5170 = extractelement <32 x i32> %t128271, i32 10
  %5171 = bitcast i8* %Output103 to i32*
  %5172 = sext i32 %5170 to i64
  %5173 = getelementptr inbounds i32, i32* %5171, i64 %5172
  %5174 = load i32, i32* %5173, align 4, !tbaa !375
  %5175 = insertelement <32 x i32> %5169, i32 %5174, i32 10
  %5176 = extractelement <32 x i32> %t128271, i32 11
  %5177 = bitcast i8* %Output103 to i32*
  %5178 = sext i32 %5176 to i64
  %5179 = getelementptr inbounds i32, i32* %5177, i64 %5178
  %5180 = load i32, i32* %5179, align 4, !tbaa !375
  %5181 = insertelement <32 x i32> %5175, i32 %5180, i32 11
  %5182 = extractelement <32 x i32> %t128271, i32 12
  %5183 = bitcast i8* %Output103 to i32*
  %5184 = sext i32 %5182 to i64
  %5185 = getelementptr inbounds i32, i32* %5183, i64 %5184
  %5186 = load i32, i32* %5185, align 4, !tbaa !375
  %5187 = insertelement <32 x i32> %5181, i32 %5186, i32 12
  %5188 = extractelement <32 x i32> %t128271, i32 13
  %5189 = bitcast i8* %Output103 to i32*
  %5190 = sext i32 %5188 to i64
  %5191 = getelementptr inbounds i32, i32* %5189, i64 %5190
  %5192 = load i32, i32* %5191, align 4, !tbaa !375
  %5193 = insertelement <32 x i32> %5187, i32 %5192, i32 13
  %5194 = extractelement <32 x i32> %t128271, i32 14
  %5195 = bitcast i8* %Output103 to i32*
  %5196 = sext i32 %5194 to i64
  %5197 = getelementptr inbounds i32, i32* %5195, i64 %5196
  %5198 = load i32, i32* %5197, align 4, !tbaa !375
  %5199 = insertelement <32 x i32> %5193, i32 %5198, i32 14
  %5200 = extractelement <32 x i32> %t128271, i32 15
  %5201 = bitcast i8* %Output103 to i32*
  %5202 = sext i32 %5200 to i64
  %5203 = getelementptr inbounds i32, i32* %5201, i64 %5202
  %5204 = load i32, i32* %5203, align 4, !tbaa !375
  %5205 = insertelement <32 x i32> %5199, i32 %5204, i32 15
  %5206 = extractelement <32 x i32> %t128271, i32 16
  %5207 = bitcast i8* %Output103 to i32*
  %5208 = sext i32 %5206 to i64
  %5209 = getelementptr inbounds i32, i32* %5207, i64 %5208
  %5210 = load i32, i32* %5209, align 4, !tbaa !375
  %5211 = insertelement <32 x i32> %5205, i32 %5210, i32 16
  %5212 = extractelement <32 x i32> %t128271, i32 17
  %5213 = bitcast i8* %Output103 to i32*
  %5214 = sext i32 %5212 to i64
  %5215 = getelementptr inbounds i32, i32* %5213, i64 %5214
  %5216 = load i32, i32* %5215, align 4, !tbaa !375
  %5217 = insertelement <32 x i32> %5211, i32 %5216, i32 17
  %5218 = extractelement <32 x i32> %t128271, i32 18
  %5219 = bitcast i8* %Output103 to i32*
  %5220 = sext i32 %5218 to i64
  %5221 = getelementptr inbounds i32, i32* %5219, i64 %5220
  %5222 = load i32, i32* %5221, align 4, !tbaa !375
  %5223 = insertelement <32 x i32> %5217, i32 %5222, i32 18
  %5224 = extractelement <32 x i32> %t128271, i32 19
  %5225 = bitcast i8* %Output103 to i32*
  %5226 = sext i32 %5224 to i64
  %5227 = getelementptr inbounds i32, i32* %5225, i64 %5226
  %5228 = load i32, i32* %5227, align 4, !tbaa !375
  %5229 = insertelement <32 x i32> %5223, i32 %5228, i32 19
  %5230 = extractelement <32 x i32> %t128271, i32 20
  %5231 = bitcast i8* %Output103 to i32*
  %5232 = sext i32 %5230 to i64
  %5233 = getelementptr inbounds i32, i32* %5231, i64 %5232
  %5234 = load i32, i32* %5233, align 4, !tbaa !375
  %5235 = insertelement <32 x i32> %5229, i32 %5234, i32 20
  %5236 = extractelement <32 x i32> %t128271, i32 21
  %5237 = bitcast i8* %Output103 to i32*
  %5238 = sext i32 %5236 to i64
  %5239 = getelementptr inbounds i32, i32* %5237, i64 %5238
  %5240 = load i32, i32* %5239, align 4, !tbaa !375
  %5241 = insertelement <32 x i32> %5235, i32 %5240, i32 21
  %5242 = extractelement <32 x i32> %t128271, i32 22
  %5243 = bitcast i8* %Output103 to i32*
  %5244 = sext i32 %5242 to i64
  %5245 = getelementptr inbounds i32, i32* %5243, i64 %5244
  %5246 = load i32, i32* %5245, align 4, !tbaa !375
  %5247 = insertelement <32 x i32> %5241, i32 %5246, i32 22
  %5248 = extractelement <32 x i32> %t128271, i32 23
  %5249 = bitcast i8* %Output103 to i32*
  %5250 = sext i32 %5248 to i64
  %5251 = getelementptr inbounds i32, i32* %5249, i64 %5250
  %5252 = load i32, i32* %5251, align 4, !tbaa !375
  %5253 = insertelement <32 x i32> %5247, i32 %5252, i32 23
  %5254 = extractelement <32 x i32> %t128271, i32 24
  %5255 = bitcast i8* %Output103 to i32*
  %5256 = sext i32 %5254 to i64
  %5257 = getelementptr inbounds i32, i32* %5255, i64 %5256
  %5258 = load i32, i32* %5257, align 4, !tbaa !375
  %5259 = insertelement <32 x i32> %5253, i32 %5258, i32 24
  %5260 = extractelement <32 x i32> %t128271, i32 25
  %5261 = bitcast i8* %Output103 to i32*
  %5262 = sext i32 %5260 to i64
  %5263 = getelementptr inbounds i32, i32* %5261, i64 %5262
  %5264 = load i32, i32* %5263, align 4, !tbaa !375
  %5265 = insertelement <32 x i32> %5259, i32 %5264, i32 25
  %5266 = extractelement <32 x i32> %t128271, i32 26
  %5267 = bitcast i8* %Output103 to i32*
  %5268 = sext i32 %5266 to i64
  %5269 = getelementptr inbounds i32, i32* %5267, i64 %5268
  %5270 = load i32, i32* %5269, align 4, !tbaa !375
  %5271 = insertelement <32 x i32> %5265, i32 %5270, i32 26
  %5272 = extractelement <32 x i32> %t128271, i32 27
  %5273 = bitcast i8* %Output103 to i32*
  %5274 = sext i32 %5272 to i64
  %5275 = getelementptr inbounds i32, i32* %5273, i64 %5274
  %5276 = load i32, i32* %5275, align 4, !tbaa !375
  %5277 = insertelement <32 x i32> %5271, i32 %5276, i32 27
  %5278 = extractelement <32 x i32> %t128271, i32 28
  %5279 = bitcast i8* %Output103 to i32*
  %5280 = sext i32 %5278 to i64
  %5281 = getelementptr inbounds i32, i32* %5279, i64 %5280
  %5282 = load i32, i32* %5281, align 4, !tbaa !375
  %5283 = insertelement <32 x i32> %5277, i32 %5282, i32 28
  %5284 = extractelement <32 x i32> %t128271, i32 29
  %5285 = bitcast i8* %Output103 to i32*
  %5286 = sext i32 %5284 to i64
  %5287 = getelementptr inbounds i32, i32* %5285, i64 %5286
  %5288 = load i32, i32* %5287, align 4, !tbaa !375
  %5289 = insertelement <32 x i32> %5283, i32 %5288, i32 29
  %5290 = extractelement <32 x i32> %t128271, i32 30
  %5291 = bitcast i8* %Output103 to i32*
  %5292 = sext i32 %5290 to i64
  %5293 = getelementptr inbounds i32, i32* %5291, i64 %5292
  %5294 = load i32, i32* %5293, align 4, !tbaa !375
  %5295 = insertelement <32 x i32> %5289, i32 %5294, i32 30
  %5296 = extractelement <32 x i32> %t128271, i32 31
  %5297 = bitcast i8* %Output103 to i32*
  %5298 = sext i32 %5296 to i64
  %5299 = getelementptr inbounds i32, i32* %5297, i64 %5298
  %5300 = load i32, i32* %5299, align 4, !tbaa !375
  %5301 = insertelement <32 x i32> %5295, i32 %5300, i32 31
  %5302 = sub nsw i32 %t156207, %"Output.s1.r10$x268"
  %5303 = insertelement <32 x i32> undef, i32 %5302, i32 0
  %5304 = shufflevector <32 x i32> %5303, <32 x i32> undef, <32 x i32> zeroinitializer
  %a97 = add nsw <32 x i32> %t127270, %5304
  %5305 = add nsw i32 %t157211, -1
  %5306 = insertelement <32 x i32> undef, i32 %5305, i32 0
  %b99 = shufflevector <32 x i32> %5306, <32 x i32> undef, <32 x i32> zeroinitializer
  %5307 = shufflevector <32 x i32> %b99, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5308 = shufflevector <32 x i32> %a97, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5309 = icmp sgt <16 x i32> %5307, %5308
  %5310 = shufflevector <32 x i32> %b99, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5311 = shufflevector <32 x i32> %a97, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5312 = icmp sgt <16 x i32> %5310, %5311
  %5313 = shufflevector <16 x i1> %5309, <16 x i1> %5312, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5314 = shufflevector <32 x i32> %a97, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5315 = shufflevector <32 x i32> %b99, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5316 = shufflevector <32 x i1> %5313, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5317 = select <16 x i1> %5316, <16 x i32> %5314, <16 x i32> %5315
  %5318 = shufflevector <32 x i32> %a97, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5319 = shufflevector <32 x i32> %b99, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5320 = shufflevector <32 x i1> %5313, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5321 = select <16 x i1> %5320, <16 x i32> %5318, <16 x i32> %5319
  %a96 = shufflevector <16 x i32> %5317, <16 x i32> %5321, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5322 = insertelement <32 x i32> undef, i32 %b58, i32 0
  %b98 = shufflevector <32 x i32> %5322, <32 x i32> undef, <32 x i32> zeroinitializer
  %5323 = shufflevector <32 x i32> %a96, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5324 = shufflevector <32 x i32> %b98, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5325 = icmp sgt <16 x i32> %5323, %5324
  %5326 = shufflevector <32 x i32> %a96, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5327 = shufflevector <32 x i32> %b98, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5328 = icmp sgt <16 x i32> %5326, %5327
  %5329 = shufflevector <16 x i1> %5325, <16 x i1> %5328, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5330 = shufflevector <32 x i32> %a96, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5331 = shufflevector <32 x i32> %b98, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5332 = shufflevector <32 x i1> %5329, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5333 = select <16 x i1> %5332, <16 x i32> %5330, <16 x i32> %5331
  %5334 = shufflevector <32 x i32> %a96, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5335 = shufflevector <32 x i32> %b98, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5336 = shufflevector <32 x i1> %5329, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5337 = select <16 x i1> %5336, <16 x i32> %5334, <16 x i32> %5335
  %5338 = shufflevector <16 x i32> %5333, <16 x i32> %5337, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5339 = insertelement <32 x i32> undef, i32 %t177264, i32 0
  %5340 = shufflevector <32 x i32> %5339, <32 x i32> undef, <32 x i32> zeroinitializer
  %a99 = add nsw <32 x i32> %t126269, %5340
  %5341 = add nsw i32 %t155210, -1
  %5342 = insertelement <32 x i32> undef, i32 %5341, i32 0
  %b101 = shufflevector <32 x i32> %5342, <32 x i32> undef, <32 x i32> zeroinitializer
  %5343 = shufflevector <32 x i32> %b101, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5344 = shufflevector <32 x i32> %a99, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5345 = icmp sgt <16 x i32> %5343, %5344
  %5346 = shufflevector <32 x i32> %b101, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5347 = shufflevector <32 x i32> %a99, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5348 = icmp sgt <16 x i32> %5346, %5347
  %5349 = shufflevector <16 x i1> %5345, <16 x i1> %5348, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5350 = shufflevector <32 x i32> %a99, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5351 = shufflevector <32 x i32> %b101, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5352 = shufflevector <32 x i1> %5349, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5353 = select <16 x i1> %5352, <16 x i32> %5350, <16 x i32> %5351
  %5354 = shufflevector <32 x i32> %a99, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5355 = shufflevector <32 x i32> %b101, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5356 = shufflevector <32 x i1> %5349, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5357 = select <16 x i1> %5356, <16 x i32> %5354, <16 x i32> %5355
  %a98 = shufflevector <16 x i32> %5353, <16 x i32> %5357, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5358 = insertelement <32 x i32> undef, i32 %b64, i32 0
  %b100 = shufflevector <32 x i32> %5358, <32 x i32> undef, <32 x i32> zeroinitializer
  %5359 = shufflevector <32 x i32> %a98, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5360 = shufflevector <32 x i32> %b100, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5361 = icmp sgt <16 x i32> %5359, %5360
  %5362 = shufflevector <32 x i32> %a98, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5363 = shufflevector <32 x i32> %b100, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5364 = icmp sgt <16 x i32> %5362, %5363
  %5365 = shufflevector <16 x i1> %5361, <16 x i1> %5364, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5366 = shufflevector <32 x i32> %a98, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5367 = shufflevector <32 x i32> %b100, <32 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5368 = shufflevector <32 x i1> %5365, <32 x i1> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5369 = select <16 x i1> %5368, <16 x i32> %5366, <16 x i32> %5367
  %5370 = shufflevector <32 x i32> %a98, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5371 = shufflevector <32 x i32> %b100, <32 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5372 = shufflevector <32 x i1> %5365, <32 x i1> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5373 = select <16 x i1> %5372, <16 x i32> %5370, <16 x i32> %5371
  %5374 = shufflevector <16 x i32> %5369, <16 x i32> %5373, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5375 = insertelement <32 x i32> undef, i32 %IMG.stride.1101, i32 0
  %5376 = shufflevector <32 x i32> %5375, <32 x i32> undef, <32 x i32> zeroinitializer
  %5377 = mul nsw <32 x i32> %5374, %5376
  %5378 = insertelement <32 x i32> undef, i32 %t176260, i32 0
  %5379 = shufflevector <32 x i32> %5378, <32 x i32> undef, <32 x i32> zeroinitializer
  %5380 = add nsw <32 x i32> %5377, %5379
  %5381 = add nsw <32 x i32> %5338, %5380
  %5382 = extractelement <32 x i32> %5381, i32 0
  %5383 = bitcast i8* %IMG94 to i32*
  %5384 = sext i32 %5382 to i64
  %5385 = getelementptr inbounds i32, i32* %5383, i64 %5384
  %5386 = load i32, i32* %5385, align 4, !tbaa !378
  %5387 = insertelement <32 x i32> undef, i32 %5386, i32 0
  %5388 = extractelement <32 x i32> %5381, i32 1
  %5389 = bitcast i8* %IMG94 to i32*
  %5390 = sext i32 %5388 to i64
  %5391 = getelementptr inbounds i32, i32* %5389, i64 %5390
  %5392 = load i32, i32* %5391, align 4, !tbaa !378
  %5393 = insertelement <32 x i32> %5387, i32 %5392, i32 1
  %5394 = extractelement <32 x i32> %5381, i32 2
  %5395 = bitcast i8* %IMG94 to i32*
  %5396 = sext i32 %5394 to i64
  %5397 = getelementptr inbounds i32, i32* %5395, i64 %5396
  %5398 = load i32, i32* %5397, align 4, !tbaa !378
  %5399 = insertelement <32 x i32> %5393, i32 %5398, i32 2
  %5400 = extractelement <32 x i32> %5381, i32 3
  %5401 = bitcast i8* %IMG94 to i32*
  %5402 = sext i32 %5400 to i64
  %5403 = getelementptr inbounds i32, i32* %5401, i64 %5402
  %5404 = load i32, i32* %5403, align 4, !tbaa !378
  %5405 = insertelement <32 x i32> %5399, i32 %5404, i32 3
  %5406 = extractelement <32 x i32> %5381, i32 4
  %5407 = bitcast i8* %IMG94 to i32*
  %5408 = sext i32 %5406 to i64
  %5409 = getelementptr inbounds i32, i32* %5407, i64 %5408
  %5410 = load i32, i32* %5409, align 4, !tbaa !378
  %5411 = insertelement <32 x i32> %5405, i32 %5410, i32 4
  %5412 = extractelement <32 x i32> %5381, i32 5
  %5413 = bitcast i8* %IMG94 to i32*
  %5414 = sext i32 %5412 to i64
  %5415 = getelementptr inbounds i32, i32* %5413, i64 %5414
  %5416 = load i32, i32* %5415, align 4, !tbaa !378
  %5417 = insertelement <32 x i32> %5411, i32 %5416, i32 5
  %5418 = extractelement <32 x i32> %5381, i32 6
  %5419 = bitcast i8* %IMG94 to i32*
  %5420 = sext i32 %5418 to i64
  %5421 = getelementptr inbounds i32, i32* %5419, i64 %5420
  %5422 = load i32, i32* %5421, align 4, !tbaa !378
  %5423 = insertelement <32 x i32> %5417, i32 %5422, i32 6
  %5424 = extractelement <32 x i32> %5381, i32 7
  %5425 = bitcast i8* %IMG94 to i32*
  %5426 = sext i32 %5424 to i64
  %5427 = getelementptr inbounds i32, i32* %5425, i64 %5426
  %5428 = load i32, i32* %5427, align 4, !tbaa !378
  %5429 = insertelement <32 x i32> %5423, i32 %5428, i32 7
  %5430 = extractelement <32 x i32> %5381, i32 8
  %5431 = bitcast i8* %IMG94 to i32*
  %5432 = sext i32 %5430 to i64
  %5433 = getelementptr inbounds i32, i32* %5431, i64 %5432
  %5434 = load i32, i32* %5433, align 4, !tbaa !378
  %5435 = insertelement <32 x i32> %5429, i32 %5434, i32 8
  %5436 = extractelement <32 x i32> %5381, i32 9
  %5437 = bitcast i8* %IMG94 to i32*
  %5438 = sext i32 %5436 to i64
  %5439 = getelementptr inbounds i32, i32* %5437, i64 %5438
  %5440 = load i32, i32* %5439, align 4, !tbaa !378
  %5441 = insertelement <32 x i32> %5435, i32 %5440, i32 9
  %5442 = extractelement <32 x i32> %5381, i32 10
  %5443 = bitcast i8* %IMG94 to i32*
  %5444 = sext i32 %5442 to i64
  %5445 = getelementptr inbounds i32, i32* %5443, i64 %5444
  %5446 = load i32, i32* %5445, align 4, !tbaa !378
  %5447 = insertelement <32 x i32> %5441, i32 %5446, i32 10
  %5448 = extractelement <32 x i32> %5381, i32 11
  %5449 = bitcast i8* %IMG94 to i32*
  %5450 = sext i32 %5448 to i64
  %5451 = getelementptr inbounds i32, i32* %5449, i64 %5450
  %5452 = load i32, i32* %5451, align 4, !tbaa !378
  %5453 = insertelement <32 x i32> %5447, i32 %5452, i32 11
  %5454 = extractelement <32 x i32> %5381, i32 12
  %5455 = bitcast i8* %IMG94 to i32*
  %5456 = sext i32 %5454 to i64
  %5457 = getelementptr inbounds i32, i32* %5455, i64 %5456
  %5458 = load i32, i32* %5457, align 4, !tbaa !378
  %5459 = insertelement <32 x i32> %5453, i32 %5458, i32 12
  %5460 = extractelement <32 x i32> %5381, i32 13
  %5461 = bitcast i8* %IMG94 to i32*
  %5462 = sext i32 %5460 to i64
  %5463 = getelementptr inbounds i32, i32* %5461, i64 %5462
  %5464 = load i32, i32* %5463, align 4, !tbaa !378
  %5465 = insertelement <32 x i32> %5459, i32 %5464, i32 13
  %5466 = extractelement <32 x i32> %5381, i32 14
  %5467 = bitcast i8* %IMG94 to i32*
  %5468 = sext i32 %5466 to i64
  %5469 = getelementptr inbounds i32, i32* %5467, i64 %5468
  %5470 = load i32, i32* %5469, align 4, !tbaa !378
  %5471 = insertelement <32 x i32> %5465, i32 %5470, i32 14
  %5472 = extractelement <32 x i32> %5381, i32 15
  %5473 = bitcast i8* %IMG94 to i32*
  %5474 = sext i32 %5472 to i64
  %5475 = getelementptr inbounds i32, i32* %5473, i64 %5474
  %5476 = load i32, i32* %5475, align 4, !tbaa !378
  %5477 = insertelement <32 x i32> %5471, i32 %5476, i32 15
  %5478 = extractelement <32 x i32> %5381, i32 16
  %5479 = bitcast i8* %IMG94 to i32*
  %5480 = sext i32 %5478 to i64
  %5481 = getelementptr inbounds i32, i32* %5479, i64 %5480
  %5482 = load i32, i32* %5481, align 4, !tbaa !378
  %5483 = insertelement <32 x i32> %5477, i32 %5482, i32 16
  %5484 = extractelement <32 x i32> %5381, i32 17
  %5485 = bitcast i8* %IMG94 to i32*
  %5486 = sext i32 %5484 to i64
  %5487 = getelementptr inbounds i32, i32* %5485, i64 %5486
  %5488 = load i32, i32* %5487, align 4, !tbaa !378
  %5489 = insertelement <32 x i32> %5483, i32 %5488, i32 17
  %5490 = extractelement <32 x i32> %5381, i32 18
  %5491 = bitcast i8* %IMG94 to i32*
  %5492 = sext i32 %5490 to i64
  %5493 = getelementptr inbounds i32, i32* %5491, i64 %5492
  %5494 = load i32, i32* %5493, align 4, !tbaa !378
  %5495 = insertelement <32 x i32> %5489, i32 %5494, i32 18
  %5496 = extractelement <32 x i32> %5381, i32 19
  %5497 = bitcast i8* %IMG94 to i32*
  %5498 = sext i32 %5496 to i64
  %5499 = getelementptr inbounds i32, i32* %5497, i64 %5498
  %5500 = load i32, i32* %5499, align 4, !tbaa !378
  %5501 = insertelement <32 x i32> %5495, i32 %5500, i32 19
  %5502 = extractelement <32 x i32> %5381, i32 20
  %5503 = bitcast i8* %IMG94 to i32*
  %5504 = sext i32 %5502 to i64
  %5505 = getelementptr inbounds i32, i32* %5503, i64 %5504
  %5506 = load i32, i32* %5505, align 4, !tbaa !378
  %5507 = insertelement <32 x i32> %5501, i32 %5506, i32 20
  %5508 = extractelement <32 x i32> %5381, i32 21
  %5509 = bitcast i8* %IMG94 to i32*
  %5510 = sext i32 %5508 to i64
  %5511 = getelementptr inbounds i32, i32* %5509, i64 %5510
  %5512 = load i32, i32* %5511, align 4, !tbaa !378
  %5513 = insertelement <32 x i32> %5507, i32 %5512, i32 21
  %5514 = extractelement <32 x i32> %5381, i32 22
  %5515 = bitcast i8* %IMG94 to i32*
  %5516 = sext i32 %5514 to i64
  %5517 = getelementptr inbounds i32, i32* %5515, i64 %5516
  %5518 = load i32, i32* %5517, align 4, !tbaa !378
  %5519 = insertelement <32 x i32> %5513, i32 %5518, i32 22
  %5520 = extractelement <32 x i32> %5381, i32 23
  %5521 = bitcast i8* %IMG94 to i32*
  %5522 = sext i32 %5520 to i64
  %5523 = getelementptr inbounds i32, i32* %5521, i64 %5522
  %5524 = load i32, i32* %5523, align 4, !tbaa !378
  %5525 = insertelement <32 x i32> %5519, i32 %5524, i32 23
  %5526 = extractelement <32 x i32> %5381, i32 24
  %5527 = bitcast i8* %IMG94 to i32*
  %5528 = sext i32 %5526 to i64
  %5529 = getelementptr inbounds i32, i32* %5527, i64 %5528
  %5530 = load i32, i32* %5529, align 4, !tbaa !378
  %5531 = insertelement <32 x i32> %5525, i32 %5530, i32 24
  %5532 = extractelement <32 x i32> %5381, i32 25
  %5533 = bitcast i8* %IMG94 to i32*
  %5534 = sext i32 %5532 to i64
  %5535 = getelementptr inbounds i32, i32* %5533, i64 %5534
  %5536 = load i32, i32* %5535, align 4, !tbaa !378
  %5537 = insertelement <32 x i32> %5531, i32 %5536, i32 25
  %5538 = extractelement <32 x i32> %5381, i32 26
  %5539 = bitcast i8* %IMG94 to i32*
  %5540 = sext i32 %5538 to i64
  %5541 = getelementptr inbounds i32, i32* %5539, i64 %5540
  %5542 = load i32, i32* %5541, align 4, !tbaa !378
  %5543 = insertelement <32 x i32> %5537, i32 %5542, i32 26
  %5544 = extractelement <32 x i32> %5381, i32 27
  %5545 = bitcast i8* %IMG94 to i32*
  %5546 = sext i32 %5544 to i64
  %5547 = getelementptr inbounds i32, i32* %5545, i64 %5546
  %5548 = load i32, i32* %5547, align 4, !tbaa !378
  %5549 = insertelement <32 x i32> %5543, i32 %5548, i32 27
  %5550 = extractelement <32 x i32> %5381, i32 28
  %5551 = bitcast i8* %IMG94 to i32*
  %5552 = sext i32 %5550 to i64
  %5553 = getelementptr inbounds i32, i32* %5551, i64 %5552
  %5554 = load i32, i32* %5553, align 4, !tbaa !378
  %5555 = insertelement <32 x i32> %5549, i32 %5554, i32 28
  %5556 = extractelement <32 x i32> %5381, i32 29
  %5557 = bitcast i8* %IMG94 to i32*
  %5558 = sext i32 %5556 to i64
  %5559 = getelementptr inbounds i32, i32* %5557, i64 %5558
  %5560 = load i32, i32* %5559, align 4, !tbaa !378
  %5561 = insertelement <32 x i32> %5555, i32 %5560, i32 29
  %5562 = extractelement <32 x i32> %5381, i32 30
  %5563 = bitcast i8* %IMG94 to i32*
  %5564 = sext i32 %5562 to i64
  %5565 = getelementptr inbounds i32, i32* %5563, i64 %5564
  %5566 = load i32, i32* %5565, align 4, !tbaa !378
  %5567 = insertelement <32 x i32> %5561, i32 %5566, i32 30
  %5568 = extractelement <32 x i32> %5381, i32 31
  %5569 = bitcast i8* %IMG94 to i32*
  %5570 = sext i32 %5568 to i64
  %5571 = getelementptr inbounds i32, i32* %5569, i64 %5570
  %5572 = load i32, i32* %5571, align 4, !tbaa !378
  %5573 = insertelement <32 x i32> %5567, i32 %5572, i32 31
  %5574 = sext i32 %"Output.s1.r10$x268" to i64
  %5575 = sext i32 %t178265 to i64
  %5576 = add nsw i64 %5574, %5575
  %5577 = bitcast i8* %Filter81 to i32*
  %5578 = getelementptr inbounds i32, i32* %5577, i64 %5576
  %5579 = load i32, i32* %5578, align 4, !tbaa !380
  %5580 = call <32 x i32> bitcast (<32 x i32> (<32 x i32>, <32 x i32>, <1 x i32>)* @hydride.node.convolution_bitserial_depth2_rafae.5 to <32 x i32> (<32 x i32>, <32 x i32>, i32)*)(<32 x i32> %5301, <32 x i32> %5573, i32 %5579) #18
  %5581 = extractelement <32 x i32> %t128271, i32 0
  %5582 = extractelement <32 x i32> %5580, i32 0
  %5583 = bitcast i8* %Output103 to i32*
  %5584 = sext i32 %5581 to i64
  %5585 = getelementptr inbounds i32, i32* %5583, i64 %5584
  store i32 %5582, i32* %5585, align 4, !tbaa !375
  %5586 = extractelement <32 x i32> %t128271, i32 1
  %5587 = extractelement <32 x i32> %5580, i32 1
  %5588 = bitcast i8* %Output103 to i32*
  %5589 = sext i32 %5586 to i64
  %5590 = getelementptr inbounds i32, i32* %5588, i64 %5589
  store i32 %5587, i32* %5590, align 4, !tbaa !375
  %5591 = extractelement <32 x i32> %t128271, i32 2
  %5592 = extractelement <32 x i32> %5580, i32 2
  %5593 = bitcast i8* %Output103 to i32*
  %5594 = sext i32 %5591 to i64
  %5595 = getelementptr inbounds i32, i32* %5593, i64 %5594
  store i32 %5592, i32* %5595, align 4, !tbaa !375
  %5596 = extractelement <32 x i32> %t128271, i32 3
  %5597 = extractelement <32 x i32> %5580, i32 3
  %5598 = bitcast i8* %Output103 to i32*
  %5599 = sext i32 %5596 to i64
  %5600 = getelementptr inbounds i32, i32* %5598, i64 %5599
  store i32 %5597, i32* %5600, align 4, !tbaa !375
  %5601 = extractelement <32 x i32> %t128271, i32 4
  %5602 = extractelement <32 x i32> %5580, i32 4
  %5603 = bitcast i8* %Output103 to i32*
  %5604 = sext i32 %5601 to i64
  %5605 = getelementptr inbounds i32, i32* %5603, i64 %5604
  store i32 %5602, i32* %5605, align 4, !tbaa !375
  %5606 = extractelement <32 x i32> %t128271, i32 5
  %5607 = extractelement <32 x i32> %5580, i32 5
  %5608 = bitcast i8* %Output103 to i32*
  %5609 = sext i32 %5606 to i64
  %5610 = getelementptr inbounds i32, i32* %5608, i64 %5609
  store i32 %5607, i32* %5610, align 4, !tbaa !375
  %5611 = extractelement <32 x i32> %t128271, i32 6
  %5612 = extractelement <32 x i32> %5580, i32 6
  %5613 = bitcast i8* %Output103 to i32*
  %5614 = sext i32 %5611 to i64
  %5615 = getelementptr inbounds i32, i32* %5613, i64 %5614
  store i32 %5612, i32* %5615, align 4, !tbaa !375
  %5616 = extractelement <32 x i32> %t128271, i32 7
  %5617 = extractelement <32 x i32> %5580, i32 7
  %5618 = bitcast i8* %Output103 to i32*
  %5619 = sext i32 %5616 to i64
  %5620 = getelementptr inbounds i32, i32* %5618, i64 %5619
  store i32 %5617, i32* %5620, align 4, !tbaa !375
  %5621 = extractelement <32 x i32> %t128271, i32 8
  %5622 = extractelement <32 x i32> %5580, i32 8
  %5623 = bitcast i8* %Output103 to i32*
  %5624 = sext i32 %5621 to i64
  %5625 = getelementptr inbounds i32, i32* %5623, i64 %5624
  store i32 %5622, i32* %5625, align 4, !tbaa !375
  %5626 = extractelement <32 x i32> %t128271, i32 9
  %5627 = extractelement <32 x i32> %5580, i32 9
  %5628 = bitcast i8* %Output103 to i32*
  %5629 = sext i32 %5626 to i64
  %5630 = getelementptr inbounds i32, i32* %5628, i64 %5629
  store i32 %5627, i32* %5630, align 4, !tbaa !375
  %5631 = extractelement <32 x i32> %t128271, i32 10
  %5632 = extractelement <32 x i32> %5580, i32 10
  %5633 = bitcast i8* %Output103 to i32*
  %5634 = sext i32 %5631 to i64
  %5635 = getelementptr inbounds i32, i32* %5633, i64 %5634
  store i32 %5632, i32* %5635, align 4, !tbaa !375
  %5636 = extractelement <32 x i32> %t128271, i32 11
  %5637 = extractelement <32 x i32> %5580, i32 11
  %5638 = bitcast i8* %Output103 to i32*
  %5639 = sext i32 %5636 to i64
  %5640 = getelementptr inbounds i32, i32* %5638, i64 %5639
  store i32 %5637, i32* %5640, align 4, !tbaa !375
  %5641 = extractelement <32 x i32> %t128271, i32 12
  %5642 = extractelement <32 x i32> %5580, i32 12
  %5643 = bitcast i8* %Output103 to i32*
  %5644 = sext i32 %5641 to i64
  %5645 = getelementptr inbounds i32, i32* %5643, i64 %5644
  store i32 %5642, i32* %5645, align 4, !tbaa !375
  %5646 = extractelement <32 x i32> %t128271, i32 13
  %5647 = extractelement <32 x i32> %5580, i32 13
  %5648 = bitcast i8* %Output103 to i32*
  %5649 = sext i32 %5646 to i64
  %5650 = getelementptr inbounds i32, i32* %5648, i64 %5649
  store i32 %5647, i32* %5650, align 4, !tbaa !375
  %5651 = extractelement <32 x i32> %t128271, i32 14
  %5652 = extractelement <32 x i32> %5580, i32 14
  %5653 = bitcast i8* %Output103 to i32*
  %5654 = sext i32 %5651 to i64
  %5655 = getelementptr inbounds i32, i32* %5653, i64 %5654
  store i32 %5652, i32* %5655, align 4, !tbaa !375
  %5656 = extractelement <32 x i32> %t128271, i32 15
  %5657 = extractelement <32 x i32> %5580, i32 15
  %5658 = bitcast i8* %Output103 to i32*
  %5659 = sext i32 %5656 to i64
  %5660 = getelementptr inbounds i32, i32* %5658, i64 %5659
  store i32 %5657, i32* %5660, align 4, !tbaa !375
  %5661 = extractelement <32 x i32> %t128271, i32 16
  %5662 = extractelement <32 x i32> %5580, i32 16
  %5663 = bitcast i8* %Output103 to i32*
  %5664 = sext i32 %5661 to i64
  %5665 = getelementptr inbounds i32, i32* %5663, i64 %5664
  store i32 %5662, i32* %5665, align 4, !tbaa !375
  %5666 = extractelement <32 x i32> %t128271, i32 17
  %5667 = extractelement <32 x i32> %5580, i32 17
  %5668 = bitcast i8* %Output103 to i32*
  %5669 = sext i32 %5666 to i64
  %5670 = getelementptr inbounds i32, i32* %5668, i64 %5669
  store i32 %5667, i32* %5670, align 4, !tbaa !375
  %5671 = extractelement <32 x i32> %t128271, i32 18
  %5672 = extractelement <32 x i32> %5580, i32 18
  %5673 = bitcast i8* %Output103 to i32*
  %5674 = sext i32 %5671 to i64
  %5675 = getelementptr inbounds i32, i32* %5673, i64 %5674
  store i32 %5672, i32* %5675, align 4, !tbaa !375
  %5676 = extractelement <32 x i32> %t128271, i32 19
  %5677 = extractelement <32 x i32> %5580, i32 19
  %5678 = bitcast i8* %Output103 to i32*
  %5679 = sext i32 %5676 to i64
  %5680 = getelementptr inbounds i32, i32* %5678, i64 %5679
  store i32 %5677, i32* %5680, align 4, !tbaa !375
  %5681 = extractelement <32 x i32> %t128271, i32 20
  %5682 = extractelement <32 x i32> %5580, i32 20
  %5683 = bitcast i8* %Output103 to i32*
  %5684 = sext i32 %5681 to i64
  %5685 = getelementptr inbounds i32, i32* %5683, i64 %5684
  store i32 %5682, i32* %5685, align 4, !tbaa !375
  %5686 = extractelement <32 x i32> %t128271, i32 21
  %5687 = extractelement <32 x i32> %5580, i32 21
  %5688 = bitcast i8* %Output103 to i32*
  %5689 = sext i32 %5686 to i64
  %5690 = getelementptr inbounds i32, i32* %5688, i64 %5689
  store i32 %5687, i32* %5690, align 4, !tbaa !375
  %5691 = extractelement <32 x i32> %t128271, i32 22
  %5692 = extractelement <32 x i32> %5580, i32 22
  %5693 = bitcast i8* %Output103 to i32*
  %5694 = sext i32 %5691 to i64
  %5695 = getelementptr inbounds i32, i32* %5693, i64 %5694
  store i32 %5692, i32* %5695, align 4, !tbaa !375
  %5696 = extractelement <32 x i32> %t128271, i32 23
  %5697 = extractelement <32 x i32> %5580, i32 23
  %5698 = bitcast i8* %Output103 to i32*
  %5699 = sext i32 %5696 to i64
  %5700 = getelementptr inbounds i32, i32* %5698, i64 %5699
  store i32 %5697, i32* %5700, align 4, !tbaa !375
  %5701 = extractelement <32 x i32> %t128271, i32 24
  %5702 = extractelement <32 x i32> %5580, i32 24
  %5703 = bitcast i8* %Output103 to i32*
  %5704 = sext i32 %5701 to i64
  %5705 = getelementptr inbounds i32, i32* %5703, i64 %5704
  store i32 %5702, i32* %5705, align 4, !tbaa !375
  %5706 = extractelement <32 x i32> %t128271, i32 25
  %5707 = extractelement <32 x i32> %5580, i32 25
  %5708 = bitcast i8* %Output103 to i32*
  %5709 = sext i32 %5706 to i64
  %5710 = getelementptr inbounds i32, i32* %5708, i64 %5709
  store i32 %5707, i32* %5710, align 4, !tbaa !375
  %5711 = extractelement <32 x i32> %t128271, i32 26
  %5712 = extractelement <32 x i32> %5580, i32 26
  %5713 = bitcast i8* %Output103 to i32*
  %5714 = sext i32 %5711 to i64
  %5715 = getelementptr inbounds i32, i32* %5713, i64 %5714
  store i32 %5712, i32* %5715, align 4, !tbaa !375
  %5716 = extractelement <32 x i32> %t128271, i32 27
  %5717 = extractelement <32 x i32> %5580, i32 27
  %5718 = bitcast i8* %Output103 to i32*
  %5719 = sext i32 %5716 to i64
  %5720 = getelementptr inbounds i32, i32* %5718, i64 %5719
  store i32 %5717, i32* %5720, align 4, !tbaa !375
  %5721 = extractelement <32 x i32> %t128271, i32 28
  %5722 = extractelement <32 x i32> %5580, i32 28
  %5723 = bitcast i8* %Output103 to i32*
  %5724 = sext i32 %5721 to i64
  %5725 = getelementptr inbounds i32, i32* %5723, i64 %5724
  store i32 %5722, i32* %5725, align 4, !tbaa !375
  %5726 = extractelement <32 x i32> %t128271, i32 29
  %5727 = extractelement <32 x i32> %5580, i32 29
  %5728 = bitcast i8* %Output103 to i32*
  %5729 = sext i32 %5726 to i64
  %5730 = getelementptr inbounds i32, i32* %5728, i64 %5729
  store i32 %5727, i32* %5730, align 4, !tbaa !375
  %5731 = extractelement <32 x i32> %t128271, i32 30
  %5732 = extractelement <32 x i32> %5580, i32 30
  %5733 = bitcast i8* %Output103 to i32*
  %5734 = sext i32 %5731 to i64
  %5735 = getelementptr inbounds i32, i32* %5733, i64 %5734
  store i32 %5732, i32* %5735, align 4, !tbaa !375
  %5736 = extractelement <32 x i32> %t128271, i32 31
  %5737 = extractelement <32 x i32> %5580, i32 31
  %5738 = bitcast i8* %Output103 to i32*
  %5739 = sext i32 %5736 to i64
  %5740 = getelementptr inbounds i32, i32* %5738, i64 %5739
  store i32 %5737, i32* %5740, align 4, !tbaa !375
  %5741 = add nsw i32 %"Output.s1.r10$x268", 1
  %5742 = icmp ne i32 %5741, %5046
  br i1 %5742, label %"for Output.s1.r10$x266", label %"end for Output.s1.r10$x267"

"end for Output.s1.r10$x267":                     ; preds = %"for Output.s1.r10$x266", %"for Output.s1.r10$y261"
  %5743 = add nsw i32 %"Output.s1.r10$y263", 1
  %5744 = icmp ne i32 %5743, %5041
  br i1 %5744, label %"for Output.s1.r10$y261", label %"end for Output.s1.r10$y262"
}

define i32 @convolution_argv(i8** %0) {
entry:
  %1 = getelementptr i8*, i8** %0, i32 0
  %2 = load i8*, i8** %1, align 8
  %3 = bitcast i8* %2 to %struct.halide_buffer_t*
  %4 = getelementptr i8*, i8** %0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i8* %5 to %struct.halide_buffer_t*
  %7 = getelementptr i8*, i8** %0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast i8* %8 to %struct.halide_buffer_t*
  %10 = call i32 @convolution(%struct.halide_buffer_t* %3, %struct.halide_buffer_t* %6, %struct.halide_buffer_t* %9) #20
  ret i32 %10
}

define %struct.halide_filter_metadata_t* @convolution_metadata() {
entry:
  ret %struct.halide_filter_metadata_t* @convolution_metadata_storage
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.cttz.i64(i64, i1 immarg) #8

define <32 x i32> @hydride.node.convolution_bitserial_depth2_rafae.0(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <1 x i32> %arg.3, <32 x i32> %arg.4) {
entry:
  %pimAlloc = call i32 @pimAlloc(i32 0, i64 32, i32 2)
  %0 = alloca <32 x i32>, align 128
  store <32 x i32> %arg, <32 x i32>* %0, align 128
  %1 = bitcast <32 x i32>* %0 to i8*
  %pimHostToDevice = call i32 @pimCopyHostToDevice(i8* %1, i32 %pimAlloc, i64 0, i64 0)
  %pimAssocAlloc = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %ext.0 = extractelement <1 x i32> %arg.1, i32 0
  %broad.sext = sext i32 %ext.0 to i64
  %pimInst = call i32 @pimAddScalar(i32 %pimAlloc, i32 %pimAssocAlloc, i64 %broad.sext)
  %pimAssocAlloc1 = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %ext.02 = extractelement <1 x i32> %arg.2, i32 0
  %broad.sext3 = sext i32 %ext.02 to i64
  %pimInst4 = call i32 @pimMulScalar(i32 %pimAssocAlloc, i32 %pimAssocAlloc1, i64 %broad.sext3)
  %pimAssocAlloc5 = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %2 = alloca <32 x i32>, align 128
  store <32 x i32> %arg.4, <32 x i32>* %2, align 128
  %3 = bitcast <32 x i32>* %2 to i8*
  %pimHostToDevice6 = call i32 @pimCopyHostToDevice(i8* %3, i32 %pimAssocAlloc5, i64 0, i64 0)
  %pimAssocAlloc7 = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %pimInst8 = call i32 @pimAdd(i32 %pimAssocAlloc5, i32 %pimAssocAlloc1, i32 %pimAssocAlloc7)
  %pimAssocAlloc9 = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %ext.010 = extractelement <1 x i32> %arg.3, i32 0
  %broad.sext11 = sext i32 %ext.010 to i64
  %pimInst12 = call i32 @pimAddScalar(i32 %pimAssocAlloc7, i32 %pimAssocAlloc9, i64 %broad.sext11)
  %4 = alloca <32 x i32>, align 128
  %5 = bitcast <32 x i32>* %4 to i8*
  %pimDeviceToHost = call i32 @pimCopyDeviceToHost(i32 %pimAssocAlloc9, i8* %5, i64 0, i64 0)
  %load.buffer = load <32 x i32>, <32 x i32>* %4, align 128
  %pimFree = call i32 @pimFree(i32 %pimAssocAlloc)
  %pimFree13 = call i32 @pimFree(i32 %pimAssocAlloc9)
  %pimFree14 = call i32 @pimFree(i32 %pimAssocAlloc7)
  %pimFree15 = call i32 @pimFree(i32 %pimAlloc)
  %pimFree16 = call i32 @pimFree(i32 %pimAssocAlloc5)
  %pimFree17 = call i32 @pimFree(i32 %pimAssocAlloc1)
  ret <32 x i32> %load.buffer
}

declare i32 @pimAlloc(i32, i64, i32)

declare i32 @pimCopyHostToDevice(i8*, i32, i64, i64)

declare i32 @pimAllocAssociated(i32, i32)

declare i32 @pimAddScalar(i32, i32, i64)

declare i32 @pimMulScalar(i32, i32, i64)

declare i32 @pimAdd(i32, i32, i32)

declare i32 @pimCopyDeviceToHost(i32, i8*, i64, i64)

declare i32 @pimFree(i32)

define <32 x i32> @hydride.node.convolution_bitserial_depth2_rafae.1(<32 x i32> %arg, <32 x i32> %arg.1, <1 x i32> %arg.2) {
entry:
  %pimAlloc = call i32 @pimAlloc(i32 0, i64 32, i32 2)
  %0 = alloca <32 x i32>, align 128
  store <32 x i32> %arg.1, <32 x i32>* %0, align 128
  %1 = bitcast <32 x i32>* %0 to i8*
  %pimHostToDevice = call i32 @pimCopyHostToDevice(i8* %1, i32 %pimAlloc, i64 0, i64 0)
  %pimAssocAlloc = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %2 = alloca <32 x i32>, align 128
  store <32 x i32> %arg, <32 x i32>* %2, align 128
  %3 = bitcast <32 x i32>* %2 to i8*
  %pimHostToDevice1 = call i32 @pimCopyHostToDevice(i8* %3, i32 %pimAssocAlloc, i64 0, i64 0)
  %pimAssocAlloc2 = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %ext.0 = extractelement <1 x i32> %arg.2, i32 0
  %broad.sext = sext i32 %ext.0 to i64
  %pimInst = call i32 @pimScaledAdd(i32 %pimAlloc, i32 %pimAssocAlloc, i32 %pimAssocAlloc2, i64 %broad.sext)
  %4 = alloca <32 x i32>, align 128
  %5 = bitcast <32 x i32>* %4 to i8*
  %pimDeviceToHost = call i32 @pimCopyDeviceToHost(i32 %pimAssocAlloc2, i8* %5, i64 0, i64 0)
  %load.buffer = load <32 x i32>, <32 x i32>* %4, align 128
  %pimFree = call i32 @pimFree(i32 %pimAssocAlloc)
  %pimFree3 = call i32 @pimFree(i32 %pimAlloc)
  %pimFree4 = call i32 @pimFree(i32 %pimAssocAlloc2)
  ret <32 x i32> %load.buffer
}

declare i32 @pimScaledAdd(i32, i32, i32, i64)

define <32 x i32> @hydride.node.convolution_bitserial_depth2_rafae.2(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <1 x i32> %arg.3, <32 x i32> %arg.4) {
entry:
  %pimAlloc = call i32 @pimAlloc(i32 0, i64 32, i32 2)
  %0 = alloca <32 x i32>, align 128
  store <32 x i32> %arg, <32 x i32>* %0, align 128
  %1 = bitcast <32 x i32>* %0 to i8*
  %pimHostToDevice = call i32 @pimCopyHostToDevice(i8* %1, i32 %pimAlloc, i64 0, i64 0)
  %pimAssocAlloc = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %ext.0 = extractelement <1 x i32> %arg.1, i32 0
  %broad.sext = sext i32 %ext.0 to i64
  %pimInst = call i32 @pimAddScalar(i32 %pimAlloc, i32 %pimAssocAlloc, i64 %broad.sext)
  %pimAssocAlloc1 = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %ext.02 = extractelement <1 x i32> %arg.2, i32 0
  %broad.sext3 = sext i32 %ext.02 to i64
  %pimInst4 = call i32 @pimMulScalar(i32 %pimAssocAlloc, i32 %pimAssocAlloc1, i64 %broad.sext3)
  %pimAssocAlloc5 = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %2 = alloca <32 x i32>, align 128
  store <32 x i32> %arg.4, <32 x i32>* %2, align 128
  %3 = bitcast <32 x i32>* %2 to i8*
  %pimHostToDevice6 = call i32 @pimCopyHostToDevice(i8* %3, i32 %pimAssocAlloc5, i64 0, i64 0)
  %pimAssocAlloc7 = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %pimInst8 = call i32 @pimAdd(i32 %pimAssocAlloc5, i32 %pimAssocAlloc1, i32 %pimAssocAlloc7)
  %pimAssocAlloc9 = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %ext.010 = extractelement <1 x i32> %arg.3, i32 0
  %broad.sext11 = sext i32 %ext.010 to i64
  %pimInst12 = call i32 @pimAddScalar(i32 %pimAssocAlloc7, i32 %pimAssocAlloc9, i64 %broad.sext11)
  %4 = alloca <32 x i32>, align 128
  %5 = bitcast <32 x i32>* %4 to i8*
  %pimDeviceToHost = call i32 @pimCopyDeviceToHost(i32 %pimAssocAlloc9, i8* %5, i64 0, i64 0)
  %load.buffer = load <32 x i32>, <32 x i32>* %4, align 128
  %pimFree = call i32 @pimFree(i32 %pimAssocAlloc5)
  %pimFree13 = call i32 @pimFree(i32 %pimAssocAlloc)
  %pimFree14 = call i32 @pimFree(i32 %pimAssocAlloc7)
  %pimFree15 = call i32 @pimFree(i32 %pimAlloc)
  %pimFree16 = call i32 @pimFree(i32 %pimAssocAlloc1)
  %pimFree17 = call i32 @pimFree(i32 %pimAssocAlloc9)
  ret <32 x i32> %load.buffer
}

define <32 x i32> @hydride.node.convolution_bitserial_depth2_rafae.3(<32 x i32> %arg, <32 x i32> %arg.1, <1 x i32> %arg.2) {
entry:
  %pimAlloc = call i32 @pimAlloc(i32 0, i64 32, i32 2)
  %0 = alloca <32 x i32>, align 128
  store <32 x i32> %arg.1, <32 x i32>* %0, align 128
  %1 = bitcast <32 x i32>* %0 to i8*
  %pimHostToDevice = call i32 @pimCopyHostToDevice(i8* %1, i32 %pimAlloc, i64 0, i64 0)
  %pimAssocAlloc = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %2 = alloca <32 x i32>, align 128
  store <32 x i32> %arg, <32 x i32>* %2, align 128
  %3 = bitcast <32 x i32>* %2 to i8*
  %pimHostToDevice1 = call i32 @pimCopyHostToDevice(i8* %3, i32 %pimAssocAlloc, i64 0, i64 0)
  %pimAssocAlloc2 = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %ext.0 = extractelement <1 x i32> %arg.2, i32 0
  %broad.sext = sext i32 %ext.0 to i64
  %pimInst = call i32 @pimScaledAdd(i32 %pimAlloc, i32 %pimAssocAlloc, i32 %pimAssocAlloc2, i64 %broad.sext)
  %4 = alloca <32 x i32>, align 128
  %5 = bitcast <32 x i32>* %4 to i8*
  %pimDeviceToHost = call i32 @pimCopyDeviceToHost(i32 %pimAssocAlloc2, i8* %5, i64 0, i64 0)
  %load.buffer = load <32 x i32>, <32 x i32>* %4, align 128
  %pimFree = call i32 @pimFree(i32 %pimAssocAlloc2)
  %pimFree3 = call i32 @pimFree(i32 %pimAlloc)
  %pimFree4 = call i32 @pimFree(i32 %pimAssocAlloc)
  ret <32 x i32> %load.buffer
}

define <32 x i32> @hydride.node.convolution_bitserial_depth2_rafae.4(<32 x i32> %arg, <1 x i32> %arg.1, <1 x i32> %arg.2, <1 x i32> %arg.3, <32 x i32> %arg.4) {
entry:
  %pimAlloc = call i32 @pimAlloc(i32 0, i64 32, i32 2)
  %0 = alloca <32 x i32>, align 128
  store <32 x i32> %arg, <32 x i32>* %0, align 128
  %1 = bitcast <32 x i32>* %0 to i8*
  %pimHostToDevice = call i32 @pimCopyHostToDevice(i8* %1, i32 %pimAlloc, i64 0, i64 0)
  %pimAssocAlloc = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %ext.0 = extractelement <1 x i32> %arg.1, i32 0
  %broad.sext = sext i32 %ext.0 to i64
  %pimInst = call i32 @pimAddScalar(i32 %pimAlloc, i32 %pimAssocAlloc, i64 %broad.sext)
  %pimAssocAlloc1 = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %ext.02 = extractelement <1 x i32> %arg.2, i32 0
  %broad.sext3 = sext i32 %ext.02 to i64
  %pimInst4 = call i32 @pimMulScalar(i32 %pimAssocAlloc, i32 %pimAssocAlloc1, i64 %broad.sext3)
  %pimAssocAlloc5 = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %2 = alloca <32 x i32>, align 128
  store <32 x i32> %arg.4, <32 x i32>* %2, align 128
  %3 = bitcast <32 x i32>* %2 to i8*
  %pimHostToDevice6 = call i32 @pimCopyHostToDevice(i8* %3, i32 %pimAssocAlloc5, i64 0, i64 0)
  %pimAssocAlloc7 = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %pimInst8 = call i32 @pimAdd(i32 %pimAssocAlloc5, i32 %pimAssocAlloc1, i32 %pimAssocAlloc7)
  %pimAssocAlloc9 = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %ext.010 = extractelement <1 x i32> %arg.3, i32 0
  %broad.sext11 = sext i32 %ext.010 to i64
  %pimInst12 = call i32 @pimAddScalar(i32 %pimAssocAlloc7, i32 %pimAssocAlloc9, i64 %broad.sext11)
  %4 = alloca <32 x i32>, align 128
  %5 = bitcast <32 x i32>* %4 to i8*
  %pimDeviceToHost = call i32 @pimCopyDeviceToHost(i32 %pimAssocAlloc9, i8* %5, i64 0, i64 0)
  %load.buffer = load <32 x i32>, <32 x i32>* %4, align 128
  %pimFree = call i32 @pimFree(i32 %pimAlloc)
  %pimFree13 = call i32 @pimFree(i32 %pimAssocAlloc1)
  %pimFree14 = call i32 @pimFree(i32 %pimAssocAlloc9)
  %pimFree15 = call i32 @pimFree(i32 %pimAssocAlloc)
  %pimFree16 = call i32 @pimFree(i32 %pimAssocAlloc7)
  %pimFree17 = call i32 @pimFree(i32 %pimAssocAlloc5)
  ret <32 x i32> %load.buffer
}

define <32 x i32> @hydride.node.convolution_bitserial_depth2_rafae.5(<32 x i32> %arg, <32 x i32> %arg.1, <1 x i32> %arg.2) {
entry:
  %pimAlloc = call i32 @pimAlloc(i32 0, i64 32, i32 2)
  %0 = alloca <32 x i32>, align 128
  store <32 x i32> %arg.1, <32 x i32>* %0, align 128
  %1 = bitcast <32 x i32>* %0 to i8*
  %pimHostToDevice = call i32 @pimCopyHostToDevice(i8* %1, i32 %pimAlloc, i64 0, i64 0)
  %pimAssocAlloc = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %2 = alloca <32 x i32>, align 128
  store <32 x i32> %arg, <32 x i32>* %2, align 128
  %3 = bitcast <32 x i32>* %2 to i8*
  %pimHostToDevice1 = call i32 @pimCopyHostToDevice(i8* %3, i32 %pimAssocAlloc, i64 0, i64 0)
  %pimAssocAlloc2 = call i32 @pimAllocAssociated(i32 %pimAlloc, i32 2)
  %ext.0 = extractelement <1 x i32> %arg.2, i32 0
  %broad.sext = sext i32 %ext.0 to i64
  %pimInst = call i32 @pimScaledAdd(i32 %pimAlloc, i32 %pimAssocAlloc, i32 %pimAssocAlloc2, i64 %broad.sext)
  %4 = alloca <32 x i32>, align 128
  %5 = bitcast <32 x i32>* %4 to i8*
  %pimDeviceToHost = call i32 @pimCopyDeviceToHost(i32 %pimAssocAlloc2, i8* %5, i64 0, i64 0)
  %load.buffer = load <32 x i32>, <32 x i32>* %4, align 128
  %pimFree = call i32 @pimFree(i32 %pimAssocAlloc2)
  %pimFree3 = call i32 @pimFree(i32 %pimAssocAlloc)
  %pimFree4 = call i32 @pimFree(i32 %pimAlloc)
  ret <32 x i32> %load.buffer
}

define void @pimInitDeviceWrapper() {
entry:
  %pimInit = call i32 @pimCreateDevice(i32 1, i32 4, i32 128, i32 32, i32 1024, i32 8192)
  ret void
}

declare i32 @pimCreateDevice(i32, i32, i32, i32, i32, i32)

define void @pimShowStatsWrapper() {
entry:
  call void @pimShowStats()
  ret void
}

declare void @pimShowStats()

attributes #0 = { nounwind mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-builtins" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind willreturn mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { alwaysinline nounwind willreturn mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { alwaysinline nounwind mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { alwaysinline nounwind readnone uwtable }
attributes #8 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #9 = { nounwind readnone }
attributes #10 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #11 = { alwaysinline nounwind readnone }
attributes #12 = { nounwind uwtable }
attributes #13 = { inaccessiblemem_or_argmemonly nofree nosync nounwind willreturn }
attributes #14 = { alwaysinline inlinehint nounwind optsize readnone uwtable }
attributes #15 = { alwaysinline nounwind }
attributes #16 = { "reciprocal-estimates"="none" }
attributes #17 = { nobuiltin nounwind "no-builtins" }
attributes #18 = { nounwind }
attributes #19 = { nobuiltin "no-builtins" }
attributes #20 = { noinline }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8}
!llvm.ident = !{!9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, !"halide_use_soft_float_abi", i32 0}
!3 = !{i32 2, !"halide_mcpu", !"cascadelake"}
!4 = !{i32 2, !"halide_mattrs", !"+fma,+f16c,+avx512f,+avx512cd,+avx512vl,+avx512bw,+avx512dq"}
!5 = !{i32 2, !"halide_mabi", !""}
!6 = !{i32 2, !"halide_use_pic", i32 1}
!7 = !{i32 2, !"halide_use_large_code_model", i32 0}
!8 = !{i32 2, !"halide_per_instruction_fast_math_flags", i32 0}
!9 = !{!"clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)"}
!10 = !{!11, !11, i64 0}
!11 = !{!"any pointer", !12, i64 0}
!12 = !{!"omnipotent char", !13, i64 0}
!13 = !{!"Simple C++ TBAA"}
!14 = !{!12, !12, i64 0}
!15 = !{!16, !16, i64 0}
!16 = !{!"bool", !12, i64 0}
!17 = !{i8 0, i8 2}
!18 = !{!19, !19, i64 0}
!19 = !{!"long", !12, i64 0}
!20 = !{!21, !11, i64 0}
!21 = !{!"_ZTSN6Halide7Runtime8Internal4workE", !22, i64 0, !11, i64 56, !11, i64 64, !11, i64 72, !23, i64 80, !11, i64 88, !23, i64 96, !11, i64 104, !23, i64 112, !23, i64 116, !23, i64 120, !16, i64 124}
!22 = !{!"_ZTS22halide_parallel_task_t", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24, !23, i64 32, !23, i64 36, !23, i64 40, !23, i64 44, !16, i64 48}
!23 = !{!"int", !12, i64 0}
!24 = !{!21, !23, i64 36}
!25 = !{!21, !23, i64 40}
!26 = !{!21, !16, i64 48}
!27 = !{!21, !11, i64 24}
!28 = !{!21, !23, i64 32}
!29 = !{!21, !11, i64 8}
!30 = !{!21, !23, i64 44}
!31 = !{!21, !11, i64 16}
!32 = !{!21, !11, i64 56}
!33 = !{!21, !11, i64 104}
!34 = !{!21, !23, i64 116}
!35 = !{!21, !23, i64 112}
!36 = !{!21, !23, i64 120}
!37 = !{!21, !16, i64 124}
!38 = !{!21, !11, i64 72}
!39 = !{!21, !23, i64 80}
!40 = !{!21, !11, i64 88}
!41 = !{!42, !42, i64 0}
!42 = !{!"vtable pointer", !13, i64 0}
!43 = !{!44, !11, i64 8}
!44 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE", !11, i64 8}
!45 = !{!46, !16, i64 2121}
!46 = !{!"_ZTSN6Halide7Runtime8Internal12work_queue_tE", !47, i64 0, !23, i64 8, !23, i64 12, !11, i64 16, !23, i64 24, !23, i64 28, !23, i64 32, !48, i64 40, !48, i64 48, !48, i64 56, !23, i64 64, !23, i64 68, !12, i64 72, !16, i64 2120, !16, i64 2121, !23, i64 2124}
!47 = !{!"_ZTS12halide_mutex", !12, i64 0}
!48 = !{!"_ZTS11halide_cond", !12, i64 0}
!49 = distinct !{!49, !50}
!50 = !{!"llvm.loop.mustprogress"}
!51 = !{!46, !23, i64 8}
!52 = distinct !{!52, !50}
!53 = !{!46, !23, i64 24}
!54 = !{!46, !23, i64 2124}
!55 = !{!46, !23, i64 28}
!56 = distinct !{!56, !50}
!57 = !{!21, !23, i64 96}
!58 = !{!46, !11, i64 16}
!59 = !{!46, !23, i64 68}
!60 = !{!46, !23, i64 32}
!61 = !{!21, !11, i64 64}
!62 = distinct !{!62, !50}
!63 = !{!46, !16, i64 2120}
!64 = distinct !{!64, !50}
!65 = !{!66, !11, i64 0}
!66 = !{!"_ZTS26halide_semaphore_acquire_t", !11, i64 0, !23, i64 8}
!67 = !{!66, !23, i64 8}
!68 = distinct !{!68, !50}
!69 = !{!46, !23, i64 64}
!70 = distinct !{!70, !50}
!71 = distinct !{!71, !50}
!72 = !{i64 0, i64 8, !10, i64 8, i64 8, !10, i64 16, i64 8, !10, i64 24, i64 8, !10, i64 32, i64 4, !73, i64 36, i64 4, !73, i64 40, i64 4, !73, i64 44, i64 4, !73, i64 48, i64 1, !15, i64 56, i64 8, !10, i64 64, i64 8, !10, i64 72, i64 8, !10, i64 80, i64 4, !73, i64 88, i64 8, !10, i64 96, i64 4, !73, i64 104, i64 8, !10, i64 112, i64 4, !73, i64 116, i64 4, !73, i64 120, i64 4, !73, i64 124, i64 1, !15}
!73 = !{!23, !23, i64 0}
!74 = !{i64 0, i64 8, !10, i64 8, i64 8, !10, i64 16, i64 8, !10, i64 24, i64 4, !73, i64 28, i64 4, !73, i64 32, i64 4, !73, i64 36, i64 4, !73, i64 40, i64 1, !15, i64 48, i64 8, !10, i64 56, i64 8, !10, i64 64, i64 8, !10, i64 72, i64 4, !73, i64 80, i64 8, !10, i64 88, i64 4, !73, i64 96, i64 8, !10, i64 104, i64 4, !73, i64 108, i64 4, !73, i64 112, i64 4, !73, i64 116, i64 1, !15}
!75 = !{i64 0, i64 8, !10, i64 8, i64 8, !10, i64 16, i64 8, !10, i64 24, i64 4, !73, i64 32, i64 8, !10, i64 40, i64 4, !73, i64 48, i64 8, !10, i64 56, i64 4, !73, i64 60, i64 4, !73, i64 64, i64 4, !73, i64 68, i64 1, !15}
!76 = !{i64 0, i64 8, !10, i64 8, i64 4, !73, i64 12, i64 4, !73, i64 16, i64 4, !73, i64 20, i64 1, !15}
!77 = distinct !{!77, !50}
!78 = distinct !{!78, !50}
!79 = !{!80, !11, i64 144}
!80 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization10queue_dataE", !81, i64 0, !84, i64 136, !11, i64 144, !84, i64 152}
!81 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization13thread_parkerE", !82, i64 0, !83, i64 64, !16, i64 128}
!82 = !{!"_ZTS15pthread_mutex_t", !12, i64 0}
!83 = !{!"_ZTS14pthread_cond_t", !12, i64 0}
!84 = !{!"long long", !12, i64 0}
!85 = !{!86, !11, i64 16}
!86 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization11hash_bucketE", !87, i64 0, !11, i64 8, !11, i64 16}
!87 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization9word_lockE", !84, i64 0}
!88 = distinct !{!88, !50}
!89 = !{!80, !84, i64 152}
!90 = !{!81, !16, i64 128}
!91 = distinct !{!91, !50}
!92 = !{!93, !11, i64 152}
!93 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization20word_lock_queue_dataE", !81, i64 0, !11, i64 136, !11, i64 144, !11, i64 152}
!94 = !{!93, !11, i64 136}
!95 = !{!93, !11, i64 144}
!96 = distinct !{!96, !50}
!97 = distinct !{!97, !50}
!98 = distinct !{!98, !50}
!99 = !{!100, !11, i64 8}
!100 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization25broadcast_parking_controlE", !11, i64 8, !11, i64 16}
!101 = !{!100, !11, i64 16}
!102 = !{!103, !11, i64 8}
!103 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization20wait_parking_controlE", !11, i64 8, !11, i64 16}
!104 = !{!103, !11, i64 16}
!105 = !{!80, !84, i64 136}
!106 = !{!107, !16, i64 0}
!107 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization15validate_actionE", !16, i64 0, !84, i64 8}
!108 = !{!107, !84, i64 8}
!109 = !{!86, !11, i64 8}
!110 = !{!84, !84, i64 0}
!111 = !{!112, !11, i64 0}
!112 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization11bucket_pairE", !11, i64 0, !11, i64 8}
!113 = distinct !{!113, !50}
!114 = !{!112, !11, i64 8}
!115 = !{!116, !11, i64 0}
!116 = !{!"_ZTSN6Halide7Runtime8Internal14spawned_threadE", !11, i64 0, !11, i64 8, !19, i64 16}
!117 = !{!116, !11, i64 8}
!118 = !{!116, !19, i64 16}
!119 = !{!22, !23, i64 40}
!120 = !{i64 0, i64 8, !10, i64 8, i64 8, !10, i64 16, i64 8, !10, i64 24, i64 8, !10, i64 32, i64 4, !73, i64 36, i64 4, !73, i64 40, i64 4, !73, i64 44, i64 4, !73, i64 48, i64 1, !15}
!121 = distinct !{!121, !50}
!122 = distinct !{!122, !50}
!123 = distinct !{!123, !50}
!124 = !{!125, !11, i64 8}
!125 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization22signal_parking_controlE", !11, i64 8, !11, i64 16}
!126 = !{!125, !11, i64 16}
!127 = !{!128, !11, i64 0}
!128 = !{!"_ZTS18halide_mutex_array", !11, i64 0}
!129 = !{!130, !23, i64 36}
!130 = !{!"_ZTS15halide_buffer_t", !84, i64 0, !11, i64 8, !11, i64 16, !84, i64 24, !131, i64 32, !23, i64 36, !11, i64 40, !11, i64 48}
!131 = !{!"_ZTS13halide_type_t", !132, i64 0, !12, i64 1, !133, i64 2}
!132 = !{!"_ZTS18halide_type_code_t", !12, i64 0}
!133 = !{!"short", !12, i64 0}
!134 = !{!130, !11, i64 16}
!135 = !{!130, !84, i64 0}
!136 = !{!130, !11, i64 8}
!137 = !{!130, !11, i64 40}
!138 = !{!139, !23, i64 0}
!139 = !{!"_ZTS18halide_dimension_t", !23, i64 0, !23, i64 4, !23, i64 8, !23, i64 12}
!140 = !{!139, !23, i64 4}
!141 = !{!139, !23, i64 8}
!142 = !{!130, !84, i64 24}
!143 = !{!131, !132, i64 0}
!144 = !{!131, !12, i64 1}
!145 = !{!131, !133, i64 2}
!146 = !{!130, !132, i64 32}
!147 = !{!130, !12, i64 33}
!148 = !{!130, !133, i64 34}
!149 = !{i64 0, i64 4, !73, i64 4, i64 4, !73, i64 8, i64 4, !73, i64 12, i64 4, !73}
!150 = distinct !{!150, !50}
!151 = distinct !{!151, !50}
!152 = !{i64 0, i64 8, !110, i64 8, i64 8, !10, i64 16, i64 8, !10, i64 24, i64 8, !110, i64 32, i64 1, !153, i64 33, i64 1, !14, i64 34, i64 2, !154, i64 36, i64 4, !73, i64 40, i64 8, !10, i64 48, i64 8, !10}
!153 = !{!132, !132, i64 0}
!154 = !{!133, !133, i64 0}
!155 = distinct !{!155, !50}
!156 = !{!157, !11, i64 72}
!157 = !{!"_ZTS25halide_device_interface_t", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24, !11, i64 32, !11, i64 40, !11, i64 48, !11, i64 56, !11, i64 64, !11, i64 72, !11, i64 80, !11, i64 88, !11, i64 96, !11, i64 104, !11, i64 112, !11, i64 120}
!158 = !{!157, !11, i64 32}
!159 = !{!157, !11, i64 8}
!160 = !{!157, !11, i64 88}
!161 = distinct !{!161, !50}
!162 = !{!163, !19, i64 8}
!163 = !{!"_ZTS25halide_pseudostack_slot_t", !11, i64 0, !19, i64 8, !19, i64 16}
!164 = !{!163, !11, i64 0}
!165 = !{!"branch_weights", i32 1, i32 2000}
!166 = !{!163, !19, i64 16}
!167 = distinct !{!167, !50}
!168 = !{!169, !133, i64 34}
!169 = !{!"_ZTS20halide_trace_event_t", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24, !131, i64 32, !170, i64 36, !23, i64 40, !23, i64 44, !23, i64 48}
!170 = !{!"_ZTS25halide_trace_event_code_t", !12, i64 0}
!171 = !{!169, !23, i64 48}
!172 = !{!169, !11, i64 0}
!173 = !{!169, !11, i64 24}
!174 = !{!175, !23, i64 0}
!175 = !{!"_ZTSN6Halide7Runtime8Internal23SharedExclusiveSpinLockE", !23, i64 0}
!176 = distinct !{!176, !50}
!177 = !{!178, !23, i64 4}
!178 = !{!"_ZTSN6Halide7Runtime8Internal11TraceBufferE", !175, i64 0, !23, i64 4, !23, i64 8, !12, i64 12}
!179 = !{!178, !23, i64 8}
!180 = !{!181, !23, i64 0}
!181 = !{!"_ZTS21halide_trace_packet_t", !23, i64 0, !23, i64 4, !131, i64 8, !170, i64 12, !23, i64 16, !23, i64 20, !23, i64 24}
!182 = !{!181, !23, i64 4}
!183 = !{!169, !170, i64 36}
!184 = !{!181, !170, i64 12}
!185 = !{!169, !23, i64 40}
!186 = !{!181, !23, i64 16}
!187 = !{!169, !23, i64 44}
!188 = !{!181, !23, i64 20}
!189 = !{!181, !23, i64 24}
!190 = !{!169, !11, i64 16}
!191 = !{!169, !11, i64 8}
!192 = !{!181, !133, i64 10}
!193 = distinct !{!193, !50}
!194 = !{!169, !12, i64 33}
!195 = distinct !{!195, !50}
!196 = distinct !{!196, !50, !197}
!197 = !{!"llvm.loop.peeled.count", i32 1}
!198 = !{!169, !132, i64 32}
!199 = !{!200, !200, i64 0}
!200 = !{!"float", !12, i64 0}
!201 = !{!202, !202, i64 0}
!202 = !{!"double", !12, i64 0}
!203 = distinct !{!203, !50, !197}
!204 = distinct !{!204, !50}
!205 = distinct !{!205, !50}
!206 = distinct !{!206, !50}
!207 = distinct !{!207, !50}
!208 = !{!139, !23, i64 12}
!209 = distinct !{!209, !50}
!210 = distinct !{!210, !50}
!211 = !{!212, !133, i64 0}
!212 = !{!"_ZTSN6Halide7Runtime8Internal18halide_tiff_headerE", !133, i64 0, !133, i64 2, !23, i64 4, !133, i64 8, !12, i64 10, !23, i64 190, !12, i64 194, !12, i64 202}
!213 = !{!212, !133, i64 2}
!214 = !{!212, !23, i64 4}
!215 = !{!212, !133, i64 8}
!216 = !{!217, !133, i64 0}
!217 = !{!"_ZTSN6Halide7Runtime8Internal8tiff_tagE", !133, i64 0, !133, i64 2, !23, i64 4, !12, i64 8}
!218 = !{!217, !133, i64 2}
!219 = !{!217, !23, i64 4}
!220 = !{!212, !23, i64 190}
!221 = distinct !{!221, !50}
!222 = distinct !{!222, !50}
!223 = distinct !{!223, !50}
!224 = distinct !{!224, !50}
!225 = distinct !{!225, !50}
!226 = distinct !{!226, !50}
!227 = distinct !{!227, !50}
!228 = distinct !{!228, !50}
!229 = distinct !{!229, !50}
!230 = distinct !{!230, !50}
!231 = distinct !{!231, !50}
!232 = distinct !{!232, !50}
!233 = distinct !{!233, !50}
!234 = distinct !{!234, !50}
!235 = !{!236, !11, i64 0}
!236 = !{!"_ZTSN6Halide7Runtime8Internal10CacheEntryE", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24, !19, i64 32, !11, i64 40, !23, i64 48, !23, i64 52, !23, i64 56, !23, i64 60, !11, i64 64, !11, i64 72, !84, i64 80, !16, i64 88}
!237 = distinct !{!237, !50}
!238 = !{!236, !23, i64 56}
!239 = !{!236, !11, i64 24}
!240 = !{!236, !11, i64 72}
!241 = distinct !{!241, !50}
!242 = distinct !{!242, !50}
!243 = !{!244, !84, i64 0}
!244 = !{!"_ZTSN6Halide7Runtime8Internal11device_copyE", !84, i64 0, !84, i64 8, !84, i64 16, !12, i64 24, !12, i64 152, !12, i64 280, !84, i64 408}
!245 = !{!244, !84, i64 8}
!246 = !{!244, !84, i64 408}
!247 = distinct !{!247, !50}
!248 = !{!244, !84, i64 16}
!249 = distinct !{!249, !50}
!250 = distinct !{!250, !50}
!251 = distinct !{!251, !50}
!252 = distinct !{!252, !50}
!253 = distinct !{!253, !50}
!254 = !{i64 0, i64 8, !110, i64 8, i64 8, !110, i64 16, i64 8, !110, i64 24, i64 128, !14, i64 152, i64 128, !14, i64 280, i64 128, !14, i64 408, i64 8, !110}
!255 = distinct !{!255, !50}
!256 = !{!236, !11, i64 8}
!257 = !{!236, !11, i64 16}
!258 = !{!236, !19, i64 32}
!259 = !{!236, !23, i64 48}
!260 = !{!236, !23, i64 52}
!261 = !{!236, !23, i64 60}
!262 = !{!236, !11, i64 64}
!263 = !{!236, !11, i64 40}
!264 = distinct !{!264, !50}
!265 = distinct !{!265, !50}
!266 = distinct !{!266, !50}
!267 = !{!236, !16, i64 88}
!268 = !{!236, !84, i64 80}
!269 = distinct !{!269, !50}
!270 = distinct !{!270, !50}
!271 = distinct !{!271, !50}
!272 = distinct !{!272, !50}
!273 = distinct !{!273, !50}
!274 = distinct !{!274, !50}
!275 = distinct !{!275, !50}
!276 = distinct !{!276, !50}
!277 = distinct !{!277, !50}
!278 = distinct !{!278, !50}
!279 = distinct !{!279, !50}
!280 = !{!281, !23, i64 8}
!281 = !{!"_ZTSN6Halide7Runtime8Internal16CacheBlockHeaderE", !11, i64 0, !23, i64 8}
!282 = !{!281, !11, i64 0}
!283 = distinct !{!283, !50}
!284 = distinct !{!284, !50}
!285 = distinct !{!285, !50}
!286 = distinct !{!286, !50}
!287 = distinct !{!287, !50}
!288 = distinct !{!288, !50}
!289 = distinct !{!289, !50}
!290 = distinct !{!290, !50}
!291 = distinct !{!291, !50}
!292 = distinct !{!292, !50}
!293 = distinct !{!293, !50}
!294 = distinct !{!294, !50}
!295 = distinct !{!295, !50}
!296 = distinct !{!296, !50}
!297 = !{!298, !11, i64 0}
!298 = !{!"_ZTS29halide_device_allocation_pool", !11, i64 0, !11, i64 8}
!299 = distinct !{!299, !50}
!300 = !{!298, !11, i64 8}
!301 = !{!157, !11, i64 120}
!302 = !{!303, !11, i64 48}
!303 = !{!"_ZTS30halide_device_interface_impl_t", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24, !11, i64 32, !11, i64 40, !11, i64 48, !11, i64 56, !11, i64 64, !11, i64 72, !11, i64 80, !11, i64 88, !11, i64 96, !11, i64 104, !11, i64 112, !11, i64 120}
!304 = !{!303, !11, i64 40}
!305 = !{!303, !11, i64 56}
!306 = !{!303, !11, i64 0}
!307 = !{!303, !11, i64 16}
!308 = !{!303, !11, i64 8}
!309 = !{!303, !11, i64 32}
!310 = !{!303, !11, i64 24}
!311 = !{!303, !11, i64 64}
!312 = !{!303, !11, i64 72}
!313 = distinct !{!313, !50}
!314 = distinct !{!314, !50}
!315 = !{!303, !11, i64 112}
!316 = !{!303, !11, i64 120}
!317 = !{!303, !11, i64 80}
!318 = !{!303, !11, i64 88}
!319 = !{!303, !11, i64 96}
!320 = !{!303, !11, i64 104}
!321 = !{i32 22, i32 33}
!322 = !{!323, !11, i64 40}
!323 = !{!"_ZTS21halide_profiler_state", !47, i64 0, !23, i64 8, !23, i64 12, !23, i64 16, !23, i64 20, !11, i64 24, !11, i64 32, !11, i64 40}
!324 = !{!323, !23, i64 16}
!325 = !{!326, !84, i64 0}
!326 = !{!"_ZTS30halide_profiler_pipeline_stats", !84, i64 0, !84, i64 8, !84, i64 16, !84, i64 24, !84, i64 32, !84, i64 40, !11, i64 48, !11, i64 56, !11, i64 64, !23, i64 72, !23, i64 76, !23, i64 80, !23, i64 84, !23, i64 88}
!327 = !{!326, !23, i64 80}
!328 = !{!326, !84, i64 32}
!329 = !{!326, !84, i64 40}
!330 = !{!326, !11, i64 48}
!331 = !{!326, !23, i64 84}
!332 = !{!326, !23, i64 88}
!333 = !{!326, !84, i64 16}
!334 = !{!326, !84, i64 24}
!335 = !{!326, !23, i64 72}
!336 = !{!326, !11, i64 56}
!337 = distinct !{!337, !50}
!338 = !{!339, !84, i64 32}
!339 = !{!"_ZTS26halide_profiler_func_stats", !84, i64 0, !84, i64 8, !84, i64 16, !84, i64 24, !84, i64 32, !84, i64 40, !84, i64 48, !11, i64 56, !23, i64 64}
!340 = !{!339, !84, i64 0}
!341 = !{!339, !11, i64 56}
!342 = distinct !{!342, !50}
!343 = distinct !{!343, !50}
!344 = distinct !{!344, !50}
!345 = !{!339, !84, i64 40}
!346 = !{!339, !84, i64 48}
!347 = distinct !{!347, !50}
!348 = !{!339, !84, i64 16}
!349 = distinct !{!349, !50}
!350 = !{!339, !23, i64 64}
!351 = distinct !{!351, !50}
!352 = !{!339, !84, i64 24}
!353 = distinct !{!353, !50}
!354 = distinct !{!354, !50}
!355 = !{!323, !11, i64 24}
!356 = !{!326, !11, i64 64}
!357 = distinct !{!357, !50}
!358 = !{!323, !23, i64 12}
!359 = distinct !{!359, !50}
!360 = !{!326, !23, i64 76}
!361 = !{!326, !84, i64 8}
!362 = !{!339, !84, i64 8}
!363 = distinct !{!363, !50}
!364 = distinct !{!364, !50}
!365 = !{!323, !11, i64 32}
!366 = !{!323, !23, i64 20}
!367 = !{!323, !23, i64 8}
!368 = distinct !{!368, !50}
!369 = distinct !{!369, !50}
!370 = distinct !{!370, !50}
!371 = distinct !{!371, !50}
!372 = !{!"branch_weights", i32 1073741824, i32 0}
!373 = !{!"branch_weights", i32 1073741824, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0}
!374 = !{!"branch_weights", i32 1073741824, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0}
!375 = !{!376, !376, i64 0}
!376 = !{!"Output", !377, i64 0}
!377 = !{!"Halide buffer"}
!378 = !{!379, !379, i64 0}
!379 = !{!"IMG", !377, i64 0}
!380 = !{!381, !381, i64 0}
!381 = !{!"Filter", !377, i64 0}
