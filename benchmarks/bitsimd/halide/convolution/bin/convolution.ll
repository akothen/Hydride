; ModuleID = 'convolution'
source_filename = "/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/posix_allocator.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64--linux-gnu"

%struct.timespec = type { i64, i64 }
%"struct.Halide::Runtime::Internal::Synchronization::hash_table" = type { [1024 x %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"] }
%"struct.Halide::Runtime::Internal::Synchronization::hash_bucket" = type { %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* }
%"class.Halide::Runtime::Internal::Synchronization::word_lock" = type { i64 }
%"struct.Halide::Runtime::Internal::Synchronization::queue_data" = type { %"struct.Halide::Runtime::Internal::Synchronization::thread_parker", i64, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, i64 }
%"struct.Halide::Runtime::Internal::Synchronization::thread_parker" = type <{ %struct.pthread_mutex_t, %struct.pthread_mutex_t, i8, [7 x i8] }>
%struct.pthread_mutex_t = type { [8 x i64] }
%"struct.Halide::Runtime::Internal::work_queue_t" = type { %struct.halide_mutex, i32, i32, %"struct.Halide::Runtime::Internal::work"*, i32, i32, i32, [4 x i8], %struct.halide_mutex, %struct.halide_mutex, %struct.halide_mutex, i32, i32, [256 x %struct.halide_thread*], i8, i8, i32 }
%"struct.Halide::Runtime::Internal::work" = type { %struct.halide_parallel_task_t, i32 (i8*, i32, i8*)*, %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"*, i32, %"struct.Halide::Runtime::Internal::work"*, i32, i8*, i32, i32, i32, i8 }
%struct.halide_parallel_task_t = type { i32 (i8*, i32, i32, i8*, i8*)*, i8*, i8*, %struct.halide_semaphore_acquire_t*, i32, i32, i32, i32, i8, [7 x i8] }
%struct.halide_semaphore_acquire_t = type { %struct.halide_semaphore_t*, i32, [4 x i8] }
%struct.halide_semaphore_t = type { [2 x i64] }
%struct.halide_mutex = type { [1 x i64] }
%struct.halide_thread = type opaque
%"class.Halide::Runtime::Internal::TraceBuffer" = type { %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock", i32, i32, [1048576 x i8] }
%"class.Halide::Runtime::Internal::SharedExclusiveSpinLock" = type { i32 }
%struct.halide_trace_event_t = type <{ i8*, i8*, i32*, i8*, %struct.halide_type_t, i32, i32, i32, i32, [4 x i8] }>
%struct.halide_type_t = type { i8, i8, i16 }
%"struct.Halide::Runtime::Internal::CacheEntry" = type { %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"*, i8*, i64, i8*, i32, i32, i32, i32, %struct.halide_dimension_t*, %struct.halide_buffer_t*, i64, i8, [7 x i8] }
%struct.halide_dimension_t = type { i32, i32, i32, i32 }
%struct.halide_buffer_t = type { i64, %struct.halide_device_interface_t*, i8*, i64, %struct.halide_type_t, i32, %struct.halide_dimension_t*, i8* }
%struct.halide_device_interface_t = type { i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, void (i8*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i64, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, i32*, i32*)*, %struct.halide_device_interface_impl_t* }
%struct.halide_device_interface_impl_t = type { void ()*, void ()*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i64)*, i32 (i8*, %struct.halide_buffer_t*)* }
%struct.halide_device_allocation_pool = type { i32 (i8*)*, %struct.halide_device_allocation_pool* }
%struct.halide_profiler_state = type { %struct.halide_mutex, i32, i32, i32, i32, %struct.halide_profiler_pipeline_stats*, void (i32*, i32*)*, %struct.halide_thread* }
%struct.halide_profiler_pipeline_stats = type { i64, i64, i64, i64, i64, i64, i8*, %struct.halide_profiler_func_stats*, i8*, i32, i32, i32, i32, i32, [4 x i8] }
%struct.halide_profiler_func_stats = type { i64, i64, i64, i64, i64, i64, i64, i8*, i32, [4 x i8] }
%struct.halide_filter_argument_t = type { i8*, i32, i32, %struct.halide_type_t, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t*, i64** }
%struct.halide_scalar_value_t = type { %union.anon.28 }
%union.anon.28 = type { double }
%struct.halide_filter_metadata_t = type { i32, i32, %struct.halide_filter_argument_t*, i8*, i8* }
%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control" = type { %"struct.Halide::Runtime::Internal::Synchronization::parking_control", i64* }
%"struct.Halide::Runtime::Internal::Synchronization::parking_control" = type { i32 (...)** }
%"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data" = type { %"struct.Halide::Runtime::Internal::Synchronization::thread_parker", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* }
%"struct.Halide::Runtime::Internal::Synchronization::validate_action" = type { i8, [7 x i8], i64 }
%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control" = type { %"struct.Halide::Runtime::Internal::Synchronization::parking_control", i64*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"* }
%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair" = type { %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* }
%"struct.Halide::Runtime::Internal::spawned_thread" = type { void (i8*)*, i8*, i64 }
%struct.halide_mutex_array = type { %struct.halide_mutex* }
%"struct.Halide::Runtime::Internal::halide_tiff_header" = type <{ i16, i16, i32, i16, [15 x %"struct.Halide::Runtime::Internal::tiff_tag"], i32, [2 x i32], [2 x i32] }>
%"struct.Halide::Runtime::Internal::tiff_tag" = type { i16, i16, i32, %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock" }
%"struct.Halide::Runtime::Internal::CacheBlockHeader" = type { %"struct.Halide::Runtime::Internal::CacheEntry"*, i32, [4 x i8] }
%"struct.Halide::Runtime::Internal::device_copy" = type { i64, i64, i64, [16 x i64], [16 x i64], [16 x i64], i64 }
%"struct.Halide::Runtime::Internal::CpuFeatures" = type { [2 x i64], [2 x i64] }

$_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control8validateERNS2_15validate_actionE = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control6unparkEib = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control8validateERNS2_15validate_actionE = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control12before_sleepEv = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control6unparkEib = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control8validateERNS2_15validate_actionE = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization15parking_control6unparkEib = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control16requeue_callbackERKNS2_15validate_actionEbb = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization15parking_control8validateERNS2_15validate_actionE = comdat any

$_ZN6Halide7Runtime8Internal15Synchronization22signal_parking_control6unparkEib = comdat any

$_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE = comdat any

$_ZTVN6Halide7Runtime8Internal15Synchronization20wait_parking_controlE = comdat any

$_ZTVN6Halide7Runtime8Internal15Synchronization25broadcast_parking_controlE = comdat any

$_ZTVN6Halide7Runtime8Internal15Synchronization22signal_parking_controlE = comdat any

@_ZN6Halide7Runtime8Internal13custom_mallocE = linkonce local_unnamed_addr global i8* (i8*, i64)* @halide_default_malloc, align 8
@_ZN6Halide7Runtime8Internal11custom_freeE = linkonce local_unnamed_addr global void (i8*, i8*)* @halide_default_free, align 8
@_ZN6Halide7Runtime8Internal13error_handlerE = linkonce local_unnamed_addr global void (i8*, i8*)* @halide_default_error, align 8
@.str = private unnamed_addr constant [8 x i8] c"Error: \00", align 1
@_ZN6Halide7Runtime8Internal12custom_printE = linkonce local_unnamed_addr global void (i8*, i8*)* @halide_default_print, align 8
@halide_reference_clock_inited = linkonce local_unnamed_addr global i8 0, align 1
@halide_reference_clock = linkonce global %struct.timespec zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal15Synchronization5tableE = linkonce global %"struct.Halide::Runtime::Internal::Synchronization::hash_table" zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal10work_queueE = linkonce global %"struct.Halide::Runtime::Internal::work_queue_t" { %struct.halide_mutex zeroinitializer, i32 0, i32 0, %"struct.Halide::Runtime::Internal::work"* null, i32 0, i32 0, i32 0, [4 x i8] undef, %struct.halide_mutex zeroinitializer, %struct.halide_mutex zeroinitializer, %struct.halide_mutex zeroinitializer, i32 0, i32 0, [256 x %struct.halide_thread*] zeroinitializer, i8 0, i8 0, i32 0 }, align 8
@_ZN6Halide7Runtime8Internal14custom_do_taskE = linkonce local_unnamed_addr global i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* @halide_default_do_task, align 8
@_ZN6Halide7Runtime8Internal19custom_do_loop_taskE = linkonce local_unnamed_addr global i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* @halide_default_do_loop_task, align 8
@_ZN6Halide7Runtime8Internal17custom_do_par_forE = linkonce local_unnamed_addr global i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* @halide_default_do_par_for, align 8
@_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)* @_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control8validateERNS2_15validate_actionE to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv to i8*), i8* bitcast (i64 (%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"*, i32, i1)* @_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control6unparkEib to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [137 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/synchronization_common.h:386 halide_abort_if_false() failed: next != nullptr\0A\00", align 1
@_ZTVN6Halide7Runtime8Internal15Synchronization20wait_parking_controlE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)* @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control8validateERNS2_15validate_actionE to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*)* @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control12before_sleepEv to i8*), i8* bitcast (i64 (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, i32, i1)* @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control6unparkEib to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb to i8*)] }, comdat, align 8
@.str.5.6 = private unnamed_addr constant [131 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/synchronization_common.h:994 halide_abort_if_false() failed: val & 0x1\0A\00", align 1
@_ZTVN6Halide7Runtime8Internal15Synchronization25broadcast_parking_controlE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)* @_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control8validateERNS2_15validate_actionE to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv to i8*), i8* bitcast (i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control6unparkEib to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)* @_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control16requeue_callbackERKNS2_15validate_actionEbb to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [193 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/thread_pool_common.h:155 halide_abort_if_false() failed: bytes == limit && \22Logic error in thread pool work queue initialization.\\n\22\0A\00", align 1
@.str.3 = private unnamed_addr constant [270 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/thread_pool_common.h:527 halide_abort_if_false() failed: (min_threads <= ((task_parent->task.min_threads * task_parent->active_workers) - task_parent->threads_reserved)) && \22Logic error: thread over commit.\\n\22\0A\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"HL_NUM_THREADS\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"HL_NUMTHREADS\00", align 1
@_ZN6Halide7Runtime8Internal24custom_do_parallel_tasksE = linkonce local_unnamed_addr global i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)* @halide_default_do_parallel_tasks, align 8
@_ZN6Halide7Runtime8Internal21custom_semaphore_initE = linkonce local_unnamed_addr global i32 (%struct.halide_semaphore_t*, i32)* @halide_default_semaphore_init, align 8
@_ZN6Halide7Runtime8Internal28custom_semaphore_try_acquireE = linkonce local_unnamed_addr global i1 (%struct.halide_semaphore_t*, i32)* @halide_default_semaphore_try_acquire, align 8
@_ZN6Halide7Runtime8Internal24custom_semaphore_releaseE = linkonce local_unnamed_addr global i32 (%struct.halide_semaphore_t*, i32)* @halide_default_semaphore_release, align 8
@llvm.global_dtors = appending global [4 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @halide_thread_pool_cleanup, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @halide_trace_cleanup, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @halide_cache_cleanup, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @halide_profiler_shutdown, i8* null }]
@_ZTVN6Halide7Runtime8Internal15Synchronization22signal_parking_controlE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control8validateERNS2_15validate_actionE to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv to i8*), i8* bitcast (i64 (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, i32, i1)* @_ZN6Halide7Runtime8Internal15Synchronization22signal_parking_control6unparkEib to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [38 x i8] c"halide_set_num_threads: must be >= 0.\00", align 1
@_ZN6Halide7Runtime8Internal17custom_get_symbolE = linkonce local_unnamed_addr global i8* (i8*)* @halide_default_get_symbol, align 8
@_ZN6Halide7Runtime8Internal19custom_load_libraryE = linkonce local_unnamed_addr global i8* (i8*)* @halide_default_load_library, align 8
@_ZN6Halide7Runtime8Internal25custom_get_library_symbolE = linkonce local_unnamed_addr global i8* (i8*, i8*)* @halide_default_get_library_symbol, align 8
@_ZN6Halide7Runtime8Internal17halide_gpu_deviceE = linkonce local_unnamed_addr global i32 0, align 4
@_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE = linkonce global i8 0, align 1
@_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE = linkonce local_unnamed_addr global i8 0, align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"HL_GPU_DEVICE\00", align 1
@_ZN6Halide7Runtime8Internal19halide_trace_bufferE = linkonce local_unnamed_addr global %"class.Halide::Runtime::Internal::TraceBuffer"* null, align 8
@_ZN6Halide7Runtime8Internal17halide_trace_fileE = linkonce local_unnamed_addr global i32 -1, align 4
@_ZN6Halide7Runtime8Internal22halide_trace_file_lockE = linkonce global i8 0, align 1
@_ZN6Halide7Runtime8Internal29halide_trace_file_initializedE = linkonce local_unnamed_addr global i8 0, align 1
@_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE = linkonce local_unnamed_addr global i8* null, align 8
@_ZN6Halide7Runtime8Internal19halide_custom_traceE = linkonce local_unnamed_addr global i32 (i8*, %struct.halide_trace_event_t*)* @halide_default_trace, align 8
@_ZZ20halide_default_traceE3ids = internal global i32 1, align 4
@.str.32 = private unnamed_addr constant [151 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/tracing.cpp:115 halide_abort_if_false() failed: success && \22Could not write to trace file\22\0A\00", align 1
@.str.31 = private unnamed_addr constant [127 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/tracing.cpp:87 halide_abort_if_false() failed: size <= buffer_size\0A\00", align 1
@.str.1.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.11 = private unnamed_addr constant [147 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/tracing.cpp:218 halide_abort_if_false() failed: print_bits <= 64 && \22Tracing bad type\22\0A\00", align 1
@__const.halide_default_trace.event_types = private unnamed_addr constant [11 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.12, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.13, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5.14, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.15, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.16, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.17, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0)], align 8
@.str.17 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c">)\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c">, <\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c" = <\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.24 = private unnamed_addr constant [149 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/tracing.cpp:287 halide_abort_if_false() failed: print_bits >= 16 && \22Tracing a bad type\22\0A\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c" tag = \22\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.3.12 = private unnamed_addr constant [5 x i8] c"Load\00", align 1
@.str.4.13 = private unnamed_addr constant [6 x i8] c"Store\00", align 1
@.str.5.14 = private unnamed_addr constant [18 x i8] c"Begin realization\00", align 1
@.str.6.15 = private unnamed_addr constant [16 x i8] c"End realization\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"Produce\00", align 1
@.str.8.16 = private unnamed_addr constant [12 x i8] c"End produce\00", align 1
@.str.9.17 = private unnamed_addr constant [8 x i8] c"Consume\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"End consume\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"Begin pipeline\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"End pipeline\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"Tag\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"HL_TRACE_FILE\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"ab\00", align 1
@.str.30 = private unnamed_addr constant [146 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/tracing.cpp:351 halide_abort_if_false() failed: file && \22Failed to open trace file\\n\22\0A\00", align 1
@_ZN6Halide7Runtime8Internal30pixel_type_to_tiff_sample_typeE = linkonce local_unnamed_addr global [10 x i16] [i16 3, i16 3, i16 1, i16 2, i16 1, i16 2, i16 1, i16 2, i16 1, i16 2], align 2
@_ZN6Halide7Runtime8Internal31pixel_type_to_matlab_class_codeE = linkonce local_unnamed_addr global [10 x i8] c"\07\06\09\08\0B\0A\0D\0C\0F\0E", align 1
@_ZN6Halide7Runtime8Internal30pixel_type_to_matlab_type_codeE = linkonce local_unnamed_addr global [10 x i8] c"\07\09\02\01\04\03\06\05\0D\0C", align 1
@.str.34 = private unnamed_addr constant [51 x i8] c"Bounds query buffer passed to halide_debug_to_file\00", align 1
@.str.1.35 = private unnamed_addr constant [59 x i8] c"Can't debug_to_file a Func with more than four dimensions\0A\00", align 1
@.str.2.36 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.3.37 = private unnamed_addr constant [6 x i8] c".tiff\00", align 1
@.str.4.38 = private unnamed_addr constant [5 x i8] c".tif\00", align 1
@.str.5.39 = private unnamed_addr constant [5 x i8] c".mat\00", align 1
@__const.halide_debug_to_file.header = private unnamed_addr constant [129 x i8] c"MATLAB 5.0 MAT-file, produced by Halide                                                                                     \00\01IM\00", align 1
@.str.6.40 = private unnamed_addr constant [53 x i8] c"Can't debug_to_file to a .mat file greater than 4GB\0A\00", align 1
@_ZN6Halide7Runtime8Internal16memoization_lockE = linkonce global %struct.halide_mutex zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal13cache_entriesE = linkonce global [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*] zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal18most_recently_usedE = linkonce local_unnamed_addr global %"struct.Halide::Runtime::Internal::CacheEntry"* null, align 8
@_ZN6Halide7Runtime8Internal19least_recently_usedE = linkonce local_unnamed_addr global %"struct.Halide::Runtime::Internal::CacheEntry"* null, align 8
@_ZN6Halide7Runtime8Internal14max_cache_sizeE = linkonce local_unnamed_addr global i64 1048576, align 8
@_ZN6Halide7Runtime8Internal18current_cache_sizeE = linkonce local_unnamed_addr global i64 0, align 8
@.str.2.42 = private unnamed_addr constant [133 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/cache.cpp:284 halide_abort_if_false() failed: prev_hash_entry != nullptr\0A\00", align 1
@.str.3.43 = private unnamed_addr constant [136 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/cache.cpp:373 halide_abort_if_false() failed: entry->more_recent != nullptr\0A\00", align 1
@.str.4.44 = private unnamed_addr constant [135 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/cache.cpp:377 halide_abort_if_false() failed: least_recently_used == entry\0A\00", align 1
@.str.5.45 = private unnamed_addr constant [136 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/cache.cpp:380 halide_abort_if_false() failed: entry->more_recent != nullptr\0A\00", align 1
@.str.9.46 = private unnamed_addr constant [129 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/cache.cpp:472 halide_abort_if_false() failed: no_host_pointers_equal\0A\00", align 1
@.str.12.47 = private unnamed_addr constant [130 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/cache.cpp:550 halide_abort_if_false() failed: entry->in_use_count > 0\0A\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"<nullptr>\00", align 1
@.str.1.57 = private unnamed_addr constant [5 x i8] c"-nan\00", align 1
@.str.2.58 = private unnamed_addr constant [4 x i8] c"nan\00", align 1
@.str.3.59 = private unnamed_addr constant [5 x i8] c"-inf\00", align 1
@.str.4.60 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.5.61 = private unnamed_addr constant [14 x i8] c"-0.000000e+00\00", align 1
@.str.6.62 = private unnamed_addr constant [13 x i8] c"0.000000e+00\00", align 1
@.str.7.63 = private unnamed_addr constant [10 x i8] c"-0.000000\00", align 1
@.str.8.64 = private unnamed_addr constant [9 x i8] c"0.000000\00", align 1
@.str.9.65 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.11.67 = private unnamed_addr constant [3 x i8] c"e+\00", align 1
@.str.12.68 = private unnamed_addr constant [3 x i8] c"e-\00", align 1
@.str.13.71 = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1
@.str.18.72 = private unnamed_addr constant [14 x i8] c"bad_type_code\00", align 1
@.str.17.73 = private unnamed_addr constant [7 x i8] c"handle\00", align 1
@.str.16.74 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.15.75 = private unnamed_addr constant [5 x i8] c"uint\00", align 1
@.str.14.76 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.19.77 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.20.78 = private unnamed_addr constant [8 x i8] c"nullptr\00", align 1
@.str.21.79 = private unnamed_addr constant [8 x i8] c"buffer(\00", align 1
@.str.23.82 = private unnamed_addr constant [4 x i8] c", {\00", align 1
@.str.24.83 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@_ZN6Halide7Runtime8Internal36halide_reuse_device_allocations_flagE = linkonce local_unnamed_addr global i8 1, align 1
@_ZN6Halide7Runtime8Internal21allocation_pools_lockE = linkonce global %struct.halide_mutex zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal23device_allocation_poolsE = linkonce local_unnamed_addr global %struct.halide_device_allocation_pool* null, align 8
@_ZN6Halide7Runtime8Internal17device_copy_mutexE = linkonce global %struct.halide_mutex zeroinitializer, align 8
@.str.6.88 = private unnamed_addr constant [20 x i8] c"halide_copy_to_host\00", align 1
@.str.7.89 = private unnamed_addr constant [22 x i8] c"halide_copy_to_device\00", align 1
@.str.9.90 = private unnamed_addr constant [61 x i8] c"halide_copy_to_device does not support switching interfaces\0A\00", align 1
@.str.17.91 = private unnamed_addr constant [21 x i8] c"halide_device_malloc\00", align 1
@.str.20.92 = private unnamed_addr constant [59 x i8] c"halide_device_malloc doesn't support switching interfaces\0A\00", align 1
@.str.16.93 = private unnamed_addr constant [19 x i8] c"halide_device_sync\00", align 1
@.str.21.96 = private unnamed_addr constant [19 x i8] c"halide_device_free\00", align 1
@.str.22.97 = private unnamed_addr constant [134 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/device_interface.cpp:252 halide_abort_if_false() failed: buf->device == 0\0A\00", align 1
@.str.23.98 = private unnamed_addr constant [30 x i8] c"halide_device_and_host_malloc\00", align 1
@.str.25.99 = private unnamed_addr constant [68 x i8] c"halide_device_and_host_malloc doesn't support switching interfaces\0A\00", align 1
@.str.26.100 = private unnamed_addr constant [42 x i8] c"allocating host and device memory failed\0A\00", align 1
@.str.27.101 = private unnamed_addr constant [28 x i8] c"halide_device_and_host_free\00", align 1
@.str.28.102 = private unnamed_addr constant [134 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/device_interface.cpp:317 halide_abort_if_false() failed: buf->device == 0\0A\00", align 1
@.str.29.103 = private unnamed_addr constant [38 x i8] c"halide_default_device_and_host_malloc\00", align 1
@.str.30.104 = private unnamed_addr constant [36 x i8] c"halide_default_device_and_host_free\00", align 1
@.str.31.105 = private unnamed_addr constant [26 x i8] c"halide_device_wrap_native\00", align 1
@.str.32.106 = private unnamed_addr constant [64 x i8] c"halide_device_wrap_native doesn't support switching interfaces\0A\00", align 1
@.str.33.107 = private unnamed_addr constant [28 x i8] c"halide_device_detach_native\00", align 1
@.str.34.108 = private unnamed_addr constant [134 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/device_interface.cpp:403 halide_abort_if_false() failed: buf->device == 0\0A\00", align 1
@.str.35 = private unnamed_addr constant [36 x i8] c"halide_default_device_detach_native\00", align 1
@.str.41 = private unnamed_addr constant [64 x i8] c"halide_buffer_copy does not support switching device interfaces\00", align 1
@.str.58 = private unnamed_addr constant [44 x i8] c"device_interface does not support cropping\0A\00", align 1
@.str.59 = private unnamed_addr constant [43 x i8] c"device_interface does not support slicing\0A\00", align 1
@.str.60 = private unnamed_addr constant [52 x i8] c"destination buffer already has a device allocation\0A\00", align 1
@.str.61 = private unnamed_addr constant [48 x i8] c"src and dst must have identical dimensionality\0A\00", align 1
@.str.64 = private unnamed_addr constant [52 x i8] c"dst must have exactly one fewer dimension than src\0A\00", align 1
@.str.111 = private unnamed_addr constant [41 x i8] c"Bounds inference call to external stage \00", align 1
@.str.1.112 = private unnamed_addr constant [27 x i8] c" returned non-zero value: \00", align 1
@.str.2.113 = private unnamed_addr constant [24 x i8] c"Call to external stage \00", align 1
@.str.3.114 = private unnamed_addr constant [18 x i8] c"Bounds given for \00", align 1
@.str.4.115 = private unnamed_addr constant [5 x i8] c" in \00", align 1
@.str.5.116 = private unnamed_addr constant [8 x i8] c" (from \00", align 1
@.str.6.117 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@.str.7.118 = private unnamed_addr constant [38 x i8] c") do not cover required region (from \00", align 1
@.str.8.119 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.9.120 = private unnamed_addr constant [11 x i8] c" has type \00", align 1
@.str.10.121 = private unnamed_addr constant [38 x i8] c" but type of the buffer passed in is \00", align 1
@.str.11.122 = private unnamed_addr constant [31 x i8] c" requires a buffer of exactly \00", align 1
@.str.12.123 = private unnamed_addr constant [43 x i8] c" dimensions, but the buffer passed in has \00", align 1
@.str.13.124 = private unnamed_addr constant [12 x i8] c" dimensions\00", align 1
@.str.14.125 = private unnamed_addr constant [17 x i8] c" is accessed at \00", align 1
@.str.15.126 = private unnamed_addr constant [28 x i8] c", which is before the min (\00", align 1
@.str.16.127 = private unnamed_addr constant [16 x i8] c") in dimension \00", align 1
@.str.17.128 = private unnamed_addr constant [28 x i8] c", which is beyond the max (\00", align 1
@.str.18.129 = private unnamed_addr constant [29 x i8] c"Total allocation for buffer \00", align 1
@.str.19.130 = private unnamed_addr constant [5 x i8] c" is \00", align 1
@.str.20.131 = private unnamed_addr constant [37 x i8] c", which exceeds the maximum size of \00", align 1
@.str.21.132 = private unnamed_addr constant [24 x i8] c"The extents for buffer \00", align 1
@.str.22.133 = private unnamed_addr constant [12 x i8] c" dimension \00", align 1
@.str.23.134 = private unnamed_addr constant [15 x i8] c" is negative (\00", align 1
@.str.24.135 = private unnamed_addr constant [31 x i8] c"Product of extents for buffer \00", align 1
@.str.25.136 = private unnamed_addr constant [29 x i8] c"Applying the constraints on \00", align 1
@.str.26.137 = private unnamed_addr constant [54 x i8] c" to the required region made it smaller in dimension \00", align 1
@.str.27.138 = private unnamed_addr constant [3 x i8] c". \00", align 1
@.str.28.139 = private unnamed_addr constant [16 x i8] c"Required size: \00", align 1
@.str.29.140 = private unnamed_addr constant [19 x i8] c"Constrained size: \00", align 1
@.str.30.141 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.31.142 = private unnamed_addr constant [22 x i8] c"Constraint violated: \00", align 1
@.str.32.143 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.33.144 = private unnamed_addr constant [6 x i8] c") == \00", align 1
@.str.34.145 = private unnamed_addr constant [11 x i8] c"Parameter \00", align 1
@.str.35.146 = private unnamed_addr constant [23 x i8] c" but must be at least \00", align 1
@.str.36 = private unnamed_addr constant [22 x i8] c" but must be at most \00", align 1
@.str.37 = private unnamed_addr constant [47 x i8] c"Out of memory (halide_malloc returned nullptr)\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"Buffer argument \00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c" is nullptr\00", align 1
@.str.40 = private unnamed_addr constant [25 x i8] c"Failed to dump function \00", align 1
@.str.41.147 = private unnamed_addr constant [10 x i8] c" to file \00", align 1
@.str.42 = private unnamed_addr constant [13 x i8] c" with error \00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"The host pointer of \00", align 1
@.str.44 = private unnamed_addr constant [22 x i8] c" is not aligned to a \00", align 1
@.str.45 = private unnamed_addr constant [17 x i8] c" bytes boundary.\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"The buffer \00", align 1
@.str.47 = private unnamed_addr constant [53 x i8] c" is dirty on device, but this pipeline was compiled \00", align 1
@.str.48 = private unnamed_addr constant [43 x i8] c"with no support for device to host copies.\00", align 1
@.str.49 = private unnamed_addr constant [55 x i8] c" is null, but the pipeline will access it on the host.\00", align 1
@.str.50.148 = private unnamed_addr constant [30 x i8] c"The folded storage dimension \00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c" of \00", align 1
@.str.52 = private unnamed_addr constant [36 x i8] c" was accessed out of order by loop \00", align 1
@.str.53 = private unnamed_addr constant [23 x i8] c"Cannot fold dimension \00", align 1
@.str.54 = private unnamed_addr constant [36 x i8] c" because an extern stage accesses [\00", align 1
@.str.55 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"],\00", align 1
@.str.57 = private unnamed_addr constant [47 x i8] c" which is outside the range currently valid: [\00", align 1
@.str.58.149 = private unnamed_addr constant [3 x i8] c"].\00", align 1
@.str.59.150 = private unnamed_addr constant [47 x i8] c" which wraps around the boundary of the fold, \00", align 1
@.str.60.151 = private unnamed_addr constant [30 x i8] c"which occurs at multiples of \00", align 1
@.str.61.152 = private unnamed_addr constant [18 x i8] c"The fold factor (\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c") of dimension \00", align 1
@.str.63 = private unnamed_addr constant [61 x i8] c" is too small to store the required region accessed by loop \00", align 1
@.str.64.153 = private unnamed_addr constant [3 x i8] c").\00", align 1
@.str.65 = private unnamed_addr constant [22 x i8] c"Requirement Failed: (\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.67 = private unnamed_addr constant [59 x i8] c"A schedule specialized with specialize_fail() was chosen: \00", align 1
@.str.68 = private unnamed_addr constant [55 x i8] c"Buffer has a non-zero device but no device interface.\0A\00", align 1
@.str.69 = private unnamed_addr constant [57 x i8] c"Buffer has a non-null device_interface but device is 0.\0A\00", align 1
@.str.70 = private unnamed_addr constant [49 x i8] c"Buffer has both host and device dirty bits set.\0A\00", align 1
@.str.71 = private unnamed_addr constant [26 x i8] c"Buffer pointer passed to \00", align 1
@.str.72 = private unnamed_addr constant [11 x i8] c" is null.\0A\00", align 1
@.str.73 = private unnamed_addr constant [32 x i8] c"The explicit allocation bound (\00", align 1
@.str.74 = private unnamed_addr constant [45 x i8] c" is too small to store the required region (\00", align 1
@.str.75 = private unnamed_addr constant [77 x i8] c"Buffer could not be cropped (runtime error or unimplemented device option).\0A\00", align 1
@.str.29.163 = private unnamed_addr constant [35 x i8] c"Printer buffer allocation failed.\0A\00", align 1
@.str.7.164 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.8.165 = private unnamed_addr constant [14 x i8] c" total time: \00", align 1
@.str.9.166 = private unnamed_addr constant [4 x i8] c" ms\00", align 1
@.str.10.167 = private unnamed_addr constant [12 x i8] c"  samples: \00", align 1
@.str.11.168 = private unnamed_addr constant [9 x i8] c"  runs: \00", align 1
@.str.12.169 = private unnamed_addr constant [13 x i8] c"  time/run: \00", align 1
@.str.13.170 = private unnamed_addr constant [5 x i8] c" ms\0A\00", align 1
@.str.14.171 = private unnamed_addr constant [24 x i8] c" average threads used: \00", align 1
@.str.15.172 = private unnamed_addr constant [20 x i8] c" heap allocations: \00", align 1
@.str.16.173 = private unnamed_addr constant [20 x i8] c"  peak heap usage: \00", align 1
@.str.17.174 = private unnamed_addr constant [8 x i8] c" bytes\0A\00", align 1
@.str.18.175 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.19.176 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.20.177 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.21.178 = private unnamed_addr constant [3 x i8] c"ms\00", align 1
@.str.22.179 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.23.180 = private unnamed_addr constant [3 x i8] c"%)\00", align 1
@.str.24.181 = private unnamed_addr constant [10 x i8] c"threads: \00", align 1
@.str.25.182 = private unnamed_addr constant [8 x i8] c" peak: \00", align 1
@.str.26.183 = private unnamed_addr constant [7 x i8] c" num: \00", align 1
@.str.27.184 = private unnamed_addr constant [7 x i8] c" avg: \00", align 1
@.str.28.185 = private unnamed_addr constant [9 x i8] c" stack: \00", align 1
@_ZZ25halide_profiler_get_stateE1s = internal global %struct.halide_profiler_state { %struct.halide_mutex zeroinitializer, i32 1, i32 0, i32 0, i32 0, %struct.halide_profiler_pipeline_stats* null, void (i32*, i32*)* null, %struct.halide_thread* null }, align 8
@.str.186 = private unnamed_addr constant [135 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/profiler_common.cpp:246 halide_abort_if_false() failed: p_stats != nullptr\0A\00", align 1
@.str.1.187 = private unnamed_addr constant [135 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/profiler_common.cpp:273 halide_abort_if_false() failed: p_stats != nullptr\0A\00", align 1
@.str.2.188 = private unnamed_addr constant [129 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/profiler_common.cpp:274 halide_abort_if_false() failed: func_id >= 0\0A\00", align 1
@.str.3.189 = private unnamed_addr constant [145 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/profiler_common.cpp:275 halide_abort_if_false() failed: func_id < p_stats->num_funcs\0A\00", align 1
@.str.4.190 = private unnamed_addr constant [135 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/profiler_common.cpp:309 halide_abort_if_false() failed: p_stats != nullptr\0A\00", align 1
@.str.5.191 = private unnamed_addr constant [129 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/profiler_common.cpp:310 halide_abort_if_false() failed: func_id >= 0\0A\00", align 1
@.str.6.192 = private unnamed_addr constant [145 x i8] c"/home/arnoor2/Hydride/Hydride/frontends/halide/src/runtime/profiler_common.cpp:311 halide_abort_if_false() failed: func_id < p_stats->num_funcs\0A\00", align 1
@_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE = linkonce local_unnamed_addr global i32 (i32, i64*)* @halide_default_can_use_target_features, align 8
@_ZN6Halide7Runtime8Internal36halide_cpu_features_initialized_lockE = linkonce global %struct.halide_mutex zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal31halide_cpu_features_initializedE = linkonce local_unnamed_addr global i8 0, align 1
@_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE = linkonce global [4 x i64] zeroinitializer, align 8
@.str.197 = private unnamed_addr constant [81 x i8] c"Internal error: wrong structure size passed to halide_can_use_target_features()\0A\00", align 1
@0 = private constant [6 x i64*] zeroinitializer
@str = private constant [4 x i8] c"IMG\00", align 32
@1 = private constant [6 x i64*] zeroinitializer
@str.200 = private constant [7 x i8] c"Filter\00", align 32
@2 = private constant [6 x i64*] zeroinitializer
@str.201 = private constant [7 x i8] c"Output\00", align 32
@3 = private constant [3 x %struct.halide_filter_argument_t] [%struct.halide_filter_argument_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i32 0, i32 0), i32 1, i32 3, %struct.halide_type_t { i8 0, i8 32, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** getelementptr inbounds ([6 x i64*], [6 x i64*]* @0, i32 0, i32 0) }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i32 0, i32 0), i32 1, i32 3, %struct.halide_type_t { i8 0, i8 32, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** getelementptr inbounds ([6 x i64*], [6 x i64*]* @1, i32 0, i32 0) }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i32 0, i32 0), i32 2, i32 3, %struct.halide_type_t { i8 0, i8 32, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** getelementptr inbounds ([6 x i64*], [6 x i64*]* @2, i32 0, i32 0) }]
@str.202 = private constant [59 x i8] c"x86-64-linux-avx-avx2-avx512-avx512_skylake-f16c-fma-sse41\00", align 64
@str.203 = private constant [12 x i8] c"convolution\00", align 32
@convolution_metadata_storage = private constant %struct.halide_filter_metadata_t { i32 1, i32 3, %struct.halide_filter_argument_t* getelementptr inbounds ([3 x %struct.halide_filter_argument_t], [3 x %struct.halide_filter_argument_t]* @3, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @str.202, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.203, i32 0, i32 0) }
@str.204 = private constant [20 x i8] c"Input buffer Filter\00", align 32
@str.205 = private constant [17 x i8] c"Input buffer IMG\00", align 32
@str.206 = private constant [21 x i8] c"Output buffer Output\00", align 32
@str.207 = private constant [16 x i8] c"Filter.stride.0\00", align 32
@str.208 = private constant [2 x i8] c"1\00", align 32
@str.209 = private constant [13 x i8] c"IMG.stride.0\00", align 32
@str.210 = private constant [16 x i8] c"Output.stride.0\00", align 32
@switch.table.halide_type_to_string = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.76, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.75, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.74, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17.73, i64 0, i64 0)], align 8

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_malloc(i8* %user_context, i64 %x) #0 {
entry:
  %add = add i64 %x, 64
  %call1 = tail call i8* @malloc(i64 %add) #15
  %cmp = icmp eq i8* %call1, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %0 = ptrtoint i8* %call1 to i64
  %sub = add i64 %0, 71
  %and = and i64 %sub, -64
  %1 = inttoptr i64 %and to i8*
  %2 = inttoptr i64 %and to i8**
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 -1
  store i8* %call1, i8** %arrayidx, align 8, !tbaa !10
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i8* [ %1, %if.end ], [ null, %entry ]
  ret i8* %retval.0
}

declare i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_default_free(i8* %user_context, i8* %ptr) #0 {
entry:
  %arrayidx = getelementptr inbounds i8, i8* %ptr, i64 -8
  %0 = bitcast i8* %arrayidx to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !10
  tail call void @free(i8* %1) #15
  ret void
}

declare void @free(i8*) local_unnamed_addr #1

; Function Attrs: nounwind willreturn mustprogress
define weak i8* (i8*, i64)* @halide_set_custom_malloc(i8* (i8*, i64)* %user_malloc) local_unnamed_addr #2 {
entry:
  %0 = load i8* (i8*, i64)*, i8* (i8*, i64)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 8, !tbaa !10
  store i8* (i8*, i64)* %user_malloc, i8* (i8*, i64)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 8, !tbaa !10
  ret i8* (i8*, i64)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak void (i8*, i8*)* @halide_set_custom_free(void (i8*, i8*)* %user_free) local_unnamed_addr #2 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 8, !tbaa !10
  store void (i8*, i8*)* %user_free, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 8, !tbaa !10
  ret void (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_malloc(i8* %user_context, i64 %x) local_unnamed_addr #0 {
entry:
  %0 = load i8* (i8*, i64)*, i8* (i8*, i64)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 8, !tbaa !10
  %call = tail call i8* %0(i8* %user_context, i64 %x) #15
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak void @halide_free(i8* %user_context, i8* %ptr) local_unnamed_addr #0 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 8, !tbaa !10
  tail call void %0(i8* %user_context, i8* %ptr) #15
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_default_error(i8* %user_context, i8* %msg) #0 {
entry:
  %buf = alloca [4096 x i8], align 1
  %0 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %0) #10
  %add.ptr = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 4094
  %call = call i8* @halide_string_to_string(i8* nonnull %0, i8* nonnull %add.ptr, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #15
  %add.ptr2 = getelementptr inbounds i8, i8* %call, i64 4094
  %call3 = call i8* @halide_string_to_string(i8* %call, i8* nonnull %add.ptr2, i8* %msg) #15
  %arrayidx = getelementptr inbounds i8, i8* %call3, i64 -1
  %1 = load i8, i8* %arrayidx, align 1, !tbaa !14
  %cmp.not = icmp eq i8 %1, 10
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8 10, i8* %call3, align 1, !tbaa !14
  %arrayidx5 = getelementptr inbounds i8, i8* %call3, i64 1
  store i8 0, i8* %arrayidx5, align 1, !tbaa !14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %dst.0 = phi i8* [ %arrayidx5, %if.then ], [ %call3, %entry ]
  %sub.ptr.lhs.cast = ptrtoint i8* %dst.0 to i64
  %sub.ptr.rhs.cast = ptrtoint [4096 x i8]* %buf to i64
  %sub.ptr.sub = sub i64 1, %sub.ptr.rhs.cast
  %add = add i64 %sub.ptr.sub, %sub.ptr.lhs.cast
  %call9 = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %0, i64 %add) #15
  call void @halide_print(i8* %user_context, i8* nonnull %0) #15
  call void @abort() #15
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %0) #10
  ret void
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @abort() local_unnamed_addr #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind mustprogress
define weak void @halide_error(i8* %user_context, i8* %msg) local_unnamed_addr #0 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal13error_handlerE, align 8, !tbaa !10
  tail call void %0(i8* %user_context, i8* %msg) #15
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void (i8*, i8*)* @halide_set_error_handler(void (i8*, i8*)* %handler) local_unnamed_addr #2 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal13error_handlerE, align 8, !tbaa !10
  store void (i8*, i8*)* %handler, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal13error_handlerE, align 8, !tbaa !10
  ret void (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_print(i8* %user_context, i8* %msg) local_unnamed_addr #0 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal12custom_printE, align 8, !tbaa !10
  tail call void %0(i8* %user_context, i8* %msg) #15
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void (i8*, i8*)* @halide_set_custom_print(void (i8*, i8*)* %print) local_unnamed_addr #2 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal12custom_printE, align 8, !tbaa !10
  store void (i8*, i8*)* %print, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal12custom_printE, align 8, !tbaa !10
  ret void (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_start_clock(i8* %user_context) local_unnamed_addr #0 {
entry:
  %0 = load i8, i8* @halide_reference_clock_inited, align 1, !tbaa !15, !range !17
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i32 (i32, ...) @syscall(i32 228, i32 0, %struct.timespec* nonnull @halide_reference_clock) #15
  store i8 1, i8* @halide_reference_clock_inited, align 1, !tbaa !15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 0
}

declare i32 @syscall(i32, ...) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i64 @halide_current_time_ns(i8* %user_context) local_unnamed_addr #0 {
entry:
  %now = alloca <2 x i64>, align 16
  %0 = bitcast <2 x i64>* %now to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #10
  %call = call i32 (i32, ...) @syscall(i32 228, i32 0, <2 x i64>* nonnull %now) #15
  %1 = load <2 x i64>, <2 x i64>* %now, align 16, !tbaa !18
  %2 = load <2 x i64>, <2 x i64>* bitcast (%struct.timespec* @halide_reference_clock to <2 x i64>*), align 8, !tbaa !18
  %3 = sub <2 x i64> %1, %2
  %4 = extractelement <2 x i64> %3, i32 0
  %mul = mul nsw i64 %4, 1000000000
  %5 = extractelement <2 x i64> %3, i32 1
  %add = add nsw i64 %mul, %5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #10
  ret i64 %add
}

; Function Attrs: nounwind mustprogress
define weak void @halide_sleep_ms(i8* %user_context, i32 %ms) local_unnamed_addr #0 {
entry:
  %mul = mul nsw i32 %ms, 1000
  %call = tail call i32 @usleep(i32 %mul) #15
  ret void
}

declare i32 @usleep(i32) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_default_print(i8* %user_context, i8* %str) #0 {
entry:
  %call = tail call i64 @strlen(i8* %str) #15
  %call1 = tail call i64 @write(i32 1, i8* %str, i64 %call) #15
  ret void
}

declare i64 @strlen(i8*) local_unnamed_addr #1

declare i64 @write(i32, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i32 @halide_host_cpu_count() local_unnamed_addr #0 {
entry:
  %call = tail call i64 @sysconf(i32 84) #15
  %conv = trunc i64 %call to i32
  ret i32 %conv
}

declare i64 @sysconf(i32) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_thread_yield() local_unnamed_addr #0 {
entry:
  %call = tail call i32 @sched_yield() #15
  ret void
}

declare i32 @sched_yield() local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_task(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) #0 {
entry:
  %call = tail call i32 %f(i8* %user_context, i32 %idx, i8* %closure) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_loop_task(i8* %user_context, i32 (i8*, i32, i32, i8*, i8*)* %f, i32 %min, i32 %extent, i8* %closure, i8* %task_parent) #0 {
entry:
  %call = tail call i32 %f(i8* %user_context, i32 %min, i32 %extent, i8* %closure, i8* %task_parent) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_par_for(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) #0 {
entry:
  %job = alloca %"struct.Halide::Runtime::Internal::work", align 8
  %cmp = icmp slt i32 %size, 1
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %"struct.Halide::Runtime::Internal::work"* %job to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #10
  %fn = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 0
  store i32 (i8*, i32, i32, i8*, i8*)* null, i32 (i8*, i32, i32, i8*, i8*)** %fn, align 8, !tbaa !20
  %min2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 5
  store i32 %min, i32* %min2, align 4, !tbaa !24
  %extent = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 6
  store i32 %size, i32* %extent, align 8, !tbaa !25
  %serial = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 8
  store i8 0, i8* %serial, align 8, !tbaa !26
  %semaphores = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 3
  store %struct.halide_semaphore_acquire_t* null, %struct.halide_semaphore_acquire_t** %semaphores, align 8, !tbaa !27
  %num_semaphores = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 4
  store i32 0, i32* %num_semaphores, align 8, !tbaa !28
  %closure8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 1
  store i8* %closure, i8** %closure8, align 8, !tbaa !29
  %min_threads = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 7
  store i32 0, i32* %min_threads, align 4, !tbaa !30
  %name = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 2
  store i8* null, i8** %name, align 8, !tbaa !31
  %task_fn = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 1
  store i32 (i8*, i32, i8*)* %f, i32 (i8*, i32, i8*)** %task_fn, align 8, !tbaa !32
  %user_context11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 7
  store i8* %user_context, i8** %user_context11, align 8, !tbaa !33
  %exit_status = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 9
  store i32 0, i32* %exit_status, align 4, !tbaa !34
  %active_workers = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 8
  store i32 0, i32* %active_workers, align 8, !tbaa !35
  %next_semaphore = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 10
  store i32 0, i32* %next_semaphore, align 8, !tbaa !36
  %owner_is_sleeping = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 11
  store i8 0, i8* %owner_is_sleeping, align 4, !tbaa !37
  %siblings = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 3
  store %"struct.Halide::Runtime::Internal::work"* %job, %"struct.Halide::Runtime::Internal::work"** %siblings, align 8, !tbaa !38
  %sibling_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 4
  store i32 0, i32* %sibling_count, align 8, !tbaa !39
  %parent_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 5
  store %"struct.Halide::Runtime::Internal::work"* null, %"struct.Halide::Runtime::Internal::work"** %parent_job, align 8, !tbaa !40
  call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  call void @_ZN6Halide7Runtime8Internal27enqueue_work_already_lockedEiPNS1_4workES3_(i32 1, %"struct.Halide::Runtime::Internal::work"* nonnull %job, %"struct.Halide::Runtime::Internal::work"* null) #16
  call void @_ZN6Halide7Runtime8Internal28worker_thread_already_lockedEPNS1_4workE(%"struct.Halide::Runtime::Internal::work"* nonnull %job) #16
  call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %1 = load i32, i32* %exit_status, align 4, !tbaa !34
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #10
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
define weak void @halide_mutex_lock(%struct.halide_mutex* %mutex) local_unnamed_addr #4 {
entry:
  %control.i.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", align 8
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %mutex, i64 0, i32 0, i64 0
  %0 = cmpxchg weak i64* %state.i, i64 0, i64 1 acquire monotonic
  %1 = extractvalue { i64, i1 } %0, 1
  br i1 %1, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex4lockEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %2 = load atomic i64, i64* %state.i monotonic, align 8
  %3 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i to i8*
  %4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0, i32 0
  %lock_state2.i.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0
  %6 = ptrtoint %struct.halide_mutex* %mutex to i64
  br label %while.cond.outer.i.i

while.cond.outer.i.i:                             ; preds = %while.cond.outer.i.i.backedge, %if.then.i
  %expected.0.ph.i.i = phi i64 [ %2, %if.then.i ], [ %expected.0.ph.i.i.be, %while.cond.outer.i.i.backedge ]
  %spinner.sroa.0.0.ph.i.i = phi i32 [ 40, %if.then.i ], [ %spinner.sroa.0.0.ph.i.i.be, %while.cond.outer.i.i.backedge ]
  %and55.i.i = and i64 %expected.0.ph.i.i, 1
  %tobool.not56.i.i = icmp eq i64 %and55.i.i, 0
  br i1 %tobool.not56.i.i, label %if.then.i.i, label %if.end4.i.i

if.then.i.i:                                      ; preds = %while.cond.outer.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i
  %expected.057.i.i = phi i64 [ %9, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i ], [ %expected.0.ph.i.i, %while.cond.outer.i.i ]
  %or.i.i = or i64 %expected.057.i.i, 1
  %7 = cmpxchg weak i64* %state.i, i64 %expected.057.i.i, i64 %or.i.i acquire monotonic
  %8 = extractvalue { i64, i1 } %7, 1
  br i1 %8, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex4lockEv.exit, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i: ; preds = %if.then.i.i
  %9 = extractvalue { i64, i1 } %7, 0
  %and.i.i = and i64 %9, 1
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end4.i.i.loopexit

if.end4.i.i.loopexit:                             ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i
  %10 = extractvalue { i64, i1 } %7, 0
  br label %if.end4.i.i

if.end4.i.i:                                      ; preds = %if.end4.i.i.loopexit, %while.cond.outer.i.i
  %expected.0.lcssa.i.i = phi i64 [ %expected.0.ph.i.i, %while.cond.outer.i.i ], [ %10, %if.end4.i.i.loopexit ]
  %cmp.i.i.i = icmp sgt i32 %spinner.sroa.0.0.ph.i.i, 0
  br i1 %cmp.i.i.i, label %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i, label %if.end8.i.i

_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i: ; preds = %if.end4.i.i
  %cmp4.i.not.i.i = icmp eq i32 %spinner.sroa.0.0.ph.i.i, 1
  br i1 %cmp4.i.not.i.i, label %if.end8.i.i, label %if.then6.i.i

if.then6.i.i:                                     ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i
  %dec.i.i.i = add nsw i32 %spinner.sroa.0.0.ph.i.i, -1
  call void @halide_thread_yield() #15
  %11 = load atomic i64, i64* %state.i monotonic, align 8
  br label %while.cond.outer.i.i.backedge

if.end8.i.i:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i, %if.end4.i.i
  %spinner.sroa.0.152.i.i = phi i32 [ 0, %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i ], [ %spinner.sroa.0.0.ph.i.i, %if.end4.i.i ]
  %and9.i.i = and i64 %expected.0.lcssa.i.i, 2
  %cmp.i.i = icmp eq i64 %and9.i.i, 0
  br i1 %cmp.i.i, label %if.then10.i.i, label %if.end19.i.i

if.then10.i.i:                                    ; preds = %if.end8.i.i
  %or12.i.i = or i64 %expected.0.lcssa.i.i, 2
  %12 = cmpxchg weak i64* %state.i, i64 %expected.0.lcssa.i.i, i64 %or12.i.i monotonic monotonic
  %13 = extractvalue { i64, i1 } %12, 1
  br i1 %13, label %if.end19.i.i, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i: ; preds = %if.then10.i.i
  %14 = extractvalue { i64, i1 } %12, 0
  br label %while.cond.outer.i.i.backedge

if.end19.i.i:                                     ; preds = %if.then10.i.i, %if.end8.i.i
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !41
  store i64* %state.i, i64** %lock_state2.i.i.i, align 8, !tbaa !43
  %call21.i.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control4parkEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %5, i64 %6) #15
  %cmp22.i.i = icmp eq i64 %call21.i.i, %6
  br i1 %cmp22.i.i, label %cleanup30.critedge.i.i, label %if.end24.i.i

if.end24.i.i:                                     ; preds = %if.end19.i.i
  %15 = load atomic i64, i64* %state.i monotonic, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #10
  br label %while.cond.outer.i.i.backedge

while.cond.outer.i.i.backedge:                    ; preds = %if.end24.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i, %if.then6.i.i
  %expected.0.ph.i.i.be = phi i64 [ %14, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i ], [ %15, %if.end24.i.i ], [ %11, %if.then6.i.i ]
  %spinner.sroa.0.0.ph.i.i.be = phi i32 [ %spinner.sroa.0.152.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i ], [ 40, %if.end24.i.i ], [ %dec.i.i.i, %if.then6.i.i ]
  br label %while.cond.outer.i.i

cleanup30.critedge.i.i:                           ; preds = %if.end19.i.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #10
  br label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex4lockEv.exit

_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex4lockEv.exit: ; preds = %if.then.i.i, %cleanup30.critedge.i.i, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal27enqueue_work_already_lockedEiPNS1_4workES3_(i32 %num_jobs, %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"* %task_parent) local_unnamed_addr #0 {
entry:
  %0 = load i8, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 15), align 1, !tbaa !45, !range !17
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %land.rhs.i, label %if.end4

land.rhs.i:                                       ; preds = %entry, %while.body.i
  %bytes.011.i = phi i8* [ %incdec.ptr.i, %while.body.i ], [ bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), %entry ]
  %1 = load i8, i8* %bytes.011.i, align 1, !tbaa !14
  %cmp2.i = icmp eq i8 %1, 0
  br i1 %cmp2.i, label %while.body.i, label %do.body.i

while.body.i:                                     ; preds = %land.rhs.i
  %incdec.ptr.i = getelementptr inbounds i8, i8* %bytes.011.i, i64 1
  %exitcond.not.i = icmp eq i8* %incdec.ptr.i, bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* select (i1 icmp ugt (i8* bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1) to i8*), i8* getelementptr (i8, i8* bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i64 1)), %"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1), %"struct.Halide::Runtime::Internal::work_queue_t"* bitcast (i8* getelementptr (i8, i8* bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i64 1) to %"struct.Halide::Runtime::Internal::work_queue_t"*)) to i8*)
  br i1 %exitcond.not.i, label %do.body.i, label %land.rhs.i, !llvm.loop !49

do.body.i:                                        ; preds = %while.body.i, %land.rhs.i
  %bytes.0.lcssa.i = phi i8* [ %bytes.011.i, %land.rhs.i ], [ bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* select (i1 icmp ugt (i8* bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1) to i8*), i8* getelementptr (i8, i8* bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i64 1)), %"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1), %"struct.Halide::Runtime::Internal::work_queue_t"* bitcast (i8* getelementptr (i8, i8* bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i64 1) to %"struct.Halide::Runtime::Internal::work_queue_t"*)) to i8*), %while.body.i ]
  %cmp3.i = icmp eq i8* %bytes.0.lcssa.i, bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1) to i8*)
  br i1 %cmp3.i, label %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit, label %if.then.i

if.then.i:                                        ; preds = %do.body.i
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([193 x i8], [193 x i8]* @.str.6, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit

_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit: ; preds = %if.then.i, %do.body.i
  %2 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  %tobool1.not = icmp eq i32 %2, 0
  br i1 %tobool1.not, label %if.then2, label %if.end

if.then2:                                         ; preds = %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit
  %call = tail call i32 @_ZN6Halide7Runtime8Internal27default_desired_num_threadsEv() #16
  br label %if.end

if.end:                                           ; preds = %if.then2, %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit
  %3 = phi i32 [ %call, %if.then2 ], [ %2, %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit ]
  %4 = icmp sgt i32 %3, 1
  %spec.select.i = select i1 %4, i32 %3, i32 1
  %5 = icmp slt i32 %spec.select.i, 256
  %call3176 = select i1 %5, i32 %spec.select.i, i32 256
  store i32 %call3176, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  store i8 1, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 15), align 1, !tbaa !45
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry
  %cmp181 = icmp sgt i32 %num_jobs, 0
  br i1 %cmp181, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %if.end4
  %wide.trip.count = zext i32 %num_jobs to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %6 = icmp eq i32 %num_jobs, 1
  br i1 %6, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.inc.1, %for.body.preheader
  %workers_to_wake.1.lcssa.ph = phi i32 [ undef, %for.body.preheader ], [ %workers_to_wake.1.1, %for.inc.1 ]
  %add.lcssa.ph = phi i32 [ undef, %for.body.preheader ], [ %add.1, %for.inc.1 ]
  %stealable_jobs.1.lcssa.ph = phi i8 [ undef, %for.body.preheader ], [ %stealable_jobs.1.1, %for.inc.1 ]
  %job_may_block.1.lcssa.ph = phi i8 [ undef, %for.body.preheader ], [ %job_may_block.1.1, %for.inc.1 ]
  %spec.select.lcssa.ph = phi i8 [ undef, %for.body.preheader ], [ %spec.select.1, %for.inc.1 ]
  %indvars.iv193.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next194.1, %for.inc.1 ]
  %min_threads.0187.unr = phi i32 [ 0, %for.body.preheader ], [ %add.1, %for.inc.1 ]
  %job_may_block.0185.unr = phi i8 [ 0, %for.body.preheader ], [ %job_may_block.1.1, %for.inc.1 ]
  %job_has_acquires.0184.unr = phi i8 [ 0, %for.body.preheader ], [ %spec.select.1, %for.inc.1 ]
  %stealable_jobs.0183.unr = phi i8 [ 0, %for.body.preheader ], [ %stealable_jobs.1.1, %for.inc.1 ]
  %workers_to_wake.0182.unr = phi i32 [ -1, %for.body.preheader ], [ %workers_to_wake.1.1, %for.inc.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup.loopexit, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  %min_threads5.epil = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193.unr, i32 0, i32 7
  %7 = load i32, i32* %min_threads5.epil, align 4, !tbaa !30
  %cmp6.epil = icmp eq i32 %7, 0
  %add.epil = add i32 %7, %min_threads.0187.unr
  %stealable_jobs.1.epil = select i1 %cmp6.epil, i8 1, i8 %stealable_jobs.0183.unr
  %job_may_block.1.epil = select i1 %cmp6.epil, i8 %job_may_block.0185.unr, i8 1
  %num_semaphores.epil = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193.unr, i32 0, i32 4
  %8 = load i32, i32* %num_semaphores.epil, align 8, !tbaa !28
  %cmp16.not.epil = icmp eq i32 %8, 0
  %spec.select.epil = select i1 %cmp16.not.epil, i8 %job_has_acquires.0184.unr, i8 1
  %serial.epil = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193.unr, i32 0, i32 8
  %9 = load i8, i8* %serial.epil, align 8, !tbaa !26, !range !17
  %tobool22.not.epil = icmp eq i8 %9, 0
  br i1 %tobool22.not.epil, label %if.else24.epil, label %if.then23.epil

if.then23.epil:                                   ; preds = %for.body.epil
  %inc.epil = add nsw i32 %workers_to_wake.0182.unr, 1
  br label %for.cond.cleanup.loopexit

if.else24.epil:                                   ; preds = %for.body.epil
  %extent.epil = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193.unr, i32 0, i32 6
  %10 = load i32, i32* %extent.epil, align 8, !tbaa !25
  %add28.epil = add nsw i32 %10, %workers_to_wake.0182.unr
  br label %for.cond.cleanup.loopexit

for.cond.cleanup.loopexit:                        ; preds = %if.else24.epil, %if.then23.epil, %for.cond.cleanup.loopexit.unr-lcssa
  %workers_to_wake.1.lcssa = phi i32 [ %workers_to_wake.1.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %inc.epil, %if.then23.epil ], [ %add28.epil, %if.else24.epil ]
  %add.lcssa = phi i32 [ %add.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %add.epil, %if.then23.epil ], [ %add.epil, %if.else24.epil ]
  %stealable_jobs.1.lcssa = phi i8 [ %stealable_jobs.1.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %stealable_jobs.1.epil, %if.then23.epil ], [ %stealable_jobs.1.epil, %if.else24.epil ]
  %job_may_block.1.lcssa = phi i8 [ %job_may_block.1.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %job_may_block.1.epil, %if.then23.epil ], [ %job_may_block.1.epil, %if.else24.epil ]
  %spec.select.lcssa = phi i8 [ %spec.select.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %spec.select.epil, %if.then23.epil ], [ %spec.select.epil, %if.else24.epil ]
  %phi.bo = and i8 %stealable_jobs.1.lcssa, 1
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %if.end4
  %workers_to_wake.0.lcssa = phi i32 [ -1, %if.end4 ], [ %workers_to_wake.1.lcssa, %for.cond.cleanup.loopexit ]
  %stealable_jobs.0.lcssa = phi i8 [ 0, %if.end4 ], [ %phi.bo, %for.cond.cleanup.loopexit ]
  %job_has_acquires.0.lcssa = phi i8 [ 0, %if.end4 ], [ %spec.select.lcssa, %for.cond.cleanup.loopexit ]
  %job_may_block.0.lcssa = phi i8 [ 0, %if.end4 ], [ %job_may_block.1.lcssa, %for.cond.cleanup.loopexit ]
  %min_threads.0.lcssa = phi i32 [ 0, %if.end4 ], [ %add.lcssa, %for.cond.cleanup.loopexit ]
  %cmp31 = icmp eq %"struct.Halide::Runtime::Internal::work"* %task_parent, null
  br i1 %cmp31, label %if.then32, label %do.body61

for.body:                                         ; preds = %for.inc.1, %for.body.preheader.new
  %indvars.iv193 = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next194.1, %for.inc.1 ]
  %min_threads.0187 = phi i32 [ 0, %for.body.preheader.new ], [ %add.1, %for.inc.1 ]
  %job_may_block.0185 = phi i8 [ 0, %for.body.preheader.new ], [ %job_may_block.1.1, %for.inc.1 ]
  %job_has_acquires.0184 = phi i8 [ 0, %for.body.preheader.new ], [ %spec.select.1, %for.inc.1 ]
  %stealable_jobs.0183 = phi i8 [ 0, %for.body.preheader.new ], [ %stealable_jobs.1.1, %for.inc.1 ]
  %workers_to_wake.0182 = phi i32 [ -1, %for.body.preheader.new ], [ %workers_to_wake.1.1, %for.inc.1 ]
  %niter = phi i64 [ %unroll_iter, %for.body.preheader.new ], [ %niter.nsub.1, %for.inc.1 ]
  %min_threads5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193, i32 0, i32 7
  %11 = load i32, i32* %min_threads5, align 4, !tbaa !30
  %cmp6 = icmp eq i32 %11, 0
  %add = add i32 %11, %min_threads.0187
  %num_semaphores = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193, i32 0, i32 4
  %12 = load i32, i32* %num_semaphores, align 8, !tbaa !28
  %serial = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193, i32 0, i32 8
  %13 = load i8, i8* %serial, align 8, !tbaa !26, !range !17
  %tobool22.not = icmp eq i8 %13, 0
  br i1 %tobool22.not, label %if.else24, label %if.then23

if.then23:                                        ; preds = %for.body
  %inc = add nsw i32 %workers_to_wake.0182, 1
  br label %for.inc

if.else24:                                        ; preds = %for.body
  %extent = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193, i32 0, i32 6
  %14 = load i32, i32* %extent, align 8, !tbaa !25
  %add28 = add nsw i32 %14, %workers_to_wake.0182
  br label %for.inc

for.inc:                                          ; preds = %if.else24, %if.then23
  %workers_to_wake.1 = phi i32 [ %inc, %if.then23 ], [ %add28, %if.else24 ]
  %indvars.iv.next194 = or i64 %indvars.iv193, 1
  %min_threads5.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next194, i32 0, i32 7
  %15 = load i32, i32* %min_threads5.1, align 4, !tbaa !30
  %cmp6.1 = icmp eq i32 %15, 0
  %add.1 = add i32 %15, %add
  %16 = or i1 %cmp6.1, %cmp6
  %stealable_jobs.1.1 = select i1 %16, i8 1, i8 %stealable_jobs.0183
  %17 = or i32 %15, %11
  %18 = icmp eq i32 %17, 0
  %job_may_block.1.1 = select i1 %18, i8 %job_may_block.0185, i8 1
  %num_semaphores.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next194, i32 0, i32 4
  %19 = load i32, i32* %num_semaphores.1, align 8, !tbaa !28
  %20 = or i32 %19, %12
  %21 = icmp eq i32 %20, 0
  %spec.select.1 = select i1 %21, i8 %job_has_acquires.0184, i8 1
  %serial.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next194, i32 0, i32 8
  %22 = load i8, i8* %serial.1, align 8, !tbaa !26, !range !17
  %tobool22.not.1 = icmp eq i8 %22, 0
  br i1 %tobool22.not.1, label %if.else24.1, label %if.then23.1

if.then32:                                        ; preds = %for.cond.cleanup
  %23 = or i8 %job_may_block.0.lcssa, %job_has_acquires.0.lcssa
  %24 = and i8 %23, 1
  %25 = icmp eq i8 %24, 0
  %not. = xor i1 %25, true
  %add36 = zext i1 %not. to i32
  %min_threads.2 = add nsw i32 %min_threads.0.lcssa, %add36
  %26 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !52
  %cmp38180 = icmp slt i32 %26, 256
  br i1 %cmp38180, label %land.rhs, label %do.end50

land.rhs:                                         ; preds = %if.then32, %while.body
  %27 = phi i32 [ %inc45, %while.body ], [ %26, %if.then32 ]
  %28 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  %sub = add nsw i32 %28, -1
  %cmp39 = icmp slt i32 %27, %sub
  br i1 %cmp39, label %while.body, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %add40 = add nsw i32 %27, 1
  %29 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  %sub41 = sub i32 %add40, %29
  %cmp42 = icmp slt i32 %sub41, %min_threads.2
  br i1 %cmp42, label %while.body, label %do.end50

while.body:                                       ; preds = %lor.rhs, %land.rhs
  %30 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !54
  %inc43 = add nsw i32 %30, 1
  store i32 %inc43, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !54
  %call44 = tail call %struct.halide_thread* @halide_spawn_thread(void (i8*)* nonnull @_ZN6Halide7Runtime8Internal13worker_threadEPv, i8* null) #16
  %31 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !52
  %inc45 = add nsw i32 %31, 1
  store i32 %inc45, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !52
  %idxprom46 = sext i32 %31 to i64
  %arrayidx47 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 13, i64 %idxprom46
  store %struct.halide_thread* %call44, %struct.halide_thread** %arrayidx47, align 8, !tbaa !10
  %cmp38 = icmp slt i32 %31, 255
  br i1 %cmp38, label %land.rhs, label %do.end50, !llvm.loop !55

do.end50:                                         ; preds = %while.body, %lor.rhs, %if.then32
  br i1 %25, label %if.end77, label %if.then54

if.then54:                                        ; preds = %do.end50
  %32 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  %inc55 = add nsw i32 %32, 1
  store i32 %inc55, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  br label %if.end77

do.body61:                                        ; preds = %for.cond.cleanup
  %min_threads63 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %task_parent, i64 0, i32 0, i32 7
  %33 = load i32, i32* %min_threads63, align 4, !tbaa !30
  %active_workers = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %task_parent, i64 0, i32 8
  %34 = load i32, i32* %active_workers, align 8, !tbaa !35
  %mul = mul nsw i32 %34, %33
  %threads_reserved = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %task_parent, i64 0, i32 6
  %35 = load i32, i32* %threads_reserved, align 8, !tbaa !56
  %sub64 = sub nsw i32 %mul, %35
  %cmp65.not = icmp sgt i32 %min_threads.0.lcssa, %sub64
  br i1 %cmp65.not, label %if.then66, label %do.end69

if.then66:                                        ; preds = %do.body61
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([270 x i8], [270 x i8]* @.str.3, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end69

do.end69:                                         ; preds = %if.then66, %do.body61
  %36 = or i8 %job_may_block.0.lcssa, %job_has_acquires.0.lcssa
  %37 = and i8 %36, 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %if.end77, label %if.then73

if.then73:                                        ; preds = %do.end69
  %39 = load i32, i32* %threads_reserved, align 8, !tbaa !56
  %inc75 = add nsw i32 %39, 1
  store i32 %inc75, i32* %threads_reserved, align 8, !tbaa !56
  br label %if.end77

if.end77:                                         ; preds = %if.then73, %do.end69, %if.then54, %do.end50
  br i1 %cmp181, label %for.body83.lr.ph, label %for.cond.cleanup82

for.body83.lr.ph:                                 ; preds = %if.end77
  %.promoted = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !57
  %40 = zext i32 %num_jobs to i64
  %xtraiter3 = and i64 %40, 1
  %lcmp.mod4.not = icmp eq i64 %xtraiter3, 0
  br i1 %lcmp.mod4.not, label %for.body83.prol.loopexit, label %for.body83.prol

for.body83.prol:                                  ; preds = %for.body83.lr.ph
  %indvars.iv.next.prol = add nsw i64 %40, -1
  %arrayidx85.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.prol
  %next_job.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.prol, i32 2
  store %"struct.Halide::Runtime::Internal::work"* %.promoted, %"struct.Halide::Runtime::Internal::work"** %next_job.prol, align 8, !tbaa !58
  %siblings.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.prol, i32 3
  store %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"** %siblings.prol, align 8, !tbaa !38
  %sibling_count.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.prol, i32 4
  store i32 %num_jobs, i32* %sibling_count.prol, align 8, !tbaa !39
  %threads_reserved93.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.prol, i32 6
  store i32 0, i32* %threads_reserved93.prol, align 8, !tbaa !56
  br label %for.body83.prol.loopexit

for.body83.prol.loopexit:                         ; preds = %for.body83.prol, %for.body83.lr.ph
  %indvars.iv.unr = phi i64 [ %40, %for.body83.lr.ph ], [ %indvars.iv.next.prol, %for.body83.prol ]
  %arrayidx85192.unr = phi %"struct.Halide::Runtime::Internal::work"* [ %.promoted, %for.body83.lr.ph ], [ %arrayidx85.prol, %for.body83.prol ]
  %41 = icmp eq i32 %num_jobs, 1
  br i1 %41, label %for.cond80.for.cond.cleanup82_crit_edge, label %for.body83

for.cond80.for.cond.cleanup82_crit_edge:          ; preds = %for.body83, %for.body83.prol.loopexit
  store %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !57
  br label %for.cond.cleanup82

for.cond.cleanup82:                               ; preds = %for.cond80.for.cond.cleanup82_crit_edge, %if.end77
  %42 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !59
  %tobool96 = icmp ne i32 %42, 0
  %43 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8
  %44 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8
  %cmp98 = icmp slt i32 %43, %44
  %45 = or i1 %tobool96, %cmp98
  %cmp102 = icmp sgt i32 %workers_to_wake.0.lcssa, %43
  %or.cond174 = or i1 %cmp102, %45
  %storemerge = select i1 %or.cond174, i32 %44, i32 %workers_to_wake.0.lcssa
  store i32 %storemerge, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 6), align 8, !tbaa !60
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 8)) #16
  %46 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 6), align 8, !tbaa !60
  %47 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !54
  %cmp106 = icmp sgt i32 %46, %47
  br i1 %cmp106, label %if.then107, label %if.end111

for.body83:                                       ; preds = %for.body83.prol.loopexit, %for.body83
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %for.body83 ], [ %indvars.iv.unr, %for.body83.prol.loopexit ]
  %arrayidx85192 = phi %"struct.Halide::Runtime::Internal::work"* [ %arrayidx85.1, %for.body83 ], [ %arrayidx85192.unr, %for.body83.prol.loopexit ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx85 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next
  %next_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next, i32 2
  store %"struct.Halide::Runtime::Internal::work"* %arrayidx85192, %"struct.Halide::Runtime::Internal::work"** %next_job, align 8, !tbaa !58
  %siblings = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next, i32 3
  store %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"** %siblings, align 8, !tbaa !38
  %sibling_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next, i32 4
  store i32 %num_jobs, i32* %sibling_count, align 8, !tbaa !39
  %threads_reserved93 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next, i32 6
  store i32 0, i32* %threads_reserved93, align 8, !tbaa !56
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, -2
  %arrayidx85.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.1
  %next_job.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.1, i32 2
  store %"struct.Halide::Runtime::Internal::work"* %arrayidx85, %"struct.Halide::Runtime::Internal::work"** %next_job.1, align 8, !tbaa !58
  %siblings.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.1, i32 3
  store %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"** %siblings.1, align 8, !tbaa !38
  %sibling_count.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.1, i32 4
  store i32 %num_jobs, i32* %sibling_count.1, align 8, !tbaa !39
  %threads_reserved93.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next.1, i32 6
  store i32 0, i32* %threads_reserved93.1, align 8, !tbaa !56
  %cmp81.1 = icmp sgt i64 %indvars.iv, 2
  br i1 %cmp81.1, label %for.body83, label %for.cond80.for.cond.cleanup82_crit_edge, !llvm.loop !61

if.then107:                                       ; preds = %for.cond.cleanup82
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 9)) #16
  %tobool108.not = icmp eq i8 %stealable_jobs.0.lcssa, 0
  br i1 %tobool108.not, label %if.end111, label %if.then109

if.then109:                                       ; preds = %if.then107
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #16
  br label %if.end111

if.end111:                                        ; preds = %if.then109, %if.then107, %for.cond.cleanup82
  %48 = or i8 %job_may_block.0.lcssa, %job_has_acquires.0.lcssa
  %49 = and i8 %48, 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %if.end123, label %if.then115

if.then115:                                       ; preds = %if.end111
  br i1 %cmp31, label %if.else120, label %if.then117

if.then117:                                       ; preds = %if.then115
  %threads_reserved118 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %task_parent, i64 0, i32 6
  %51 = load i32, i32* %threads_reserved118, align 8, !tbaa !56
  %dec119 = add nsw i32 %51, -1
  store i32 %dec119, i32* %threads_reserved118, align 8, !tbaa !56
  br label %if.end123

if.else120:                                       ; preds = %if.then115
  %52 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  %dec121 = add nsw i32 %52, -1
  store i32 %dec121, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  br label %if.end123

if.end123:                                        ; preds = %if.else120, %if.then117, %if.end111
  ret void

if.then23.1:                                      ; preds = %for.inc
  %inc.1 = add nsw i32 %workers_to_wake.1, 1
  br label %for.inc.1

if.else24.1:                                      ; preds = %for.inc
  %extent.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next194, i32 0, i32 6
  %53 = load i32, i32* %extent.1, align 8, !tbaa !25
  %add28.1 = add nsw i32 %53, %workers_to_wake.1
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.else24.1, %if.then23.1
  %workers_to_wake.1.1 = phi i32 [ %inc.1, %if.then23.1 ], [ %add28.1, %if.else24.1 ]
  %indvars.iv.next194.1 = add nuw nsw i64 %indvars.iv193, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body, !llvm.loop !62
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal28worker_thread_already_lockedEPNS1_4workE(%"struct.Halide::Runtime::Internal::work"* %owned_job) local_unnamed_addr #0 {
entry:
  %active_workers.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 8
  %tobool.not = icmp eq %"struct.Halide::Runtime::Internal::work"* %owned_job, null
  %extent.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 0, i32 6
  %exit_status = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 9
  %parent_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 5
  %siblings56 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 3
  %owner_is_sleeping = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 11
  %next_job10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 2
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %entry
  %spin_count.0 = phi i32 [ 0, %entry ], [ %spin_count.0.be, %while.cond.backedge ]
  br i1 %tobool.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %while.cond
  %0 = load i32, i32* %extent.i, align 8, !tbaa !25
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %cond.end, label %if.then

cond.false:                                       ; preds = %while.cond
  %1 = load i8, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 14), align 8, !tbaa !63, !range !17
  %tobool1.not = icmp eq i8 %1, 0
  br i1 %tobool1.not, label %do.end.thread, label %while.end316

cond.end:                                         ; preds = %cond.true
  %2 = load i32, i32* %active_workers.i, align 8, !tbaa !35
  %tobool2.i.not = icmp eq i32 %2, 0
  br i1 %tobool2.i.not, label %while.end316, label %if.then

if.then:                                          ; preds = %cond.end, %cond.true
  %3 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !57
  %4 = load i32, i32* %exit_status, align 4, !tbaa !34
  %cmp.not = icmp eq i32 %4, 0
  br i1 %cmp.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.then
  %5 = load i32, i32* %active_workers.i, align 8, !tbaa !35
  %cmp4 = icmp eq i32 %5, 0
  br i1 %cmp4, label %while.cond6.preheader, label %do.end

while.cond6.preheader:                            ; preds = %if.then3
  %cmp7.not524 = icmp eq %"struct.Halide::Runtime::Internal::work"* %3, %owned_job
  br i1 %cmp7.not524, label %while.end, label %while.body8

while.body8:                                      ; preds = %while.cond6.preheader, %while.body8
  %job.0525 = phi %"struct.Halide::Runtime::Internal::work"* [ %6, %while.body8 ], [ %3, %while.cond6.preheader ]
  %next_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.0525, i64 0, i32 2
  %6 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job, align 8, !tbaa !58
  %cmp7.not = icmp eq %"struct.Halide::Runtime::Internal::work"* %6, %owned_job
  br i1 %cmp7.not, label %while.end.loopexit, label %while.body8, !llvm.loop !64

while.end.loopexit:                               ; preds = %while.body8
  %next_job.le = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.0525, i64 0, i32 2
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %while.cond6.preheader
  %prev_ptr.0.lcssa = phi %"struct.Halide::Runtime::Internal::work"** [ getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), %while.cond6.preheader ], [ %next_job.le, %while.end.loopexit ]
  %7 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job10, align 8, !tbaa !58
  store %"struct.Halide::Runtime::Internal::work"* %7, %"struct.Halide::Runtime::Internal::work"** %prev_ptr.0.lcssa, align 8, !tbaa !10
  store i32 0, i32* %extent.i, align 8, !tbaa !25
  br label %while.cond.backedge

if.else:                                          ; preds = %if.then
  %8 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job, align 8, !tbaa !40
  %tobool11.not = icmp eq %"struct.Halide::Runtime::Internal::work"* %8, null
  br i1 %tobool11.not, label %do.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else
  %exit_status13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %8, i64 0, i32 9
  %9 = load i32, i32* %exit_status13, align 4, !tbaa !34
  %cmp14.not = icmp eq i32 %9, 0
  br i1 %cmp14.not, label %do.end, label %if.then15

if.then15:                                        ; preds = %land.lhs.true
  store i32 %9, i32* %exit_status, align 4, !tbaa !34
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #16
  br label %while.cond.backedge

do.end:                                           ; preds = %land.lhs.true, %if.else, %if.then3
  %tobool23.not527 = icmp eq %"struct.Halide::Runtime::Internal::work"* %3, null
  br i1 %tobool23.not527, label %if.then105, label %do.end27

do.end.thread:                                    ; preds = %cond.false
  %10 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !57
  %tobool23.not527563 = icmp eq %"struct.Halide::Runtime::Internal::work"* %10, null
  br i1 %tobool23.not527563, label %if.else112, label %do.end27.us

do.end27.us:                                      ; preds = %do.end.thread, %cleanup.us
  %job.1529.us = phi %"struct.Halide::Runtime::Internal::work"* [ %29, %cleanup.us ], [ %10, %do.end.thread ]
  %prev_ptr.1528.us = phi %"struct.Halide::Runtime::Internal::work"** [ %next_job95.us, %cleanup.us ], [ getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), %do.end.thread ]
  %parent_job29.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 5
  %11 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job29.us, align 8, !tbaa !40
  %cmp30.us = icmp eq %"struct.Halide::Runtime::Internal::work"* %11, null
  br i1 %cmp30.us, label %if.then31.us, label %if.else32.us

if.else32.us:                                     ; preds = %do.end27.us
  %active_workers33.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %11, i64 0, i32 8
  %12 = load i32, i32* %active_workers33.us, align 8, !tbaa !35
  %cmp34.us = icmp eq i32 %12, 0
  %min_threads.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %11, i64 0, i32 0, i32 7
  %13 = load i32, i32* %min_threads.us, align 4, !tbaa !30
  br i1 %cmp34.us, label %if.then35.us, label %if.else38.us

if.else38.us:                                     ; preds = %if.else32.us
  %mul.us = mul nsw i32 %13, %12
  %threads_reserved42.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %11, i64 0, i32 6
  %14 = load i32, i32* %threads_reserved42.us, align 8, !tbaa !56
  %sub43.us = sub nsw i32 %mul.us, %14
  br label %if.end45.us

if.then35.us:                                     ; preds = %if.else32.us
  %threads_reserved.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %11, i64 0, i32 6
  %15 = load i32, i32* %threads_reserved.us, align 8, !tbaa !56
  %sub37.us = sub nsw i32 %13, %15
  br label %if.end45.us

if.then31.us:                                     ; preds = %do.end27.us
  %16 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !52
  %add.us = add nsw i32 %16, 1
  %17 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  %sub.us = sub i32 %add.us, %17
  br label %if.end45.us

if.end45.us:                                      ; preds = %if.then31.us, %if.then35.us, %if.else38.us
  %threads_available.0.us = phi i32 [ %sub.us, %if.then31.us ], [ %sub37.us, %if.then35.us ], [ %sub43.us, %if.else38.us ]
  %min_threads47.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 0, i32 7
  %18 = load i32, i32* %min_threads47.us, align 4, !tbaa !30
  %cmp48.not.us = icmp sge i32 %threads_available.0.us, %18
  %serial.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 0, i32 8
  %19 = load i8, i8* %serial.us, align 8, !tbaa !26, !range !17
  %tobool69.not.us = icmp eq i8 %19, 0
  br i1 %tobool69.not.us, label %if.end45.us.lor.end73.us_crit_edge, label %lor.rhs70.us

if.end45.us.lor.end73.us_crit_edge:               ; preds = %if.end45.us
  %.0 = and i1 %cmp48.not.us, true
  br label %lor.end73.us

lor.rhs70.us:                                     ; preds = %if.end45.us
  %active_workers71.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 8
  %20 = load i32, i32* %active_workers71.us, align 8, !tbaa !35
  %cmp72.us = icmp eq i32 %20, 0
  %.1 = and i1 %cmp48.not.us, %cmp72.us
  br label %lor.end73.us

lor.end73.us:                                     ; preds = %if.end45.us.lor.end73.us_crit_edge, %lor.rhs70.us
  %.phi = phi i1 [ %.0, %if.end45.us.lor.end73.us_crit_edge ], [ %.1, %lor.rhs70.us ]
  br i1 %.phi, label %if.then86.us, label %cleanup.us

if.then86.us:                                     ; preds = %lor.end73.us
  %next_semaphore.i.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 10
  %21 = load i32, i32* %next_semaphore.i.us, align 8, !tbaa !36
  %num_semaphores.i.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 0, i32 4
  %22 = load i32, i32* %num_semaphores.i.us, align 8, !tbaa !28
  %cmp14.i.us = icmp slt i32 %21, %22
  br i1 %cmp14.i.us, label %for.body.lr.ph.i.us, label %if.else127

for.body.lr.ph.i.us:                              ; preds = %if.then86.us
  %semaphores.i.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 0, i32 3
  br label %for.body.i.us

for.body.i.us:                                    ; preds = %for.inc.i.us, %for.body.lr.ph.i.us
  %23 = phi i32 [ %21, %for.body.lr.ph.i.us ], [ %inc.i.us, %for.inc.i.us ]
  %24 = load %struct.halide_semaphore_acquire_t*, %struct.halide_semaphore_acquire_t** %semaphores.i.us, align 8, !tbaa !27
  %idxprom.i.us = sext i32 %23 to i64
  %semaphore.i.us = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %24, i64 %idxprom.i.us, i32 0
  %25 = load %struct.halide_semaphore_t*, %struct.halide_semaphore_t** %semaphore.i.us, align 8, !tbaa !65
  %count.i.us = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %24, i64 %idxprom.i.us, i32 1
  %26 = load i32, i32* %count.i.us, align 8, !tbaa !67
  %call.i.us = tail call zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %25, i32 %26) #15
  br i1 %call.i.us, label %for.inc.i.us, label %cleanup.us

for.inc.i.us:                                     ; preds = %for.body.i.us
  %27 = load i32, i32* %next_semaphore.i.us, align 8, !tbaa !36
  %inc.i.us = add nsw i32 %27, 1
  store i32 %inc.i.us, i32* %next_semaphore.i.us, align 8, !tbaa !36
  %28 = load i32, i32* %num_semaphores.i.us, align 8, !tbaa !28
  %cmp.i.us = icmp slt i32 %inc.i.us, %28
  br i1 %cmp.i.us, label %for.body.i.us, label %if.else127, !llvm.loop !68

cleanup.us:                                       ; preds = %for.body.i.us, %lor.end73.us
  %next_job95.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 2
  %29 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job95.us, align 8, !tbaa !58
  %tobool23.not.us = icmp eq %"struct.Halide::Runtime::Internal::work"* %29, null
  br i1 %tobool23.not.us, label %if.then103, label %do.end27.us

do.end27:                                         ; preds = %do.end, %cleanup
  %job.1529 = phi %"struct.Halide::Runtime::Internal::work"* [ %50, %cleanup ], [ %3, %do.end ]
  %prev_ptr.1528 = phi %"struct.Halide::Runtime::Internal::work"** [ %next_job95, %cleanup ], [ getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), %do.end ]
  %parent_job29 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 5
  %30 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job29, align 8, !tbaa !40
  %cmp30 = icmp eq %"struct.Halide::Runtime::Internal::work"* %30, null
  br i1 %cmp30, label %if.then31, label %if.else32

if.then31:                                        ; preds = %do.end27
  %31 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !52
  %add = add nsw i32 %31, 1
  %32 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  %sub = sub i32 %add, %32
  br label %if.end45

if.else32:                                        ; preds = %do.end27
  %active_workers33 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %30, i64 0, i32 8
  %33 = load i32, i32* %active_workers33, align 8, !tbaa !35
  %cmp34 = icmp eq i32 %33, 0
  %min_threads = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %30, i64 0, i32 0, i32 7
  %34 = load i32, i32* %min_threads, align 4, !tbaa !30
  br i1 %cmp34, label %if.then35, label %if.else38

if.then35:                                        ; preds = %if.else32
  %threads_reserved = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %30, i64 0, i32 6
  %35 = load i32, i32* %threads_reserved, align 8, !tbaa !56
  %sub37 = sub nsw i32 %34, %35
  br label %if.end45

if.else38:                                        ; preds = %if.else32
  %mul = mul nsw i32 %34, %33
  %threads_reserved42 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %30, i64 0, i32 6
  %36 = load i32, i32* %threads_reserved42, align 8, !tbaa !56
  %sub43 = sub nsw i32 %mul, %36
  br label %if.end45

if.end45:                                         ; preds = %if.else38, %if.then35, %if.then31
  %threads_available.0 = phi i32 [ %sub, %if.then31 ], [ %sub37, %if.then35 ], [ %sub43, %if.else38 ]
  %min_threads47 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 0, i32 7
  %37 = load i32, i32* %min_threads47, align 4, !tbaa !30
  %cmp48.not = icmp slt i32 %threads_available.0, %37
  %siblings = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 3
  %38 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %siblings, align 8, !tbaa !38
  %39 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %siblings56, align 8, !tbaa !38
  %cmp57 = icmp ne %"struct.Halide::Runtime::Internal::work"* %38, %39
  %cmp60 = icmp ne i32 %37, 0
  %serial = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 0, i32 8
  %40 = load i8, i8* %serial, align 8, !tbaa !26, !range !17
  %tobool69.not = icmp eq i8 %40, 0
  br i1 %tobool69.not, label %if.end45.lor.end73_crit_edge, label %lor.rhs70

if.end45.lor.end73_crit_edge:                     ; preds = %if.end45
  %.not472.0 = xor i1 true, true
  br label %lor.end73

lor.rhs70:                                        ; preds = %if.end45
  %active_workers71 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 8
  %41 = load i32, i32* %active_workers71, align 8, !tbaa !35
  %cmp72 = icmp eq i32 %41, 0
  %.not472.1 = xor i1 %cmp72, true
  br label %lor.end73

lor.end73:                                        ; preds = %if.end45.lor.end73_crit_edge, %lor.rhs70
  %.not472.phi = phi i1 [ %.not472.0, %if.end45.lor.end73_crit_edge ], [ %.not472.1, %lor.rhs70 ]
  %.not = and i1 %cmp60, %cmp57
  %brmerge = or i1 %cmp48.not, %.not
  %brmerge473 = or i1 %brmerge, %.not472.phi
  br i1 %brmerge473, label %cleanup, label %if.then86

if.then86:                                        ; preds = %lor.end73
  %next_semaphore.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 10
  %42 = load i32, i32* %next_semaphore.i, align 8, !tbaa !36
  %num_semaphores.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 0, i32 4
  %43 = load i32, i32* %num_semaphores.i, align 8, !tbaa !28
  %cmp14.i = icmp slt i32 %42, %43
  br i1 %cmp14.i, label %for.body.lr.ph.i, label %if.else127

for.body.lr.ph.i:                                 ; preds = %if.then86
  %semaphores.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 0, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %44 = phi i32 [ %42, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i ]
  %45 = load %struct.halide_semaphore_acquire_t*, %struct.halide_semaphore_acquire_t** %semaphores.i, align 8, !tbaa !27
  %idxprom.i = sext i32 %44 to i64
  %semaphore.i = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %45, i64 %idxprom.i, i32 0
  %46 = load %struct.halide_semaphore_t*, %struct.halide_semaphore_t** %semaphore.i, align 8, !tbaa !65
  %count.i = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %45, i64 %idxprom.i, i32 1
  %47 = load i32, i32* %count.i, align 8, !tbaa !67
  %call.i = tail call zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %46, i32 %47) #15
  br i1 %call.i, label %for.inc.i, label %cleanup

for.inc.i:                                        ; preds = %for.body.i
  %48 = load i32, i32* %next_semaphore.i, align 8, !tbaa !36
  %inc.i = add nsw i32 %48, 1
  store i32 %inc.i, i32* %next_semaphore.i, align 8, !tbaa !36
  %49 = load i32, i32* %num_semaphores.i, align 8, !tbaa !28
  %cmp.i = icmp slt i32 %inc.i, %49
  br i1 %cmp.i, label %for.body.i, label %if.else127, !llvm.loop !68

cleanup:                                          ; preds = %for.body.i, %lor.end73
  %next_job95 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 2
  %50 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job95, align 8, !tbaa !58
  %tobool23.not = icmp eq %"struct.Halide::Runtime::Internal::work"* %50, null
  br i1 %tobool23.not, label %if.then103, label %do.end27

if.then103:                                       ; preds = %cleanup, %cleanup.us
  br i1 %tobool.not, label %if.else112, label %if.then105

if.then105:                                       ; preds = %do.end, %if.then103
  %inc = add nsw i32 %spin_count.0, 1
  %cmp106 = icmp slt i32 %spin_count.0, 40
  br i1 %cmp106, label %if.then107, label %if.else108

if.then107:                                       ; preds = %if.then105
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  tail call void @halide_thread_yield() #15
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  br label %while.cond.backedge

if.else108:                                       ; preds = %if.then105
  %51 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !59
  %inc109 = add nsw i32 %51, 1
  store i32 %inc109, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !59
  store i8 1, i8* %owner_is_sleeping, align 4, !tbaa !37
  tail call void @halide_cond_wait(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10), %struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  store i8 0, i8* %owner_is_sleeping, align 4, !tbaa !37
  %52 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !59
  %dec = add nsw i32 %52, -1
  store i32 %dec, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !59
  br label %while.cond.backedge

if.else112:                                       ; preds = %if.then103, %do.end.thread
  %53 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8, !tbaa !69
  %inc113 = add nsw i32 %53, 1
  store i32 %inc113, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8, !tbaa !69
  %54 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !54
  %55 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 6), align 8, !tbaa !60
  %cmp114 = icmp sgt i32 %54, %55
  br i1 %cmp114, label %if.then115, label %if.else118

if.then115:                                       ; preds = %if.else112
  %dec116 = add nsw i32 %54, -1
  store i32 %dec116, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !54
  tail call void @halide_cond_wait(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 9), %struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %56 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !54
  %inc117 = add nsw i32 %56, 1
  store i32 %inc117, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !54
  br label %if.end124

if.else118:                                       ; preds = %if.else112
  %inc119 = add nsw i32 %spin_count.0, 1
  %cmp120 = icmp slt i32 %spin_count.0, 40
  br i1 %cmp120, label %if.then121, label %if.else122

if.then121:                                       ; preds = %if.else118
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  tail call void @halide_thread_yield() #15
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  br label %if.end124

if.else122:                                       ; preds = %if.else118
  tail call void @halide_cond_wait(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 8), %struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  br label %if.end124

if.end124:                                        ; preds = %if.else122, %if.then121, %if.then115
  %spin_count.1 = phi i32 [ %spin_count.0, %if.then115 ], [ %inc119, %if.then121 ], [ %inc119, %if.else122 ]
  %57 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8, !tbaa !69
  %dec125 = add nsw i32 %57, -1
  store i32 %dec125, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8, !tbaa !69
  br label %while.cond.backedge

if.else127:                                       ; preds = %if.then86, %if.then86.us, %for.inc.i, %for.inc.i.us
  %next_semaphore.i521 = phi i32* [ %next_semaphore.i.us, %for.inc.i.us ], [ %next_semaphore.i, %for.inc.i ], [ %next_semaphore.i.us, %if.then86.us ], [ %next_semaphore.i, %if.then86 ]
  %prev_ptr.1519 = phi %"struct.Halide::Runtime::Internal::work"** [ %prev_ptr.1528.us, %for.inc.i.us ], [ %prev_ptr.1528, %for.inc.i ], [ %prev_ptr.1528.us, %if.then86.us ], [ %prev_ptr.1528, %if.then86 ]
  %job.1515 = phi %"struct.Halide::Runtime::Internal::work"* [ %job.1529.us, %for.inc.i.us ], [ %job.1529, %for.inc.i ], [ %job.1529.us, %if.then86.us ], [ %job.1529, %if.then86 ]
  store i32 0, i32* %next_semaphore.i521, align 8, !tbaa !36
  %active_workers132 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 8
  %58 = load i32, i32* %active_workers132, align 8, !tbaa !35
  %inc133 = add nsw i32 %58, 1
  store i32 %inc133, i32* %active_workers132, align 8, !tbaa !35
  %parent_job134 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 5
  %59 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job134, align 8, !tbaa !40
  %cmp135 = icmp eq %"struct.Halide::Runtime::Internal::work"* %59, null
  %min_threads138 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 7
  %60 = load i32, i32* %min_threads138, align 4, !tbaa !30
  br i1 %cmp135, label %if.then136, label %if.else143

if.then136:                                       ; preds = %if.else127
  %61 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  %add139 = add nsw i32 %61, %60
  store i32 %add139, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  br label %if.end152

if.else143:                                       ; preds = %if.else127
  %threads_reserved147 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %59, i64 0, i32 6
  %62 = load i32, i32* %threads_reserved147, align 8, !tbaa !56
  %add148 = add nsw i32 %62, %60
  store i32 %add148, i32* %threads_reserved147, align 8, !tbaa !56
  br label %if.end152

if.end152:                                        ; preds = %if.else143, %if.then136
  %serial154 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 8
  %63 = load i8, i8* %serial154, align 8, !tbaa !26, !range !17
  %tobool155.not = icmp eq i8 %63, 0
  br i1 %tobool155.not, label %if.else198, label %if.then156

if.then156:                                       ; preds = %if.end152
  %next_job157 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 2
  %64 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job157, align 8, !tbaa !58
  store %"struct.Halide::Runtime::Internal::work"* %64, %"struct.Halide::Runtime::Internal::work"** %prev_ptr.1519, align 8, !tbaa !10
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %extent163 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 6
  %next_semaphore.i474 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 10
  %num_semaphores.i475 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 4
  %semaphores.i477 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 3
  %user_context = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 7
  %fn = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 0
  %min = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 5
  %closure = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 1
  %65 = bitcast %"struct.Halide::Runtime::Internal::work"* %job.1515 to i8*
  br label %while.cond161.preheader

while.cond161.preheader:                          ; preds = %if.end172, %if.then156
  %iters.0538 = phi i32 [ 1, %if.then156 ], [ 0, %if.end172 ]
  %total_iters.0537 = phi i32 [ 0, %if.then156 ], [ %add178, %if.end172 ]
  %66 = load i32, i32* %extent163, align 8, !tbaa !25
  %sub164531 = sub nsw i32 %66, %total_iters.0537
  %cmp165532 = icmp sgt i32 %sub164531, %iters.0538
  br i1 %cmp165532, label %land.rhs.preheader, label %while.end169

land.rhs.preheader:                               ; preds = %while.cond161.preheader
  %.pre = load i32, i32* %next_semaphore.i474, align 8, !tbaa !36
  %.pre560 = load i32, i32* %num_semaphores.i475, align 8, !tbaa !28
  br label %land.rhs

land.rhs:                                         ; preds = %while.body167, %land.rhs.preheader
  %67 = phi i32 [ %76, %while.body167 ], [ %66, %land.rhs.preheader ]
  %68 = phi i32 [ %77, %while.body167 ], [ %.pre560, %land.rhs.preheader ]
  %69 = phi i32 [ 0, %while.body167 ], [ %.pre, %land.rhs.preheader ]
  %iters.1533 = phi i32 [ %inc168, %while.body167 ], [ %iters.0538, %land.rhs.preheader ]
  %cmp14.i476 = icmp slt i32 %69, %68
  br i1 %cmp14.i476, label %for.body.i483, label %while.body167

for.body.i483:                                    ; preds = %land.rhs, %for.inc.i486
  %70 = phi i32 [ %inc.i484, %for.inc.i486 ], [ %69, %land.rhs ]
  %71 = load %struct.halide_semaphore_acquire_t*, %struct.halide_semaphore_acquire_t** %semaphores.i477, align 8, !tbaa !27
  %idxprom.i479 = sext i32 %70 to i64
  %semaphore.i480 = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %71, i64 %idxprom.i479, i32 0
  %72 = load %struct.halide_semaphore_t*, %struct.halide_semaphore_t** %semaphore.i480, align 8, !tbaa !65
  %count.i481 = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %71, i64 %idxprom.i479, i32 1
  %73 = load i32, i32* %count.i481, align 8, !tbaa !67
  %call.i482 = tail call zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %72, i32 %73) #15
  br i1 %call.i482, label %for.inc.i486, label %while.end169

for.inc.i486:                                     ; preds = %for.body.i483
  %74 = load i32, i32* %next_semaphore.i474, align 8, !tbaa !36
  %inc.i484 = add nsw i32 %74, 1
  store i32 %inc.i484, i32* %next_semaphore.i474, align 8, !tbaa !36
  %75 = load i32, i32* %num_semaphores.i475, align 8, !tbaa !28
  %cmp.i485 = icmp slt i32 %inc.i484, %75
  br i1 %cmp.i485, label %for.body.i483, label %while.body167.loopexit, !llvm.loop !68

while.body167.loopexit:                           ; preds = %for.inc.i486
  %.pre561 = load i32, i32* %extent163, align 8, !tbaa !25
  br label %while.body167

while.body167:                                    ; preds = %while.body167.loopexit, %land.rhs
  %76 = phi i32 [ %.pre561, %while.body167.loopexit ], [ %67, %land.rhs ]
  %77 = phi i32 [ %75, %while.body167.loopexit ], [ %68, %land.rhs ]
  store i32 0, i32* %next_semaphore.i474, align 8, !tbaa !36
  %inc168 = add nuw nsw i32 %iters.1533, 1
  %sub164 = sub nsw i32 %76, %total_iters.0537
  %cmp165 = icmp sgt i32 %sub164, %inc168
  br i1 %cmp165, label %land.rhs, label %if.end172, !llvm.loop !70

while.end169:                                     ; preds = %for.body.i483, %while.cond161.preheader
  %iters.1523 = phi i32 [ %iters.0538, %while.cond161.preheader ], [ %iters.1533, %for.body.i483 ]
  %cmp170 = icmp eq i32 %iters.1523, 0
  br i1 %cmp170, label %while.end179, label %if.end172

if.end172:                                        ; preds = %while.body167, %while.end169
  %iters.1523566 = phi i32 [ %iters.1523, %while.end169 ], [ %inc168, %while.body167 ]
  %78 = load i8*, i8** %user_context, align 8, !tbaa !33
  %79 = load i32 (i8*, i32, i32, i8*, i8*)*, i32 (i8*, i32, i32, i8*, i8*)** %fn, align 8, !tbaa !20
  %80 = load i32, i32* %min, align 4, !tbaa !24
  %add175 = add nsw i32 %80, %total_iters.0537
  %81 = load i8*, i8** %closure, align 8, !tbaa !29
  %call177 = tail call i32 @halide_do_loop_task(i8* %78, i32 (i8*, i32, i32, i8*, i8*)* %79, i32 %add175, i32 %iters.1523566, i8* %81, i8* nonnull %65) #16
  %add178 = add nuw nsw i32 %iters.1523566, %total_iters.0537
  %cmp159 = icmp eq i32 %call177, 0
  br i1 %cmp159, label %while.cond161.preheader, label %while.end179, !llvm.loop !71

while.end179:                                     ; preds = %if.end172, %while.end169
  %cmp170568 = phi i1 [ true, %while.end169 ], [ false, %if.end172 ]
  %result.0.lcssa = phi i32 [ 0, %while.end169 ], [ %call177, %if.end172 ]
  %total_iters.0.lcssa = phi i32 [ %total_iters.0537, %while.end169 ], [ %add178, %if.end172 ]
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %82 = load i32, i32* %min, align 4, !tbaa !24
  %add182 = add nsw i32 %82, %total_iters.0.lcssa
  store i32 %add182, i32* %min, align 4, !tbaa !24
  %83 = load i32, i32* %extent163, align 8, !tbaa !25
  %sub185 = sub nsw i32 %83, %total_iters.0.lcssa
  store i32 %sub185, i32* %extent163, align 8, !tbaa !25
  br i1 %cmp170568, label %if.else190, label %if.end230.thread505

if.end230.thread505:                              ; preds = %while.end179
  store i32 0, i32* %extent163, align 8, !tbaa !25
  br label %if.then238

if.else190:                                       ; preds = %while.end179
  %cmp193 = icmp sgt i32 %sub185, 0
  br i1 %cmp193, label %if.then194, label %if.end271

if.then194:                                       ; preds = %if.else190
  %84 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !57
  store %"struct.Halide::Runtime::Internal::work"* %84, %"struct.Halide::Runtime::Internal::work"** %next_job157, align 8, !tbaa !58
  store %"struct.Halide::Runtime::Internal::work"* %job.1515, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !57
  br label %if.end271

if.else198:                                       ; preds = %if.end152
  %myjob.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 0
  %myjob.sroa.0.0.copyload = load i32 (i8*, i32, i32, i8*, i8*)*, i32 (i8*, i32, i32, i8*, i8*)** %myjob.sroa.0.0..sroa_idx, align 8, !tbaa.struct !72
  %myjob.sroa.4.0..sroa_idx327 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 1
  %myjob.sroa.4.0.copyload = load i8*, i8** %myjob.sroa.4.0..sroa_idx327, align 8, !tbaa.struct !74
  %myjob.sroa.6333.0..sroa_idx334 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 5
  %myjob.sroa.6333.0.copyload = load i32, i32* %myjob.sroa.6333.0..sroa_idx334, align 4
  %myjob.sroa.8340.0..sroa_idx341 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 1
  %myjob.sroa.8340.0.copyload = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %myjob.sroa.8340.0..sroa_idx341, align 8, !tbaa.struct !75
  %myjob.sroa.10347.0..sroa_idx348 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 7
  %myjob.sroa.10347.0.copyload = load i8*, i8** %myjob.sroa.10347.0..sroa_idx348, align 8, !tbaa.struct !76
  %inc201 = add nsw i32 %myjob.sroa.6333.0.copyload, 1
  store i32 %inc201, i32* %myjob.sroa.6333.0..sroa_idx334, align 4, !tbaa !24
  %extent203 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 6
  %85 = load i32, i32* %extent203, align 8, !tbaa !25
  %dec204 = add nsw i32 %85, -1
  store i32 %dec204, i32* %extent203, align 8, !tbaa !25
  %cmp207 = icmp eq i32 %dec204, 0
  br i1 %cmp207, label %if.then208, label %if.end210

if.then208:                                       ; preds = %if.else198
  %next_job209 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 2
  %86 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job209, align 8, !tbaa !58
  store %"struct.Halide::Runtime::Internal::work"* %86, %"struct.Halide::Runtime::Internal::work"** %prev_ptr.1519, align 8, !tbaa !10
  br label %if.end210

if.end210:                                        ; preds = %if.then208, %if.else198
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %tobool211.not = icmp eq i32 (i8*, i32, i8*)* %myjob.sroa.8340.0.copyload, null
  br i1 %tobool211.not, label %if.else220, label %if.then212

if.then212:                                       ; preds = %if.end210
  %call219 = tail call i32 @halide_do_task(i8* %myjob.sroa.10347.0.copyload, i32 (i8*, i32, i8*)* nonnull %myjob.sroa.8340.0.copyload, i32 %myjob.sroa.6333.0.copyload, i8* %myjob.sroa.4.0.copyload) #16
  br label %if.end230

if.else220:                                       ; preds = %if.end210
  %87 = bitcast %"struct.Halide::Runtime::Internal::work"* %job.1515 to i8*
  %call228 = tail call i32 @halide_do_loop_task(i8* %myjob.sroa.10347.0.copyload, i32 (i8*, i32, i32, i8*, i8*)* %myjob.sroa.0.0.copyload, i32 %myjob.sroa.6333.0.copyload, i32 1, i8* %myjob.sroa.4.0.copyload, i8* %87) #16
  br label %if.end230

if.end230:                                        ; preds = %if.else220, %if.then212
  %result.1 = phi i32 [ %call219, %if.then212 ], [ %call228, %if.else220 ]
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %cmp237.not = icmp eq i32 %result.1, 0
  br i1 %cmp237.not, label %if.end271, label %if.then238

if.then238:                                       ; preds = %if.end230, %if.end230.thread505
  %result.2510 = phi i32 [ %result.0.lcssa, %if.end230.thread505 ], [ %result.1, %if.end230 ]
  %exit_status239 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 9
  store i32 %result.2510, i32* %exit_status239, align 4, !tbaa !34
  %sibling_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 4
  %88 = load i32, i32* %sibling_count, align 8, !tbaa !39
  %cmp240540 = icmp sgt i32 %88, 0
  br i1 %cmp240540, label %do.end243.lr.ph, label %if.end271

do.end243.lr.ph:                                  ; preds = %if.then238
  %siblings244 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 3
  %89 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %siblings244, align 8, !tbaa !38
  %wide.trip.count = zext i32 %88 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %90 = icmp eq i32 %88, 1
  br i1 %90, label %if.end271.loopexit.unr-lcssa, label %do.end243.lr.ph.new

do.end243.lr.ph.new:                              ; preds = %do.end243.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %do.end243

do.end243:                                        ; preds = %for.inc.1, %do.end243.lr.ph.new
  %indvars.iv = phi i64 [ 0, %do.end243.lr.ph.new ], [ %indvars.iv.next.1, %for.inc.1 ]
  %wake_owners.0541 = phi i8 [ 0, %do.end243.lr.ph.new ], [ %wake_owners.1.1, %for.inc.1 ]
  %niter = phi i64 [ %unroll_iter, %do.end243.lr.ph.new ], [ %niter.nsub.1, %for.inc.1 ]
  %exit_status245 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %89, i64 %indvars.iv, i32 9
  %91 = load i32, i32* %exit_status245, align 4, !tbaa !34
  %cmp246 = icmp eq i32 %91, 0
  br i1 %cmp246, label %if.then247, label %for.inc

if.then247:                                       ; preds = %do.end243
  store i32 %result.2510, i32* %exit_status245, align 4, !tbaa !34
  %92 = load i32, i32* %active_workers132, align 8, !tbaa !35
  %cmp253 = icmp eq i32 %92, 0
  br i1 %cmp253, label %land.rhs254, label %land.end260

land.rhs254:                                      ; preds = %if.then247
  %owner_is_sleeping258 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %89, i64 %indvars.iv, i32 11
  %93 = load i8, i8* %owner_is_sleeping258, align 4, !tbaa !37, !range !17
  br label %land.end260

land.end260:                                      ; preds = %land.rhs254, %if.then247
  %94 = phi i8 [ 0, %if.then247 ], [ %93, %land.rhs254 ]
  %95 = and i8 %wake_owners.0541, 1
  %or = or i8 %94, %95
  br label %for.inc

for.inc:                                          ; preds = %land.end260, %do.end243
  %wake_owners.1 = phi i8 [ %or, %land.end260 ], [ %wake_owners.0541, %do.end243 ]
  %indvars.iv.next = or i64 %indvars.iv, 1
  %exit_status245.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %89, i64 %indvars.iv.next, i32 9
  %96 = load i32, i32* %exit_status245.1, align 4, !tbaa !34
  %cmp246.1 = icmp eq i32 %96, 0
  br i1 %cmp246.1, label %if.then247.1, label %for.inc.1

if.end271.loopexit.unr-lcssa:                     ; preds = %for.inc.1, %do.end243.lr.ph
  %wake_owners.1.lcssa.ph = phi i8 [ undef, %do.end243.lr.ph ], [ %wake_owners.1.1, %for.inc.1 ]
  %indvars.iv.unr = phi i64 [ 0, %do.end243.lr.ph ], [ %indvars.iv.next.1, %for.inc.1 ]
  %wake_owners.0541.unr = phi i8 [ 0, %do.end243.lr.ph ], [ %wake_owners.1.1, %for.inc.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %if.end271, label %do.end243.epil

do.end243.epil:                                   ; preds = %if.end271.loopexit.unr-lcssa
  %exit_status245.epil = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %89, i64 %indvars.iv.unr, i32 9
  %97 = load i32, i32* %exit_status245.epil, align 4, !tbaa !34
  %cmp246.epil = icmp eq i32 %97, 0
  br i1 %cmp246.epil, label %if.then247.epil, label %if.end271

if.then247.epil:                                  ; preds = %do.end243.epil
  store i32 %result.2510, i32* %exit_status245.epil, align 4, !tbaa !34
  %98 = load i32, i32* %active_workers132, align 8, !tbaa !35
  %cmp253.epil = icmp eq i32 %98, 0
  br i1 %cmp253.epil, label %land.rhs254.epil, label %land.end260.epil

land.rhs254.epil:                                 ; preds = %if.then247.epil
  %owner_is_sleeping258.epil = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %89, i64 %indvars.iv.unr, i32 11
  %99 = load i8, i8* %owner_is_sleeping258.epil, align 4, !tbaa !37, !range !17
  br label %land.end260.epil

land.end260.epil:                                 ; preds = %land.rhs254.epil, %if.then247.epil
  %100 = phi i8 [ 0, %if.then247.epil ], [ %99, %land.rhs254.epil ]
  %101 = and i8 %wake_owners.0541.unr, 1
  %or.epil = or i8 %100, %101
  br label %if.end271

if.end271:                                        ; preds = %if.end271.loopexit.unr-lcssa, %do.end243.epil, %land.end260.epil, %if.then238, %if.end230, %if.then194, %if.else190
  %wake_owners.2 = phi i8 [ 0, %if.end230 ], [ 0, %if.else190 ], [ 0, %if.then194 ], [ 0, %if.then238 ], [ %wake_owners.1.lcssa.ph, %if.end271.loopexit.unr-lcssa ], [ %or.epil, %land.end260.epil ], [ %wake_owners.0541.unr, %do.end243.epil ]
  %102 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job134, align 8, !tbaa !40
  %cmp273 = icmp eq %"struct.Halide::Runtime::Internal::work"* %102, null
  %103 = load i32, i32* %min_threads138, align 4, !tbaa !30
  br i1 %cmp273, label %if.then274, label %if.else281

if.then274:                                       ; preds = %if.end271
  %104 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  %sub277 = sub nsw i32 %104, %103
  store i32 %sub277, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !53
  br label %if.end290

if.else281:                                       ; preds = %if.end271
  %threads_reserved285 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %102, i64 0, i32 6
  %105 = load i32, i32* %threads_reserved285, align 8, !tbaa !56
  %sub286 = sub nsw i32 %105, %103
  store i32 %sub286, i32* %threads_reserved285, align 8, !tbaa !56
  br label %if.end290

if.end290:                                        ; preds = %if.else281, %if.then274
  %106 = load i32, i32* %active_workers132, align 8, !tbaa !35
  %dec292 = add nsw i32 %106, -1
  store i32 %dec292, i32* %active_workers132, align 8, !tbaa !35
  %107 = and i8 %wake_owners.2, 1
  %tobool296.not = icmp eq i8 %107, 0
  br i1 %tobool296.not, label %lor.lhs.false297, label %if.then310

lor.lhs.false297:                                 ; preds = %if.end290
  %cmp299 = icmp eq i32 %dec292, 0
  br i1 %cmp299, label %land.lhs.true300, label %while.cond.backedge

land.lhs.true300:                                 ; preds = %lor.lhs.false297
  %extent302 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 6
  %108 = load i32, i32* %extent302, align 8, !tbaa !25
  %cmp303 = icmp eq i32 %108, 0
  br i1 %cmp303, label %land.lhs.true307, label %lor.lhs.false304

lor.lhs.false304:                                 ; preds = %land.lhs.true300
  %exit_status305 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 9
  %109 = load i32, i32* %exit_status305, align 4, !tbaa !34
  %cmp306.not = icmp eq i32 %109, 0
  br i1 %cmp306.not, label %while.cond.backedge, label %land.lhs.true307

land.lhs.true307:                                 ; preds = %lor.lhs.false304, %land.lhs.true300
  %owner_is_sleeping308 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 11
  %110 = load i8, i8* %owner_is_sleeping308, align 4, !tbaa !37, !range !17
  %tobool309.not = icmp eq i8 %110, 0
  br i1 %tobool309.not, label %while.cond.backedge, label %if.then310

if.then310:                                       ; preds = %land.lhs.true307, %if.end290
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #16
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then310, %land.lhs.true307, %lor.lhs.false304, %lor.lhs.false297, %if.end124, %if.else108, %if.then107, %if.then15, %while.end
  %spin_count.0.be = phi i32 [ %spin_count.0, %while.end ], [ %spin_count.0, %if.then15 ], [ %inc, %if.then107 ], [ %inc, %if.else108 ], [ %spin_count.1, %if.end124 ], [ 0, %if.then310 ], [ 0, %land.lhs.true307 ], [ 0, %lor.lhs.false304 ], [ 0, %lor.lhs.false297 ]
  br label %while.cond, !llvm.loop !77

while.end316:                                     ; preds = %cond.end, %cond.false
  ret void

if.then247.1:                                     ; preds = %for.inc
  store i32 %result.2510, i32* %exit_status245.1, align 4, !tbaa !34
  %111 = load i32, i32* %active_workers132, align 8, !tbaa !35
  %cmp253.1 = icmp eq i32 %111, 0
  br i1 %cmp253.1, label %land.rhs254.1, label %land.end260.1

land.rhs254.1:                                    ; preds = %if.then247.1
  %owner_is_sleeping258.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %89, i64 %indvars.iv.next, i32 11
  %112 = load i8, i8* %owner_is_sleeping258.1, align 4, !tbaa !37, !range !17
  br label %land.end260.1

land.end260.1:                                    ; preds = %land.rhs254.1, %if.then247.1
  %113 = phi i8 [ 0, %if.then247.1 ], [ %112, %land.rhs254.1 ]
  %114 = and i8 %wake_owners.1, 1
  %or.1 = or i8 %113, %114
  br label %for.inc.1

for.inc.1:                                        ; preds = %land.end260.1, %for.inc
  %wake_owners.1.1 = phi i8 [ %or.1, %land.end260.1 ], [ %wake_owners.1, %for.inc ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %if.end271.loopexit.unr-lcssa, label %do.end243, !llvm.loop !78
}

; Function Attrs: nounwind
define weak void @halide_mutex_unlock(%struct.halide_mutex* %mutex) local_unnamed_addr #4 {
entry:
  %control.i.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", align 8
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %mutex, i64 0, i32 0, i64 0
  %0 = cmpxchg weak i64* %state.i, i64 1, i64 0 release monotonic
  %1 = extractvalue { i64, i1 } %0, 1
  br i1 %1, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %2 = cmpxchg i64* %state.i, i64 1, i64 0 release monotonic
  %3 = extractvalue { i64, i1 } %2, 1
  br i1 %3, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i
  %4 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !41
  %lock_state2.i.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 1
  store i64* %state.i, i64** %lock_state2.i.i.i, align 8, !tbaa !43
  %6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0
  %7 = ptrtoint %struct.halide_mutex* %mutex to i64
  %call3.i.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control10unpark_oneEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %6, i64 %7) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  br label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit

_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit: ; preds = %if.end.i.i, %if.then.i, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control10unpark_oneEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i64 %addr) local_unnamed_addr #0 align 2 {
entry:
  %call = tail call nonnull align 8 dereferenceable(24) %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* @_ZN6Halide7Runtime8Internal15Synchronization11lock_bucketEy(i64 %addr) #16
  %head = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 1
  %0 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head, align 8, !tbaa !10
  %tail = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 2
  %1 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)***
  %state.i60 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0, i32 0
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0
  br label %while.cond

while.cond:                                       ; preds = %cleanup, %entry
  %data_location.0 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %head, %entry ], [ %data_location.1, %cleanup ]
  %prev.0 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ null, %entry ], [ %prev.1, %cleanup ]
  %data.0 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %0, %entry ], [ %data.1, %cleanup ]
  %retval.0 = phi i64 [ undef, %entry ], [ %retval.1, %cleanup ]
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, null
  br i1 %cmp.not, label %while.end22, label %while.body

while.body:                                       ; preds = %while.cond
  %sleep_address = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 1
  %2 = load atomic i64, i64* %sleep_address monotonic, align 8
  %cmp2 = icmp eq i64 %2, %addr
  %next3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 2
  %3 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next3, align 8, !tbaa !79
  br i1 %cmp2, label %if.then, label %cleanup

if.then:                                          ; preds = %while.body
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %3, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %data_location.0, align 8, !tbaa !10
  %4 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !85
  %cmp4 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %4, %data.0
  br i1 %cmp4, label %if.then5, label %while.cond7.preheader

while.cond7.preheader:                            ; preds = %if.then
  %cmp872.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %3, null
  br i1 %cmp872.not, label %if.end, label %while.body9

if.then5:                                         ; preds = %if.then
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %prev.0, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !85
  br label %if.end

while.body9:                                      ; preds = %while.cond7.preheader, %while.body9
  %data2.073 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %6, %while.body9 ], [ %3, %while.cond7.preheader ]
  %sleep_address10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data2.073, i64 0, i32 1
  %5 = load atomic i64, i64* %sleep_address10 monotonic, align 8
  %cmp11 = icmp eq i64 %5, %addr
  %next12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data2.073, i64 0, i32 2
  %6 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next12, align 8, !tbaa !79
  %cmp8 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %6, null
  %7 = or i1 %cmp11, %cmp8
  br i1 %7, label %if.end.loopexit, label %while.body9, !llvm.loop !88

if.end.loopexit:                                  ; preds = %while.body9
  %frombool = zext i1 %cmp11 to i8
  br label %if.end

if.end:                                           ; preds = %if.end.loopexit, %if.then5, %while.cond7.preheader
  %more_waiters.1 = phi i8 [ 0, %if.then5 ], [ 0, %while.cond7.preheader ], [ %frombool, %if.end.loopexit ]
  %tobool13 = icmp ne i8 %more_waiters.1, 0
  %vtable = load i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)**, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*** %1, align 8, !tbaa !41
  %vfn = getelementptr inbounds i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)** %vtable, i64 2
  %8 = load i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)** %vfn, align 8
  %call14 = tail call i64 %8(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i32 1, i1 zeroext %tobool13) #15
  %unpark_info = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 3
  store i64 %call14, i64* %unpark_info, align 8, !tbaa !89
  %mutex.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 0, i32 0
  %call.i = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex.i) #15
  %9 = atomicrmw and i64* %state.i60, i64 -2 release
  %and.i61 = and i64 %9, 2
  %cmp.i62 = icmp ne i64 %and.i61, 0
  %cmp3.not.i63 = icmp ult i64 %9, 4
  %or.cond.i64 = or i1 %cmp3.not.i63, %cmp.i62
  br i1 %or.cond.i64, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66, label %if.then.i65

if.then.i65:                                      ; preds = %if.end
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #15
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66

_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66: ; preds = %if.then.i65, %if.end
  %should_park.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 0, i32 2
  store i8 0, i8* %should_park.i, align 8, !tbaa !90
  %condvar.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 0, i32 1
  %call.i67 = tail call i32 @pthread_cond_signal(%struct.pthread_mutex_t* nonnull %condvar.i) #15
  %call.i69 = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex.i) #15
  %10 = zext i8 %more_waiters.1 to i64
  br label %cleanup

cleanup:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66, %while.body
  %data_location.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %data_location.0, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66 ], [ %next3, %while.body ]
  %prev.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %prev.0, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66 ], [ %data.0, %while.body ]
  %data.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %data.0, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66 ], [ %3, %while.body ]
  %retval.1 = phi i64 [ %10, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66 ], [ %retval.0, %while.body ]
  br i1 %cmp2, label %cleanup27, label %while.cond, !llvm.loop !91

while.end22:                                      ; preds = %while.cond
  %vtable23 = load i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)**, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*** %1, align 8, !tbaa !41
  %vfn24 = getelementptr inbounds i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)** %vtable23, i64 2
  %11 = load i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)** %vfn24, align 8
  %call25 = tail call i64 %11(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i32 0, i1 zeroext false) #15
  %12 = atomicrmw and i64* %state.i60, i64 -2 release
  %and.i = and i64 %12, 2
  %cmp.i = icmp ne i64 %and.i, 0
  %cmp3.not.i = icmp ult i64 %12, 4
  %or.cond.i = or i1 %cmp3.not.i, %cmp.i
  br i1 %or.cond.i, label %cleanup27, label %if.then.i

if.then.i:                                        ; preds = %while.end22
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #15
  br label %cleanup27

cleanup27:                                        ; preds = %cleanup, %if.then.i, %while.end22
  %retval.2 = phi i64 [ 0, %while.end22 ], [ 0, %if.then.i ], [ %retval.1, %cleanup ]
  ret i64 %retval.2
}

; Function Attrs: nounwind mustprogress
define linkonce nonnull align 8 dereferenceable(24) %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* @_ZN6Halide7Runtime8Internal15Synchronization11lock_bucketEy(i64 %addr) local_unnamed_addr #0 {
entry:
  %mul.i = mul i64 %addr, -7046029254386353131
  %shr.i = lshr i64 %mul.i, 54
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i
  %state.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx, i64 0, i32 0, i32 0
  %0 = cmpxchg weak i64* %state.i, i64 0, i64 1 acquire monotonic
  %1 = extractvalue { i64, i1 } %0, 1
  br i1 %1, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #15
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit

_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit: ; preds = %if.then.i, %entry
  ret %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx
}

declare i32 @pthread_mutex_lock(%struct.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %this) local_unnamed_addr #4 align 2 {
entry:
  %state = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %this, i64 0, i32 0
  %0 = load atomic i64, i64* %state monotonic, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %expected.0 = phi i64 [ %0, %entry ], [ %3, %if.end ]
  %and = and i64 %expected.0, 2
  %tobool.not = icmp ne i64 %and, 0
  %cmp = icmp ult i64 %expected.0, 4
  %or.cond = or i1 %cmp, %tobool.not
  br i1 %or.cond, label %cleanup75, label %if.end

if.end:                                           ; preds = %while.cond
  %or = or i64 %expected.0, 2
  %1 = cmpxchg weak i64* %state, i64 %expected.0, i64 %or acquire monotonic
  %2 = extractvalue { i64, i1 } %1, 1
  %3 = extractvalue { i64, i1 } %1, 0
  br i1 %2, label %while.cond11, label %while.cond

while.cond11:                                     ; preds = %if.end, %cleanup70
  %.pn.pn = phi { i64, i1 } [ %.pn, %cleanup70 ], [ %1, %if.end ]
  %expected.3 = extractvalue { i64, i1 } %.pn.pn, 0
  %and13 = and i64 %expected.3, -4
  %4 = inttoptr i64 %and13 to %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*
  %tail14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %4, i64 0, i32 3
  %tail.0143 = load %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail14, align 8, !tbaa !92
  %cmp16144 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0143, null
  br i1 %cmp16144, label %while.body17, label %while.end23

while.body17:                                     ; preds = %while.cond11, %do.end
  %current.0145 = phi %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* [ %5, %do.end ], [ %4, %while.cond11 ]
  %next18 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %current.0145, i64 0, i32 1
  %5 = load %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %next18, align 8, !tbaa !94
  %cmp19.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %5, null
  br i1 %cmp19.not, label %if.then20, label %do.end

if.then20:                                        ; preds = %while.body17
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([137 x i8], [137 x i8]* @.str.5, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %if.then20, %while.body17
  %prev = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %5, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %current.0145, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %prev, align 8, !tbaa !95
  %tail22 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %5, i64 0, i32 3
  %tail.0 = load %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail22, align 8, !tbaa !92
  %cmp16 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0, null
  br i1 %cmp16, label %while.body17, label %while.end23, !llvm.loop !96

while.end23:                                      ; preds = %do.end, %while.cond11
  %tail.0.lcssa = phi %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* [ %tail.0143, %while.cond11 ], [ %tail.0, %do.end ]
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail14, align 8, !tbaa !92
  %and25 = and i64 %expected.3, 1
  %tobool26.not = icmp eq i64 %and25, 0
  br i1 %tobool26.not, label %if.end35, label %if.then27

if.then27:                                        ; preds = %while.end23
  %and29 = and i64 %expected.3, -3
  %6 = cmpxchg weak i64* %state, i64 %expected.3, i64 %and29 acq_rel monotonic
  %7 = extractvalue { i64, i1 } %6, 1
  br i1 %7, label %cleanup75, label %cleanup70

if.end35:                                         ; preds = %while.end23
  %prev36 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, i64 0, i32 2
  %8 = load %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %prev36, align 8, !tbaa !95
  %cmp37 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %8, null
  br i1 %cmp37, label %while.body41, label %if.else62

while.body41:                                     ; preds = %if.end35, %if.end47
  %expected.5146 = phi i64 [ %11, %if.end47 ], [ %expected.3, %if.end35 ]
  %and43 = and i64 %expected.5146, 1
  %9 = cmpxchg weak i64* %state, i64 %expected.5146, i64 %and43 acq_rel monotonic
  %10 = extractvalue { i64, i1 } %9, 1
  br i1 %10, label %if.end66, label %if.end47

if.end47:                                         ; preds = %while.body41
  %11 = extractvalue { i64, i1 } %9, 0
  %cmp49 = icmp ult i64 %11, 4
  br i1 %cmp49, label %while.body41, label %cleanup70, !llvm.loop !97

if.else62:                                        ; preds = %if.end35
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %8, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail14, align 8, !tbaa !92
  %12 = atomicrmw and i64* %state, i64 -3 release
  br label %if.end66

if.end66:                                         ; preds = %while.body41, %if.else62
  %mutex.i103 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, i64 0, i32 0, i32 0
  %call.i104 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex.i103) #15
  %should_park.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, i64 0, i32 0, i32 2
  store i8 0, i8* %should_park.i, align 8, !tbaa !90
  %condvar.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, i64 0, i32 0, i32 1
  %call.i101 = tail call i32 @pthread_cond_signal(%struct.pthread_mutex_t* nonnull %condvar.i) #15
  %call.i = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex.i103) #15
  br label %cleanup75

cleanup70:                                        ; preds = %if.end47, %if.then27
  %.pn = phi { i64, i1 } [ %6, %if.then27 ], [ %9, %if.end47 ]
  fence acquire
  br label %while.cond11

cleanup75:                                        ; preds = %while.cond, %if.then27, %if.end66
  ret void
}

declare i32 @pthread_cond_signal(%struct.pthread_mutex_t*) local_unnamed_addr #1

declare i32 @pthread_mutex_unlock(%struct.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %this) local_unnamed_addr #4 align 2 {
entry:
  %node = alloca %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", align 8
  %state = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %this, i64 0, i32 0
  %0 = load atomic i64, i64* %state monotonic, align 8
  %1 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node to i8*
  %should_park.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 0, i32 2
  %mutex2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 0, i32 0
  %condvar3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 0, i32 1
  %next.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 1
  %tail.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 3
  %2 = ptrtoint %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node to i64
  %3 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %next.i to <2 x %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*>*
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %while.cond.outer.backedge, %entry
  %expected.0.ph = phi i64 [ %0, %entry ], [ %expected.0.ph.be, %while.cond.outer.backedge ]
  %spinner.sroa.0.0.ph = phi i32 [ 40, %entry ], [ %spinner.sroa.0.0.ph.be, %while.cond.outer.backedge ]
  %and46 = and i64 %expected.0.ph, 1
  %tobool.not47 = icmp eq i64 %and46, 0
  br i1 %tobool.not47, label %if.then, label %if.end4

if.then:                                          ; preds = %while.cond.outer, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit
  %expected.048 = phi i64 [ %6, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit ], [ %expected.0.ph, %while.cond.outer ]
  %or = or i64 %expected.048, 1
  %4 = cmpxchg weak i64* %state, i64 %expected.048, i64 %or acquire monotonic
  %5 = extractvalue { i64, i1 } %4, 1
  br i1 %5, label %cleanup23, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit: ; preds = %if.then
  %6 = extractvalue { i64, i1 } %4, 0
  %and = and i64 %6, 1
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.then, label %if.end4.loopexit

if.end4.loopexit:                                 ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit
  %7 = extractvalue { i64, i1 } %4, 0
  br label %if.end4

if.end4:                                          ; preds = %if.end4.loopexit, %while.cond.outer
  %expected.0.lcssa = phi i64 [ %expected.0.ph, %while.cond.outer ], [ %7, %if.end4.loopexit ]
  %cmp.not = icmp ugt i64 %expected.0.lcssa, 3
  %cmp.i = icmp sgt i32 %spinner.sroa.0.0.ph, 0
  %or.cond = and i1 %cmp.i, %cmp.not
  br i1 %or.cond, label %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit, label %if.end9

_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit: ; preds = %if.end4
  %cmp4.i = icmp sgt i32 %spinner.sroa.0.0.ph, 1
  br i1 %cmp4.i, label %if.then7, label %if.end9

if.then7:                                         ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit
  %dec.i = add nsw i32 %spinner.sroa.0.0.ph, -1
  call void @halide_thread_yield() #15
  %8 = load atomic i64, i64* %state monotonic, align 8
  br label %while.cond.outer.backedge

if.end9:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit, %if.end4
  %spinner.sroa.0.2 = phi i32 [ %spinner.sroa.0.0.ph, %if.end4 ], [ 0, %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit ]
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1) #10
  store i8 0, i8* %should_park.i.i, align 8, !tbaa !90
  %call.i.i29 = call i32 @pthread_mutex_init(%struct.pthread_mutex_t* nonnull %mutex2.i.i, i8* null) #15
  %call4.i.i = call i32 @pthread_cond_init(%struct.pthread_mutex_t* nonnull %condvar3.i.i, i8* null) #15
  store <2 x %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*> zeroinitializer, <2 x %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*>* %3, align 8, !tbaa !10
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail.i, align 8, !tbaa !92
  store i8 1, i8* %should_park.i.i, align 8, !tbaa !90
  %and10 = and i64 %expected.0.lcssa, -4
  %cmp11 = icmp eq i64 %and10, 0
  br i1 %cmp11, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.end9
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail.i, align 8, !tbaa !92
  br label %if.end13

if.else:                                          ; preds = %if.end9
  %9 = inttoptr i64 %and10 to %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %9, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %next.i, align 8, !tbaa !94
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then12
  %and15 = and i64 %expected.0.lcssa, 3
  %or16 = or i64 %and15, %2
  %10 = cmpxchg weak i64* %state, i64 %expected.0.lcssa, i64 %or16 release monotonic
  %11 = extractvalue { i64, i1 } %10, 1
  br i1 %11, label %if.then19, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit: ; preds = %if.end13
  %12 = extractvalue { i64, i1 } %10, 0
  br label %if.end22

if.then19:                                        ; preds = %if.end13
  %call.i = call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #15
  %13 = load i8, i8* %should_park.i.i, align 8, !tbaa !90, !range !17
  %tobool.not6.i = icmp eq i8 %13, 0
  br i1 %tobool.not6.i, label %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, label %while.body.i

while.body.i:                                     ; preds = %if.then19, %while.body.i
  %call3.i = call i32 @pthread_cond_wait(%struct.pthread_mutex_t* nonnull %condvar3.i.i, %struct.pthread_mutex_t* nonnull %mutex2.i.i) #15
  %14 = load i8, i8* %should_park.i.i, align 8, !tbaa !90, !range !17
  %tobool.not.i = icmp eq i8 %14, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, label %while.body.i, !llvm.loop !98

_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit: ; preds = %while.body.i, %if.then19
  %call5.i = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #15
  %15 = load atomic i64, i64* %state monotonic, align 8
  br label %if.end22

if.end22:                                         ; preds = %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit
  %expected.3 = phi i64 [ %15, %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit ], [ %12, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit ]
  %spinner.sroa.0.3 = phi i32 [ 40, %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit ], [ %spinner.sroa.0.2, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit ]
  %call.i.i = call i32 @pthread_cond_destroy(%struct.pthread_mutex_t* nonnull %condvar3.i.i) #15
  %call2.i.i = call i32 @pthread_mutex_destroy(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #15
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1) #10
  br label %while.cond.outer.backedge

while.cond.outer.backedge:                        ; preds = %if.end22, %if.then7
  %expected.0.ph.be = phi i64 [ %8, %if.then7 ], [ %expected.3, %if.end22 ]
  %spinner.sroa.0.0.ph.be = phi i32 [ %dec.i, %if.then7 ], [ %spinner.sroa.0.3, %if.end22 ]
  br label %while.cond.outer

cleanup23:                                        ; preds = %if.then
  ret void
}

declare i32 @pthread_mutex_init(%struct.pthread_mutex_t*, i8*) local_unnamed_addr #1

declare i32 @pthread_cond_init(%struct.pthread_mutex_t*, i8*) local_unnamed_addr #1

declare i32 @pthread_cond_wait(%struct.pthread_mutex_t*, %struct.pthread_mutex_t*) local_unnamed_addr #1

declare i32 @pthread_cond_destroy(%struct.pthread_mutex_t*) local_unnamed_addr #1

declare i32 @pthread_mutex_destroy(%struct.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control8validateERNS2_15validate_actionE(%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* nonnull dereferenceable(16) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) unnamed_addr #2 comdat align 2 {
entry:
  %lock_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %lock_state, align 8, !tbaa !43
  %1 = load atomic i64, i64* %0 monotonic, align 8
  %cmp = icmp eq i64 %1, 3
  ret i1 %cmp
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr void @_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this) unnamed_addr #2 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr i64 @_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control6unparkEib(%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* nonnull dereferenceable(16) %this, i32 %unparked, i1 zeroext %more_waiters) unnamed_addr #2 comdat align 2 {
entry:
  %0 = select i1 %more_waiters, i64 2, i64 0
  %lock_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %this, i64 0, i32 1
  %1 = load i64*, i64** %lock_state, align 8, !tbaa !43
  store atomic i64 %0, i64* %1 release, align 8
  ret i64 0
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr void @_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action, i1 zeroext %one_to_wake, i1 zeroext %some_requeued) unnamed_addr #2 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind
define weak void @halide_cond_broadcast(%struct.halide_mutex* %cond) local_unnamed_addr #4 {
entry:
  %control.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", align 8
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %cond, i64 0, i32 0, i64 0
  %0 = load atomic i64, i64* %state.i monotonic, align 8
  %cmp.i = icmp eq i64 %0, 0
  br i1 %cmp.i, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond9broadcastEv.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #10
  %2 = inttoptr i64 %0 to %"class.Halide::Runtime::Internal::Synchronization::word_lock"*
  %3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization25broadcast_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !41
  %cond_state2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 1
  store i64* %state.i, i64** %cond_state2.i.i, align 8, !tbaa !99
  %mutex3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 2
  store %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex3.i.i, align 8, !tbaa !101
  %4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0
  %5 = ptrtoint %struct.halide_mutex* %cond to i64
  %call.i = call i32 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control14unpark_requeueEyyy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %4, i64 %5, i64 %0, i64 0) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #10
  br label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond9broadcastEv.exit

_ZN6Halide7Runtime8Internal15Synchronization9fast_cond9broadcastEv.exit: ; preds = %if.end.i, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define weak zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %s, i32 %n) #0 {
entry:
  %cmp = icmp eq i32 %n, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %value = bitcast %struct.halide_semaphore_t* %s to i32*
  %0 = load atomic i32, i32* %value acquire, align 4
  %sub12 = sub nsw i32 %0, %n
  %cmp113 = icmp sgt i32 %sub12, -1
  br i1 %cmp113, label %land.rhs, label %return

land.rhs:                                         ; preds = %if.end, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit
  %sub15 = phi i32 [ %sub, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit ], [ %sub12, %if.end ]
  %expected.014 = phi i32 [ %3, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit ], [ %0, %if.end ]
  %1 = cmpxchg weak i32* %value, i32 %expected.014, i32 %sub15 acq_rel monotonic
  %2 = extractvalue { i32, i1 } %1, 1
  br i1 %2, label %return.loopexit, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit: ; preds = %land.rhs
  %3 = extractvalue { i32, i1 } %1, 0
  %sub = sub nsw i32 %3, %n
  %cmp1 = icmp sgt i32 %sub, -1
  br i1 %cmp1, label %land.rhs, label %return.loopexit

return.loopexit:                                  ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit, %land.rhs
  %4 = extractvalue { i32, i1 } %1, 1
  br label %return

return:                                           ; preds = %return.loopexit, %if.end, %entry
  %retval.0 = phi i1 [ true, %entry ], [ false, %if.end ], [ %4, %return.loopexit ]
  ret i1 %retval.0
}

; Function Attrs: nounwind
define weak void @halide_cond_wait(%struct.halide_mutex* %cond, %struct.halide_mutex* %mutex) local_unnamed_addr #4 {
entry:
  %control.i.i.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", align 8
  %control.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #10
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %cond, i64 0, i32 0, i64 0
  %1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization20wait_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !41
  %cond_state2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 1
  store i64* %state.i, i64** %cond_state2.i.i, align 8, !tbaa !102
  %mutex3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 2
  %2 = bitcast %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex3.i.i to %struct.halide_mutex**
  store %struct.halide_mutex* %mutex, %struct.halide_mutex** %2, align 8, !tbaa !104
  %3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0
  %4 = ptrtoint %struct.halide_mutex* %cond to i64
  %call.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control4parkEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %3, i64 %4) #15
  %5 = ptrtoint %struct.halide_mutex* %mutex to i64
  %cmp.not.i = icmp eq i64 %call.i, %5
  %6 = getelementptr %struct.halide_mutex, %struct.halide_mutex* %mutex, i64 0, i32 0, i64 0
  br i1 %cmp.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %7 = cmpxchg weak i64* %6, i64 0, i64 1 acquire monotonic
  %8 = extractvalue { i64, i1 } %7, 1
  br i1 %8, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %9 = load atomic i64, i64* %6 monotonic, align 8
  %10 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i.i to i8*
  %11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i.i, i64 0, i32 0, i32 0
  %lock_state2.i.i.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i.i, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i.i, i64 0, i32 0
  br label %while.cond.outer.i.i.i

while.cond.outer.i.i.i:                           ; preds = %while.cond.outer.i.i.i.backedge, %if.then.i.i
  %expected.0.ph.i.i.i = phi i64 [ %9, %if.then.i.i ], [ %expected.0.ph.i.i.i.be, %while.cond.outer.i.i.i.backedge ]
  %spinner.sroa.0.0.ph.i.i.i = phi i32 [ 40, %if.then.i.i ], [ %spinner.sroa.0.0.ph.i.i.i.be, %while.cond.outer.i.i.i.backedge ]
  %and55.i.i.i = and i64 %expected.0.ph.i.i.i, 1
  %tobool.not56.i.i.i = icmp eq i64 %and55.i.i.i, 0
  br i1 %tobool.not56.i.i.i, label %if.then.i.i.i, label %if.end4.i.i.i

if.then.i.i.i:                                    ; preds = %while.cond.outer.i.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i
  %expected.057.i.i.i = phi i64 [ %15, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i ], [ %expected.0.ph.i.i.i, %while.cond.outer.i.i.i ]
  %or.i.i.i = or i64 %expected.057.i.i.i, 1
  %13 = cmpxchg weak i64* %6, i64 %expected.057.i.i.i, i64 %or.i.i.i acquire monotonic
  %14 = extractvalue { i64, i1 } %13, 1
  br i1 %14, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i: ; preds = %if.then.i.i.i
  %15 = extractvalue { i64, i1 } %13, 0
  %and.i.i.i = and i64 %15, 1
  %tobool.not.i.i.i = icmp eq i64 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end4.i.i.i.loopexit

if.end4.i.i.i.loopexit:                           ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i
  %16 = extractvalue { i64, i1 } %13, 0
  br label %if.end4.i.i.i

if.end4.i.i.i:                                    ; preds = %if.end4.i.i.i.loopexit, %while.cond.outer.i.i.i
  %expected.0.lcssa.i.i.i = phi i64 [ %expected.0.ph.i.i.i, %while.cond.outer.i.i.i ], [ %16, %if.end4.i.i.i.loopexit ]
  %cmp.i.i.i.i = icmp sgt i32 %spinner.sroa.0.0.ph.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i, label %if.end8.i.i.i

_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i: ; preds = %if.end4.i.i.i
  %cmp4.i.not.i.i.i = icmp eq i32 %spinner.sroa.0.0.ph.i.i.i, 1
  br i1 %cmp4.i.not.i.i.i, label %if.end8.i.i.i, label %if.then6.i.i.i

if.then6.i.i.i:                                   ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i
  %dec.i.i.i.i = add nsw i32 %spinner.sroa.0.0.ph.i.i.i, -1
  call void @halide_thread_yield() #15
  %17 = load atomic i64, i64* %6 monotonic, align 8
  br label %while.cond.outer.i.i.i.backedge

if.end8.i.i.i:                                    ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i, %if.end4.i.i.i
  %spinner.sroa.0.152.i.i.i = phi i32 [ 0, %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i ], [ %spinner.sroa.0.0.ph.i.i.i, %if.end4.i.i.i ]
  %and9.i.i.i = and i64 %expected.0.lcssa.i.i.i, 2
  %cmp.i.i.i = icmp eq i64 %and9.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then10.i.i.i, label %if.end19.i.i.i

if.then10.i.i.i:                                  ; preds = %if.end8.i.i.i
  %or12.i.i.i = or i64 %expected.0.lcssa.i.i.i, 2
  %18 = cmpxchg weak i64* %6, i64 %expected.0.lcssa.i.i.i, i64 %or12.i.i.i monotonic monotonic
  %19 = extractvalue { i64, i1 } %18, 1
  br i1 %19, label %if.end19.i.i.i, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i: ; preds = %if.then10.i.i.i
  %20 = extractvalue { i64, i1 } %18, 0
  br label %while.cond.outer.i.i.i.backedge

if.end19.i.i.i:                                   ; preds = %if.then10.i.i.i, %if.end8.i.i.i
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !41
  store i64* %6, i64** %lock_state2.i.i.i.i, align 8, !tbaa !43
  %call21.i.i.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control4parkEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %12, i64 %5) #15
  %cmp22.i.i.i = icmp eq i64 %call21.i.i.i, %5
  br i1 %cmp22.i.i.i, label %cleanup30.critedge.i.i.i, label %if.end24.i.i.i

if.end24.i.i.i:                                   ; preds = %if.end19.i.i.i
  %21 = load atomic i64, i64* %6 monotonic, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  br label %while.cond.outer.i.i.i.backedge

while.cond.outer.i.i.i.backedge:                  ; preds = %if.end24.i.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i, %if.then6.i.i.i
  %expected.0.ph.i.i.i.be = phi i64 [ %20, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i ], [ %21, %if.end24.i.i.i ], [ %17, %if.then6.i.i.i ]
  %spinner.sroa.0.0.ph.i.i.i.be = phi i32 [ %spinner.sroa.0.152.i.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i ], [ 40, %if.end24.i.i.i ], [ %dec.i.i.i.i, %if.then6.i.i.i ]
  br label %while.cond.outer.i.i.i

cleanup30.critedge.i.i.i:                         ; preds = %if.end19.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  br label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit

if.else.i:                                        ; preds = %entry
  %22 = load atomic i64, i64* %6 monotonic, align 8
  %and.i = and i64 %22, 1
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %if.then2.i, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit

if.then2.i:                                       ; preds = %if.else.i
  call void @halide_print(i8* null, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.5.6, i64 0, i64 0)) #15
  call void @abort() #15
  br label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit

_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit: ; preds = %if.then.i.i.i, %if.then2.i, %if.else.i, %cleanup30.critedge.i.i.i, %if.then.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #10
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_loop_task(i8* %user_context, i32 (i8*, i32, i32, i8*, i8*)* %f, i32 %min, i32 %size, i8* %closure, i8* %task_parent) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)*, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 8, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i32, i8*, i8*)* %f, i32 %min, i32 %size, i8* %closure, i8* %task_parent) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_task(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 8, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) #15
  ret i32 %call
}

; Function Attrs: nounwind
define linkonce i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control4parkEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i64 %addr) local_unnamed_addr #4 align 2 {
entry:
  %queue_data = alloca %"struct.Halide::Runtime::Internal::Synchronization::queue_data", align 8
  %action = alloca %"struct.Halide::Runtime::Internal::Synchronization::validate_action", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %0) #10
  %should_park.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 0, i32 2
  store i8 0, i8* %should_park.i.i, align 8, !tbaa !90
  %mutex2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 0, i32 0
  %call.i.i = call i32 @pthread_mutex_init(%struct.pthread_mutex_t* nonnull %mutex2.i.i, i8* null) #15
  %condvar3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 0, i32 1
  %call4.i.i = call i32 @pthread_cond_init(%struct.pthread_mutex_t* nonnull %condvar3.i.i, i8* null) #15
  %sleep_address.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 1
  store i64 0, i64* %sleep_address.i, align 8, !tbaa !105
  %next.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next.i, align 8, !tbaa !79
  %unpark_info.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 3
  store i64 0, i64* %unpark_info.i, align 8, !tbaa !89
  %call = call nonnull align 8 dereferenceable(24) %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* @_ZN6Halide7Runtime8Internal15Synchronization11lock_bucketEy(i64 %addr) #16
  %1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #10
  store i8 0, i8* %1, align 8, !tbaa !106
  %invalid_unpark_info.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 2
  store i64 0, i64* %invalid_unpark_info.i, align 8, !tbaa !108
  %2 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)***
  %vtable = load i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)**, i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)*** %2, align 8, !tbaa !41
  %3 = load i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)*, i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)** %vtable, align 8
  %call2 = call zeroext i1 %3(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) #15
  br i1 %call2, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %state.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0, i32 0
  %4 = atomicrmw and i64* %state.i, i64 -2 release
  %and.i = and i64 %4, 2
  %cmp.i = icmp ne i64 %and.i, 0
  %cmp3.not.i = icmp ult i64 %4, 4
  %or.cond.i = or i1 %cmp3.not.i, %cmp.i
  br i1 %or.cond.i, label %cleanup, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0
  call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #15
  br label %cleanup

if.end:                                           ; preds = %entry
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next.i, align 8, !tbaa !79
  store i64 %addr, i64* %sleep_address.i, align 8, !tbaa !105
  store i8 1, i8* %should_park.i.i, align 8, !tbaa !90
  %head = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 1
  %5 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head, align 8, !tbaa !109
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %5, null
  %tail = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 2
  %6 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8
  %next4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %6, i64 0, i32 2
  %head.sink = select i1 %cmp.not, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next4
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head.sink, align 8, !tbaa !10
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !85
  %state.i23 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0, i32 0
  %7 = atomicrmw and i64* %state.i23, i64 -2 release
  %and.i24 = and i64 %7, 2
  %cmp.i25 = icmp ne i64 %and.i24, 0
  %cmp3.not.i26 = icmp ult i64 %7, 4
  %or.cond.i27 = or i1 %cmp3.not.i26, %cmp.i25
  br i1 %or.cond.i27, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29, label %if.then.i28

if.then.i28:                                      ; preds = %if.end
  %mutex8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0
  call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex8) #15
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29

_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29: ; preds = %if.then.i28, %if.end
  %8 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)***
  %vtable9 = load void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)**, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)*** %8, align 8, !tbaa !41
  %vfn10 = getelementptr inbounds void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)*, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)** %vtable9, i64 1
  %9 = load void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)*, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)** %vfn10, align 8
  call void %9(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this) #15
  %call.i = call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #15
  %10 = load i8, i8* %should_park.i.i, align 8, !tbaa !90, !range !17
  %tobool.not6.i = icmp eq i8 %10, 0
  br i1 %tobool.not6.i, label %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, label %while.body.i

while.body.i:                                     ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29, %while.body.i
  %call3.i = call i32 @pthread_cond_wait(%struct.pthread_mutex_t* nonnull %condvar3.i.i, %struct.pthread_mutex_t* nonnull %mutex2.i.i) #15
  %11 = load i8, i8* %should_park.i.i, align 8, !tbaa !90, !range !17
  %tobool.not.i = icmp eq i8 %11, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, label %while.body.i, !llvm.loop !98

_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit: ; preds = %while.body.i, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29
  %call5.i = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #15
  br label %cleanup

cleanup:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, %if.then.i, %if.then
  %unpark_info.i.sink = phi i64* [ %unpark_info.i, %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit ], [ %invalid_unpark_info.i, %if.then ], [ %invalid_unpark_info.i, %if.then.i ]
  %12 = load i64, i64* %unpark_info.i.sink, align 8, !tbaa !110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #10
  %call.i.i22 = call i32 @pthread_cond_destroy(%struct.pthread_mutex_t* nonnull %condvar3.i.i) #15
  %call2.i.i = call i32 @pthread_mutex_destroy(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #15
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %0) #10
  ret i64 %12
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control8validateERNS2_15validate_actionE(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) unnamed_addr #2 comdat align 2 {
entry:
  %cond_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %cond_state, align 8, !tbaa !102
  %1 = load atomic i64, i64* %0 monotonic, align 8
  %cmp = icmp eq i64 %1, 0
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 2
  %2 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !104
  %3 = ptrtoint %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2 to i64
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store atomic i64 %3, i64* %0 monotonic, align 8
  br label %cleanup

if.else:                                          ; preds = %entry
  %cmp4.not = icmp eq i64 %1, %3
  br i1 %cmp4.not, label %cleanup, label %if.then5

if.then5:                                         ; preds = %if.else
  %invalid_unpark_info = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 2
  store i64 %3, i64* %invalid_unpark_info, align 8, !tbaa !108
  br label %cleanup

cleanup:                                          ; preds = %if.then5, %if.else, %if.then
  %retval.0 = phi i1 [ false, %if.then5 ], [ true, %if.else ], [ true, %if.then ]
  ret i1 %retval.0
}

; Function Attrs: nounwind
define linkonce_odr void @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control12before_sleepEv(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this) unnamed_addr #4 comdat align 2 {
entry:
  %control.i.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", align 8
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 2
  %0 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !104
  %state.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %0, i64 0, i32 0
  %1 = cmpxchg weak i64* %state.i, i64 1, i64 0 release monotonic
  %2 = extractvalue { i64, i1 } %1, 1
  br i1 %2, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %3 = cmpxchg i64* %state.i, i64 1, i64 0 release monotonic
  %4 = extractvalue { i64, i1 } %3, 1
  br i1 %4, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i
  %5 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !41
  %lock_state2.i.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 1
  store i64* %state.i, i64** %lock_state2.i.i.i, align 8, !tbaa !43
  %7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0
  %8 = ptrtoint %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %0 to i64
  %call3.i.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control10unpark_oneEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %7, i64 %8) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  br label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit

_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit: ; preds = %if.end.i.i, %if.then.i, %entry
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr i64 @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control6unparkEib(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, i32 %unparked, i1 zeroext %more_waiters) unnamed_addr #2 comdat align 2 {
entry:
  br i1 %more_waiters, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %cond_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %cond_state, align 8, !tbaa !102
  store atomic i64 0, i64* %0 monotonic, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i64 0
}

; Function Attrs: nounwind
define linkonce i32 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control14unpark_requeueEyyy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i64 %addr_from, i64 %addr_to, i64 %unpark_info) local_unnamed_addr #4 align 2 {
entry:
  %buckets = alloca %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", align 8
  %action = alloca %"struct.Halide::Runtime::Internal::Synchronization::validate_action", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #10
  call void @_ZN6Halide7Runtime8Internal15Synchronization16lock_bucket_pairEyy(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull sret(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair") align 8 %buckets, i64 %addr_from, i64 %addr_to) #16
  %1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #10
  store i8 0, i8* %1, align 8, !tbaa !106
  %invalid_unpark_info.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 2
  store i64 0, i64* %invalid_unpark_info.i, align 8, !tbaa !108
  %2 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)***
  %vtable = load i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)**, i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)*** %2, align 8, !tbaa !41
  %3 = load i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)*, i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)** %vtable, align 8
  %call = call zeroext i1 %3(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) #15
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @_ZN6Halide7Runtime8Internal15Synchronization18unlock_bucket_pairERNS2_11bucket_pairE(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull align 8 dereferenceable(16) %buckets) #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %from = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets, i64 0, i32 0
  %4 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from, align 8, !tbaa !111
  %head = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %4, i64 0, i32 1
  %5 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head, align 8, !tbaa !10
  %cmp.not92 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %5, null
  br i1 %cmp.not92, label %if.end38, label %while.body

while.body:                                       ; preds = %if.end, %if.end22
  %wakeup.098 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %wakeup.2, %if.end22 ], [ null, %if.end ]
  %requeue_tail.097 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue_tail.2, %if.end22 ], [ null, %if.end ]
  %requeue.096 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue.3, %if.end22 ], [ null, %if.end ]
  %data.095 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %7, %if.end22 ], [ %5, %if.end ]
  %prev.094 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %prev.1, %if.end22 ], [ null, %if.end ]
  %data_location.093 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %data_location.1, %if.end22 ], [ %head, %if.end ]
  %sleep_address = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.095, i64 0, i32 1
  %6 = load atomic i64, i64* %sleep_address monotonic, align 8
  %next2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.095, i64 0, i32 2
  %7 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next2, align 8, !tbaa !79
  %cmp3 = icmp eq i64 %6, %addr_from
  br i1 %cmp3, label %if.then4, label %if.end22

if.then4:                                         ; preds = %while.body
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %7, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %data_location.093, align 8, !tbaa !10
  %8 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from, align 8, !tbaa !111
  %tail = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %8, i64 0, i32 2
  %9 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !85
  %cmp6 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %9, %data.095
  br i1 %cmp6, label %if.then7, label %if.end10

if.then7:                                         ; preds = %if.then4
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %prev.094, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !85
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %if.then4
  %10 = load i8, i8* %1, align 8, !tbaa !106, !range !17
  %tobool = icmp ne i8 %10, 0
  %cmp11 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.098, null
  %or.cond = and i1 %cmp11, %tobool
  br i1 %or.cond, label %if.end22, label %if.else

if.else:                                          ; preds = %if.end10
  %cmp13 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue.096, null
  br i1 %cmp13, label %if.end17, label %if.else15

if.else15:                                        ; preds = %if.else
  %next16 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue_tail.097, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.095, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next16, align 8, !tbaa !79
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.else
  %requeue.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue.096, %if.else15 ], [ %data.095, %if.else ]
  store atomic i64 %addr_to, i64* %sleep_address monotonic, align 8
  br label %if.end22

if.end22:                                         ; preds = %if.end17, %if.end10, %while.body
  %data_location.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %data_location.093, %if.end10 ], [ %data_location.093, %if.end17 ], [ %next2, %while.body ]
  %prev.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %prev.094, %if.end10 ], [ %prev.094, %if.end17 ], [ %data.095, %while.body ]
  %requeue.3 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue.096, %if.end10 ], [ %requeue.1, %if.end17 ], [ %requeue.096, %while.body ]
  %requeue_tail.2 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue_tail.097, %if.end10 ], [ %data.095, %if.end17 ], [ %requeue_tail.097, %while.body ]
  %wakeup.2 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %data.095, %if.end10 ], [ %wakeup.098, %if.end17 ], [ %wakeup.098, %while.body ]
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %7, null
  br i1 %cmp.not, label %while.end, label %while.body, !llvm.loop !113

while.end:                                        ; preds = %if.end22
  %cmp23.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue.3, null
  br i1 %cmp23.not, label %if.end38, label %if.then24

if.then24:                                        ; preds = %while.end
  %next25 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue_tail.2, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next25, align 8, !tbaa !79
  %to = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets, i64 0, i32 1
  %11 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %to, align 8, !tbaa !114
  %head26 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %11, i64 0, i32 1
  %12 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head26, align 8, !tbaa !109
  %cmp27 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %12, null
  br i1 %cmp27, label %if.end35, label %if.else31

if.else31:                                        ; preds = %if.then24
  %tail33 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %11, i64 0, i32 2
  %13 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail33, align 8, !tbaa !85
  %next34 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %13, i64 0, i32 2
  br label %if.end35

if.end35:                                         ; preds = %if.else31, %if.then24
  %next34.sink = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %next34, %if.else31 ], [ %head26, %if.then24 ]
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue.3, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next34.sink, align 8, !tbaa !10
  %tail37 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %11, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue_tail.2, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail37, align 8, !tbaa !85
  br label %if.end38

if.end38:                                         ; preds = %if.end35, %while.end, %if.end
  %cmp23106 = phi i1 [ true, %if.end35 ], [ false, %while.end ], [ false, %if.end ]
  %wakeup.0.lcssa105 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %wakeup.2, %if.end35 ], [ %wakeup.2, %while.end ], [ null, %if.end ]
  %cmp39 = icmp ne %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, null
  %14 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)***
  %vtable41 = load void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)**, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)*** %14, align 8, !tbaa !41
  %vfn42 = getelementptr inbounds void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)*, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)** %vtable41, i64 3
  %15 = load void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)*, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)** %vfn42, align 8
  call void %15(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action, i1 zeroext %cmp39, i1 zeroext %cmp23106) #15
  br i1 %cmp39, label %if.then44, label %if.else48

if.then44:                                        ; preds = %if.end38
  %unpark_info45 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, i64 0, i32 3
  store i64 %unpark_info, i64* %unpark_info45, align 8, !tbaa !89
  %mutex.i89 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, i64 0, i32 0, i32 0
  %call.i90 = call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex.i89) #15
  call void @_ZN6Halide7Runtime8Internal15Synchronization18unlock_bucket_pairERNS2_11bucket_pairE(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull align 8 dereferenceable(16) %buckets) #16
  %should_park.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, i64 0, i32 0, i32 2
  store i8 0, i8* %should_park.i, align 8, !tbaa !90
  %condvar.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, i64 0, i32 0, i32 1
  %call.i88 = call i32 @pthread_cond_signal(%struct.pthread_mutex_t* nonnull %condvar.i) #15
  %call.i = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex.i89) #15
  br label %if.end49

if.else48:                                        ; preds = %if.end38
  call void @_ZN6Halide7Runtime8Internal15Synchronization18unlock_bucket_pairERNS2_11bucket_pairE(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull align 8 dereferenceable(16) %buckets) #16
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then44
  %16 = load i8, i8* %1, align 8
  %17 = and i8 %16, 1
  %tobool52 = icmp ne i8 %17, 0
  %18 = and i1 %cmp39, %tobool52
  %conv = zext i1 %18 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end49, %if.then
  %retval.0 = phi i32 [ %conv, %if.end49 ], [ 0, %if.then ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #10
  ret i32 %retval.0
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal15Synchronization16lock_bucket_pairEyy(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* noalias sret(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair") align 8 %agg.result, i64 %addr_from, i64 %addr_to) local_unnamed_addr #4 {
entry:
  %mul.i = mul i64 %addr_from, -7046029254386353131
  %shr.i = lshr i64 %mul.i, 54
  %mul.i37 = mul i64 %addr_to, -7046029254386353131
  %shr.i38 = lshr i64 %mul.i37, 54
  %cmp = icmp eq i64 %shr.i, %shr.i38
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i
  %state.i42 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx, i64 0, i32 0, i32 0
  %0 = cmpxchg weak i64* %state.i42, i64 0, i64 1 acquire monotonic
  %1 = extractvalue { i64, i1 } %0, 1
  br i1 %1, label %cleanup, label %if.then.i43

if.then.i43:                                      ; preds = %if.then
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #15
  br label %cleanup

if.else:                                          ; preds = %entry
  %cmp2 = icmp ult i64 %shr.i, %shr.i38
  br i1 %cmp2, label %if.then3, label %if.else9

if.then3:                                         ; preds = %if.else
  %arrayidx5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i
  %arrayidx6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i38
  %state.i52 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx5, i64 0, i32 0, i32 0
  %2 = cmpxchg weak i64* %state.i52, i64 0, i64 1 acquire monotonic
  %3 = extractvalue { i64, i1 } %2, 1
  br i1 %3, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54, label %if.then.i53

if.then.i53:                                      ; preds = %if.then3
  %mutex7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx5, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex7) #15
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54

_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54: ; preds = %if.then.i53, %if.then3
  %state.i49 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx6, i64 0, i32 0, i32 0
  %4 = cmpxchg weak i64* %state.i49, i64 0, i64 1 acquire monotonic
  %5 = extractvalue { i64, i1 } %4, 1
  br i1 %5, label %cleanup, label %if.then.i50

if.then.i50:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54
  %mutex8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx6, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex8) #15
  br label %cleanup

if.else9:                                         ; preds = %if.else
  %arrayidx11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i38
  %arrayidx13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i
  %state.i39 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx11, i64 0, i32 0, i32 0
  %6 = cmpxchg weak i64* %state.i39, i64 0, i64 1 acquire monotonic
  %7 = extractvalue { i64, i1 } %6, 1
  br i1 %7, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41, label %if.then.i40

if.then.i40:                                      ; preds = %if.else9
  %mutex14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx11, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex14) #15
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41

_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41: ; preds = %if.then.i40, %if.else9
  %state.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx13, i64 0, i32 0, i32 0
  %8 = cmpxchg weak i64* %state.i, i64 0, i64 1 acquire monotonic
  %9 = extractvalue { i64, i1 } %8, 1
  br i1 %9, label %cleanup, label %if.then.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41
  %mutex15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx13, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex15) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41, %if.then.i50, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54, %if.then.i43, %if.then
  %arrayidx13.sink = phi %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* [ %arrayidx, %if.then ], [ %arrayidx, %if.then.i43 ], [ %arrayidx5, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54 ], [ %arrayidx5, %if.then.i50 ], [ %arrayidx13, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41 ], [ %arrayidx13, %if.then.i ]
  %arrayidx11.sink = phi %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* [ %arrayidx, %if.then ], [ %arrayidx, %if.then.i43 ], [ %arrayidx6, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54 ], [ %arrayidx6, %if.then.i50 ], [ %arrayidx11, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41 ], [ %arrayidx11, %if.then.i ]
  %from2.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %agg.result, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx13.sink, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from2.i, align 8, !tbaa !10
  %to3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %agg.result, i64 0, i32 1
  store %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx11.sink, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %to3.i, align 8, !tbaa !10
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal15Synchronization18unlock_bucket_pairERNS2_11bucket_pairE(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull align 8 dereferenceable(16) %buckets) local_unnamed_addr #0 {
entry:
  %from = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets, i64 0, i32 0
  %0 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from, align 8, !tbaa !111
  %to = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets, i64 0, i32 1
  %1 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %to, align 8, !tbaa !114
  %cmp = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, %1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %state.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, i64 0, i32 0, i32 0
  %2 = atomicrmw and i64* %state.i, i64 -2 release
  %and.i = and i64 %2, 2
  %cmp.i = icmp ne i64 %and.i, 0
  %cmp3.not.i = icmp ult i64 %2, 4
  %or.cond.i = or i1 %cmp3.not.i, %cmp.i
  br i1 %or.cond.i, label %if.end15, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #15
  br label %if.end15

if.else:                                          ; preds = %entry
  %cmp4 = icmp ugt %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, %1
  br i1 %cmp4, label %if.then5, label %if.else10

if.then5:                                         ; preds = %if.else
  %state.i25 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, i64 0, i32 0, i32 0
  %3 = atomicrmw and i64* %state.i25, i64 -2 release
  %and.i26 = and i64 %3, 2
  %cmp.i27 = icmp ne i64 %and.i26, 0
  %cmp3.not.i28 = icmp ult i64 %3, 4
  %or.cond.i29 = or i1 %cmp3.not.i28, %cmp.i27
  br i1 %or.cond.i29, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31, label %if.then.i30

if.then.i30:                                      ; preds = %if.then5
  %mutex7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex7) #15
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31

_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31: ; preds = %if.then.i30, %if.then5
  %4 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %to, align 8, !tbaa !114
  %state.i32 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %4, i64 0, i32 0, i32 0
  %5 = atomicrmw and i64* %state.i32, i64 -2 release
  %and.i33 = and i64 %5, 2
  %cmp.i34 = icmp ne i64 %and.i33, 0
  %cmp3.not.i35 = icmp ult i64 %5, 4
  %or.cond.i36 = or i1 %cmp3.not.i35, %cmp.i34
  br i1 %or.cond.i36, label %if.end15, label %if.then.i37

if.then.i37:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31
  %mutex9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %4, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex9) #15
  br label %if.end15

if.else10:                                        ; preds = %if.else
  %state.i39 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %1, i64 0, i32 0, i32 0
  %6 = atomicrmw and i64* %state.i39, i64 -2 release
  %and.i40 = and i64 %6, 2
  %cmp.i41 = icmp ne i64 %and.i40, 0
  %cmp3.not.i42 = icmp ult i64 %6, 4
  %or.cond.i43 = or i1 %cmp3.not.i42, %cmp.i41
  br i1 %or.cond.i43, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45, label %if.then.i44

if.then.i44:                                      ; preds = %if.else10
  %mutex12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %1, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex12) #15
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45

_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45: ; preds = %if.then.i44, %if.else10
  %7 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from, align 8, !tbaa !111
  %state.i46 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %7, i64 0, i32 0, i32 0
  %8 = atomicrmw and i64* %state.i46, i64 -2 release
  %and.i47 = and i64 %8, 2
  %cmp.i48 = icmp ne i64 %and.i47, 0
  %cmp3.not.i49 = icmp ult i64 %8, 4
  %or.cond.i50 = or i1 %cmp3.not.i49, %cmp.i48
  br i1 %or.cond.i50, label %if.end15, label %if.then.i51

if.then.i51:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45
  %mutex14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %7, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex14) #15
  br label %if.end15

if.end15:                                         ; preds = %if.then.i51, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45, %if.then.i37, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31, %if.then.i, %if.then
  ret void
}

; Function Attrs: nounwind
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control8validateERNS2_15validate_actionE(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) unnamed_addr #4 comdat align 2 {
entry:
  %cond_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %cond_state, align 8, !tbaa !99
  %1 = load atomic i64, i64* %0 monotonic, align 8
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 2
  %2 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !101
  %3 = ptrtoint %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2 to i64
  %cmp.not = icmp eq i64 %1, %3
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  store atomic i64 0, i64* %0 monotonic, align 8
  %4 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !101
  %state.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %4, i64 0, i32 0
  %5 = load atomic i64, i64* %state.i monotonic, align 8
  %and11.i = and i64 %5, 1
  %tobool.not12.i = icmp eq i64 %and11.i, 0
  br i1 %tobool.not12.i, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit, label %if.end.i

if.end.i:                                         ; preds = %if.end, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i
  %val.013.i = phi i64 [ %8, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i ], [ %5, %if.end ]
  %or.i = or i64 %val.013.i, 2
  %6 = cmpxchg weak i64* %state.i, i64 %val.013.i, i64 %or.i monotonic monotonic
  %7 = extractvalue { i64, i1 } %6, 1
  br i1 %7, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i: ; preds = %if.end.i
  %8 = extractvalue { i64, i1 } %6, 0
  %and.i = and i64 %8, 1
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit, label %if.end.i

_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit: ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i, %if.end.i, %if.end
  %tobool.not.lcssa.i = phi i8 [ 1, %if.end ], [ 1, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i ], [ 0, %if.end.i ]
  %unpark_one = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 0
  store i8 %tobool.not.lcssa.i, i8* %unpark_one, align 8, !tbaa !106
  br label %cleanup

cleanup:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit, %entry
  ret i1 %cmp.not
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control6unparkEib(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i32 %unparked, i1 zeroext %more_waiters) unnamed_addr #2 comdat align 2 {
entry:
  ret i64 0
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr void @_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control16requeue_callbackERKNS2_15validate_actionEbb(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action, i1 zeroext %one_to_wake, i1 zeroext %some_requeued) unnamed_addr #2 comdat align 2 {
entry:
  %unpark_one = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 0
  %0 = load i8, i8* %unpark_one, align 8, !tbaa !106, !range !17
  %tobool.not = icmp ne i8 %0, 0
  %1 = and i1 %tobool.not, %some_requeued
  br i1 %1, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 2
  %2 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !101
  %state.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2, i64 0, i32 0
  %3 = atomicrmw or i64* %state.i, i64 2 monotonic
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @_ZN6Halide7Runtime8Internal27default_desired_num_threadsEv() local_unnamed_addr #0 {
entry:
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #15
  %tobool.not = icmp eq i8* %call, null
  br i1 %tobool.not, label %if.end, label %cond.true

if.end:                                           ; preds = %entry
  %call1 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #15
  %tobool2.not = icmp eq i8* %call1, null
  br i1 %tobool2.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end, %entry
  %threads_str.010 = phi i8* [ %call1, %if.end ], [ %call, %entry ]
  %call3 = tail call i32 @atoi(i8* nonnull %threads_str.010) #15
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call4 = tail call i32 @halide_host_cpu_count() #15
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call3, %cond.true ], [ %call4, %cond.false ]
  ret i32 %cond
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal13worker_threadEPv(i8* %arg) #0 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %0 = bitcast i8* %arg to %"struct.Halide::Runtime::Internal::work"*
  tail call void @_ZN6Halide7Runtime8Internal28worker_thread_already_lockedEPNS1_4workE(%"struct.Halide::Runtime::Internal::work"* %0) #16
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  ret void
}

; Function Attrs: nounwind mustprogress
define weak %struct.halide_thread* @halide_spawn_thread(void (i8*)* %f, i8* %closure) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @malloc(i64 24) #15
  %f1 = bitcast i8* %call to void (i8*)**
  store void (i8*)* %f, void (i8*)** %f1, align 8, !tbaa !115
  %closure2 = getelementptr inbounds i8, i8* %call, i64 8
  %0 = bitcast i8* %closure2 to i8**
  store i8* %closure, i8** %0, align 8, !tbaa !117
  %handle = getelementptr inbounds i8, i8* %call, i64 16
  %1 = bitcast i8* %handle to i64*
  store i64 0, i64* %1, align 8, !tbaa !118
  %call4 = tail call i32 @pthread_create(i64* nonnull %1, i8* null, i8* (i8*)* nonnull @_ZN6Halide7Runtime8Internal19spawn_thread_helperEPv, i8* %call) #15
  %2 = bitcast i8* %call to %struct.halide_thread*
  ret %struct.halide_thread* %2
}

; Function Attrs: nounwind mustprogress
define linkonce i8* @_ZN6Halide7Runtime8Internal19spawn_thread_helperEPv(i8* %arg) #0 {
entry:
  %f = bitcast i8* %arg to void (i8*)**
  %0 = load void (i8*)*, void (i8*)** %f, align 8, !tbaa !115
  %closure = getelementptr inbounds i8, i8* %arg, i64 8
  %1 = bitcast i8* %closure to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !117
  tail call void %0(i8* %2) #15
  ret i8* null
}

declare i32 @pthread_create(i64*, i8*, i8* (i8*)*, i8*) local_unnamed_addr #1

declare i8* @getenv(i8*) local_unnamed_addr #1

declare i32 @atoi(i8*) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_parallel_tasks(i8* %user_context, i32 %num_tasks, %struct.halide_parallel_task_t* %tasks, i8* %task_parent) #0 {
entry:
  %conv = sext i32 %num_tasks to i64
  %0 = alloca %"struct.Halide::Runtime::Internal::work", i64 %conv, align 8
  %cmp76 = icmp sgt i32 %num_tasks, 0
  br i1 %cmp76, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.inc, %entry
  %num_tasks.addr.0.lcssa = phi i32 [ %num_tasks, %entry ], [ %num_tasks.addr.1, %for.inc ]
  %cmp17 = icmp eq i32 %num_tasks.addr.0.lcssa, 0
  br i1 %cmp17, label %cleanup, label %if.end19

for.body:                                         ; preds = %entry, %for.inc
  %indvars.iv82 = phi i64 [ %indvars.iv.next83, %for.inc ], [ 0, %entry ]
  %num_tasks.addr.078 = phi i32 [ %num_tasks.addr.1, %for.inc ], [ %num_tasks, %entry ]
  %tasks.addr.077 = phi %struct.halide_parallel_task_t* [ %tasks.addr.1, %for.inc ], [ %tasks, %entry ]
  %extent = getelementptr inbounds %struct.halide_parallel_task_t, %struct.halide_parallel_task_t* %tasks.addr.077, i64 0, i32 6
  %1 = load i32, i32* %extent, align 8, !tbaa !119
  %cmp1 = icmp slt i32 %1, 1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %dec = add nsw i32 %num_tasks.addr.078, -1
  br label %for.inc

if.end:                                           ; preds = %for.body
  %incdec.ptr = getelementptr inbounds %struct.halide_parallel_task_t, %struct.halide_parallel_task_t* %tasks.addr.077, i64 1
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82
  %2 = bitcast %"struct.Halide::Runtime::Internal::work"* %arrayidx to i8*
  %3 = bitcast %struct.halide_parallel_task_t* %tasks.addr.077 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %2, i8* nonnull align 8 dereferenceable(56) %3, i64 56, i1 false), !tbaa.struct !120
  %task_fn = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 1
  store i32 (i8*, i32, i8*)* null, i32 (i8*, i32, i8*)** %task_fn, align 8, !tbaa !32
  %user_context6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 7
  store i8* %user_context, i8** %user_context6, align 8, !tbaa !33
  %exit_status = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 9
  store i32 0, i32* %exit_status, align 4, !tbaa !34
  %active_workers = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 8
  store i32 0, i32* %active_workers, align 8, !tbaa !35
  %next_semaphore = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 10
  store i32 0, i32* %next_semaphore, align 8, !tbaa !36
  %owner_is_sleeping = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 11
  store i8 0, i8* %owner_is_sleeping, align 4, !tbaa !37
  %parent_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 5
  %4 = bitcast %"struct.Halide::Runtime::Internal::work"** %parent_job to i8**
  store i8* %task_parent, i8** %4, align 8, !tbaa !40
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.then
  %tasks.addr.1 = phi %struct.halide_parallel_task_t* [ %tasks.addr.077, %if.then ], [ %incdec.ptr, %if.end ]
  %num_tasks.addr.1 = phi i32 [ %dec, %if.then ], [ %num_tasks.addr.078, %if.end ]
  %indvars.iv.next83 = add nuw nsw i64 %indvars.iv82, 1
  %5 = sext i32 %num_tasks.addr.1 to i64
  %cmp = icmp slt i64 %indvars.iv.next83, %5
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !121

if.end19:                                         ; preds = %for.cond.cleanup
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %6 = bitcast i8* %task_parent to %"struct.Halide::Runtime::Internal::work"*
  call void @_ZN6Halide7Runtime8Internal27enqueue_work_already_lockedEiPNS1_4workES3_(i32 %num_tasks.addr.0.lcssa, %"struct.Halide::Runtime::Internal::work"* nonnull %0, %"struct.Halide::Runtime::Internal::work"* %6) #16
  %cmp2373 = icmp sgt i32 %num_tasks.addr.0.lcssa, 0
  br i1 %cmp2373, label %for.body25.preheader, label %for.cond.cleanup24

for.body25.preheader:                             ; preds = %if.end19
  %wide.trip.count = zext i32 %num_tasks.addr.0.lcssa to i64
  br label %for.body25

for.cond.cleanup24:                               ; preds = %for.body25, %if.end19
  %exit_status20.0.lcssa = phi i32 [ 0, %if.end19 ], [ %spec.select, %for.body25 ]
  call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  br label %cleanup

for.body25:                                       ; preds = %for.body25, %for.body25.preheader
  %indvars.iv = phi i64 [ 0, %for.body25.preheader ], [ %indvars.iv.next, %for.body25 ]
  %exit_status20.074 = phi i32 [ 0, %for.body25.preheader ], [ %spec.select, %for.body25 ]
  %add.ptr = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv
  call void @_ZN6Halide7Runtime8Internal28worker_thread_already_lockedEPNS1_4workE(%"struct.Halide::Runtime::Internal::work"* nonnull %add.ptr) #16
  %exit_status28 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv, i32 9
  %7 = load i32, i32* %exit_status28, align 4, !tbaa !34
  %cmp29.not = icmp eq i32 %7, 0
  %spec.select = select i1 %cmp29.not, i32 %exit_status20.074, i32 %7
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup24, label %for.body25, !llvm.loop !122

cleanup:                                          ; preds = %for.cond.cleanup24, %for.cond.cleanup
  %retval.0 = phi i32 [ %exit_status20.0.lcssa, %for.cond.cleanup24 ], [ 0, %for.cond.cleanup ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_default_semaphore_init(%struct.halide_semaphore_t* %s, i32 %n) #2 {
entry:
  %value = bitcast %struct.halide_semaphore_t* %s to i32*
  store atomic i32 %n, i32* %value release, align 4
  ret i32 %n
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_semaphore_release(%struct.halide_semaphore_t* %s, i32 %n) #0 {
entry:
  %value = bitcast %struct.halide_semaphore_t* %s to i32*
  %0 = atomicrmw add i32* %value, i32 %n acq_rel
  %cmp = icmp eq i32 %0, 0
  %cmp1 = icmp ne i32 %n, 0
  %or.cond = and i1 %cmp1, %cmp
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 8)) #16
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #16
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %add = add nsw i32 %0, %n
  ret i32 %add
}

; Function Attrs: nounwind mustprogress
define weak void @halide_thread_pool_cleanup() #0 {
entry:
  tail call void @halide_shutdown_thread_pool() #16
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_shutdown_thread_pool() local_unnamed_addr #0 {
entry:
  %0 = load i8, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 15), align 1, !tbaa !45, !range !17
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  store i8 1, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 14), align 8, !tbaa !63
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #16
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 8)) #16
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 9)) #16
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %1 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !52
  %cmp4 = icmp sgt i32 %1, 0
  br i1 %cmp4, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body, %if.then
  %call.i = tail call i8* @memset(i8* nonnull bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i32 0, i64 2116) #15
  br label %if.end

for.body:                                         ; preds = %if.then, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.then ]
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 13, i64 %indvars.iv
  %2 = load %struct.halide_thread*, %struct.halide_thread** %arrayidx, align 8, !tbaa !10
  tail call void @halide_join_thread(%struct.halide_thread* %2) #16
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %3 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !52
  %4 = sext i32 %3 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %4
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !123

if.end:                                           ; preds = %for.cond.cleanup, %entry
  ret void
}

declare i8* @memset(i8*, i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_join_thread(%struct.halide_thread* %thread_arg) local_unnamed_addr #0 {
entry:
  %ret = alloca i8*, align 8
  %0 = bitcast %struct.halide_thread* %thread_arg to %"struct.Halide::Runtime::Internal::spawned_thread"*
  %1 = bitcast i8** %ret to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #10
  store i8* null, i8** %ret, align 8, !tbaa !10
  %handle = getelementptr inbounds %"struct.Halide::Runtime::Internal::spawned_thread", %"struct.Halide::Runtime::Internal::spawned_thread"* %0, i64 0, i32 2
  %2 = load i64, i64* %handle, align 8, !tbaa !118
  %call = call i32 @pthread_join(i64 %2, i8** nonnull %ret) #15
  %3 = bitcast %struct.halide_thread* %thread_arg to i8*
  call void @free(i8* %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #10
  ret void
}

declare i32 @pthread_join(i64, i8**) local_unnamed_addr #1

; Function Attrs: nounwind
define weak void @halide_cond_signal(%struct.halide_mutex* %cond) local_unnamed_addr #4 {
entry:
  %control.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", align 8
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %cond, i64 0, i32 0, i64 0
  %0 = load atomic i64, i64* %state.i monotonic, align 8
  %cmp.i = icmp eq i64 %0, 0
  br i1 %cmp.i, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond6signalEv.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #10
  %2 = inttoptr i64 %0 to %"class.Halide::Runtime::Internal::Synchronization::word_lock"*
  %3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization22signal_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !41
  %cond_state2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 1
  store i64* %state.i, i64** %cond_state2.i.i, align 8, !tbaa !124
  %mutex3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 2
  store %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex3.i.i, align 8, !tbaa !126
  %4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0
  %5 = ptrtoint %struct.halide_mutex* %cond to i64
  %call.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control10unpark_oneEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %4, i64 %5) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #10
  br label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond6signalEv.exit

_ZN6Halide7Runtime8Internal15Synchronization9fast_cond6signalEv.exit: ; preds = %if.end.i, %entry
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control8validateERNS2_15validate_actionE(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) unnamed_addr #2 comdat align 2 {
entry:
  ret i1 true
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr i64 @_ZN6Halide7Runtime8Internal15Synchronization22signal_parking_control6unparkEib(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, i32 %unparked, i1 zeroext %more_waiters) unnamed_addr #2 comdat align 2 {
entry:
  br i1 %more_waiters, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %cond_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %cond_state, align 8, !tbaa !124
  store atomic i64 0, i64* %0 monotonic, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i64 0
}

; Function Attrs: nounwind mustprogress
define weak %struct.halide_mutex_array* @halide_mutex_array_create(i32 %sz) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @halide_malloc(i8* null, i64 8) #15
  %0 = bitcast i8* %call to %struct.halide_mutex_array*
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv = sext i32 %sz to i64
  %mul = shl nsw i64 %conv, 3
  %call1 = tail call i8* @halide_malloc(i8* null, i64 %mul) #15
  %1 = bitcast i8* %call to i8**
  store i8* %call1, i8** %1, align 8, !tbaa !127
  %cmp4 = icmp eq i8* %call1, null
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  tail call void @halide_free(i8* null, i8* nonnull %call) #15
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %call10 = tail call i8* @memset(i8* nonnull %call1, i32 0, i64 %mul) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.then5, %entry
  %retval.0 = phi %struct.halide_mutex_array* [ null, %if.then5 ], [ %0, %if.end6 ], [ null, %entry ]
  ret %struct.halide_mutex_array* %retval.0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_mutex_array_destroy(i8* %user_context, i8* %array) local_unnamed_addr #0 {
entry:
  %0 = bitcast i8* %array to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !127
  tail call void @halide_free(i8* %user_context, i8* %1) #15
  tail call void @halide_free(i8* %user_context, i8* %array) #15
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_mutex_array_lock(%struct.halide_mutex_array* %array, i32 %entry1) local_unnamed_addr #0 {
entry:
  %array2 = getelementptr inbounds %struct.halide_mutex_array, %struct.halide_mutex_array* %array, i64 0, i32 0
  %0 = load %struct.halide_mutex*, %struct.halide_mutex** %array2, align 8, !tbaa !127
  %idxprom = sext i32 %entry1 to i64
  %arrayidx = getelementptr inbounds %struct.halide_mutex, %struct.halide_mutex* %0, i64 %idxprom
  tail call void @halide_mutex_lock(%struct.halide_mutex* %arrayidx) #16
  ret i32 0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_mutex_array_unlock(%struct.halide_mutex_array* %array, i32 %entry1) local_unnamed_addr #0 {
entry:
  %array2 = getelementptr inbounds %struct.halide_mutex_array, %struct.halide_mutex_array* %array, i64 0, i32 0
  %0 = load %struct.halide_mutex*, %struct.halide_mutex** %array2, align 8, !tbaa !127
  %idxprom = sext i32 %entry1 to i64
  %arrayidx = getelementptr inbounds %struct.halide_mutex, %struct.halide_mutex* %0, i64 %idxprom
  tail call void @halide_mutex_unlock(%struct.halide_mutex* %arrayidx) #16
  ret i32 0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_set_num_threads(i32 %n) local_unnamed_addr #0 {
entry:
  %cmp = icmp slt i32 %n, 0
  br i1 %cmp, label %if.end3.thread, label %if.end

if.end3.thread:                                   ; preds = %entry
  tail call void @halide_error(i8* null, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #15
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %0 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  br label %if.else.i

if.end:                                           ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  %cmp1 = icmp eq i32 %n, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %call = tail call i32 @_ZN6Halide7Runtime8Internal27default_desired_num_threadsEv() #16
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %n.addr.0 = phi i32 [ %call, %if.then2 ], [ %n, %if.end ]
  %1 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  %cmp.i = icmp sgt i32 %n.addr.0, 256
  br i1 %cmp.i, label %_ZN6Halide7Runtime8Internal17clamp_num_threadsEi.exit, label %if.else.i

if.else.i:                                        ; preds = %if.end3, %if.end3.thread
  %2 = phi i32 [ %0, %if.end3.thread ], [ %1, %if.end3 ]
  %n.addr.012 = phi i32 [ %n, %if.end3.thread ], [ %n.addr.0, %if.end3 ]
  %3 = icmp sgt i32 %n.addr.012, 1
  %spec.select.i = select i1 %3, i32 %n.addr.012, i32 1
  br label %_ZN6Halide7Runtime8Internal17clamp_num_threadsEi.exit

_ZN6Halide7Runtime8Internal17clamp_num_threadsEi.exit: ; preds = %if.else.i, %if.end3
  %4 = phi i32 [ %2, %if.else.i ], [ %1, %if.end3 ]
  %call48 = phi i32 [ %spec.select.i, %if.else.i ], [ 256, %if.end3 ]
  store i32 %call48, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !51
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #16
  ret i32 %4
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* @halide_set_custom_do_task(i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 8, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %f, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 8, !tbaa !10
  ret i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* @halide_set_custom_do_loop_task(i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)*, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 8, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %f, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 8, !tbaa !10
  ret i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* @halide_set_custom_do_par_for(i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 8, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %f, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 8, !tbaa !10
  ret i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_set_custom_parallel_runtime(i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %do_par_for, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %do_task, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %do_loop_task, i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)* %do_parallel_tasks, i32 (%struct.halide_semaphore_t*, i32)* %semaphore_init, i1 (%struct.halide_semaphore_t*, i32)* %semaphore_try_acquire, i32 (%struct.halide_semaphore_t*, i32)* %semaphore_release) local_unnamed_addr #2 {
entry:
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %do_par_for, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 8, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %do_task, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 8, !tbaa !10
  store i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %do_loop_task, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 8, !tbaa !10
  store i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)* %do_parallel_tasks, i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)** @_ZN6Halide7Runtime8Internal24custom_do_parallel_tasksE, align 8, !tbaa !10
  store i32 (%struct.halide_semaphore_t*, i32)* %semaphore_init, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal21custom_semaphore_initE, align 8, !tbaa !10
  store i1 (%struct.halide_semaphore_t*, i32)* %semaphore_try_acquire, i1 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal28custom_semaphore_try_acquireE, align 8, !tbaa !10
  store i32 (%struct.halide_semaphore_t*, i32)* %semaphore_release, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal24custom_semaphore_releaseE, align 8, !tbaa !10
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_par_for(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 8, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_parallel_tasks(i8* %user_context, i32 %num_tasks, %struct.halide_parallel_task_t* %tasks, i8* %task_parent) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)*, i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)** @_ZN6Halide7Runtime8Internal24custom_do_parallel_tasksE, align 8, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, i32 %num_tasks, %struct.halide_parallel_task_t* %tasks, i8* %task_parent) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_semaphore_init(%struct.halide_semaphore_t* %sema, i32 %count) local_unnamed_addr #0 {
entry:
  %0 = load i32 (%struct.halide_semaphore_t*, i32)*, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal21custom_semaphore_initE, align 8, !tbaa !10
  %call = tail call i32 %0(%struct.halide_semaphore_t* %sema, i32 %count) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_semaphore_release(%struct.halide_semaphore_t* %sema, i32 %count) local_unnamed_addr #0 {
entry:
  %0 = load i32 (%struct.halide_semaphore_t*, i32)*, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal24custom_semaphore_releaseE, align 8, !tbaa !10
  %call = tail call i32 %0(%struct.halide_semaphore_t* %sema, i32 %count) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak zeroext i1 @halide_semaphore_try_acquire(%struct.halide_semaphore_t* %sema, i32 %count) local_unnamed_addr #0 {
entry:
  %0 = load i1 (%struct.halide_semaphore_t*, i32)*, i1 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal28custom_semaphore_try_acquireE, align 8, !tbaa !10
  %call = tail call zeroext i1 %0(%struct.halide_semaphore_t* %sema, i32 %count) #15
  ret i1 %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_get_symbol(i8* %name) #0 {
entry:
  %call = tail call i8* @dlsym(i8* null, i8* %name) #15
  ret i8* %call
}

declare i8* @dlsym(i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_load_library(i8* %name) #0 {
entry:
  %call = tail call i8* @dlopen(i8* %name, i32 1) #15
  %tobool.not = icmp eq i8* %call, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call3 = tail call i8* @dlerror() #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i8* %call
}

declare i8* @dlopen(i8*, i32) local_unnamed_addr #1

declare i8* @dlerror() local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_get_library_symbol(i8* %lib, i8* %name) #0 {
entry:
  %call = tail call i8* @dlsym(i8* %lib, i8* %name) #15
  ret i8* %call
}

; Function Attrs: nounwind willreturn mustprogress
define weak i8* (i8*)* @halide_set_custom_get_symbol(i8* (i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i8* (i8*)*, i8* (i8*)** @_ZN6Halide7Runtime8Internal17custom_get_symbolE, align 8, !tbaa !10
  store i8* (i8*)* %f, i8* (i8*)** @_ZN6Halide7Runtime8Internal17custom_get_symbolE, align 8, !tbaa !10
  ret i8* (i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i8* (i8*)* @halide_set_custom_load_library(i8* (i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i8* (i8*)*, i8* (i8*)** @_ZN6Halide7Runtime8Internal19custom_load_libraryE, align 8, !tbaa !10
  store i8* (i8*)* %f, i8* (i8*)** @_ZN6Halide7Runtime8Internal19custom_load_libraryE, align 8, !tbaa !10
  ret i8* (i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i8* (i8*, i8*)* @halide_set_custom_get_library_symbol(i8* (i8*, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** @_ZN6Halide7Runtime8Internal25custom_get_library_symbolE, align 8, !tbaa !10
  store i8* (i8*, i8*)* %f, i8* (i8*, i8*)** @_ZN6Halide7Runtime8Internal25custom_get_library_symbolE, align 8, !tbaa !10
  ret i8* (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_get_symbol(i8* %name) local_unnamed_addr #0 {
entry:
  %0 = load i8* (i8*)*, i8* (i8*)** @_ZN6Halide7Runtime8Internal17custom_get_symbolE, align 8, !tbaa !10
  %call = tail call i8* %0(i8* %name) #15
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_load_library(i8* %name) local_unnamed_addr #0 {
entry:
  %0 = load i8* (i8*)*, i8* (i8*)** @_ZN6Halide7Runtime8Internal19custom_load_libraryE, align 8, !tbaa !10
  %call = tail call i8* %0(i8* %name) #15
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_get_library_symbol(i8* %lib, i8* %name) local_unnamed_addr #0 {
entry:
  %0 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** @_ZN6Halide7Runtime8Internal25custom_get_library_symbolE, align 8, !tbaa !10
  %call = tail call i8* %0(i8* %lib, i8* %name) #15
  ret i8* %call
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_set_gpu_device(i32 %d) local_unnamed_addr #2 {
entry:
  store i32 %d, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !tbaa !73
  store i8 1, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !tbaa !15
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_get_gpu_device(i8* %user_context) local_unnamed_addr #4 {
entry:
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i, %entry
  %0 = atomicrmw volatile xchg i8* @_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE, i8 1 acquire
  %tobool.not.i = icmp eq i8 %0, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit, label %while.cond.i, !llvm.loop !129

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit: ; preds = %while.cond.i
  %1 = load i8, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !tbaa !15, !range !17
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.then, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge: ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %.pre = load i32, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !tbaa !73
  br label %if.end4

if.then:                                          ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0)) #15
  %tobool1.not = icmp eq i8* %call, null
  br i1 %tobool1.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %call3 = tail call i32 @atoi(i8* nonnull %call) #15
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %storemerge = phi i32 [ %call3, %if.then2 ], [ -1, %if.then ]
  store i32 %storemerge, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !tbaa !73
  store i8 1, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !tbaa !15
  br label %if.end4

if.end4:                                          ; preds = %if.end, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge
  %2 = phi i32 [ %.pre, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge ], [ %storemerge, %if.end ]
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE release, align 1
  ret i32 %2
}

; Function Attrs: nounwind
define weak i32 @halide_default_trace(i8* %user_context, %struct.halide_trace_event_t* %e) #4 {
entry:
  %0 = atomicrmw add i32* @_ZZ20halide_default_traceE3ids, i32 1 seq_cst
  %call = tail call i32 @halide_get_trace_file(i8* %user_context) #16
  %cmp = icmp sgt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %type = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4
  %lanes = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 2
  %1 = load i16, i16* %lanes, align 2, !tbaa !130
  %conv = zext i16 %1 to i32
  %bits.i = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 1
  %2 = load i8, i8* %bits.i, align 1, !tbaa !136
  %conv.i = zext i8 %2 to i32
  %add.i = add nuw nsw i32 %conv.i, 7
  %div.i = lshr i32 %add.i, 3
  %mul = mul nuw nsw i32 %div.i, %conv
  %dimensions = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 8
  %3 = load i32, i32* %dimensions, align 8, !tbaa !137
  %mul3 = shl i32 %3, 2
  %func = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 0
  %4 = load i8*, i8** %func, align 8, !tbaa !138
  %call4 = tail call i64 @strlen(i8* %4) #15
  %5 = trunc i64 %call4 to i32
  %conv5 = add i32 %5, 1
  %trace_tag = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 3
  %6 = load i8*, i8** %trace_tag, align 8, !tbaa !139
  %tobool.not = icmp eq i8* %6, null
  br i1 %tobool.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.then
  %call7 = tail call i64 @strlen(i8* nonnull %6) #15
  %7 = trunc i64 %call7 to i32
  %phi.cast = add i32 %7, 1
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.then
  %cond = phi i32 [ %phi.cast, %cond.true ], [ 1, %if.then ]
  %add11 = add i32 %mul3, 31
  %add12 = add i32 %add11, %mul
  %add13 = add i32 %add12, %conv5
  %add14 = add i32 %add13, %cond
  %and = and i32 %add14, -4
  %8 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !10
  %lock.i.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 0, i32 0
  %cmp.i.i = icmp ult i32 %and, 1048577
  %cursor.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 1
  %overage.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 2
  %arraydecay.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 3, i64 0
  br i1 %cmp.i.i, label %while.body.i.i.us.i, label %while.body.i.i.i

while.body.i.i.us.i:                              ; preds = %cond.end, %while.body.i.i.us.i.backedge
  %9 = load volatile i32, i32* %lock.i.i.i, align 4, !tbaa !140
  %and.i.i.us.i = and i32 %9, 1073741823
  %add.i.i.us.i = add nuw nsw i32 %and.i.i.us.i, 1
  %10 = cmpxchg i32* %lock.i.i.i, i32 %and.i.i.us.i, i32 %add.i.i.us.i seq_cst seq_cst
  %11 = extractvalue { i32, i1 } %10, 1
  br i1 %11, label %do.end.i.us.i, label %while.body.i.i.us.i.backedge

do.end.i.us.i:                                    ; preds = %while.body.i.i.us.i
  %12 = atomicrmw add i32* %cursor.i.i, i32 %and seq_cst
  %add.i.us.i = add i32 %12, %and
  %cmp2.i.us.i = icmp ugt i32 %add.i.us.i, 1048576
  br i1 %cmp2.i.us.i, label %while.body.us.i, label %_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit

while.body.us.i:                                  ; preds = %do.end.i.us.i
  %13 = atomicrmw add i32* %overage.i.i, i32 %and seq_cst
  %14 = atomicrmw sub i32* %lock.i.i.i, i32 1 seq_cst
  br label %while.body.i.i5.us.i

while.body.i.i5.us.i:                             ; preds = %while.body.i.i5.us.i, %while.body.us.i
  %15 = atomicrmw or i32* %lock.i.i.i, i32 1073741824 seq_cst
  %16 = cmpxchg i32* %lock.i.i.i, i32 1073741824, i32 -2147483648 seq_cst seq_cst
  %17 = extractvalue { i32, i1 } %16, 1
  br i1 %17, label %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.us.i, label %while.body.i.i5.us.i

_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.us.i: ; preds = %while.body.i.i5.us.i
  %18 = load i32, i32* %cursor.i.i, align 4, !tbaa !142
  %tobool.not.i.us.i = icmp eq i32 %18, 0
  br i1 %tobool.not.i.us.i, label %do.end.critedge.i.us.i, label %if.then.i9.us.i

if.then.i9.us.i:                                  ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.us.i
  %19 = load i32, i32* %overage.i.i, align 4, !tbaa !144
  %sub.i.us.i = sub i32 %18, %19
  store i32 %sub.i.us.i, i32* %cursor.i.i, align 4, !tbaa !142
  %conv.i.us.i = zext i32 %sub.i.us.i to i64
  %call.i.us.i = tail call i64 @write(i32 %call, i8* nonnull %arraydecay.i.i, i64 %conv.i.us.i) #15
  %conv5.i.us.i = trunc i64 %call.i.us.i to i32
  %cmp.i8.us.i = icmp eq i32 %sub.i.us.i, %conv5.i.us.i
  store i32 0, i32* %cursor.i.i, align 4, !tbaa !142
  store i32 0, i32* %overage.i.i, align 4, !tbaa !144
  %20 = atomicrmw and i32* %lock.i.i.i, i32 2147483647 seq_cst
  br i1 %cmp.i8.us.i, label %while.body.i.i.us.i.backedge, label %if.then10.i.us.i

if.then10.i.us.i:                                 ; preds = %if.then.i9.us.i
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @.str.32, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %while.body.i.i.us.i.backedge

do.end.critedge.i.us.i:                           ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.us.i
  %21 = atomicrmw and i32* %lock.i.i.i, i32 2147483647 seq_cst
  br label %while.body.i.i.us.i.backedge

while.body.i.i.us.i.backedge:                     ; preds = %do.end.critedge.i.us.i, %if.then10.i.us.i, %if.then.i9.us.i, %while.body.i.i.us.i
  br label %while.body.i.i.us.i, !llvm.loop !145

while.body.i.i.i:                                 ; preds = %cond.end, %while.body.i.i.i.backedge
  %22 = load volatile i32, i32* %lock.i.i.i, align 4, !tbaa !140
  %and.i.i.i = and i32 %22, 1073741823
  %add.i.i.i = add nuw nsw i32 %and.i.i.i, 1
  %23 = cmpxchg i32* %lock.i.i.i, i32 %and.i.i.i, i32 %add.i.i.i seq_cst seq_cst
  %24 = extractvalue { i32, i1 } %23, 1
  br i1 %24, label %if.then.i.i, label %while.body.i.i.i.backedge

if.then.i.i:                                      ; preds = %while.body.i.i.i
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.31, i64 0, i64 0)) #15
  tail call void @abort() #15
  %25 = atomicrmw add i32* %cursor.i.i, i32 %and seq_cst
  %add.i.i400 = add i32 %25, %and
  %cmp2.i.i = icmp ugt i32 %add.i.i400, 1048576
  br i1 %cmp2.i.i, label %while.body.i, label %_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit

while.body.i:                                     ; preds = %if.then.i.i
  %26 = atomicrmw add i32* %overage.i.i, i32 %and seq_cst
  %27 = atomicrmw sub i32* %lock.i.i.i, i32 1 seq_cst
  br label %while.body.i.i5.i

while.body.i.i5.i:                                ; preds = %while.body.i.i5.i, %while.body.i
  %28 = atomicrmw or i32* %lock.i.i.i, i32 1073741824 seq_cst
  %29 = cmpxchg i32* %lock.i.i.i, i32 1073741824, i32 -2147483648 seq_cst seq_cst
  %30 = extractvalue { i32, i1 } %29, 1
  br i1 %30, label %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.i, label %while.body.i.i5.i

_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.i: ; preds = %while.body.i.i5.i
  %31 = load i32, i32* %cursor.i.i, align 4, !tbaa !142
  %tobool.not.i.i = icmp eq i32 %31, 0
  br i1 %tobool.not.i.i, label %do.end.critedge.i.i, label %if.then.i9.i

if.then.i9.i:                                     ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.i
  %32 = load i32, i32* %overage.i.i, align 4, !tbaa !144
  %sub.i.i = sub i32 %31, %32
  store i32 %sub.i.i, i32* %cursor.i.i, align 4, !tbaa !142
  %conv.i.i = zext i32 %sub.i.i to i64
  %call.i.i401 = tail call i64 @write(i32 %call, i8* nonnull %arraydecay.i.i, i64 %conv.i.i) #15
  %conv5.i.i = trunc i64 %call.i.i401 to i32
  %cmp.i8.i = icmp eq i32 %sub.i.i, %conv5.i.i
  store i32 0, i32* %cursor.i.i, align 4, !tbaa !142
  store i32 0, i32* %overage.i.i, align 4, !tbaa !144
  %33 = atomicrmw and i32* %lock.i.i.i, i32 2147483647 seq_cst
  br i1 %cmp.i8.i, label %while.body.i.i.i.backedge, label %if.then10.i.i

if.then10.i.i:                                    ; preds = %if.then.i9.i
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @.str.32, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %while.body.i.i.i.backedge

do.end.critedge.i.i:                              ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.i
  %34 = atomicrmw and i32* %lock.i.i.i, i32 2147483647 seq_cst
  br label %while.body.i.i.i.backedge

while.body.i.i.i.backedge:                        ; preds = %do.end.critedge.i.i, %if.then10.i.i, %if.then.i9.i, %while.body.i.i.i
  br label %while.body.i.i.i, !llvm.loop !145

_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit: ; preds = %if.then.i.i, %do.end.i.us.i
  %.lcssa.i = phi i32 [ %12, %do.end.i.us.i ], [ %25, %if.then.i.i ]
  %idx.ext.i.i = zext i32 %.lcssa.i to i64
  %add.ptr.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 3, i64 %idx.ext.i.i
  %cmp16 = icmp ugt i32 %and, 4096
  br i1 %cmp16, label %if.then17, label %if.end

if.then17:                                        ; preds = %_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i404 = icmp eq i8* %call.i, null
  br i1 %tobool.not.i404, label %if.then.i415, label %if.else.i421

if.then.i415:                                     ; preds = %if.then17
  %conv.i4071 = zext i32 %and to i64
  %call.i4082 = tail call i8* @halide_uint64_to_string(i8* null, i8* null, i64 %conv.i4071, i32 1) #15
  %call.i41117 = tail call i8* @halide_string_to_string(i8* %call.i4082, i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #15
  tail call void @halide_error(i8* null, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EED2Ev.exit

if.else.i421:                                     ; preds = %if.then17
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %conv.i4073 = zext i32 %and to i64
  %call.i4084 = tail call i8* @halide_uint64_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i64 %conv.i4073, i32 1) #15
  %call.i411 = tail call i8* @halide_string_to_string(i8* %call.i4084, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i.i416 = ptrtoint i8* %call.i411 to i64
  %sub.ptr.rhs.cast.i.i417 = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i418 = sub i64 1, %sub.ptr.rhs.cast.i.i417
  %add.i.i419 = add i64 %sub.ptr.sub.i.i418, %sub.ptr.lhs.cast.i.i416
  %call.i.i420 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* null, i8* nonnull %call.i, i64 %add.i.i419) #15
  tail call void @halide_print(i8* null, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EED2Ev.exit: ; preds = %if.else.i421, %if.then.i415
  tail call void @free(i8* %call.i) #15
  br label %if.end

if.end:                                           ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EED2Ev.exit, %_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit
  %size = bitcast i8* %add.ptr.i.i to i32*
  store i32 %and, i32* %size, align 4, !tbaa !146
  %id = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 4
  %35 = bitcast i8* %id to i32*
  store i32 %0, i32* %35, align 4, !tbaa !148
  %36 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 8
  %37 = bitcast %struct.halide_type_t* %type to i32*
  %38 = bitcast i8* %36 to i32*
  %39 = load i32, i32* %37, align 8
  store i32 %39, i32* %38, align 4
  %event = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 5
  %event22 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 12
  %40 = bitcast i32* %event to <4 x i32>*
  %41 = load <4 x i32>, <4 x i32>* %40, align 4, !tbaa !14
  %dimensions26 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 24
  %42 = bitcast i8* %dimensions26 to i32*
  %43 = bitcast i8* %event22 to <4 x i32>*
  store <4 x i32> %41, <4 x i32>* %43, align 4, !tbaa !14
  %coordinates = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 2
  %44 = load i32*, i32** %coordinates, align 8, !tbaa !149
  %tobool27.not = icmp eq i32* %44, null
  br i1 %tobool27.not, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end
  %45 = bitcast i32* %44 to i8*
  %46 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 28
  %conv31 = zext i32 %mul3 to i64
  %call32 = tail call i8* @memcpy(i8* nonnull %46, i8* nonnull %45, i64 %conv31) #15
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end
  %value = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 1
  %47 = load i8*, i8** %value, align 8, !tbaa !150
  %tobool34.not = icmp eq i8* %47, null
  br i1 %tobool34.not, label %if.end40, label %if.then35

if.then35:                                        ; preds = %if.end33
  %48 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 28
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %42, align 4, !tbaa !151
  %idx.ext.i = sext i32 %50 to i64
  %add.ptr.i424 = getelementptr inbounds i32, i32* %49, i64 %idx.ext.i
  %51 = bitcast i32* %add.ptr.i424 to i8*
  %conv38 = zext i32 %mul to i64
  %call39 = tail call i8* @memcpy(i8* nonnull %51, i8* nonnull %47, i64 %conv38) #15
  br label %if.end40

if.end40:                                         ; preds = %if.end33, %if.then35
  %52 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 28
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %42, align 4, !tbaa !151
  %idx.ext.i.i425 = sext i32 %54 to i64
  %add.ptr.i.i426 = getelementptr inbounds i32, i32* %53, i64 %idx.ext.i.i425
  %55 = bitcast i32* %add.ptr.i.i426 to i8*
  %lanes.i = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 10
  %56 = bitcast i8* %lanes.i to i16*
  %57 = load i16, i16* %56, align 2, !tbaa !152
  %conv.i427 = zext i16 %57 to i32
  %58 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 9
  %59 = load i8, i8* %58, align 1, !tbaa !136
  %conv.i.i428 = zext i8 %59 to i32
  %add.i.i429 = add nuw nsw i32 %conv.i.i428, 7
  %div.i.i = lshr i32 %add.i.i429, 3
  %mul.i = mul nuw nsw i32 %div.i.i, %conv.i427
  %idx.ext.i430 = zext i32 %mul.i to i64
  %add.ptr.i431 = getelementptr inbounds i8, i8* %55, i64 %idx.ext.i430
  %60 = load i8*, i8** %func, align 8, !tbaa !138
  %conv43 = zext i32 %conv5 to i64
  %call44 = tail call i8* @memcpy(i8* nonnull %add.ptr.i431, i8* %60, i64 %conv43) #15
  %61 = load i32, i32* %42, align 4, !tbaa !151
  %idx.ext.i.i.i = sext i32 %61 to i64
  %add.ptr.i.i.i = getelementptr inbounds i32, i32* %53, i64 %idx.ext.i.i.i
  %62 = bitcast i32* %add.ptr.i.i.i to i8*
  %63 = load i16, i16* %56, align 2, !tbaa !152
  %conv.i.i432 = zext i16 %63 to i32
  %64 = load i8, i8* %58, align 1, !tbaa !136
  %conv.i.i.i = zext i8 %64 to i32
  %add.i.i.i433 = add nuw nsw i32 %conv.i.i.i, 7
  %div.i.i.i = lshr i32 %add.i.i.i433, 3
  %mul.i.i = mul nuw nsw i32 %div.i.i.i, %conv.i.i432
  %idx.ext.i.i434 = zext i32 %mul.i.i to i64
  %add.ptr.i.i435 = getelementptr inbounds i8, i8* %62, i64 %idx.ext.i.i434
  br label %while.cond.i437

while.cond.i437:                                  ; preds = %while.cond.i437, %if.end40
  %f.0.i = phi i8* [ %add.ptr.i.i435, %if.end40 ], [ %incdec.ptr.i, %while.cond.i437 ]
  %incdec.ptr.i = getelementptr inbounds i8, i8* %f.0.i, i64 1
  %65 = load i8, i8* %f.0.i, align 1, !tbaa !14
  %tobool.not.i436 = icmp eq i8 %65, 0
  br i1 %tobool.not.i436, label %_ZN21halide_trace_packet_t9trace_tagEv.exit, label %while.cond.i437, !llvm.loop !153

_ZN21halide_trace_packet_t9trace_tagEv.exit:      ; preds = %while.cond.i437
  %66 = load i8*, i8** %trace_tag, align 8, !tbaa !139
  %tobool47.not = icmp eq i8* %66, null
  %spec.select = select i1 %tobool47.not, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.10, i64 0, i64 0), i8* %66
  %conv53 = zext i32 %cond to i64
  %call54 = tail call i8* @memcpy(i8* nonnull %incdec.ptr.i, i8* %spec.select, i64 %conv53) #15
  %67 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !10
  fence seq_cst
  %lock.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %67, i64 0, i32 0, i32 0
  %68 = atomicrmw sub i32* %lock.i.i, i32 1 seq_cst
  %69 = load i32, i32* %event, align 4, !tbaa !154
  %cmp56 = icmp eq i32 %69, 9
  br i1 %cmp56, label %if.then57, label %if.end277

if.then57:                                        ; preds = %_ZN21halide_trace_packet_t9trace_tagEv.exit
  %70 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !10
  %lock.i.i438 = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %70, i64 0, i32 0, i32 0
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i, %if.then57
  %71 = atomicrmw or i32* %lock.i.i438, i32 1073741824 seq_cst
  %72 = cmpxchg i32* %lock.i.i438, i32 1073741824, i32 -2147483648 seq_cst seq_cst
  %73 = extractvalue { i32, i1 } %72, 1
  br i1 %73, label %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i, label %while.body.i.i

_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i: ; preds = %while.body.i.i
  %cursor.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %70, i64 0, i32 1
  %74 = load i32, i32* %cursor.i, align 4, !tbaa !142
  %tobool.not.i439 = icmp eq i32 %74, 0
  br i1 %tobool.not.i439, label %do.end.critedge.i, label %if.then.i442

if.then.i442:                                     ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i
  %overage.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %70, i64 0, i32 2
  %75 = load i32, i32* %overage.i, align 4, !tbaa !144
  %sub.i = sub i32 %74, %75
  store i32 %sub.i, i32* %cursor.i, align 4, !tbaa !142
  %arraydecay.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %70, i64 0, i32 3, i64 0
  %conv.i440 = zext i32 %sub.i to i64
  %call.i441 = tail call i64 @write(i32 %call, i8* nonnull %arraydecay.i, i64 %conv.i440) #15
  %conv5.i = trunc i64 %call.i441 to i32
  %cmp.i = icmp eq i32 %sub.i, %conv5.i
  store i32 0, i32* %cursor.i, align 4, !tbaa !142
  store i32 0, i32* %overage.i, align 4, !tbaa !144
  %76 = atomicrmw and i32* %lock.i.i438, i32 2147483647 seq_cst
  br i1 %cmp.i, label %if.end277, label %if.then10.i

if.then10.i:                                      ; preds = %if.then.i442
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @.str.32, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %if.end277

do.end.critedge.i:                                ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i
  %77 = atomicrmw and i32* %lock.i.i438, i32 2147483647 seq_cst
  br label %if.end277

if.else:                                          ; preds = %entry
  %call.i445 = tail call i8* @malloc(i64 4096) #15
  %tobool.not.i448 = icmp eq i8* %call.i445, null
  br i1 %tobool.not.i448, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit, label %if.then6.i451

if.then6.i451:                                    ; preds = %if.else
  %add.ptr.i449 = getelementptr inbounds i8, i8* %call.i445, i64 4095
  store i8 0, i8* %add.ptr.i449, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit: ; preds = %if.then6.i451, %if.else
  %ss.sroa.74.0 = phi i8* [ %add.ptr.i449, %if.then6.i451 ], [ null, %if.else ]
  %bits = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 1
  %78 = load i8, i8* %bits, align 1, !tbaa !155
  %conv60 = zext i8 %78 to i32
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit
  %print_bits.0 = phi i32 [ 8, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit ], [ %shl, %while.cond ]
  %cmp61 = icmp slt i32 %print_bits.0, %conv60
  %shl = shl i32 %print_bits.0, 1
  br i1 %cmp61, label %while.cond, label %do.body, !llvm.loop !156

do.body:                                          ; preds = %while.cond
  %cmp62 = icmp slt i32 %print_bits.0, 65
  br i1 %cmp62, label %do.end, label %if.then63

if.then63:                                        ; preds = %do.body
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @.str.2.11, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %if.then63, %do.body
  %event65 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 5
  %79 = load i32, i32* %event65, align 4, !tbaa !154
  %cmp66 = icmp slt i32 %79, 2
  %idxprom = zext i32 %79 to i64
  %arrayidx = getelementptr inbounds [11 x i8*], [11 x i8*]* @__const.halide_default_trace.event_types, i64 0, i64 %idxprom
  %80 = load i8*, i8** %arrayidx, align 8, !tbaa !10
  %call.i456 = tail call i8* @halide_string_to_string(i8* %call.i445, i8* %ss.sroa.74.0, i8* %80) #15
  %call.i459 = tail call i8* @halide_string_to_string(i8* %call.i456, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #15
  %func70 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 0
  %81 = load i8*, i8** %func70, align 8, !tbaa !138
  %call.i462 = tail call i8* @halide_string_to_string(i8* %call.i459, i8* %ss.sroa.74.0, i8* %81) #15
  %call.i465 = tail call i8* @halide_string_to_string(i8* %call.i462, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #15
  %value_index73 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 7
  %82 = load i32, i32* %value_index73, align 4, !tbaa !157
  %conv.i468 = sext i32 %82 to i64
  %call.i469 = tail call i8* @halide_int64_to_string(i8* %call.i465, i8* %ss.sroa.74.0, i64 %conv.i468, i32 1) #15
  %call.i472 = tail call i8* @halide_string_to_string(i8* %call.i469, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22.179, i64 0, i64 0)) #15
  %lanes77 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 2
  %83 = load i16, i16* %lanes77, align 2, !tbaa !130
  %cmp79 = icmp ugt i16 %83, 1
  br i1 %cmp79, label %if.then80, label %if.end82

if.then80:                                        ; preds = %do.end
  %call.i475 = tail call i8* @halide_string_to_string(i8* %call.i472, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #15
  br label %if.end82

if.end82:                                         ; preds = %if.then80, %do.end
  %ss.sroa.7.0 = phi i8* [ %call.i475, %if.then80 ], [ %call.i472, %do.end ]
  %dimensions83 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 8
  %84 = load i32, i32* %dimensions83, align 8, !tbaa !137
  %cmp84660 = icmp sgt i32 %84, 0
  br i1 %cmp84660, label %if.end100.peel, label %for.cond.cleanup

if.end100.peel:                                   ; preds = %if.end82
  %coordinates101 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 2
  %.pre = load i32*, i32** %coordinates101, align 8, !tbaa !149
  %.pre673 = load i32, i32* %.pre, align 4, !tbaa !73
  %conv.i484.peel = sext i32 %.pre673 to i64
  %call.i485.peel = tail call i8* @halide_int64_to_string(i8* %ss.sroa.7.0, i8* %ss.sroa.74.0, i64 %conv.i484.peel, i32 1) #15
  %85 = load i32, i32* %dimensions83, align 8, !tbaa !137
  %cmp84.peel = icmp sgt i32 %85, 1
  br i1 %cmp84.peel, label %if.then86, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %if.end100, %if.end100.peel, %if.end82
  %ss.sroa.7.1.lcssa = phi i8* [ %ss.sroa.7.0, %if.end82 ], [ %call.i485.peel, %if.end100.peel ], [ %call.i485, %if.end100 ]
  %86 = load i16, i16* %lanes77, align 2, !tbaa !130
  %cmp108 = icmp ugt i16 %86, 1
  %.sink684 = select i1 %cmp108, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)
  %call.i491 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.1.lcssa, i8* %ss.sroa.74.0, i8* %.sink684) #15
  br i1 %cmp66, label %if.then115, label %if.end263

if.then86:                                        ; preds = %if.end100.peel, %if.end100
  %indvars.iv670 = phi i64 [ %indvars.iv.next671, %if.end100 ], [ 1, %if.end100.peel ]
  %ss.sroa.7.1661 = phi i8* [ %call.i485, %if.end100 ], [ %call.i485.peel, %if.end100.peel ]
  %87 = load i16, i16* %lanes77, align 2, !tbaa !130
  %cmp90 = icmp ugt i16 %87, 1
  br i1 %cmp90, label %land.lhs.true, label %if.else97.split

land.lhs.true:                                    ; preds = %if.then86
  %conv89 = zext i16 %87 to i32
  %88 = trunc i64 %indvars.iv670 to i32
  %rem = urem i32 %88, %conv89
  %cmp94 = icmp eq i32 %rem, 0
  br i1 %cmp94, label %if.end100, label %if.else97.split

if.else97.split:                                  ; preds = %if.then86, %land.lhs.true
  br label %if.end100

if.end100:                                        ; preds = %land.lhs.true, %if.else97.split
  %.sink = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0), %if.else97.split ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), %land.lhs.true ]
  %call.i4786 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.1661, i8* %ss.sroa.74.0, i8* %.sink) #15
  %89 = load i32*, i32** %coordinates101, align 8, !tbaa !149
  %arrayidx103 = getelementptr inbounds i32, i32* %89, i64 %indvars.iv670
  %90 = load i32, i32* %arrayidx103, align 4, !tbaa !73
  %conv.i484 = sext i32 %90 to i64
  %call.i485 = tail call i8* @halide_int64_to_string(i8* %call.i4786, i8* %ss.sroa.74.0, i64 %conv.i484, i32 1) #15
  %indvars.iv.next671 = add nuw nsw i64 %indvars.iv670, 1
  %91 = load i32, i32* %dimensions83, align 8, !tbaa !137
  %92 = sext i32 %91 to i64
  %cmp84 = icmp slt i64 %indvars.iv.next671, %92
  br i1 %cmp84, label %if.then86, label %for.cond.cleanup, !llvm.loop !158

if.then115:                                       ; preds = %for.cond.cleanup
  %93 = load i16, i16* %lanes77, align 2, !tbaa !130
  %cmp119 = icmp ugt i16 %93, 1
  %.sink685 = select i1 %cmp119, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0)
  %call.i497 = tail call i8* @halide_string_to_string(i8* %call.i491, i8* %ss.sroa.74.0, i8* %.sink685) #15
  %94 = load i16, i16* %lanes77, align 2, !tbaa !130
  %cmp130655.not = icmp eq i16 %94, 0
  br i1 %cmp130655.not, label %if.end263, label %if.end136.peel

if.end136.peel:                                   ; preds = %if.then115
  %code = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 0
  %value245 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 1
  %95 = bitcast i8** %value245 to i8***
  %cmp214 = icmp sgt i32 %print_bits.0, 15
  %96 = bitcast i8** %value245 to i16**
  %97 = bitcast i8** %value245 to float**
  %98 = bitcast i8** %value245 to double**
  %99 = bitcast i8** %value245 to i32**
  %100 = bitcast i8** %value245 to i64**
  %.pre674 = load i8, i8* %code, align 8, !tbaa !160
  switch i8 %.pre674, label %for.inc253.peel [
    i8 0, label %if.then140.peel
    i8 1, label %if.then176.peel
    i8 2, label %do.body213.peel
    i8 3, label %if.then244.peel
  ]

if.then244.peel:                                  ; preds = %if.end136.peel
  %101 = load i8**, i8*** %95, align 8, !tbaa !150
  %102 = load i8*, i8** %101, align 8, !tbaa !10
  %call.i543.peel = tail call i8* @halide_pointer_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i8* %102) #15
  br label %for.inc253.peel

do.body213.peel:                                  ; preds = %if.end136.peel
  br i1 %cmp214, label %do.end218.peel, label %if.then215.peel

if.then215.peel:                                  ; preds = %do.body213.peel
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @.str.24, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end218.peel

do.end218.peel:                                   ; preds = %if.then215.peel, %do.body213.peel
  switch i32 %print_bits.0, label %if.else232.peel [
    i32 32, label %if.then220.peel
    i32 16, label %if.then227.peel
  ]

if.then227.peel:                                  ; preds = %do.end218.peel
  %103 = load i16*, i16** %96, align 8, !tbaa !150
  %104 = load i16, i16* %103, align 2, !tbaa !161
  %call.i535.peel = tail call double @halide_float16_bits_to_double(i16 zeroext %104) #15
  %call2.i.peel = tail call i8* @halide_double_to_string(i8* %call.i497, i8* %ss.sroa.74.0, double %call.i535.peel, i32 1) #15
  br label %for.inc253.peel

if.then220.peel:                                  ; preds = %do.end218.peel
  %105 = load float*, float** %97, align 8, !tbaa !150
  %106 = load float, float* %105, align 4, !tbaa !162
  %conv.i533.peel = fpext float %106 to double
  %call.i534.peel = tail call i8* @halide_double_to_string(i8* %call.i497, i8* %ss.sroa.74.0, double %conv.i533.peel, i32 0) #15
  br label %for.inc253.peel

if.else232.peel:                                  ; preds = %do.end218.peel
  %107 = load double*, double** %98, align 8, !tbaa !150
  %108 = load double, double* %107, align 8, !tbaa !164
  %call.i540.peel = tail call i8* @halide_double_to_string(i8* %call.i497, i8* %ss.sroa.74.0, double %108, i32 1) #15
  br label %for.inc253.peel

if.then176.peel:                                  ; preds = %if.end136.peel
  switch i32 %print_bits.0, label %if.else199.peel [
    i32 8, label %if.then178.peel
    i32 16, label %if.then186.peel
    i32 32, label %if.then194.peel
  ]

if.then194.peel:                                  ; preds = %if.then176.peel
  %109 = load i32*, i32** %99, align 8, !tbaa !150
  %110 = load i32, i32* %109, align 4, !tbaa !73
  %conv.i526.peel = zext i32 %110 to i64
  %call.i527.peel = tail call i8* @halide_uint64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i526.peel, i32 1) #15
  br label %for.inc253.peel

if.then186.peel:                                  ; preds = %if.then176.peel
  %111 = load i16*, i16** %96, align 8, !tbaa !150
  %112 = load i16, i16* %111, align 2, !tbaa !161
  %conv.i522.peel = zext i16 %112 to i64
  %call.i523.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i522.peel, i32 1) #15
  br label %for.inc253.peel

if.then178.peel:                                  ; preds = %if.then176.peel
  %113 = load i8*, i8** %value245, align 8, !tbaa !150
  %114 = load i8, i8* %113, align 1, !tbaa !14
  %conv.i518.peel = zext i8 %114 to i64
  %call.i519.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i518.peel, i32 1) #15
  br label %for.inc253.peel

if.else199.peel:                                  ; preds = %if.then176.peel
  %115 = load i64*, i64** %100, align 8, !tbaa !150
  %116 = load i64, i64* %115, align 8, !tbaa !110
  %call.i530.peel = tail call i8* @halide_uint64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %116, i32 1) #15
  br label %for.inc253.peel

if.then140.peel:                                  ; preds = %if.end136.peel
  switch i32 %print_bits.0, label %if.else163.peel [
    i32 8, label %if.then142.peel
    i32 16, label %if.then150.peel
    i32 32, label %if.then158.peel
  ]

if.then158.peel:                                  ; preds = %if.then140.peel
  %117 = load i32*, i32** %99, align 8, !tbaa !150
  %118 = load i32, i32* %117, align 4, !tbaa !73
  %conv.i511.peel = sext i32 %118 to i64
  %call.i512.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i511.peel, i32 1) #15
  br label %for.inc253.peel

if.then150.peel:                                  ; preds = %if.then140.peel
  %119 = load i16*, i16** %96, align 8, !tbaa !150
  %120 = load i16, i16* %119, align 2, !tbaa !161
  %conv.i507.peel = sext i16 %120 to i64
  %call.i508.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i507.peel, i32 1) #15
  br label %for.inc253.peel

if.then142.peel:                                  ; preds = %if.then140.peel
  %121 = load i8*, i8** %value245, align 8, !tbaa !150
  %122 = load i8, i8* %121, align 1, !tbaa !14
  %conv.i503.peel = sext i8 %122 to i64
  %call.i504.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i503.peel, i32 1) #15
  br label %for.inc253.peel

if.else163.peel:                                  ; preds = %if.then140.peel
  %123 = load i64*, i64** %100, align 8, !tbaa !150
  %124 = load i64, i64* %123, align 8, !tbaa !110
  %call.i515.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %124, i32 1) #15
  br label %for.inc253.peel

for.inc253.peel:                                  ; preds = %if.else163.peel, %if.then142.peel, %if.then150.peel, %if.then158.peel, %if.else199.peel, %if.then178.peel, %if.then186.peel, %if.then194.peel, %if.else232.peel, %if.then220.peel, %if.then227.peel, %if.then244.peel, %if.end136.peel
  %ss.sroa.7.7.peel = phi i8* [ %call.i497, %if.end136.peel ], [ %call.i543.peel, %if.then244.peel ], [ %call.i540.peel, %if.else232.peel ], [ %call2.i.peel, %if.then227.peel ], [ %call.i534.peel, %if.then220.peel ], [ %call.i530.peel, %if.else199.peel ], [ %call.i527.peel, %if.then194.peel ], [ %call.i523.peel, %if.then186.peel ], [ %call.i519.peel, %if.then178.peel ], [ %call.i515.peel, %if.else163.peel ], [ %call.i512.peel, %if.then158.peel ], [ %call.i508.peel, %if.then150.peel ], [ %call.i504.peel, %if.then142.peel ]
  %125 = load i16, i16* %lanes77, align 2, !tbaa !130
  %cmp130.peel = icmp ugt i16 %125, 1
  br i1 %cmp130.peel, label %if.end136, label %if.end263

for.cond.cleanup131:                              ; preds = %for.inc253
  %cmp259 = icmp ugt i16 %151, 1
  br i1 %cmp259, label %if.then260, label %if.end263

if.end136:                                        ; preds = %for.inc253.peel, %for.inc253
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc253 ], [ 1, %for.inc253.peel ]
  %ss.sroa.7.5656 = phi i8* [ %ss.sroa.7.7, %for.inc253 ], [ %ss.sroa.7.7.peel, %for.inc253.peel ]
  %call.i500 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.5656, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #15
  %126 = load i8, i8* %code, align 8, !tbaa !160
  switch i8 %126, label %for.inc253 [
    i8 0, label %if.then140
    i8 1, label %if.then176
    i8 2, label %do.body213
    i8 3, label %if.then244
  ]

if.then140:                                       ; preds = %if.end136
  switch i32 %print_bits.0, label %if.else163 [
    i32 8, label %if.then142
    i32 16, label %if.then150
    i32 32, label %if.then158
  ]

if.then142:                                       ; preds = %if.then140
  %127 = load i8*, i8** %value245, align 8, !tbaa !150
  %arrayidx145 = getelementptr inbounds i8, i8* %127, i64 %indvars.iv
  %128 = load i8, i8* %arrayidx145, align 1, !tbaa !14
  %conv.i503 = sext i8 %128 to i64
  %call.i504 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i503, i32 1) #15
  br label %for.inc253

if.then150:                                       ; preds = %if.then140
  %129 = load i16*, i16** %96, align 8, !tbaa !150
  %arrayidx153 = getelementptr inbounds i16, i16* %129, i64 %indvars.iv
  %130 = load i16, i16* %arrayidx153, align 2, !tbaa !161
  %conv.i507 = sext i16 %130 to i64
  %call.i508 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i507, i32 1) #15
  br label %for.inc253

if.then158:                                       ; preds = %if.then140
  %131 = load i32*, i32** %99, align 8, !tbaa !150
  %arrayidx161 = getelementptr inbounds i32, i32* %131, i64 %indvars.iv
  %132 = load i32, i32* %arrayidx161, align 4, !tbaa !73
  %conv.i511 = sext i32 %132 to i64
  %call.i512 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i511, i32 1) #15
  br label %for.inc253

if.else163:                                       ; preds = %if.then140
  %133 = load i64*, i64** %100, align 8, !tbaa !150
  %arrayidx166 = getelementptr inbounds i64, i64* %133, i64 %indvars.iv
  %134 = load i64, i64* %arrayidx166, align 8, !tbaa !110
  %call.i515 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %134, i32 1) #15
  br label %for.inc253

if.then176:                                       ; preds = %if.end136
  switch i32 %print_bits.0, label %if.else199 [
    i32 8, label %if.then178
    i32 16, label %if.then186
    i32 32, label %if.then194
  ]

if.then178:                                       ; preds = %if.then176
  %135 = load i8*, i8** %value245, align 8, !tbaa !150
  %arrayidx181 = getelementptr inbounds i8, i8* %135, i64 %indvars.iv
  %136 = load i8, i8* %arrayidx181, align 1, !tbaa !14
  %conv.i518 = zext i8 %136 to i64
  %call.i519 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i518, i32 1) #15
  br label %for.inc253

if.then186:                                       ; preds = %if.then176
  %137 = load i16*, i16** %96, align 8, !tbaa !150
  %arrayidx189 = getelementptr inbounds i16, i16* %137, i64 %indvars.iv
  %138 = load i16, i16* %arrayidx189, align 2, !tbaa !161
  %conv.i522 = zext i16 %138 to i64
  %call.i523 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i522, i32 1) #15
  br label %for.inc253

if.then194:                                       ; preds = %if.then176
  %139 = load i32*, i32** %99, align 8, !tbaa !150
  %arrayidx197 = getelementptr inbounds i32, i32* %139, i64 %indvars.iv
  %140 = load i32, i32* %arrayidx197, align 4, !tbaa !73
  %conv.i526 = zext i32 %140 to i64
  %call.i527 = tail call i8* @halide_uint64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i526, i32 1) #15
  br label %for.inc253

if.else199:                                       ; preds = %if.then176
  %141 = load i64*, i64** %100, align 8, !tbaa !150
  %arrayidx202 = getelementptr inbounds i64, i64* %141, i64 %indvars.iv
  %142 = load i64, i64* %arrayidx202, align 8, !tbaa !110
  %call.i530 = tail call i8* @halide_uint64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %142, i32 1) #15
  br label %for.inc253

do.body213:                                       ; preds = %if.end136
  br i1 %cmp214, label %do.end218, label %if.then215

if.then215:                                       ; preds = %do.body213
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @.str.24, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end218

do.end218:                                        ; preds = %if.then215, %do.body213
  switch i32 %print_bits.0, label %if.else232 [
    i32 32, label %if.then220
    i32 16, label %if.then227
  ]

if.then220:                                       ; preds = %do.end218
  %143 = load float*, float** %97, align 8, !tbaa !150
  %arrayidx223 = getelementptr inbounds float, float* %143, i64 %indvars.iv
  %144 = load float, float* %arrayidx223, align 4, !tbaa !162
  %conv.i533 = fpext float %144 to double
  %call.i534 = tail call i8* @halide_double_to_string(i8* %call.i500, i8* %ss.sroa.74.0, double %conv.i533, i32 0) #15
  br label %for.inc253

if.then227:                                       ; preds = %do.end218
  %145 = load i16*, i16** %96, align 8, !tbaa !150
  %arrayidx230 = getelementptr inbounds i16, i16* %145, i64 %indvars.iv
  %146 = load i16, i16* %arrayidx230, align 2, !tbaa !161
  %call.i535 = tail call double @halide_float16_bits_to_double(i16 zeroext %146) #15
  %call2.i = tail call i8* @halide_double_to_string(i8* %call.i500, i8* %ss.sroa.74.0, double %call.i535, i32 1) #15
  br label %for.inc253

if.else232:                                       ; preds = %do.end218
  %147 = load double*, double** %98, align 8, !tbaa !150
  %arrayidx235 = getelementptr inbounds double, double* %147, i64 %indvars.iv
  %148 = load double, double* %arrayidx235, align 8, !tbaa !164
  %call.i540 = tail call i8* @halide_double_to_string(i8* %call.i500, i8* %ss.sroa.74.0, double %148, i32 1) #15
  br label %for.inc253

if.then244:                                       ; preds = %if.end136
  %149 = load i8**, i8*** %95, align 8, !tbaa !150
  %arrayidx247 = getelementptr inbounds i8*, i8** %149, i64 %indvars.iv
  %150 = load i8*, i8** %arrayidx247, align 8, !tbaa !10
  %call.i543 = tail call i8* @halide_pointer_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i8* %150) #15
  br label %for.inc253

for.inc253:                                       ; preds = %if.then244, %if.else232, %if.then227, %if.then220, %if.else199, %if.then194, %if.then186, %if.then178, %if.else163, %if.then158, %if.then150, %if.then142, %if.end136
  %ss.sroa.7.7 = phi i8* [ %call.i500, %if.end136 ], [ %call.i543, %if.then244 ], [ %call.i540, %if.else232 ], [ %call2.i, %if.then227 ], [ %call.i534, %if.then220 ], [ %call.i530, %if.else199 ], [ %call.i527, %if.then194 ], [ %call.i523, %if.then186 ], [ %call.i519, %if.then178 ], [ %call.i515, %if.else163 ], [ %call.i512, %if.then158 ], [ %call.i508, %if.then150 ], [ %call.i504, %if.then142 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %151 = load i16, i16* %lanes77, align 2, !tbaa !130
  %152 = zext i16 %151 to i64
  %cmp130 = icmp ult i64 %indvars.iv.next, %152
  br i1 %cmp130, label %if.end136, label %for.cond.cleanup131, !llvm.loop !166

if.then260:                                       ; preds = %for.cond.cleanup131
  %call.i546 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.7, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0)) #15
  br label %if.end263

if.end263:                                        ; preds = %if.then260, %for.cond.cleanup131, %for.inc253.peel, %if.then115, %for.cond.cleanup
  %ss.sroa.7.8 = phi i8* [ %call.i546, %if.then260 ], [ %ss.sroa.7.7, %for.cond.cleanup131 ], [ %call.i491, %for.cond.cleanup ], [ %ss.sroa.7.7.peel, %for.inc253.peel ], [ %call.i497, %if.then115 ]
  %trace_tag264 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 3
  %153 = load i8*, i8** %trace_tag264, align 8, !tbaa !139
  %tobool265.not = icmp eq i8* %153, null
  br i1 %tobool265.not, label %if.end274, label %land.lhs.true266

land.lhs.true266:                                 ; preds = %if.end263
  %154 = load i8, i8* %153, align 1, !tbaa !14
  %tobool268.not = icmp eq i8 %154, 0
  br i1 %tobool268.not, label %if.end274, label %if.then269

if.then269:                                       ; preds = %land.lhs.true266
  %call.i549 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.8, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0)) #15
  %155 = load i8*, i8** %trace_tag264, align 8, !tbaa !139
  %call.i552 = tail call i8* @halide_string_to_string(i8* %call.i549, i8* %ss.sroa.74.0, i8* %155) #15
  %call.i555 = tail call i8* @halide_string_to_string(i8* %call.i552, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0)) #15
  br label %if.end274

if.end274:                                        ; preds = %if.then269, %land.lhs.true266, %if.end263
  %ss.sroa.7.9 = phi i8* [ %ss.sroa.7.8, %if.end263 ], [ %ss.sroa.7.8, %land.lhs.true266 ], [ %call.i555, %if.then269 ]
  %call.i558 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.9, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #15
  br label %while.cond.i560

while.cond.i560:                                  ; preds = %while.cond.i560, %if.end274
  %156 = atomicrmw volatile xchg i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE, i8 1 acquire
  %tobool.not.i559 = icmp eq i8 %156, 0
  br i1 %tobool.not.i559, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit, label %while.cond.i560, !llvm.loop !167

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit: ; preds = %while.cond.i560
  br i1 %tobool.not.i448, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE release, align 1
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %sub.ptr.lhs.cast.i.i563 = ptrtoint i8* %call.i558 to i64
  %sub.ptr.rhs.cast.i.i564 = ptrtoint i8* %call.i445 to i64
  %sub.ptr.sub.i.i565 = sub i64 1, %sub.ptr.rhs.cast.i.i564
  %add.i.i566 = add i64 %sub.ptr.sub.i.i565, %sub.ptr.lhs.cast.i.i563
  %call.i.i567 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i445, i64 %add.i.i566) #15
  tail call void @halide_print(i8* %user_context, i8* nonnull %call.i445) #15
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE release, align 1
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i445, i64 %add.i.i566) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i445) #15
  br label %if.end277

if.end277:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EED2Ev.exit, %do.end.critedge.i, %if.then10.i, %if.then.i442, %_ZN21halide_trace_packet_t9trace_tagEv.exit
  ret i32 %0
}

; Function Attrs: nounwind
define weak i32 @halide_get_trace_file(i8* %user_context) local_unnamed_addr #4 {
entry:
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i, %entry
  %0 = atomicrmw volatile xchg i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE, i8 1 acquire
  %tobool.not.i = icmp eq i8 %0, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit, label %while.cond.i, !llvm.loop !167

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit: ; preds = %while.cond.i
  %1 = load i32, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !tbaa !73
  %cmp = icmp slt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end11

if.then:                                          ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0)) #15
  %tobool.not = icmp eq i8* %call, null
  br i1 %tobool.not, label %if.else, label %if.then1

if.then1:                                         ; preds = %if.then
  %call2 = tail call i8* @fopen(i8* nonnull %call, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0)) #15
  %tobool3.not = icmp eq i8* %call2, null
  br i1 %tobool3.not, label %if.then4, label %do.end

if.then4:                                         ; preds = %if.then1
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([146 x i8], [146 x i8]* @.str.30, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %if.then4, %if.then1
  %call5 = tail call i32 @fileno(i8* %call2) #15
  tail call void @halide_set_trace_file(i32 %call5) #16
  store i8* %call2, i8** @_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE, align 8, !tbaa !10
  %2 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !10
  %tobool6.not = icmp eq %"class.Halide::Runtime::Internal::TraceBuffer"* %2, null
  br i1 %tobool6.not, label %if.then7, label %if.end11

if.then7:                                         ; preds = %do.end
  %call8 = tail call i8* @malloc(i64 1048588) #15
  store i8* %call8, i8** bitcast (%"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE to i8**), align 8, !tbaa !10
  %cursor.i = getelementptr inbounds i8, i8* %call8, i64 4
  %3 = bitcast i8* %cursor.i to i32*
  store i32 0, i32* %3, align 4, !tbaa !142
  %overage.i = getelementptr inbounds i8, i8* %call8, i64 8
  %4 = bitcast i8* %overage.i to i32*
  store i32 0, i32* %4, align 4, !tbaa !144
  %lock.i.i = bitcast i8* %call8 to i32*
  store volatile i32 0, i32* %lock.i.i, align 4, !tbaa !140
  br label %if.end11

if.else:                                          ; preds = %if.then
  tail call void @halide_set_trace_file(i32 0) #16
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then7, %do.end, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %5 = load i32, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !tbaa !73
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE release, align 1
  ret i32 %5
}

declare i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #1

declare i8* @fopen(i8*, i8*) local_unnamed_addr #1

declare i32 @fileno(i8*) local_unnamed_addr #1

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_set_trace_file(i32 %fd) local_unnamed_addr #2 {
entry:
  store i32 %fd, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !tbaa !73
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_trace_cleanup() #0 {
entry:
  %call = tail call i32 @halide_shutdown_trace() #16
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_shutdown_trace() local_unnamed_addr #0 {
entry:
  %0 = load i8*, i8** @_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE, align 8, !tbaa !10
  %tobool.not = icmp eq i8* %0, null
  br i1 %tobool.not, label %return, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 @fclose(i8* nonnull %0) #15
  store i32 0, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !tbaa !73
  store i8 0, i8* @_ZN6Halide7Runtime8Internal29halide_trace_file_initializedE, align 1, !tbaa !15
  store i8* null, i8** @_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE, align 8, !tbaa !10
  %1 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !10
  %tobool1.not = icmp eq %"class.Halide::Runtime::Internal::TraceBuffer"* %1, null
  br i1 %tobool1.not, label %return, label %if.then2

if.then2:                                         ; preds = %if.then
  %2 = bitcast %"class.Halide::Runtime::Internal::TraceBuffer"* %1 to i8*
  tail call void @free(i8* nonnull %2) #15
  br label %return

return:                                           ; preds = %if.then2, %if.then, %entry
  %retval.0 = phi i32 [ %call, %if.then2 ], [ %call, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

declare i32 @fclose(i8*) local_unnamed_addr #1

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, %struct.halide_trace_event_t*)* @halide_set_custom_trace(i32 (i8*, %struct.halide_trace_event_t*)* %t) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, %struct.halide_trace_event_t*)*, i32 (i8*, %struct.halide_trace_event_t*)** @_ZN6Halide7Runtime8Internal19halide_custom_traceE, align 8, !tbaa !10
  store i32 (i8*, %struct.halide_trace_event_t*)* %t, i32 (i8*, %struct.halide_trace_event_t*)** @_ZN6Halide7Runtime8Internal19halide_custom_traceE, align 8, !tbaa !10
  ret i32 (i8*, %struct.halide_trace_event_t*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_trace(i8* %user_context, %struct.halide_trace_event_t* %e) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, %struct.halide_trace_event_t*)*, i32 (i8*, %struct.halide_trace_event_t*)** @_ZN6Halide7Runtime8Internal19halide_custom_traceE, align 8, !tbaa !10
  %call = tail call i32 %0(i8* %user_context, %struct.halide_trace_event_t* %e) #15
  ret i32 %call
}

; Function Attrs: nounwind
define weak i32 @halide_trace_helper(i8* %user_context, i8* %func, i8* %value, i32* %coords, i32 %type_code, i32 %type_bits, i32 %type_lanes, i32 %code, i32 %parent_id, i32 %value_index, i32 %dimensions, i8* %trace_tag) local_unnamed_addr #4 {
entry:
  %event = alloca %struct.halide_trace_event_t, align 8
  %0 = bitcast %struct.halide_trace_event_t* %event to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #10
  %code.i.i = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 4, i32 0
  %bits.i.i = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 4, i32 1
  %lanes.i.i = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 4, i32 2
  %func1 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 0
  store i8* %func, i8** %func1, align 8, !tbaa !138
  %value2 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 1
  store i8* %value, i8** %value2, align 8, !tbaa !150
  %coordinates = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 2
  store i32* %coords, i32** %coordinates, align 8, !tbaa !149
  %trace_tag3 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 3
  store i8* %trace_tag, i8** %trace_tag3, align 8, !tbaa !139
  %conv = trunc i32 %type_code to i8
  store i8 %conv, i8* %code.i.i, align 8, !tbaa !160
  %conv5 = trunc i32 %type_bits to i8
  store i8 %conv5, i8* %bits.i.i, align 1, !tbaa !155
  %conv7 = trunc i32 %type_lanes to i16
  store i16 %conv7, i16* %lanes.i.i, align 2, !tbaa !130
  %event9 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 5
  store i32 %code, i32* %event9, align 4, !tbaa !154
  %parent_id10 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 6
  store i32 %parent_id, i32* %parent_id10, align 8, !tbaa !168
  %value_index11 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 7
  store i32 %value_index, i32* %value_index11, align 4, !tbaa !157
  %dimensions12 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 8
  store i32 %dimensions, i32* %dimensions12, align 8, !tbaa !137
  %call = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %0, i64 56) #15
  %add = add nsw i32 %type_bits, 7
  %div = sdiv i32 %add, 8
  %mul = mul nsw i32 %div, %type_lanes
  %conv13 = sext i32 %mul to i64
  %call14 = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* %value, i64 %conv13) #15
  %1 = bitcast i32* %coords to i8*
  %conv15 = sext i32 %dimensions to i64
  %mul16 = shl nsw i64 %conv15, 2
  %call17 = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* %1, i64 %mul16) #15
  %call18 = call i32 @halide_trace(i8* %user_context, %struct.halide_trace_event_t* nonnull %event) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #10
  ret i32 %call18
}

; Function Attrs: nounwind mustprogress
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal9ends_withEPKcS3_(i8* %filename, i8* %suffix) local_unnamed_addr #0 {
entry:
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %entry
  %f.0 = phi i8* [ %filename, %entry ], [ %incdec.ptr, %while.cond ]
  %0 = load i8, i8* %f.0, align 1, !tbaa !14
  %tobool.not = icmp eq i8 %0, 0
  %incdec.ptr = getelementptr inbounds i8, i8* %f.0, i64 1
  br i1 %tobool.not, label %while.cond1, label %while.cond, !llvm.loop !169

while.cond1:                                      ; preds = %while.cond, %while.cond1
  %s.0 = phi i8* [ %incdec.ptr4, %while.cond1 ], [ %suffix, %while.cond ]
  %1 = load i8, i8* %s.0, align 1, !tbaa !14
  %tobool2.not = icmp eq i8 %1, 0
  %incdec.ptr4 = getelementptr inbounds i8, i8* %s.0, i64 1
  br i1 %tobool2.not, label %while.cond6.preheader, label %while.cond1, !llvm.loop !170

while.cond6.preheader:                            ; preds = %while.cond1
  %cmp34 = icmp ne i8* %s.0, %suffix
  %cmp735 = icmp ne i8* %f.0, %filename
  %2 = and i1 %cmp735, %cmp34
  br i1 %2, label %if.end, label %while.end13

if.end:                                           ; preds = %while.cond6.preheader, %if.end.while.body8_crit_edge
  %f.13649 = phi i8* [ %incdec.ptr11, %if.end.while.body8_crit_edge ], [ %f.0, %while.cond6.preheader ]
  %s.13748 = phi i8* [ %incdec.ptr12, %if.end.while.body8_crit_edge ], [ %s.0, %while.cond6.preheader ]
  %incdec.ptr11 = getelementptr inbounds i8, i8* %f.13649, i64 -1
  %incdec.ptr12 = getelementptr inbounds i8, i8* %s.13748, i64 -1
  %cmp = icmp ne i8* %incdec.ptr12, %suffix
  %cmp7 = icmp ne i8* %incdec.ptr11, %filename
  %3 = and i1 %cmp7, %cmp
  %.pre = load i8, i8* %incdec.ptr11, align 1, !tbaa !14
  %.pre45 = load i8, i8* %incdec.ptr12, align 1, !tbaa !14
  br i1 %3, label %if.end.while.body8_crit_edge, label %while.end13, !llvm.loop !171

if.end.while.body8_crit_edge:                     ; preds = %if.end
  %cmp10.not = icmp eq i8 %.pre, %.pre45
  br i1 %cmp10.not, label %if.end, label %cleanup

while.end13:                                      ; preds = %if.end, %while.cond6.preheader
  %4 = phi i8 [ 0, %while.cond6.preheader ], [ %.pre45, %if.end ]
  %5 = phi i8 [ 0, %while.cond6.preheader ], [ %.pre, %if.end ]
  %cmp16 = icmp eq i8 %5, %4
  br label %cleanup

cleanup:                                          ; preds = %if.end.while.body8_crit_edge, %while.end13
  %retval.0 = phi i1 [ %cmp16, %while.end13 ], [ false, %if.end.while.body8_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind
define weak i32 @halide_debug_to_file(i8* %user_context, i8* %filename, i32 %type_code, %struct.halide_buffer_t* %buf) local_unnamed_addr #4 {
entry:
  %shape = alloca [4 x %struct.halide_dimension_t], align 4
  %header = alloca %"struct.Halide::Runtime::Internal::halide_tiff_header", align 2
  %offset = alloca i32, align 4
  %count = alloca i32, align 4
  %array_name = alloca [256 x i8], align 1
  %array_name42 = getelementptr inbounds [256 x i8], [256 x i8]* %array_name, i64 0, i64 0
  %header198 = alloca [129 x i8], align 1
  %tags = alloca [8 x i32], align 4
  %extents = alloca [4 x i32], align 4
  %name_header = alloca [2 x i32], align 4
  %payload_header = alloca [2 x i32], align 4
  %header289 = alloca [5 x i32], align 4
  %temp = alloca [4096 x i8], align 1
  %idx = alloca [4 x i32], align 4
  %zero = alloca i64, align 8
  %host.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %0 = load i8*, i8** %host.i, align 8, !tbaa !172
  %cmp.i = icmp eq i8* %0, null
  br i1 %cmp.i, label %_ZNK15halide_buffer_t15is_bounds_queryEv.exit, label %if.end

_ZNK15halide_buffer_t15is_bounds_queryEv.exit:    ; preds = %entry
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp2.i = icmp eq i64 %1, 0
  br i1 %cmp2.i, label %if.then, label %if.end

if.then:                                          ; preds = %_ZNK15halide_buffer_t15is_bounds_queryEv.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.34, i64 0, i64 0)) #15
  br label %return

if.end:                                           ; preds = %_ZNK15halide_buffer_t15is_bounds_queryEv.exit, %entry
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %2 = load i32, i32* %dimensions, align 4, !tbaa !175
  %cmp = icmp sgt i32 %2, 4
  br i1 %cmp, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1.35, i64 0, i64 0)) #15
  br label %return

if.end2:                                          ; preds = %if.end
  %call3 = tail call i32 @halide_copy_to_host(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %cmp4.not = icmp eq i32 %call3, 0
  br i1 %cmp4.not, label %if.end6, label %return

if.end6:                                          ; preds = %if.end2
  %call.i598 = tail call i8* @fopen(i8* %filename, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.36, i64 0, i64 0)) #15
  %cmp.i601.not = icmp eq i8* %call.i598, null
  br i1 %cmp.i601.not, label %return, label %if.end9

if.end9:                                          ; preds = %if.end6
  %3 = bitcast [4 x %struct.halide_dimension_t]* %shape to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #10
  %min.i = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 0
  %extent.i = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 1
  %min.i.1 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 0
  %extent.i.1 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 1
  %4 = bitcast [4 x %struct.halide_dimension_t]* %shape to <8 x i32>*
  store <8 x i32> zeroinitializer, <8 x i32>* %4, align 4, !tbaa !73
  %min.i.2 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 0
  %extent.i.2 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 1
  %min.i.3 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 0
  %extent.i.3 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 1
  %5 = bitcast i32* %min.i.2 to <8 x i32>*
  store <8 x i32> zeroinitializer, <8 x i32>* %5, align 4, !tbaa !73
  %6 = load i32, i32* %dimensions, align 4, !tbaa !175
  %cmp11875 = icmp sgt i32 %6, 0
  br i1 %cmp11875, label %for.body.lr.ph, label %for.body22.preheader

for.body.lr.ph:                                   ; preds = %if.end9
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %7 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !176
  %8 = zext i32 %6 to i64
  %9 = add nsw i64 %8, -1
  %10 = icmp ult i64 %9, 3
  %11 = select i1 %10, i64 %8, i64 4
  %12 = bitcast [4 x %struct.halide_dimension_t]* %shape to i8*
  %13 = bitcast %struct.halide_dimension_t* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %12, i8* nonnull align 4 dereferenceable(16) %13, i64 16, i1 false), !tbaa.struct !177
  %extent = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 1
  %14 = load i32, i32* %extent, align 4, !tbaa !178
  %conv903 = zext i32 %14 to i64
  %exitcond.not17 = icmp eq i64 %11, 1
  br i1 %exitcond.not17, label %for.cond19.preheader, label %for.body.1, !llvm.loop !180

for.cond19.preheader:                             ; preds = %for.body.3, %for.body.2, %for.body.1, %for.body.lr.ph
  %mul.lcssa = phi i64 [ %conv903, %for.body.lr.ph ], [ %mul.1, %for.body.1 ], [ %mul.2, %for.body.2 ], [ %mul.3, %for.body.3 ]
  %cmp20873 = icmp slt i32 %6, 4
  br i1 %cmp20873, label %for.body22.preheader, label %for.cond.cleanup21

for.body22.preheader:                             ; preds = %for.cond19.preheader, %if.end9
  %elts.0.lcssa907 = phi i64 [ %mul.lcssa, %for.cond19.preheader ], [ 1, %if.end9 ]
  %15 = sext i32 %6 to i64
  %16 = sub i32 3, %6
  %17 = zext i32 %16 to i64
  %18 = add nuw nsw i64 %17, 1
  %min.iters.check = icmp ult i32 %16, 7
  br i1 %min.iters.check, label %for.body22.preheader214, label %vector.ph

vector.ph:                                        ; preds = %for.body22.preheader
  %n.vec = and i64 %18, 8589934584
  %ind.end = add nsw i64 %n.vec, %15
  %.splatinsert = insertelement <8 x i64> poison, i64 %15, i32 0
  %.splat = shufflevector <8 x i64> %.splatinsert, <8 x i64> poison, <8 x i32> zeroinitializer
  %induction = add <8 x i64> %.splat, <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7>
  %19 = add nsw i64 %n.vec, -8
  %20 = lshr exact i64 %19, 3
  %21 = add nuw nsw i64 %20, 1
  %xtraiter = and i64 %21, 3
  %22 = icmp ult i64 %19, 24
  br i1 %22, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = and i64 %21, 4611686018427387900
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %vec.ind = phi <8 x i64> [ %induction, %vector.ph.new ], [ %vec.ind.next.3, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.3, %vector.body ]
  %23 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind, i32 0
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %23, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !181
  %24 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind, i32 1
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, <8 x i32*> %24, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !178
  %25 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind, i32 2
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %25, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !182
  %vec.ind.next = add <8 x i64> %vec.ind, <i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8>
  %26 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next, i32 0
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %26, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !181
  %27 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next, i32 1
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, <8 x i32*> %27, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !178
  %28 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next, i32 2
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %28, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !182
  %vec.ind.next.1 = add <8 x i64> %vec.ind, <i64 16, i64 16, i64 16, i64 16, i64 16, i64 16, i64 16, i64 16>
  %29 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next.1, i32 0
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %29, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !181
  %30 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next.1, i32 1
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, <8 x i32*> %30, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !178
  %31 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next.1, i32 2
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %31, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !182
  %vec.ind.next.2 = add <8 x i64> %vec.ind, <i64 24, i64 24, i64 24, i64 24, i64 24, i64 24, i64 24, i64 24>
  %32 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next.2, i32 0
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %32, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !181
  %33 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next.2, i32 1
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, <8 x i32*> %33, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !178
  %34 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.next.2, i32 2
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %34, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !182
  %vec.ind.next.3 = add <8 x i64> %vec.ind, <i64 32, i64 32, i64 32, i64 32, i64 32, i64 32, i64 32, i64 32>
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !183

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %vec.ind.unr = phi <8 x i64> [ %induction, %vector.ph ], [ %vec.ind.next.3, %vector.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa, %vector.body.epil
  %vec.ind.epil = phi <8 x i64> [ %vec.ind.next.epil, %vector.body.epil ], [ %vec.ind.unr, %middle.block.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %vector.body.epil ], [ %xtraiter, %middle.block.unr-lcssa ]
  %35 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.epil, i32 0
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %35, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !181
  %36 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.epil, i32 1
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, <8 x i32*> %36, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !178
  %37 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, <8 x i64> %vec.ind.epil, i32 2
  call void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32> zeroinitializer, <8 x i32*> %37, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>), !tbaa !182
  %vec.ind.next.epil = add <8 x i64> %vec.ind.epil, <i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8, i64 8>
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp.not, label %middle.block, label %vector.body.epil, !llvm.loop !185

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %18, %n.vec
  br i1 %cmp.n, label %for.cond.cleanup21, label %for.body22.preheader214

for.body22.preheader214:                          ; preds = %for.body22.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ %15, %for.body22.preheader ], [ %ind.end, %middle.block ]
  br label %for.body22

for.cond.cleanup21:                               ; preds = %for.body22, %middle.block, %for.cond19.preheader
  %elts.0.lcssa906 = phi i64 [ %mul.lcssa, %for.cond19.preheader ], [ %elts.0.lcssa907, %middle.block ], [ %elts.0.lcssa907, %for.body22 ]
  %bits.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 4, i32 1
  %38 = load i8, i8* %bits.i, align 1, !tbaa !136
  %conv.i = zext i8 %38 to i32
  %add.i = add nuw nsw i32 %conv.i, 7
  %div.i = lshr i32 %add.i, 3
  %call34 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal9ends_withEPKcS3_(i8* %filename, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.37, i64 0, i64 0)) #16
  br i1 %call34, label %if.then36, label %lor.lhs.false

for.body22:                                       ; preds = %for.body22.preheader214, %for.body22
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body22 ], [ %indvars.iv.ph, %for.body22.preheader214 ]
  %min = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %indvars.iv, i32 0
  store i32 0, i32* %min, align 4, !tbaa !181
  %extent27 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %indvars.iv, i32 1
  store i32 1, i32* %extent27, align 4, !tbaa !178
  %stride = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %indvars.iv, i32 2
  store i32 0, i32* %stride, align 4, !tbaa !182
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond886.not = icmp eq i32 %lftr.wideiv, 4
  br i1 %exitcond886.not, label %for.cond.cleanup21, label %for.body22, !llvm.loop !187

lor.lhs.false:                                    ; preds = %for.cond.cleanup21
  %call35 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal9ends_withEPKcS3_(i8* %filename, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.38, i64 0, i64 0)) #16
  br i1 %call35, label %if.then36, label %if.else164

if.then36:                                        ; preds = %lor.lhs.false, %for.cond.cleanup21
  %39 = load i32, i32* %extent.i, align 4, !tbaa !178
  %40 = load i32, i32* %extent.i.1, align 4, !tbaa !178
  %41 = load i32, i32* %extent.i.3, align 4, !tbaa !178
  %switch = icmp ult i32 %41, 2
  %42 = load i32, i32* %extent.i.2, align 4, !tbaa !178
  %cmp50 = icmp slt i32 %42, 5
  %or.cond = and i1 %switch, %cmp50
  %depth.0 = select i1 %or.cond, i32 1, i32 %42
  %channels.0 = select i1 %or.cond, i32 %42, i32 %41
  %43 = bitcast %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header to i8*
  call void @llvm.lifetime.start.p0i8(i64 210, i8* nonnull %43) #10
  %byte_order_marker = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 0
  store i16 18761, i16* %byte_order_marker, align 2, !tbaa !189
  %version = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 1
  store i16 42, i16* %version, align 2, !tbaa !191
  %ifd0_offset = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 2
  store i32 8, i32* %ifd0_offset, align 2, !tbaa !192
  %entry_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 3
  store i16 15, i16* %entry_count, align 2, !tbaa !193
  %tag_code2.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 0, i32 0
  store i16 256, i16* %tag_code2.i, align 2, !tbaa !194
  %type_code.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 0, i32 1
  store i16 4, i16* %type_code.i, align 2, !tbaa !196
  %count3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 0, i32 2
  store i32 1, i32* %count3.i, align 2, !tbaa !197
  %i32.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 0, i32 3, i32 0
  store i32 %39, i32* %i32.i, align 2, !tbaa !14
  %tag_code2.i632 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 1, i32 0
  store i16 257, i16* %tag_code2.i632, align 2, !tbaa !194
  %type_code.i633 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 1, i32 1
  store i16 4, i16* %type_code.i633, align 2, !tbaa !196
  %count3.i634 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 1, i32 2
  store i32 1, i32* %count3.i634, align 2, !tbaa !197
  %i32.i635 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 1, i32 3, i32 0
  store i32 %40, i32* %i32.i635, align 2, !tbaa !14
  %44 = trunc i32 %add.i to i16
  %conv68 = and i16 %44, 504
  %tag_code2.i643 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 2, i32 0
  store i16 258, i16* %tag_code2.i643, align 2, !tbaa !194
  %type_code.i644 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 2, i32 1
  store i16 3, i16* %type_code.i644, align 2, !tbaa !196
  %count3.i645 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 2, i32 2
  store i32 1, i32* %count3.i645, align 2, !tbaa !197
  %value4.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 2, i32 3
  %i16.i = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i to i16*
  store i16 %conv68, i16* %i16.i, align 2, !tbaa !14
  %tag_code2.i653 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 3, i32 0
  store i16 259, i16* %tag_code2.i653, align 2, !tbaa !194
  %type_code.i654 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 3, i32 1
  store i16 3, i16* %type_code.i654, align 2, !tbaa !196
  %count3.i655 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 3, i32 2
  store i32 1, i32* %count3.i655, align 2, !tbaa !197
  %value4.i656 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 3, i32 3
  %i16.i657 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i656 to i16*
  store i16 1, i16* %i16.i657, align 2, !tbaa !14
  %cmp71 = icmp sgt i32 %channels.0, 2
  %conv72 = select i1 %cmp71, i16 2, i16 1
  %tag_code2.i665 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 4, i32 0
  store i16 262, i16* %tag_code2.i665, align 2, !tbaa !194
  %type_code.i666 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 4, i32 1
  store i16 3, i16* %type_code.i666, align 2, !tbaa !196
  %count3.i667 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 4, i32 2
  store i32 1, i32* %count3.i667, align 2, !tbaa !197
  %value4.i668 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 4, i32 3
  %i16.i669 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i668 to i16*
  store i16 %conv72, i16* %i16.i669, align 2, !tbaa !14
  %tag_code2.i677 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 5, i32 0
  store i16 273, i16* %tag_code2.i677, align 2, !tbaa !194
  %type_code.i678 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 5, i32 1
  store i16 4, i16* %type_code.i678, align 2, !tbaa !196
  %count3.i679 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 5, i32 2
  store i32 %channels.0, i32* %count3.i679, align 2, !tbaa !197
  %i32.i680 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 5, i32 3, i32 0
  store i32 210, i32* %i32.i680, align 2, !tbaa !14
  %conv75 = trunc i32 %channels.0 to i16
  %tag_code2.i688 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 6, i32 0
  store i16 277, i16* %tag_code2.i688, align 2, !tbaa !194
  %type_code.i689 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 6, i32 1
  store i16 3, i16* %type_code.i689, align 2, !tbaa !196
  %count3.i690 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 6, i32 2
  store i32 1, i32* %count3.i690, align 2, !tbaa !197
  %value4.i691 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 6, i32 3
  %i16.i692 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i691 to i16*
  store i16 %conv75, i16* %i16.i692, align 2, !tbaa !14
  %tag_code2.i706 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 7, i32 0
  store i16 278, i16* %tag_code2.i706, align 2, !tbaa !194
  %type_code.i707 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 7, i32 1
  store i16 4, i16* %type_code.i707, align 2, !tbaa !196
  %count3.i708 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 7, i32 2
  store i32 1, i32* %count3.i708, align 2, !tbaa !197
  %i32.i709 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 7, i32 3, i32 0
  store i32 %40, i32* %i32.i709, align 2, !tbaa !14
  %cmp80 = icmp eq i32 %channels.0, 1
  %45 = trunc i64 %elts.0.lcssa906 to i32
  %conv86595 = mul i32 %div.i, %45
  %mul84 = shl i32 %channels.0, 2
  %add = add i32 %mul84, 210
  %add.sink = select i1 %cmp80, i32 %conv86595, i32 %add
  %46 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 8, i32 0
  store i16 279, i16* %46, align 2
  %47 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 8, i32 1
  store i16 4, i16* %47, align 2
  %48 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 8, i32 2
  store i32 %channels.0, i32* %48, align 2
  %49 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 8, i32 3, i32 0
  store i32 %add.sink, i32* %49, align 2
  %tag_code2.i732 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 9, i32 0
  store i16 282, i16* %tag_code2.i732, align 2, !tbaa !194
  %type_code3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 9, i32 1
  store i16 5, i16* %type_code3.i, align 2, !tbaa !196
  %count4.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 9, i32 2
  store i32 1, i32* %count4.i, align 2, !tbaa !197
  %i32.i733 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 9, i32 3, i32 0
  store i32 194, i32* %i32.i733, align 2, !tbaa !14
  %tag_code2.i741 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 10, i32 0
  store i16 283, i16* %tag_code2.i741, align 2, !tbaa !194
  %type_code3.i742 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 10, i32 1
  store i16 5, i16* %type_code3.i742, align 2, !tbaa !196
  %count4.i743 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 10, i32 2
  store i32 1, i32* %count4.i743, align 2, !tbaa !197
  %i32.i744 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 10, i32 3, i32 0
  store i32 202, i32* %i32.i744, align 2, !tbaa !14
  %tag_code2.i759 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 11, i32 0
  store i16 284, i16* %tag_code2.i759, align 2, !tbaa !194
  %type_code.i760 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 11, i32 1
  store i16 3, i16* %type_code.i760, align 2, !tbaa !196
  %count3.i761 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 11, i32 2
  store i32 1, i32* %count3.i761, align 2, !tbaa !197
  %value4.i762 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 11, i32 3
  %i16.i763 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i762 to i16*
  store i16 2, i16* %i16.i763, align 2, !tbaa !14
  %tag_code2.i754 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 12, i32 0
  store i16 296, i16* %tag_code2.i754, align 2, !tbaa !194
  %type_code.i755 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 12, i32 1
  store i16 3, i16* %type_code.i755, align 2, !tbaa !196
  %count3.i756 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 12, i32 2
  store i32 1, i32* %count3.i756, align 2, !tbaa !197
  %value4.i757 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 12, i32 3
  %i16.i758 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i757 to i16*
  store i16 1, i16* %i16.i758, align 2, !tbaa !14
  %idxprom92 = sext i32 %type_code to i64
  %arrayidx93 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZN6Halide7Runtime8Internal30pixel_type_to_tiff_sample_typeE, i64 0, i64 %idxprom92
  %50 = load i16, i16* %arrayidx93, align 2, !tbaa !161
  %tag_code2.i749 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 13, i32 0
  store i16 339, i16* %tag_code2.i749, align 2, !tbaa !194
  %type_code.i750 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 13, i32 1
  store i16 3, i16* %type_code.i750, align 2, !tbaa !196
  %count3.i751 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 13, i32 2
  store i32 1, i32* %count3.i751, align 2, !tbaa !197
  %value4.i752 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 13, i32 3
  %i16.i753 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i752 to i16*
  store i16 %50, i16* %i16.i753, align 2, !tbaa !14
  %tag_code2.i745 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 14, i32 0
  store i16 -32539, i16* %tag_code2.i745, align 2, !tbaa !194
  %type_code.i746 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 14, i32 1
  store i16 4, i16* %type_code.i746, align 2, !tbaa !196
  %count3.i747 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 14, i32 2
  store i32 1, i32* %count3.i747, align 2, !tbaa !197
  %i32.i748 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 14, i32 3, i32 0
  store i32 %depth.0, i32* %i32.i748, align 2, !tbaa !14
  %ifd0_end = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 5
  %51 = bitcast i32* %ifd0_end to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 2, !tbaa !73
  %arrayidx100 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 7, i64 1
  store i32 1, i32* %arrayidx100, align 2, !tbaa !73
  %call.i736 = call i64 @fwrite(i8* nonnull %43, i64 210, i64 1, i8* nonnull %call.i598) #15
  %cmp.i737.not = icmp eq i64 %call.i736, 0
  br i1 %cmp.i737.not, label %cleanup154, label %if.end103

if.end103:                                        ; preds = %if.then36
  %cmp104 = icmp sgt i32 %channels.0, 1
  br i1 %cmp104, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731.lr.ph, label %cleanup154.thread

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731.lr.ph: ; preds = %if.end103
  %52 = bitcast i32* %offset to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #10
  %mul108 = shl i32 %channels.0, 3
  %add109 = add i32 %mul108, 210
  store i32 %add109, i32* %offset, align 4, !tbaa !73
  %mul123 = mul i32 %depth.0, %div.i
  br label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731: ; preds = %if.end118, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731.lr.ph
  %i111.0865 = phi i32 [ 0, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731.lr.ph ], [ %inc128, %if.end118 ]
  %call.i727 = call i64 @fwrite(i8* nonnull %52, i64 4, i64 1, i8* nonnull %call.i598) #15
  %cmp.i728.not = icmp eq i64 %call.i727, 0
  br i1 %cmp.i728.not, label %cleanup151.thread, label %if.end118

if.end118:                                        ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731
  %53 = load i32, i32* %extent.i, align 4, !tbaa !178
  %54 = load i32, i32* %extent.i.1, align 4, !tbaa !178
  %mul124 = mul i32 %mul123, %53
  %mul125 = mul i32 %mul124, %54
  %55 = load i32, i32* %offset, align 4, !tbaa !73
  %add126 = add nsw i32 %mul125, %55
  store i32 %add126, i32* %offset, align 4, !tbaa !73
  %inc128 = add nuw nsw i32 %i111.0865, 1
  %exitcond881.not = icmp eq i32 %inc128, %channels.0
  br i1 %exitcond881.not, label %for.end129, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731, !llvm.loop !198

for.end129:                                       ; preds = %if.end118
  %56 = bitcast i32* %count to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #10
  store i32 %mul125, i32* %count, align 4, !tbaa !73
  br label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720

for.cond138:                                      ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720
  %exitcond.not = icmp eq i32 %inc146, %channels.0
  br i1 %exitcond.not, label %cleanup151, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720, !llvm.loop !199

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720: ; preds = %for.end129, %for.cond138
  %i137.0863 = phi i32 [ %inc146, %for.cond138 ], [ 0, %for.end129 ]
  %call.i716 = call i64 @fwrite(i8* nonnull %56, i64 4, i64 1, i8* nonnull %call.i598) #15
  %cmp.i717.not = icmp eq i64 %call.i716, 0
  %inc146 = add nuw nsw i32 %i137.0863, 1
  br i1 %cmp.i717.not, label %select.unfold, label %for.cond138

select.unfold:                                    ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #10
  br label %cleanup151.thread

cleanup151.thread:                                ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731, %select.unfold
  %retval.2.ph = phi i32 [ -5, %select.unfold ], [ -4, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #10
  br label %cleanup154

cleanup151:                                       ; preds = %for.cond138
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #10
  br label %cleanup154.thread

cleanup154.thread:                                ; preds = %cleanup151, %if.end103
  call void @llvm.lifetime.end.p0i8(i64 210, i8* nonnull %43) #10
  br label %if.end311

cleanup154:                                       ; preds = %cleanup151.thread, %if.then36
  %retval.4 = phi i32 [ -3, %if.then36 ], [ %retval.2.ph, %cleanup151.thread ]
  call void @llvm.lifetime.end.p0i8(i64 210, i8* nonnull %43) #10
  br label %cleanup433

if.else164:                                       ; preds = %lor.lhs.false
  %call165 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal9ends_withEPKcS3_(i8* %filename, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.39, i64 0, i64 0)) #16
  br i1 %call165, label %while.cond, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631

while.cond:                                       ; preds = %if.else164, %while.cond
  %end.0 = phi i8* [ %incdec.ptr167, %while.cond ], [ %filename, %if.else164 ]
  %57 = load i8, i8* %end.0, align 1, !tbaa !14
  %tobool.not = icmp eq i8 %57, 0
  %incdec.ptr167 = getelementptr inbounds i8, i8* %end.0, i64 1
  br i1 %tobool.not, label %while.body171, label %while.cond, !llvm.loop !200

while.cond174.preheader:                          ; preds = %while.body171
  %end.1872.lcssa883 = ptrtoint i8* %end.1872 to i64
  %58 = ptrtoint i8* %filename to i64
  %59 = sub i64 %58, %end.1872.lcssa883
  br label %while.cond174

while.body171:                                    ; preds = %while.cond, %while.body171
  %end.1872 = phi i8* [ %incdec.ptr172.ptr, %while.body171 ], [ %end.0, %while.cond ]
  %incdec.ptr172.ptr = getelementptr inbounds i8, i8* %end.1872, i64 -1
  %.pr = load i8, i8* %incdec.ptr172.ptr, align 1, !tbaa !14
  %cmp170.not = icmp eq i8 %.pr, 46
  br i1 %cmp170.not, label %while.cond174.preheader, label %while.body171, !llvm.loop !201

while.cond174:                                    ; preds = %land.rhs176, %while.cond174.preheader
  %start.0.idx = phi i64 [ %start.0.add, %land.rhs176 ], [ -1, %while.cond174.preheader ]
  %start.0.ptr.ptr = getelementptr inbounds i8, i8* %end.1872, i64 %start.0.idx
  %cmp175.not = icmp eq i8* %start.0.ptr.ptr, %filename
  br i1 %cmp175.not, label %while.end183, label %land.rhs176

land.rhs176:                                      ; preds = %while.cond174
  %start.0.add = add nsw i64 %start.0.idx, -1
  %arrayidx177.ptr = getelementptr inbounds i8, i8* %end.1872, i64 %start.0.add
  %60 = load i8, i8* %arrayidx177.ptr, align 1, !tbaa !14
  %cmp179.not = icmp eq i8 %60, 47
  br i1 %cmp179.not, label %while.end183, label %while.cond174, !llvm.loop !202

while.end183:                                     ; preds = %land.rhs176, %while.cond174
  %start.0.idx.lcssa = phi i64 [ %59, %while.cond174 ], [ %start.0.idx, %land.rhs176 ]
  %61 = trunc i64 %start.0.idx.lcssa to i32
  %conv184 = xor i32 %61, -1
  %62 = getelementptr inbounds [256 x i8], [256 x i8]* %array_name, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %62) #10
  %cmp186.not868 = icmp eq i64 %start.0.idx.lcssa, -1
  br i1 %cmp186.not868, label %iter.check, label %while.body187.preheader

while.body187.preheader:                          ; preds = %while.end183
  %63 = xor i64 %start.0.idx.lcssa, -1
  %min.iters.check39 = icmp ugt i64 %start.0.idx.lcssa, -129
  br i1 %min.iters.check39, label %while.body187.preheader212, label %vector.memcheck

vector.memcheck:                                  ; preds = %while.body187.preheader
  %64 = xor i64 %start.0.idx.lcssa, -1
  %scevgep43 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %64
  %scevgep44 = getelementptr i8, i8* %end.1872, i64 %start.0.idx.lcssa
  %scevgep45 = getelementptr i8, i8* %end.1872, i64 -1
  %bound0 = icmp ult i8* %array_name42, %scevgep45
  %bound1 = icmp ult i8* %scevgep44, %scevgep43
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %while.body187.preheader212, label %vector.ph41

vector.ph41:                                      ; preds = %vector.memcheck
  %n.vec47 = and i64 %63, -128
  %ind.end51 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %n.vec47
  %ind.end53 = add i64 %start.0.idx.lcssa, %n.vec47
  %65 = add i64 %n.vec47, -128
  %66 = lshr exact i64 %65, 7
  %67 = add nuw nsw i64 %66, 1
  %xtraiter215 = and i64 %67, 3
  %68 = icmp ult i64 %65, 384
  br i1 %68, label %middle.block36.unr-lcssa, label %vector.ph41.new

vector.ph41.new:                                  ; preds = %vector.ph41
  %unroll_iter218 = and i64 %67, 288230376151711740
  br label %vector.body38

vector.body38:                                    ; preds = %vector.body38, %vector.ph41.new
  %index48 = phi i64 [ 0, %vector.ph41.new ], [ %index.next49.3, %vector.body38 ]
  %niter219 = phi i64 [ %unroll_iter218, %vector.ph41.new ], [ %niter219.nsub.3, %vector.body38 ]
  %next.gep = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %index48
  %offset.idx = add i64 %start.0.idx.lcssa, %index48
  %69 = getelementptr inbounds i8, i8* %end.1872, i64 %offset.idx
  %70 = bitcast i8* %69 to <32 x i8>*
  %wide.load = load <32 x i8>, <32 x i8>* %70, align 1, !tbaa !14, !alias.scope !203
  %71 = getelementptr inbounds i8, i8* %69, i64 32
  %72 = bitcast i8* %71 to <32 x i8>*
  %wide.load58 = load <32 x i8>, <32 x i8>* %72, align 1, !tbaa !14, !alias.scope !203
  %73 = getelementptr inbounds i8, i8* %69, i64 64
  %74 = bitcast i8* %73 to <32 x i8>*
  %wide.load59 = load <32 x i8>, <32 x i8>* %74, align 1, !tbaa !14, !alias.scope !203
  %75 = getelementptr inbounds i8, i8* %69, i64 96
  %76 = bitcast i8* %75 to <32 x i8>*
  %wide.load60 = load <32 x i8>, <32 x i8>* %76, align 1, !tbaa !14, !alias.scope !203
  %77 = bitcast i8* %next.gep to <32 x i8>*
  store <32 x i8> %wide.load, <32 x i8>* %77, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %78 = getelementptr i8, i8* %next.gep, i64 32
  %79 = bitcast i8* %78 to <32 x i8>*
  store <32 x i8> %wide.load58, <32 x i8>* %79, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %80 = getelementptr i8, i8* %next.gep, i64 64
  %81 = bitcast i8* %80 to <32 x i8>*
  store <32 x i8> %wide.load59, <32 x i8>* %81, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %82 = getelementptr i8, i8* %next.gep, i64 96
  %83 = bitcast i8* %82 to <32 x i8>*
  store <32 x i8> %wide.load60, <32 x i8>* %83, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %index.next49 = or i64 %index48, 128
  %next.gep.1 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %index.next49
  %offset.idx.1 = add i64 %start.0.idx.lcssa, %index.next49
  %84 = getelementptr inbounds i8, i8* %end.1872, i64 %offset.idx.1
  %85 = bitcast i8* %84 to <32 x i8>*
  %wide.load.1 = load <32 x i8>, <32 x i8>* %85, align 1, !tbaa !14, !alias.scope !203
  %86 = getelementptr inbounds i8, i8* %84, i64 32
  %87 = bitcast i8* %86 to <32 x i8>*
  %wide.load58.1 = load <32 x i8>, <32 x i8>* %87, align 1, !tbaa !14, !alias.scope !203
  %88 = getelementptr inbounds i8, i8* %84, i64 64
  %89 = bitcast i8* %88 to <32 x i8>*
  %wide.load59.1 = load <32 x i8>, <32 x i8>* %89, align 1, !tbaa !14, !alias.scope !203
  %90 = getelementptr inbounds i8, i8* %84, i64 96
  %91 = bitcast i8* %90 to <32 x i8>*
  %wide.load60.1 = load <32 x i8>, <32 x i8>* %91, align 1, !tbaa !14, !alias.scope !203
  %92 = bitcast i8* %next.gep.1 to <32 x i8>*
  store <32 x i8> %wide.load.1, <32 x i8>* %92, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %93 = getelementptr i8, i8* %next.gep.1, i64 32
  %94 = bitcast i8* %93 to <32 x i8>*
  store <32 x i8> %wide.load58.1, <32 x i8>* %94, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %95 = getelementptr i8, i8* %next.gep.1, i64 64
  %96 = bitcast i8* %95 to <32 x i8>*
  store <32 x i8> %wide.load59.1, <32 x i8>* %96, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %97 = getelementptr i8, i8* %next.gep.1, i64 96
  %98 = bitcast i8* %97 to <32 x i8>*
  store <32 x i8> %wide.load60.1, <32 x i8>* %98, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %index.next49.1 = or i64 %index48, 256
  %next.gep.2 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %index.next49.1
  %offset.idx.2 = add i64 %start.0.idx.lcssa, %index.next49.1
  %99 = getelementptr inbounds i8, i8* %end.1872, i64 %offset.idx.2
  %100 = bitcast i8* %99 to <32 x i8>*
  %wide.load.2 = load <32 x i8>, <32 x i8>* %100, align 1, !tbaa !14, !alias.scope !203
  %101 = getelementptr inbounds i8, i8* %99, i64 32
  %102 = bitcast i8* %101 to <32 x i8>*
  %wide.load58.2 = load <32 x i8>, <32 x i8>* %102, align 1, !tbaa !14, !alias.scope !203
  %103 = getelementptr inbounds i8, i8* %99, i64 64
  %104 = bitcast i8* %103 to <32 x i8>*
  %wide.load59.2 = load <32 x i8>, <32 x i8>* %104, align 1, !tbaa !14, !alias.scope !203
  %105 = getelementptr inbounds i8, i8* %99, i64 96
  %106 = bitcast i8* %105 to <32 x i8>*
  %wide.load60.2 = load <32 x i8>, <32 x i8>* %106, align 1, !tbaa !14, !alias.scope !203
  %107 = bitcast i8* %next.gep.2 to <32 x i8>*
  store <32 x i8> %wide.load.2, <32 x i8>* %107, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %108 = getelementptr i8, i8* %next.gep.2, i64 32
  %109 = bitcast i8* %108 to <32 x i8>*
  store <32 x i8> %wide.load58.2, <32 x i8>* %109, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %110 = getelementptr i8, i8* %next.gep.2, i64 64
  %111 = bitcast i8* %110 to <32 x i8>*
  store <32 x i8> %wide.load59.2, <32 x i8>* %111, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %112 = getelementptr i8, i8* %next.gep.2, i64 96
  %113 = bitcast i8* %112 to <32 x i8>*
  store <32 x i8> %wide.load60.2, <32 x i8>* %113, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %index.next49.2 = or i64 %index48, 384
  %next.gep.3 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %index.next49.2
  %offset.idx.3 = add i64 %start.0.idx.lcssa, %index.next49.2
  %114 = getelementptr inbounds i8, i8* %end.1872, i64 %offset.idx.3
  %115 = bitcast i8* %114 to <32 x i8>*
  %wide.load.3 = load <32 x i8>, <32 x i8>* %115, align 1, !tbaa !14, !alias.scope !203
  %116 = getelementptr inbounds i8, i8* %114, i64 32
  %117 = bitcast i8* %116 to <32 x i8>*
  %wide.load58.3 = load <32 x i8>, <32 x i8>* %117, align 1, !tbaa !14, !alias.scope !203
  %118 = getelementptr inbounds i8, i8* %114, i64 64
  %119 = bitcast i8* %118 to <32 x i8>*
  %wide.load59.3 = load <32 x i8>, <32 x i8>* %119, align 1, !tbaa !14, !alias.scope !203
  %120 = getelementptr inbounds i8, i8* %114, i64 96
  %121 = bitcast i8* %120 to <32 x i8>*
  %wide.load60.3 = load <32 x i8>, <32 x i8>* %121, align 1, !tbaa !14, !alias.scope !203
  %122 = bitcast i8* %next.gep.3 to <32 x i8>*
  store <32 x i8> %wide.load.3, <32 x i8>* %122, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %123 = getelementptr i8, i8* %next.gep.3, i64 32
  %124 = bitcast i8* %123 to <32 x i8>*
  store <32 x i8> %wide.load58.3, <32 x i8>* %124, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %125 = getelementptr i8, i8* %next.gep.3, i64 64
  %126 = bitcast i8* %125 to <32 x i8>*
  store <32 x i8> %wide.load59.3, <32 x i8>* %126, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %127 = getelementptr i8, i8* %next.gep.3, i64 96
  %128 = bitcast i8* %127 to <32 x i8>*
  store <32 x i8> %wide.load60.3, <32 x i8>* %128, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %index.next49.3 = add i64 %index48, 512
  %niter219.nsub.3 = add i64 %niter219, -4
  %niter219.ncmp.3 = icmp eq i64 %niter219.nsub.3, 0
  br i1 %niter219.ncmp.3, label %middle.block36.unr-lcssa, label %vector.body38, !llvm.loop !208

middle.block36.unr-lcssa:                         ; preds = %vector.body38, %vector.ph41
  %index48.unr = phi i64 [ 0, %vector.ph41 ], [ %index.next49.3, %vector.body38 ]
  %lcmp.mod217.not = icmp eq i64 %xtraiter215, 0
  br i1 %lcmp.mod217.not, label %middle.block36, label %vector.body38.epil

vector.body38.epil:                               ; preds = %middle.block36.unr-lcssa, %vector.body38.epil
  %index48.epil = phi i64 [ %index.next49.epil, %vector.body38.epil ], [ %index48.unr, %middle.block36.unr-lcssa ]
  %epil.iter216 = phi i64 [ %epil.iter216.sub, %vector.body38.epil ], [ %xtraiter215, %middle.block36.unr-lcssa ]
  %next.gep.epil = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %index48.epil
  %offset.idx.epil = add i64 %start.0.idx.lcssa, %index48.epil
  %129 = getelementptr inbounds i8, i8* %end.1872, i64 %offset.idx.epil
  %130 = bitcast i8* %129 to <32 x i8>*
  %wide.load.epil = load <32 x i8>, <32 x i8>* %130, align 1, !tbaa !14, !alias.scope !203
  %131 = getelementptr inbounds i8, i8* %129, i64 32
  %132 = bitcast i8* %131 to <32 x i8>*
  %wide.load58.epil = load <32 x i8>, <32 x i8>* %132, align 1, !tbaa !14, !alias.scope !203
  %133 = getelementptr inbounds i8, i8* %129, i64 64
  %134 = bitcast i8* %133 to <32 x i8>*
  %wide.load59.epil = load <32 x i8>, <32 x i8>* %134, align 1, !tbaa !14, !alias.scope !203
  %135 = getelementptr inbounds i8, i8* %129, i64 96
  %136 = bitcast i8* %135 to <32 x i8>*
  %wide.load60.epil = load <32 x i8>, <32 x i8>* %136, align 1, !tbaa !14, !alias.scope !203
  %137 = bitcast i8* %next.gep.epil to <32 x i8>*
  store <32 x i8> %wide.load.epil, <32 x i8>* %137, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %138 = getelementptr i8, i8* %next.gep.epil, i64 32
  %139 = bitcast i8* %138 to <32 x i8>*
  store <32 x i8> %wide.load58.epil, <32 x i8>* %139, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %140 = getelementptr i8, i8* %next.gep.epil, i64 64
  %141 = bitcast i8* %140 to <32 x i8>*
  store <32 x i8> %wide.load59.epil, <32 x i8>* %141, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %142 = getelementptr i8, i8* %next.gep.epil, i64 96
  %143 = bitcast i8* %142 to <32 x i8>*
  store <32 x i8> %wide.load60.epil, <32 x i8>* %143, align 1, !tbaa !14, !alias.scope !206, !noalias !203
  %index.next49.epil = add i64 %index48.epil, 128
  %epil.iter216.sub = add i64 %epil.iter216, -1
  %epil.iter216.cmp.not = icmp eq i64 %epil.iter216.sub, 0
  br i1 %epil.iter216.cmp.not, label %middle.block36, label %vector.body38.epil, !llvm.loop !209

middle.block36:                                   ; preds = %vector.body38.epil, %middle.block36.unr-lcssa
  %cmp.n54 = icmp eq i64 %n.vec47, %63
  br i1 %cmp.n54, label %while.cond191.preheader, label %while.body187.preheader212

while.body187.preheader212:                       ; preds = %vector.memcheck, %while.body187.preheader, %middle.block36
  %dst.0870.ph = phi i8* [ %62, %vector.memcheck ], [ %62, %while.body187.preheader ], [ %ind.end51, %middle.block36 ]
  %start.1869.idx.ph = phi i64 [ %start.0.idx.lcssa, %vector.memcheck ], [ %start.0.idx.lcssa, %while.body187.preheader ], [ %ind.end53, %middle.block36 ]
  %144 = sub i64 -2, %start.1869.idx.ph
  %145 = and i64 %start.1869.idx.ph, 7
  %xtraiter220 = xor i64 %145, 7
  %lcmp.mod221.not = icmp eq i64 %xtraiter220, 0
  br i1 %lcmp.mod221.not, label %while.body187.prol.loopexit, label %while.body187.prol

while.body187.prol:                               ; preds = %while.body187.preheader212, %while.body187.prol
  %dst.0870.prol = phi i8* [ %incdec.ptr189.prol, %while.body187.prol ], [ %dst.0870.ph, %while.body187.preheader212 ]
  %start.1869.idx.prol = phi i64 [ %start.1869.add.prol, %while.body187.prol ], [ %start.1869.idx.ph, %while.body187.preheader212 ]
  %prol.iter = phi i64 [ %prol.iter.sub, %while.body187.prol ], [ %xtraiter220, %while.body187.preheader212 ]
  %start.1869.ptr.prol = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.idx.prol
  %start.1869.add.prol = add nuw nsw i64 %start.1869.idx.prol, 1
  %146 = load i8, i8* %start.1869.ptr.prol, align 1, !tbaa !14
  %incdec.ptr189.prol = getelementptr inbounds i8, i8* %dst.0870.prol, i64 1
  store i8 %146, i8* %dst.0870.prol, align 1, !tbaa !14
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp.not, label %while.body187.prol.loopexit, label %while.body187.prol, !llvm.loop !210

while.body187.prol.loopexit:                      ; preds = %while.body187.prol, %while.body187.preheader212
  %incdec.ptr189.lcssa213.unr = phi i8* [ undef, %while.body187.preheader212 ], [ %incdec.ptr189.prol, %while.body187.prol ]
  %dst.0870.unr = phi i8* [ %dst.0870.ph, %while.body187.preheader212 ], [ %incdec.ptr189.prol, %while.body187.prol ]
  %start.1869.idx.unr = phi i64 [ %start.1869.idx.ph, %while.body187.preheader212 ], [ %start.1869.add.prol, %while.body187.prol ]
  %147 = icmp ult i64 %144, 7
  br i1 %147, label %while.cond191.preheader, label %while.body187

while.cond191.preheader:                          ; preds = %while.body187.prol.loopexit, %while.body187, %middle.block36
  %incdec.ptr189.lcssa = phi i8* [ %ind.end51, %middle.block36 ], [ %incdec.ptr189.lcssa213.unr, %while.body187.prol.loopexit ], [ %incdec.ptr189.7, %while.body187 ]
  %add.ptr = getelementptr inbounds [256 x i8], [256 x i8]* %array_name, i64 0, i64 256
  %cmp193866 = icmp ult i8* %incdec.ptr189.lcssa, %add.ptr
  br i1 %cmp193866, label %iter.check, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705

iter.check:                                       ; preds = %while.cond191.preheader, %while.end183
  %dst.0.lcssa911 = phi i8* [ %incdec.ptr189.lcssa, %while.cond191.preheader ], [ %62, %while.end183 ]
  %dst.0.lcssa91164 = ptrtoint i8* %dst.0.lcssa911 to i64
  %scevgep = getelementptr inbounds [256 x i8], [256 x i8]* %array_name, i64 1, i64 0
  %148 = sub i64 0, %dst.0.lcssa91164
  %scevgep65 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 1, i64 %148
  %exitcount.ptrcnt.to.int = ptrtoint i8* %scevgep65 to i64
  %min.iters.check67 = icmp ult i8* %scevgep65, inttoptr (i64 4 to i8*)
  br i1 %min.iters.check67, label %while.body194.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %iter.check
  %min.iters.check69 = icmp ult i8* %scevgep65, inttoptr (i64 128 to i8*)
  br i1 %min.iters.check69, label %vec.epilog.ph, label %vector.ph70

vector.ph70:                                      ; preds = %vector.main.loop.iter.check
  %n.vec72 = and i64 %exitcount.ptrcnt.to.int, -128
  %149 = add i64 %n.vec72, -128
  %150 = lshr exact i64 %149, 7
  %151 = add nuw nsw i64 %150, 1
  %xtraiter222 = and i64 %151, 7
  %152 = icmp ult i64 %149, 896
  br i1 %152, label %middle.block61.unr-lcssa, label %vector.ph70.new

vector.ph70.new:                                  ; preds = %vector.ph70
  %unroll_iter225 = and i64 %151, 288230376151711736
  br label %vector.body63

vector.body63:                                    ; preds = %vector.body63, %vector.ph70.new
  %index73 = phi i64 [ 0, %vector.ph70.new ], [ %index.next74.7, %vector.body63 ]
  %niter226 = phi i64 [ %unroll_iter225, %vector.ph70.new ], [ %niter226.nsub.7, %vector.body63 ]
  %next.gep76 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index73
  %153 = bitcast i8* %next.gep76 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %153, align 1, !tbaa !14
  %154 = getelementptr i8, i8* %next.gep76, i64 32
  %155 = bitcast i8* %154 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %155, align 1, !tbaa !14
  %156 = getelementptr i8, i8* %next.gep76, i64 64
  %157 = bitcast i8* %156 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %157, align 1, !tbaa !14
  %158 = getelementptr i8, i8* %next.gep76, i64 96
  %159 = bitcast i8* %158 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %159, align 1, !tbaa !14
  %index.next74 = or i64 %index73, 128
  %next.gep76.1 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index.next74
  %160 = bitcast i8* %next.gep76.1 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %160, align 1, !tbaa !14
  %161 = getelementptr i8, i8* %next.gep76.1, i64 32
  %162 = bitcast i8* %161 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %162, align 1, !tbaa !14
  %163 = getelementptr i8, i8* %next.gep76.1, i64 64
  %164 = bitcast i8* %163 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %164, align 1, !tbaa !14
  %165 = getelementptr i8, i8* %next.gep76.1, i64 96
  %166 = bitcast i8* %165 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %166, align 1, !tbaa !14
  %index.next74.1 = or i64 %index73, 256
  %next.gep76.2 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index.next74.1
  %167 = bitcast i8* %next.gep76.2 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %167, align 1, !tbaa !14
  %168 = getelementptr i8, i8* %next.gep76.2, i64 32
  %169 = bitcast i8* %168 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %169, align 1, !tbaa !14
  %170 = getelementptr i8, i8* %next.gep76.2, i64 64
  %171 = bitcast i8* %170 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %171, align 1, !tbaa !14
  %172 = getelementptr i8, i8* %next.gep76.2, i64 96
  %173 = bitcast i8* %172 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %173, align 1, !tbaa !14
  %index.next74.2 = or i64 %index73, 384
  %next.gep76.3 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index.next74.2
  %174 = bitcast i8* %next.gep76.3 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %174, align 1, !tbaa !14
  %175 = getelementptr i8, i8* %next.gep76.3, i64 32
  %176 = bitcast i8* %175 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %176, align 1, !tbaa !14
  %177 = getelementptr i8, i8* %next.gep76.3, i64 64
  %178 = bitcast i8* %177 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %178, align 1, !tbaa !14
  %179 = getelementptr i8, i8* %next.gep76.3, i64 96
  %180 = bitcast i8* %179 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %180, align 1, !tbaa !14
  %index.next74.3 = or i64 %index73, 512
  %next.gep76.4 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index.next74.3
  %181 = bitcast i8* %next.gep76.4 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %181, align 1, !tbaa !14
  %182 = getelementptr i8, i8* %next.gep76.4, i64 32
  %183 = bitcast i8* %182 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %183, align 1, !tbaa !14
  %184 = getelementptr i8, i8* %next.gep76.4, i64 64
  %185 = bitcast i8* %184 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %185, align 1, !tbaa !14
  %186 = getelementptr i8, i8* %next.gep76.4, i64 96
  %187 = bitcast i8* %186 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %187, align 1, !tbaa !14
  %index.next74.4 = or i64 %index73, 640
  %next.gep76.5 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index.next74.4
  %188 = bitcast i8* %next.gep76.5 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %188, align 1, !tbaa !14
  %189 = getelementptr i8, i8* %next.gep76.5, i64 32
  %190 = bitcast i8* %189 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %190, align 1, !tbaa !14
  %191 = getelementptr i8, i8* %next.gep76.5, i64 64
  %192 = bitcast i8* %191 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %192, align 1, !tbaa !14
  %193 = getelementptr i8, i8* %next.gep76.5, i64 96
  %194 = bitcast i8* %193 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %194, align 1, !tbaa !14
  %index.next74.5 = or i64 %index73, 768
  %next.gep76.6 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index.next74.5
  %195 = bitcast i8* %next.gep76.6 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %195, align 1, !tbaa !14
  %196 = getelementptr i8, i8* %next.gep76.6, i64 32
  %197 = bitcast i8* %196 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %197, align 1, !tbaa !14
  %198 = getelementptr i8, i8* %next.gep76.6, i64 64
  %199 = bitcast i8* %198 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %199, align 1, !tbaa !14
  %200 = getelementptr i8, i8* %next.gep76.6, i64 96
  %201 = bitcast i8* %200 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %201, align 1, !tbaa !14
  %index.next74.6 = or i64 %index73, 896
  %next.gep76.7 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index.next74.6
  %202 = bitcast i8* %next.gep76.7 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %202, align 1, !tbaa !14
  %203 = getelementptr i8, i8* %next.gep76.7, i64 32
  %204 = bitcast i8* %203 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %204, align 1, !tbaa !14
  %205 = getelementptr i8, i8* %next.gep76.7, i64 64
  %206 = bitcast i8* %205 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %206, align 1, !tbaa !14
  %207 = getelementptr i8, i8* %next.gep76.7, i64 96
  %208 = bitcast i8* %207 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %208, align 1, !tbaa !14
  %index.next74.7 = add i64 %index73, 1024
  %niter226.nsub.7 = add i64 %niter226, -8
  %niter226.ncmp.7 = icmp eq i64 %niter226.nsub.7, 0
  br i1 %niter226.ncmp.7, label %middle.block61.unr-lcssa, label %vector.body63, !llvm.loop !211

middle.block61.unr-lcssa:                         ; preds = %vector.body63, %vector.ph70
  %index73.unr = phi i64 [ 0, %vector.ph70 ], [ %index.next74.7, %vector.body63 ]
  %lcmp.mod224.not = icmp eq i64 %xtraiter222, 0
  br i1 %lcmp.mod224.not, label %middle.block61, label %vector.body63.epil

vector.body63.epil:                               ; preds = %middle.block61.unr-lcssa, %vector.body63.epil
  %index73.epil = phi i64 [ %index.next74.epil, %vector.body63.epil ], [ %index73.unr, %middle.block61.unr-lcssa ]
  %epil.iter223 = phi i64 [ %epil.iter223.sub, %vector.body63.epil ], [ %xtraiter222, %middle.block61.unr-lcssa ]
  %next.gep76.epil = getelementptr i8, i8* %dst.0.lcssa911, i64 %index73.epil
  %209 = bitcast i8* %next.gep76.epil to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %209, align 1, !tbaa !14
  %210 = getelementptr i8, i8* %next.gep76.epil, i64 32
  %211 = bitcast i8* %210 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %211, align 1, !tbaa !14
  %212 = getelementptr i8, i8* %next.gep76.epil, i64 64
  %213 = bitcast i8* %212 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %213, align 1, !tbaa !14
  %214 = getelementptr i8, i8* %next.gep76.epil, i64 96
  %215 = bitcast i8* %214 to <32 x i8>*
  store <32 x i8> zeroinitializer, <32 x i8>* %215, align 1, !tbaa !14
  %index.next74.epil = add i64 %index73.epil, 128
  %epil.iter223.sub = add i64 %epil.iter223, -1
  %epil.iter223.cmp.not = icmp eq i64 %epil.iter223.sub, 0
  br i1 %epil.iter223.cmp.not, label %middle.block61, label %vector.body63.epil, !llvm.loop !212

middle.block61:                                   ; preds = %vector.body63.epil, %middle.block61.unr-lcssa
  %cmp.n75 = icmp eq i64 %n.vec72, %exitcount.ptrcnt.to.int
  br i1 %cmp.n75, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block61
  %ind.end89 = getelementptr i8, i8* %dst.0.lcssa911, i64 %n.vec72
  %n.vec.remaining = and i64 %exitcount.ptrcnt.to.int, 124
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %while.body194.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vector.main.loop.iter.check, %vec.epilog.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec72, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %216 = sub i64 0, %dst.0.lcssa91164
  %scevgep80 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 1, i64 %216
  %exitcount.ptrcnt.to.int82 = ptrtoint i8* %scevgep80 to i64
  %n.vec84 = and i64 %exitcount.ptrcnt.to.int82, -4
  %ind.end88 = getelementptr i8, i8* %dst.0.lcssa911, i64 %n.vec84
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %index85 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next86, %vec.epilog.vector.body ]
  %next.gep91 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index85
  %217 = bitcast i8* %next.gep91 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %217, align 1, !tbaa !14
  %index.next86 = add i64 %index85, 4
  %218 = icmp eq i64 %index.next86, %n.vec84
  br i1 %218, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !213

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n90 = icmp eq i64 %n.vec84, %exitcount.ptrcnt.to.int82
  br i1 %cmp.n90, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705, label %while.body194.preheader

while.body194.preheader:                          ; preds = %iter.check, %vec.epilog.iter.check, %vec.epilog.middle.block
  %dst.1867.ph = phi i8* [ %dst.0.lcssa911, %iter.check ], [ %ind.end89, %vec.epilog.iter.check ], [ %ind.end88, %vec.epilog.middle.block ]
  br label %while.body194

while.body187:                                    ; preds = %while.body187.prol.loopexit, %while.body187
  %dst.0870 = phi i8* [ %incdec.ptr189.7, %while.body187 ], [ %dst.0870.unr, %while.body187.prol.loopexit ]
  %start.1869.idx = phi i64 [ %start.1869.add.7, %while.body187 ], [ %start.1869.idx.unr, %while.body187.prol.loopexit ]
  %start.1869.ptr = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.idx
  %start.1869.add = add nuw nsw i64 %start.1869.idx, 1
  %219 = load i8, i8* %start.1869.ptr, align 1, !tbaa !14
  %incdec.ptr189 = getelementptr inbounds i8, i8* %dst.0870, i64 1
  store i8 %219, i8* %dst.0870, align 1, !tbaa !14
  %start.1869.ptr.1 = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.add
  %start.1869.add.1 = add nuw nsw i64 %start.1869.idx, 2
  %220 = load i8, i8* %start.1869.ptr.1, align 1, !tbaa !14
  %incdec.ptr189.1 = getelementptr inbounds i8, i8* %dst.0870, i64 2
  store i8 %220, i8* %incdec.ptr189, align 1, !tbaa !14
  %start.1869.ptr.2 = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.add.1
  %start.1869.add.2 = add nuw nsw i64 %start.1869.idx, 3
  %221 = load i8, i8* %start.1869.ptr.2, align 1, !tbaa !14
  %incdec.ptr189.2 = getelementptr inbounds i8, i8* %dst.0870, i64 3
  store i8 %221, i8* %incdec.ptr189.1, align 1, !tbaa !14
  %start.1869.ptr.3 = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.add.2
  %start.1869.add.3 = add nuw nsw i64 %start.1869.idx, 4
  %222 = load i8, i8* %start.1869.ptr.3, align 1, !tbaa !14
  %incdec.ptr189.3 = getelementptr inbounds i8, i8* %dst.0870, i64 4
  store i8 %222, i8* %incdec.ptr189.2, align 1, !tbaa !14
  %start.1869.ptr.4 = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.add.3
  %start.1869.add.4 = add nuw nsw i64 %start.1869.idx, 5
  %223 = load i8, i8* %start.1869.ptr.4, align 1, !tbaa !14
  %incdec.ptr189.4 = getelementptr inbounds i8, i8* %dst.0870, i64 5
  store i8 %223, i8* %incdec.ptr189.3, align 1, !tbaa !14
  %start.1869.ptr.5 = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.add.4
  %start.1869.add.5 = add nuw nsw i64 %start.1869.idx, 6
  %224 = load i8, i8* %start.1869.ptr.5, align 1, !tbaa !14
  %incdec.ptr189.5 = getelementptr inbounds i8, i8* %dst.0870, i64 6
  store i8 %224, i8* %incdec.ptr189.4, align 1, !tbaa !14
  %start.1869.ptr.6 = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.add.5
  %start.1869.add.6 = add nuw nsw i64 %start.1869.idx, 7
  %225 = load i8, i8* %start.1869.ptr.6, align 1, !tbaa !14
  %incdec.ptr189.6 = getelementptr inbounds i8, i8* %dst.0870, i64 7
  store i8 %225, i8* %incdec.ptr189.5, align 1, !tbaa !14
  %start.1869.ptr.7 = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.add.6
  %start.1869.add.7 = add nuw nsw i64 %start.1869.idx, 8
  %226 = load i8, i8* %start.1869.ptr.7, align 1, !tbaa !14
  %incdec.ptr189.7 = getelementptr inbounds i8, i8* %dst.0870, i64 8
  store i8 %226, i8* %incdec.ptr189.6, align 1, !tbaa !14
  %cmp186.not.7 = icmp eq i64 %start.1869.add.7, -1
  br i1 %cmp186.not.7, label %while.cond191.preheader, label %while.body187, !llvm.loop !214

while.body194:                                    ; preds = %while.body194.preheader, %while.body194
  %dst.1867 = phi i8* [ %incdec.ptr195, %while.body194 ], [ %dst.1867.ph, %while.body194.preheader ]
  %incdec.ptr195 = getelementptr inbounds i8, i8* %dst.1867, i64 1
  store i8 0, i8* %dst.1867, align 1, !tbaa !14
  %exitcond882.not = icmp eq i8* %incdec.ptr195, %scevgep
  br i1 %exitcond882.not, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705, label %while.body194, !llvm.loop !215

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705: ; preds = %while.body194, %middle.block61, %vec.epilog.middle.block, %while.cond191.preheader
  %add197 = sub i32 6, %61
  %and = and i32 %add197, -8
  %227 = getelementptr inbounds [129 x i8], [129 x i8]* %header198, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 129, i8* nonnull %227) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(129) %227, i8* nonnull align 1 dereferenceable(129) getelementptr inbounds ([129 x i8], [129 x i8]* @__const.halide_debug_to_file.header, i64 0, i64 0), i64 129, i1 false)
  %call.i701 = call i64 @fwrite(i8* nonnull %227, i64 128, i64 1, i8* nonnull %call.i598) #15
  %228 = load i32, i32* %dimensions, align 4, !tbaa !175
  %cmp19.i.i = icmp sgt i32 %228, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %229 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !176
  %wide.trip.count.i.i = zext i32 %228 to i64
  %min.iters.check95 = icmp ult i32 %228, 17
  br i1 %min.iters.check95, label %for.body.i.i.preheader, label %vector.ph96

vector.ph96:                                      ; preds = %for.body.lr.ph.i.i
  %n.mod.vf97 = and i64 %wide.trip.count.i.i, 15
  %230 = icmp eq i64 %n.mod.vf97, 0
  %231 = select i1 %230, i64 16, i64 %n.mod.vf97
  %n.vec98 = sub nsw i64 %wide.trip.count.i.i, %231
  br label %vector.body94

vector.body94:                                    ; preds = %vector.body94, %vector.ph96
  %index99 = phi i64 [ 0, %vector.ph96 ], [ %index.next100, %vector.body94 ]
  %vec.ind103 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph96 ], [ %vec.ind.next107, %vector.body94 ]
  %vec.phi = phi <4 x i64> [ zeroinitializer, %vector.ph96 ], [ %predphi, %vector.body94 ]
  %vec.phi108 = phi <4 x i64> [ zeroinitializer, %vector.ph96 ], [ %predphi120, %vector.body94 ]
  %vec.phi109 = phi <4 x i64> [ zeroinitializer, %vector.ph96 ], [ %predphi121, %vector.body94 ]
  %vec.phi110 = phi <4 x i64> [ zeroinitializer, %vector.ph96 ], [ %predphi122, %vector.body94 ]
  %step.add = add <4 x i64> %vec.ind103, <i64 4, i64 4, i64 4, i64 4>
  %step.add104 = add <4 x i64> %vec.ind103, <i64 8, i64 8, i64 8, i64 8>
  %step.add105 = add <4 x i64> %vec.ind103, <i64 12, i64 12, i64 12, i64 12>
  %232 = or i64 %index99, 4
  %233 = or i64 %index99, 8
  %234 = or i64 %index99, 12
  %235 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %index99, i32 2
  %236 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %232, i32 2
  %237 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %233, i32 2
  %238 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %234, i32 2
  %239 = bitcast i32* %235 to <16 x i32>*
  %240 = bitcast i32* %236 to <16 x i32>*
  %241 = bitcast i32* %237 to <16 x i32>*
  %242 = bitcast i32* %238 to <16 x i32>*
  %wide.vec = load <16 x i32>, <16 x i32>* %239, align 4, !tbaa !182
  %wide.vec111 = load <16 x i32>, <16 x i32>* %240, align 4, !tbaa !182
  %wide.vec112 = load <16 x i32>, <16 x i32>* %241, align 4, !tbaa !182
  %wide.vec113 = load <16 x i32>, <16 x i32>* %242, align 4, !tbaa !182
  %strided.vec = shufflevector <16 x i32> %wide.vec, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec114 = shufflevector <16 x i32> %wide.vec111, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec115 = shufflevector <16 x i32> %wide.vec112, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec116 = shufflevector <16 x i32> %wide.vec113, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %243 = icmp sgt <4 x i32> %strided.vec, zeroinitializer
  %244 = icmp sgt <4 x i32> %strided.vec114, zeroinitializer
  %245 = icmp sgt <4 x i32> %strided.vec115, zeroinitializer
  %246 = icmp sgt <4 x i32> %strided.vec116, zeroinitializer
  %247 = zext <4 x i32> %strided.vec to <4 x i64>
  %248 = zext <4 x i32> %strided.vec114 to <4 x i64>
  %249 = zext <4 x i32> %strided.vec115 to <4 x i64>
  %250 = zext <4 x i32> %strided.vec116 to <4 x i64>
  %251 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, <4 x i64> %vec.ind103, i32 1
  %252 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, <4 x i64> %step.add, i32 1
  %253 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, <4 x i64> %step.add104, i32 1
  %254 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, <4 x i64> %step.add105, i32 1
  %wide.masked.gather = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %251, i32 4, <4 x i1> %243, <4 x i32> undef), !tbaa !178
  %wide.masked.gather117 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %252, i32 4, <4 x i1> %244, <4 x i32> undef), !tbaa !178
  %wide.masked.gather118 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %253, i32 4, <4 x i1> %245, <4 x i32> undef), !tbaa !178
  %wide.masked.gather119 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %254, i32 4, <4 x i1> %246, <4 x i32> undef), !tbaa !178
  %255 = add nsw <4 x i32> %wide.masked.gather, <i32 -1, i32 -1, i32 -1, i32 -1>
  %256 = add nsw <4 x i32> %wide.masked.gather117, <i32 -1, i32 -1, i32 -1, i32 -1>
  %257 = add nsw <4 x i32> %wide.masked.gather118, <i32 -1, i32 -1, i32 -1, i32 -1>
  %258 = add nsw <4 x i32> %wide.masked.gather119, <i32 -1, i32 -1, i32 -1, i32 -1>
  %259 = sext <4 x i32> %255 to <4 x i64>
  %260 = sext <4 x i32> %256 to <4 x i64>
  %261 = sext <4 x i32> %257 to <4 x i64>
  %262 = sext <4 x i32> %258 to <4 x i64>
  %263 = mul nsw <4 x i64> %259, %247
  %264 = mul nsw <4 x i64> %260, %248
  %265 = mul nsw <4 x i64> %261, %249
  %266 = mul nsw <4 x i64> %262, %250
  %267 = select <4 x i1> %243, <4 x i64> %263, <4 x i64> zeroinitializer
  %predphi = add <4 x i64> %vec.phi, %267
  %268 = select <4 x i1> %244, <4 x i64> %264, <4 x i64> zeroinitializer
  %predphi120 = add <4 x i64> %vec.phi108, %268
  %269 = select <4 x i1> %245, <4 x i64> %265, <4 x i64> zeroinitializer
  %predphi121 = add <4 x i64> %vec.phi109, %269
  %270 = select <4 x i1> %246, <4 x i64> %266, <4 x i64> zeroinitializer
  %predphi122 = add <4 x i64> %vec.phi110, %270
  %index.next100 = add i64 %index99, 16
  %vec.ind.next107 = add <4 x i64> %vec.ind103, <i64 16, i64 16, i64 16, i64 16>
  %271 = icmp eq i64 %index.next100, %n.vec98
  br i1 %271, label %middle.block92, label %vector.body94, !llvm.loop !216

middle.block92:                                   ; preds = %vector.body94
  %bin.rdx = add <4 x i64> %predphi120, %predphi
  %bin.rdx123 = add <4 x i64> %predphi121, %bin.rdx
  %bin.rdx124 = add <4 x i64> %predphi122, %bin.rdx123
  %272 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx124)
  br label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %middle.block92, %for.body.lr.ph.i.i
  %indvars.iv.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %n.vec98, %middle.block92 ]
  %index.021.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %272, %middle.block92 ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %if.end.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %index.021.i.i = phi i64 [ %index.1.i.i, %if.end.i.i ], [ %index.021.i.i.ph, %for.body.i.i.preheader ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %indvars.iv.i.i, i32 2
  %273 = load i32, i32* %stride2.i.i, align 4, !tbaa !182
  %cmp3.i.i = icmp sgt i32 %273, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %273 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %indvars.iv.i.i, i32 1
  %274 = load i32, i32* %extent.i.i, align 4, !tbaa !178
  %sub.i.i = add nsw i32 %274, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i693 = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i693, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i.preheader, label %for.body.i.i, !llvm.loop !217

for.body.i13.i.preheader:                         ; preds = %if.end.i.i
  %min.iters.check128 = icmp ult i32 %228, 17
  br i1 %min.iters.check128, label %for.body.i13.i.preheader211, label %vector.ph129

vector.ph129:                                     ; preds = %for.body.i13.i.preheader
  %n.mod.vf130 = and i64 %wide.trip.count.i.i, 15
  %275 = icmp eq i64 %n.mod.vf130, 0
  %276 = select i1 %275, i64 16, i64 %n.mod.vf130
  %n.vec131 = sub nsw i64 %wide.trip.count.i.i, %276
  br label %vector.body127

vector.body127:                                   ; preds = %vector.body127, %vector.ph129
  %index132 = phi i64 [ 0, %vector.ph129 ], [ %index.next133, %vector.body127 ]
  %vec.ind136 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph129 ], [ %vec.ind.next141, %vector.body127 ]
  %vec.phi142 = phi <4 x i64> [ zeroinitializer, %vector.ph129 ], [ %predphi158, %vector.body127 ]
  %vec.phi143 = phi <4 x i64> [ zeroinitializer, %vector.ph129 ], [ %predphi159, %vector.body127 ]
  %vec.phi144 = phi <4 x i64> [ zeroinitializer, %vector.ph129 ], [ %predphi160, %vector.body127 ]
  %vec.phi145 = phi <4 x i64> [ zeroinitializer, %vector.ph129 ], [ %predphi161, %vector.body127 ]
  %step.add137 = add <4 x i64> %vec.ind136, <i64 4, i64 4, i64 4, i64 4>
  %step.add138 = add <4 x i64> %vec.ind136, <i64 8, i64 8, i64 8, i64 8>
  %step.add139 = add <4 x i64> %vec.ind136, <i64 12, i64 12, i64 12, i64 12>
  %277 = or i64 %index132, 4
  %278 = or i64 %index132, 8
  %279 = or i64 %index132, 12
  %280 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %index132, i32 2
  %281 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %277, i32 2
  %282 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %278, i32 2
  %283 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %279, i32 2
  %284 = bitcast i32* %280 to <16 x i32>*
  %285 = bitcast i32* %281 to <16 x i32>*
  %286 = bitcast i32* %282 to <16 x i32>*
  %287 = bitcast i32* %283 to <16 x i32>*
  %wide.vec146 = load <16 x i32>, <16 x i32>* %284, align 4, !tbaa !182
  %wide.vec147 = load <16 x i32>, <16 x i32>* %285, align 4, !tbaa !182
  %wide.vec148 = load <16 x i32>, <16 x i32>* %286, align 4, !tbaa !182
  %wide.vec149 = load <16 x i32>, <16 x i32>* %287, align 4, !tbaa !182
  %strided.vec150 = shufflevector <16 x i32> %wide.vec146, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec151 = shufflevector <16 x i32> %wide.vec147, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec152 = shufflevector <16 x i32> %wide.vec148, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec153 = shufflevector <16 x i32> %wide.vec149, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %288 = icmp slt <4 x i32> %strided.vec150, zeroinitializer
  %289 = icmp slt <4 x i32> %strided.vec151, zeroinitializer
  %290 = icmp slt <4 x i32> %strided.vec152, zeroinitializer
  %291 = icmp slt <4 x i32> %strided.vec153, zeroinitializer
  %292 = sext <4 x i32> %strided.vec150 to <4 x i64>
  %293 = sext <4 x i32> %strided.vec151 to <4 x i64>
  %294 = sext <4 x i32> %strided.vec152 to <4 x i64>
  %295 = sext <4 x i32> %strided.vec153 to <4 x i64>
  %296 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, <4 x i64> %vec.ind136, i32 1
  %297 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, <4 x i64> %step.add137, i32 1
  %298 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, <4 x i64> %step.add138, i32 1
  %299 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, <4 x i64> %step.add139, i32 1
  %wide.masked.gather154 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %296, i32 4, <4 x i1> %288, <4 x i32> undef), !tbaa !178
  %wide.masked.gather155 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %297, i32 4, <4 x i1> %289, <4 x i32> undef), !tbaa !178
  %wide.masked.gather156 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %298, i32 4, <4 x i1> %290, <4 x i32> undef), !tbaa !178
  %wide.masked.gather157 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %299, i32 4, <4 x i1> %291, <4 x i32> undef), !tbaa !178
  %300 = add nsw <4 x i32> %wide.masked.gather154, <i32 -1, i32 -1, i32 -1, i32 -1>
  %301 = add nsw <4 x i32> %wide.masked.gather155, <i32 -1, i32 -1, i32 -1, i32 -1>
  %302 = add nsw <4 x i32> %wide.masked.gather156, <i32 -1, i32 -1, i32 -1, i32 -1>
  %303 = add nsw <4 x i32> %wide.masked.gather157, <i32 -1, i32 -1, i32 -1, i32 -1>
  %304 = sext <4 x i32> %300 to <4 x i64>
  %305 = sext <4 x i32> %301 to <4 x i64>
  %306 = sext <4 x i32> %302 to <4 x i64>
  %307 = sext <4 x i32> %303 to <4 x i64>
  %308 = mul nsw <4 x i64> %304, %292
  %309 = mul nsw <4 x i64> %305, %293
  %310 = mul nsw <4 x i64> %306, %294
  %311 = mul nsw <4 x i64> %307, %295
  %312 = select <4 x i1> %288, <4 x i64> %308, <4 x i64> zeroinitializer
  %predphi158 = add <4 x i64> %vec.phi142, %312
  %313 = select <4 x i1> %289, <4 x i64> %309, <4 x i64> zeroinitializer
  %predphi159 = add <4 x i64> %vec.phi143, %313
  %314 = select <4 x i1> %290, <4 x i64> %310, <4 x i64> zeroinitializer
  %predphi160 = add <4 x i64> %vec.phi144, %314
  %315 = select <4 x i1> %291, <4 x i64> %311, <4 x i64> zeroinitializer
  %predphi161 = add <4 x i64> %vec.phi145, %315
  %index.next133 = add i64 %index132, 16
  %vec.ind.next141 = add <4 x i64> %vec.ind136, <i64 16, i64 16, i64 16, i64 16>
  %316 = icmp eq i64 %index.next133, %n.vec131
  br i1 %316, label %middle.block125, label %vector.body127, !llvm.loop !218

middle.block125:                                  ; preds = %vector.body127
  %bin.rdx162 = add <4 x i64> %predphi159, %predphi158
  %bin.rdx163 = add <4 x i64> %predphi160, %bin.rdx162
  %bin.rdx164 = add <4 x i64> %predphi161, %bin.rdx163
  %317 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx164)
  br label %for.body.i13.i.preheader211

for.body.i13.i.preheader211:                      ; preds = %middle.block125, %for.body.i13.i.preheader
  %indvars.iv.i10.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %n.vec131, %middle.block125 ]
  %index.018.i.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %317, %middle.block125 ]
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %for.body.i13.i.preheader211, %if.end.i24.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ %indvars.iv.i10.i.ph, %for.body.i13.i.preheader211 ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ %index.018.i.i.ph, %for.body.i13.i.preheader211 ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %indvars.iv.i10.i, i32 2
  %318 = load i32, i32* %stride2.i11.i, align 4, !tbaa !182
  %cmp3.i12.i = icmp slt i32 %318, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %318 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %229, i64 %indvars.iv.i10.i, i32 1
  %319 = load i32, i32* %extent.i15.i, align 4, !tbaa !178
  %sub.i16.i = add nsw i32 %319, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !219

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i
  %add8.i.i = add nsw i64 %index.1.i.i, 1
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705
  %add8.i27.i = phi i64 [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705 ], [ %add8.i.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %index.0.lcssa.i9.i = phi i64 [ 0, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705 ], [ %index.1.i21.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i694 = sub nsw i64 %add8.i27.i, %index.0.lcssa.i9.i
  %320 = load i8, i8* %bits.i, align 1, !tbaa !136
  %conv.i.i696 = zext i8 %320 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i696, 7
  %div.i.i697 = lshr i64 %add.i4.i, 3
  %mul.i698 = mul i64 %div.i.i697, %sub.i694
  %321 = trunc i64 %mul.i698 to i32
  %322 = add i32 %321, 7
  %323 = and i32 %322, 7
  %conv204 = xor i32 %323, 7
  %conv205 = zext i32 %conv204 to i64
  %add206 = add i64 %mul.i698, %conv205
  %tobool207.not = icmp ult i64 %add206, 4294967296
  br i1 %tobool207.not, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687, label %cleanup278.thread

cleanup278.thread:                                ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6.40, i64 0, i64 0)) #15
  call void @llvm.lifetime.end.p0i8(i64 129, i8* nonnull %227) #10
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %62) #10
  br label %cleanup433

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687: ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %324 = icmp sgt i32 %228, 2
  %spec.store.select = select i1 %324, i32 %228, i32 2
  %325 = bitcast [8 x i32]* %tags to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %325) #10
  %arrayinit.begin = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 0
  store i32 14, i32* %arrayinit.begin, align 4, !tbaa !73
  %arrayinit.element = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 1
  %add214 = shl i32 %spec.store.select, 2
  %and215 = add i32 %add214, 4
  %mul216 = and i32 %and215, -8
  %add217 = add i32 %and, 40
  %add218 = add i32 %add217, %mul216
  %add220 = add i32 %add218, %321
  %add221 = add i32 %add220, %conv204
  store i32 %add221, i32* %arrayinit.element, align 4, !tbaa !73
  %arrayinit.element222 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 2
  store i32 6, i32* %arrayinit.element222, align 4, !tbaa !73
  %arrayinit.element223 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 3
  store i32 8, i32* %arrayinit.element223, align 4, !tbaa !73
  %arrayinit.element224 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 4
  %idxprom225 = sext i32 %type_code to i64
  %arrayidx226 = getelementptr inbounds [10 x i8], [10 x i8]* @_ZN6Halide7Runtime8Internal31pixel_type_to_matlab_class_codeE, i64 0, i64 %idxprom225
  %326 = load i8, i8* %arrayidx226, align 1, !tbaa !14
  %conv227 = zext i8 %326 to i32
  store i32 %conv227, i32* %arrayinit.element224, align 4, !tbaa !73
  %arrayinit.element228 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 5
  store i32 1, i32* %arrayinit.element228, align 4, !tbaa !73
  %arrayinit.element229 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 6
  store i32 5, i32* %arrayinit.element229, align 4, !tbaa !73
  %arrayinit.element230 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 7
  store i32 %add214, i32* %arrayinit.element230, align 4, !tbaa !73
  %call.i683 = call i64 @fwrite(i8* nonnull %325, i64 32, i64 1, i8* nonnull %call.i598) #15
  %cmp.i684.not = icmp eq i64 %call.i683, 0
  br i1 %cmp.i684.not, label %cleanup278, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687
  %327 = bitcast [4 x i32]* %extents to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %327) #10
  %arrayinit.begin235 = getelementptr inbounds [4 x i32], [4 x i32]* %extents, i64 0, i64 0
  %328 = load i32, i32* %extent.i, align 4, !tbaa !178
  store i32 %328, i32* %arrayinit.begin235, align 4, !tbaa !73
  %arrayinit.element238 = getelementptr inbounds [4 x i32], [4 x i32]* %extents, i64 0, i64 1
  %329 = load i32, i32* %extent.i.1, align 4, !tbaa !178
  store i32 %329, i32* %arrayinit.element238, align 4, !tbaa !73
  %arrayinit.element241 = getelementptr inbounds [4 x i32], [4 x i32]* %extents, i64 0, i64 2
  %330 = load i32, i32* %extent.i.2, align 4, !tbaa !178
  store i32 %330, i32* %arrayinit.element241, align 4, !tbaa !73
  %arrayinit.element244 = getelementptr inbounds [4 x i32], [4 x i32]* %extents, i64 0, i64 3
  %331 = load i32, i32* %extent.i.3, align 4, !tbaa !178
  store i32 %331, i32* %arrayinit.element244, align 4, !tbaa !73
  %conv248 = sext i32 %mul216 to i64
  %call.i672 = call i64 @fwrite(i8* nonnull %327, i64 %conv248, i64 1, i8* nonnull %call.i598) #15
  %cmp.i673.not = icmp eq i64 %call.i672, 0
  br i1 %cmp.i673.not, label %cleanup274, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676
  %332 = bitcast [2 x i32]* %name_header to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %332) #10
  %arrayinit.begin252 = getelementptr inbounds [2 x i32], [2 x i32]* %name_header, i64 0, i64 0
  store i32 1, i32* %arrayinit.begin252, align 4, !tbaa !73
  %arrayinit.element253 = getelementptr inbounds [2 x i32], [2 x i32]* %name_header, i64 0, i64 1
  store i32 %conv184, i32* %arrayinit.element253, align 4, !tbaa !73
  %call.i660 = call i64 @fwrite(i8* nonnull %332, i64 8, i64 1, i8* nonnull %call.i598) #15
  %cmp.i661.not = icmp eq i64 %call.i660, 0
  br i1 %cmp.i661.not, label %cleanup273, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664
  %conv258 = zext i32 %and to i64
  %call.i648 = call i64 @fwrite(i8* nonnull %62, i64 %conv258, i64 1, i8* nonnull %call.i598) #15
  %cmp.i649.not = icmp eq i64 %call.i648, 0
  br i1 %cmp.i649.not, label %cleanup273, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652
  %333 = bitcast [2 x i32]* %payload_header to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %333) #10
  %arrayinit.begin262 = getelementptr inbounds [2 x i32], [2 x i32]* %payload_header, i64 0, i64 0
  %arrayidx264 = getelementptr inbounds [10 x i8], [10 x i8]* @_ZN6Halide7Runtime8Internal30pixel_type_to_matlab_type_codeE, i64 0, i64 %idxprom225
  %334 = load i8, i8* %arrayidx264, align 1, !tbaa !14
  %conv265 = zext i8 %334 to i32
  store i32 %conv265, i32* %arrayinit.begin262, align 4, !tbaa !73
  %arrayinit.element266 = getelementptr inbounds [2 x i32], [2 x i32]* %payload_header, i64 0, i64 1
  store i32 %321, i32* %arrayinit.element266, align 4, !tbaa !73
  %call.i638 = call i64 @fwrite(i8* nonnull %333, i64 8, i64 1, i8* nonnull %call.i598) #15
  %cmp.i639.not = icmp eq i64 %call.i638, 0
  %cleanup.dest.slot.5 = zext i1 %cmp.i639.not to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %333) #10
  br label %cleanup273

cleanup273:                                       ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664
  %cleanup.dest.slot.6 = phi i32 [ %cleanup.dest.slot.5, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642 ], [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664 ], [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652 ]
  %retval.6 = phi i32 [ -11, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642 ], [ -9, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664 ], [ -10, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %332) #10
  br label %cleanup274

cleanup274:                                       ; preds = %cleanup273, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676
  %cleanup.dest.slot.7 = phi i32 [ %cleanup.dest.slot.6, %cleanup273 ], [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676 ]
  %retval.7 = phi i32 [ %retval.6, %cleanup273 ], [ -8, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %327) #10
  br label %cleanup278

cleanup278:                                       ; preds = %cleanup274, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687
  %cleanup.dest.slot.8 = phi i32 [ %cleanup.dest.slot.7, %cleanup274 ], [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687 ]
  %retval.8 = phi i32 [ %retval.7, %cleanup274 ], [ -7, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %325) #10
  call void @llvm.lifetime.end.p0i8(i64 129, i8* nonnull %227) #10
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %62) #10
  %cond442 = icmp eq i32 %cleanup.dest.slot.8, 0
  br i1 %cond442, label %if.end311, label %cleanup433

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631: ; preds = %if.else164
  %335 = bitcast [5 x i32]* %header289 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %335) #10
  %arrayinit.begin290 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 0
  %336 = load i32, i32* %extent.i, align 4, !tbaa !178
  store i32 %336, i32* %arrayinit.begin290, align 4, !tbaa !73
  %arrayinit.element293 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 1
  %337 = load i32, i32* %extent.i.1, align 4, !tbaa !178
  store i32 %337, i32* %arrayinit.element293, align 4, !tbaa !73
  %arrayinit.element296 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 2
  %338 = load i32, i32* %extent.i.2, align 4, !tbaa !178
  store i32 %338, i32* %arrayinit.element296, align 4, !tbaa !73
  %arrayinit.element299 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 3
  %339 = load i32, i32* %extent.i.3, align 4, !tbaa !178
  store i32 %339, i32* %arrayinit.element299, align 4, !tbaa !73
  %arrayinit.element302 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 4
  store i32 %type_code, i32* %arrayinit.element302, align 4, !tbaa !73
  %call.i627 = call i64 @fwrite(i8* nonnull %335, i64 20, i64 1, i8* nonnull %call.i598) #15
  %cmp.i628.not = icmp eq i64 %call.i627, 0
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %335) #10
  br i1 %cmp.i628.not, label %cleanup433, label %if.end311

if.end311:                                        ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631, %cleanup278, %cleanup154.thread
  %final_padding_bytes.0 = phi i32 [ %conv204, %cleanup278 ], [ 0, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631 ], [ 0, %cleanup154.thread ]
  %340 = getelementptr inbounds [4096 x i8], [4096 x i8]* %temp, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %340) #10
  %div = udiv i32 4096, %div.i
  %341 = load i32, i32* %extent.i.3, align 4, !tbaa !178
  %cmp320856 = icmp sgt i32 %341, 0
  br i1 %cmp320856, label %for.body322.lr.ph, label %if.end412

for.body322.lr.ph:                                ; preds = %if.end311
  %342 = load i32, i32* %min.i.3, align 4, !tbaa !181
  %343 = bitcast [4 x i32]* %idx to i8*
  %arrayinit.begin357 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 0
  %arrayinit.element358 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 1
  %arrayinit.element359 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 2
  %arrayinit.element360 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 3
  %dim.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %conv368 = zext i32 %div.i to i64
  %mul373 = mul nuw nsw i32 %div, %div.i
  %conv374 = zext i32 %mul373 to i64
  %.pre891 = load i32, i32* %min.i.2, align 4, !tbaa !181
  %.pre892 = load i32, i32* %extent.i.2, align 4, !tbaa !178
  br label %for.body322

for.body322:                                      ; preds = %for.inc399, %for.body322.lr.ph
  %344 = phi i32 [ %342, %for.body322.lr.ph ], [ %430, %for.inc399 ]
  %345 = phi i32 [ %341, %for.body322.lr.ph ], [ %431, %for.inc399 ]
  %346 = phi i32 [ %.pre891, %for.body322.lr.ph ], [ %432, %for.inc399 ]
  %347 = phi i32 [ %.pre892, %for.body322.lr.ph ], [ %433, %for.inc399 ]
  %348 = phi i32 [ %.pre892, %for.body322.lr.ph ], [ %434, %for.inc399 ]
  %349 = phi i32 [ %.pre891, %for.body322.lr.ph ], [ %435, %for.inc399 ]
  %dim3.0858 = phi i32 [ %342, %for.body322.lr.ph ], [ %inc400, %for.inc399 ]
  %counter.0857 = phi i32 [ 0, %for.body322.lr.ph ], [ %counter.1.lcssa, %for.inc399 ]
  %cmp331848 = icmp sgt i32 %348, 0
  br i1 %cmp331848, label %for.body333.preheader, label %for.inc399

for.body333.preheader:                            ; preds = %for.body322
  %.pre893 = load i32, i32* %min.i.1, align 4, !tbaa !181
  %.pre894 = load i32, i32* %extent.i.1, align 4, !tbaa !178
  br label %for.body333

for.body333:                                      ; preds = %for.inc394, %for.body333.preheader
  %350 = phi i32 [ %424, %for.inc394 ], [ %.pre893, %for.body333.preheader ]
  %351 = phi i32 [ %425, %for.inc394 ], [ %.pre894, %for.body333.preheader ]
  %352 = phi i32 [ %426, %for.inc394 ], [ %346, %for.body333.preheader ]
  %353 = phi i32 [ %427, %for.inc394 ], [ %347, %for.body333.preheader ]
  %354 = phi i32 [ %428, %for.inc394 ], [ %.pre894, %for.body333.preheader ]
  %355 = phi i32 [ %429, %for.inc394 ], [ %.pre893, %for.body333.preheader ]
  %dim2.0850 = phi i32 [ %inc395, %for.inc394 ], [ %349, %for.body333.preheader ]
  %counter.1849 = phi i32 [ %counter.2.lcssa, %for.inc394 ], [ %counter.0857, %for.body333.preheader ]
  %cmp342839 = icmp sgt i32 %354, 0
  br i1 %cmp342839, label %for.body344.preheader, label %for.inc394

for.body344.preheader:                            ; preds = %for.body333
  %.pre = load i32, i32* %extent.i, align 4, !tbaa !178
  br label %for.body344

for.body344:                                      ; preds = %for.body344.preheader, %for.inc389
  %356 = phi i32 [ %421, %for.inc389 ], [ %350, %for.body344.preheader ]
  %357 = phi i32 [ %422, %for.inc389 ], [ %351, %for.body344.preheader ]
  %358 = phi i32 [ %423, %for.inc389 ], [ %.pre, %for.body344.preheader ]
  %dim1.0841 = phi i32 [ %inc390, %for.inc389 ], [ %355, %for.body344.preheader ]
  %counter.2840 = phi i32 [ %counter.6797, %for.inc389 ], [ %counter.1849, %for.body344.preheader ]
  %cmp353834 = icmp sgt i32 %358, 0
  br i1 %cmp353834, label %for.body355.preheader, label %for.inc389

for.body355.preheader:                            ; preds = %for.body344
  %359 = load i32, i32* %min.i, align 4, !tbaa !181
  br label %for.body355

for.body355:                                      ; preds = %for.inc384, %for.body355.preheader
  %dim0.0836 = phi i32 [ %inc385, %for.inc384 ], [ %359, %for.body355.preheader ]
  %counter.3835 = phi i32 [ %counter.4, %for.inc384 ], [ %counter.2840, %for.body355.preheader ]
  %inc356 = add nsw i32 %counter.3835, 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %343) #10
  store i32 %dim0.0836, i32* %arrayinit.begin357, align 4, !tbaa !73
  store i32 %dim1.0841, i32* %arrayinit.element358, align 4, !tbaa !73
  store i32 %dim2.0850, i32* %arrayinit.element359, align 4, !tbaa !73
  store i32 %dim3.0858, i32* %arrayinit.element360, align 4, !tbaa !73
  %360 = load i32, i32* %dimensions, align 4, !tbaa !175
  %cmp17.i = icmp sgt i32 %360, 0
  br i1 %cmp17.i, label %for.body.lr.ph.i, label %_ZNK15halide_buffer_t10address_ofEPKi.exit

for.body.lr.ph.i:                                 ; preds = %for.body355
  %361 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !176
  %wide.trip.count.i = zext i32 %360 to i64
  %stride.i621920 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 0, i32 2
  %362 = load i32, i32* %stride.i621920, align 4, !tbaa !182
  %conv.i622921 = sext i32 %362 to i64
  %min.i623922 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 0, i32 0
  %363 = load i32, i32* %min.i623922, align 4, !tbaa !181
  %sub.i923 = sub nsw i32 %dim0.0836, %363
  %conv7.i924 = sext i32 %sub.i923 to i64
  %mul.i925 = mul nsw i64 %conv7.i924, %conv.i622921
  %exitcond.not.i927 = icmp eq i32 %360, 1
  br i1 %exitcond.not.i927, label %_ZNK15halide_buffer_t10address_ofEPKi.exit, label %for.body.i.for.body.i_crit_edge.preheader, !llvm.loop !220

for.body.i.for.body.i_crit_edge.preheader:        ; preds = %for.body.lr.ph.i
  %stride.i62126 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 1, i32 2
  %364 = load i32, i32* %stride.i62126, align 4, !tbaa !182
  %conv.i62227 = sext i32 %364 to i64
  %min.i62328 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 1, i32 0
  %365 = load i32, i32* %min.i62328, align 4, !tbaa !181
  %sub.i29 = sub nsw i32 %dim1.0841, %365
  %conv7.i30 = sext i32 %sub.i29 to i64
  %mul.i31 = mul nsw i64 %conv7.i30, %conv.i62227
  %add.i62432 = add nsw i64 %mul.i31, %mul.i925
  %exitcond.not.i33 = icmp eq i32 %360, 2
  br i1 %exitcond.not.i33, label %_ZNK15halide_buffer_t10address_ofEPKi.exit, label %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph, !llvm.loop !220

for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph: ; preds = %for.body.i.for.body.i_crit_edge.preheader
  %366 = add nsw i64 %wide.trip.count.i, -2
  %min.iters.check169 = icmp ult i64 %366, 17
  br i1 %min.iters.check169, label %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader, label %vector.ph170

vector.ph170:                                     ; preds = %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph
  %n.mod.vf171 = and i64 %366, 15
  %367 = icmp eq i64 %n.mod.vf171, 0
  %368 = select i1 %367, i64 16, i64 %n.mod.vf171
  %n.vec172 = sub nsw i64 %366, %368
  %ind.end176 = add nsw i64 %n.vec172, 2
  %369 = insertelement <4 x i64> <i64 poison, i64 0, i64 0, i64 0>, i64 %add.i62432, i32 0
  br label %vector.body168

vector.body168:                                   ; preds = %vector.body168, %vector.ph170
  %index173 = phi i64 [ 0, %vector.ph170 ], [ %index.next174, %vector.body168 ]
  %vec.phi179 = phi <4 x i64> [ %369, %vector.ph170 ], [ %409, %vector.body168 ]
  %vec.phi180 = phi <4 x i64> [ zeroinitializer, %vector.ph170 ], [ %410, %vector.body168 ]
  %vec.phi181 = phi <4 x i64> [ zeroinitializer, %vector.ph170 ], [ %411, %vector.body168 ]
  %vec.phi182 = phi <4 x i64> [ zeroinitializer, %vector.ph170 ], [ %412, %vector.body168 ]
  %offset.idx178 = or i64 %index173, 2
  %370 = or i64 %index173, 6
  %371 = or i64 %index173, 10
  %372 = or i64 %index173, 14
  %373 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 %offset.idx178
  %374 = bitcast i32* %373 to <4 x i32>*
  %wide.load183 = load <4 x i32>, <4 x i32>* %374, align 4, !tbaa !73
  %375 = getelementptr inbounds i32, i32* %373, i64 4
  %376 = bitcast i32* %375 to <4 x i32>*
  %wide.load184 = load <4 x i32>, <4 x i32>* %376, align 4, !tbaa !73
  %377 = getelementptr inbounds i32, i32* %373, i64 8
  %378 = bitcast i32* %377 to <4 x i32>*
  %wide.load185 = load <4 x i32>, <4 x i32>* %378, align 4, !tbaa !73
  %379 = getelementptr inbounds i32, i32* %373, i64 12
  %380 = bitcast i32* %379 to <4 x i32>*
  %wide.load186 = load <4 x i32>, <4 x i32>* %380, align 4, !tbaa !73
  %381 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 %offset.idx178, i32 2
  %382 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 %370, i32 2
  %383 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 %371, i32 2
  %384 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 %372, i32 2
  %385 = getelementptr inbounds i32, i32* %381, i64 -2
  %386 = bitcast i32* %385 to <16 x i32>*
  %387 = getelementptr inbounds i32, i32* %382, i64 -2
  %388 = bitcast i32* %387 to <16 x i32>*
  %389 = getelementptr inbounds i32, i32* %383, i64 -2
  %390 = bitcast i32* %389 to <16 x i32>*
  %391 = getelementptr inbounds i32, i32* %384, i64 -2
  %392 = bitcast i32* %391 to <16 x i32>*
  %wide.vec187 = load <16 x i32>, <16 x i32>* %386, align 4, !tbaa !73
  %wide.vec188 = load <16 x i32>, <16 x i32>* %388, align 4, !tbaa !73
  %wide.vec189 = load <16 x i32>, <16 x i32>* %390, align 4, !tbaa !73
  %wide.vec190 = load <16 x i32>, <16 x i32>* %392, align 4, !tbaa !73
  %strided.vec191 = shufflevector <16 x i32> %wide.vec187, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec192 = shufflevector <16 x i32> %wide.vec188, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec193 = shufflevector <16 x i32> %wide.vec189, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec194 = shufflevector <16 x i32> %wide.vec190, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec195 = shufflevector <16 x i32> %wide.vec187, <16 x i32> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec196 = shufflevector <16 x i32> %wide.vec188, <16 x i32> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec197 = shufflevector <16 x i32> %wide.vec189, <16 x i32> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec198 = shufflevector <16 x i32> %wide.vec190, <16 x i32> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %393 = sext <4 x i32> %strided.vec195 to <4 x i64>
  %394 = sext <4 x i32> %strided.vec196 to <4 x i64>
  %395 = sext <4 x i32> %strided.vec197 to <4 x i64>
  %396 = sext <4 x i32> %strided.vec198 to <4 x i64>
  %397 = sub nsw <4 x i32> %wide.load183, %strided.vec191
  %398 = sub nsw <4 x i32> %wide.load184, %strided.vec192
  %399 = sub nsw <4 x i32> %wide.load185, %strided.vec193
  %400 = sub nsw <4 x i32> %wide.load186, %strided.vec194
  %401 = sext <4 x i32> %397 to <4 x i64>
  %402 = sext <4 x i32> %398 to <4 x i64>
  %403 = sext <4 x i32> %399 to <4 x i64>
  %404 = sext <4 x i32> %400 to <4 x i64>
  %405 = mul nsw <4 x i64> %401, %393
  %406 = mul nsw <4 x i64> %402, %394
  %407 = mul nsw <4 x i64> %403, %395
  %408 = mul nsw <4 x i64> %404, %396
  %409 = add <4 x i64> %405, %vec.phi179
  %410 = add <4 x i64> %406, %vec.phi180
  %411 = add <4 x i64> %407, %vec.phi181
  %412 = add <4 x i64> %408, %vec.phi182
  %index.next174 = add i64 %index173, 16
  %413 = icmp eq i64 %index.next174, %n.vec172
  br i1 %413, label %middle.block166, label %vector.body168, !llvm.loop !221

middle.block166:                                  ; preds = %vector.body168
  %bin.rdx199 = add <4 x i64> %410, %409
  %bin.rdx200 = add <4 x i64> %411, %bin.rdx199
  %bin.rdx201 = add <4 x i64> %412, %bin.rdx200
  %414 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx201)
  br label %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader

for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader: ; preds = %middle.block166, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph
  %indvars.iv.next.i35.ph = phi i64 [ 2, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph ], [ %ind.end176, %middle.block166 ]
  %add.i62434.ph = phi i64 [ %add.i62432, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph ], [ %414, %middle.block166 ]
  br label %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge

for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge: ; preds = %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge
  %indvars.iv.next.i35 = phi i64 [ %indvars.iv.next.i, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge ], [ %indvars.iv.next.i35.ph, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader ]
  %add.i62434 = phi i64 [ %add.i624, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge ], [ %add.i62434.ph, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader ]
  %arrayidx3.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 %indvars.iv.next.i35
  %.pre895.pre = load i32, i32* %arrayidx3.i.phi.trans.insert.phi.trans.insert, align 4, !tbaa !73
  %stride.i621 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 %indvars.iv.next.i35, i32 2
  %415 = load i32, i32* %stride.i621, align 4, !tbaa !182
  %conv.i622 = sext i32 %415 to i64
  %min.i623 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %361, i64 %indvars.iv.next.i35, i32 0
  %416 = load i32, i32* %min.i623, align 4, !tbaa !181
  %sub.i = sub nsw i32 %.pre895.pre, %416
  %conv7.i = sext i32 %sub.i to i64
  %mul.i = mul nsw i64 %conv7.i, %conv.i622
  %add.i624 = add nsw i64 %mul.i, %add.i62434
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.next.i35, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %_ZNK15halide_buffer_t10address_ofEPKi.exit, label %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge, !llvm.loop !222

_ZNK15halide_buffer_t10address_ofEPKi.exit:       ; preds = %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge, %for.body.i.for.body.i_crit_edge.preheader, %for.body.lr.ph.i, %for.body355
  %index.0.lcssa.i = phi i64 [ 0, %for.body355 ], [ %mul.i925, %for.body.lr.ph.i ], [ %add.i62432, %for.body.i.for.body.i_crit_edge.preheader ], [ %add.i624, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge ]
  %417 = load i8*, i8** %host.i, align 8, !tbaa !172
  %418 = load i8, i8* %bits.i, align 1, !tbaa !136
  %conv.i.i = zext i8 %418 to i64
  %add.i.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i.i, 3
  %mul9.i = mul nsw i64 %div.i.i, %index.0.lcssa.i
  %add.ptr.i = getelementptr inbounds i8, i8* %417, i64 %mul9.i
  %mul366 = mul nsw i32 %counter.3835, %div.i
  %idx.ext = sext i32 %mul366 to i64
  %add.ptr367 = getelementptr inbounds [4096 x i8], [4096 x i8]* %temp, i64 0, i64 %idx.ext
  %call369 = call i8* @memcpy(i8* nonnull %add.ptr367, i8* %add.ptr.i, i64 %conv368) #15
  %cmp370 = icmp eq i32 %inc356, %div
  br i1 %cmp370, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619, label %for.inc384

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619: ; preds = %_ZNK15halide_buffer_t10address_ofEPKi.exit
  %call.i615 = call i64 @fwrite(i8* nonnull %340, i64 %conv374, i64 1, i8* nonnull %call.i598) #15
  %cmp.i616.not = icmp eq i64 %call.i615, 0
  br i1 %cmp.i616.not, label %cleanup425.loopexit, label %for.inc384

for.inc384:                                       ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619, %_ZNK15halide_buffer_t10address_ofEPKi.exit
  %counter.4 = phi i32 [ 0, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619 ], [ %inc356, %_ZNK15halide_buffer_t10address_ofEPKi.exit ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %343) #10
  %inc385 = add nsw i32 %dim0.0836, 1
  %419 = load i32, i32* %extent.i, align 4, !tbaa !178
  %420 = load i32, i32* %min.i, align 4, !tbaa !181
  %add352 = add nsw i32 %420, %419
  %cmp353 = icmp slt i32 %inc385, %add352
  br i1 %cmp353, label %for.body355, label %for.inc389.loopexit, !llvm.loop !223

for.inc389.loopexit:                              ; preds = %for.inc384
  %.pre15 = load i32, i32* %extent.i.1, align 4, !tbaa !178
  %.pre16 = load i32, i32* %min.i.1, align 4, !tbaa !181
  br label %for.inc389

for.inc389:                                       ; preds = %for.inc389.loopexit, %for.body344
  %421 = phi i32 [ %356, %for.body344 ], [ %.pre16, %for.inc389.loopexit ]
  %422 = phi i32 [ %357, %for.body344 ], [ %.pre15, %for.inc389.loopexit ]
  %423 = phi i32 [ %358, %for.body344 ], [ %419, %for.inc389.loopexit ]
  %counter.6797 = phi i32 [ %counter.2840, %for.body344 ], [ %counter.4, %for.inc389.loopexit ]
  %inc390 = add nsw i32 %dim1.0841, 1
  %add341 = add nsw i32 %421, %422
  %cmp342 = icmp slt i32 %inc390, %add341
  br i1 %cmp342, label %for.body344, label %for.inc394.loopexit, !llvm.loop !224

for.inc394.loopexit:                              ; preds = %for.inc389
  %.pre896 = load i32, i32* %extent.i.2, align 4, !tbaa !178
  %.pre897 = load i32, i32* %min.i.2, align 4, !tbaa !181
  br label %for.inc394

for.inc394:                                       ; preds = %for.inc394.loopexit, %for.body333
  %424 = phi i32 [ %350, %for.body333 ], [ %421, %for.inc394.loopexit ]
  %425 = phi i32 [ %351, %for.body333 ], [ %422, %for.inc394.loopexit ]
  %426 = phi i32 [ %352, %for.body333 ], [ %.pre897, %for.inc394.loopexit ]
  %427 = phi i32 [ %353, %for.body333 ], [ %.pre896, %for.inc394.loopexit ]
  %428 = phi i32 [ %354, %for.body333 ], [ %422, %for.inc394.loopexit ]
  %429 = phi i32 [ %355, %for.body333 ], [ %421, %for.inc394.loopexit ]
  %counter.2.lcssa = phi i32 [ %counter.1849, %for.body333 ], [ %counter.6797, %for.inc394.loopexit ]
  %inc395 = add nsw i32 %dim2.0850, 1
  %add330 = add nsw i32 %427, %426
  %cmp331 = icmp slt i32 %inc395, %add330
  br i1 %cmp331, label %for.body333, label %for.inc399.loopexit, !llvm.loop !225

for.inc399.loopexit:                              ; preds = %for.inc394
  %.pre898 = load i32, i32* %extent.i.3, align 4, !tbaa !178
  %.pre899 = load i32, i32* %min.i.3, align 4, !tbaa !181
  br label %for.inc399

for.inc399:                                       ; preds = %for.inc399.loopexit, %for.body322
  %430 = phi i32 [ %344, %for.body322 ], [ %.pre899, %for.inc399.loopexit ]
  %431 = phi i32 [ %345, %for.body322 ], [ %.pre898, %for.inc399.loopexit ]
  %432 = phi i32 [ %346, %for.body322 ], [ %426, %for.inc399.loopexit ]
  %433 = phi i32 [ %347, %for.body322 ], [ %427, %for.inc399.loopexit ]
  %434 = phi i32 [ %348, %for.body322 ], [ %427, %for.inc399.loopexit ]
  %435 = phi i32 [ %349, %for.body322 ], [ %426, %for.inc399.loopexit ]
  %counter.1.lcssa = phi i32 [ %counter.0857, %for.body322 ], [ %counter.2.lcssa, %for.inc399.loopexit ]
  %inc400 = add nsw i32 %dim3.0858, 1
  %add319 = add nsw i32 %431, %430
  %cmp320 = icmp slt i32 %inc400, %add319
  br i1 %cmp320, label %for.body322, label %for.end403, !llvm.loop !226

for.end403:                                       ; preds = %for.inc399
  %cmp404 = icmp sgt i32 %counter.1.lcssa, 0
  br i1 %cmp404, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612, label %if.end412

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612: ; preds = %for.end403
  %mul407 = mul nsw i32 %counter.1.lcssa, %div.i
  %conv408 = sext i32 %mul407 to i64
  %call.i608 = call i64 @fwrite(i8* nonnull %340, i64 %conv408, i64 1, i8* nonnull %call.i598) #15
  %cmp.i609.not = icmp eq i64 %call.i608, 0
  br i1 %cmp.i609.not, label %cleanup425, label %if.end412

if.end412:                                        ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612, %for.end403, %if.end311
  %436 = bitcast i64* %zero to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %436) #10
  store i64 0, i64* %zero, align 8, !tbaa !110
  %tobool413.not = icmp eq i32 %final_padding_bytes.0, 0
  br i1 %tobool413.not, label %if.end423, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit: ; preds = %if.end412
  %conv415 = zext i32 %final_padding_bytes.0 to i64
  %call.i604 = call i64 @fwrite(i8* nonnull %436, i64 %conv415, i64 1, i8* nonnull %call.i598) #15
  %cmp.i605.not = icmp eq i64 %call.i604, 0
  br i1 %cmp.i605.not, label %cleanup424, label %if.end423

if.end423:                                        ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit, %if.end412
  br label %cleanup424

cleanup424:                                       ; preds = %if.end423, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit
  %retval.21 = phi i32 [ 0, %if.end423 ], [ -16, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %436) #10
  br label %cleanup425

cleanup425.loopexit:                              ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %343) #10
  br label %cleanup425

cleanup425:                                       ; preds = %cleanup425.loopexit, %cleanup424, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612
  %retval.22 = phi i32 [ %retval.21, %cleanup424 ], [ -14, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612 ], [ -13, %cleanup425.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %340) #10
  br label %cleanup433

cleanup433:                                       ; preds = %cleanup425, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631, %cleanup278, %cleanup278.thread, %cleanup154
  %retval.23 = phi i32 [ %retval.22, %cleanup425 ], [ %retval.4, %cleanup154 ], [ %retval.8, %cleanup278 ], [ -12, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631 ], [ -6, %cleanup278.thread ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #10
  %call.i = call i32 @fclose(i8* nonnull %call.i598) #15
  br label %return

return:                                           ; preds = %cleanup433, %if.end6, %if.end2, %if.then1, %if.then
  %retval.26 = phi i32 [ -1, %if.then ], [ -1, %if.then1 ], [ %call3, %if.end2 ], [ %retval.23, %cleanup433 ], [ -2, %if.end6 ]
  ret i32 %retval.26

for.body.1:                                       ; preds = %for.body.lr.ph
  %arrayidx.1 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %7, i64 1
  %arrayidx14.1 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1
  %437 = bitcast %struct.halide_dimension_t* %arrayidx14.1 to i8*
  %438 = bitcast %struct.halide_dimension_t* %arrayidx.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %437, i8* nonnull align 4 dereferenceable(16) %438, i64 16, i1 false), !tbaa.struct !177
  %extent.1 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 1
  %439 = load i32, i32* %extent.1, align 4, !tbaa !178
  %conv903.1 = zext i32 %439 to i64
  %mul.1 = mul nuw i64 %conv903, %conv903.1
  %exitcond.not17.1 = icmp eq i64 %11, 2
  br i1 %exitcond.not17.1, label %for.cond19.preheader, label %for.body.2, !llvm.loop !180

for.body.2:                                       ; preds = %for.body.1
  %arrayidx.2 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %7, i64 2
  %arrayidx14.2 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2
  %440 = bitcast %struct.halide_dimension_t* %arrayidx14.2 to i8*
  %441 = bitcast %struct.halide_dimension_t* %arrayidx.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %440, i8* nonnull align 4 dereferenceable(16) %441, i64 16, i1 false), !tbaa.struct !177
  %extent.2 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 1
  %442 = load i32, i32* %extent.2, align 4, !tbaa !178
  %conv903.2 = zext i32 %442 to i64
  %mul.2 = mul i64 %mul.1, %conv903.2
  %exitcond.not17.2 = icmp eq i64 %11, 3
  br i1 %exitcond.not17.2, label %for.cond19.preheader, label %for.body.3, !llvm.loop !180

for.body.3:                                       ; preds = %for.body.2
  %arrayidx.3 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %7, i64 3
  %arrayidx14.3 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3
  %443 = bitcast %struct.halide_dimension_t* %arrayidx14.3 to i8*
  %444 = bitcast %struct.halide_dimension_t* %arrayidx.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %443, i8* nonnull align 4 dereferenceable(16) %444, i64 16, i1 false), !tbaa.struct !177
  %extent.3 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 1
  %445 = load i32, i32* %extent.3, align 4, !tbaa !178
  %conv903.3 = zext i32 %445 to i64
  %mul.3 = mul i64 %mul.2, %conv903.3
  br label %for.cond19.preheader
}

declare i64 @fwrite(i8*, i64, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_cache_cleanup() #0 {
entry:
  tail call void @halide_memoization_cache_cleanup() #16
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_memoization_cache_cleanup() local_unnamed_addr #0 {
entry:
  br label %for.body

for.cond.cleanup:                                 ; preds = %while.end
  store i64 0, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  ret void

for.body:                                         ; preds = %while.end, %entry
  %__begin1.018 = phi %"struct.Halide::Runtime::Internal::CacheEntry"** [ getelementptr inbounds ([256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 0), %entry ], [ %incdec.ptr, %while.end ]
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.018, align 8, !tbaa !10
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.018, align 8, !tbaa !10
  %cmp2.not16 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null
  br i1 %cmp2.not16, label %while.end, label %while.body

while.body:                                       ; preds = %for.body, %while.body
  %entry1.017 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %1, %while.body ], [ %0, %for.body ]
  %next3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.017, i64 0, i32 0
  %1 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next3, align 8, !tbaa !227
  tail call void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %entry1.017) #16
  %2 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.017 to i8*
  tail call void @halide_free(i8* null, i8* nonnull %2) #15
  %cmp2.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %1, null
  br i1 %cmp2.not, label %while.end, label %while.body, !llvm.loop !229

while.end:                                        ; preds = %while.body, %for.body
  %incdec.ptr = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.018, i64 1
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"** %incdec.ptr, getelementptr inbounds ([256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 1, i64 0)
  br i1 %cmp.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %this) local_unnamed_addr #0 align 2 {
entry:
  %tuple_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 8
  %0 = load i32, i32* %tuple_count, align 8, !tbaa !230
  %cmp11.not = icmp eq i32 %0, 0
  br i1 %cmp11.not, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %buf = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 11
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %metadata_storage = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 3
  %1 = load i8*, i8** %metadata_storage, align 8, !tbaa !231
  tail call void @halide_free(i8* null, i8* %1) #15
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %2 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !232
  %arrayidx = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %2, i64 %indvars.iv
  %call = tail call i32 @halide_device_free(i8* null, %struct.halide_buffer_t* %arrayidx) #15
  %3 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !232
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %3, i64 %indvars.iv, i32 2
  %4 = load i8*, i8** %host, align 8, !tbaa !172
  %call6 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %4) #16
  %5 = bitcast %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call6 to i8*
  tail call void @halide_free(i8* null, i8* %5) #15
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %6 = load i32, i32* %tuple_count, align 8, !tbaa !230
  %7 = zext i32 %6 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %7
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !233
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %host) local_unnamed_addr #2 {
entry:
  %add.ptr = getelementptr inbounds i8, i8* %host, i64 -64
  %0 = bitcast i8* %add.ptr to %"struct.Halide::Runtime::Internal::CacheBlockHeader"*
  ret %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %0
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal18copy_memory_helperERKNS1_11device_copyEixx(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i32 %d, i64 %src_off, i64 %dst_off) local_unnamed_addr #0 {
entry:
  %cmp41 = icmp sgt i32 %d, -1
  br i1 %cmp41, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %entry, %while.body
  %d.addr.042 = phi i32 [ %dec, %while.body ], [ %d, %entry ]
  %idxprom36 = zext i32 %d.addr.042 to i64
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 3, i64 %idxprom36
  %0 = load i64, i64* %arrayidx, align 8, !tbaa !110
  %cmp1 = icmp eq i64 %0, 1
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %dec = add nsw i32 %d.addr.042, -1
  %cmp = icmp sgt i32 %d.addr.042, 0
  br i1 %cmp, label %land.rhs, label %if.then, !llvm.loop !234

while.end:                                        ; preds = %land.rhs, %entry
  %d.addr.0.lcssa = phi i32 [ %d, %entry ], [ %d.addr.042, %land.rhs ]
  %cmp2 = icmp eq i32 %d.addr.0.lcssa, -1
  br i1 %cmp2, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %while.end
  %idxprom5 = sext i32 %d.addr.0.lcssa to i64
  %arrayidx6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 3, i64 %idxprom5
  %1 = load i64, i64* %arrayidx6, align 8, !tbaa !110
  %cmp737.not = icmp eq i64 %1, 0
  br i1 %cmp737.not, label %if.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %sub = add nsw i32 %d.addr.0.lcssa, -1
  %arrayidx9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 4, i64 %idxprom5
  %arrayidx12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 5, i64 %idxprom5
  br label %for.body

if.then:                                          ; preds = %while.body, %while.end
  %src = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 0
  %2 = load i64, i64* %src, align 8, !tbaa !235
  %add = add i64 %2, %src_off
  %3 = inttoptr i64 %add to i8*
  %dst = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 1
  %4 = load i64, i64* %dst, align 8, !tbaa !237
  %add3 = add i64 %4, %dst_off
  %5 = inttoptr i64 %add3 to i8*
  %chunk_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 6
  %6 = load i64, i64* %chunk_size, align 8, !tbaa !238
  %call = tail call i8* @memcpy(i8* %5, i8* %3, i64 %6) #15
  br label %if.end

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %i.040 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %src_off.addr.039 = phi i64 [ %src_off, %for.body.lr.ph ], [ %add10, %for.body ]
  %dst_off.addr.038 = phi i64 [ %dst_off, %for.body.lr.ph ], [ %add13, %for.body ]
  tail call void @_ZN6Halide7Runtime8Internal18copy_memory_helperERKNS1_11device_copyEixx(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i32 %sub, i64 %src_off.addr.039, i64 %dst_off.addr.038) #16
  %7 = load i64, i64* %arrayidx9, align 8, !tbaa !110
  %add10 = add i64 %7, %src_off.addr.039
  %8 = load i64, i64* %arrayidx12, align 8, !tbaa !110
  %add13 = add i64 %8, %dst_off.addr.038
  %inc = add nuw i64 %i.040, 1
  %9 = load i64, i64* %arrayidx6, align 8, !tbaa !110
  %cmp7 = icmp ult i64 %inc, %9
  br i1 %cmp7, label %for.body, label %if.end, !llvm.loop !239

if.end:                                           ; preds = %for.body, %if.then, %for.cond.preheader
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal11copy_memoryERKNS1_11device_copyEPv(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i8* %user_context) local_unnamed_addr #0 {
entry:
  %src = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 0
  %0 = load i64, i64* %src, align 8, !tbaa !235
  %dst = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 1
  %1 = load i64, i64* %dst, align 8, !tbaa !237
  %cmp.not = icmp eq i64 %0, %1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %src_begin = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 2
  %2 = load i64, i64* %src_begin, align 8, !tbaa !240
  tail call void @_ZN6Halide7Runtime8Internal18copy_memory_helperERKNS1_11device_copyEixx(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i32 15, i64 %2, i64 0) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal16make_buffer_copyEPK15halide_buffer_tbS4_b(%"struct.Halide::Runtime::Internal::device_copy"* noalias sret(%"struct.Halide::Runtime::Internal::device_copy") align 8 %agg.result, %struct.halide_buffer_t* %src, i1 zeroext %src_host, %struct.halide_buffer_t* %dst, i1 zeroext %dst_host) local_unnamed_addr #0 {
entry:
  %c = alloca %"struct.Halide::Runtime::Internal::device_copy", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %c to i8*
  call void @llvm.lifetime.start.p0i8(i64 416, i8* nonnull %0) #10
  br i1 %src_host, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 2
  %1 = load i8*, i8** %host, align 8, !tbaa !172
  %2 = ptrtoint i8* %1 to i64
  br label %cond.end

cond.false:                                       ; preds = %entry
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %3 = load i64, i64* %device, align 8, !tbaa !174
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ]
  %src2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 0
  store i64 %cond, i64* %src2, align 8, !tbaa !235
  br i1 %dst_host, label %cond.true4, label %cond.false6

cond.true4:                                       ; preds = %cond.end
  %host5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 2
  %4 = load i8*, i8** %host5, align 8, !tbaa !172
  %5 = ptrtoint i8* %4 to i64
  br label %cond.end8

cond.false6:                                      ; preds = %cond.end
  %device7 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  %6 = load i64, i64* %device7, align 8, !tbaa !174
  br label %cond.end8

cond.end8:                                        ; preds = %cond.false6, %cond.true4
  %cond9 = phi i64 [ %5, %cond.true4 ], [ %6, %cond.false6 ]
  %dst10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 1
  store i64 %cond9, i64* %dst10, align 8, !tbaa !237
  %bits.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 4, i32 1
  %7 = load i8, i8* %bits.i, align 1, !tbaa !136
  %conv.i = zext i8 %7 to i32
  %add.i = add nuw nsw i32 %conv.i, 7
  %div.i = lshr i32 %add.i, 3
  %conv = zext i32 %div.i to i64
  %chunk_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 6
  store i64 %conv, i64* %chunk_size, align 8, !tbaa !238
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 0
  %arrayidx12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 0
  %arrayidx14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 0
  %arrayidx.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 1
  %arrayidx12.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 1
  %arrayidx14.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 1
  %8 = bitcast i64* %arrayidx to <4 x i64>*
  store <4 x i64> <i64 1, i64 1, i64 1, i64 1>, <4 x i64>* %8, align 8, !tbaa !110
  %9 = bitcast i64* %arrayidx12 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %9, align 8, !tbaa !110
  %10 = bitcast i64* %arrayidx14 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %10, align 8, !tbaa !110
  %arrayidx.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 4
  %arrayidx12.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 4
  %arrayidx14.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 4
  %arrayidx.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 5
  %arrayidx12.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 5
  %arrayidx14.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 5
  %11 = bitcast i64* %arrayidx.4 to <4 x i64>*
  store <4 x i64> <i64 1, i64 1, i64 1, i64 1>, <4 x i64>* %11, align 8, !tbaa !110
  %12 = bitcast i64* %arrayidx12.4 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %12, align 8, !tbaa !110
  %13 = bitcast i64* %arrayidx14.4 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %13, align 8, !tbaa !110
  %arrayidx.8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 8
  %arrayidx12.8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 8
  %arrayidx14.8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 8
  %arrayidx.9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 9
  %arrayidx12.9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 9
  %arrayidx14.9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 9
  %14 = bitcast i64* %arrayidx.8 to <4 x i64>*
  store <4 x i64> <i64 1, i64 1, i64 1, i64 1>, <4 x i64>* %14, align 8, !tbaa !110
  %15 = bitcast i64* %arrayidx12.8 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %15, align 8, !tbaa !110
  %16 = bitcast i64* %arrayidx14.8 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %16, align 8, !tbaa !110
  %arrayidx.12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 12
  %arrayidx12.12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 12
  %arrayidx14.12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 12
  %arrayidx.13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 13
  %arrayidx12.13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 13
  %arrayidx14.13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 13
  %arrayidx.14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 14
  %arrayidx12.14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 14
  %arrayidx14.14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 14
  %arrayidx.15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 15
  %17 = bitcast i64* %arrayidx.12 to <4 x i64>*
  store <4 x i64> <i64 1, i64 1, i64 1, i64 1>, <4 x i64>* %17, align 8, !tbaa !110
  %arrayidx12.15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 15
  %18 = bitcast i64* %arrayidx12.12 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %18, align 8, !tbaa !110
  %arrayidx14.15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 15
  %19 = bitcast i64* %arrayidx14.12 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %19, align 8, !tbaa !110
  %src_begin = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 2
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 5
  %20 = load i32, i32* %dimensions, align 4, !tbaa !175
  %cmp17272 = icmp sgt i32 %20, 0
  br i1 %cmp17272, label %for.body19.lr.ph, label %for.cond.cleanup18

for.body19.lr.ph:                                 ; preds = %cond.end8
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 6
  %21 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !176
  %dim23 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 6
  %22 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim23, align 8, !tbaa !176
  %wide.trip.count = zext i32 %20 to i64
  %min.iters.check = icmp ult i32 %20, 17
  br i1 %min.iters.check, label %for.body19.preheader, label %vector.ph

for.body19.preheader:                             ; preds = %middle.block, %for.body19.lr.ph
  %indvars.iv284.ph = phi i64 [ 0, %for.body19.lr.ph ], [ %n.vec, %middle.block ]
  %.ph = phi i64 [ 0, %for.body19.lr.ph ], [ %73, %middle.block ]
  br label %for.body19

vector.ph:                                        ; preds = %for.body19.lr.ph
  %n.mod.vf = and i64 %wide.trip.count, 15
  %23 = icmp eq i64 %n.mod.vf, 0
  %24 = select i1 %23, i64 16, i64 %n.mod.vf
  %n.vec = sub nsw i64 %wide.trip.count, %24
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %68, %vector.body ]
  %vec.phi2 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %69, %vector.body ]
  %vec.phi3 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %70, %vector.body ]
  %vec.phi4 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %71, %vector.body ]
  %25 = or i64 %index, 4
  %26 = or i64 %index, 8
  %27 = or i64 %index, 12
  %28 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %21, i64 %index, i32 2
  %29 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %21, i64 %25, i32 2
  %30 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %21, i64 %26, i32 2
  %31 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %21, i64 %27, i32 2
  %32 = getelementptr inbounds i32, i32* %28, i64 -2
  %33 = bitcast i32* %32 to <16 x i32>*
  %34 = getelementptr inbounds i32, i32* %29, i64 -2
  %35 = bitcast i32* %34 to <16 x i32>*
  %36 = getelementptr inbounds i32, i32* %30, i64 -2
  %37 = bitcast i32* %36 to <16 x i32>*
  %38 = getelementptr inbounds i32, i32* %31, i64 -2
  %39 = bitcast i32* %38 to <16 x i32>*
  %wide.vec = load <16 x i32>, <16 x i32>* %33, align 4, !tbaa !73
  %wide.vec5 = load <16 x i32>, <16 x i32>* %35, align 4, !tbaa !73
  %wide.vec6 = load <16 x i32>, <16 x i32>* %37, align 4, !tbaa !73
  %wide.vec7 = load <16 x i32>, <16 x i32>* %39, align 4, !tbaa !73
  %strided.vec11 = shufflevector <16 x i32> %wide.vec, <16 x i32> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec12 = shufflevector <16 x i32> %wide.vec5, <16 x i32> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec13 = shufflevector <16 x i32> %wide.vec6, <16 x i32> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %strided.vec14 = shufflevector <16 x i32> %wide.vec7, <16 x i32> poison, <4 x i32> <i32 2, i32 6, i32 10, i32 14>
  %40 = sext <4 x i32> %strided.vec11 to <4 x i64>
  %41 = sext <4 x i32> %strided.vec12 to <4 x i64>
  %42 = sext <4 x i32> %strided.vec13 to <4 x i64>
  %43 = sext <4 x i32> %strided.vec14 to <4 x i64>
  %44 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %index, i32 0
  %45 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %25, i32 0
  %46 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %26, i32 0
  %47 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %27, i32 0
  %48 = bitcast i32* %44 to <16 x i32>*
  %49 = bitcast i32* %45 to <16 x i32>*
  %50 = bitcast i32* %46 to <16 x i32>*
  %51 = bitcast i32* %47 to <16 x i32>*
  %wide.vec15 = load <16 x i32>, <16 x i32>* %48, align 4, !tbaa !181
  %wide.vec16 = load <16 x i32>, <16 x i32>* %49, align 4, !tbaa !181
  %wide.vec17 = load <16 x i32>, <16 x i32>* %50, align 4, !tbaa !181
  %wide.vec18 = load <16 x i32>, <16 x i32>* %51, align 4, !tbaa !181
  %52 = sub nsw <16 x i32> %wide.vec15, %wide.vec
  %53 = shufflevector <16 x i32> %52, <16 x i32> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %54 = sub nsw <16 x i32> %wide.vec16, %wide.vec5
  %55 = shufflevector <16 x i32> %54, <16 x i32> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %56 = sub nsw <16 x i32> %wide.vec17, %wide.vec6
  %57 = shufflevector <16 x i32> %56, <16 x i32> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %58 = sub nsw <16 x i32> %wide.vec18, %wide.vec7
  %59 = shufflevector <16 x i32> %58, <16 x i32> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %60 = sext <4 x i32> %53 to <4 x i64>
  %61 = sext <4 x i32> %55 to <4 x i64>
  %62 = sext <4 x i32> %57 to <4 x i64>
  %63 = sext <4 x i32> %59 to <4 x i64>
  %64 = mul nsw <4 x i64> %60, %40
  %65 = mul nsw <4 x i64> %61, %41
  %66 = mul nsw <4 x i64> %62, %42
  %67 = mul nsw <4 x i64> %63, %43
  %68 = add <4 x i64> %64, %vec.phi
  %69 = add <4 x i64> %65, %vec.phi2
  %70 = add <4 x i64> %66, %vec.phi3
  %71 = add <4 x i64> %67, %vec.phi4
  %index.next = add i64 %index, 16
  %72 = icmp eq i64 %index.next, %n.vec
  br i1 %72, label %middle.block, label %vector.body, !llvm.loop !241

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add <4 x i64> %69, %68
  %bin.rdx23 = add <4 x i64> %70, %bin.rdx
  %bin.rdx24 = add <4 x i64> %71, %bin.rdx23
  %73 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx24)
  br label %for.body19.preheader

for.cond.cleanup18:                               ; preds = %for.body19, %cond.end8
  %74 = phi i64 [ 0, %cond.end8 ], [ %add, %for.body19 ]
  %mul37 = mul i64 %74, %conv
  store i64 %mul37, i64* %src_begin, align 8, !tbaa !240
  %dimensions39 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 5
  %75 = load i32, i32* %dimensions39, align 4, !tbaa !175
  %cmp40.not = icmp eq i32 %20, %75
  br i1 %cmp40.not, label %lor.lhs.false, label %if.then

for.body19:                                       ; preds = %for.body19.preheader, %for.body19
  %indvars.iv284 = phi i64 [ %indvars.iv.next285, %for.body19 ], [ %indvars.iv284.ph, %for.body19.preheader ]
  %76 = phi i64 [ %add, %for.body19 ], [ %.ph, %for.body19.preheader ]
  %stride = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %21, i64 %indvars.iv284, i32 2
  %77 = load i32, i32* %stride, align 4, !tbaa !182
  %conv22 = sext i32 %77 to i64
  %min = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv284, i32 0
  %78 = load i32, i32* %min, align 4, !tbaa !181
  %min29 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %21, i64 %indvars.iv284, i32 0
  %79 = load i32, i32* %min29, align 4, !tbaa !181
  %sub = sub nsw i32 %78, %79
  %conv30 = sext i32 %sub to i64
  %mul = mul nsw i64 %conv30, %conv22
  %add = add i64 %mul, %76
  %indvars.iv.next285 = add nuw nsw i64 %indvars.iv284, 1
  %exitcond286.not = icmp eq i64 %indvars.iv.next285, %wide.trip.count
  br i1 %exitcond286.not, label %for.cond.cleanup18, label %for.body19, !llvm.loop !242

lor.lhs.false:                                    ; preds = %for.cond.cleanup18
  %bits.i253 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 4, i32 1
  %80 = load i8, i8* %bits.i253, align 1, !tbaa !136
  %conv.i254 = zext i8 %80 to i32
  %add.i255 = add nuw nsw i32 %conv.i254, 7
  %div.i256 = lshr i32 %add.i255, 3
  %cmp45.not = icmp ne i32 %div.i, %div.i256
  %cmp48 = icmp sgt i32 %20, 16
  %or.cond261 = or i1 %cmp48, %cmp45.not
  br i1 %or.cond261, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.cond.cleanup18
  %81 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %agg.result to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(416) %81, i8 0, i64 416, i1 false)
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %cmp50 = icmp eq i32 %div.i, 0
  br i1 %cmp50, label %if.then51, label %for.cond54.preheader

for.cond54.preheader:                             ; preds = %if.end
  br i1 %cmp17272, label %for.body58.lr.ph, label %while.end

for.body58.lr.ph:                                 ; preds = %for.cond54.preheader
  %dim60 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 6
  %82 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim60, align 8, !tbaa !176
  %dim70 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 6
  %83 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim70, align 8, !tbaa !176
  %wide.trip.count282 = zext i32 %20 to i64
  br label %for.body58

if.then51:                                        ; preds = %if.end
  %84 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %agg.result to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(416) %84, i8 0, i64 416, i1 false)
  br label %cleanup

while.cond.preheader:                             ; preds = %for.cond.cleanup94
  %.pre = load i64, i64* %chunk_size, align 8, !tbaa !238
  %.pre290 = load i64, i64* %arrayidx12, align 8, !tbaa !110
  %cmp139263 = icmp eq i64 %.pre, %.pre290
  br i1 %cmp139263, label %land.rhs.lr.ph, label %while.end

land.rhs.lr.ph:                                   ; preds = %while.cond.preheader
  %.pre291 = load i64, i64* %arrayidx14, align 8, !tbaa !110
  %85 = bitcast i64* %arrayidx.1 to <4 x i64>*
  %86 = bitcast i64* %arrayidx to <4 x i64>*
  %87 = bitcast i64* %arrayidx12.1 to <4 x i64>*
  %88 = bitcast i64* %arrayidx12 to <4 x i64>*
  %89 = bitcast i64* %arrayidx14.1 to <4 x i64>*
  %90 = bitcast i64* %arrayidx14 to <4 x i64>*
  %91 = bitcast i64* %arrayidx.5 to <4 x i64>*
  %92 = bitcast i64* %arrayidx.4 to <4 x i64>*
  %93 = bitcast i64* %arrayidx12.5 to <4 x i64>*
  %94 = bitcast i64* %arrayidx12.4 to <4 x i64>*
  %95 = bitcast i64* %arrayidx14.5 to <4 x i64>*
  %96 = bitcast i64* %arrayidx14.4 to <4 x i64>*
  %97 = bitcast i64* %arrayidx.9 to <4 x i64>*
  %98 = bitcast i64* %arrayidx.8 to <4 x i64>*
  %99 = bitcast i64* %arrayidx12.9 to <4 x i64>*
  %100 = bitcast i64* %arrayidx12.8 to <4 x i64>*
  %101 = bitcast i64* %arrayidx14.9 to <4 x i64>*
  %102 = bitcast i64* %arrayidx14.8 to <4 x i64>*
  %103 = bitcast i64* %arrayidx.13 to <2 x i64>*
  %104 = bitcast i64* %arrayidx.12 to <2 x i64>*
  %105 = bitcast i64* %arrayidx12.13 to <2 x i64>*
  %106 = bitcast i64* %arrayidx12.12 to <2 x i64>*
  %107 = bitcast i64* %arrayidx14.13 to <2 x i64>*
  %108 = bitcast i64* %arrayidx14.12 to <2 x i64>*
  br label %land.rhs

for.body58:                                       ; preds = %for.cond.cleanup94, %for.body58.lr.ph
  %indvars.iv278 = phi i64 [ 0, %for.body58.lr.ph ], [ %indvars.iv.next279, %for.cond.cleanup94 ]
  %stride63 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %82, i64 %indvars.iv278, i32 2
  %109 = load i32, i32* %stride63, align 4, !tbaa !182
  %conv64 = sext i32 %109 to i64
  %mul68 = mul nsw i64 %conv64, %conv
  %stride73 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %83, i64 %indvars.iv278, i32 2
  %110 = load i32, i32* %stride73, align 4, !tbaa !182
  %conv74 = sext i32 %110 to i64
  %mul78 = mul nsw i64 %conv74, %conv
  %cmp80264.not = icmp eq i64 %indvars.iv278, 0
  br i1 %cmp80264.not, label %for.end91, label %for.body81.lr.ph

for.body81.lr.ph:                                 ; preds = %for.body58
  %cmp86.not = icmp eq i64 %mul68, 0
  br i1 %cmp86.not, label %for.body81.preheader, label %for.body81.us

for.body81.preheader:                             ; preds = %for.body81.lr.ph
  %111 = trunc i64 %indvars.iv278 to i32
  br label %for.end91

for.body81.us:                                    ; preds = %for.body81.lr.ph, %for.inc89.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc89.us ], [ 0, %for.body81.lr.ph ]
  %arrayidx84.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv
  %112 = load i64, i64* %arrayidx84.us, align 8, !tbaa !110
  %cmp85.us = icmp ult i64 %mul68, %112
  br i1 %cmp85.us, label %for.end91.loopexit, label %for.inc89.us

for.inc89.us:                                     ; preds = %for.body81.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %indvars.iv278
  br i1 %exitcond.not, label %for.end91.loopexit, label %for.body81.us, !llvm.loop !243

for.end91.loopexit:                               ; preds = %for.inc89.us, %for.body81.us
  %insert.0.lcssa.ph.in = phi i64 [ %indvars.iv278, %for.inc89.us ], [ %indvars.iv, %for.body81.us ]
  %insert.0.lcssa.ph = trunc i64 %insert.0.lcssa.ph.in to i32
  br label %for.end91

for.end91:                                        ; preds = %for.end91.loopexit, %for.body81.preheader, %for.body58
  %insert.0.lcssa = phi i32 [ 0, %for.body58 ], [ %insert.0.lcssa.ph, %for.end91.loopexit ], [ %111, %for.body81.preheader ]
  %113 = zext i32 %insert.0.lcssa to i64
  %cmp93267 = icmp ugt i64 %indvars.iv278, %113
  br i1 %cmp93267, label %for.body95.preheader, label %for.cond.cleanup94

for.body95.preheader:                             ; preds = %for.end91
  %114 = sext i32 %insert.0.lcssa to i64
  %115 = sub i64 %indvars.iv278, %114
  %116 = xor i64 %114, -1
  %117 = add i64 %indvars.iv278, %116
  %xtraiter = and i64 %115, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body95.prol.loopexit, label %for.body95.prol

for.body95.prol:                                  ; preds = %for.body95.preheader, %for.body95.prol
  %indvars.iv280.prol = phi i64 [ %indvars.iv.next281.prol, %for.body95.prol ], [ %indvars.iv278, %for.body95.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body95.prol ], [ %xtraiter, %for.body95.preheader ]
  %indvars.iv.next281.prol = add nsw i64 %indvars.iv280.prol, -1
  %arrayidx99.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281.prol
  %118 = load i64, i64* %arrayidx99.prol, align 8, !tbaa !110
  %arrayidx102.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv280.prol
  store i64 %118, i64* %arrayidx102.prol, align 8, !tbaa !110
  %arrayidx106.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281.prol
  %119 = load i64, i64* %arrayidx106.prol, align 8, !tbaa !110
  %arrayidx109.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv280.prol
  store i64 %119, i64* %arrayidx109.prol, align 8, !tbaa !110
  %arrayidx113.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281.prol
  %120 = load i64, i64* %arrayidx113.prol, align 8, !tbaa !110
  %arrayidx116.prol = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv280.prol
  store i64 %120, i64* %arrayidx116.prol, align 8, !tbaa !110
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp.not, label %for.body95.prol.loopexit, label %for.body95.prol, !llvm.loop !244

for.body95.prol.loopexit:                         ; preds = %for.body95.prol, %for.body95.preheader
  %indvars.iv280.unr = phi i64 [ %indvars.iv278, %for.body95.preheader ], [ %indvars.iv.next281.prol, %for.body95.prol ]
  %121 = icmp ult i64 %117, 3
  br i1 %121, label %for.cond.cleanup94, label %for.body95

for.cond.cleanup94:                               ; preds = %for.body95.prol.loopexit, %for.body95, %for.end91
  %extent122 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %82, i64 %indvars.iv278, i32 1
  %122 = load i32, i32* %extent122, align 4, !tbaa !178
  %conv123 = sext i32 %122 to i64
  %arrayidx126 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %113
  store i64 %conv123, i64* %arrayidx126, align 8, !tbaa !110
  %arrayidx129 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %113
  store i64 %mul68, i64* %arrayidx129, align 8, !tbaa !110
  %arrayidx132 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %113
  store i64 %mul78, i64* %arrayidx132, align 8, !tbaa !110
  %indvars.iv.next279 = add nuw nsw i64 %indvars.iv278, 1
  %exitcond283.not = icmp eq i64 %indvars.iv.next279, %wide.trip.count282
  br i1 %exitcond283.not, label %while.cond.preheader, label %for.body58, !llvm.loop !245

for.body95:                                       ; preds = %for.body95.prol.loopexit, %for.body95
  %indvars.iv280 = phi i64 [ %indvars.iv.next281.3, %for.body95 ], [ %indvars.iv280.unr, %for.body95.prol.loopexit ]
  %indvars.iv.next281 = add nsw i64 %indvars.iv280, -1
  %arrayidx99 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281
  %123 = load i64, i64* %arrayidx99, align 8, !tbaa !110
  %arrayidx102 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv280
  store i64 %123, i64* %arrayidx102, align 8, !tbaa !110
  %arrayidx106 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281
  %124 = load i64, i64* %arrayidx106, align 8, !tbaa !110
  %arrayidx109 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv280
  store i64 %124, i64* %arrayidx109, align 8, !tbaa !110
  %arrayidx113 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281
  %125 = load i64, i64* %arrayidx113, align 8, !tbaa !110
  %arrayidx116 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv280
  store i64 %125, i64* %arrayidx116, align 8, !tbaa !110
  %indvars.iv.next281.1 = add nsw i64 %indvars.iv280, -2
  %arrayidx99.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281.1
  %126 = load i64, i64* %arrayidx99.1, align 8, !tbaa !110
  %arrayidx102.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281
  store i64 %126, i64* %arrayidx102.1, align 8, !tbaa !110
  %arrayidx106.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281.1
  %127 = load i64, i64* %arrayidx106.1, align 8, !tbaa !110
  %arrayidx109.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281
  store i64 %127, i64* %arrayidx109.1, align 8, !tbaa !110
  %arrayidx113.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281.1
  %128 = load i64, i64* %arrayidx113.1, align 8, !tbaa !110
  %arrayidx116.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281
  store i64 %128, i64* %arrayidx116.1, align 8, !tbaa !110
  %indvars.iv.next281.2 = add nsw i64 %indvars.iv280, -3
  %arrayidx99.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281.2
  %129 = load i64, i64* %arrayidx99.2, align 8, !tbaa !110
  %arrayidx102.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281.1
  store i64 %129, i64* %arrayidx102.2, align 8, !tbaa !110
  %arrayidx106.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281.2
  %130 = load i64, i64* %arrayidx106.2, align 8, !tbaa !110
  %arrayidx109.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281.1
  store i64 %130, i64* %arrayidx109.2, align 8, !tbaa !110
  %arrayidx113.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281.2
  %131 = load i64, i64* %arrayidx113.2, align 8, !tbaa !110
  %arrayidx116.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281.1
  store i64 %131, i64* %arrayidx116.2, align 8, !tbaa !110
  %indvars.iv.next281.3 = add nsw i64 %indvars.iv280, -4
  %arrayidx99.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281.3
  %132 = load i64, i64* %arrayidx99.3, align 8, !tbaa !110
  %arrayidx102.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281.2
  store i64 %132, i64* %arrayidx102.3, align 8, !tbaa !110
  %arrayidx106.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281.3
  %133 = load i64, i64* %arrayidx106.3, align 8, !tbaa !110
  %arrayidx109.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281.2
  store i64 %133, i64* %arrayidx109.3, align 8, !tbaa !110
  %arrayidx113.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281.3
  %134 = load i64, i64* %arrayidx113.3, align 8, !tbaa !110
  %arrayidx116.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281.2
  store i64 %134, i64* %arrayidx116.3, align 8, !tbaa !110
  %cmp93.3 = icmp sgt i64 %indvars.iv.next281.3, %114
  br i1 %cmp93.3, label %for.body95, label %for.cond.cleanup94, !llvm.loop !246

land.rhs:                                         ; preds = %while.body, %land.rhs.lr.ph
  %135 = phi i64 [ %.pre291, %land.rhs.lr.ph ], [ %154, %while.body ]
  %136 = phi i64 [ %.pre, %land.rhs.lr.ph ], [ %mul147, %while.body ]
  %cmp143 = icmp eq i64 %136, %135
  br i1 %cmp143, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %137 = load i64, i64* %arrayidx, align 8, !tbaa !110
  %mul147 = mul i64 %137, %135
  store i64 %mul147, i64* %chunk_size, align 8, !tbaa !238
  %138 = load <4 x i64>, <4 x i64>* %85, align 8, !tbaa !110
  store <4 x i64> %138, <4 x i64>* %86, align 8, !tbaa !110
  %139 = load <4 x i64>, <4 x i64>* %87, align 8, !tbaa !110
  store <4 x i64> %139, <4 x i64>* %88, align 8, !tbaa !110
  %140 = load <4 x i64>, <4 x i64>* %89, align 8, !tbaa !110
  store <4 x i64> %140, <4 x i64>* %90, align 8, !tbaa !110
  %141 = load <4 x i64>, <4 x i64>* %91, align 8, !tbaa !110
  store <4 x i64> %141, <4 x i64>* %92, align 8, !tbaa !110
  %142 = load <4 x i64>, <4 x i64>* %93, align 8, !tbaa !110
  store <4 x i64> %142, <4 x i64>* %94, align 8, !tbaa !110
  %143 = load <4 x i64>, <4 x i64>* %95, align 8, !tbaa !110
  store <4 x i64> %143, <4 x i64>* %96, align 8, !tbaa !110
  %144 = load <4 x i64>, <4 x i64>* %97, align 8, !tbaa !110
  store <4 x i64> %144, <4 x i64>* %98, align 8, !tbaa !110
  %145 = load <4 x i64>, <4 x i64>* %99, align 8, !tbaa !110
  store <4 x i64> %145, <4 x i64>* %100, align 8, !tbaa !110
  %146 = load <4 x i64>, <4 x i64>* %101, align 8, !tbaa !110
  store <4 x i64> %146, <4 x i64>* %102, align 8, !tbaa !110
  %147 = load <2 x i64>, <2 x i64>* %103, align 8, !tbaa !110
  store <2 x i64> %147, <2 x i64>* %104, align 8, !tbaa !110
  %148 = load <2 x i64>, <2 x i64>* %105, align 8, !tbaa !110
  store <2 x i64> %148, <2 x i64>* %106, align 8, !tbaa !110
  %149 = load <2 x i64>, <2 x i64>* %107, align 8, !tbaa !110
  store <2 x i64> %149, <2 x i64>* %108, align 8, !tbaa !110
  %150 = load i64, i64* %arrayidx.15, align 8, !tbaa !110
  store i64 %150, i64* %arrayidx.14, align 8, !tbaa !110
  %151 = load i64, i64* %arrayidx12.15, align 8, !tbaa !110
  store i64 %151, i64* %arrayidx12.14, align 8, !tbaa !110
  %152 = load i64, i64* %arrayidx14.15, align 8, !tbaa !110
  store i64 %152, i64* %arrayidx14.14, align 8, !tbaa !110
  store i64 1, i64* %arrayidx.15, align 8, !tbaa !110
  store i64 0, i64* %arrayidx12.15, align 8, !tbaa !110
  store i64 0, i64* %arrayidx14.15, align 8, !tbaa !110
  %153 = extractelement <4 x i64> %139, i32 0
  %cmp139 = icmp eq i64 %mul147, %153
  %154 = extractelement <4 x i64> %140, i32 0
  br i1 %cmp139, label %land.rhs, label %while.end, !llvm.loop !247

while.end:                                        ; preds = %while.body, %land.rhs, %while.cond.preheader, %for.cond54.preheader
  %155 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(416) %155, i8* nonnull align 8 dereferenceable(416) %0, i64 416, i1 false), !tbaa.struct !248
  br label %cleanup

cleanup:                                          ; preds = %while.end, %if.then51, %if.then
  call void @llvm.lifetime.end.p0i8(i64 416, i8* nonnull %0) #10
  ret void
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind mustprogress
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %key1, i8* %key2, i64 %key_size) local_unnamed_addr #0 {
entry:
  %call = tail call i32 @memcmp(i8* %key1, i8* %key2, i64 %key_size) #15
  %cmp = icmp eq i32 %call, 0
  ret i1 %cmp
}

declare i32 @memcmp(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %buf, %struct.halide_dimension_t* %shape) local_unnamed_addr #0 {
entry:
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %0 = load i32, i32* %dimensions, align 4, !tbaa !175
  %cmp9 = icmp sgt i32 %0, 0
  br i1 %cmp9, label %for.body.lr.ph, label %return

for.body.lr.ph:                                   ; preds = %entry
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %1 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !176
  %2 = zext i32 %0 to i64
  br label %for.body

for.cond:                                         ; preds = %_ZNK18halide_dimension_tneERKS_.exit
  %exitcond.not = icmp eq i64 %indvars.iv.next, %2
  br i1 %exitcond.not, label %return, label %for.body, !llvm.loop !249

for.body:                                         ; preds = %for.cond, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %min.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %1, i64 %indvars.iv, i32 0
  %3 = load i32, i32* %min.i.i, align 4, !tbaa !181
  %min2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv, i32 0
  %4 = load i32, i32* %min2.i.i, align 4, !tbaa !181
  %cmp.i.i = icmp eq i32 %3, %4
  br i1 %cmp.i.i, label %land.lhs.true.i.i, label %return

land.lhs.true.i.i:                                ; preds = %for.body
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %1, i64 %indvars.iv, i32 1
  %5 = load i32, i32* %extent.i.i, align 4, !tbaa !178
  %extent3.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv, i32 1
  %6 = load i32, i32* %extent3.i.i, align 4, !tbaa !178
  %cmp4.i.i = icmp eq i32 %5, %6
  br i1 %cmp4.i.i, label %land.lhs.true5.i.i, label %return

land.lhs.true5.i.i:                               ; preds = %land.lhs.true.i.i
  %stride.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %1, i64 %indvars.iv, i32 2
  %7 = load i32, i32* %stride.i.i, align 4, !tbaa !182
  %stride6.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv, i32 2
  %8 = load i32, i32* %stride6.i.i, align 4, !tbaa !182
  %cmp7.i.i = icmp eq i32 %7, %8
  br i1 %cmp7.i.i, label %_ZNK18halide_dimension_tneERKS_.exit, label %return

_ZNK18halide_dimension_tneERKS_.exit:             ; preds = %land.lhs.true5.i.i
  %flags.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %1, i64 %indvars.iv, i32 3
  %9 = load i32, i32* %flags.i.i, align 4, !tbaa !250
  %flags8.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv, i32 3
  %10 = load i32, i32* %flags8.i.i, align 4, !tbaa !250
  %cmp9.i.i.not = icmp eq i32 %9, %10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp9.i.i.not, label %for.cond, label %return

return:                                           ; preds = %_ZNK18halide_dimension_tneERKS_.exit, %land.lhs.true5.i.i, %land.lhs.true.i.i, %for.body, %for.cond, %entry
  %cmp.lcssa = phi i1 [ true, %entry ], [ false, %_ZNK18halide_dimension_tneERKS_.exit ], [ true, %for.cond ], [ false, %land.lhs.true5.i.i ], [ false, %land.lhs.true.i.i ], [ false, %for.body ]
  ret i1 %cmp.lcssa
}

; Function Attrs: nounwind mustprogress
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal10CacheEntry4initEPKhmjPK15halide_buffer_tiPPS5_by(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %this, i8* %cache_key, i64 %cache_key_size, i32 %key_hash, %struct.halide_buffer_t* %computed_bounds_buf, i32 %tuples, %struct.halide_buffer_t** %tuple_buffers, i1 zeroext %has_eviction_key_arg, i64 %eviction_key_arg) local_unnamed_addr #0 align 2 {
entry:
  %frombool = zext i1 %has_eviction_key_arg to i8
  %0 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %this to <2 x %"struct.Halide::Runtime::Internal::CacheEntry"*>*
  store <2 x %"struct.Halide::Runtime::Internal::CacheEntry"*> zeroinitializer, <2 x %"struct.Halide::Runtime::Internal::CacheEntry"*>* %0, align 8, !tbaa !10
  %less_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !251
  %key_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 4
  store i64 %cache_key_size, i64* %key_size, align 8, !tbaa !252
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 6
  store i32 %key_hash, i32* %hash, align 8, !tbaa !253
  %in_use_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 7
  store i32 0, i32* %in_use_count, align 4, !tbaa !254
  %tuple_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 8
  store i32 %tuples, i32* %tuple_count, align 8, !tbaa !230
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %computed_bounds_buf, i64 0, i32 5
  %1 = load i32, i32* %dimensions, align 4, !tbaa !175
  %dimensions2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 9
  store i32 %1, i32* %dimensions2, align 4, !tbaa !255
  %conv = zext i32 %tuples to i64
  %mul = mul nuw nsw i64 %conv, 56
  %conv5 = sext i32 %1 to i64
  %add8 = add i32 %tuples, 1
  %conv9 = zext i32 %add8 to i64
  %mul6 = shl nuw nsw i64 %conv9, 4
  %mul10 = mul i64 %mul6, %conv5
  %add11 = add i64 %mul10, %mul
  %add13 = add i64 %add11, %cache_key_size
  %call = tail call i8* @halide_malloc(i8* null, i64 %add13) #15
  %metadata_storage = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 3
  store i8* %call, i8** %metadata_storage, align 8, !tbaa !231
  %tobool.not = icmp eq i8* %call, null
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %buf = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 11
  %2 = bitcast %struct.halide_buffer_t** %buf to i8**
  store i8* %call, i8** %2, align 8, !tbaa !232
  %add.ptr = getelementptr inbounds i8, i8* %call, i64 %mul
  %computed_bounds = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 10
  %3 = bitcast %struct.halide_dimension_t** %computed_bounds to i8**
  store i8* %add.ptr, i8** %3, align 8, !tbaa !256
  %add.ptr18 = getelementptr inbounds i8, i8* %call, i64 %add11
  %key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 5
  store i8* %add.ptr18, i8** %key, align 8, !tbaa !257
  %4 = load i64, i64* %key_size, align 8, !tbaa !252
  %cmp117.not = icmp eq i64 %4, 0
  br i1 %cmp117.not, label %for.cond23.preheader, label %for.body.preheader

for.body.preheader:                               ; preds = %if.end
  %5 = load i8, i8* %cache_key, align 1, !tbaa !14
  store i8 %5, i8* %add.ptr18, align 1, !tbaa !14
  %6 = load i64, i64* %key_size, align 8, !tbaa !252
  %cmp130 = icmp ugt i64 %6, 1
  br i1 %cmp130, label %for.body.for.body_crit_edge, label %for.cond23.preheader, !llvm.loop !258

for.cond23.preheader:                             ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %if.end
  %7 = load i32, i32* %dimensions2, align 4, !tbaa !255
  %cmp25115 = icmp sgt i32 %7, 0
  br i1 %cmp25115, label %for.body27.lr.ph, label %for.cond36.preheader

for.body27.lr.ph:                                 ; preds = %for.cond23.preheader
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %computed_bounds_buf, i64 0, i32 6
  br label %for.body27

for.body.for.body_crit_edge:                      ; preds = %for.body.preheader, %for.body.for.body_crit_edge
  %inc131 = phi i64 [ %inc, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.pre = load i8*, i8** %key, align 8, !tbaa !257
  %arrayidx = getelementptr inbounds i8, i8* %cache_key, i64 %inc131
  %8 = load i8, i8* %arrayidx, align 1, !tbaa !14
  %arrayidx21 = getelementptr inbounds i8, i8* %.pre, i64 %inc131
  store i8 %8, i8* %arrayidx21, align 1, !tbaa !14
  %inc = add nuw i64 %inc131, 1
  %9 = load i64, i64* %key_size, align 8, !tbaa !252
  %cmp = icmp ult i64 %inc, %9
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.cond23.preheader, !llvm.loop !258

for.cond36.preheader:                             ; preds = %for.body27, %for.cond23.preheader
  %10 = load i32, i32* %tuple_count, align 8, !tbaa !230
  %cmp38113.not = icmp eq i32 %10, 0
  br i1 %cmp38113.not, label %for.cond.cleanup39, label %for.body40

for.body27:                                       ; preds = %for.body27, %for.body27.lr.ph
  %indvars.iv121 = phi i64 [ 0, %for.body27.lr.ph ], [ %indvars.iv.next122, %for.body27 ]
  %11 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !176
  %arrayidx28 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i64 %indvars.iv121
  %12 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds, align 8, !tbaa !256
  %arrayidx31 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %12, i64 %indvars.iv121
  %13 = bitcast %struct.halide_dimension_t* %arrayidx31 to i8*
  %14 = bitcast %struct.halide_dimension_t* %arrayidx28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %13, i8* nonnull align 4 dereferenceable(16) %14, i64 16, i1 false), !tbaa.struct !177
  %indvars.iv.next122 = add nuw nsw i64 %indvars.iv121, 1
  %15 = load i32, i32* %dimensions2, align 4, !tbaa !255
  %16 = sext i32 %15 to i64
  %cmp25 = icmp slt i64 %indvars.iv.next122, %16
  br i1 %cmp25, label %for.body27, label %for.cond36.preheader, !llvm.loop !259

for.cond36.loopexit:                              ; preds = %for.body59.for.body59_crit_edge, %for.body59.preheader, %for.body40
  %17 = load i32, i32* %tuple_count, align 8, !tbaa !230
  %18 = zext i32 %17 to i64
  %cmp38 = icmp ult i64 %indvars.iv.next120, %18
  br i1 %cmp38, label %for.body40, label %for.cond.cleanup39, !llvm.loop !260

for.cond.cleanup39:                               ; preds = %for.cond36.loopexit, %for.cond36.preheader
  %has_eviction_key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 13
  store i8 %frombool, i8* %has_eviction_key, align 8, !tbaa !261
  %eviction_key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 12
  store i64 %eviction_key_arg, i64* %eviction_key, align 8, !tbaa !262
  br label %cleanup

for.body40:                                       ; preds = %for.cond36.preheader, %for.cond36.loopexit
  %indvars.iv119 = phi i64 [ %indvars.iv.next120, %for.cond36.loopexit ], [ 0, %for.cond36.preheader ]
  %arrayidx42 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv119
  %19 = bitcast %struct.halide_buffer_t** %arrayidx42 to i8**
  %20 = load i8*, i8** %19, align 8, !tbaa !10
  %21 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !232
  %arrayidx45 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %21, i64 %indvars.iv119
  %22 = bitcast %struct.halide_buffer_t* %arrayidx45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %22, i8* nonnull align 8 dereferenceable(56) %20, i64 56, i1 false), !tbaa.struct !263
  %23 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds, align 8, !tbaa !256
  %indvars.iv.next120 = add nuw nsw i64 %indvars.iv119, 1
  %24 = load i32, i32* %dimensions2, align 4, !tbaa !255
  %25 = trunc i64 %indvars.iv.next120 to i32
  %mul49 = mul i32 %24, %25
  %idx.ext = zext i32 %mul49 to i64
  %add.ptr50 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %23, i64 %idx.ext
  %26 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !232
  %dim54 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %26, i64 %indvars.iv119, i32 6
  store %struct.halide_dimension_t* %add.ptr50, %struct.halide_dimension_t** %dim54, align 8, !tbaa !176
  %cmp57111 = icmp sgt i32 %24, 0
  br i1 %cmp57111, label %for.body59.preheader, label %for.cond36.loopexit

for.body59.preheader:                             ; preds = %for.body40
  %27 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx42, align 8, !tbaa !10
  %dim62125 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %27, i64 0, i32 6
  %28 = bitcast %struct.halide_dimension_t** %dim62125 to i8**
  %29 = load i8*, i8** %28, align 8, !tbaa !176
  %30 = bitcast %struct.halide_dimension_t* %add.ptr50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %30, i8* nonnull align 4 dereferenceable(16) %29, i64 16, i1 false), !tbaa.struct !177
  %31 = load i32, i32* %dimensions2, align 4, !tbaa !255
  %cmp57128 = icmp sgt i32 %31, 1
  br i1 %cmp57128, label %for.body59.for.body59_crit_edge, label %for.cond36.loopexit, !llvm.loop !265

for.body59.for.body59_crit_edge:                  ; preds = %for.body59.preheader, %for.body59.for.body59_crit_edge
  %indvars.iv.next129 = phi i64 [ %indvars.iv.next, %for.body59.for.body59_crit_edge ], [ 1, %for.body59.preheader ]
  %.pre123 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !232
  %dim68.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %.pre123, i64 %indvars.iv119, i32 6
  %.pre124 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim68.phi.trans.insert, align 8, !tbaa !176
  %32 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx42, align 8, !tbaa !10
  %dim62 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %32, i64 0, i32 6
  %33 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim62, align 8, !tbaa !176
  %arrayidx64 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %33, i64 %indvars.iv.next129
  %arrayidx70 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre124, i64 %indvars.iv.next129
  %34 = bitcast %struct.halide_dimension_t* %arrayidx70 to i8*
  %35 = bitcast %struct.halide_dimension_t* %arrayidx64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %34, i8* nonnull align 4 dereferenceable(16) %35, i64 16, i1 false), !tbaa.struct !177
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next129, 1
  %36 = load i32, i32* %dimensions2, align 4, !tbaa !255
  %37 = sext i32 %36 to i64
  %cmp57 = icmp slt i64 %indvars.iv.next, %37
  br i1 %cmp57, label %for.body59.for.body59_crit_edge, label %for.cond36.loopexit, !llvm.loop !265

cleanup:                                          ; preds = %for.cond.cleanup39, %entry
  %38 = xor i1 %tobool.not, true
  ret i1 %38
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @_ZN6Halide7Runtime8Internal8djb_hashEPKhm(i8* %key, i64 %key_size) local_unnamed_addr #0 {
entry:
  %cmp8.not = icmp eq i64 %key_size, 0
  br i1 %cmp8.not, label %for.cond.cleanup, label %for.body.preheader

for.body.preheader:                               ; preds = %entry
  %0 = add i64 %key_size, -1
  %xtraiter = and i64 %key_size, 7
  %1 = icmp ult i64 %0, 7
  br i1 %1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %key_size, -8
  %add.0 = mul i32 5381, 33
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.preheader
  %add1.lcssa.ph = phi i32 [ undef, %for.body.preheader ], [ %add1.7, %for.body ]
  %i.010.unr = phi i64 [ 0, %for.body.preheader ], [ %inc.7, %for.body ]
  %h.09.unr = phi i32 [ 5381, %for.body.preheader ], [ %add1.7, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa, %for.body.epil
  %i.010.epil = phi i64 [ %inc.epil, %for.body.epil ], [ %i.010.unr, %for.cond.cleanup.loopexit.unr-lcssa ]
  %h.09.epil = phi i32 [ %add1.epil, %for.body.epil ], [ %h.09.unr, %for.cond.cleanup.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body.epil ], [ %xtraiter, %for.cond.cleanup.loopexit.unr-lcssa ]
  %add.epil = mul i32 %h.09.epil, 33
  %arrayidx.epil = getelementptr inbounds i8, i8* %key, i64 %i.010.epil
  %2 = load i8, i8* %arrayidx.epil, align 1, !tbaa !14
  %conv.epil = zext i8 %2 to i32
  %add1.epil = add i32 %add.epil, %conv.epil
  %inc.epil = add nuw i64 %i.010.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp.not, label %for.cond.cleanup, label %for.body.epil, !llvm.loop !266

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit.unr-lcssa, %for.body.epil, %entry
  %h.0.lcssa = phi i32 [ 5381, %entry ], [ %add1.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %add1.epil, %for.body.epil ]
  ret i32 %h.0.lcssa

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.preheader.new
  %i.010 = phi i64 [ 0, %for.body.preheader.new ], [ %inc.7, %for.body.for.body_crit_edge ]
  %add.phi = phi i32 [ %add.0, %for.body.preheader.new ], [ %add.12, %for.body.for.body_crit_edge ]
  %niter = phi i64 [ %unroll_iter, %for.body.preheader.new ], [ %niter.nsub.7, %for.body.for.body_crit_edge ]
  %arrayidx = getelementptr inbounds i8, i8* %key, i64 %i.010
  %3 = load i8, i8* %arrayidx, align 1, !tbaa !14
  %conv = zext i8 %3 to i32
  %add1 = add i32 %add.phi, %conv
  %inc = or i64 %i.010, 1
  %add.1 = mul i32 %add1, 33
  %arrayidx.1 = getelementptr inbounds i8, i8* %key, i64 %inc
  %4 = load i8, i8* %arrayidx.1, align 1, !tbaa !14
  %conv.1 = zext i8 %4 to i32
  %add1.1 = add i32 %add.1, %conv.1
  %inc.1 = or i64 %i.010, 2
  %add.2 = mul i32 %add1.1, 33
  %arrayidx.2 = getelementptr inbounds i8, i8* %key, i64 %inc.1
  %5 = load i8, i8* %arrayidx.2, align 1, !tbaa !14
  %conv.2 = zext i8 %5 to i32
  %add1.2 = add i32 %add.2, %conv.2
  %inc.2 = or i64 %i.010, 3
  %add.3 = mul i32 %add1.2, 33
  %arrayidx.3 = getelementptr inbounds i8, i8* %key, i64 %inc.2
  %6 = load i8, i8* %arrayidx.3, align 1, !tbaa !14
  %conv.3 = zext i8 %6 to i32
  %add1.3 = add i32 %add.3, %conv.3
  %inc.3 = or i64 %i.010, 4
  %add.4 = mul i32 %add1.3, 33
  %arrayidx.4 = getelementptr inbounds i8, i8* %key, i64 %inc.3
  %7 = load i8, i8* %arrayidx.4, align 1, !tbaa !14
  %conv.4 = zext i8 %7 to i32
  %add1.4 = add i32 %add.4, %conv.4
  %inc.4 = or i64 %i.010, 5
  %add.5 = mul i32 %add1.4, 33
  %arrayidx.5 = getelementptr inbounds i8, i8* %key, i64 %inc.4
  %8 = load i8, i8* %arrayidx.5, align 1, !tbaa !14
  %conv.5 = zext i8 %8 to i32
  %add1.5 = add i32 %add.5, %conv.5
  %inc.5 = or i64 %i.010, 6
  %add.6 = mul i32 %add1.5, 33
  %arrayidx.6 = getelementptr inbounds i8, i8* %key, i64 %inc.5
  %9 = load i8, i8* %arrayidx.6, align 1, !tbaa !14
  %conv.6 = zext i8 %9 to i32
  %add1.6 = add i32 %add.6, %conv.6
  %inc.6 = or i64 %i.010, 7
  %add.7 = mul i32 %add1.6, 33
  %arrayidx.7 = getelementptr inbounds i8, i8* %key, i64 %inc.6
  %10 = load i8, i8* %arrayidx.7, align 1, !tbaa !14
  %conv.7 = zext i8 %10 to i32
  %add1.7 = add i32 %add.7, %conv.7
  %inc.7 = add nuw i64 %i.010, 8
  %niter.nsub.7 = add i64 %niter, -8
  %niter.ncmp.7 = icmp eq i64 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.for.body_crit_edge, !llvm.loop !267

for.body.for.body_crit_edge:                      ; preds = %for.body
  %add.12 = mul i32 %add1.7, 33
  br label %for.body
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal11prune_cacheEv() local_unnamed_addr #0 {
entry:
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  %1 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  %2 = load i64, i64* @_ZN6Halide7Runtime8Internal14max_cache_sizeE, align 8, !tbaa !110
  %cmp84 = icmp sgt i64 %1, %2
  %cmp185 = icmp ne %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null
  %3 = and i1 %cmp185, %cmp84
  br i1 %3, label %while.body, label %while.end42

while.body:                                       ; preds = %entry, %if.end41
  %4 = phi i64 [ %114, %if.end41 ], [ %2, %entry ]
  %5 = phi i64 [ %115, %if.end41 ], [ %1, %entry ]
  %prune_candidate.086 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %6, %if.end41 ], [ %0, %entry ]
  %more_recent2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 1
  %6 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent2, align 8, !tbaa !268
  %in_use_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 7
  %7 = load i32, i32* %in_use_count, align 4, !tbaa !254
  %cmp3 = icmp eq i32 %7, 0
  br i1 %cmp3, label %if.then, label %if.end41

if.then:                                          ; preds = %while.body
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 6
  %8 = load i32, i32* %hash, align 8, !tbaa !253
  %9 = and i32 %8, 255
  %idxprom = zext i32 %9 to i64
  %arrayidx = getelementptr inbounds [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 %idxprom
  %10 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 8, !tbaa !10
  %cmp5 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %10, %prune_candidate.086
  br i1 %cmp5, label %if.then6, label %while.cond9

if.then6:                                         ; preds = %if.then
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 0
  %11 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next, align 8, !tbaa !227
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %11, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 8, !tbaa !10
  br label %if.end21

while.cond9:                                      ; preds = %if.then, %land.rhs11
  %prev_hash_entry.0 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %12, %land.rhs11 ], [ %10, %if.then ]
  %cmp10.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %prev_hash_entry.0, null
  br i1 %cmp10.not, label %if.then18, label %land.rhs11

land.rhs11:                                       ; preds = %while.cond9
  %next12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prev_hash_entry.0, i64 0, i32 0
  %12 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next12, align 8, !tbaa !227
  %cmp13.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %12, %prune_candidate.086
  br i1 %cmp13.not, label %do.end, label %while.cond9, !llvm.loop !269

if.then18:                                        ; preds = %while.cond9
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @.str.2.42, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %land.rhs11, %if.then18
  %next19 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 0
  %13 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next19, align 8, !tbaa !227
  %next20 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prev_hash_entry.0, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %13, %"struct.Halide::Runtime::Internal::CacheEntry"** %next20, align 8, !tbaa !227
  br label %if.end21

if.end21:                                         ; preds = %do.end, %if.then6
  %14 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  %cmp22 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %14, %prune_candidate.086
  br i1 %cmp22, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end21
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %6, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.end21
  %cmp25.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %6, null
  br i1 %cmp25.not, label %if.end28, label %if.then26

if.then26:                                        ; preds = %if.end24
  %less_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 2
  %15 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !251
  %less_recent27 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %6, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %15, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent27, align 8, !tbaa !251
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.end24
  %16 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  %cmp29 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %16, %prune_candidate.086
  %less_recent31 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 2
  %17 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent31, align 8, !tbaa !251
  br i1 %cmp29, label %if.then30, label %if.end32

if.then30:                                        ; preds = %if.end28
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %17, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  br label %if.end32

if.end32:                                         ; preds = %if.then30, %if.end28
  %cmp34.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %17, null
  br i1 %cmp34.not, label %if.end37, label %if.then35

if.then35:                                        ; preds = %if.end32
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %6, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent31, align 8, !tbaa !251
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.end32
  %tuple_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 8
  %18 = load i32, i32* %tuple_count, align 8, !tbaa !230
  %cmp3882.not = icmp eq i32 %18, 0
  br i1 %cmp3882.not, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end37
  %buf = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 11
  %19 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !232
  %_ZN6Halide7Runtime8Internal18current_cache_sizeE.promoted = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  %wide.trip.count = zext i32 %18 to i64
  br label %for.body

for.cond.for.cond.cleanup_crit_edge:              ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  store i64 %sub, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.for.cond.cleanup_crit_edge, %if.end37
  tail call void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %prune_candidate.086) #16
  %20 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086 to i8*
  tail call void @halide_free(i8* null, i8* nonnull %20) #15
  %.pre92 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  %.pre93 = load i64, i64* @_ZN6Halide7Runtime8Internal14max_cache_sizeE, align 8, !tbaa !110
  br label %if.end41

for.body:                                         ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %sub89 = phi i64 [ %_ZN6Halide7Runtime8Internal18current_cache_sizeE.promoted, %for.body.lr.ph ], [ %sub, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %19, i64 %indvars.iv, i32 5
  %21 = load i32, i32* %dimensions.i.i, align 4, !tbaa !175
  %cmp19.i.i = icmp sgt i32 %21, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %for.body._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge

for.body._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge: ; preds = %for.body
  %sub.i.neg.0 = add i64 0, -1
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %for.body
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %19, i64 %indvars.iv, i32 6
  %22 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !176
  %wide.trip.count.i.i = zext i32 %21 to i64
  %min.iters.check43 = icmp ult i32 %21, 17
  br i1 %min.iters.check43, label %for.body.i.i.preheader, label %vector.ph44

vector.ph44:                                      ; preds = %for.body.lr.ph.i.i
  %n.mod.vf45 = and i64 %wide.trip.count.i.i, 15
  %23 = icmp eq i64 %n.mod.vf45, 0
  %24 = select i1 %23, i64 16, i64 %n.mod.vf45
  %n.vec46 = sub nsw i64 %wide.trip.count.i.i, %24
  br label %vector.body42

vector.body42:                                    ; preds = %vector.body42, %vector.ph44
  %index47 = phi i64 [ 0, %vector.ph44 ], [ %index.next48, %vector.body42 ]
  %vec.ind51 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph44 ], [ %vec.ind.next56, %vector.body42 ]
  %vec.phi57 = phi <4 x i64> [ zeroinitializer, %vector.ph44 ], [ %predphi73, %vector.body42 ]
  %vec.phi58 = phi <4 x i64> [ zeroinitializer, %vector.ph44 ], [ %predphi74, %vector.body42 ]
  %vec.phi59 = phi <4 x i64> [ zeroinitializer, %vector.ph44 ], [ %predphi75, %vector.body42 ]
  %vec.phi60 = phi <4 x i64> [ zeroinitializer, %vector.ph44 ], [ %predphi76, %vector.body42 ]
  %step.add52 = add <4 x i64> %vec.ind51, <i64 4, i64 4, i64 4, i64 4>
  %step.add53 = add <4 x i64> %vec.ind51, <i64 8, i64 8, i64 8, i64 8>
  %step.add54 = add <4 x i64> %vec.ind51, <i64 12, i64 12, i64 12, i64 12>
  %25 = or i64 %index47, 4
  %26 = or i64 %index47, 8
  %27 = or i64 %index47, 12
  %28 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %index47, i32 2
  %29 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %25, i32 2
  %30 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %26, i32 2
  %31 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %27, i32 2
  %32 = bitcast i32* %28 to <16 x i32>*
  %33 = bitcast i32* %29 to <16 x i32>*
  %34 = bitcast i32* %30 to <16 x i32>*
  %35 = bitcast i32* %31 to <16 x i32>*
  %wide.vec61 = load <16 x i32>, <16 x i32>* %32, align 4, !tbaa !182
  %wide.vec62 = load <16 x i32>, <16 x i32>* %33, align 4, !tbaa !182
  %wide.vec63 = load <16 x i32>, <16 x i32>* %34, align 4, !tbaa !182
  %wide.vec64 = load <16 x i32>, <16 x i32>* %35, align 4, !tbaa !182
  %strided.vec65 = shufflevector <16 x i32> %wide.vec61, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec66 = shufflevector <16 x i32> %wide.vec62, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec67 = shufflevector <16 x i32> %wide.vec63, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec68 = shufflevector <16 x i32> %wide.vec64, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %36 = icmp sgt <4 x i32> %strided.vec65, zeroinitializer
  %37 = icmp sgt <4 x i32> %strided.vec66, zeroinitializer
  %38 = icmp sgt <4 x i32> %strided.vec67, zeroinitializer
  %39 = icmp sgt <4 x i32> %strided.vec68, zeroinitializer
  %40 = zext <4 x i32> %strided.vec65 to <4 x i64>
  %41 = zext <4 x i32> %strided.vec66 to <4 x i64>
  %42 = zext <4 x i32> %strided.vec67 to <4 x i64>
  %43 = zext <4 x i32> %strided.vec68 to <4 x i64>
  %44 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, <4 x i64> %vec.ind51, i32 1
  %45 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, <4 x i64> %step.add52, i32 1
  %46 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, <4 x i64> %step.add53, i32 1
  %47 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, <4 x i64> %step.add54, i32 1
  %wide.masked.gather69 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %44, i32 4, <4 x i1> %36, <4 x i32> undef), !tbaa !178
  %wide.masked.gather70 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %45, i32 4, <4 x i1> %37, <4 x i32> undef), !tbaa !178
  %wide.masked.gather71 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %46, i32 4, <4 x i1> %38, <4 x i32> undef), !tbaa !178
  %wide.masked.gather72 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %47, i32 4, <4 x i1> %39, <4 x i32> undef), !tbaa !178
  %48 = add nsw <4 x i32> %wide.masked.gather69, <i32 -1, i32 -1, i32 -1, i32 -1>
  %49 = add nsw <4 x i32> %wide.masked.gather70, <i32 -1, i32 -1, i32 -1, i32 -1>
  %50 = add nsw <4 x i32> %wide.masked.gather71, <i32 -1, i32 -1, i32 -1, i32 -1>
  %51 = add nsw <4 x i32> %wide.masked.gather72, <i32 -1, i32 -1, i32 -1, i32 -1>
  %52 = sext <4 x i32> %48 to <4 x i64>
  %53 = sext <4 x i32> %49 to <4 x i64>
  %54 = sext <4 x i32> %50 to <4 x i64>
  %55 = sext <4 x i32> %51 to <4 x i64>
  %56 = mul nsw <4 x i64> %52, %40
  %57 = mul nsw <4 x i64> %53, %41
  %58 = mul nsw <4 x i64> %54, %42
  %59 = mul nsw <4 x i64> %55, %43
  %60 = select <4 x i1> %36, <4 x i64> %56, <4 x i64> zeroinitializer
  %predphi73 = add <4 x i64> %vec.phi57, %60
  %61 = select <4 x i1> %37, <4 x i64> %57, <4 x i64> zeroinitializer
  %predphi74 = add <4 x i64> %vec.phi58, %61
  %62 = select <4 x i1> %38, <4 x i64> %58, <4 x i64> zeroinitializer
  %predphi75 = add <4 x i64> %vec.phi59, %62
  %63 = select <4 x i1> %39, <4 x i64> %59, <4 x i64> zeroinitializer
  %predphi76 = add <4 x i64> %vec.phi60, %63
  %index.next48 = add i64 %index47, 16
  %vec.ind.next56 = add <4 x i64> %vec.ind51, <i64 16, i64 16, i64 16, i64 16>
  %64 = icmp eq i64 %index.next48, %n.vec46
  br i1 %64, label %middle.block40, label %vector.body42, !llvm.loop !270

middle.block40:                                   ; preds = %vector.body42
  %bin.rdx77 = add <4 x i64> %predphi74, %predphi73
  %bin.rdx78 = add <4 x i64> %predphi75, %bin.rdx77
  %bin.rdx79 = add <4 x i64> %predphi76, %bin.rdx78
  %65 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx79)
  br label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %middle.block40, %for.body.lr.ph.i.i
  %indvars.iv.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %n.vec46, %middle.block40 ]
  %index.021.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %65, %middle.block40 ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %if.end.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %index.021.i.i = phi i64 [ %index.1.i.i, %if.end.i.i ], [ %index.021.i.i.ph, %for.body.i.i.preheader ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv.i.i, i32 2
  %66 = load i32, i32* %stride2.i.i, align 4, !tbaa !182
  %cmp3.i.i = icmp sgt i32 %66, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %66 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv.i.i, i32 1
  %67 = load i32, i32* %extent.i.i, align 4, !tbaa !178
  %sub.i.i = add nsw i32 %67, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i.preheader, label %for.body.i.i, !llvm.loop !271

for.body.i13.i.preheader:                         ; preds = %if.end.i.i
  %min.iters.check = icmp ult i32 %21, 17
  br i1 %min.iters.check, label %for.body.i13.i.preheader81, label %vector.ph

vector.ph:                                        ; preds = %for.body.i13.i.preheader
  %n.mod.vf = and i64 %wide.trip.count.i.i, 15
  %68 = icmp eq i64 %n.mod.vf, 0
  %69 = select i1 %68, i64 16, i64 %n.mod.vf
  %n.vec = sub nsw i64 %wide.trip.count.i.i, %69
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.ind = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %vec.phi = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi, %vector.body ]
  %vec.phi23 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi35, %vector.body ]
  %vec.phi24 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi36, %vector.body ]
  %vec.phi25 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi37, %vector.body ]
  %step.add = add <4 x i64> %vec.ind, <i64 4, i64 4, i64 4, i64 4>
  %step.add20 = add <4 x i64> %vec.ind, <i64 8, i64 8, i64 8, i64 8>
  %step.add21 = add <4 x i64> %vec.ind, <i64 12, i64 12, i64 12, i64 12>
  %70 = or i64 %index, 4
  %71 = or i64 %index, 8
  %72 = or i64 %index, 12
  %73 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %index, i32 2
  %74 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %70, i32 2
  %75 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %71, i32 2
  %76 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %72, i32 2
  %77 = bitcast i32* %73 to <16 x i32>*
  %78 = bitcast i32* %74 to <16 x i32>*
  %79 = bitcast i32* %75 to <16 x i32>*
  %80 = bitcast i32* %76 to <16 x i32>*
  %wide.vec = load <16 x i32>, <16 x i32>* %77, align 4, !tbaa !182
  %wide.vec26 = load <16 x i32>, <16 x i32>* %78, align 4, !tbaa !182
  %wide.vec27 = load <16 x i32>, <16 x i32>* %79, align 4, !tbaa !182
  %wide.vec28 = load <16 x i32>, <16 x i32>* %80, align 4, !tbaa !182
  %strided.vec = shufflevector <16 x i32> %wide.vec, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec29 = shufflevector <16 x i32> %wide.vec26, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec30 = shufflevector <16 x i32> %wide.vec27, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec31 = shufflevector <16 x i32> %wide.vec28, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %81 = icmp slt <4 x i32> %strided.vec, zeroinitializer
  %82 = icmp slt <4 x i32> %strided.vec29, zeroinitializer
  %83 = icmp slt <4 x i32> %strided.vec30, zeroinitializer
  %84 = icmp slt <4 x i32> %strided.vec31, zeroinitializer
  %85 = sext <4 x i32> %strided.vec to <4 x i64>
  %86 = sext <4 x i32> %strided.vec29 to <4 x i64>
  %87 = sext <4 x i32> %strided.vec30 to <4 x i64>
  %88 = sext <4 x i32> %strided.vec31 to <4 x i64>
  %89 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, <4 x i64> %vec.ind, i32 1
  %90 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, <4 x i64> %step.add, i32 1
  %91 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, <4 x i64> %step.add20, i32 1
  %92 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, <4 x i64> %step.add21, i32 1
  %wide.masked.gather = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %89, i32 4, <4 x i1> %81, <4 x i32> undef), !tbaa !178
  %wide.masked.gather32 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %90, i32 4, <4 x i1> %82, <4 x i32> undef), !tbaa !178
  %wide.masked.gather33 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %91, i32 4, <4 x i1> %83, <4 x i32> undef), !tbaa !178
  %wide.masked.gather34 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %92, i32 4, <4 x i1> %84, <4 x i32> undef), !tbaa !178
  %93 = add nsw <4 x i32> %wide.masked.gather, <i32 -1, i32 -1, i32 -1, i32 -1>
  %94 = add nsw <4 x i32> %wide.masked.gather32, <i32 -1, i32 -1, i32 -1, i32 -1>
  %95 = add nsw <4 x i32> %wide.masked.gather33, <i32 -1, i32 -1, i32 -1, i32 -1>
  %96 = add nsw <4 x i32> %wide.masked.gather34, <i32 -1, i32 -1, i32 -1, i32 -1>
  %97 = sext <4 x i32> %93 to <4 x i64>
  %98 = sext <4 x i32> %94 to <4 x i64>
  %99 = sext <4 x i32> %95 to <4 x i64>
  %100 = sext <4 x i32> %96 to <4 x i64>
  %101 = mul nsw <4 x i64> %97, %85
  %102 = mul nsw <4 x i64> %98, %86
  %103 = mul nsw <4 x i64> %99, %87
  %104 = mul nsw <4 x i64> %100, %88
  %105 = select <4 x i1> %81, <4 x i64> %101, <4 x i64> zeroinitializer
  %predphi = add <4 x i64> %vec.phi, %105
  %106 = select <4 x i1> %82, <4 x i64> %102, <4 x i64> zeroinitializer
  %predphi35 = add <4 x i64> %vec.phi23, %106
  %107 = select <4 x i1> %83, <4 x i64> %103, <4 x i64> zeroinitializer
  %predphi36 = add <4 x i64> %vec.phi24, %107
  %108 = select <4 x i1> %84, <4 x i64> %104, <4 x i64> zeroinitializer
  %predphi37 = add <4 x i64> %vec.phi25, %108
  %index.next = add i64 %index, 16
  %vec.ind.next = add <4 x i64> %vec.ind, <i64 16, i64 16, i64 16, i64 16>
  %109 = icmp eq i64 %index.next, %n.vec
  br i1 %109, label %middle.block, label %vector.body, !llvm.loop !272

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add <4 x i64> %predphi35, %predphi
  %bin.rdx38 = add <4 x i64> %predphi36, %bin.rdx
  %bin.rdx39 = add <4 x i64> %predphi37, %bin.rdx38
  %110 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx39)
  br label %for.body.i13.i.preheader81

for.body.i13.i.preheader81:                       ; preds = %middle.block, %for.body.i13.i.preheader
  %indvars.iv.i10.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %n.vec, %middle.block ]
  %index.018.i.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %110, %middle.block ]
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %for.body.i13.i.preheader81, %if.end.i24.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ %indvars.iv.i10.i.ph, %for.body.i13.i.preheader81 ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ %index.018.i.i.ph, %for.body.i13.i.preheader81 ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv.i10.i, i32 2
  %111 = load i32, i32* %stride2.i11.i, align 4, !tbaa !182
  %cmp3.i12.i = icmp slt i32 %111, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %111 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv.i10.i, i32 1
  %112 = load i32, i32* %extent.i15.i, align 4, !tbaa !178
  %sub.i16.i = add nsw i32 %112, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !273

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i
  %add8.i.i.neg = xor i64 %index.1.i.i, -1
  %sub.i.neg.1 = add i64 %index.1.i21.i, %add8.i.i.neg
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %for.body._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit
  %sub.i.neg.phi = phi i64 [ %sub.i.neg.0, %for.body._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge ], [ %sub.i.neg.1, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %index.0.lcssa.i9.i = phi i64 [ 0, %for.body._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge ], [ %index.1.i21.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %19, i64 %indvars.iv, i32 4, i32 1
  %113 = load i8, i8* %bits.i.i, align 1, !tbaa !136
  %conv.i.i = zext i8 %113 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i4.i, 3
  %mul.i.neg = mul i64 %div.i.i, %sub.i.neg.phi
  %sub = add i64 %mul.i.neg, %sub89
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.for.cond.cleanup_crit_edge, label %for.body, !llvm.loop !274

if.end41:                                         ; preds = %for.cond.cleanup, %while.body
  %114 = phi i64 [ %.pre93, %for.cond.cleanup ], [ %4, %while.body ]
  %115 = phi i64 [ %.pre92, %for.cond.cleanup ], [ %5, %while.body ]
  %cmp = icmp sgt i64 %115, %114
  %cmp1 = icmp ne %"struct.Halide::Runtime::Internal::CacheEntry"* %6, null
  %116 = and i1 %cmp1, %cmp
  br i1 %116, label %while.body, label %while.end42, !llvm.loop !275

while.end42:                                      ; preds = %if.end41, %entry
  ret void
}

; Function Attrs: nounwind
define weak void @halide_memoization_cache_set_size(i64 %size) local_unnamed_addr #4 {
entry:
  %cmp = icmp eq i64 %size, 0
  %spec.store.select = select i1 %cmp, i64 1048576, i64 %size
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  store i64 %spec.store.select, i64* @_ZN6Halide7Runtime8Internal14max_cache_sizeE, align 8, !tbaa !110
  tail call void @_ZN6Halide7Runtime8Internal11prune_cacheEv() #16
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_memoization_cache_lookup(i8* %user_context, i8* %cache_key, i32 %size, %struct.halide_buffer_t* %computed_bounds, i32 %tuple_count, %struct.halide_buffer_t** %tuple_buffers) local_unnamed_addr #4 {
entry:
  %conv = sext i32 %size to i64
  %call = tail call i32 @_ZN6Halide7Runtime8Internal8djb_hashEPKhm(i8* %cache_key, i64 %conv) #16
  %0 = and i32 %call, 255
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  %idxprom = zext i32 %0 to i64
  %arrayidx = getelementptr inbounds [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 %idxprom
  %entry3.0220 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 8, !tbaa !10
  %cmp.not221 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0220, null
  br i1 %cmp.not221, label %for.cond75.preheader, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %cmp16215 = icmp sgt i32 %tuple_count, 0
  %1 = sext i32 %tuple_count to i64
  br i1 %cmp16215, label %while.body.us, label %while.body

while.body.us:                                    ; preds = %while.body.lr.ph, %if.end73.us
  %entry3.0222.us = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry3.0.us, %if.end73.us ], [ %entry3.0220, %while.body.lr.ph ]
  %hash.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 6
  %2 = load i32, i32* %hash.us, align 8, !tbaa !253
  %cmp4.us = icmp eq i32 %2, %call
  br i1 %cmp4.us, label %land.lhs.true.us, label %if.end73.us

land.lhs.true.us:                                 ; preds = %while.body.us
  %key_size.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 4
  %3 = load i64, i64* %key_size.us, align 8, !tbaa !252
  %cmp6.us = icmp eq i64 %3, %conv
  br i1 %cmp6.us, label %land.lhs.true7.us, label %if.end73.us

land.lhs.true7.us:                                ; preds = %land.lhs.true.us
  %key.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 5
  %4 = load i8*, i8** %key.us, align 8, !tbaa !257
  %call9.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %4, i8* %cache_key, i64 %conv) #16
  br i1 %call9.us, label %land.lhs.true10.us, label %if.end73.us

land.lhs.true10.us:                               ; preds = %land.lhs.true7.us
  %computed_bounds11.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 10
  %5 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds11.us, align 8, !tbaa !256
  %call12.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %computed_bounds, %struct.halide_dimension_t* %5) #16
  br i1 %call12.us, label %land.lhs.true13.us, label %if.end73.us

land.lhs.true13.us:                               ; preds = %land.lhs.true10.us
  %tuple_count14.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 8
  %6 = load i32, i32* %tuple_count14.us, align 8, !tbaa !230
  %cmp15.us = icmp eq i32 %6, %tuple_count
  br i1 %cmp15.us, label %for.cond.preheader.us, label %if.end73.us

for.cond.preheader.us:                            ; preds = %land.lhs.true13.us
  %buf.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 11
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us, %for.cond.preheader.us
  %indvars.iv226.us = phi i64 [ 0, %for.cond.preheader.us ], [ %indvars.iv.next227.us, %for.body.us ]
  %arrayidx18.us = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv226.us
  %7 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx18.us, align 8, !tbaa !10
  %8 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf.us, align 8, !tbaa !232
  %dim.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %8, i64 %indvars.iv226.us, i32 6
  %9 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.us, align 8, !tbaa !176
  %call21.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %7, %struct.halide_dimension_t* %9) #16
  %indvars.iv.next227.us = add nuw nsw i64 %indvars.iv226.us, 1
  %cmp16.us = icmp slt i64 %indvars.iv.next227.us, %1
  %10 = and i1 %cmp16.us, %call21.us
  br i1 %10, label %for.body.us, label %for.cond.cleanup.us, !llvm.loop !276

for.cond.cleanup.us:                              ; preds = %for.body.us
  br i1 %call21.us, label %if.then23, label %if.end73.us

if.end73.us:                                      ; preds = %for.cond.cleanup.us, %land.lhs.true13.us, %land.lhs.true10.us, %land.lhs.true7.us, %land.lhs.true.us, %while.body.us
  %next.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 0
  %entry3.0.us = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next.us, align 8, !tbaa !10
  %cmp.not.us = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0.us, null
  br i1 %cmp.not.us, label %for.cond75.preheader, label %while.body.us, !llvm.loop !277

for.cond75.preheader:                             ; preds = %if.end73, %if.end73.us, %entry
  %cmp76210 = icmp sgt i32 %tuple_count, 0
  br i1 %cmp76210, label %for.body78.preheader, label %cleanup119

for.body78.preheader:                             ; preds = %for.cond75.preheader
  %wide.trip.count = zext i32 %tuple_count to i64
  br label %for.body78

while.body:                                       ; preds = %while.body.lr.ph, %if.end73
  %entry3.0222 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry3.0, %if.end73 ], [ %entry3.0220, %while.body.lr.ph ]
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 6
  %11 = load i32, i32* %hash, align 8, !tbaa !253
  %cmp4 = icmp eq i32 %11, %call
  br i1 %cmp4, label %land.lhs.true, label %if.end73

land.lhs.true:                                    ; preds = %while.body
  %key_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 4
  %12 = load i64, i64* %key_size, align 8, !tbaa !252
  %cmp6 = icmp eq i64 %12, %conv
  br i1 %cmp6, label %land.lhs.true7, label %if.end73

land.lhs.true7:                                   ; preds = %land.lhs.true
  %key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 5
  %13 = load i8*, i8** %key, align 8, !tbaa !257
  %call9 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %13, i8* %cache_key, i64 %conv) #16
  br i1 %call9, label %land.lhs.true10, label %if.end73

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %computed_bounds11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 10
  %14 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds11, align 8, !tbaa !256
  %call12 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %computed_bounds, %struct.halide_dimension_t* %14) #16
  br i1 %call12, label %land.lhs.true13, label %if.end73

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %tuple_count14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 8
  %15 = load i32, i32* %tuple_count14, align 8, !tbaa !230
  %cmp15 = icmp eq i32 %15, %tuple_count
  br i1 %cmp15, label %if.then23, label %if.end73

if.then23:                                        ; preds = %land.lhs.true13, %for.cond.cleanup.us
  %.us-phi = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry3.0222.us, %for.cond.cleanup.us ], [ %entry3.0222, %land.lhs.true13 ]
  %16 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  %cmp24.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, %16
  br i1 %cmp24.not, label %if.end57, label %do.body

do.body:                                          ; preds = %if.then23
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, i64 0, i32 1
  %17 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  %cmp26.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %17, null
  br i1 %cmp26.not, label %if.then27, label %do.end

if.then27:                                        ; preds = %do.body
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @.str.3.43, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %if.then27, %do.body
  %less_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, i64 0, i32 2
  %18 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !251
  %cmp28.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %18, null
  br i1 %cmp28.not, label %do.body33, label %if.then29

if.then29:                                        ; preds = %do.end
  %19 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  %more_recent32 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %18, i64 0, i32 1
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %19, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent32, align 8, !tbaa !268
  %.pr = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  br label %do.body41

do.body33:                                        ; preds = %do.end
  %20 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  %cmp34 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %20, %.us-phi
  br i1 %cmp34, label %do.end38, label %if.then35

if.then35:                                        ; preds = %do.body33
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.4.44, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end38

do.end38:                                         ; preds = %if.then35, %do.body33
  %21 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %21, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  br label %do.body41

do.body41:                                        ; preds = %do.end38, %if.then29
  %22 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %.pr, %if.then29 ], [ %21, %do.end38 ]
  %cmp43.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %22, null
  br i1 %cmp43.not, label %if.then44, label %do.end47

if.then44:                                        ; preds = %do.body41
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @.str.5.45, i64 0, i64 0)) #15
  tail call void @abort() #15
  %.pre = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  br label %do.end47

do.end47:                                         ; preds = %if.then44, %do.body41
  %23 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %.pre, %if.then44 ], [ %22, %do.body41 ]
  %24 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !251
  %less_recent50 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %23, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %24, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent50, align 8, !tbaa !251
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  %25 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %25, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !251
  %cmp53.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %25, null
  br i1 %cmp53.not, label %if.end56, label %if.then54

if.then54:                                        ; preds = %do.end47
  %more_recent55 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %25, i64 0, i32 1
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent55, align 8, !tbaa !268
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %do.end47
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then23
  br i1 %cmp16215, label %for.body62.lr.ph, label %cleanup119.loopexit223

for.body62.lr.ph:                                 ; preds = %if.end57
  %buf66 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, i64 0, i32 11
  %wide.trip.count230 = zext i32 %tuple_count to i64
  %26 = add nsw i64 %wide.trip.count230, -1
  %xtraiter = and i64 %wide.trip.count230, 3
  %27 = icmp ult i64 %26, 3
  br i1 %27, label %cleanup119.loopexit223.loopexit.unr-lcssa, label %for.body62.lr.ph.new

for.body62.lr.ph.new:                             ; preds = %for.body62.lr.ph
  %unroll_iter = and i64 %wide.trip.count230, 4294967292
  br label %for.body62

for.body62:                                       ; preds = %for.body62, %for.body62.lr.ph.new
  %indvars.iv228 = phi i64 [ 0, %for.body62.lr.ph.new ], [ %indvars.iv.next229.3, %for.body62 ]
  %niter = phi i64 [ %unroll_iter, %for.body62.lr.ph.new ], [ %niter.nsub.3, %for.body62 ]
  %arrayidx65 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv228
  %28 = bitcast %struct.halide_buffer_t** %arrayidx65 to i8**
  %29 = load i8*, i8** %28, align 8, !tbaa !10
  %30 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf66, align 8, !tbaa !232
  %arrayidx68 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %30, i64 %indvars.iv228
  %31 = bitcast %struct.halide_buffer_t* %arrayidx68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %29, i8* nonnull align 8 dereferenceable(56) %31, i64 56, i1 false), !tbaa.struct !263
  %indvars.iv.next229 = or i64 %indvars.iv228, 1
  %arrayidx65.1 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv.next229
  %32 = bitcast %struct.halide_buffer_t** %arrayidx65.1 to i8**
  %33 = load i8*, i8** %32, align 8, !tbaa !10
  %34 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf66, align 8, !tbaa !232
  %arrayidx68.1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %34, i64 %indvars.iv.next229
  %35 = bitcast %struct.halide_buffer_t* %arrayidx68.1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %33, i8* nonnull align 8 dereferenceable(56) %35, i64 56, i1 false), !tbaa.struct !263
  %indvars.iv.next229.1 = or i64 %indvars.iv228, 2
  %arrayidx65.2 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv.next229.1
  %36 = bitcast %struct.halide_buffer_t** %arrayidx65.2 to i8**
  %37 = load i8*, i8** %36, align 8, !tbaa !10
  %38 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf66, align 8, !tbaa !232
  %arrayidx68.2 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %38, i64 %indvars.iv.next229.1
  %39 = bitcast %struct.halide_buffer_t* %arrayidx68.2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %37, i8* nonnull align 8 dereferenceable(56) %39, i64 56, i1 false), !tbaa.struct !263
  %indvars.iv.next229.2 = or i64 %indvars.iv228, 3
  %arrayidx65.3 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv.next229.2
  %40 = bitcast %struct.halide_buffer_t** %arrayidx65.3 to i8**
  %41 = load i8*, i8** %40, align 8, !tbaa !10
  %42 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf66, align 8, !tbaa !232
  %arrayidx68.3 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %42, i64 %indvars.iv.next229.2
  %43 = bitcast %struct.halide_buffer_t* %arrayidx68.3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %41, i8* nonnull align 8 dereferenceable(56) %43, i64 56, i1 false), !tbaa.struct !263
  %indvars.iv.next229.3 = add nuw nsw i64 %indvars.iv228, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %cleanup119.loopexit223.loopexit.unr-lcssa, label %for.body62, !llvm.loop !278

if.end73:                                         ; preds = %land.lhs.true13, %land.lhs.true10, %land.lhs.true7, %land.lhs.true, %while.body
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 0
  %entry3.0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next, align 8, !tbaa !10
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0, null
  br i1 %cmp.not, label %for.cond75.preheader, label %while.body, !llvm.loop !277

for.body78:                                       ; preds = %for.inc114, %for.body78.preheader
  %indvars.iv = phi i64 [ 0, %for.body78.preheader ], [ %indvars.iv.next, %for.inc114 ]
  %arrayidx81 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv
  %44 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx81, align 8, !tbaa !10
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %44, i64 0, i32 5
  %45 = load i32, i32* %dimensions.i.i, align 4, !tbaa !175
  %cmp19.i.i = icmp sgt i32 %45, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %for.body78
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %44, i64 0, i32 6
  %46 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !176
  %wide.trip.count.i.i = zext i32 %45 to i64
  %min.iters.check53 = icmp ult i32 %45, 17
  br i1 %min.iters.check53, label %for.body.i.i.preheader, label %vector.ph54

vector.ph54:                                      ; preds = %for.body.lr.ph.i.i
  %n.mod.vf55 = and i64 %wide.trip.count.i.i, 15
  %47 = icmp eq i64 %n.mod.vf55, 0
  %48 = select i1 %47, i64 16, i64 %n.mod.vf55
  %n.vec56 = sub nsw i64 %wide.trip.count.i.i, %48
  br label %vector.body52

vector.body52:                                    ; preds = %vector.body52, %vector.ph54
  %index57 = phi i64 [ 0, %vector.ph54 ], [ %index.next58, %vector.body52 ]
  %vec.ind61 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph54 ], [ %vec.ind.next66, %vector.body52 ]
  %vec.phi67 = phi <4 x i64> [ zeroinitializer, %vector.ph54 ], [ %predphi83, %vector.body52 ]
  %vec.phi68 = phi <4 x i64> [ zeroinitializer, %vector.ph54 ], [ %predphi84, %vector.body52 ]
  %vec.phi69 = phi <4 x i64> [ zeroinitializer, %vector.ph54 ], [ %predphi85, %vector.body52 ]
  %vec.phi70 = phi <4 x i64> [ zeroinitializer, %vector.ph54 ], [ %predphi86, %vector.body52 ]
  %step.add62 = add <4 x i64> %vec.ind61, <i64 4, i64 4, i64 4, i64 4>
  %step.add63 = add <4 x i64> %vec.ind61, <i64 8, i64 8, i64 8, i64 8>
  %step.add64 = add <4 x i64> %vec.ind61, <i64 12, i64 12, i64 12, i64 12>
  %49 = or i64 %index57, 4
  %50 = or i64 %index57, 8
  %51 = or i64 %index57, 12
  %52 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %index57, i32 2
  %53 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %49, i32 2
  %54 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %50, i32 2
  %55 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %51, i32 2
  %56 = bitcast i32* %52 to <16 x i32>*
  %57 = bitcast i32* %53 to <16 x i32>*
  %58 = bitcast i32* %54 to <16 x i32>*
  %59 = bitcast i32* %55 to <16 x i32>*
  %wide.vec71 = load <16 x i32>, <16 x i32>* %56, align 4, !tbaa !182
  %wide.vec72 = load <16 x i32>, <16 x i32>* %57, align 4, !tbaa !182
  %wide.vec73 = load <16 x i32>, <16 x i32>* %58, align 4, !tbaa !182
  %wide.vec74 = load <16 x i32>, <16 x i32>* %59, align 4, !tbaa !182
  %strided.vec75 = shufflevector <16 x i32> %wide.vec71, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec76 = shufflevector <16 x i32> %wide.vec72, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec77 = shufflevector <16 x i32> %wide.vec73, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec78 = shufflevector <16 x i32> %wide.vec74, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %60 = icmp sgt <4 x i32> %strided.vec75, zeroinitializer
  %61 = icmp sgt <4 x i32> %strided.vec76, zeroinitializer
  %62 = icmp sgt <4 x i32> %strided.vec77, zeroinitializer
  %63 = icmp sgt <4 x i32> %strided.vec78, zeroinitializer
  %64 = zext <4 x i32> %strided.vec75 to <4 x i64>
  %65 = zext <4 x i32> %strided.vec76 to <4 x i64>
  %66 = zext <4 x i32> %strided.vec77 to <4 x i64>
  %67 = zext <4 x i32> %strided.vec78 to <4 x i64>
  %68 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, <4 x i64> %vec.ind61, i32 1
  %69 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, <4 x i64> %step.add62, i32 1
  %70 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, <4 x i64> %step.add63, i32 1
  %71 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, <4 x i64> %step.add64, i32 1
  %wide.masked.gather79 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %68, i32 4, <4 x i1> %60, <4 x i32> undef), !tbaa !178
  %wide.masked.gather80 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %69, i32 4, <4 x i1> %61, <4 x i32> undef), !tbaa !178
  %wide.masked.gather81 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %70, i32 4, <4 x i1> %62, <4 x i32> undef), !tbaa !178
  %wide.masked.gather82 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %71, i32 4, <4 x i1> %63, <4 x i32> undef), !tbaa !178
  %72 = add nsw <4 x i32> %wide.masked.gather79, <i32 -1, i32 -1, i32 -1, i32 -1>
  %73 = add nsw <4 x i32> %wide.masked.gather80, <i32 -1, i32 -1, i32 -1, i32 -1>
  %74 = add nsw <4 x i32> %wide.masked.gather81, <i32 -1, i32 -1, i32 -1, i32 -1>
  %75 = add nsw <4 x i32> %wide.masked.gather82, <i32 -1, i32 -1, i32 -1, i32 -1>
  %76 = sext <4 x i32> %72 to <4 x i64>
  %77 = sext <4 x i32> %73 to <4 x i64>
  %78 = sext <4 x i32> %74 to <4 x i64>
  %79 = sext <4 x i32> %75 to <4 x i64>
  %80 = mul nsw <4 x i64> %76, %64
  %81 = mul nsw <4 x i64> %77, %65
  %82 = mul nsw <4 x i64> %78, %66
  %83 = mul nsw <4 x i64> %79, %67
  %84 = select <4 x i1> %60, <4 x i64> %80, <4 x i64> zeroinitializer
  %predphi83 = add <4 x i64> %vec.phi67, %84
  %85 = select <4 x i1> %61, <4 x i64> %81, <4 x i64> zeroinitializer
  %predphi84 = add <4 x i64> %vec.phi68, %85
  %86 = select <4 x i1> %62, <4 x i64> %82, <4 x i64> zeroinitializer
  %predphi85 = add <4 x i64> %vec.phi69, %86
  %87 = select <4 x i1> %63, <4 x i64> %83, <4 x i64> zeroinitializer
  %predphi86 = add <4 x i64> %vec.phi70, %87
  %index.next58 = add i64 %index57, 16
  %vec.ind.next66 = add <4 x i64> %vec.ind61, <i64 16, i64 16, i64 16, i64 16>
  %88 = icmp eq i64 %index.next58, %n.vec56
  br i1 %88, label %middle.block50, label %vector.body52, !llvm.loop !279

middle.block50:                                   ; preds = %vector.body52
  %bin.rdx87 = add <4 x i64> %predphi84, %predphi83
  %bin.rdx88 = add <4 x i64> %predphi85, %bin.rdx87
  %bin.rdx89 = add <4 x i64> %predphi86, %bin.rdx88
  %89 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx89)
  br label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %middle.block50, %for.body.lr.ph.i.i
  %indvars.iv.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %n.vec56, %middle.block50 ]
  %index.021.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %89, %middle.block50 ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %if.end.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %index.021.i.i = phi i64 [ %index.1.i.i, %if.end.i.i ], [ %index.021.i.i.ph, %for.body.i.i.preheader ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %indvars.iv.i.i, i32 2
  %90 = load i32, i32* %stride2.i.i, align 4, !tbaa !182
  %cmp3.i.i = icmp sgt i32 %90, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %90 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %indvars.iv.i.i, i32 1
  %91 = load i32, i32* %extent.i.i, align 4, !tbaa !178
  %sub.i.i = add nsw i32 %91, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i.preheader, label %for.body.i.i, !llvm.loop !280

for.body.i13.i.preheader:                         ; preds = %if.end.i.i
  %min.iters.check = icmp ult i32 %45, 17
  br i1 %min.iters.check, label %for.body.i13.i.preheader91, label %vector.ph

vector.ph:                                        ; preds = %for.body.i13.i.preheader
  %n.mod.vf = and i64 %wide.trip.count.i.i, 15
  %92 = icmp eq i64 %n.mod.vf, 0
  %93 = select i1 %92, i64 16, i64 %n.mod.vf
  %n.vec = sub nsw i64 %wide.trip.count.i.i, %93
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.ind = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %vec.phi = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi, %vector.body ]
  %vec.phi33 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi45, %vector.body ]
  %vec.phi34 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi46, %vector.body ]
  %vec.phi35 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi47, %vector.body ]
  %step.add = add <4 x i64> %vec.ind, <i64 4, i64 4, i64 4, i64 4>
  %step.add30 = add <4 x i64> %vec.ind, <i64 8, i64 8, i64 8, i64 8>
  %step.add31 = add <4 x i64> %vec.ind, <i64 12, i64 12, i64 12, i64 12>
  %94 = or i64 %index, 4
  %95 = or i64 %index, 8
  %96 = or i64 %index, 12
  %97 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %index, i32 2
  %98 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %94, i32 2
  %99 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %95, i32 2
  %100 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %96, i32 2
  %101 = bitcast i32* %97 to <16 x i32>*
  %102 = bitcast i32* %98 to <16 x i32>*
  %103 = bitcast i32* %99 to <16 x i32>*
  %104 = bitcast i32* %100 to <16 x i32>*
  %wide.vec = load <16 x i32>, <16 x i32>* %101, align 4, !tbaa !182
  %wide.vec36 = load <16 x i32>, <16 x i32>* %102, align 4, !tbaa !182
  %wide.vec37 = load <16 x i32>, <16 x i32>* %103, align 4, !tbaa !182
  %wide.vec38 = load <16 x i32>, <16 x i32>* %104, align 4, !tbaa !182
  %strided.vec = shufflevector <16 x i32> %wide.vec, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec39 = shufflevector <16 x i32> %wide.vec36, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec40 = shufflevector <16 x i32> %wide.vec37, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec41 = shufflevector <16 x i32> %wide.vec38, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %105 = icmp slt <4 x i32> %strided.vec, zeroinitializer
  %106 = icmp slt <4 x i32> %strided.vec39, zeroinitializer
  %107 = icmp slt <4 x i32> %strided.vec40, zeroinitializer
  %108 = icmp slt <4 x i32> %strided.vec41, zeroinitializer
  %109 = sext <4 x i32> %strided.vec to <4 x i64>
  %110 = sext <4 x i32> %strided.vec39 to <4 x i64>
  %111 = sext <4 x i32> %strided.vec40 to <4 x i64>
  %112 = sext <4 x i32> %strided.vec41 to <4 x i64>
  %113 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, <4 x i64> %vec.ind, i32 1
  %114 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, <4 x i64> %step.add, i32 1
  %115 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, <4 x i64> %step.add30, i32 1
  %116 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, <4 x i64> %step.add31, i32 1
  %wide.masked.gather = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %113, i32 4, <4 x i1> %105, <4 x i32> undef), !tbaa !178
  %wide.masked.gather42 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %114, i32 4, <4 x i1> %106, <4 x i32> undef), !tbaa !178
  %wide.masked.gather43 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %115, i32 4, <4 x i1> %107, <4 x i32> undef), !tbaa !178
  %wide.masked.gather44 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %116, i32 4, <4 x i1> %108, <4 x i32> undef), !tbaa !178
  %117 = add nsw <4 x i32> %wide.masked.gather, <i32 -1, i32 -1, i32 -1, i32 -1>
  %118 = add nsw <4 x i32> %wide.masked.gather42, <i32 -1, i32 -1, i32 -1, i32 -1>
  %119 = add nsw <4 x i32> %wide.masked.gather43, <i32 -1, i32 -1, i32 -1, i32 -1>
  %120 = add nsw <4 x i32> %wide.masked.gather44, <i32 -1, i32 -1, i32 -1, i32 -1>
  %121 = sext <4 x i32> %117 to <4 x i64>
  %122 = sext <4 x i32> %118 to <4 x i64>
  %123 = sext <4 x i32> %119 to <4 x i64>
  %124 = sext <4 x i32> %120 to <4 x i64>
  %125 = mul nsw <4 x i64> %121, %109
  %126 = mul nsw <4 x i64> %122, %110
  %127 = mul nsw <4 x i64> %123, %111
  %128 = mul nsw <4 x i64> %124, %112
  %129 = select <4 x i1> %105, <4 x i64> %125, <4 x i64> zeroinitializer
  %predphi = add <4 x i64> %vec.phi, %129
  %130 = select <4 x i1> %106, <4 x i64> %126, <4 x i64> zeroinitializer
  %predphi45 = add <4 x i64> %vec.phi33, %130
  %131 = select <4 x i1> %107, <4 x i64> %127, <4 x i64> zeroinitializer
  %predphi46 = add <4 x i64> %vec.phi34, %131
  %132 = select <4 x i1> %108, <4 x i64> %128, <4 x i64> zeroinitializer
  %predphi47 = add <4 x i64> %vec.phi35, %132
  %index.next = add i64 %index, 16
  %vec.ind.next = add <4 x i64> %vec.ind, <i64 16, i64 16, i64 16, i64 16>
  %133 = icmp eq i64 %index.next, %n.vec
  br i1 %133, label %middle.block, label %vector.body, !llvm.loop !281

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add <4 x i64> %predphi45, %predphi
  %bin.rdx48 = add <4 x i64> %predphi46, %bin.rdx
  %bin.rdx49 = add <4 x i64> %predphi47, %bin.rdx48
  %134 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx49)
  br label %for.body.i13.i.preheader91

for.body.i13.i.preheader91:                       ; preds = %middle.block, %for.body.i13.i.preheader
  %indvars.iv.i10.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %n.vec, %middle.block ]
  %index.018.i.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %134, %middle.block ]
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %for.body.i13.i.preheader91, %if.end.i24.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ %indvars.iv.i10.i.ph, %for.body.i13.i.preheader91 ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ %index.018.i.i.ph, %for.body.i13.i.preheader91 ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %indvars.iv.i10.i, i32 2
  %135 = load i32, i32* %stride2.i11.i, align 4, !tbaa !182
  %cmp3.i12.i = icmp slt i32 %135, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %135 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %46, i64 %indvars.iv.i10.i, i32 1
  %136 = load i32, i32* %extent.i15.i, align 4, !tbaa !178
  %sub.i16.i = add nsw i32 %136, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !282

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i
  %add8.i.i = add nsw i64 %index.1.i.i, 1
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, %for.body78
  %add8.i27.i = phi i64 [ 1, %for.body78 ], [ %add8.i.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %index.0.lcssa.i9.i = phi i64 [ 0, %for.body78 ], [ %index.1.i21.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i = sub nsw i64 %add8.i27.i, %index.0.lcssa.i9.i
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %44, i64 0, i32 4, i32 1
  %137 = load i8, i8* %bits.i.i, align 1, !tbaa !136
  %conv.i.i = zext i8 %137 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i4.i, 3
  %mul.i = mul i64 %div.i.i, %sub.i
  %add84 = add i64 %mul.i, 64
  %call85 = tail call i8* @halide_malloc(i8* %user_context, i64 %add84) #15
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %44, i64 0, i32 2
  store i8* %call85, i8** %host, align 8, !tbaa !172
  %cmp87 = icmp eq i8* %call85, null
  br i1 %cmp87, label %for.cond89.preheader, label %for.inc114

for.cond89.preheader:                             ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %cmp90208.not = icmp eq i64 %indvars.iv, 0
  br i1 %cmp90208.not, label %cleanup119, label %for.body92

for.body92:                                       ; preds = %for.cond89.preheader, %for.body92
  %indvars.iv224 = phi i64 [ %indvars.iv.next225, %for.body92 ], [ %indvars.iv, %for.cond89.preheader ]
  %sub = add nuw nsw i64 %indvars.iv224, 4294967295
  %138 = and i64 %sub, 4294967295
  %arrayidx94 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %138
  %139 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx94, align 8, !tbaa !10
  %host95 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %139, i64 0, i32 2
  %140 = load i8*, i8** %host95, align 8, !tbaa !172
  %call96 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %140) #16
  %141 = bitcast %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call96 to i8*
  tail call void @halide_free(i8* %user_context, i8* %141) #15
  %142 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx94, align 8, !tbaa !10
  %host100 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %142, i64 0, i32 2
  store i8* null, i8** %host100, align 8, !tbaa !172
  %143 = icmp sgt i64 %indvars.iv224, 1
  %indvars.iv.next225 = add nsw i64 %indvars.iv224, -1
  br i1 %143, label %for.body92, label %cleanup119, !llvm.loop !283

for.inc114:                                       ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %add.ptr = getelementptr inbounds i8, i8* %call85, i64 64
  store i8* %add.ptr, i8** %host, align 8, !tbaa !172
  %call108 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* nonnull %add.ptr) #16
  %hash109 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call108, i64 0, i32 1
  store i32 %call, i32* %hash109, align 8, !tbaa !284
  %entry110 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call108, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %entry110, align 8, !tbaa !286
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup119, label %for.body78, !llvm.loop !287

cleanup119.loopexit223.loopexit.unr-lcssa:        ; preds = %for.body62, %for.body62.lr.ph
  %indvars.iv228.unr = phi i64 [ 0, %for.body62.lr.ph ], [ %indvars.iv.next229.3, %for.body62 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %cleanup119.loopexit223, label %for.body62.epil

for.body62.epil:                                  ; preds = %cleanup119.loopexit223.loopexit.unr-lcssa, %for.body62.epil
  %indvars.iv228.epil = phi i64 [ %indvars.iv.next229.epil, %for.body62.epil ], [ %indvars.iv228.unr, %cleanup119.loopexit223.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body62.epil ], [ %xtraiter, %cleanup119.loopexit223.loopexit.unr-lcssa ]
  %arrayidx65.epil = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv228.epil
  %144 = bitcast %struct.halide_buffer_t** %arrayidx65.epil to i8**
  %145 = load i8*, i8** %144, align 8, !tbaa !10
  %146 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf66, align 8, !tbaa !232
  %arrayidx68.epil = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %146, i64 %indvars.iv228.epil
  %147 = bitcast %struct.halide_buffer_t* %arrayidx68.epil to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %145, i8* nonnull align 8 dereferenceable(56) %147, i64 56, i1 false), !tbaa.struct !263
  %indvars.iv.next229.epil = add nuw nsw i64 %indvars.iv228.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp.not, label %cleanup119.loopexit223, label %for.body62.epil, !llvm.loop !288

cleanup119.loopexit223:                           ; preds = %cleanup119.loopexit223.loopexit.unr-lcssa, %for.body62.epil, %if.end57
  %in_use_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, i64 0, i32 7
  %148 = load i32, i32* %in_use_count, align 4, !tbaa !254
  %add = add i32 %148, %tuple_count
  store i32 %add, i32* %in_use_count, align 4, !tbaa !254
  br label %cleanup119

cleanup119:                                       ; preds = %for.inc114, %for.body92, %cleanup119.loopexit223, %for.cond89.preheader, %for.cond75.preheader
  %retval.6 = phi i32 [ 1, %for.cond75.preheader ], [ 0, %cleanup119.loopexit223 ], [ -1, %for.cond89.preheader ], [ -1, %for.body92 ], [ 1, %for.inc114 ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  ret i32 %retval.6
}

; Function Attrs: nounwind
define weak i32 @halide_memoization_cache_store(i8* %user_context, i8* %cache_key, i32 %size, %struct.halide_buffer_t* %computed_bounds, i32 %tuple_count, %struct.halide_buffer_t** %tuple_buffers, i1 zeroext %has_eviction_key, i64 %eviction_key) local_unnamed_addr #4 {
entry:
  %0 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, align 8, !tbaa !10
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %0, i64 0, i32 2
  %1 = load i8*, i8** %host, align 8, !tbaa !172
  %call = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %1) #16
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call, i64 0, i32 1
  %2 = load i32, i32* %hash, align 8, !tbaa !284
  %3 = and i32 %2, 255
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  %idxprom = zext i32 %3 to i64
  %arrayidx7 = getelementptr inbounds [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 %idxprom
  %entry6.0228 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx7, align 8, !tbaa !10
  %cmp.not229 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0228, null
  br i1 %cmp.not229, label %for.cond61.preheader, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %conv10 = sext i32 %size to i64
  %cmp22221 = icmp sgt i32 %tuple_count, 0
  br i1 %cmp22221, label %while.body.us.preheader, label %while.body

while.body.us.preheader:                          ; preds = %while.body.lr.ph
  %4 = zext i32 %tuple_count to i64
  br label %while.body.us

while.body.us:                                    ; preds = %if.end59.us, %while.body.us.preheader
  %entry6.0230.us = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry6.0.us, %if.end59.us ], [ %entry6.0228, %while.body.us.preheader ]
  %hash8.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 6
  %5 = load i32, i32* %hash8.us, align 8, !tbaa !253
  %cmp9.us = icmp eq i32 %5, %2
  br i1 %cmp9.us, label %land.lhs.true.us, label %if.end59.us

land.lhs.true.us:                                 ; preds = %while.body.us
  %key_size.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 4
  %6 = load i64, i64* %key_size.us, align 8, !tbaa !252
  %cmp11.us = icmp eq i64 %6, %conv10
  br i1 %cmp11.us, label %land.lhs.true12.us, label %if.end59.us

land.lhs.true12.us:                               ; preds = %land.lhs.true.us
  %key.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 5
  %7 = load i8*, i8** %key.us, align 8, !tbaa !257
  %call14.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %7, i8* %cache_key, i64 %conv10) #16
  br i1 %call14.us, label %land.lhs.true15.us, label %if.end59.us

land.lhs.true15.us:                               ; preds = %land.lhs.true12.us
  %computed_bounds16.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 10
  %8 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds16.us, align 8, !tbaa !256
  %call17.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %computed_bounds, %struct.halide_dimension_t* %8) #16
  br i1 %call17.us, label %land.lhs.true18.us, label %if.end59.us

land.lhs.true18.us:                               ; preds = %land.lhs.true15.us
  %tuple_count19.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 8
  %9 = load i32, i32* %tuple_count19.us, align 8, !tbaa !230
  %cmp20.us = icmp eq i32 %9, %tuple_count
  br i1 %cmp20.us, label %for.body.lr.ph.us, label %if.end59.us

for.cond.cleanup.us:                              ; preds = %for.body.us
  br i1 %call30.us, label %do.body.us, label %if.end59.us

do.body.us:                                       ; preds = %for.cond.cleanup.us
  %10 = and i8 %spec.select.us, 1
  %tobool41.not.us = icmp eq i8 %10, 0
  br i1 %tobool41.not.us, label %if.then42.us, label %for.body48.us.preheader

for.body48.us.preheader:                          ; preds = %if.then42.us, %do.body.us
  br label %for.body48.us

if.then42.us:                                     ; preds = %do.body.us
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.9.46, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %for.body48.us.preheader

if.end59.us:                                      ; preds = %for.cond.cleanup.us, %land.lhs.true18.us, %land.lhs.true15.us, %land.lhs.true12.us, %land.lhs.true.us, %while.body.us
  %next.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 0
  %entry6.0.us = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next.us, align 8, !tbaa !10
  %cmp.not.us = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0.us, null
  br i1 %cmp.not.us, label %for.cond61.preheader, label %while.body.us, !llvm.loop !289

for.body48.us:                                    ; preds = %for.body48.us.preheader, %for.body48.us
  %indvars.iv244 = phi i64 [ %indvars.iv.next245, %for.body48.us ], [ 0, %for.body48.us.preheader ]
  %arrayidx50.us = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv244
  %11 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx50.us, align 8, !tbaa !10
  %host51.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %11, i64 0, i32 2
  %12 = load i8*, i8** %host51.us, align 8, !tbaa !172
  %call52.us = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %12) #16
  %entry53.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call52.us, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %entry53.us, align 8, !tbaa !286
  %indvars.iv.next245 = add nuw nsw i64 %indvars.iv244, 1
  %exitcond247.not = icmp eq i64 %indvars.iv.next245, %4
  br i1 %exitcond247.not, label %cleanup132, label %for.body48.us, !llvm.loop !290

for.body.us:                                      ; preds = %for.body.lr.ph.us, %for.body.us
  %13 = phi %struct.halide_buffer_t* [ %.pre, %for.body.lr.ph.us ], [ %16, %for.body.us ]
  %indvars.iv242 = phi i64 [ 0, %for.body.lr.ph.us ], [ %indvars.iv.next243, %for.body.us ]
  %no_host_pointers_equal.0222.us = phi i8 [ 1, %for.body.lr.ph.us ], [ %spec.select.us, %for.body.us ]
  %arrayidx24.us = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv242
  %14 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx24.us, align 8, !tbaa !10
  %dim.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %13, i64 %indvars.iv242, i32 6
  %15 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.us, align 8, !tbaa !176
  %call30.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %14, %struct.halide_dimension_t* %15) #16
  %16 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf27.us, align 8, !tbaa !232
  %host35.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %16, i64 %indvars.iv242, i32 2
  %17 = load i8*, i8** %host35.us, align 8, !tbaa !172
  %host36.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %14, i64 0, i32 2
  %18 = load i8*, i8** %host36.us, align 8, !tbaa !172
  %cmp37.us = icmp eq i8* %17, %18
  %spec.select.us = select i1 %cmp37.us, i8 0, i8 %no_host_pointers_equal.0222.us
  %indvars.iv.next243 = add nuw nsw i64 %indvars.iv242, 1
  %cmp22.us = icmp ult i64 %indvars.iv.next243, %4
  %19 = and i1 %cmp22.us, %call30.us
  br i1 %19, label %for.body.us, label %for.cond.cleanup.us, !llvm.loop !291

for.body.lr.ph.us:                                ; preds = %land.lhs.true18.us
  %buf27.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 11
  %.pre = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf27.us, align 8, !tbaa !232
  br label %for.body.us

for.cond61.preheader:                             ; preds = %if.end59, %if.end59.us, %entry
  %cmp62218 = icmp sgt i32 %tuple_count, 0
  br i1 %cmp62218, label %for.body64.preheader, label %for.cond.cleanup63

for.body64.preheader:                             ; preds = %for.cond61.preheader
  %wide.trip.count240 = zext i32 %tuple_count to i64
  br label %for.body64

while.body:                                       ; preds = %while.body.lr.ph, %if.end59
  %entry6.0230 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry6.0, %if.end59 ], [ %entry6.0228, %while.body.lr.ph ]
  %hash8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 6
  %20 = load i32, i32* %hash8, align 8, !tbaa !253
  %cmp9 = icmp eq i32 %20, %2
  br i1 %cmp9, label %land.lhs.true, label %if.end59

land.lhs.true:                                    ; preds = %while.body
  %key_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 4
  %21 = load i64, i64* %key_size, align 8, !tbaa !252
  %cmp11 = icmp eq i64 %21, %conv10
  br i1 %cmp11, label %land.lhs.true12, label %if.end59

land.lhs.true12:                                  ; preds = %land.lhs.true
  %key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 5
  %22 = load i8*, i8** %key, align 8, !tbaa !257
  %call14 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %22, i8* %cache_key, i64 %conv10) #16
  br i1 %call14, label %land.lhs.true15, label %if.end59

land.lhs.true15:                                  ; preds = %land.lhs.true12
  %computed_bounds16 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 10
  %23 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds16, align 8, !tbaa !256
  %call17 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %computed_bounds, %struct.halide_dimension_t* %23) #16
  br i1 %call17, label %land.lhs.true18, label %if.end59

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %tuple_count19 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 8
  %24 = load i32, i32* %tuple_count19, align 8, !tbaa !230
  %cmp20 = icmp eq i32 %24, %tuple_count
  br i1 %cmp20, label %cleanup132, label %if.end59

if.end59:                                         ; preds = %land.lhs.true18, %land.lhs.true15, %land.lhs.true12, %land.lhs.true, %while.body
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 0
  %entry6.0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next, align 8, !tbaa !10
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0, null
  br i1 %cmp.not, label %for.cond61.preheader, label %while.body, !llvm.loop !289

for.cond.cleanup63:                               ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %for.cond61.preheader
  %added_size.0.lcssa = phi i64 [ 0, %for.cond61.preheader ], [ %add, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %25 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  %add73 = add i64 %25, %added_size.0.lcssa
  store i64 %add73, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  tail call void @_ZN6Halide7Runtime8Internal11prune_cacheEv() #16
  %call74 = tail call i8* @halide_malloc(i8* null, i64 96) #15
  %tobool75.not = icmp eq i8* %call74, null
  br i1 %tobool75.not, label %if.then83, label %if.then76

for.body64:                                       ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %for.body64.preheader
  %indvars.iv238 = phi i64 [ 0, %for.body64.preheader ], [ %indvars.iv.next239, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %added_size.0219 = phi i64 [ 0, %for.body64.preheader ], [ %add, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %arrayidx67 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv238
  %26 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx67, align 8, !tbaa !10
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %26, i64 0, i32 5
  %27 = load i32, i32* %dimensions.i.i, align 4, !tbaa !175
  %cmp19.i.i = icmp sgt i32 %27, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %for.body64
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %26, i64 0, i32 6
  %28 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !176
  %wide.trip.count.i.i = zext i32 %27 to i64
  %min.iters.check39 = icmp ult i32 %27, 17
  br i1 %min.iters.check39, label %for.body.i.i.preheader, label %vector.ph40

vector.ph40:                                      ; preds = %for.body.lr.ph.i.i
  %n.mod.vf41 = and i64 %wide.trip.count.i.i, 15
  %29 = icmp eq i64 %n.mod.vf41, 0
  %30 = select i1 %29, i64 16, i64 %n.mod.vf41
  %n.vec42 = sub nsw i64 %wide.trip.count.i.i, %30
  br label %vector.body38

vector.body38:                                    ; preds = %vector.body38, %vector.ph40
  %index43 = phi i64 [ 0, %vector.ph40 ], [ %index.next44, %vector.body38 ]
  %vec.ind47 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph40 ], [ %vec.ind.next52, %vector.body38 ]
  %vec.phi53 = phi <4 x i64> [ zeroinitializer, %vector.ph40 ], [ %predphi69, %vector.body38 ]
  %vec.phi54 = phi <4 x i64> [ zeroinitializer, %vector.ph40 ], [ %predphi70, %vector.body38 ]
  %vec.phi55 = phi <4 x i64> [ zeroinitializer, %vector.ph40 ], [ %predphi71, %vector.body38 ]
  %vec.phi56 = phi <4 x i64> [ zeroinitializer, %vector.ph40 ], [ %predphi72, %vector.body38 ]
  %step.add48 = add <4 x i64> %vec.ind47, <i64 4, i64 4, i64 4, i64 4>
  %step.add49 = add <4 x i64> %vec.ind47, <i64 8, i64 8, i64 8, i64 8>
  %step.add50 = add <4 x i64> %vec.ind47, <i64 12, i64 12, i64 12, i64 12>
  %31 = or i64 %index43, 4
  %32 = or i64 %index43, 8
  %33 = or i64 %index43, 12
  %34 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %index43, i32 2
  %35 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %31, i32 2
  %36 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %32, i32 2
  %37 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %33, i32 2
  %38 = bitcast i32* %34 to <16 x i32>*
  %39 = bitcast i32* %35 to <16 x i32>*
  %40 = bitcast i32* %36 to <16 x i32>*
  %41 = bitcast i32* %37 to <16 x i32>*
  %wide.vec57 = load <16 x i32>, <16 x i32>* %38, align 4, !tbaa !182
  %wide.vec58 = load <16 x i32>, <16 x i32>* %39, align 4, !tbaa !182
  %wide.vec59 = load <16 x i32>, <16 x i32>* %40, align 4, !tbaa !182
  %wide.vec60 = load <16 x i32>, <16 x i32>* %41, align 4, !tbaa !182
  %strided.vec61 = shufflevector <16 x i32> %wide.vec57, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec62 = shufflevector <16 x i32> %wide.vec58, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec63 = shufflevector <16 x i32> %wide.vec59, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec64 = shufflevector <16 x i32> %wide.vec60, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %42 = icmp sgt <4 x i32> %strided.vec61, zeroinitializer
  %43 = icmp sgt <4 x i32> %strided.vec62, zeroinitializer
  %44 = icmp sgt <4 x i32> %strided.vec63, zeroinitializer
  %45 = icmp sgt <4 x i32> %strided.vec64, zeroinitializer
  %46 = zext <4 x i32> %strided.vec61 to <4 x i64>
  %47 = zext <4 x i32> %strided.vec62 to <4 x i64>
  %48 = zext <4 x i32> %strided.vec63 to <4 x i64>
  %49 = zext <4 x i32> %strided.vec64 to <4 x i64>
  %50 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, <4 x i64> %vec.ind47, i32 1
  %51 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, <4 x i64> %step.add48, i32 1
  %52 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, <4 x i64> %step.add49, i32 1
  %53 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, <4 x i64> %step.add50, i32 1
  %wide.masked.gather65 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %50, i32 4, <4 x i1> %42, <4 x i32> undef), !tbaa !178
  %wide.masked.gather66 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %51, i32 4, <4 x i1> %43, <4 x i32> undef), !tbaa !178
  %wide.masked.gather67 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %52, i32 4, <4 x i1> %44, <4 x i32> undef), !tbaa !178
  %wide.masked.gather68 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %53, i32 4, <4 x i1> %45, <4 x i32> undef), !tbaa !178
  %54 = add nsw <4 x i32> %wide.masked.gather65, <i32 -1, i32 -1, i32 -1, i32 -1>
  %55 = add nsw <4 x i32> %wide.masked.gather66, <i32 -1, i32 -1, i32 -1, i32 -1>
  %56 = add nsw <4 x i32> %wide.masked.gather67, <i32 -1, i32 -1, i32 -1, i32 -1>
  %57 = add nsw <4 x i32> %wide.masked.gather68, <i32 -1, i32 -1, i32 -1, i32 -1>
  %58 = sext <4 x i32> %54 to <4 x i64>
  %59 = sext <4 x i32> %55 to <4 x i64>
  %60 = sext <4 x i32> %56 to <4 x i64>
  %61 = sext <4 x i32> %57 to <4 x i64>
  %62 = mul nsw <4 x i64> %58, %46
  %63 = mul nsw <4 x i64> %59, %47
  %64 = mul nsw <4 x i64> %60, %48
  %65 = mul nsw <4 x i64> %61, %49
  %66 = select <4 x i1> %42, <4 x i64> %62, <4 x i64> zeroinitializer
  %predphi69 = add <4 x i64> %vec.phi53, %66
  %67 = select <4 x i1> %43, <4 x i64> %63, <4 x i64> zeroinitializer
  %predphi70 = add <4 x i64> %vec.phi54, %67
  %68 = select <4 x i1> %44, <4 x i64> %64, <4 x i64> zeroinitializer
  %predphi71 = add <4 x i64> %vec.phi55, %68
  %69 = select <4 x i1> %45, <4 x i64> %65, <4 x i64> zeroinitializer
  %predphi72 = add <4 x i64> %vec.phi56, %69
  %index.next44 = add i64 %index43, 16
  %vec.ind.next52 = add <4 x i64> %vec.ind47, <i64 16, i64 16, i64 16, i64 16>
  %70 = icmp eq i64 %index.next44, %n.vec42
  br i1 %70, label %middle.block36, label %vector.body38, !llvm.loop !292

middle.block36:                                   ; preds = %vector.body38
  %bin.rdx73 = add <4 x i64> %predphi70, %predphi69
  %bin.rdx74 = add <4 x i64> %predphi71, %bin.rdx73
  %bin.rdx75 = add <4 x i64> %predphi72, %bin.rdx74
  %71 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx75)
  br label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %middle.block36, %for.body.lr.ph.i.i
  %indvars.iv.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %n.vec42, %middle.block36 ]
  %index.021.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %71, %middle.block36 ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %if.end.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %index.021.i.i = phi i64 [ %index.1.i.i, %if.end.i.i ], [ %index.021.i.i.ph, %for.body.i.i.preheader ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %indvars.iv.i.i, i32 2
  %72 = load i32, i32* %stride2.i.i, align 4, !tbaa !182
  %cmp3.i.i = icmp sgt i32 %72, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %72 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %indvars.iv.i.i, i32 1
  %73 = load i32, i32* %extent.i.i, align 4, !tbaa !178
  %sub.i.i = add nsw i32 %73, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i.preheader, label %for.body.i.i, !llvm.loop !293

for.body.i13.i.preheader:                         ; preds = %if.end.i.i
  %min.iters.check = icmp ult i32 %27, 17
  br i1 %min.iters.check, label %for.body.i13.i.preheader77, label %vector.ph

vector.ph:                                        ; preds = %for.body.i13.i.preheader
  %n.mod.vf = and i64 %wide.trip.count.i.i, 15
  %74 = icmp eq i64 %n.mod.vf, 0
  %75 = select i1 %74, i64 16, i64 %n.mod.vf
  %n.vec = sub nsw i64 %wide.trip.count.i.i, %75
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.ind = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %vec.phi = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi, %vector.body ]
  %vec.phi19 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi31, %vector.body ]
  %vec.phi20 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi32, %vector.body ]
  %vec.phi21 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi33, %vector.body ]
  %step.add = add <4 x i64> %vec.ind, <i64 4, i64 4, i64 4, i64 4>
  %step.add16 = add <4 x i64> %vec.ind, <i64 8, i64 8, i64 8, i64 8>
  %step.add17 = add <4 x i64> %vec.ind, <i64 12, i64 12, i64 12, i64 12>
  %76 = or i64 %index, 4
  %77 = or i64 %index, 8
  %78 = or i64 %index, 12
  %79 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %index, i32 2
  %80 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %76, i32 2
  %81 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %77, i32 2
  %82 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %78, i32 2
  %83 = bitcast i32* %79 to <16 x i32>*
  %84 = bitcast i32* %80 to <16 x i32>*
  %85 = bitcast i32* %81 to <16 x i32>*
  %86 = bitcast i32* %82 to <16 x i32>*
  %wide.vec = load <16 x i32>, <16 x i32>* %83, align 4, !tbaa !182
  %wide.vec22 = load <16 x i32>, <16 x i32>* %84, align 4, !tbaa !182
  %wide.vec23 = load <16 x i32>, <16 x i32>* %85, align 4, !tbaa !182
  %wide.vec24 = load <16 x i32>, <16 x i32>* %86, align 4, !tbaa !182
  %strided.vec = shufflevector <16 x i32> %wide.vec, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec25 = shufflevector <16 x i32> %wide.vec22, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec26 = shufflevector <16 x i32> %wide.vec23, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec27 = shufflevector <16 x i32> %wide.vec24, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %87 = icmp slt <4 x i32> %strided.vec, zeroinitializer
  %88 = icmp slt <4 x i32> %strided.vec25, zeroinitializer
  %89 = icmp slt <4 x i32> %strided.vec26, zeroinitializer
  %90 = icmp slt <4 x i32> %strided.vec27, zeroinitializer
  %91 = sext <4 x i32> %strided.vec to <4 x i64>
  %92 = sext <4 x i32> %strided.vec25 to <4 x i64>
  %93 = sext <4 x i32> %strided.vec26 to <4 x i64>
  %94 = sext <4 x i32> %strided.vec27 to <4 x i64>
  %95 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, <4 x i64> %vec.ind, i32 1
  %96 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, <4 x i64> %step.add, i32 1
  %97 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, <4 x i64> %step.add16, i32 1
  %98 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, <4 x i64> %step.add17, i32 1
  %wide.masked.gather = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %95, i32 4, <4 x i1> %87, <4 x i32> undef), !tbaa !178
  %wide.masked.gather28 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %96, i32 4, <4 x i1> %88, <4 x i32> undef), !tbaa !178
  %wide.masked.gather29 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %97, i32 4, <4 x i1> %89, <4 x i32> undef), !tbaa !178
  %wide.masked.gather30 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %98, i32 4, <4 x i1> %90, <4 x i32> undef), !tbaa !178
  %99 = add nsw <4 x i32> %wide.masked.gather, <i32 -1, i32 -1, i32 -1, i32 -1>
  %100 = add nsw <4 x i32> %wide.masked.gather28, <i32 -1, i32 -1, i32 -1, i32 -1>
  %101 = add nsw <4 x i32> %wide.masked.gather29, <i32 -1, i32 -1, i32 -1, i32 -1>
  %102 = add nsw <4 x i32> %wide.masked.gather30, <i32 -1, i32 -1, i32 -1, i32 -1>
  %103 = sext <4 x i32> %99 to <4 x i64>
  %104 = sext <4 x i32> %100 to <4 x i64>
  %105 = sext <4 x i32> %101 to <4 x i64>
  %106 = sext <4 x i32> %102 to <4 x i64>
  %107 = mul nsw <4 x i64> %103, %91
  %108 = mul nsw <4 x i64> %104, %92
  %109 = mul nsw <4 x i64> %105, %93
  %110 = mul nsw <4 x i64> %106, %94
  %111 = select <4 x i1> %87, <4 x i64> %107, <4 x i64> zeroinitializer
  %predphi = add <4 x i64> %vec.phi, %111
  %112 = select <4 x i1> %88, <4 x i64> %108, <4 x i64> zeroinitializer
  %predphi31 = add <4 x i64> %vec.phi19, %112
  %113 = select <4 x i1> %89, <4 x i64> %109, <4 x i64> zeroinitializer
  %predphi32 = add <4 x i64> %vec.phi20, %113
  %114 = select <4 x i1> %90, <4 x i64> %110, <4 x i64> zeroinitializer
  %predphi33 = add <4 x i64> %vec.phi21, %114
  %index.next = add i64 %index, 16
  %vec.ind.next = add <4 x i64> %vec.ind, <i64 16, i64 16, i64 16, i64 16>
  %115 = icmp eq i64 %index.next, %n.vec
  br i1 %115, label %middle.block, label %vector.body, !llvm.loop !294

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add <4 x i64> %predphi31, %predphi
  %bin.rdx34 = add <4 x i64> %predphi32, %bin.rdx
  %bin.rdx35 = add <4 x i64> %predphi33, %bin.rdx34
  %116 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx35)
  br label %for.body.i13.i.preheader77

for.body.i13.i.preheader77:                       ; preds = %middle.block, %for.body.i13.i.preheader
  %indvars.iv.i10.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %n.vec, %middle.block ]
  %index.018.i.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %116, %middle.block ]
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %for.body.i13.i.preheader77, %if.end.i24.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ %indvars.iv.i10.i.ph, %for.body.i13.i.preheader77 ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ %index.018.i.i.ph, %for.body.i13.i.preheader77 ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %indvars.iv.i10.i, i32 2
  %117 = load i32, i32* %stride2.i11.i, align 4, !tbaa !182
  %cmp3.i12.i = icmp slt i32 %117, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %117 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %indvars.iv.i10.i, i32 1
  %118 = load i32, i32* %extent.i15.i, align 4, !tbaa !178
  %sub.i16.i = add nsw i32 %118, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !295

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i
  %add8.i.i = add nsw i64 %index.1.i.i, 1
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, %for.body64
  %add8.i27.i = phi i64 [ 1, %for.body64 ], [ %add8.i.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %index.0.lcssa.i9.i = phi i64 [ 0, %for.body64 ], [ %index.1.i21.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i = sub nsw i64 %add8.i27.i, %index.0.lcssa.i9.i
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %26, i64 0, i32 4, i32 1
  %119 = load i8, i8* %bits.i.i, align 1, !tbaa !136
  %conv.i.i = zext i8 %119 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i4.i, 3
  %mul.i = mul i64 %div.i.i, %sub.i
  %add = add i64 %mul.i, %added_size.0219
  %indvars.iv.next239 = add nuw nsw i64 %indvars.iv238, 1
  %exitcond241.not = icmp eq i64 %indvars.iv.next239, %wide.trip.count240
  br i1 %exitcond241.not, label %for.cond.cleanup63, label %for.body64, !llvm.loop !296

if.then76:                                        ; preds = %for.cond.cleanup63
  %120 = bitcast i8* %call74 to %"struct.Halide::Runtime::Internal::CacheEntry"*
  %conv77 = sext i32 %size to i64
  %call79 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10CacheEntry4initEPKhmjPK15halide_buffer_tiPPS5_by(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %120, i8* %cache_key, i64 %conv77, i32 %2, %struct.halide_buffer_t* %computed_bounds, i32 %tuple_count, %struct.halide_buffer_t** nonnull %tuple_buffers, i1 zeroext %has_eviction_key, i64 %eviction_key) #16
  br i1 %call79, label %if.end101, label %if.then83

if.then83:                                        ; preds = %if.then76, %for.cond.cleanup63
  %121 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  %sub = sub i64 %121, %added_size.0.lcssa
  store i64 %sub, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !110
  br i1 %cmp62218, label %for.body88.preheader, label %for.cond.cleanup87

for.body88.preheader:                             ; preds = %if.then83
  %wide.trip.count = zext i32 %tuple_count to i64
  br label %for.body88

for.cond.cleanup87:                               ; preds = %for.body88, %if.then83
  br i1 %tobool75.not, label %cleanup132, label %if.then99

for.body88:                                       ; preds = %for.body88, %for.body88.preheader
  %indvars.iv = phi i64 [ 0, %for.body88.preheader ], [ %indvars.iv.next, %for.body88 ]
  %arrayidx90 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv
  %122 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx90, align 8, !tbaa !10
  %host91 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %122, i64 0, i32 2
  %123 = load i8*, i8** %host91, align 8, !tbaa !172
  %call92 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %123) #16
  %entry93 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call92, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %entry93, align 8, !tbaa !286
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup87, label %for.body88, !llvm.loop !297

if.then99:                                        ; preds = %for.cond.cleanup87
  tail call void @halide_free(i8* %user_context, i8* nonnull %call74) #15
  br label %cleanup132

if.end101:                                        ; preds = %if.then76
  %124 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx7, align 8, !tbaa !10
  %next104 = bitcast i8* %call74 to %"struct.Halide::Runtime::Internal::CacheEntry"**
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %124, %"struct.Halide::Runtime::Internal::CacheEntry"** %next104, align 8, !tbaa !227
  %125 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  %less_recent = getelementptr inbounds i8, i8* %call74, i64 16
  %126 = bitcast i8* %less_recent to %"struct.Halide::Runtime::Internal::CacheEntry"**
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %125, %"struct.Halide::Runtime::Internal::CacheEntry"** %126, align 8, !tbaa !251
  %cmp105.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %125, null
  br i1 %cmp105.not, label %if.end107, label %if.then106

if.then106:                                       ; preds = %if.end101
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %125, i64 0, i32 1
  %127 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent to i8**
  store i8* %call74, i8** %127, align 8, !tbaa !268
  br label %if.end107

if.end107:                                        ; preds = %if.then106, %if.end101
  store i8* %call74, i8** bitcast (%"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE to i8**), align 8, !tbaa !10
  %128 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !10
  %cmp108 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %128, null
  br i1 %cmp108, label %if.then109, label %if.end110

if.then109:                                       ; preds = %if.end107
  store i8* %call74, i8** bitcast (%"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE to i8**), align 8, !tbaa !10
  br label %if.end110

if.end110:                                        ; preds = %if.then109, %if.end107
  %129 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx7 to i8**
  store i8* %call74, i8** %129, align 8, !tbaa !10
  %in_use_count = getelementptr inbounds i8, i8* %call74, i64 52
  %130 = bitcast i8* %in_use_count to i32*
  store i32 %tuple_count, i32* %130, align 4, !tbaa !254
  br i1 %cmp62218, label %for.body117.preheader, label %cleanup132

for.body117.preheader:                            ; preds = %if.end110
  %wide.trip.count236 = zext i32 %tuple_count to i64
  br label %for.body117

for.body117:                                      ; preds = %for.body117, %for.body117.preheader
  %indvars.iv234 = phi i64 [ 0, %for.body117.preheader ], [ %indvars.iv.next235, %for.body117 ]
  %arrayidx119 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv234
  %131 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx119, align 8, !tbaa !10
  %host120 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %131, i64 0, i32 2
  %132 = load i8*, i8** %host120, align 8, !tbaa !172
  %call121 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %132) #16
  %133 = bitcast %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call121 to i8**
  store i8* %call74, i8** %133, align 8, !tbaa !286
  %indvars.iv.next235 = add nuw nsw i64 %indvars.iv234, 1
  %exitcond237.not = icmp eq i64 %indvars.iv.next235, %wide.trip.count236
  br i1 %exitcond237.not, label %cleanup132, label %for.body117, !llvm.loop !298

cleanup132:                                       ; preds = %land.lhs.true18, %for.body48.us, %for.body117, %if.end110, %if.then99, %for.cond.cleanup87
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  ret i32 0
}

; Function Attrs: nounwind
define weak void @halide_memoization_cache_release(i8* %user_context, i8* %host) local_unnamed_addr #4 {
entry:
  %call = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %host) #16
  %entry2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call, i64 0, i32 0
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %entry2, align 8, !tbaa !286
  %cmp = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call to i8*
  tail call void @halide_free(i8* %user_context, i8* %1) #15
  br label %if.end6

if.else:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  %in_use_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %0, i64 0, i32 7
  %2 = load i32, i32* %in_use_count, align 4, !tbaa !254
  %cmp3.not = icmp eq i32 %2, 0
  br i1 %cmp3.not, label %if.then4, label %do.end

if.then4:                                         ; preds = %if.else
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.12.47, i64 0, i64 0)) #15
  tail call void @abort() #15
  %.pre = load i32, i32* %in_use_count, align 4, !tbaa !254
  br label %do.end

do.end:                                           ; preds = %if.then4, %if.else
  %3 = phi i32 [ %.pre, %if.then4 ], [ %2, %if.else ]
  %dec = add i32 %3, -1
  store i32 %dec, i32* %in_use_count, align 4, !tbaa !254
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  br label %if.end6

if.end6:                                          ; preds = %do.end, %if.then
  ret void
}

; Function Attrs: nounwind
define weak void @halide_memoization_cache_evict(i8* %user_context, i64 %eviction_key) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end25
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #15
  ret void

for.body:                                         ; preds = %if.end25, %entry
  %__begin1.059 = phi %"struct.Halide::Runtime::Internal::CacheEntry"** [ getelementptr inbounds ([256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 0), %entry ], [ %incdec.ptr, %if.end25 ]
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.059, align 8, !tbaa !10
  %cmp2.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null
  br i1 %cmp2.not, label %if.end25, label %while.body

while.body:                                       ; preds = %for.body, %if.end24
  %prev.058 = phi %"struct.Halide::Runtime::Internal::CacheEntry"** [ %prev.1, %if.end24 ], [ %__begin1.059, %for.body ]
  %entry1.056 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %1, %if.end24 ], [ %0, %for.body ]
  %next4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 0
  %1 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next4, align 8, !tbaa !227
  %has_eviction_key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 13
  %2 = load i8, i8* %has_eviction_key, align 8, !tbaa !261, !range !17
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %if.end24, label %land.lhs.true

land.lhs.true:                                    ; preds = %while.body
  %eviction_key5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 12
  %3 = load i64, i64* %eviction_key5, align 8, !tbaa !262
  %cmp6 = icmp eq i64 %3, %eviction_key
  br i1 %cmp6, label %if.then7, label %if.end24

if.then7:                                         ; preds = %land.lhs.true
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %1, %"struct.Halide::Runtime::Internal::CacheEntry"** %prev.058, align 8, !tbaa !10
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 1
  %4 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  %cmp8.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %4, null
  %less_recent12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 2
  %5 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent12, align 8, !tbaa !251
  br i1 %cmp8.not, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.then7
  %less_recent11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %4, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %5, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent11, align 8, !tbaa !251
  %.pre = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent12, align 8, !tbaa !251
  br label %if.end

if.else:                                          ; preds = %if.then7
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %5, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !10
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %6 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %5, %if.else ], [ %.pre, %if.then9 ]
  %cmp14.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %6, null
  %more_recent18 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %6, i64 0, i32 1
  %_ZN6Halide7Runtime8Internal19least_recently_usedE.sink = select i1 %cmp14.not, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent18
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %4, %"struct.Halide::Runtime::Internal::CacheEntry"** %_ZN6Halide7Runtime8Internal19least_recently_usedE.sink, align 8, !tbaa !10
  tail call void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %entry1.056) #16
  %7 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056 to i8*
  tail call void @halide_free(i8* %user_context, i8* nonnull %7) #15
  br label %if.end24

if.end24:                                         ; preds = %if.end, %land.lhs.true, %while.body
  %prev.1 = phi %"struct.Halide::Runtime::Internal::CacheEntry"** [ %prev.058, %if.end ], [ %next4, %land.lhs.true ], [ %next4, %while.body ]
  %cmp3.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %1, null
  br i1 %cmp3.not, label %if.end25, label %while.body, !llvm.loop !299

if.end25:                                         ; preds = %if.end24, %for.body
  %incdec.ptr = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.059, i64 1
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"** %incdec.ptr, getelementptr inbounds ([256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 1, i64 0)
  br i1 %cmp.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nounwind
define weak i8* @halide_string_to_string(i8* %dst, i8* %end, i8* %arg) local_unnamed_addr #4 {
entry:
  %cmp.not = icmp ult i8* %dst, %end
  br i1 %cmp.not, label %if.end, label %return

if.end:                                           ; preds = %entry
  %tobool.not = icmp eq i8* %arg, null
  %spec.select = select i1 %tobool.not, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i64 0, i64 0), i8* %arg
  br label %if.end5

if.then4:                                         ; preds = %if.end8
  store i8 0, i8* %dst.addr.023, align 1, !tbaa !14
  br label %return

if.end5:                                          ; preds = %if.end8, %if.end
  %arg.addr.124 = phi i8* [ %spec.select, %if.end ], [ %incdec.ptr9, %if.end8 ]
  %dst.addr.023 = phi i8* [ %dst, %if.end ], [ %incdec.ptr, %if.end8 ]
  %0 = load i8, i8* %arg.addr.124, align 1, !tbaa !14
  store i8 %0, i8* %dst.addr.023, align 1, !tbaa !14
  %cmp6 = icmp eq i8 %0, 0
  br i1 %cmp6, label %return, label %if.end8

if.end8:                                          ; preds = %if.end5
  %incdec.ptr = getelementptr inbounds i8, i8* %dst.addr.023, i64 1
  %incdec.ptr9 = getelementptr inbounds i8, i8* %arg.addr.124, i64 1
  %cmp3 = icmp eq i8* %incdec.ptr, %end
  br i1 %cmp3, label %if.then4, label %if.end5

return:                                           ; preds = %if.end5, %if.then4, %entry
  %retval.0 = phi i8* [ %end, %if.then4 ], [ %dst, %entry ], [ %dst.addr.023, %if.end5 ]
  ret i8* %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_uint64_to_string(i8* %dst, i8* %end, i64 %arg, i32 %min_digits) local_unnamed_addr #0 {
entry:
  %buf = alloca [32 x i8], align 1
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #10
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 31
  store i8 0, i8* %arrayidx, align 1, !tbaa !14
  %add.ptr = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 30
  %cmp13 = icmp sgt i32 %min_digits, 0
  %tobool14 = icmp ne i64 %arg, 0
  %1 = or i1 %tobool14, %cmp13
  br i1 %1, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %digits.0.lcssa = phi i8* [ %add.ptr, %entry ], [ %incdec.ptr, %for.body ]
  %incdec.ptr1 = getelementptr inbounds i8, i8* %digits.0.lcssa, i64 1
  %call = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* nonnull %incdec.ptr1) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #10
  ret i8* %call

for.body:                                         ; preds = %entry, %for.body
  %arg.addr.017 = phi i64 [ %div, %for.body ], [ %arg, %entry ]
  %digits.016 = phi i8* [ %incdec.ptr, %for.body ], [ %add.ptr, %entry ]
  %i.015 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %div = udiv i64 %arg.addr.017, 10
  %mul.neg = mul i64 %div, -10
  %sub = add i64 %mul.neg, %arg.addr.017
  %2 = trunc i64 %sub to i8
  %conv = add i8 %2, 48
  store i8 %conv, i8* %digits.016, align 1, !tbaa !14
  %incdec.ptr = getelementptr inbounds i8, i8* %digits.016, i64 -1
  %inc = add nuw nsw i32 %i.015, 1
  %cmp = icmp slt i32 %inc, %min_digits
  %3 = icmp ugt i64 %arg.addr.017, 9
  %4 = or i1 %3, %cmp
  br i1 %4, label %for.body, label %for.cond.cleanup, !llvm.loop !300
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_int64_to_string(i8* %dst, i8* %end, i64 %arg, i32 %min_digits) local_unnamed_addr #0 {
entry:
  %cmp = icmp slt i64 %arg, 0
  %cmp1 = icmp ult i8* %dst, %end
  %or.cond = and i1 %cmp1, %cmp
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %dst, i64 1
  store i8 45, i8* %dst, align 1, !tbaa !14
  %sub = sub nsw i64 0, %arg
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %arg.addr.0 = phi i64 [ %sub, %if.then ], [ %arg, %entry ]
  %dst.addr.0 = phi i8* [ %incdec.ptr, %if.then ], [ %dst, %entry ]
  %call = tail call i8* @halide_uint64_to_string(i8* %dst.addr.0, i8* %end, i64 %arg.addr.0, i32 %min_digits) #16
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_double_to_string(i8* %dst, i8* %end, double %arg, i32 %scientific) local_unnamed_addr #0 {
entry:
  %arg.addr = alloca double, align 8
  %bits = alloca i64, align 8
  %buf = alloca [512 x i8], align 1
  store double %arg, double* %arg.addr, align 8, !tbaa !164
  %0 = bitcast i64* %bits to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #10
  store i64 0, i64* %bits, align 8, !tbaa !110
  %1 = bitcast double* %arg.addr to i8*
  %call = call i8* @memcpy(i8* nonnull %0, i8* nonnull %1, i64 8) #15
  %2 = load i64, i64* %bits, align 8, !tbaa !110
  %and = and i64 %2, 4503599627370495
  %shr = lshr i64 %2, 52
  %3 = trunc i64 %shr to i32
  %conv = and i32 %3, 2047
  %cmp = icmp eq i32 %conv, 2047
  br i1 %cmp, label %if.then, label %if.else15

if.then:                                          ; preds = %entry
  %tobool.not = icmp eq i64 %and, 0
  %tobool10.not = icmp sgt i64 %2, -1
  br i1 %tobool.not, label %if.else9, label %if.then4

if.then4:                                         ; preds = %if.then
  br i1 %tobool10.not, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.then4
  %call7 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.57, i64 0, i64 0)) #16
  br label %cleanup147

if.else:                                          ; preds = %if.then4
  %call8 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.58, i64 0, i64 0)) #16
  br label %cleanup147

if.else9:                                         ; preds = %if.then
  br i1 %tobool10.not, label %if.else13, label %if.then11

if.then11:                                        ; preds = %if.else9
  %call12 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.59, i64 0, i64 0)) #16
  br label %cleanup147

if.else13:                                        ; preds = %if.else9
  %call14 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.60, i64 0, i64 0)) #16
  br label %cleanup147

if.else15:                                        ; preds = %entry
  %cmp16 = icmp eq i32 %conv, 0
  %cmp17 = icmp eq i64 %and, 0
  %or.cond = and i1 %cmp17, %cmp16
  br i1 %or.cond, label %if.then18, label %if.end32

if.then18:                                        ; preds = %if.else15
  %tobool19.not = icmp eq i32 %scientific, 0
  %tobool27.not = icmp sgt i64 %2, -1
  br i1 %tobool19.not, label %if.else26, label %if.then20

if.then20:                                        ; preds = %if.then18
  br i1 %tobool27.not, label %if.else24, label %if.then22

if.then22:                                        ; preds = %if.then20
  %call23 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.61, i64 0, i64 0)) #16
  br label %cleanup147

if.else24:                                        ; preds = %if.then20
  %call25 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6.62, i64 0, i64 0)) #16
  br label %cleanup147

if.else26:                                        ; preds = %if.then18
  br i1 %tobool27.not, label %if.else30, label %if.then28

if.then28:                                        ; preds = %if.else26
  %call29 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.63, i64 0, i64 0)) #16
  br label %cleanup147

if.else30:                                        ; preds = %if.else26
  %call31 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.64, i64 0, i64 0)) #16
  br label %cleanup147

if.end32:                                         ; preds = %if.else15
  %tobool33.not = icmp sgt i64 %2, -1
  br i1 %tobool33.not, label %if.end36, label %if.then34

if.then34:                                        ; preds = %if.end32
  %call35 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.65, i64 0, i64 0)) #16
  %4 = load double, double* %arg.addr, align 8, !tbaa !164
  %fneg = fneg double %4
  store double %fneg, double* %arg.addr, align 8, !tbaa !164
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %if.end32
  %dst.addr.0 = phi i8* [ %call35, %if.then34 ], [ %dst, %if.end32 ]
  %tobool37.not = icmp eq i32 %scientific, 0
  br i1 %tobool37.not, label %if.else61, label %while.condthread-pre-split

while.condthread-pre-split:                       ; preds = %if.end36
  %.pr = load double, double* %arg.addr, align 8, !tbaa !164
  %cmp39276 = fcmp olt double %.pr, 1.000000e+00
  br i1 %cmp39276, label %while.body, label %while.cond40thread-pre-split

while.body:                                       ; preds = %while.condthread-pre-split, %while.body
  %exponent_base_10.0277 = phi i32 [ %dec, %while.body ], [ 0, %while.condthread-pre-split ]
  %5 = phi double [ %mul, %while.body ], [ %.pr, %while.condthread-pre-split ]
  %mul = fmul double %5, 1.000000e+01
  %dec = add nsw i32 %exponent_base_10.0277, -1
  %cmp39 = fcmp olt double %mul, 1.000000e+00
  br i1 %cmp39, label %while.body, label %while.cond.while.cond40thread-pre-split_crit_edge, !llvm.loop !301

while.cond.while.cond40thread-pre-split_crit_edge: ; preds = %while.body
  store double %mul, double* %arg.addr, align 8, !tbaa !164
  br label %while.cond40thread-pre-split

while.cond40thread-pre-split:                     ; preds = %while.cond.while.cond40thread-pre-split_crit_edge, %while.condthread-pre-split
  %.pr261 = phi double [ %mul, %while.cond.while.cond40thread-pre-split_crit_edge ], [ %.pr, %while.condthread-pre-split ]
  %exponent_base_10.0.lcssa = phi i32 [ %dec, %while.cond.while.cond40thread-pre-split_crit_edge ], [ 0, %while.condthread-pre-split ]
  %cmp41272 = fcmp ult double %.pr261, 1.000000e+01
  br i1 %cmp41272, label %while.end43, label %while.body42

while.body42:                                     ; preds = %while.cond40thread-pre-split, %while.body42
  %exponent_base_10.1273 = phi i32 [ %inc, %while.body42 ], [ %exponent_base_10.0.lcssa, %while.cond40thread-pre-split ]
  %6 = phi double [ %div, %while.body42 ], [ %.pr261, %while.cond40thread-pre-split ]
  %div = fdiv double %6, 1.000000e+01
  %inc = add nsw i32 %exponent_base_10.1273, 1
  %cmp41 = fcmp ult double %div, 1.000000e+01
  br i1 %cmp41, label %while.cond40.while.end43_crit_edge, label %while.body42, !llvm.loop !302

while.cond40.while.end43_crit_edge:               ; preds = %while.body42
  store double %div, double* %arg.addr, align 8, !tbaa !164
  br label %while.end43

while.end43:                                      ; preds = %while.cond40.while.end43_crit_edge, %while.cond40thread-pre-split
  %.lcssa = phi double [ %div, %while.cond40.while.end43_crit_edge ], [ %.pr261, %while.cond40thread-pre-split ]
  %exponent_base_10.1.lcssa = phi i32 [ %inc, %while.cond40.while.end43_crit_edge ], [ %exponent_base_10.0.lcssa, %while.cond40thread-pre-split ]
  %mul44 = fmul double %.lcssa, 1.000000e+06
  %add = fadd double %mul44, 5.000000e-01
  %conv45 = fptoui double %add to i64
  %div46 = udiv i64 %conv45, 1000000
  %mul47.neg = mul i64 %div46, -1000000
  %sub48 = add i64 %mul47.neg, %conv45
  %call49 = call i8* @halide_int64_to_string(i8* %dst.addr.0, i8* %end, i64 %div46, i32 1) #16
  %call50 = call i8* @halide_string_to_string(i8* %call49, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #16
  %call51 = call i8* @halide_int64_to_string(i8* %call50, i8* %end, i64 %sub48, i32 6) #16
  %cmp52 = icmp sgt i32 %exponent_base_10.1.lcssa, -1
  br i1 %cmp52, label %if.then53, label %if.else55

if.then53:                                        ; preds = %while.end43
  %call54 = call i8* @halide_string_to_string(i8* %call51, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.67, i64 0, i64 0)) #16
  br label %if.end58

if.else55:                                        ; preds = %while.end43
  %call56 = call i8* @halide_string_to_string(i8* %call51, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.68, i64 0, i64 0)) #16
  %sub57 = sub nsw i32 0, %exponent_base_10.1.lcssa
  br label %if.end58

if.end58:                                         ; preds = %if.else55, %if.then53
  %exponent_base_10.2 = phi i32 [ %exponent_base_10.1.lcssa, %if.then53 ], [ %sub57, %if.else55 ]
  %dst.addr.1 = phi i8* [ %call54, %if.then53 ], [ %call56, %if.else55 ]
  %conv59262 = zext i32 %exponent_base_10.2 to i64
  %call60 = call i8* @halide_int64_to_string(i8* %dst.addr.1, i8* %end, i64 %conv59262, i32 2) #16
  br label %cleanup147

if.else61:                                        ; preds = %if.end36
  br i1 %cmp16, label %if.then63, label %if.end65

if.then63:                                        ; preds = %if.else61
  %call64 = call i8* @halide_double_to_string(i8* %dst.addr.0, i8* %end, double 0.000000e+00, i32 0) #16
  br label %cleanup147

if.end65:                                         ; preds = %if.else61
  %add67 = or i64 %and, 4503599627370496
  %sub69 = add nsw i32 %conv, -1075
  %cmp70 = icmp ult i32 %conv, 1075
  br i1 %cmp70, label %if.then71, label %if.end104

if.then71:                                        ; preds = %if.end65
  %cmp72 = icmp ult i32 %conv, 1023
  %sub76 = sub nuw nsw i32 1075, %conv
  %sh_prom = zext i32 %sub76 to i64
  %shr77 = lshr i64 %add67, %sh_prom
  %shl80 = shl i64 %shr77, %sh_prom
  %integer_part.0 = select i1 %cmp72, i64 0, i64 %shr77
  %sub81 = select i1 %cmp72, i64 0, i64 %shl80
  %f.0.in = sub i64 %add67, %sub81
  %f.0 = uitofp i64 %f.0.in to double
  %conv84258 = zext i32 %sub69 to i64
  %shl85 = shl i64 %conv84258, 52
  %add87 = add i64 %shl85, 4696837146684686336
  %7 = bitcast i64 %add87 to double
  %mul89 = fmul double %7, %f.0
  %add90 = fadd double %mul89, 5.000000e-01
  %conv91 = fptoui double %add90 to i64
  %conv92 = uitofp i64 %conv91 to double
  %cmp93 = fcmp oeq double %add90, %conv92
  %and95 = and i64 %conv91, 1
  %tobool96.not = icmp ne i64 %and95, 0
  %not.or.cond259 = and i1 %cmp93, %tobool96.not
  %dec98 = sext i1 %not.or.cond259 to i64
  %fractional_part.0 = add i64 %dec98, %conv91
  %cmp100 = icmp eq i64 %fractional_part.0, 1000000
  %inc102 = zext i1 %cmp100 to i64
  %spec.select = add nuw i64 %integer_part.0, %inc102
  %spec.select260 = select i1 %cmp100, i64 0, i64 %fractional_part.0
  br label %if.end104

if.end104:                                        ; preds = %if.then71, %if.end65
  %integer_part.2 = phi i64 [ %spec.select, %if.then71 ], [ %add67, %if.end65 ]
  %integer_exponent.0 = phi i32 [ 0, %if.then71 ], [ %sub69, %if.end65 ]
  %fractional_part.2 = phi i64 [ %spec.select260, %if.then71 ], [ 0, %if.end65 ]
  %8 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %8) #10
  %add.ptr = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 512
  %add.ptr105 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 480
  %call108 = call i8* @halide_int64_to_string(i8* nonnull %add.ptr105, i8* nonnull %add.ptr, i64 %integer_part.2, i32 1) #16
  %cmp109267 = icmp sgt i32 %integer_exponent.0, 0
  br i1 %cmp109267, label %for.cond111.preheader.preheader, label %for.cond.cleanup

for.cond111.preheader.preheader:                  ; preds = %if.end104
  %xtraiter = and i32 %integer_exponent.0, 1
  %9 = icmp eq i32 %integer_exponent.0, 1
  br i1 %9, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.cond111.preheader.preheader.new

for.cond111.preheader.preheader.new:              ; preds = %for.cond111.preheader.preheader
  %unroll_iter = and i32 %integer_exponent.0, -2
  br label %for.cond111.preheader

for.cond111.preheader:                            ; preds = %if.end137.1, %for.cond111.preheader.preheader.new
  %int_part_ptr.0268 = phi i8* [ %add.ptr105, %for.cond111.preheader.preheader.new ], [ %int_part_ptr.1.1, %if.end137.1 ]
  %niter = phi i32 [ %unroll_iter, %for.cond111.preheader.preheader.new ], [ %niter.nsub.1, %if.end137.1 ]
  %cmp113.not264 = icmp eq i8* %call108, %int_part_ptr.0268
  br i1 %cmp113.not264, label %if.end137, label %for.body115

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %if.end137.1, %for.cond111.preheader.preheader
  %int_part_ptr.1.lcssa.ph = phi i8* [ undef, %for.cond111.preheader.preheader ], [ %int_part_ptr.1.1, %if.end137.1 ]
  %int_part_ptr.0268.unr = phi i8* [ %add.ptr105, %for.cond111.preheader.preheader ], [ %int_part_ptr.1.1, %if.end137.1 ]
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.cond111.preheader.epil

for.cond111.preheader.epil:                       ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  %cmp113.not264.epil = icmp eq i8* %call108, %int_part_ptr.0268.unr
  br i1 %cmp113.not264.epil, label %for.cond.cleanup, label %for.body115.epil

for.body115.epil:                                 ; preds = %for.cond111.preheader.epil, %for.body115.epil
  %p.0266.pn.epil = phi i8* [ %p.0266.epil, %for.body115.epil ], [ %call108, %for.cond111.preheader.epil ]
  %carry.0265.epil = phi i32 [ %carry.1.epil, %for.body115.epil ], [ 0, %for.cond111.preheader.epil ]
  %p.0266.epil = getelementptr inbounds i8, i8* %p.0266.pn.epil, i64 -1
  %10 = load i8, i8* %p.0266.epil, align 1, !tbaa !14
  %sub117.epil = add i8 %10, -48
  %conv119.epil = sext i8 %sub117.epil to i32
  %mul120.epil = shl nsw i32 %conv119.epil, 1
  %add121.epil = or i32 %mul120.epil, %carry.0265.epil
  %11 = trunc i32 %add121.epil to i8
  %cmp124.epil = icmp sgt i8 %11, 9
  %sub127.epil = add nsw i32 %add121.epil, 246
  %carry.1.epil = zext i1 %cmp124.epil to i32
  %new_digit.0.in.epil = select i1 %cmp124.epil, i32 %sub127.epil, i32 %add121.epil
  %12 = trunc i32 %new_digit.0.in.epil to i8
  %conv133.epil = add i8 %12, 48
  store i8 %conv133.epil, i8* %p.0266.epil, align 1, !tbaa !14
  %cmp113.not.epil = icmp eq i8* %p.0266.epil, %int_part_ptr.0268.unr
  br i1 %cmp113.not.epil, label %for.cond.cleanup114.epil, label %for.body115.epil, !llvm.loop !303

for.cond.cleanup114.epil:                         ; preds = %for.body115.epil
  br i1 %cmp124.epil, label %if.then135.epil, label %for.cond.cleanup

if.then135.epil:                                  ; preds = %for.cond.cleanup114.epil
  %incdec.ptr136.epil = getelementptr inbounds i8, i8* %int_part_ptr.0268.unr, i64 -1
  store i8 49, i8* %incdec.ptr136.epil, align 1, !tbaa !14
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit.unr-lcssa, %for.cond111.preheader.epil, %for.cond.cleanup114.epil, %if.then135.epil, %if.end104
  %int_part_ptr.0.lcssa = phi i8* [ %add.ptr105, %if.end104 ], [ %int_part_ptr.1.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %incdec.ptr136.epil, %if.then135.epil ], [ %int_part_ptr.0268.unr, %for.cond.cleanup114.epil ], [ %call108, %for.cond111.preheader.epil ]
  %call141 = call i8* @halide_string_to_string(i8* %dst.addr.0, i8* %end, i8* %int_part_ptr.0.lcssa) #16
  %call142 = call i8* @halide_string_to_string(i8* %call141, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #16
  %call143 = call i8* @halide_int64_to_string(i8* %call142, i8* %end, i64 %fractional_part.2, i32 6) #16
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %8) #10
  br label %cleanup147

for.cond.cleanup114:                              ; preds = %for.body115
  br i1 %cmp124, label %if.then135, label %if.end137

for.body115:                                      ; preds = %for.cond111.preheader, %for.body115
  %p.0266.pn = phi i8* [ %p.0266, %for.body115 ], [ %call108, %for.cond111.preheader ]
  %carry.0265 = phi i32 [ %carry.1, %for.body115 ], [ 0, %for.cond111.preheader ]
  %p.0266 = getelementptr inbounds i8, i8* %p.0266.pn, i64 -1
  %13 = load i8, i8* %p.0266, align 1, !tbaa !14
  %sub117 = add i8 %13, -48
  %conv119 = sext i8 %sub117 to i32
  %mul120 = shl nsw i32 %conv119, 1
  %add121 = or i32 %mul120, %carry.0265
  %14 = trunc i32 %add121 to i8
  %cmp124 = icmp sgt i8 %14, 9
  %sub127 = add nsw i32 %add121, 246
  %carry.1 = zext i1 %cmp124 to i32
  %new_digit.0.in = select i1 %cmp124, i32 %sub127, i32 %add121
  %15 = trunc i32 %new_digit.0.in to i8
  %conv133 = add i8 %15, 48
  store i8 %conv133, i8* %p.0266, align 1, !tbaa !14
  %cmp113.not = icmp eq i8* %p.0266, %int_part_ptr.0268
  br i1 %cmp113.not, label %for.cond.cleanup114, label %for.body115, !llvm.loop !303

if.then135:                                       ; preds = %for.cond.cleanup114
  %incdec.ptr136 = getelementptr inbounds i8, i8* %int_part_ptr.0268, i64 -1
  store i8 49, i8* %incdec.ptr136, align 1, !tbaa !14
  br label %if.end137

if.end137:                                        ; preds = %if.then135, %for.cond.cleanup114, %for.cond111.preheader
  %int_part_ptr.1 = phi i8* [ %incdec.ptr136, %if.then135 ], [ %int_part_ptr.0268, %for.cond.cleanup114 ], [ %call108, %for.cond111.preheader ]
  %cmp113.not264.1 = icmp eq i8* %call108, %int_part_ptr.1
  br i1 %cmp113.not264.1, label %if.end137.1, label %for.body115.1

cleanup147:                                       ; preds = %for.cond.cleanup, %if.then63, %if.end58, %if.else30, %if.then28, %if.else24, %if.then22, %if.else13, %if.then11, %if.else, %if.then6
  %retval.1 = phi i8* [ %call7, %if.then6 ], [ %call8, %if.else ], [ %call12, %if.then11 ], [ %call14, %if.else13 ], [ %call23, %if.then22 ], [ %call25, %if.else24 ], [ %call29, %if.then28 ], [ %call31, %if.else30 ], [ %call64, %if.then63 ], [ %call60, %if.end58 ], [ %call143, %for.cond.cleanup ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #10
  ret i8* %retval.1

for.body115.1:                                    ; preds = %if.end137, %for.body115.1
  %p.0266.pn.1 = phi i8* [ %p.0266.1, %for.body115.1 ], [ %call108, %if.end137 ]
  %carry.0265.1 = phi i32 [ %carry.1.1, %for.body115.1 ], [ 0, %if.end137 ]
  %p.0266.1 = getelementptr inbounds i8, i8* %p.0266.pn.1, i64 -1
  %16 = load i8, i8* %p.0266.1, align 1, !tbaa !14
  %sub117.1 = add i8 %16, -48
  %conv119.1 = sext i8 %sub117.1 to i32
  %mul120.1 = shl nsw i32 %conv119.1, 1
  %add121.1 = or i32 %mul120.1, %carry.0265.1
  %17 = trunc i32 %add121.1 to i8
  %cmp124.1 = icmp sgt i8 %17, 9
  %sub127.1 = add nsw i32 %add121.1, 246
  %carry.1.1 = zext i1 %cmp124.1 to i32
  %new_digit.0.in.1 = select i1 %cmp124.1, i32 %sub127.1, i32 %add121.1
  %18 = trunc i32 %new_digit.0.in.1 to i8
  %conv133.1 = add i8 %18, 48
  store i8 %conv133.1, i8* %p.0266.1, align 1, !tbaa !14
  %cmp113.not.1 = icmp eq i8* %p.0266.1, %int_part_ptr.1
  br i1 %cmp113.not.1, label %for.cond.cleanup114.1, label %for.body115.1, !llvm.loop !303

for.cond.cleanup114.1:                            ; preds = %for.body115.1
  br i1 %cmp124.1, label %if.then135.1, label %if.end137.1

if.then135.1:                                     ; preds = %for.cond.cleanup114.1
  %incdec.ptr136.1 = getelementptr inbounds i8, i8* %int_part_ptr.1, i64 -1
  store i8 49, i8* %incdec.ptr136.1, align 1, !tbaa !14
  br label %if.end137.1

if.end137.1:                                      ; preds = %if.then135.1, %for.cond.cleanup114.1, %if.end137
  %int_part_ptr.1.1 = phi i8* [ %incdec.ptr136.1, %if.then135.1 ], [ %int_part_ptr.1, %for.cond.cleanup114.1 ], [ %call108, %if.end137 ]
  %niter.nsub.1 = add i32 %niter, -2
  %niter.ncmp.1 = icmp eq i32 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.cond111.preheader, !llvm.loop !304
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_pointer_to_string(i8* %dst, i8* %end, i8* %arg) local_unnamed_addr #0 {
entry:
  %buf = alloca [20 x i8], align 1
  %0 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %0) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 dereferenceable(20) %0, i8 0, i64 20, i1 false)
  %add.ptr = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 18
  %1 = ptrtoint i8* %arg to i64
  %and = and i64 %1, 15
  %arrayidx = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !14
  %incdec.ptr = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 17
  store i8 %2, i8* %add.ptr, align 1, !tbaa !14
  %shr = lshr i64 %1, 4
  %tobool.not = icmp eq i64 %shr, 0
  br i1 %tobool.not, label %cleanup, label %for.cond

for.cond:                                         ; preds = %entry
  %and.1 = and i64 %shr, 15
  %arrayidx.1 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.1
  %3 = load i8, i8* %arrayidx.1, align 1, !tbaa !14
  %incdec.ptr.1 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 16
  store i8 %3, i8* %incdec.ptr, align 1, !tbaa !14
  %shr.1 = lshr i64 %1, 8
  %tobool.not.1 = icmp eq i64 %shr.1, 0
  br i1 %tobool.not.1, label %cleanup, label %for.cond.1

cleanup:                                          ; preds = %for.cond.14, %for.cond.13, %for.cond.12, %for.cond.11, %for.cond.10, %for.cond.9, %for.cond.8, %for.cond.7, %for.cond.6, %for.cond.5, %for.cond.4, %for.cond.3, %for.cond.2, %for.cond.1, %for.cond, %entry
  %buf_ptr.016.lcssa = phi i8* [ %add.ptr, %entry ], [ %incdec.ptr, %for.cond ], [ %incdec.ptr.1, %for.cond.1 ], [ %incdec.ptr.2, %for.cond.2 ], [ %incdec.ptr.3, %for.cond.3 ], [ %incdec.ptr.4, %for.cond.4 ], [ %incdec.ptr.5, %for.cond.5 ], [ %incdec.ptr.6, %for.cond.6 ], [ %incdec.ptr.7, %for.cond.7 ], [ %incdec.ptr.8, %for.cond.8 ], [ %incdec.ptr.9, %for.cond.9 ], [ %incdec.ptr.10, %for.cond.10 ], [ %incdec.ptr.11, %for.cond.11 ], [ %incdec.ptr.12, %for.cond.12 ], [ %incdec.ptr.13, %for.cond.13 ], [ %incdec.ptr.14, %for.cond.14 ]
  %incdec.ptr.lcssa = phi i8* [ %incdec.ptr, %entry ], [ %incdec.ptr.1, %for.cond ], [ %incdec.ptr.2, %for.cond.1 ], [ %incdec.ptr.3, %for.cond.2 ], [ %incdec.ptr.4, %for.cond.3 ], [ %incdec.ptr.5, %for.cond.4 ], [ %incdec.ptr.6, %for.cond.5 ], [ %incdec.ptr.7, %for.cond.6 ], [ %incdec.ptr.8, %for.cond.7 ], [ %incdec.ptr.9, %for.cond.8 ], [ %incdec.ptr.10, %for.cond.9 ], [ %incdec.ptr.11, %for.cond.10 ], [ %incdec.ptr.12, %for.cond.11 ], [ %incdec.ptr.13, %for.cond.12 ], [ %incdec.ptr.14, %for.cond.13 ], [ %incdec.ptr.15, %for.cond.14 ]
  %incdec.ptr1 = getelementptr inbounds i8, i8* %buf_ptr.016.lcssa, i64 -2
  store i8 120, i8* %incdec.ptr.lcssa, align 1, !tbaa !14
  store i8 48, i8* %incdec.ptr1, align 1, !tbaa !14
  %call = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* nonnull %incdec.ptr1) #16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %0) #10
  ret i8* %call

for.cond.1:                                       ; preds = %for.cond
  %and.2 = and i64 %shr.1, 15
  %arrayidx.2 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.2
  %4 = load i8, i8* %arrayidx.2, align 1, !tbaa !14
  %incdec.ptr.2 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 15
  store i8 %4, i8* %incdec.ptr.1, align 1, !tbaa !14
  %shr.2 = lshr i64 %1, 12
  %tobool.not.2 = icmp eq i64 %shr.2, 0
  br i1 %tobool.not.2, label %cleanup, label %for.cond.2

for.cond.2:                                       ; preds = %for.cond.1
  %and.3 = and i64 %shr.2, 15
  %arrayidx.3 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.3
  %5 = load i8, i8* %arrayidx.3, align 1, !tbaa !14
  %incdec.ptr.3 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 14
  store i8 %5, i8* %incdec.ptr.2, align 1, !tbaa !14
  %shr.3 = lshr i64 %1, 16
  %tobool.not.3 = icmp eq i64 %shr.3, 0
  br i1 %tobool.not.3, label %cleanup, label %for.cond.3

for.cond.3:                                       ; preds = %for.cond.2
  %and.4 = and i64 %shr.3, 15
  %arrayidx.4 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.4
  %6 = load i8, i8* %arrayidx.4, align 1, !tbaa !14
  %incdec.ptr.4 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 13
  store i8 %6, i8* %incdec.ptr.3, align 1, !tbaa !14
  %shr.4 = lshr i64 %1, 20
  %tobool.not.4 = icmp eq i64 %shr.4, 0
  br i1 %tobool.not.4, label %cleanup, label %for.cond.4

for.cond.4:                                       ; preds = %for.cond.3
  %and.5 = and i64 %shr.4, 15
  %arrayidx.5 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.5
  %7 = load i8, i8* %arrayidx.5, align 1, !tbaa !14
  %incdec.ptr.5 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 12
  store i8 %7, i8* %incdec.ptr.4, align 1, !tbaa !14
  %shr.5 = lshr i64 %1, 24
  %tobool.not.5 = icmp eq i64 %shr.5, 0
  br i1 %tobool.not.5, label %cleanup, label %for.cond.5

for.cond.5:                                       ; preds = %for.cond.4
  %and.6 = and i64 %shr.5, 15
  %arrayidx.6 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.6
  %8 = load i8, i8* %arrayidx.6, align 1, !tbaa !14
  %incdec.ptr.6 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 11
  store i8 %8, i8* %incdec.ptr.5, align 1, !tbaa !14
  %shr.6 = lshr i64 %1, 28
  %tobool.not.6 = icmp eq i64 %shr.6, 0
  br i1 %tobool.not.6, label %cleanup, label %for.cond.6

for.cond.6:                                       ; preds = %for.cond.5
  %and.7 = and i64 %shr.6, 15
  %arrayidx.7 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.7
  %9 = load i8, i8* %arrayidx.7, align 1, !tbaa !14
  %incdec.ptr.7 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 10
  store i8 %9, i8* %incdec.ptr.6, align 1, !tbaa !14
  %shr.7 = lshr i64 %1, 32
  %tobool.not.7 = icmp eq i64 %shr.7, 0
  br i1 %tobool.not.7, label %cleanup, label %for.cond.7

for.cond.7:                                       ; preds = %for.cond.6
  %and.8 = and i64 %shr.7, 15
  %arrayidx.8 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.8
  %10 = load i8, i8* %arrayidx.8, align 1, !tbaa !14
  %incdec.ptr.8 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 9
  store i8 %10, i8* %incdec.ptr.7, align 1, !tbaa !14
  %shr.8 = lshr i64 %1, 36
  %tobool.not.8 = icmp eq i64 %shr.8, 0
  br i1 %tobool.not.8, label %cleanup, label %for.cond.8

for.cond.8:                                       ; preds = %for.cond.7
  %and.9 = and i64 %shr.8, 15
  %arrayidx.9 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.9
  %11 = load i8, i8* %arrayidx.9, align 1, !tbaa !14
  %incdec.ptr.9 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 8
  store i8 %11, i8* %incdec.ptr.8, align 1, !tbaa !14
  %shr.9 = lshr i64 %1, 40
  %tobool.not.9 = icmp eq i64 %shr.9, 0
  br i1 %tobool.not.9, label %cleanup, label %for.cond.9

for.cond.9:                                       ; preds = %for.cond.8
  %and.10 = and i64 %shr.9, 15
  %arrayidx.10 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.10
  %12 = load i8, i8* %arrayidx.10, align 1, !tbaa !14
  %incdec.ptr.10 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 7
  store i8 %12, i8* %incdec.ptr.9, align 1, !tbaa !14
  %shr.10 = lshr i64 %1, 44
  %tobool.not.10 = icmp eq i64 %shr.10, 0
  br i1 %tobool.not.10, label %cleanup, label %for.cond.10

for.cond.10:                                      ; preds = %for.cond.9
  %and.11 = and i64 %shr.10, 15
  %arrayidx.11 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.11
  %13 = load i8, i8* %arrayidx.11, align 1, !tbaa !14
  %incdec.ptr.11 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 6
  store i8 %13, i8* %incdec.ptr.10, align 1, !tbaa !14
  %shr.11 = lshr i64 %1, 48
  %tobool.not.11 = icmp eq i64 %shr.11, 0
  br i1 %tobool.not.11, label %cleanup, label %for.cond.11

for.cond.11:                                      ; preds = %for.cond.10
  %and.12 = and i64 %shr.11, 15
  %arrayidx.12 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.12
  %14 = load i8, i8* %arrayidx.12, align 1, !tbaa !14
  %incdec.ptr.12 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 5
  store i8 %14, i8* %incdec.ptr.11, align 1, !tbaa !14
  %shr.12 = lshr i64 %1, 52
  %tobool.not.12 = icmp eq i64 %shr.12, 0
  br i1 %tobool.not.12, label %cleanup, label %for.cond.12

for.cond.12:                                      ; preds = %for.cond.11
  %and.13 = and i64 %shr.12, 15
  %arrayidx.13 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.13
  %15 = load i8, i8* %arrayidx.13, align 1, !tbaa !14
  %incdec.ptr.13 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 4
  store i8 %15, i8* %incdec.ptr.12, align 1, !tbaa !14
  %shr.13 = lshr i64 %1, 56
  %tobool.not.13 = icmp eq i64 %shr.13, 0
  br i1 %tobool.not.13, label %cleanup, label %for.cond.13

for.cond.13:                                      ; preds = %for.cond.12
  %and.14 = and i64 %shr.13, 15
  %arrayidx.14 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.14
  %16 = load i8, i8* %arrayidx.14, align 1, !tbaa !14
  %incdec.ptr.14 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 3
  store i8 %16, i8* %incdec.ptr.13, align 1, !tbaa !14
  %shr.14 = lshr i64 %1, 60
  %tobool.not.14 = icmp eq i64 %shr.14, 0
  br i1 %tobool.not.14, label %cleanup, label %for.cond.14

for.cond.14:                                      ; preds = %for.cond.13
  %arrayidx.15 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %shr.14
  %17 = load i8, i8* %arrayidx.15, align 1, !tbaa !14
  %incdec.ptr.15 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 2
  store i8 %17, i8* %incdec.ptr.14, align 1, !tbaa !14
  br label %cleanup
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_type_to_string(i8* %dst, i8* %end, %struct.halide_type_t* %t) local_unnamed_addr #0 {
entry:
  %code = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %t, i64 0, i32 0
  %0 = load i8, i8* %code, align 2, !tbaa !305
  %1 = icmp ult i8 %0, 4
  br i1 %1, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %2 = sext i8 %0 to i64
  %switch.gep = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table.halide_type_to_string, i64 0, i64 %2
  %switch.load = load i8*, i8** %switch.gep, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %code_name.0 = phi i8* [ %switch.load, %switch.lookup ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18.72, i64 0, i64 0), %entry ]
  %call = tail call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* nonnull %code_name.0) #16
  %bits = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %t, i64 0, i32 1
  %3 = load i8, i8* %bits, align 1, !tbaa !136
  %conv4 = zext i8 %3 to i64
  %call5 = tail call i8* @halide_uint64_to_string(i8* %call, i8* %end, i64 %conv4, i32 1) #16
  %lanes = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %t, i64 0, i32 2
  %4 = load i16, i16* %lanes, align 2, !tbaa !306
  %cmp.not = icmp eq i16 %4, 1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %sw.epilog
  %call7 = tail call i8* @halide_string_to_string(i8* %call5, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19.77, i64 0, i64 0)) #16
  %5 = load i16, i16* %lanes, align 2, !tbaa !306
  %conv9 = zext i16 %5 to i64
  %call10 = tail call i8* @halide_uint64_to_string(i8* %call7, i8* %end, i64 %conv9, i32 1) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.epilog
  %dst.addr.0 = phi i8* [ %call10, %if.then ], [ %call5, %sw.epilog ]
  ret i8* %dst.addr.0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_buffer_to_string(i8* %dst, i8* %end, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20.78, i64 0, i64 0)) #16
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21.79, i64 0, i64 0)) #16
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !174
  %call2 = tail call i8* @halide_uint64_to_string(i8* %call1, i8* %end, i64 %0, i32 1) #16
  %call3 = tail call i8* @halide_string_to_string(i8* %call2, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #16
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %1 = bitcast %struct.halide_device_interface_t** %device_interface to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !307
  %call4 = tail call i8* @halide_pointer_to_string(i8* %call3, i8* %end, i8* %2) #16
  %call5 = tail call i8* @halide_string_to_string(i8* %call4, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #16
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %3 = load i8*, i8** %host, align 8, !tbaa !172
  %call6 = tail call i8* @halide_pointer_to_string(i8* %call5, i8* %end, i8* %3) #16
  %call7 = tail call i8* @halide_string_to_string(i8* %call6, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #16
  %flags = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %4 = load i64, i64* %flags, align 8, !tbaa !308
  %call8 = tail call i8* @halide_uint64_to_string(i8* %call7, i8* %end, i64 %4, i32 1) #16
  %call9 = tail call i8* @halide_string_to_string(i8* %call8, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #16
  %type = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 4
  %call10 = tail call i8* @halide_type_to_string(i8* %call9, i8* %end, %struct.halide_type_t* nonnull %type) #16
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %5 = load i32, i32* %dimensions, align 4, !tbaa !175
  %cmp1179 = icmp sgt i32 %5, 0
  br i1 %cmp1179, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.end
  %dst.addr.0.lcssa = phi i8* [ %call10, %if.end ], [ %call26, %for.body ]
  %call27 = tail call i8* @halide_string_to_string(i8* %dst.addr.0.lcssa, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)) #16
  br label %return

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %dst.addr.080 = phi i8* [ %call10, %for.body.lr.ph ], [ %call26, %for.body ]
  %call12 = tail call i8* @halide_string_to_string(i8* %dst.addr.080, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23.82, i64 0, i64 0)) #16
  %6 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !176
  %min = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %6, i64 %indvars.iv, i32 0
  %7 = load i32, i32* %min, align 4, !tbaa !181
  %conv = sext i32 %7 to i64
  %call13 = tail call i8* @halide_int64_to_string(i8* %call12, i8* %end, i64 %conv, i32 1) #16
  %call14 = tail call i8* @halide_string_to_string(i8* %call13, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #16
  %8 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !176
  %extent = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %8, i64 %indvars.iv, i32 1
  %9 = load i32, i32* %extent, align 4, !tbaa !178
  %conv18 = sext i32 %9 to i64
  %call19 = tail call i8* @halide_int64_to_string(i8* %call14, i8* %end, i64 %conv18, i32 1) #16
  %call20 = tail call i8* @halide_string_to_string(i8* %call19, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #16
  %10 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !176
  %stride = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i64 %indvars.iv, i32 2
  %11 = load i32, i32* %stride, align 4, !tbaa !182
  %conv24 = sext i32 %11 to i64
  %call25 = tail call i8* @halide_int64_to_string(i8* %call20, i8* %end, i64 %conv24, i32 1) #16
  %call26 = tail call i8* @halide_string_to_string(i8* %call25, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.83, i64 0, i64 0)) #16
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %12 = load i32, i32* %dimensions, align 4, !tbaa !175
  %13 = sext i32 %12 to i64
  %cmp11 = icmp slt i64 %indvars.iv.next, %13
  br i1 %cmp11, label %for.body, label %for.cond.cleanup, !llvm.loop !309

return:                                           ; preds = %for.cond.cleanup, %if.then
  %retval.0 = phi i8* [ %call, %if.then ], [ %call27, %for.cond.cleanup ]
  ret i8* %retval.0
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define weak i32 @halide_malloc_alignment() local_unnamed_addr #6 {
entry:
  ret i32 64
}

; Function Attrs: nounwind
define weak i32 @halide_reuse_device_allocations(i8* %user_context, i1 zeroext %flag) local_unnamed_addr #4 {
entry:
  %frombool = zext i1 %flag to i8
  store i8 %frombool, i8* @_ZN6Halide7Runtime8Internal36halide_reuse_device_allocations_flagE, align 1, !tbaa !15
  br i1 %flag, label %if.end5, label %if.then

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #15
  %p.014 = load %struct.halide_device_allocation_pool*, %struct.halide_device_allocation_pool** @_ZN6Halide7Runtime8Internal23device_allocation_poolsE, align 8, !tbaa !10
  %cmp.not15 = icmp eq %struct.halide_device_allocation_pool* %p.014, null
  br i1 %cmp.not15, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.then
  %err.0.lcssa = phi i32 [ 0, %if.then ], [ %spec.select, %for.body ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #15
  br label %if.end5

for.body:                                         ; preds = %if.then, %for.body
  %p.017 = phi %struct.halide_device_allocation_pool* [ %p.0, %for.body ], [ %p.014, %if.then ]
  %err.016 = phi i32 [ %spec.select, %for.body ], [ 0, %if.then ]
  %release_unused = getelementptr inbounds %struct.halide_device_allocation_pool, %struct.halide_device_allocation_pool* %p.017, i64 0, i32 0
  %0 = load i32 (i8*)*, i32 (i8*)** %release_unused, align 8, !tbaa !310
  %call = tail call i32 %0(i8* %user_context) #15
  %tobool3.not = icmp eq i32 %call, 0
  %spec.select = select i1 %tobool3.not, i32 %err.016, i32 %call
  %next = getelementptr inbounds %struct.halide_device_allocation_pool, %struct.halide_device_allocation_pool* %p.017, i64 0, i32 1
  %p.0 = load %struct.halide_device_allocation_pool*, %struct.halide_device_allocation_pool** %next, align 8, !tbaa !10
  %cmp.not = icmp eq %struct.halide_device_allocation_pool* %p.0, null
  br i1 %cmp.not, label %for.cond.cleanup, label %for.body, !llvm.loop !312

if.end5:                                          ; preds = %for.cond.cleanup, %entry
  %err.2 = phi i32 [ 0, %entry ], [ %err.0.lcssa, %for.cond.cleanup ]
  ret i32 %err.2
}

; Function Attrs: nounwind willreturn mustprogress
define weak zeroext i1 @halide_can_reuse_device_allocations(i8* %user_context) local_unnamed_addr #2 {
entry:
  %0 = load i8, i8* @_ZN6Halide7Runtime8Internal36halide_reuse_device_allocations_flagE, align 1, !tbaa !15, !range !17
  %tobool = icmp ne i8 %0, 0
  ret i1 %tobool
}

; Function Attrs: nounwind
define weak void @halide_register_device_allocation_pool(%struct.halide_device_allocation_pool* %pool) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #15
  %0 = load %struct.halide_device_allocation_pool*, %struct.halide_device_allocation_pool** @_ZN6Halide7Runtime8Internal23device_allocation_poolsE, align 8, !tbaa !10
  %next = getelementptr inbounds %struct.halide_device_allocation_pool, %struct.halide_device_allocation_pool* %pool, i64 0, i32 1
  store %struct.halide_device_allocation_pool* %0, %struct.halide_device_allocation_pool** %next, align 8, !tbaa !313
  store %struct.halide_device_allocation_pool* %pool, %struct.halide_device_allocation_pool** @_ZN6Halide7Runtime8Internal23device_allocation_poolsE, align 8, !tbaa !10
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #15
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %flags.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %0 = load i64, i64* %flags.i.i, align 8, !tbaa !308
  %and.i.i = and i64 %0, 2
  %cmp.i.i.not = icmp eq i64 %and.i.i, 0
  br i1 %cmp.i.i.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %1 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %and.i.i46 = and i64 %0, 1
  %cmp.i.i47.not = icmp eq i64 %and.i.i46, 0
  br i1 %cmp.i.i47.not, label %if.end9, label %return

if.end9:                                          ; preds = %if.end
  %cmp = icmp eq %struct.halide_device_interface_t* %1, null
  br i1 %cmp, label %return, label %if.end15

if.end15:                                         ; preds = %if.end9
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %1, i64 0, i32 15
  %2 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %copy_to_host = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %2, i64 0, i32 6
  %3 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %copy_to_host, align 8, !tbaa !316
  %call16 = tail call i32 %3(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %cmp17.not = icmp eq i32 %call16, 0
  br i1 %cmp17.not, label %if.end23, label %return

if.end23:                                         ; preds = %if.end15
  %4 = load i64, i64* %flags.i.i, align 8, !tbaa !308
  %and.i.i44 = and i64 %4, -3
  store i64 %and.i.i44, i64* %flags.i.i, align 8, !tbaa !308
  %call24 = tail call i32 @halide_msan_annotate_buffer_is_initialized(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  br label %return

return:                                           ; preds = %if.end23, %if.end15, %if.end9, %if.end, %entry
  %retval.2 = phi i32 [ 0, %entry ], [ 0, %if.end23 ], [ -14, %if.end ], [ -19, %if.end9 ], [ -14, %if.end15 ]
  ret i32 %retval.2
}

; Function Attrs: nounwind mustprogress
define weak void @halide_device_release(i8* %user_context, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i64 0, i32 15
  %0 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %device_release = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %0, i64 0, i32 5
  %1 = load i32 (i8*)*, i32 (i8*)** %device_release, align 8, !tbaa !318
  %call = tail call i32 %1(i8* %user_context) #15
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_copy_to_host(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.88, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end16.i.split

if.end16.i.split:                                 ; preds = %if.end16.i
  %call11 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #16
  br label %cleanup

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %call12 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* %buf) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end16.i.split, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ %call11, %if.end16.i.split ], [ %call12, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @copy_to_device_already_locked(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.89, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit, %if.end16.i
  %cmp1 = icmp eq %struct.halide_device_interface_t* %device_interface, null
  br i1 %cmp1, label %if.then2, label %if.end11

if.then2:                                         ; preds = %if.end
  %device_interface5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %4 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface5, align 8, !tbaa !307
  %cmp6 = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp6, label %if.then7, label %if.end11

if.then7:                                         ; preds = %if.then2
  %call8 = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %cleanup

if.end11:                                         ; preds = %if.then2, %if.end
  %device_interface.addr.0 = phi %struct.halide_device_interface_t* [ %device_interface, %if.end ], [ %4, %if.then2 ]
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %5 = load i64, i64* %device, align 8, !tbaa !174
  %tobool.not = icmp eq i64 %5, 0
  br i1 %tobool.not, label %if.then18, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end11
  %device_interface12 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %6 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface12, align 8, !tbaa !307
  %cmp13.not = icmp eq %struct.halide_device_interface_t* %6, %device_interface.addr.0
  br i1 %cmp13.not, label %if.end27, label %if.then14

if.then14:                                        ; preds = %land.lhs.true
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.9.90, i64 0, i64 0)) #15
  br label %cleanup

if.then18:                                        ; preds = %if.end11
  %call19 = tail call i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* nonnull %buf, %struct.halide_device_interface_t* nonnull %device_interface.addr.0) #16
  %cmp20.not = icmp eq i32 %call19, 0
  br i1 %cmp20.not, label %if.end27, label %cleanup

if.end27:                                         ; preds = %if.then18, %land.lhs.true
  %flags.i.i97 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %7 = load i64, i64* %flags.i.i97, align 8, !tbaa !308
  %and.i.i98 = and i64 %7, 1
  %cmp.i.i99.not = icmp eq i64 %and.i.i98, 0
  br i1 %cmp.i.i99.not, label %cleanup, label %if.then29

if.then29:                                        ; preds = %if.end27
  %and.i.i96 = and i64 %7, 2
  %cmp.i.i.not = icmp eq i64 %and.i.i96, 0
  br i1 %cmp.i.i.not, label %if.else, label %cleanup

if.else:                                          ; preds = %if.then29
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface.addr.0, i64 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %copy_to_device = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i64 0, i32 7
  %9 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %copy_to_device, align 8, !tbaa !319
  %call44 = tail call i32 %9(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %cmp45 = icmp eq i32 %call44, 0
  br i1 %cmp45, label %if.then46, label %cleanup

if.then46:                                        ; preds = %if.else
  %10 = load i64, i64* %flags.i.i97, align 8, !tbaa !308
  %and.i.i = and i64 %10, -2
  store i64 %and.i.i, i64* %flags.i.i97, align 8, !tbaa !308
  br label %cleanup

cleanup:                                          ; preds = %if.then46, %if.else, %if.then29, %if.end27, %if.then18, %if.then14, %if.then7, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %call8, %if.then7 ], [ -42, %if.then14 ], [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.then46 ], [ %call19, %if.then18 ], [ -15, %if.then29 ], [ -15, %if.else ], [ 0, %if.end27 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17.91, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup12

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface3.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface3.phi.trans.insert, align 8, !tbaa !307
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp4.not = icmp eq %struct.halide_device_interface_t* %4, null
  %cmp5.not = icmp eq %struct.halide_device_interface_t* %4, %device_interface
  %or.cond = or i1 %cmp4.not, %cmp5.not
  br i1 %or.cond, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20.92, i64 0, i64 0)) #15
  br label %cleanup12

if.end7:                                          ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %6() #15
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %device_malloc = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 2
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_malloc, align 8, !tbaa !321
  %call9 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %10() #15
  %tobool.not = icmp eq i32 %call9, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -16
  ret i32 %spec.select

cleanup12:                                        ; preds = %if.then6, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -42, %if.then6 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind
define weak i32 @halide_copy_to_device(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  %call = tail call i32 @copy_to_device_already_locked(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) #16
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_sync(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16.93, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup8

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !307
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2 = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %call4 = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %cleanup8

if.end5:                                          ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %device_sync = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 4
  %6 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_sync, align 8, !tbaa !323
  %call6 = tail call i32 %6(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %tobool.not = icmp eq i32 %call6, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -17
  ret i32 %spec.select

cleanup8:                                         ; preds = %if.then3, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ %call4, %if.then3 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21.96, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup12

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !307
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2.not, label %if.end11, label %if.then3

if.then3:                                         ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %6() #15
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %device_free = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 3
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_free, align 8, !tbaa !324
  %call5 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %10() #15
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %11 = load i64, i64* %device, align 8, !tbaa !174
  %cmp7 = icmp eq i64 %11, 0
  br i1 %cmp7, label %do.end, label %if.then8

if.then8:                                         ; preds = %if.then3
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.22.97, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %if.then8, %if.then3
  %tobool.not = icmp eq i32 %call5, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -18
  ret i32 %spec.select

if.end11:                                         ; preds = %if.end
  %flags3.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %12 = load i64, i64* %flags3.i.i, align 8, !tbaa !308
  %and.i.i = and i64 %12, -3
  store i64 %and.i.i, i64* %flags3.i.i, align 8, !tbaa !308
  br label %cleanup12

cleanup12:                                        ; preds = %if.end11, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end11 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak void @halide_device_free_as_destructor(i8* %user_context, i8* %obj) local_unnamed_addr #0 {
entry:
  %0 = bitcast i8* %obj to %struct.halide_buffer_t*
  %call = tail call i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* %0) #16
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_and_host_malloc(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23.98, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup14

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface3.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface3.phi.trans.insert, align 8, !tbaa !307
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp4.not = icmp eq %struct.halide_device_interface_t* %4, null
  %cmp5.not = icmp eq %struct.halide_device_interface_t* %4, %device_interface
  %or.cond = or i1 %cmp4.not, %cmp5.not
  br i1 %or.cond, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.25.99, i64 0, i64 0)) #15
  br label %cleanup14

if.end7:                                          ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %6() #15
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %device_and_host_malloc = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 8
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_and_host_malloc, align 8, !tbaa !325
  %call9 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %10() #15
  %cmp11.not = icmp eq i32 %call9, 0
  br i1 %cmp11.not, label %cleanup14, label %if.then12

if.then12:                                        ; preds = %if.end7
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.26.100, i64 0, i64 0)) #15
  br label %cleanup14

cleanup14:                                        ; preds = %if.then12, %if.end7, %if.then6, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -42, %if.then6 ], [ -16, %if.then12 ], [ 0, %if.end7 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_and_host_free(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.27.101, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup18

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !307
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2.not, label %if.else11, label %if.then3

if.then3:                                         ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %6() #15
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %device_and_host_free = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 9
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_and_host_free, align 8, !tbaa !326
  %call5 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %10() #15
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %11 = load i64, i64* %device, align 8, !tbaa !174
  %cmp7 = icmp eq i64 %11, 0
  br i1 %cmp7, label %do.end, label %if.then8

if.then8:                                         ; preds = %if.then3
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.28.102, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %if.then8, %if.then3
  %tobool.not = icmp eq i32 %call5, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -18
  ret i32 %spec.select

if.else11:                                        ; preds = %if.end
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %12 = load i8*, i8** %host, align 8, !tbaa !172
  %tobool12.not = icmp eq i8* %12, null
  br i1 %tobool12.not, label %if.end17, label %if.then13

if.then13:                                        ; preds = %if.else11
  tail call void @halide_free(i8* %user_context, i8* nonnull %12) #15
  store i8* null, i8** %host, align 8, !tbaa !172
  br label %if.end17

if.end17:                                         ; preds = %if.then13, %if.else11
  %flags3.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %13 = load i64, i64* %flags3.i.i, align 8, !tbaa !308
  %and.i.i = and i64 %13, -3
  store i64 %and.i.i, i64* %flags3.i.i, align 8, !tbaa !308
  br label %cleanup18

cleanup18:                                        ; preds = %if.end17, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end17 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_and_host_malloc(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.103, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %if.end, label %cleanup13

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit, %if.end16.i
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %4 = load i32, i32* %dimensions.i.i, align 4, !tbaa !175
  %cmp19.i.i = icmp sgt i32 %4, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %if.end
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %5 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !176
  %wide.trip.count.i.i = zext i32 %4 to i64
  %min.iters.check = icmp ult i32 %4, 17
  br i1 %min.iters.check, label %for.body.i.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i
  %n.mod.vf = and i64 %wide.trip.count.i.i, 15
  %6 = icmp eq i64 %n.mod.vf, 0
  %7 = select i1 %6, i64 16, i64 %n.mod.vf
  %n.vec = sub nsw i64 %wide.trip.count.i.i, %7
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.ind = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %vec.phi = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi, %vector.body ]
  %vec.phi6 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi18, %vector.body ]
  %vec.phi7 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi19, %vector.body ]
  %vec.phi8 = phi <4 x i64> [ zeroinitializer, %vector.ph ], [ %predphi20, %vector.body ]
  %step.add = add <4 x i64> %vec.ind, <i64 4, i64 4, i64 4, i64 4>
  %step.add3 = add <4 x i64> %vec.ind, <i64 8, i64 8, i64 8, i64 8>
  %step.add4 = add <4 x i64> %vec.ind, <i64 12, i64 12, i64 12, i64 12>
  %8 = or i64 %index, 4
  %9 = or i64 %index, 8
  %10 = or i64 %index, 12
  %11 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %index, i32 2
  %12 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %8, i32 2
  %13 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %9, i32 2
  %14 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %10, i32 2
  %15 = bitcast i32* %11 to <16 x i32>*
  %16 = bitcast i32* %12 to <16 x i32>*
  %17 = bitcast i32* %13 to <16 x i32>*
  %18 = bitcast i32* %14 to <16 x i32>*
  %wide.vec = load <16 x i32>, <16 x i32>* %15, align 4, !tbaa !182
  %wide.vec9 = load <16 x i32>, <16 x i32>* %16, align 4, !tbaa !182
  %wide.vec10 = load <16 x i32>, <16 x i32>* %17, align 4, !tbaa !182
  %wide.vec11 = load <16 x i32>, <16 x i32>* %18, align 4, !tbaa !182
  %strided.vec = shufflevector <16 x i32> %wide.vec, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec12 = shufflevector <16 x i32> %wide.vec9, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec13 = shufflevector <16 x i32> %wide.vec10, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec14 = shufflevector <16 x i32> %wide.vec11, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %19 = icmp sgt <4 x i32> %strided.vec, zeroinitializer
  %20 = icmp sgt <4 x i32> %strided.vec12, zeroinitializer
  %21 = icmp sgt <4 x i32> %strided.vec13, zeroinitializer
  %22 = icmp sgt <4 x i32> %strided.vec14, zeroinitializer
  %23 = zext <4 x i32> %strided.vec to <4 x i64>
  %24 = zext <4 x i32> %strided.vec12 to <4 x i64>
  %25 = zext <4 x i32> %strided.vec13 to <4 x i64>
  %26 = zext <4 x i32> %strided.vec14 to <4 x i64>
  %27 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, <4 x i64> %vec.ind, i32 1
  %28 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, <4 x i64> %step.add, i32 1
  %29 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, <4 x i64> %step.add3, i32 1
  %30 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, <4 x i64> %step.add4, i32 1
  %wide.masked.gather = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %27, i32 4, <4 x i1> %19, <4 x i32> undef), !tbaa !178
  %wide.masked.gather15 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %28, i32 4, <4 x i1> %20, <4 x i32> undef), !tbaa !178
  %wide.masked.gather16 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %29, i32 4, <4 x i1> %21, <4 x i32> undef), !tbaa !178
  %wide.masked.gather17 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %30, i32 4, <4 x i1> %22, <4 x i32> undef), !tbaa !178
  %31 = add nsw <4 x i32> %wide.masked.gather, <i32 -1, i32 -1, i32 -1, i32 -1>
  %32 = add nsw <4 x i32> %wide.masked.gather15, <i32 -1, i32 -1, i32 -1, i32 -1>
  %33 = add nsw <4 x i32> %wide.masked.gather16, <i32 -1, i32 -1, i32 -1, i32 -1>
  %34 = add nsw <4 x i32> %wide.masked.gather17, <i32 -1, i32 -1, i32 -1, i32 -1>
  %35 = sext <4 x i32> %31 to <4 x i64>
  %36 = sext <4 x i32> %32 to <4 x i64>
  %37 = sext <4 x i32> %33 to <4 x i64>
  %38 = sext <4 x i32> %34 to <4 x i64>
  %39 = mul nsw <4 x i64> %35, %23
  %40 = mul nsw <4 x i64> %36, %24
  %41 = mul nsw <4 x i64> %37, %25
  %42 = mul nsw <4 x i64> %38, %26
  %43 = select <4 x i1> %19, <4 x i64> %39, <4 x i64> zeroinitializer
  %predphi = add <4 x i64> %vec.phi, %43
  %44 = select <4 x i1> %20, <4 x i64> %40, <4 x i64> zeroinitializer
  %predphi18 = add <4 x i64> %vec.phi6, %44
  %45 = select <4 x i1> %21, <4 x i64> %41, <4 x i64> zeroinitializer
  %predphi19 = add <4 x i64> %vec.phi7, %45
  %46 = select <4 x i1> %22, <4 x i64> %42, <4 x i64> zeroinitializer
  %predphi20 = add <4 x i64> %vec.phi8, %46
  %index.next = add i64 %index, 16
  %vec.ind.next = add <4 x i64> %vec.ind, <i64 16, i64 16, i64 16, i64 16>
  %47 = icmp eq i64 %index.next, %n.vec
  br i1 %47, label %middle.block, label %vector.body, !llvm.loop !327

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add <4 x i64> %predphi18, %predphi
  %bin.rdx21 = add <4 x i64> %predphi19, %bin.rdx
  %bin.rdx22 = add <4 x i64> %predphi20, %bin.rdx21
  %48 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx22)
  br label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %middle.block, %for.body.lr.ph.i.i
  %indvars.iv.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %n.vec, %middle.block ]
  %index.021.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %48, %middle.block ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %if.end.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %index.021.i.i = phi i64 [ %index.1.i.i, %if.end.i.i ], [ %index.021.i.i.ph, %for.body.i.i.preheader ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv.i.i, i32 2
  %49 = load i32, i32* %stride2.i.i, align 4, !tbaa !182
  %cmp3.i.i = icmp sgt i32 %49, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %49 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv.i.i, i32 1
  %50 = load i32, i32* %extent.i.i, align 4, !tbaa !178
  %sub.i.i = add nsw i32 %50, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i.preheader, label %for.body.i.i, !llvm.loop !328

for.body.i13.i.preheader:                         ; preds = %if.end.i.i
  %min.iters.check26 = icmp ult i32 %4, 17
  br i1 %min.iters.check26, label %for.body.i13.i.preheader64, label %vector.ph27

vector.ph27:                                      ; preds = %for.body.i13.i.preheader
  %n.mod.vf28 = and i64 %wide.trip.count.i.i, 15
  %51 = icmp eq i64 %n.mod.vf28, 0
  %52 = select i1 %51, i64 16, i64 %n.mod.vf28
  %n.vec29 = sub nsw i64 %wide.trip.count.i.i, %52
  br label %vector.body25

vector.body25:                                    ; preds = %vector.body25, %vector.ph27
  %index30 = phi i64 [ 0, %vector.ph27 ], [ %index.next31, %vector.body25 ]
  %vec.ind34 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph27 ], [ %vec.ind.next39, %vector.body25 ]
  %vec.phi40 = phi <4 x i64> [ zeroinitializer, %vector.ph27 ], [ %predphi56, %vector.body25 ]
  %vec.phi41 = phi <4 x i64> [ zeroinitializer, %vector.ph27 ], [ %predphi57, %vector.body25 ]
  %vec.phi42 = phi <4 x i64> [ zeroinitializer, %vector.ph27 ], [ %predphi58, %vector.body25 ]
  %vec.phi43 = phi <4 x i64> [ zeroinitializer, %vector.ph27 ], [ %predphi59, %vector.body25 ]
  %step.add35 = add <4 x i64> %vec.ind34, <i64 4, i64 4, i64 4, i64 4>
  %step.add36 = add <4 x i64> %vec.ind34, <i64 8, i64 8, i64 8, i64 8>
  %step.add37 = add <4 x i64> %vec.ind34, <i64 12, i64 12, i64 12, i64 12>
  %53 = or i64 %index30, 4
  %54 = or i64 %index30, 8
  %55 = or i64 %index30, 12
  %56 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %index30, i32 2
  %57 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %53, i32 2
  %58 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %54, i32 2
  %59 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %55, i32 2
  %60 = bitcast i32* %56 to <16 x i32>*
  %61 = bitcast i32* %57 to <16 x i32>*
  %62 = bitcast i32* %58 to <16 x i32>*
  %63 = bitcast i32* %59 to <16 x i32>*
  %wide.vec44 = load <16 x i32>, <16 x i32>* %60, align 4, !tbaa !182
  %wide.vec45 = load <16 x i32>, <16 x i32>* %61, align 4, !tbaa !182
  %wide.vec46 = load <16 x i32>, <16 x i32>* %62, align 4, !tbaa !182
  %wide.vec47 = load <16 x i32>, <16 x i32>* %63, align 4, !tbaa !182
  %strided.vec48 = shufflevector <16 x i32> %wide.vec44, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec49 = shufflevector <16 x i32> %wide.vec45, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec50 = shufflevector <16 x i32> %wide.vec46, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %strided.vec51 = shufflevector <16 x i32> %wide.vec47, <16 x i32> poison, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %64 = icmp slt <4 x i32> %strided.vec48, zeroinitializer
  %65 = icmp slt <4 x i32> %strided.vec49, zeroinitializer
  %66 = icmp slt <4 x i32> %strided.vec50, zeroinitializer
  %67 = icmp slt <4 x i32> %strided.vec51, zeroinitializer
  %68 = sext <4 x i32> %strided.vec48 to <4 x i64>
  %69 = sext <4 x i32> %strided.vec49 to <4 x i64>
  %70 = sext <4 x i32> %strided.vec50 to <4 x i64>
  %71 = sext <4 x i32> %strided.vec51 to <4 x i64>
  %72 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, <4 x i64> %vec.ind34, i32 1
  %73 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, <4 x i64> %step.add35, i32 1
  %74 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, <4 x i64> %step.add36, i32 1
  %75 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, <4 x i64> %step.add37, i32 1
  %wide.masked.gather52 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %72, i32 4, <4 x i1> %64, <4 x i32> undef), !tbaa !178
  %wide.masked.gather53 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %73, i32 4, <4 x i1> %65, <4 x i32> undef), !tbaa !178
  %wide.masked.gather54 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %74, i32 4, <4 x i1> %66, <4 x i32> undef), !tbaa !178
  %wide.masked.gather55 = call <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*> %75, i32 4, <4 x i1> %67, <4 x i32> undef), !tbaa !178
  %76 = add nsw <4 x i32> %wide.masked.gather52, <i32 -1, i32 -1, i32 -1, i32 -1>
  %77 = add nsw <4 x i32> %wide.masked.gather53, <i32 -1, i32 -1, i32 -1, i32 -1>
  %78 = add nsw <4 x i32> %wide.masked.gather54, <i32 -1, i32 -1, i32 -1, i32 -1>
  %79 = add nsw <4 x i32> %wide.masked.gather55, <i32 -1, i32 -1, i32 -1, i32 -1>
  %80 = sext <4 x i32> %76 to <4 x i64>
  %81 = sext <4 x i32> %77 to <4 x i64>
  %82 = sext <4 x i32> %78 to <4 x i64>
  %83 = sext <4 x i32> %79 to <4 x i64>
  %84 = mul nsw <4 x i64> %80, %68
  %85 = mul nsw <4 x i64> %81, %69
  %86 = mul nsw <4 x i64> %82, %70
  %87 = mul nsw <4 x i64> %83, %71
  %88 = select <4 x i1> %64, <4 x i64> %84, <4 x i64> zeroinitializer
  %predphi56 = add <4 x i64> %vec.phi40, %88
  %89 = select <4 x i1> %65, <4 x i64> %85, <4 x i64> zeroinitializer
  %predphi57 = add <4 x i64> %vec.phi41, %89
  %90 = select <4 x i1> %66, <4 x i64> %86, <4 x i64> zeroinitializer
  %predphi58 = add <4 x i64> %vec.phi42, %90
  %91 = select <4 x i1> %67, <4 x i64> %87, <4 x i64> zeroinitializer
  %predphi59 = add <4 x i64> %vec.phi43, %91
  %index.next31 = add i64 %index30, 16
  %vec.ind.next39 = add <4 x i64> %vec.ind34, <i64 16, i64 16, i64 16, i64 16>
  %92 = icmp eq i64 %index.next31, %n.vec29
  br i1 %92, label %middle.block23, label %vector.body25, !llvm.loop !329

middle.block23:                                   ; preds = %vector.body25
  %bin.rdx60 = add <4 x i64> %predphi57, %predphi56
  %bin.rdx61 = add <4 x i64> %predphi58, %bin.rdx60
  %bin.rdx62 = add <4 x i64> %predphi59, %bin.rdx61
  %93 = call i64 @llvm.vector.reduce.add.v4i64(<4 x i64> %bin.rdx62)
  br label %for.body.i13.i.preheader64

for.body.i13.i.preheader64:                       ; preds = %middle.block23, %for.body.i13.i.preheader
  %indvars.iv.i10.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %n.vec29, %middle.block23 ]
  %index.018.i.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %93, %middle.block23 ]
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %for.body.i13.i.preheader64, %if.end.i24.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ %indvars.iv.i10.i.ph, %for.body.i13.i.preheader64 ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ %index.018.i.i.ph, %for.body.i13.i.preheader64 ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv.i10.i, i32 2
  %94 = load i32, i32* %stride2.i11.i, align 4, !tbaa !182
  %cmp3.i12.i = icmp slt i32 %94, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %94 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv.i10.i, i32 1
  %95 = load i32, i32* %extent.i15.i, align 4, !tbaa !178
  %sub.i16.i = add nsw i32 %95, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !330

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i
  %add8.i.i = add nsw i64 %index.1.i.i, 1
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, %if.end
  %add8.i27.i = phi i64 [ 1, %if.end ], [ %add8.i.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %index.0.lcssa.i9.i = phi i64 [ 0, %if.end ], [ %index.1.i21.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i = sub nsw i64 %add8.i27.i, %index.0.lcssa.i9.i
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 4, i32 1
  %96 = load i8, i8* %bits.i.i, align 1, !tbaa !136
  %conv.i.i = zext i8 %96 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i4.i, 3
  %mul.i = mul i64 %div.i.i, %sub.i
  %call2 = tail call i8* @halide_malloc(i8* %user_context, i64 %mul.i) #15
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  store i8* %call2, i8** %host, align 8, !tbaa !172
  %cmp4 = icmp eq i8* %call2, null
  br i1 %cmp4, label %cleanup13, label %if.end6

if.end6:                                          ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %call7 = tail call i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* nonnull %buf, %struct.halide_device_interface_t* %device_interface) #16
  %cmp8.not = icmp eq i32 %call7, 0
  br i1 %cmp8.not, label %cleanup13, label %if.then9

if.then9:                                         ; preds = %if.end6
  %97 = load i8*, i8** %host, align 8, !tbaa !172
  tail call void @halide_free(i8* %user_context, i8* %97) #15
  store i8* null, i8** %host, align 8, !tbaa !172
  br label %cleanup13

cleanup13:                                        ; preds = %if.then9, %if.end6, %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -1, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ], [ %call7, %if.then9 ], [ 0, %if.end6 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_and_host_free(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.30.104, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end16.i.split

if.end16.i.split:                                 ; preds = %if.end16.i
  %call11 = tail call i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #16
  br label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %call12 = tail call i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* %buf) #16
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split, %if.end16.i.split
  %phi.call = phi i32 [ %call11, %if.end16.i.split ], [ %call12, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split ]
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %4 = load i8*, i8** %host, align 8, !tbaa !172
  %tobool.not = icmp eq i8* %4, null
  br i1 %tobool.not, label %if.end5, label %if.then2

if.then2:                                         ; preds = %if.end
  tail call void @halide_free(i8* %user_context, i8* nonnull %4) #15
  store i8* null, i8** %host, align 8, !tbaa !172
  br label %if.end5

if.end5:                                          ; preds = %if.then2, %if.end
  %flags3.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %5 = load i64, i64* %flags3.i.i, align 8, !tbaa !308
  %and.i.i18 = and i64 %5, -4
  store i64 %and.i.i18, i64* %flags3.i.i, align 8, !tbaa !308
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %phi.call, %if.end5 ], [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_wrap_native(i8* %user_context, %struct.halide_buffer_t* %buf, i64 %handle, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31.105, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup12

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !307
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  %cmp3.not = icmp eq %struct.halide_device_interface_t* %4, %device_interface
  %or.cond = or i1 %cmp2.not, %cmp3.not
  br i1 %or.cond, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.32.106, i64 0, i64 0)) #15
  br label %cleanup12

if.end5:                                          ; preds = %if.end
  %device_interface1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %6() #15
  store %struct.halide_device_interface_t* %device_interface, %struct.halide_device_interface_t** %device_interface1, align 8, !tbaa !307
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %wrap_native = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 14
  %8 = load i32 (i8*, %struct.halide_buffer_t*, i64)*, i32 (i8*, %struct.halide_buffer_t*, i64)** %wrap_native, align 8, !tbaa !331
  %call8 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf, i64 %handle) #15
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %10() #15
  %tobool.not = icmp eq i32 %call8, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -16
  ret i32 %spec.select

cleanup12:                                        ; preds = %if.then4, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -42, %if.then4 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_detach_native(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33.107, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !307
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2.not, label %cleanup, label %if.then3

if.then3:                                         ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %6() #15
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %detach_native = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 15
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %detach_native, align 8, !tbaa !332
  %call5 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %10() #15
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %11 = load i64, i64* %device, align 8, !tbaa !174
  %cmp7 = icmp eq i64 %11, 0
  br i1 %cmp7, label %do.end, label %if.then8

if.then8:                                         ; preds = %if.then3
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.34.108, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %if.then8, %if.then3
  %tobool.not = icmp eq i32 %call5, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -33
  ret i32 %spec.select

cleanup:                                          ; preds = %if.end, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_wrap_native(i8* %user_context, %struct.halide_buffer_t* %buf, i64 %handle) local_unnamed_addr #0 {
entry:
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !174
  %cmp.not = icmp eq i64 %0, 0
  br i1 %cmp.not, label %if.end, label %return

if.end:                                           ; preds = %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %1 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %1, i64 0, i32 15
  %2 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %2, i64 0, i32 0
  %3 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %3() #15
  store i64 %handle, i64* %device, align 8, !tbaa !174
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -32, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_detach_native(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35, i64 0, i64 0)) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !307
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !308
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #15
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %.pre = load i64, i64* %device.phi.trans.insert, align 8, !tbaa !174
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi i64 [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %1, %if.end16.i ]
  %cmp1 = icmp eq i64 %4, 0
  br i1 %cmp1, label %cleanup, label %if.end3

if.end3:                                          ; preds = %if.end
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %5 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %5, i64 0, i32 15
  %6 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %6, i64 0, i32 1
  %7 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %7() #15
  store i64 0, i64* %device, align 8, !tbaa !174
  store %struct.halide_device_interface_t* null, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %if.end, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ 0, %if.end3 ], [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_device_and_host_free_as_destructor(i8* %user_context, i8* %obj) local_unnamed_addr #0 {
entry:
  %0 = bitcast i8* %obj to %struct.halide_buffer_t*
  %call = tail call i32 @halide_device_and_host_free(i8* %user_context, %struct.halide_buffer_t* %0) #16
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_device_host_nop_free(i8* %user_context, i8* %obj) local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_default_buffer_copy(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) local_unnamed_addr #2 {
entry:
  ret i32 -39
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_buffer_copy_already_locked(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) local_unnamed_addr #0 {
entry:
  %c = alloca %"struct.Halide::Runtime::Internal::device_copy", align 8
  %tobool.not = icmp eq %struct.halide_device_interface_t* %dst_device_interface, null
  br i1 %tobool.not, label %if.end13, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %tobool1.not = icmp eq %struct.halide_device_interface_t* %0, null
  %cmp.not = icmp eq %struct.halide_device_interface_t* %0, %dst_device_interface
  %or.cond = or i1 %tobool1.not, %cmp.not
  br i1 %or.cond, label %land.lhs.true5, label %if.then

if.then:                                          ; preds = %land.lhs.true
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.41, i64 0, i64 0)) #15
  br label %cleanup143

land.lhs.true5:                                   ; preds = %land.lhs.true
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  %1 = load i64, i64* %device, align 8, !tbaa !174
  %tobool6.not = icmp eq i64 %1, 0
  br i1 %tobool6.not, label %if.then7, label %if.end13

if.then7:                                         ; preds = %land.lhs.true5
  %call = tail call i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* nonnull %dst, %struct.halide_device_interface_t* nonnull %dst_device_interface) #16
  %tobool10.not = icmp eq i32 %call, 0
  br i1 %tobool10.not, label %if.end13, label %cleanup143

if.end13:                                         ; preds = %if.then7, %land.lhs.true5, %entry
  %device14 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %2 = load i64, i64* %device14, align 8, !tbaa !174
  %cmp15.not = icmp eq i64 %2, 0
  %host22.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 2
  %.pre = load i8*, i8** %host22.phi.trans.insert, align 8, !tbaa !172
  %cmp23.not = icmp eq i8* %.pre, null
  br i1 %cmp15.not, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end13
  br i1 %cmp23.not, label %land.end32, label %land.end.thread264

land.end.thread264:                               ; preds = %land.rhs
  %flags.i.i243 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 3
  %3 = load i64, i64* %flags.i.i243, align 8, !tbaa !308
  %and.i.i244 = and i64 %3, 1
  %cmp.i.i.not = icmp ne i64 %and.i.i244, 0
  br label %land.rhs26

land.end:                                         ; preds = %if.end13
  br i1 %cmp23.not, label %land.end32, label %land.end.land.rhs26_crit_edge

land.end.land.rhs26_crit_edge:                    ; preds = %land.end
  %flags.i.i247.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 3
  %.pre1 = load i64, i64* %flags.i.i247.phi.trans.insert, align 8, !tbaa !308
  br label %land.rhs26

land.rhs26:                                       ; preds = %land.end.land.rhs26_crit_edge, %land.end.thread264
  %4 = phi i64 [ %3, %land.end.thread264 ], [ %.pre1, %land.end.land.rhs26_crit_edge ]
  %5 = phi i1 [ %cmp.i.i.not, %land.end.thread264 ], [ true, %land.end.land.rhs26_crit_edge ]
  %and.i.i248 = and i64 %4, 2
  %cmp.i.i249.not = icmp eq i64 %and.i.i248, 0
  br i1 %cmp.i.i249.not, label %land.end32, label %lor.rhs28

lor.rhs28:                                        ; preds = %land.rhs26
  %device_interface29 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %6 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface29, align 8, !tbaa !307
  %cmp30 = icmp ne %struct.halide_device_interface_t* %6, null
  br label %land.end32

land.end32:                                       ; preds = %lor.rhs28, %land.rhs26, %land.end, %land.rhs
  %cmp23.not263 = phi i1 [ true, %land.end ], [ false, %land.rhs26 ], [ false, %lor.rhs28 ], [ true, %land.rhs ]
  %7 = phi i1 [ true, %land.end ], [ %5, %land.rhs26 ], [ %5, %lor.rhs28 ], [ false, %land.rhs ]
  %8 = phi i1 [ true, %land.end ], [ false, %land.rhs26 ], [ %cmp30, %lor.rhs28 ], [ true, %land.rhs ]
  %host34 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 2
  %9 = load i8*, i8** %host34, align 8, !tbaa !172
  %cmp35.not = icmp eq i8* %9, null
  %cmp20.not = xor i1 %tobool.not, true
  %10 = and i1 %tobool.not, %cmp35.not
  br i1 %10, label %cleanup143, label %if.end41

if.end41:                                         ; preds = %land.end32
  %brmerge229 = or i1 %tobool.not, %7
  br i1 %brmerge229, label %if.then51, label %if.end49

if.end49:                                         ; preds = %if.end41
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i64 0, i32 15
  %11 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %buffer_copy = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %11, i64 0, i32 10
  %12 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy, align 8, !tbaa !333
  %call48 = tail call i32 %12(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* nonnull %dst_device_interface, %struct.halide_buffer_t* nonnull %dst) #15
  %cmp50 = icmp eq i32 %call48, -42
  br i1 %cmp50, label %if.then51, label %if.end117

if.then51:                                        ; preds = %if.end49, %if.end41
  %brmerge231.demorgan = and i1 %cmp23.not263, %cmp35.not
  br i1 %brmerge231.demorgan, label %cleanup143, label %if.end58

if.end58:                                         ; preds = %if.then51
  %brmerge234 = or i1 %8, %cmp20.not
  br i1 %brmerge234, label %if.else, label %if.end117.thread258

if.end117.thread258:                              ; preds = %if.end58
  %13 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %c to i8*
  call void @llvm.lifetime.start.p0i8(i64 416, i8* nonnull %13) #10
  call void @_ZN6Halide7Runtime8Internal16make_buffer_copyEPK15halide_buffer_tbS4_b(%"struct.Halide::Runtime::Internal::device_copy"* nonnull sret(%"struct.Halide::Runtime::Internal::device_copy") align 8 %c, %struct.halide_buffer_t* nonnull %src, i1 zeroext true, %struct.halide_buffer_t* nonnull %dst, i1 zeroext true) #16
  call void @_ZN6Halide7Runtime8Internal11copy_memoryERKNS1_11device_copyEPv(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %c, i8* %user_context) #16
  call void @llvm.lifetime.end.p0i8(i64 416, i8* nonnull %13) #10
  br label %land.lhs.true126

if.else:                                          ; preds = %if.end58
  %brmerge237 = or i1 %7, %cmp20.not
  br i1 %brmerge237, label %if.else81, label %if.then66

if.then66:                                        ; preds = %if.else
  %device_interface69 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %14 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface69, align 8, !tbaa !307
  %impl70 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %14, i64 0, i32 15
  %15 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl70, align 8, !tbaa !314
  %buffer_copy71 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %15, i64 0, i32 10
  %16 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy71, align 8, !tbaa !333
  %call72 = tail call i32 %16(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* null, %struct.halide_buffer_t* nonnull %dst) #15
  %cmp73 = icmp eq i32 %call72, -42
  br i1 %cmp73, label %if.then74, label %if.end117

if.then74:                                        ; preds = %if.then66
  %call75 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* nonnull %src) #16
  %tobool76.not = icmp eq i32 %call75, 0
  br i1 %tobool76.not, label %if.then77, label %cleanup143

if.then77:                                        ; preds = %if.then74
  %call78 = tail call i32 @halide_buffer_copy_already_locked(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* null, %struct.halide_buffer_t* nonnull %dst) #16
  br label %if.end117

if.else81:                                        ; preds = %if.else
  %brmerge239 = or i1 %7, %cmp35.not
  br i1 %brmerge239, label %if.else98, label %if.then85

if.then85:                                        ; preds = %if.else81
  %device_interface90 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %17 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface90, align 8, !tbaa !307
  %impl91 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %17, i64 0, i32 15
  %18 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl91, align 8, !tbaa !314
  %buffer_copy92 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %18, i64 0, i32 10
  %19 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy92, align 8, !tbaa !333
  %call93 = tail call i32 %19(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* null, %struct.halide_buffer_t* nonnull %dst) #15
  %cmp94 = icmp eq i32 %call93, 0
  br i1 %cmp94, label %if.then95, label %cleanup143

if.then95:                                        ; preds = %if.then85
  %flags.i.i245 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 3
  %20 = load i64, i64* %flags.i.i245, align 8, !tbaa !308
  %or.i.i246 = or i64 %20, 1
  store i64 %or.i.i246, i64* %flags.i.i245, align 8, !tbaa !308
  %call96 = tail call i32 @copy_to_device_already_locked(i8* %user_context, %struct.halide_buffer_t* nonnull %dst, %struct.halide_device_interface_t* %dst_device_interface) #16
  br label %if.end117

if.else98:                                        ; preds = %if.else81
  br i1 %tobool.not, label %cleanup143, label %if.then100

if.then100:                                       ; preds = %if.else98
  %call103 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* nonnull %src) #16
  %cmp104 = icmp eq i32 %call103, 0
  br i1 %cmp104, label %if.then105, label %cleanup143

if.then105:                                       ; preds = %if.then100
  %impl106 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i64 0, i32 15
  %21 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl106, align 8, !tbaa !314
  %buffer_copy107 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %21, i64 0, i32 10
  %22 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy107, align 8, !tbaa !333
  %call108 = tail call i32 %22(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* nonnull %dst_device_interface, %struct.halide_buffer_t* nonnull %dst) #15
  br label %if.end117

if.end117:                                        ; preds = %if.then105, %if.then95, %if.then77, %if.then66, %if.end49
  %err.1 = phi i32 [ %call78, %if.then77 ], [ %call72, %if.then66 ], [ %call96, %if.then95 ], [ %call108, %if.then105 ], [ %call48, %if.end49 ]
  %cond = icmp eq i32 %err.1, 0
  br i1 %cond, label %land.lhs.true126, label %cleanup143

land.lhs.true126:                                 ; preds = %if.end117, %if.end117.thread258
  %cmp127.not.old = icmp eq %struct.halide_buffer_t* %dst, %src
  br i1 %cmp127.not.old, label %cleanup143, label %if.then128

if.then128:                                       ; preds = %land.lhs.true126
  %flags.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 3
  %23 = load i64, i64* %flags.i.i, align 8, !tbaa !308
  %or.i.i = and i64 %23, -4
  br i1 %tobool.not, label %if.else133, label %if.then130

if.then130:                                       ; preds = %if.then128
  %or.i.i242 = or i64 %or.i.i, 2
  store i64 %or.i.i242, i64* %flags.i.i, align 8, !tbaa !308
  br label %cleanup143

if.else133:                                       ; preds = %if.then128
  %and.i.i251 = or i64 %or.i.i, 1
  store i64 %and.i.i251, i64* %flags.i.i, align 8, !tbaa !308
  br label %cleanup143

cleanup143:                                       ; preds = %if.else133, %if.then130, %land.lhs.true126, %if.end117, %if.then100, %if.else98, %if.then85, %if.then74, %if.then51, %land.end32, %if.then7, %if.then
  %retval.1 = phi i32 [ -42, %if.then ], [ %call, %if.then7 ], [ -34, %land.end32 ], [ 0, %if.then130 ], [ 0, %if.else133 ], [ 0, %land.lhs.true126 ], [ -42, %if.then51 ], [ %err.1, %if.end117 ], [ -42, %if.else98 ], [ %call103, %if.then100 ], [ %call93, %if.then85 ], [ %call75, %if.then74 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind
define weak i32 @halide_buffer_copy(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  %tobool.not = icmp eq %struct.halide_device_interface_t* %dst_device_interface, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i64 0, i32 15
  %0 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %0, i64 0, i32 0
  %1 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %1() #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %2 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %tobool11.not = icmp eq %struct.halide_device_interface_t* %2, null
  br i1 %tobool11.not, label %if.end16, label %if.then12

if.then12:                                        ; preds = %if.end
  %impl14 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %2, i64 0, i32 15
  %3 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl14, align 8, !tbaa !314
  %use_module15 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %3, i64 0, i32 0
  %4 = load void ()*, void ()** %use_module15, align 8, !tbaa !320
  tail call void %4() #15
  br label %if.end16

if.end16:                                         ; preds = %if.then12, %if.end
  %call = tail call i32 @halide_buffer_copy_already_locked(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) #16
  br i1 %tobool.not, label %if.end20, label %if.then18

if.then18:                                        ; preds = %if.end16
  %impl19 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl19, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 1
  %6 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %6() #15
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end16
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %tobool22.not = icmp eq %struct.halide_device_interface_t* %7, null
  br i1 %tobool22.not, label %if.end27, label %if.then23

if.then23:                                        ; preds = %if.end20
  %impl25 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i64 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl25, align 8, !tbaa !314
  %release_module26 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i64 0, i32 1
  %9 = load void ()*, void ()** %release_module26, align 8, !tbaa !322
  tail call void %9() #15
  br label %if.end27

if.end27:                                         ; preds = %if.then23, %if.end20
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_crop(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_buffer_t* %dst) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.58, i64 0, i64 0)) #15
  ret i32 -40
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_slice(i8* %user_context, %struct.halide_buffer_t* %src, i32 %slice_dim, i32 %slice_pos, %struct.halide_buffer_t* %dst) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.59, i64 0, i64 0)) #15
  ret i32 -40
}

; Function Attrs: nounwind
define weak i32 @halide_device_crop(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_buffer_t* %dst) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !174
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %device1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  %1 = load i64, i64* %device1, align 8, !tbaa !174
  %tobool2.not = icmp eq i64 %1, 0
  br i1 %tobool2.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.60, i64 0, i64 0)) #15
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 5
  %2 = load i32, i32* %dimensions, align 4, !tbaa !175
  %dimensions5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 5
  %3 = load i32, i32* %dimensions5, align 4, !tbaa !175
  %cmp.not = icmp eq i32 %2, %3
  br i1 %cmp.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end4
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.61, i64 0, i64 0)) #15
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %4 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %6() #15
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %impl9 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i64 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl9, align 8, !tbaa !314
  %device_crop = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i64 0, i32 11
  %9 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)** %device_crop, align 8, !tbaa !334
  %call = tail call i32 %9(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_buffer_t* nonnull %dst) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.then6, %if.then3, %entry
  %retval.0 = phi i32 [ -41, %if.then3 ], [ -41, %if.then6 ], [ %call, %if.end7 ], [ 0, %entry ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind
define weak i32 @halide_device_slice(i8* %user_context, %struct.halide_buffer_t* %src, i32 %slice_dim, i32 %slice_pos, %struct.halide_buffer_t* %dst) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !174
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %device1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  %1 = load i64, i64* %device1, align 8, !tbaa !174
  %tobool2.not = icmp eq i64 %1, 0
  br i1 %tobool2.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.60, i64 0, i64 0)) #15
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 5
  %2 = load i32, i32* %dimensions, align 4, !tbaa !175
  %dimensions5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 5
  %3 = load i32, i32* %dimensions5, align 4, !tbaa !175
  %add = add nsw i32 %3, 1
  %cmp.not = icmp eq i32 %2, %add
  br i1 %cmp.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end4
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.64, i64 0, i64 0)) #15
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %4 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !320
  tail call void %6() #15
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %impl9 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i64 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl9, align 8, !tbaa !314
  %device_slice = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i64 0, i32 12
  %9 = load i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)** %device_slice, align 8, !tbaa !335
  %call = tail call i32 %9(i8* %user_context, %struct.halide_buffer_t* nonnull %src, i32 %slice_dim, i32 %slice_pos, %struct.halide_buffer_t* nonnull %dst) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.then6, %if.then3, %entry
  %retval.0 = phi i32 [ -41, %if.then3 ], [ -41, %if.then6 ], [ %call, %if.end7 ], [ 0, %entry ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_release_crop(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !174
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.58, i64 0, i64 0)) #15
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ -40, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
define weak i32 @halide_device_release_crop(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #4 {
entry:
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !174
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %return, label %if.then

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %1 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %1, i64 0, i32 15
  %2 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %device_release_crop = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %2, i64 0, i32 13
  %3 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_release_crop, align 8, !tbaa !336
  %call = tail call i32 %3(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  store i64 0, i64* %device, align 8, !tbaa !174
  %4 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !314
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %4, i64 0, i32 1
  %5 = load void ()*, void ()** %release_module, align 8, !tbaa !322
  tail call void %5() #15
  store %struct.halide_device_interface_t* null, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !307
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #15
  br label %return

return:                                           ; preds = %if.then, %entry
  %retval.0 = phi i32 [ %call, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind willreturn mustprogress
define weak float @halide_float16_bits_to_float(i16 zeroext %bits) local_unnamed_addr #2 {
entry:
  %conv = zext i16 %bits to i32
  %and2 = and i32 %conv, 1023
  %and4 = lshr i32 %conv, 10
  %0 = and i32 %and4, 31
  %cmp = icmp eq i32 %0, 0
  %cmp5 = icmp ne i32 %and2, 0
  %or.cond = and i1 %cmp5, %cmp
  br i1 %or.cond, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = tail call i32 @llvm.ctlz.i32(i32 %and2, i1 true), !range !337
  %sub6 = xor i32 %1, 31
  %shl7 = shl nuw i32 1, %sub6
  %neg = xor i32 %shl7, -1
  %and8 = and i32 %and2, %neg
  %sub9 = sub nsw i32 23, %sub6
  %shl10 = shl i32 %and8, %sub9
  %add11.neg = mul nsw i32 %1, -8388608
  %shl12 = add i32 %add11.neg, 1124073472
  br label %if.end28

if.else:                                          ; preds = %entry
  %shl14 = shl nuw nsw i32 %and2, 13
  br i1 %cmp, label %if.end28, label %if.else18

if.else18:                                        ; preds = %if.else
  %cmp19 = icmp eq i32 %0, 31
  br i1 %cmp19, label %if.end28, label %if.else21

if.else21:                                        ; preds = %if.else18
  %add22 = shl nuw nsw i32 %0, 23
  %phi.bo = add nuw nsw i32 %add22, 939524096
  br label %if.end28

if.end28:                                         ; preds = %if.else21, %if.else18, %if.else, %if.then
  %shl14.sink = phi i32 [ %shl12, %if.then ], [ %shl14, %if.else18 ], [ %shl14, %if.else ], [ %shl14, %if.else21 ]
  %reEncodedExponent15.0.sink = phi i32 [ %shl10, %if.then ], [ 2139095040, %if.else18 ], [ 0, %if.else ], [ %phi.bo, %if.else21 ]
  %bits.signext = sext i16 %bits to i32
  %shl = and i32 %bits.signext, -2147483648
  %or25 = or i32 %shl14.sink, %shl
  %or26 = or i32 %or25, %reEncodedExponent15.0.sink
  %result.sroa.0.0 = bitcast i32 %or26 to float
  ret float %result.sroa.0.0
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

; Function Attrs: nounwind willreturn mustprogress
define weak double @halide_float16_bits_to_double(i16 zeroext %bits) local_unnamed_addr #2 {
entry:
  %call = tail call float @halide_float16_bits_to_float(i16 zeroext %bits) #16
  %conv = fpext float %call to double
  ret double %conv
}

; Function Attrs: nounwind
define weak i32 @halide_error_bounds_inference_call_failed(i8* %user_context, i8* %extern_stage_name, i32 %result) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i71 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.111, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i72 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.111, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i71, %entry.split ], [ %call.i72, %if.then6.i ]
  %ref.tmp.sroa.16.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i10 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.16.0, i8* %extern_stage_name) #15
  %call.i13 = tail call i8* @halide_string_to_string(i8* %call.i10, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.112, i64 0, i64 0)) #15
  %conv.i = sext i32 %result to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %call.i13, i8* %ref.tmp.sroa.16.0, i64 %conv.i, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i16 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 %result
}

; Function Attrs: nounwind
define weak i32 @halide_error_extern_stage_failed(i8* %user_context, i8* %extern_stage_name, i32 %result) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i71 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.113, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i72 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.113, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i71, %entry.split ], [ %call.i72, %if.then6.i ]
  %ref.tmp.sroa.16.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i10 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.16.0, i8* %extern_stage_name) #15
  %call.i13 = tail call i8* @halide_string_to_string(i8* %call.i10, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.112, i64 0, i64 0)) #15
  %conv.i = sext i32 %result to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %call.i13, i8* %ref.tmp.sroa.16.0, i64 %conv.i, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i16 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 %result
}

; Function Attrs: nounwind
define weak i32 @halide_error_explicit_bounds_too_small(i8* %user_context, i8* %func_name, i8* %var_name, i32 %min_bound, i32 %max_bound, i32 %min_required, i32 %max_required) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i151 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.114, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i152 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.114, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i151, %entry.split ], [ %call.i152, %if.then6.i ]
  %ref.tmp.sroa.34.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i18 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.34.0, i8* %var_name) #15
  %call.i21 = tail call i8* @halide_string_to_string(i8* %call.i18, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.115, i64 0, i64 0)) #15
  %call.i24 = tail call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.34.0, i8* %func_name) #15
  %call.i27 = tail call i8* @halide_string_to_string(i8* %call.i24, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.116, i64 0, i64 0)) #15
  %conv.i = sext i32 %min_bound to i64
  %call.i30 = tail call i8* @halide_int64_to_string(i8* %call.i27, i8* %ref.tmp.sroa.34.0, i64 %conv.i, i32 1) #15
  %call.i33 = tail call i8* @halide_string_to_string(i8* %call.i30, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.117, i64 0, i64 0)) #15
  %conv.i36 = sext i32 %max_bound to i64
  %call.i37 = tail call i8* @halide_int64_to_string(i8* %call.i33, i8* %ref.tmp.sroa.34.0, i64 %conv.i36, i32 1) #15
  %call.i40 = tail call i8* @halide_string_to_string(i8* %call.i37, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.118, i64 0, i64 0)) #15
  %conv.i43 = sext i32 %min_required to i64
  %call.i44 = tail call i8* @halide_int64_to_string(i8* %call.i40, i8* %ref.tmp.sroa.34.0, i64 %conv.i43, i32 1) #15
  %call.i47 = tail call i8* @halide_string_to_string(i8* %call.i44, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.117, i64 0, i64 0)) #15
  %conv.i50 = sext i32 %max_required to i64
  %call.i51 = tail call i8* @halide_int64_to_string(i8* %call.i47, i8* %ref.tmp.sroa.34.0, i64 %conv.i50, i32 1) #15
  %call.i54 = tail call i8* @halide_string_to_string(i8* %call.i51, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i54 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -2
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_type(i8* %user_context, i8* %func_name, i32 %type_given_bits, i32 %correct_type_bits) local_unnamed_addr #4 {
entry:
  %type_given_bits.addr = alloca i32, align 4
  %correct_type_bits.addr = alloca i32, align 4
  %correct_type = alloca %struct.halide_type_t, align 2
  %type_given = alloca %struct.halide_type_t, align 2
  store i32 %type_given_bits, i32* %type_given_bits.addr, align 4, !tbaa !73
  store i32 %correct_type_bits, i32* %correct_type_bits.addr, align 4, !tbaa !73
  %0 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %correct_type, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #10
  store i8 0, i8* %0, align 2, !tbaa !305
  %bits.i = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %correct_type, i64 0, i32 1
  store i8 0, i8* %bits.i, align 1, !tbaa !136
  %lanes.i = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %correct_type, i64 0, i32 2
  store i16 0, i16* %lanes.i, align 2, !tbaa !306
  %1 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %type_given, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #10
  store i8 0, i8* %1, align 2, !tbaa !305
  %bits.i8 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %type_given, i64 0, i32 1
  store i8 0, i8* %bits.i8, align 1, !tbaa !136
  %lanes.i9 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %type_given, i64 0, i32 2
  store i16 0, i16* %lanes.i9, align 2, !tbaa !306
  %2 = bitcast i32* %correct_type_bits.addr to i8*
  %call = call i8* @memcpy(i8* nonnull %0, i8* nonnull %2, i64 4) #15
  %3 = bitcast i32* %type_given_bits.addr to i8*
  %call1 = call i8* @memcpy(i8* nonnull %1, i8* nonnull %3, i64 4) #15
  %call.i = call i8* @malloc(i64 1024) #15
  %tobool.not.i12 = icmp eq i8* %call.i, null
  br i1 %tobool.not.i12, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i151 = call i8* @halide_string_to_string(i8* null, i8* null, i8* %func_name) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i152 = call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* %func_name) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i151, %entry.split ], [ %call.i152, %if.then6.i ]
  %ref.tmp.sroa.18.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i18 = call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9.120, i64 0, i64 0)) #15
  %call.i21 = call i8* @halide_type_to_string(i8* %call.i18, i8* %ref.tmp.sroa.18.0, %struct.halide_type_t* nonnull %correct_type) #15
  %call.i24 = call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10.121, i64 0, i64 0)) #15
  %call.i27 = call i8* @halide_type_to_string(i8* %call.i24, i8* %ref.tmp.sroa.18.0, %struct.halide_type_t* nonnull %type_given) #15
  br i1 %tobool.not.i12, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i27 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  call void @free(i8* %call.i) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #10
  ret i32 -3
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_dimensions(i8* %user_context, i8* %func_name, i32 %dimensions_given, i32 %correct_dimensions) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* %func_name) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* %func_name) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.122, i64 0, i64 0)) #15
  %conv.i = sext i32 %correct_dimensions to i64
  %call.i14 = tail call i8* @halide_int64_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i64 %conv.i, i32 1) #15
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.12.123, i64 0, i64 0)) #15
  %conv.i20 = sext i32 %dimensions_given to i64
  %call.i21 = tail call i8* @halide_int64_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i64 %conv.i20, i32 1) #15
  %call.i24 = tail call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13.124, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i24 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -43
}

; Function Attrs: nounwind
define weak i32 @halide_error_access_out_of_bounds(i8* %user_context, i8* %func_name, i32 %dimension, i32 %min_touched, i32 %max_touched, i32 %min_valid, i32 %max_valid) local_unnamed_addr #4 {
entry:
  %cmp = icmp slt i32 %min_touched, %min_valid
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.split, label %if.then6.i

if.then.split:                                    ; preds = %if.then
  %call.i271 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* %func_name) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %if.then
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i272 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* %func_name) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then.split, %if.then6.i
  %phi.call = phi i8* [ %call.i271, %if.then.split ], [ %call.i272, %if.then6.i ]
  %ref.tmp.sroa.22.0 = phi i8* [ null, %if.then.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i30 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14.125, i64 0, i64 0)) #15
  %conv.i = sext i32 %min_touched to i64
  %call.i33 = tail call i8* @halide_int64_to_string(i8* %call.i30, i8* %ref.tmp.sroa.22.0, i64 %conv.i, i32 1) #15
  %call.i36 = tail call i8* @halide_string_to_string(i8* %call.i33, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15.126, i64 0, i64 0)) #15
  %conv.i39 = sext i32 %min_valid to i64
  %call.i40 = tail call i8* @halide_int64_to_string(i8* %call.i36, i8* %ref.tmp.sroa.22.0, i64 %conv.i39, i32 1) #15
  %call.i43 = tail call i8* @halide_string_to_string(i8* %call.i40, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16.127, i64 0, i64 0)) #15
  %conv.i46 = sext i32 %dimension to i64
  %call.i47 = tail call i8* @halide_int64_to_string(i8* %call.i43, i8* %ref.tmp.sroa.22.0, i64 %conv.i46, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %if.end17.sink.split

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i47 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %if.end17.sink.split

if.else:                                          ; preds = %entry
  %cmp7 = icmp sgt i32 %max_touched, %max_valid
  br i1 %cmp7, label %if.then8, label %if.end17

if.then8:                                         ; preds = %if.else
  %call.i53 = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i56 = icmp eq i8* %call.i53, null
  br i1 %tobool.not.i56, label %if.then8.split, label %if.then6.i59

if.then8.split:                                   ; preds = %if.then8
  %call.i653 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* %func_name) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62

if.then6.i59:                                     ; preds = %if.then8
  %add.ptr.i57 = getelementptr inbounds i8, i8* %call.i53, i64 1023
  store i8 0, i8* %add.ptr.i57, align 1, !tbaa !14
  %call.i654 = tail call i8* @halide_string_to_string(i8* nonnull %call.i53, i8* nonnull %add.ptr.i57, i8* %func_name) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62: ; preds = %if.then8.split, %if.then6.i59
  %phi.call5 = phi i8* [ %call.i653, %if.then8.split ], [ %call.i654, %if.then6.i59 ]
  %ref.tmp9.sroa.22.0 = phi i8* [ null, %if.then8.split ], [ %add.ptr.i57, %if.then6.i59 ]
  %call.i68 = tail call i8* @halide_string_to_string(i8* %phi.call5, i8* %ref.tmp9.sroa.22.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14.125, i64 0, i64 0)) #15
  %conv.i71 = sext i32 %max_touched to i64
  %call.i72 = tail call i8* @halide_int64_to_string(i8* %call.i68, i8* %ref.tmp9.sroa.22.0, i64 %conv.i71, i32 1) #15
  %call.i75 = tail call i8* @halide_string_to_string(i8* %call.i72, i8* %ref.tmp9.sroa.22.0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17.128, i64 0, i64 0)) #15
  %conv.i78 = sext i32 %max_valid to i64
  %call.i79 = tail call i8* @halide_int64_to_string(i8* %call.i75, i8* %ref.tmp9.sroa.22.0, i64 %conv.i78, i32 1) #15
  %call.i82 = tail call i8* @halide_string_to_string(i8* %call.i79, i8* %ref.tmp9.sroa.22.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16.127, i64 0, i64 0)) #15
  %conv.i85 = sext i32 %dimension to i64
  %call.i86 = tail call i8* @halide_int64_to_string(i8* %call.i82, i8* %ref.tmp9.sroa.22.0, i64 %conv.i85, i32 1) #15
  br i1 %tobool.not.i56, label %if.then.i90, label %if.else.i100

if.then.i90:                                      ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %if.end17.sink.split

if.else.i100:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62
  %sub.ptr.lhs.cast.i.i95 = ptrtoint i8* %call.i86 to i64
  %sub.ptr.rhs.cast.i.i96 = ptrtoint i8* %call.i53 to i64
  %sub.ptr.sub.i.i97 = sub i64 1, %sub.ptr.rhs.cast.i.i96
  %add.i.i98 = add i64 %sub.ptr.sub.i.i97, %sub.ptr.lhs.cast.i.i95
  %call.i.i99 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i53, i64 %add.i.i98) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i53) #15
  br label %if.end17.sink.split

if.end17.sink.split:                              ; preds = %if.else.i100, %if.then.i90, %if.else.i, %if.then.i
  %call.i53.sink = phi i8* [ %call.i, %if.else.i ], [ null, %if.then.i ], [ %call.i53, %if.else.i100 ], [ null, %if.then.i90 ]
  tail call void @free(i8* %call.i53.sink) #15
  br label %if.end17

if.end17:                                         ; preds = %if.end17.sink.split, %if.else
  ret i32 -4
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_allocation_too_large(i8* %user_context, i8* %buffer_name, i64 %allocation_size, i64 %max_size) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.129, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.129, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %buffer_name) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_uint64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %allocation_size, i32 1) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20.131, i64 0, i64 0)) #15
  %call.i23 = tail call i8* @halide_uint64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_size, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -5
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_extents_negative(i8* %user_context, i8* %buffer_name, i32 %dimension, i32 %extent) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i91 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21.132, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i92 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21.132, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i91, %entry.split ], [ %call.i92, %if.then6.i ]
  %ref.tmp.sroa.22.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i12 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.22.0, i8* %buffer_name) #15
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22.133, i64 0, i64 0)) #15
  %conv.i = sext i32 %dimension to i64
  %call.i18 = tail call i8* @halide_int64_to_string(i8* %call.i15, i8* %ref.tmp.sroa.22.0, i64 %conv.i, i32 1) #15
  %call.i21 = tail call i8* @halide_string_to_string(i8* %call.i18, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.134, i64 0, i64 0)) #15
  %conv.i24 = sext i32 %extent to i64
  %call.i25 = tail call i8* @halide_int64_to_string(i8* %call.i21, i8* %ref.tmp.sroa.22.0, i64 %conv.i24, i32 1) #15
  %call.i28 = tail call i8* @halide_string_to_string(i8* %call.i25, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i28 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -28
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_extents_too_large(i8* %user_context, i8* %buffer_name, i64 %actual_size, i64 %max_size) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.135, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.135, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %buffer_name) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_int64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %actual_size, i32 1) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20.131, i64 0, i64 0)) #15
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_size, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -6
}

; Function Attrs: nounwind
define weak i32 @halide_error_constraints_make_required_region_smaller(i8* %user_context, i8* %buffer_name, i32 %dimension, i32 %constrained_min, i32 %constrained_extent, i32 %required_min, i32 %required_extent) local_unnamed_addr #4 {
entry:
  %add = add i32 %required_min, -1
  %sub = add i32 %add, %required_extent
  %add1 = add i32 %constrained_min, -1
  %sub2 = add i32 %add1, %constrained_extent
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i231 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25.136, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i232 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25.136, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i231, %entry.split ], [ %call.i232, %if.then6.i ]
  %ref.tmp.sroa.38.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i26 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.38.0, i8* %buffer_name) #15
  %call.i29 = tail call i8* @halide_string_to_string(i8* %call.i26, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.26.137, i64 0, i64 0)) #15
  %conv.i = sext i32 %dimension to i64
  %call.i32 = tail call i8* @halide_int64_to_string(i8* %call.i29, i8* %ref.tmp.sroa.38.0, i64 %conv.i, i32 1) #15
  %call.i35 = tail call i8* @halide_string_to_string(i8* %call.i32, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.138, i64 0, i64 0)) #15
  %call.i38 = tail call i8* @halide_string_to_string(i8* %call.i35, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28.139, i64 0, i64 0)) #15
  %conv.i41 = sext i32 %required_min to i64
  %call.i42 = tail call i8* @halide_int64_to_string(i8* %call.i38, i8* %ref.tmp.sroa.38.0, i64 %conv.i41, i32 1) #15
  %call.i45 = tail call i8* @halide_string_to_string(i8* %call.i42, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.117, i64 0, i64 0)) #15
  %conv.i48 = sext i32 %sub to i64
  %call.i49 = tail call i8* @halide_int64_to_string(i8* %call.i45, i8* %ref.tmp.sroa.38.0, i64 %conv.i48, i32 1) #15
  %call.i52 = tail call i8* @halide_string_to_string(i8* %call.i49, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.138, i64 0, i64 0)) #15
  %call.i55 = tail call i8* @halide_string_to_string(i8* %call.i52, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29.140, i64 0, i64 0)) #15
  %conv.i58 = sext i32 %constrained_min to i64
  %call.i59 = tail call i8* @halide_int64_to_string(i8* %call.i55, i8* %ref.tmp.sroa.38.0, i64 %conv.i58, i32 1) #15
  %call.i62 = tail call i8* @halide_string_to_string(i8* %call.i59, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.117, i64 0, i64 0)) #15
  %conv.i65 = sext i32 %sub2 to i64
  %call.i66 = tail call i8* @halide_int64_to_string(i8* %call.i62, i8* %ref.tmp.sroa.38.0, i64 %conv.i65, i32 1) #15
  %call.i69 = tail call i8* @halide_string_to_string(i8* %call.i66, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i69 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -7
}

; Function Attrs: nounwind
define weak i32 @halide_error_constraint_violated(i8* %user_context, i8* %var, i32 %val, i8* %constrained_var, i32 %constrained_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i111 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31.142, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i112 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31.142, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i111, %entry.split ], [ %call.i112, %if.then6.i ]
  %ref.tmp.sroa.26.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i14 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.26.0, i8* %var) #15
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.143, i64 0, i64 0)) #15
  %conv.i = sext i32 %val to i64
  %call.i20 = tail call i8* @halide_int64_to_string(i8* %call.i17, i8* %ref.tmp.sroa.26.0, i64 %conv.i, i32 1) #15
  %call.i23 = tail call i8* @halide_string_to_string(i8* %call.i20, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33.144, i64 0, i64 0)) #15
  %call.i26 = tail call i8* @halide_string_to_string(i8* %call.i23, i8* %ref.tmp.sroa.26.0, i8* %constrained_var) #15
  %call.i29 = tail call i8* @halide_string_to_string(i8* %call.i26, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.143, i64 0, i64 0)) #15
  %conv.i32 = sext i32 %constrained_val to i64
  %call.i33 = tail call i8* @halide_int64_to_string(i8* %call.i29, i8* %ref.tmp.sroa.26.0, i64 %conv.i32, i32 1) #15
  %call.i36 = tail call i8* @halide_string_to_string(i8* %call.i33, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i36 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -8
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_i64(i8* %user_context, i8* %param_name, i64 %val, i64 %min_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_int64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35.146, i64 0, i64 0)) #15
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %min_val, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -9
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_u64(i8* %user_context, i8* %param_name, i64 %val, i64 %min_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_uint64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35.146, i64 0, i64 0)) #15
  %call.i23 = tail call i8* @halide_uint64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %min_val, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -9
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_f64(i8* %user_context, i8* %param_name, double %val, double %min_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_double_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, double %val, i32 1) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35.146, i64 0, i64 0)) #15
  %call.i23 = tail call i8* @halide_double_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, double %min_val, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -9
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_i64(i8* %user_context, i8* %param_name, i64 %val, i64 %max_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_int64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0)) #15
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_val, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -10
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_u64(i8* %user_context, i8* %param_name, i64 %val, i64 %max_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_uint64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0)) #15
  %call.i23 = tail call i8* @halide_uint64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_val, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -10
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_f64(i8* %user_context, i8* %param_name, double %val, double %max_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_double_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, double %val, i32 1) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0)) #15
  %call.i23 = tail call i8* @halide_double_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, double %max_val, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -10
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_error_out_of_memory(i8* %user_context) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.37, i64 0, i64 0)) #15
  ret i32 -11
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_argument_is_null(i8* %user_context, i8* %buffer_name) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i51 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i52 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i51, %entry.split ], [ %call.i52, %if.then6.i ]
  %ref.tmp.sroa.14.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.14.0, i8* %buffer_name) #15
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i11 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -12
}

; Function Attrs: nounwind
define weak i32 @halide_error_debug_to_file_failed(i8* %user_context, i8* %func, i8* %filename, i32 %error_code) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.40, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.40, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %func) #15
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41.147, i64 0, i64 0)) #15
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i8* %filename) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0)) #15
  %conv.i = sext i32 %error_code to i64
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %conv.i, i32 1) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -13
}

; Function Attrs: nounwind
define weak i32 @halide_error_unaligned_host_ptr(i8* %user_context, i8* %func, i32 %alignment) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i71 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i72 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i71, %entry.split ], [ %call.i72, %if.then6.i ]
  %ref.tmp.sroa.18.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i10 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.18.0, i8* %func) #15
  %call.i13 = tail call i8* @halide_string_to_string(i8* %call.i10, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44, i64 0, i64 0)) #15
  %conv.i = sext i32 %alignment to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %call.i13, i8* %ref.tmp.sroa.18.0, i64 %conv.i, i32 1) #15
  %call.i19 = tail call i8* @halide_string_to_string(i8* %call.i16, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.45, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i19 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -24
}

; Function Attrs: nounwind
define weak i32 @halide_error_device_dirty_with_no_device_support(i8* %user_context, i8* %func) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i61 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i62 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i61, %entry.split ], [ %call.i62, %if.then6.i ]
  %ref.tmp.sroa.16.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i9 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.16.0, i8* %func) #15
  %call.i12 = tail call i8* @halide_string_to_string(i8* %call.i9, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.47, i64 0, i64 0)) #15
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.48, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i15 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -44
}

; Function Attrs: nounwind
define weak i32 @halide_error_host_is_null(i8* %user_context, i8* %func) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i51 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i52 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i51, %entry.split ], [ %call.i52, %if.then6.i ]
  %ref.tmp.sroa.14.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.14.0, i8* %func) #15
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.49, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i11 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -34
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_fold(i8* %user_context, i8* %func_name, i8* %var_name, i8* %loop_name) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i91 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50.148, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i92 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50.148, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i91, %entry.split ], [ %call.i92, %if.then6.i ]
  %ref.tmp.sroa.22.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i12 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.22.0, i8* %var_name) #15
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #15
  %call.i18 = tail call i8* @halide_string_to_string(i8* %call.i15, i8* %ref.tmp.sroa.22.0, i8* %func_name) #15
  %call.i21 = tail call i8* @halide_string_to_string(i8* %call.i18, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.52, i64 0, i64 0)) #15
  %call.i24 = tail call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.22.0, i8* %loop_name) #15
  %call.i27 = tail call i8* @halide_string_to_string(i8* %call.i24, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i27 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -25
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_extern_fold(i8* %user_context, i8* %func_name, i32 %dim, i32 %min, i32 %extent, i32 %valid_min, i32 %fold_factor) local_unnamed_addr #4 {
entry:
  %cmp = icmp slt i32 %min, %valid_min
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %add = add nsw i32 %extent, %min
  %add1 = add nsw i32 %fold_factor, %valid_min
  %cmp2 = icmp sgt i32 %add, %add1
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.split, label %if.then6.i

if.then.split:                                    ; preds = %if.then
  %call.i521 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %if.then
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i522 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then.split, %if.then6.i
  %phi.call = phi i8* [ %call.i521, %if.then.split ], [ %call.i522, %if.then6.i ]
  %ref.tmp.sroa.36.0 = phi i8* [ null, %if.then.split ], [ %add.ptr.i, %if.then6.i ]
  %conv.i = sext i32 %dim to i64
  %call.i55 = tail call i8* @halide_int64_to_string(i8* %phi.call, i8* %ref.tmp.sroa.36.0, i64 %conv.i, i32 1) #15
  %call.i58 = tail call i8* @halide_string_to_string(i8* %call.i55, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #15
  %call.i61 = tail call i8* @halide_string_to_string(i8* %call.i58, i8* %ref.tmp.sroa.36.0, i8* %func_name) #15
  %call.i64 = tail call i8* @halide_string_to_string(i8* %call.i61, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.54, i64 0, i64 0)) #15
  %conv.i67 = sext i32 %min to i64
  %call.i68 = tail call i8* @halide_int64_to_string(i8* %call.i64, i8* %ref.tmp.sroa.36.0, i64 %conv.i67, i32 1) #15
  %call.i71 = tail call i8* @halide_string_to_string(i8* %call.i68, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #15
  %add9 = add nsw i32 %extent, %min
  %sub = add nsw i32 %add9, -1
  %conv.i74 = sext i32 %sub to i64
  %call.i75 = tail call i8* @halide_int64_to_string(i8* %call.i71, i8* %ref.tmp.sroa.36.0, i64 %conv.i74, i32 1) #15
  %call.i78 = tail call i8* @halide_string_to_string(i8* %call.i75, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0)) #15
  %call.i81 = tail call i8* @halide_string_to_string(i8* %call.i78, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.57, i64 0, i64 0)) #15
  %conv.i84 = sext i32 %valid_min to i64
  %call.i85 = tail call i8* @halide_int64_to_string(i8* %call.i81, i8* %ref.tmp.sroa.36.0, i64 %conv.i84, i32 1) #15
  %call.i88 = tail call i8* @halide_string_to_string(i8* %call.i85, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #15
  %add15 = add nsw i32 %fold_factor, %valid_min
  %sub16 = add nsw i32 %add15, -1
  %conv.i91 = sext i32 %sub16 to i64
  %call.i92 = tail call i8* @halide_int64_to_string(i8* %call.i88, i8* %ref.tmp.sroa.36.0, i64 %conv.i91, i32 1) #15
  %call.i95 = tail call i8* @halide_string_to_string(i8* %call.i92, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58.149, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %if.end

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i95 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false
  %call.i101 = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i104 = icmp eq i8* %call.i101, null
  br i1 %tobool.not.i104, label %if.else.split, label %if.then6.i107

if.else.split:                                    ; preds = %if.else
  %call.i1133 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110

if.then6.i107:                                    ; preds = %if.else
  %add.ptr.i105 = getelementptr inbounds i8, i8* %call.i101, i64 1023
  store i8 0, i8* %add.ptr.i105, align 1, !tbaa !14
  %call.i1134 = tail call i8* @halide_string_to_string(i8* nonnull %call.i101, i8* nonnull %add.ptr.i105, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110: ; preds = %if.else.split, %if.then6.i107
  %phi.call5 = phi i8* [ %call.i1133, %if.else.split ], [ %call.i1134, %if.then6.i107 ]
  %ref.tmp19.sroa.34.0 = phi i8* [ null, %if.else.split ], [ %add.ptr.i105, %if.then6.i107 ]
  %conv.i116 = sext i32 %dim to i64
  %call.i117 = tail call i8* @halide_int64_to_string(i8* %phi.call5, i8* %ref.tmp19.sroa.34.0, i64 %conv.i116, i32 1) #15
  %call.i120 = tail call i8* @halide_string_to_string(i8* %call.i117, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #15
  %call.i123 = tail call i8* @halide_string_to_string(i8* %call.i120, i8* %ref.tmp19.sroa.34.0, i8* %func_name) #15
  %call.i126 = tail call i8* @halide_string_to_string(i8* %call.i123, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.54, i64 0, i64 0)) #15
  %conv.i129 = sext i32 %min to i64
  %call.i130 = tail call i8* @halide_int64_to_string(i8* %call.i126, i8* %ref.tmp19.sroa.34.0, i64 %conv.i129, i32 1) #15
  %call.i133 = tail call i8* @halide_string_to_string(i8* %call.i130, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #15
  %sub28 = add nsw i32 %add, -1
  %conv.i136 = sext i32 %sub28 to i64
  %call.i137 = tail call i8* @halide_int64_to_string(i8* %call.i133, i8* %ref.tmp19.sroa.34.0, i64 %conv.i136, i32 1) #15
  %call.i140 = tail call i8* @halide_string_to_string(i8* %call.i137, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0)) #15
  %call.i143 = tail call i8* @halide_string_to_string(i8* %call.i140, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.59.150, i64 0, i64 0)) #15
  %call.i146 = tail call i8* @halide_string_to_string(i8* %call.i143, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.60.151, i64 0, i64 0)) #15
  %conv.i149 = sext i32 %fold_factor to i64
  %call.i150 = tail call i8* @halide_int64_to_string(i8* %call.i146, i8* %ref.tmp19.sroa.34.0, i64 %conv.i149, i32 1) #15
  %call.i153 = tail call i8* @halide_string_to_string(i8* %call.i150, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #15
  br i1 %tobool.not.i104, label %if.then.i157, label %if.else.i167

if.then.i157:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %if.end

if.else.i167:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110
  %sub.ptr.lhs.cast.i.i162 = ptrtoint i8* %call.i153 to i64
  %sub.ptr.rhs.cast.i.i163 = ptrtoint i8* %call.i101 to i64
  %sub.ptr.sub.i.i164 = sub i64 1, %sub.ptr.rhs.cast.i.i163
  %add.i.i165 = add i64 %sub.ptr.sub.i.i164, %sub.ptr.lhs.cast.i.i162
  %call.i.i166 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i101, i64 %add.i.i165) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i101) #15
  br label %if.end

if.end:                                           ; preds = %if.else.i167, %if.then.i157, %if.else.i, %if.then.i
  %call.i101.sink = phi i8* [ %call.i, %if.else.i ], [ null, %if.then.i ], [ %call.i101, %if.else.i167 ], [ null, %if.then.i157 ]
  tail call void @free(i8* %call.i101.sink) #15
  ret i32 -35
}

; Function Attrs: nounwind
define weak i32 @halide_error_fold_factor_too_small(i8* %user_context, i8* %func_name, i8* %var_name, i32 %fold_factor, i8* %loop_name, i32 %required_extent) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i131 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.61.152, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i132 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.61.152, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i131, %entry.split ], [ %call.i132, %if.then6.i ]
  %ref.tmp.sroa.30.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %conv.i = sext i32 %fold_factor to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %phi.call, i8* %ref.tmp.sroa.30.0, i64 %conv.i, i32 1) #15
  %call.i19 = tail call i8* @halide_string_to_string(i8* %call.i16, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0)) #15
  %call.i22 = tail call i8* @halide_string_to_string(i8* %call.i19, i8* %ref.tmp.sroa.30.0, i8* %var_name) #15
  %call.i25 = tail call i8* @halide_string_to_string(i8* %call.i22, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #15
  %call.i28 = tail call i8* @halide_string_to_string(i8* %call.i25, i8* %ref.tmp.sroa.30.0, i8* %func_name) #15
  %call.i31 = tail call i8* @halide_string_to_string(i8* %call.i28, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.63, i64 0, i64 0)) #15
  %call.i34 = tail call i8* @halide_string_to_string(i8* %call.i31, i8* %ref.tmp.sroa.30.0, i8* %loop_name) #15
  %call.i37 = tail call i8* @halide_string_to_string(i8* %call.i34, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.143, i64 0, i64 0)) #15
  %conv.i40 = sext i32 %required_extent to i64
  %call.i41 = tail call i8* @halide_int64_to_string(i8* %call.i37, i8* %ref.tmp.sroa.30.0, i64 %conv.i40, i32 1) #15
  %call.i44 = tail call i8* @halide_string_to_string(i8* %call.i41, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64.153, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i44 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -26
}

; Function Attrs: nounwind
define weak i32 @halide_error_requirement_failed(i8* %user_context, i8* %condition, i8* %message) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i61 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.65, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i62 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.65, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i61, %entry.split ], [ %call.i62, %if.then6.i ]
  %ref.tmp.sroa.16.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i9 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.16.0, i8* %condition) #15
  %call.i12 = tail call i8* @halide_string_to_string(i8* %call.i9, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i64 0, i64 0)) #15
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.16.0, i8* %message) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i15 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -27
}

; Function Attrs: nounwind
define weak i32 @halide_error_specialize_fail(i8* %user_context, i8* %message) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i41 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0)) #15
  %call.i75 = tail call i8* @halide_string_to_string(i8* %call.i41, i8* null, i8* %message) #15
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i42 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0)) #15
  %call.i7 = tail call i8* @halide_string_to_string(i8* %call.i42, i8* nonnull %add.ptr.i, i8* %message) #15
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i7 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -31
}

; Function Attrs: nounwind
define weak i32 @halide_error_no_device_interface(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.68, i64 0, i64 0)) #15
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.68, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -19
}

; Function Attrs: nounwind
define weak i32 @halide_error_device_interface_no_device(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.69, i64 0, i64 0)) #15
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.69, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -36
}

; Function Attrs: nounwind
define weak i32 @halide_error_host_and_device_dirty(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.70, i64 0, i64 0)) #15
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.70, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -37
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_is_null(i8* %user_context, i8* %routine) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i51 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i52 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i51, %entry.split ], [ %call.i52, %if.then6.i ]
  %ref.tmp.sroa.14.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.14.0, i8* %routine) #15
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.72, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i11 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -38
}

; Function Attrs: nounwind
define weak i32 @halide_error_storage_bound_too_small(i8* %user_context, i8* %func_name, i8* %var_name, i32 %provided_size, i32 %required_size) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i111 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.73, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i112 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.73, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i111, %entry.split ], [ %call.i112, %if.then6.i ]
  %ref.tmp.sroa.26.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %conv.i = sext i32 %provided_size to i64
  %call.i14 = tail call i8* @halide_int64_to_string(i8* %phi.call, i8* %ref.tmp.sroa.26.0, i64 %conv.i, i32 1) #15
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0)) #15
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.26.0, i8* %var_name) #15
  %call.i23 = tail call i8* @halide_string_to_string(i8* %call.i20, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #15
  %call.i26 = tail call i8* @halide_string_to_string(i8* %call.i23, i8* %ref.tmp.sroa.26.0, i8* %func_name) #15
  %call.i29 = tail call i8* @halide_string_to_string(i8* %call.i26, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.74, i64 0, i64 0)) #15
  %conv.i32 = sext i32 %required_size to i64
  %call.i33 = tail call i8* @halide_int64_to_string(i8* %call.i29, i8* %ref.tmp.sroa.26.0, i64 %conv.i32, i32 1) #15
  %call.i36 = tail call i8* @halide_string_to_string(i8* %call.i33, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64.153, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i36 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -45
}

; Function Attrs: nounwind
define weak i32 @halide_error_device_crop_failed(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.75, i64 0, i64 0)) #15
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.75, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret i32 -41
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_shutdown() #0 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #16
  %sampling_thread = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 7
  %0 = load %struct.halide_thread*, %struct.halide_thread** %sampling_thread, align 8, !tbaa !338
  %tobool.not = icmp eq %struct.halide_thread* %0, null
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %current_func = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 3
  store i32 -2, i32* %current_func, align 8, !tbaa !340
  tail call void @halide_join_thread(%struct.halide_thread* nonnull %0) #15
  store %struct.halide_thread* null, %struct.halide_thread** %sampling_thread, align 8, !tbaa !338
  store i32 -1, i32* %current_func, align 8, !tbaa !340
  tail call void @halide_profiler_report_unlocked(i8* null, %struct.halide_profiler_state* nonnull %call) #16
  tail call void @halide_profiler_reset_unlocked(%struct.halide_profiler_state* nonnull %call) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak %struct.halide_profiler_state* @halide_profiler_get_state() local_unnamed_addr #2 {
entry:
  ret %struct.halide_profiler_state* @_ZZ25halide_profiler_get_stateE1s
}

; Function Attrs: nounwind
define weak void @halide_profiler_report_unlocked(i8* %user_context, %struct.halide_profiler_state* %s) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #15
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %sstr.sroa.125.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 5
  %p.0624 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !10
  %tobool.not625 = icmp eq %struct.halide_profiler_pipeline_stats* %p.0624, null
  br i1 %tobool.not625, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit
  %sub.ptr.rhs.cast.i.i348 = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i349 = sub i64 1, %sub.ptr.rhs.cast.i.i348
  br label %for.body

for.cond.cleanup:                                 ; preds = %cleanup181, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit
  %sstr.sroa.19.0.lcssa = phi i8* [ %call.i, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit ], [ %sstr.sroa.19.15, %cleanup181 ]
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %for.cond.cleanup
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %for.cond.cleanup
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %sstr.sroa.19.0.lcssa to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #15
  ret void

for.body:                                         ; preds = %cleanup181, %for.body.lr.ph
  %p.0627 = phi %struct.halide_profiler_pipeline_stats* [ %p.0624, %for.body.lr.ph ], [ %p.0, %cleanup181 ]
  %sstr.sroa.19.0626 = phi i8* [ %call.i, %for.body.lr.ph ], [ %sstr.sroa.19.15, %cleanup181 ]
  %time = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 0
  %0 = load i64, i64* %time, align 8, !tbaa !341
  %conv = uitofp i64 %0 to float
  %div = fdiv float %conv, 1.000000e+06
  %runs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 11
  %1 = load i32, i32* %runs, align 8, !tbaa !343
  %tobool1.not = icmp eq i32 %1, 0
  br i1 %tobool1.not, label %cleanup181, label %if.end

if.end:                                           ; preds = %for.body
  br i1 %tobool.not.i, label %if.end.split, label %if.then.i278

if.end.split:                                     ; preds = %if.end
  %active_threads_numerator1 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 4
  %2 = load i64, i64* %active_threads_numerator1, align 8, !tbaa !344
  %active_threads_denominator2 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 5
  %3 = load i64, i64* %active_threads_denominator2, align 8, !tbaa !345
  %cmp3 = icmp eq i64 %2, %3
  %name4 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 6
  %4 = load i8*, i8** %name4, align 8, !tbaa !346
  %call.i2825 = tail call i8* @halide_string_to_string(i8* null, i8* %sstr.sroa.125.0, i8* %4) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit

if.then.i278:                                     ; preds = %if.end
  store i8 0, i8* %call.i, align 1, !tbaa !14
  %active_threads_numerator6 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 4
  %5 = load i64, i64* %active_threads_numerator6, align 8, !tbaa !344
  %active_threads_denominator7 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 5
  %6 = load i64, i64* %active_threads_denominator7, align 8, !tbaa !345
  %cmp8 = icmp eq i64 %5, %6
  %name9 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 6
  %7 = load i8*, i8** %name9, align 8, !tbaa !346
  %call.i28210 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* %sstr.sroa.125.0, i8* %7) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit: ; preds = %if.end.split, %if.then.i278
  %8 = phi i64 [ %2, %if.end.split ], [ %5, %if.then.i278 ]
  %9 = phi i64 [ %3, %if.end.split ], [ %6, %if.then.i278 ]
  %10 = phi i1 [ %cmp3, %if.end.split ], [ %cmp8, %if.then.i278 ]
  %phi.call = phi i8* [ %call.i2825, %if.end.split ], [ %call.i28210, %if.then.i278 ]
  %call.i285 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #15
  %call.i288 = tail call i8* @halide_string_to_string(i8* %call.i285, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.165, i64 0, i64 0)) #15
  %conv.i = fpext float %div to double
  %call.i291 = tail call i8* @halide_double_to_string(i8* %call.i288, i8* %sstr.sroa.125.0, double %conv.i, i32 0) #15
  %call.i294 = tail call i8* @halide_string_to_string(i8* %call.i291, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.166, i64 0, i64 0)) #15
  %call.i297 = tail call i8* @halide_string_to_string(i8* %call.i294, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10.167, i64 0, i64 0)) #15
  %samples = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 12
  %11 = load i32, i32* %samples, align 4, !tbaa !347
  %conv.i300 = sext i32 %11 to i64
  %call.i301 = tail call i8* @halide_int64_to_string(i8* %call.i297, i8* %sstr.sroa.125.0, i64 %conv.i300, i32 1) #15
  %call.i304 = tail call i8* @halide_string_to_string(i8* %call.i301, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.168, i64 0, i64 0)) #15
  %12 = load i32, i32* %runs, align 8, !tbaa !343
  %conv.i307 = sext i32 %12 to i64
  %call.i308 = tail call i8* @halide_int64_to_string(i8* %call.i304, i8* %sstr.sroa.125.0, i64 %conv.i307, i32 1) #15
  %call.i311 = tail call i8* @halide_string_to_string(i8* %call.i308, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.169, i64 0, i64 0)) #15
  %13 = load i32, i32* %runs, align 8, !tbaa !343
  %conv19 = sitofp i32 %13 to float
  %div20 = fdiv float %div, %conv19
  %conv.i314 = fpext float %div20 to double
  %call.i315 = tail call i8* @halide_double_to_string(i8* %call.i311, i8* %sstr.sroa.125.0, double %conv.i314, i32 0) #15
  %call.i318 = tail call i8* @halide_string_to_string(i8* %call.i315, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.170, i64 0, i64 0)) #15
  br i1 %10, label %if.end28, label %if.then24

if.then24:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit
  %conv3 = uitofp i64 %8 to double
  %conv5 = uitofp i64 %9 to double
  %add = fadd double %conv5, 1.000000e-10
  %div6 = fdiv double %conv3, %add
  %conv7 = fptrunc double %div6 to float
  %call.i321 = tail call i8* @halide_string_to_string(i8* %call.i318, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.171, i64 0, i64 0)) #15
  %conv.i324 = fpext float %conv7 to double
  %call.i325 = tail call i8* @halide_double_to_string(i8* %call.i321, i8* %sstr.sroa.125.0, double %conv.i324, i32 0) #15
  %call.i328 = tail call i8* @halide_string_to_string(i8* %call.i325, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #15
  br label %if.end28

if.end28:                                         ; preds = %if.then24, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit
  %sstr.sroa.19.1 = phi i8* [ %call.i318, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit ], [ %call.i328, %if.then24 ]
  %call.i331 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.1, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15.172, i64 0, i64 0)) #15
  %num_allocs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 13
  %14 = load i32, i32* %num_allocs, align 8, !tbaa !348
  %conv.i334 = sext i32 %14 to i64
  %call.i335 = tail call i8* @halide_int64_to_string(i8* %call.i331, i8* %sstr.sroa.125.0, i64 %conv.i334, i32 1) #15
  %call.i338 = tail call i8* @halide_string_to_string(i8* %call.i335, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.173, i64 0, i64 0)) #15
  %memory_peak = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 2
  %15 = load i64, i64* %memory_peak, align 8, !tbaa !349
  %call.i341 = tail call i8* @halide_uint64_to_string(i8* %call.i338, i8* %sstr.sroa.125.0, i64 %15, i32 1) #15
  %call.i344 = tail call i8* @halide_string_to_string(i8* %call.i341, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17.174, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit, label %if.then.i352

if.then.i352:                                     ; preds = %if.end28
  %sub.ptr.lhs.cast.i.i347 = ptrtoint i8* %call.i344 to i64
  %add.i.i350 = add i64 %sub.ptr.sub.i.i349, %sub.ptr.lhs.cast.i.i347
  %call.i.i351 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i350) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit: ; preds = %if.then.i352, %if.end28
  %retval.0.i = phi i8* [ %call.i, %if.then.i352 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0), %if.end28 ]
  tail call void @halide_print(i8* %user_context, i8* nonnull %retval.0.i) #15
  %16 = load i64, i64* %time, align 8, !tbaa !341
  %tobool36.not = icmp eq i64 %16, 0
  br i1 %tobool36.not, label %lor.end, label %for.cond53.preheader

lor.end:                                          ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit
  %memory_total = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 3
  %17 = load i64, i64* %memory_total, align 8, !tbaa !350
  %tobool37.not = icmp eq i64 %17, 0
  br i1 %tobool37.not, label %for.cond41.preheader, label %for.cond53.preheader

for.cond41.preheader:                             ; preds = %lor.end
  %num_funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 9
  %18 = load i32, i32* %num_funcs, align 8, !tbaa !351
  %cmp42589 = icmp sgt i32 %18, 0
  br i1 %cmp42589, label %for.body44.lr.ph, label %cleanup181

for.body44.lr.ph:                                 ; preds = %for.cond41.preheader
  %funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 7
  %19 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %funcs, align 8, !tbaa !352
  %20 = zext i32 %18 to i64
  br label %for.body44

for.cond41:                                       ; preds = %for.body44
  %exitcond.not = icmp eq i64 %indvars.iv.next, %20
  br i1 %exitcond.not, label %cleanup181, label %for.body44, !llvm.loop !353

for.body44:                                       ; preds = %for.cond41, %for.body44.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body44.lr.ph ], [ %indvars.iv.next, %for.cond41 ]
  %stack_peak = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %19, i64 %indvars.iv, i32 4
  %21 = load i64, i64* %stack_peak, align 8, !tbaa !354
  %tobool45.not = icmp eq i64 %21, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool45.not, label %for.cond41, label %for.cond53.preheader

for.cond53.preheader:                             ; preds = %for.body44, %lor.end, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit
  %num_funcs54 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 9
  %22 = load i32, i32* %num_funcs54, align 8, !tbaa !351
  %cmp55621 = icmp sgt i32 %22, 0
  br i1 %cmp55621, label %for.body57.lr.ph, label %cleanup181

for.body57.lr.ph:                                 ; preds = %for.cond53.preheader
  %funcs59 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 7
  br label %for.body57

for.body57:                                       ; preds = %cleanup172, %for.body57.lr.ph
  %indvars.iv630 = phi i64 [ 0, %for.body57.lr.ph ], [ %indvars.iv.next631, %cleanup172 ]
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358, label %if.then.i356

if.then.i356:                                     ; preds = %for.body57
  store i8 0, i8* %call.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358: ; preds = %if.then.i356, %for.body57
  %23 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %funcs59, align 8, !tbaa !352
  %add.ptr61 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630
  %cmp62 = icmp eq i64 %indvars.iv630, 0
  br i1 %cmp62, label %land.lhs.true, label %if.end66

land.lhs.true:                                    ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358
  %time63 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr61, i64 0, i32 0
  %24 = load i64, i64* %time63, align 8, !tbaa !356
  %cmp64 = icmp eq i64 %24, 0
  br i1 %cmp64, label %cleanup172, label %if.end66

if.end66:                                         ; preds = %land.lhs.true, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358
  %call.i361 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.175, i64 0, i64 0)) #15
  %name68 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 7
  %25 = load i8*, i8** %name68, align 8, !tbaa !357
  %call.i364 = tail call i8* @halide_string_to_string(i8* %call.i361, i8* %sstr.sroa.125.0, i8* %25) #15
  %call.i367 = tail call i8* @halide_string_to_string(i8* %call.i364, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.176, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i591 = ptrtoint i8* %call.i367 to i64
  %sub.ptr.sub.i592 = sub i64 %sub.ptr.lhs.cast.i591, %sub.ptr.rhs.cast.i.i348
  %cmp73593 = icmp ult i64 %sub.ptr.sub.i592, 25
  br i1 %cmp73593, label %while.body, label %while.end

while.body:                                       ; preds = %if.end66, %while.body
  %sstr.sroa.19.3594 = phi i8* [ %call.i384, %while.body ], [ %call.i367, %if.end66 ]
  %call.i384 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.3594, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i = ptrtoint i8* %call.i384 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i.i348
  %cmp73 = icmp ult i64 %sub.ptr.sub.i, 25
  br i1 %cmp73, label %while.body, label %while.end, !llvm.loop !358

while.end:                                        ; preds = %while.body, %if.end66
  %sstr.sroa.19.3.lcssa = phi i8* [ %call.i367, %if.end66 ], [ %call.i384, %while.body ]
  %time75 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr61, i64 0, i32 0
  %26 = load i64, i64* %time75, align 8, !tbaa !356
  %conv76 = uitofp i64 %26 to float
  %27 = load i32, i32* %runs, align 8, !tbaa !343
  %conv78 = sitofp i32 %27 to float
  %mul = fmul float %conv78, 1.000000e+06
  %div79 = fdiv float %conv76, %mul
  %conv.i387 = fpext float %div79 to double
  %call.i388 = tail call i8* @halide_double_to_string(i8* %sstr.sroa.19.3.lcssa, i8* %sstr.sroa.125.0, double %conv.i387, i32 0) #15
  %tobool.not.i390 = icmp eq i8* %call.i388, null
  br i1 %tobool.not.i390, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit, label %if.then.i393

if.then.i393:                                     ; preds = %while.end
  %add.ptr.i391 = getelementptr inbounds i8, i8* %call.i388, i64 -3
  %cmp.i = icmp ult i8* %add.ptr.i391, %call.i
  %spec.store.select.i = select i1 %cmp.i, i8* %call.i, i8* %add.ptr.i391
  store i8 0, i8* %spec.store.select.i, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit: ; preds = %if.then.i393, %while.end
  %sstr.sroa.19.4 = phi i8* [ null, %while.end ], [ %spec.store.select.i, %if.then.i393 ]
  %call.i399 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.4, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21.178, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i400596 = ptrtoint i8* %call.i399 to i64
  %sub.ptr.sub.i402597 = sub i64 %sub.ptr.lhs.cast.i400596, %sub.ptr.rhs.cast.i.i348
  %cmp85598 = icmp ult i64 %sub.ptr.sub.i402597, 35
  br i1 %cmp85598, label %while.body86, label %while.end88

while.body86:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit, %while.body86
  %sstr.sroa.19.5599 = phi i8* [ %call.i408, %while.body86 ], [ %call.i399, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit ]
  %call.i408 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.5599, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i400 = ptrtoint i8* %call.i408 to i64
  %sub.ptr.sub.i402 = sub i64 %sub.ptr.lhs.cast.i400, %sub.ptr.rhs.cast.i.i348
  %cmp85 = icmp ult i64 %sub.ptr.sub.i402, 35
  br i1 %cmp85, label %while.body86, label %while.end88, !llvm.loop !359

while.end88:                                      ; preds = %while.body86, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit
  %sstr.sroa.19.5.lcssa = phi i8* [ %call.i399, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit ], [ %call.i408, %while.body86 ]
  %28 = load i64, i64* %time, align 8, !tbaa !341
  %cmp90.not = icmp eq i64 %28, 0
  br i1 %cmp90.not, label %if.end97, label %if.then91

if.then91:                                        ; preds = %while.end88
  %29 = load i64, i64* %time75, align 8, !tbaa !356
  %mul93 = mul i64 %29, 100
  %div95 = udiv i64 %mul93, %28
  br label %if.end97

if.end97:                                         ; preds = %if.then91, %while.end88
  %percent.0 = phi i64 [ %div95, %if.then91 ], [ 0, %while.end88 ]
  %call.i411 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.5.lcssa, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22.179, i64 0, i64 0)) #15
  %sext = shl i64 %percent.0, 32
  %conv.i414 = ashr exact i64 %sext, 32
  %call.i415 = tail call i8* @halide_int64_to_string(i8* %call.i411, i8* %sstr.sroa.125.0, i64 %conv.i414, i32 1) #15
  %call.i418 = tail call i8* @halide_string_to_string(i8* %call.i415, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.180, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i419601 = ptrtoint i8* %call.i418 to i64
  %sub.ptr.sub.i421602 = sub i64 %sub.ptr.lhs.cast.i419601, %sub.ptr.rhs.cast.i.i348
  %cmp104603 = icmp ult i64 %sub.ptr.sub.i421602, 43
  br i1 %cmp104603, label %while.body105, label %while.end107

while.body105:                                    ; preds = %if.end97, %while.body105
  %sstr.sroa.19.6604 = phi i8* [ %call.i427, %while.body105 ], [ %call.i418, %if.end97 ]
  %call.i427 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.6604, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i419 = ptrtoint i8* %call.i427 to i64
  %sub.ptr.sub.i421 = sub i64 %sub.ptr.lhs.cast.i419, %sub.ptr.rhs.cast.i.i348
  %cmp104 = icmp ult i64 %sub.ptr.sub.i421, 43
  br i1 %cmp104, label %while.body105, label %while.end107, !llvm.loop !360

while.end107:                                     ; preds = %while.body105, %if.end97
  %sstr.sroa.19.6.lcssa = phi i8* [ %call.i418, %if.end97 ], [ %call.i427, %while.body105 ]
  br i1 %10, label %if.end127, label %if.then109

if.then109:                                       ; preds = %while.end107
  %active_threads_numerator111 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 5
  %30 = load i64, i64* %active_threads_numerator111, align 8, !tbaa !361
  %conv112 = uitofp i64 %30 to double
  %active_threads_denominator113 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 6
  %31 = load i64, i64* %active_threads_denominator113, align 8, !tbaa !362
  %conv114 = uitofp i64 %31 to double
  %add115 = fadd double %conv114, 1.000000e-10
  %div116 = fdiv double %conv112, %add115
  %conv117 = fptrunc double %div116 to float
  %call.i430 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.6.lcssa, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24.181, i64 0, i64 0)) #15
  %conv.i433 = fpext float %conv117 to double
  %call.i434 = tail call i8* @halide_double_to_string(i8* %call.i430, i8* %sstr.sroa.125.0, double %conv.i433, i32 0) #15
  %tobool.not.i436 = icmp eq i8* %call.i434, null
  br i1 %tobool.not.i436, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442, label %if.then.i441

if.then.i441:                                     ; preds = %if.then109
  %add.ptr.i437 = getelementptr inbounds i8, i8* %call.i434, i64 -3
  %cmp.i439 = icmp ult i8* %add.ptr.i437, %call.i
  %spec.store.select.i440 = select i1 %cmp.i439, i8* %call.i, i8* %add.ptr.i437
  store i8 0, i8* %spec.store.select.i440, align 1, !tbaa !14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442: ; preds = %if.then.i441, %if.then109
  %sstr.sroa.19.7 = phi i8* [ null, %if.then109 ], [ %spec.store.select.i440, %if.then.i441 ]
  %sub.ptr.lhs.cast.i447606 = ptrtoint i8* %sstr.sroa.19.7 to i64
  %sub.ptr.sub.i449607 = sub i64 %sub.ptr.lhs.cast.i447606, %sub.ptr.rhs.cast.i.i348
  %cmp123608 = icmp ult i64 %sub.ptr.sub.i449607, 58
  br i1 %cmp123608, label %while.body124, label %if.end127

while.body124:                                    ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442, %while.body124
  %sstr.sroa.19.8609 = phi i8* [ %call.i455, %while.body124 ], [ %sstr.sroa.19.7, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442 ]
  %call.i455 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.8609, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i447 = ptrtoint i8* %call.i455 to i64
  %sub.ptr.sub.i449 = sub i64 %sub.ptr.lhs.cast.i447, %sub.ptr.rhs.cast.i.i348
  %cmp123 = icmp ult i64 %sub.ptr.sub.i449, 58
  br i1 %cmp123, label %while.body124, label %if.end127, !llvm.loop !363

if.end127:                                        ; preds = %while.body124, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442, %while.end107
  %sstr.sroa.19.9 = phi i8* [ %sstr.sroa.19.6.lcssa, %while.end107 ], [ %sstr.sroa.19.7, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442 ], [ %call.i455, %while.body124 ]
  %cursor.0 = phi i64 [ 58, %while.end107 ], [ 73, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442 ], [ 73, %while.body124 ]
  %memory_peak128 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 2
  %32 = load i64, i64* %memory_peak128, align 8, !tbaa !364
  %tobool129.not = icmp eq i64 %32, 0
  br i1 %tobool129.not, label %if.end162, label %if.then130

if.then130:                                       ; preds = %if.end127
  %call.i458 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.9, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25.182, i64 0, i64 0)) #15
  %33 = load i64, i64* %memory_peak128, align 8, !tbaa !364
  %call.i461 = tail call i8* @halide_uint64_to_string(i8* %call.i458, i8* %sstr.sroa.125.0, i64 %33, i32 1) #15
  %sub.ptr.lhs.cast.i462611 = ptrtoint i8* %call.i461 to i64
  %sub.ptr.sub.i464612 = sub i64 %sub.ptr.lhs.cast.i462611, %sub.ptr.rhs.cast.i.i348
  %cmp137613 = icmp ult i64 %sub.ptr.sub.i464612, %cursor.0
  br i1 %cmp137613, label %while.body138, label %while.end140

while.body138:                                    ; preds = %if.then130, %while.body138
  %sstr.sroa.19.10614 = phi i8* [ %call.i470, %while.body138 ], [ %call.i461, %if.then130 ]
  %call.i470 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.10614, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i462 = ptrtoint i8* %call.i470 to i64
  %sub.ptr.sub.i464 = sub i64 %sub.ptr.lhs.cast.i462, %sub.ptr.rhs.cast.i.i348
  %cmp137 = icmp ult i64 %sub.ptr.sub.i464, %cursor.0
  br i1 %cmp137, label %while.body138, label %while.end140, !llvm.loop !365

while.end140:                                     ; preds = %while.body138, %if.then130
  %sstr.sroa.19.10.lcssa = phi i8* [ %call.i461, %if.then130 ], [ %call.i470, %while.body138 ]
  %call.i473 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.10.lcssa, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.183, i64 0, i64 0)) #15
  %num_allocs142 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 8
  %34 = load i32, i32* %num_allocs142, align 8, !tbaa !366
  %conv.i476 = sext i32 %34 to i64
  %call.i477 = tail call i8* @halide_int64_to_string(i8* %call.i473, i8* %sstr.sroa.125.0, i64 %conv.i476, i32 1) #15
  %add144 = add nuw nsw i64 %cursor.0, 15
  %sub.ptr.lhs.cast.i478616 = ptrtoint i8* %call.i477 to i64
  %sub.ptr.sub.i480617 = sub i64 %sub.ptr.lhs.cast.i478616, %sub.ptr.rhs.cast.i.i348
  %cmp147618 = icmp ult i64 %sub.ptr.sub.i480617, %add144
  br i1 %cmp147618, label %while.body148, label %while.end150

while.body148:                                    ; preds = %while.end140, %while.body148
  %sstr.sroa.19.11619 = phi i8* [ %call.i467, %while.body148 ], [ %call.i477, %while.end140 ]
  %call.i467 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.11619, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #15
  %sub.ptr.lhs.cast.i478 = ptrtoint i8* %call.i467 to i64
  %sub.ptr.sub.i480 = sub i64 %sub.ptr.lhs.cast.i478, %sub.ptr.rhs.cast.i.i348
  %cmp147 = icmp ult i64 %sub.ptr.sub.i480, %add144
  br i1 %cmp147, label %while.body148, label %while.end150, !llvm.loop !367

while.end150:                                     ; preds = %while.body148, %while.end140
  %sstr.sroa.19.11.lcssa = phi i8* [ %call.i477, %while.end140 ], [ %call.i467, %while.body148 ]
  %35 = load i32, i32* %num_allocs142, align 8, !tbaa !366
  %cmp152.not = icmp eq i32 %35, 0
  br i1 %cmp152.not, label %if.end159, label %if.then153

if.then153:                                       ; preds = %while.end150
  %memory_total154 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 3
  %36 = load i64, i64* %memory_total154, align 8, !tbaa !368
  %conv156 = sext i32 %35 to i64
  %div157 = udiv i64 %36, %conv156
  br label %if.end159

if.end159:                                        ; preds = %if.then153, %while.end150
  %alloc_avg.0 = phi i64 [ %div157, %if.then153 ], [ 0, %while.end150 ]
  %call.i452 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.11.lcssa, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27.184, i64 0, i64 0)) #15
  %sext586 = shl i64 %alloc_avg.0, 32
  %conv.i445 = ashr exact i64 %sext586, 32
  %call.i446 = tail call i8* @halide_int64_to_string(i8* %call.i452, i8* %sstr.sroa.125.0, i64 %conv.i445, i32 1) #15
  br label %if.end162

if.end162:                                        ; preds = %if.end159, %if.end127
  %sstr.sroa.19.12 = phi i8* [ %sstr.sroa.19.9, %if.end127 ], [ %call.i446, %if.end159 ]
  %stack_peak163 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 4
  %37 = load i64, i64* %stack_peak163, align 8, !tbaa !354
  %cmp164.not = icmp eq i64 %37, 0
  br i1 %cmp164.not, label %if.end169, label %if.then165

if.then165:                                       ; preds = %if.end162
  %call.i424 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.12, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28.185, i64 0, i64 0)) #15
  %38 = load i64, i64* %stack_peak163, align 8, !tbaa !354
  %call.i405 = tail call i8* @halide_uint64_to_string(i8* %call.i424, i8* %sstr.sroa.125.0, i64 %38, i32 1) #15
  br label %if.end169

if.end169:                                        ; preds = %if.then165, %if.end162
  %sstr.sroa.19.13 = phi i8* [ %sstr.sroa.19.12, %if.end162 ], [ %call.i405, %if.then165 ]
  %call.i396 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.13, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #15
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381, label %if.then.i379

if.then.i379:                                     ; preds = %if.end169
  %sub.ptr.lhs.cast.i.i374 = ptrtoint i8* %call.i396 to i64
  %add.i.i377 = add i64 %sub.ptr.sub.i.i349, %sub.ptr.lhs.cast.i.i374
  %call.i.i378 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i377) #15
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381: ; preds = %if.then.i379, %if.end169
  %retval.0.i380 = phi i8* [ %call.i, %if.then.i379 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0), %if.end169 ]
  tail call void @halide_print(i8* %user_context, i8* nonnull %retval.0.i380) #15
  br label %cleanup172

cleanup172:                                       ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381, %land.lhs.true
  %sstr.sroa.19.14 = phi i8* [ %call.i, %land.lhs.true ], [ %call.i396, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381 ]
  %indvars.iv.next631 = add nuw nsw i64 %indvars.iv630, 1
  %39 = load i32, i32* %num_funcs54, align 8, !tbaa !351
  %40 = sext i32 %39 to i64
  %cmp55 = icmp slt i64 %indvars.iv.next631, %40
  br i1 %cmp55, label %for.body57, label %cleanup181, !llvm.loop !369

cleanup181:                                       ; preds = %for.cond41, %cleanup172, %for.cond53.preheader, %for.cond41.preheader, %for.body
  %sstr.sroa.19.15 = phi i8* [ %sstr.sroa.19.0626, %for.body ], [ %call.i344, %for.cond53.preheader ], [ %call.i344, %for.cond41.preheader ], [ %sstr.sroa.19.14, %cleanup172 ], [ %call.i344, %for.cond41 ]
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 8
  %41 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  %p.0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %41, align 8, !tbaa !10
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %p.0, null
  br i1 %tobool.not, label %for.cond.cleanup, label %for.body, !llvm.loop !370
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_reset_unlocked(%struct.halide_profiler_state* %s) local_unnamed_addr #0 {
entry:
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 5
  %0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !371
  %tobool.not9 = icmp eq %struct.halide_profiler_pipeline_stats* %0, null
  br i1 %tobool.not9, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %1 = phi %struct.halide_profiler_pipeline_stats* [ %7, %while.body ], [ %0, %entry ]
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %1, i64 0, i32 8
  %2 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  %3 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %2, align 8, !tbaa !372
  store %struct.halide_profiler_pipeline_stats* %3, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !371
  %funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %1, i64 0, i32 7
  %4 = bitcast %struct.halide_profiler_func_stats** %funcs to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !352
  tail call void @free(i8* %5) #15
  %6 = bitcast %struct.halide_profiler_pipeline_stats* %1 to i8*
  tail call void @free(i8* nonnull %6) #15
  %7 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !371
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %7, null
  br i1 %tobool.not, label %while.end, label %while.body, !llvm.loop !373

while.end:                                        ; preds = %while.body, %entry
  %first_free_id = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 2
  store i32 0, i32* %first_free_id, align 4, !tbaa !374
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce %struct.halide_profiler_pipeline_stats* @_ZN6Halide7Runtime8Internal23find_or_create_pipelineEPKciPKy(i8* %pipeline_name, i32 %num_funcs, i64* %func_names) local_unnamed_addr #0 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #16
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 5
  %p.0121 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !10
  %tobool.not122 = icmp eq %struct.halide_profiler_pipeline_stats* %p.0121, null
  br i1 %tobool.not122, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %p.0123 = phi %struct.halide_profiler_pipeline_stats* [ %p.0, %for.inc ], [ %p.0121, %entry ]
  %name = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0123, i64 0, i32 6
  %0 = load i8*, i8** %name, align 8, !tbaa !346
  %cmp = icmp eq i8* %0, %pipeline_name
  br i1 %cmp, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %num_funcs1 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0123, i64 0, i32 9
  %1 = load i32, i32* %num_funcs1, align 8, !tbaa !351
  %cmp2 = icmp eq i32 %1, %num_funcs
  br i1 %cmp2, label %cleanup62, label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0123, i64 0, i32 8
  %2 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  %p.0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %2, align 8, !tbaa !10
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %p.0, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !375

for.end:                                          ; preds = %for.inc, %entry
  %call4 = tail call i8* @malloc(i64 96) #15
  %3 = bitcast i8* %call4 to %struct.halide_profiler_pipeline_stats*
  %tobool5.not = icmp eq i8* %call4, null
  br i1 %tobool5.not, label %cleanup62, label %if.end7

if.end7:                                          ; preds = %for.end
  %4 = bitcast %struct.halide_profiler_pipeline_stats** %pipelines to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !371
  %next9 = getelementptr inbounds i8, i8* %call4, i64 64
  %6 = bitcast i8* %next9 to i8**
  store i8* %5, i8** %6, align 8, !tbaa !372
  %name10 = getelementptr inbounds i8, i8* %call4, i64 48
  %7 = bitcast i8* %name10 to i8**
  store i8* %pipeline_name, i8** %7, align 8, !tbaa !346
  %first_free_id = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 2
  %8 = load i32, i32* %first_free_id, align 4, !tbaa !374
  %first_func_id = getelementptr inbounds i8, i8* %call4, i64 76
  %9 = bitcast i8* %first_func_id to i32*
  store i32 %8, i32* %9, align 4, !tbaa !376
  %num_funcs11 = getelementptr inbounds i8, i8* %call4, i64 72
  %10 = bitcast i8* %num_funcs11 to i32*
  store i32 %num_funcs, i32* %10, align 8, !tbaa !351
  %runs = getelementptr inbounds i8, i8* %call4, i64 80
  %11 = bitcast i8* %runs to i32*
  store i32 0, i32* %11, align 8, !tbaa !343
  %samples = getelementptr inbounds i8, i8* %call4, i64 84
  %12 = bitcast i8* %samples to i32*
  store i32 0, i32* %12, align 4, !tbaa !347
  %13 = bitcast i8* %call4 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %13, align 8, !tbaa !110
  %num_allocs = getelementptr inbounds i8, i8* %call4, i64 88
  %14 = bitcast i8* %num_allocs to i32*
  store i32 0, i32* %14, align 8, !tbaa !348
  %active_threads_numerator = getelementptr inbounds i8, i8* %call4, i64 32
  %15 = bitcast i8* %active_threads_numerator to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %15, align 8, !tbaa !110
  %conv = sext i32 %num_funcs to i64
  %mul = mul nsw i64 %conv, 72
  %call12 = tail call i8* @malloc(i64 %mul) #15
  %funcs = getelementptr inbounds i8, i8* %call4, i64 56
  %16 = bitcast i8* %funcs to i8**
  store i8* %call12, i8** %16, align 8, !tbaa !352
  %tobool14.not = icmp eq i8* %call12, null
  %17 = bitcast i8* %call12 to %struct.halide_profiler_func_stats*
  br i1 %tobool14.not, label %if.then15, label %for.cond17.preheader

for.cond17.preheader:                             ; preds = %if.end7
  %cmp18119 = icmp sgt i32 %num_funcs, 0
  br i1 %cmp18119, label %for.body20.lr.ph, label %for.cond.cleanup19

for.body20.lr.ph:                                 ; preds = %for.cond17.preheader
  %wide.trip.count = zext i32 %num_funcs to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %18 = icmp eq i32 %num_funcs, 1
  br i1 %18, label %for.cond.cleanup19.loopexit.unr-lcssa, label %for.body20.lr.ph.new

for.body20.lr.ph.new:                             ; preds = %for.body20.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body20

if.then15:                                        ; preds = %if.end7
  tail call void @free(i8* nonnull %call4) #15
  br label %cleanup62

for.cond.cleanup19.loopexit.unr-lcssa:            ; preds = %for.body20, %for.body20.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body20.lr.ph ], [ %indvars.iv.next.1, %for.body20 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup19, label %for.body20.epil

for.body20.epil:                                  ; preds = %for.cond.cleanup19.loopexit.unr-lcssa
  %time22.epil = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.unr, i32 0
  store i64 0, i64* %time22.epil, align 8, !tbaa !356
  %arrayidx24.epil = getelementptr inbounds i64, i64* %func_names, i64 %indvars.iv.unr
  %19 = load i64, i64* %arrayidx24.epil, align 8, !tbaa !110
  %20 = inttoptr i64 %19 to i8*
  %name28.epil = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.unr, i32 7
  store i8* %20, i8** %name28.epil, align 8, !tbaa !357
  %memory_current32.epil = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.unr, i32 1
  %num_allocs44.epil = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.unr, i32 8
  store i32 0, i32* %num_allocs44.epil, align 8, !tbaa !366
  %21 = bitcast i64* %memory_current32.epil to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %21, align 8, !tbaa !110
  %active_threads_numerator51.epil = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.unr, i32 5
  %22 = bitcast i64* %active_threads_numerator51.epil to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %22, align 8, !tbaa !110
  br label %for.cond.cleanup19

for.cond.cleanup19:                               ; preds = %for.body20.epil, %for.cond.cleanup19.loopexit.unr-lcssa, %for.cond17.preheader
  %23 = load i32, i32* %first_free_id, align 4, !tbaa !374
  %add = add nsw i32 %23, %num_funcs
  store i32 %add, i32* %first_free_id, align 4, !tbaa !374
  store i8* %call4, i8** %4, align 8, !tbaa !371
  br label %cleanup62

for.body20:                                       ; preds = %for.body20, %for.body20.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body20.lr.ph.new ], [ %indvars.iv.next.1, %for.body20 ]
  %niter = phi i64 [ %unroll_iter, %for.body20.lr.ph.new ], [ %niter.nsub.1, %for.body20 ]
  %time22 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv, i32 0
  store i64 0, i64* %time22, align 8, !tbaa !356
  %arrayidx24 = getelementptr inbounds i64, i64* %func_names, i64 %indvars.iv
  %24 = load i64, i64* %arrayidx24, align 8, !tbaa !110
  %25 = inttoptr i64 %24 to i8*
  %name28 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv, i32 7
  store i8* %25, i8** %name28, align 8, !tbaa !357
  %memory_current32 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv, i32 1
  %num_allocs44 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv, i32 8
  store i32 0, i32* %num_allocs44, align 8, !tbaa !366
  %26 = bitcast i64* %memory_current32 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %26, align 8, !tbaa !110
  %active_threads_numerator51 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv, i32 5
  %27 = bitcast i64* %active_threads_numerator51 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %27, align 8, !tbaa !110
  %indvars.iv.next = or i64 %indvars.iv, 1
  %time22.1 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.next, i32 0
  store i64 0, i64* %time22.1, align 8, !tbaa !356
  %arrayidx24.1 = getelementptr inbounds i64, i64* %func_names, i64 %indvars.iv.next
  %28 = load i64, i64* %arrayidx24.1, align 8, !tbaa !110
  %29 = inttoptr i64 %28 to i8*
  %name28.1 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.next, i32 7
  store i8* %29, i8** %name28.1, align 8, !tbaa !357
  %memory_current32.1 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.next, i32 1
  %num_allocs44.1 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.next, i32 8
  store i32 0, i32* %num_allocs44.1, align 8, !tbaa !366
  %30 = bitcast i64* %memory_current32.1 to <4 x i64>*
  store <4 x i64> zeroinitializer, <4 x i64>* %30, align 8, !tbaa !110
  %active_threads_numerator51.1 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv.next, i32 5
  %31 = bitcast i64* %active_threads_numerator51.1 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %31, align 8, !tbaa !110
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %for.cond.cleanup19.loopexit.unr-lcssa, label %for.body20, !llvm.loop !377

cleanup62:                                        ; preds = %land.lhs.true, %for.cond.cleanup19, %if.then15, %for.end
  %retval.2 = phi %struct.halide_profiler_pipeline_stats* [ %3, %for.cond.cleanup19 ], [ null, %if.then15 ], [ null, %for.end ], [ %p.0123, %land.lhs.true ]
  ret %struct.halide_profiler_pipeline_stats* %retval.2
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal9bill_funcEP21halide_profiler_stateiyi(%struct.halide_profiler_state* %s, i32 %func_id, i64 %time, i32 %active_threads) local_unnamed_addr #0 {
entry:
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 5
  %p.055 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !10
  %tobool.not56 = icmp eq %struct.halide_profiler_pipeline_stats* %p.055, null
  br i1 %tobool.not56, label %cleanup25, label %for.body

for.body:                                         ; preds = %entry, %if.end23
  %p.058 = phi %struct.halide_profiler_pipeline_stats* [ %p.0, %if.end23 ], [ %p.055, %entry ]
  %p_prev.057 = phi %struct.halide_profiler_pipeline_stats* [ %p.058, %if.end23 ], [ null, %entry ]
  %first_func_id = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 10
  %0 = load i32, i32* %first_func_id, align 4, !tbaa !376
  %cmp.not = icmp sgt i32 %0, %func_id
  br i1 %cmp.not, label %if.end23, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %num_funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 9
  %1 = load i32, i32* %num_funcs, align 8, !tbaa !351
  %add = add nsw i32 %1, %0
  %cmp2 = icmp sgt i32 %add, %func_id
  br i1 %cmp2, label %if.then, label %if.end23

if.then:                                          ; preds = %land.lhs.true
  %tobool3.not = icmp eq %struct.halide_profiler_pipeline_stats* %p_prev.057, null
  br i1 %tobool3.not, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.then
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 8
  %2 = load i8*, i8** %next, align 8, !tbaa !372
  %next5 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p_prev.057, i64 0, i32 8
  store i8* %2, i8** %next5, align 8, !tbaa !372
  %3 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  store %struct.halide_profiler_pipeline_stats* %p.055, %struct.halide_profiler_pipeline_stats** %3, align 8, !tbaa !372
  store %struct.halide_profiler_pipeline_stats* %p.058, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !371
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  %funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 7
  %4 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %funcs, align 8, !tbaa !352
  %idx.ext = sext i32 %func_id to i64
  %add.ptr = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %4, i64 %idx.ext
  %idx.ext10 = sext i32 %0 to i64
  %idx.neg = sub nsw i64 0, %idx.ext10
  %add.ptr11 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr, i64 %idx.neg
  %time12 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr11, i64 0, i32 0
  %5 = load i64, i64* %time12, align 8, !tbaa !356
  %add13 = add i64 %5, %time
  store i64 %add13, i64* %time12, align 8, !tbaa !356
  %conv = sext i32 %active_threads to i64
  %active_threads_numerator = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr11, i64 0, i32 5
  %6 = bitcast i64* %active_threads_numerator to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8, !tbaa !110
  %8 = insertelement <2 x i64> <i64 poison, i64 1>, i64 %conv, i32 0
  %9 = add <2 x i64> %7, %8
  %10 = bitcast i64* %active_threads_numerator to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %10, align 8, !tbaa !110
  %time16 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 0
  %11 = load i64, i64* %time16, align 8, !tbaa !341
  %add17 = add i64 %11, %time
  store i64 %add17, i64* %time16, align 8, !tbaa !341
  %samples = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 12
  %12 = load i32, i32* %samples, align 4, !tbaa !347
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %samples, align 4, !tbaa !347
  %active_threads_numerator19 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 4
  %13 = bitcast i64* %active_threads_numerator19 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8, !tbaa !110
  %15 = add <2 x i64> %14, %8
  %16 = bitcast i64* %active_threads_numerator19 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %16, align 8, !tbaa !110
  ret void

if.end23:                                         ; preds = %land.lhs.true, %for.body
  %next24 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 8
  %17 = bitcast i8** %next24 to %struct.halide_profiler_pipeline_stats**
  %p.0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %17, align 8, !tbaa !10
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %p.0, null
  br i1 %tobool.not, label %cleanup25, label %for.body, !llvm.loop !378

cleanup25:                                        ; preds = %if.end23, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_profiler_sample(%struct.halide_profiler_state* %s, i64* %prev_t) local_unnamed_addr #0 {
entry:
  %func = alloca i32, align 4
  %active_threads = alloca i32, align 4
  %0 = bitcast i32* %func to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #10
  %1 = bitcast i32* %active_threads to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #10
  %get_remote_profiler_state = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 6
  %2 = load void (i32*, i32*)*, void (i32*, i32*)** %get_remote_profiler_state, align 8, !tbaa !379
  %tobool.not = icmp eq void (i32*, i32*)* %2, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void %2(i32* nonnull %func, i32* nonnull %active_threads) #15
  br label %if.end

if.else:                                          ; preds = %entry
  %current_func = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 3
  %3 = load i32, i32* %current_func, align 8, !tbaa !340
  store i32 %3, i32* %func, align 4, !tbaa !73
  %active_threads2 = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 4
  %4 = load i32, i32* %active_threads2, align 4, !tbaa !380
  store i32 %4, i32* %active_threads, align 4, !tbaa !73
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call = call i64 @halide_current_time_ns(i8* null) #15
  %5 = load i32, i32* %func, align 4, !tbaa !73
  %cmp = icmp eq i32 %5, -2
  br i1 %cmp, label %cleanup, label %if.else4

if.else4:                                         ; preds = %if.end
  %cmp5 = icmp sgt i32 %5, -1
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.else4
  %6 = load i64, i64* %prev_t, align 8, !tbaa !110
  %sub = sub i64 %call, %6
  %7 = load i32, i32* %active_threads, align 4, !tbaa !73
  call void @_ZN6Halide7Runtime8Internal9bill_funcEP21halide_profiler_stateiyi(%struct.halide_profiler_state* nonnull %s, i32 %5, i64 %sub, i32 %7) #16
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.else4
  store i64 %call, i64* %prev_t, align 8, !tbaa !110
  %sleep_time = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 1
  %8 = load i32, i32* %sleep_time, align 8, !tbaa !381
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.end
  %retval.0 = phi i32 [ %8, %if.end8 ], [ -1, %if.end ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #10
  ret i32 %retval.0
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal24sampling_profiler_threadEPv(i8* %0) #4 {
entry:
  %t = alloca i64, align 8
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #16
  %lock = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock) #15
  %current_func = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 3
  %1 = load i32, i32* %current_func, align 8, !tbaa !340
  %cmp.not23 = icmp eq i32 %1, -2
  br i1 %cmp.not23, label %while.end8, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %2 = bitcast i64* %t to i8*
  br label %while.body

while.body:                                       ; preds = %while.end, %while.body.lr.ph
  %call1 = call i64 @halide_current_time_ns(i8* null) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #10
  store i64 %call1, i64* %t, align 8, !tbaa !110
  %call420 = call i32 @halide_profiler_sample(%struct.halide_profiler_state* nonnull %call, i64* nonnull %t) #16
  %cmp521 = icmp slt i32 %call420, 0
  br i1 %cmp521, label %while.end, label %if.end

if.end:                                           ; preds = %while.body, %if.end
  %call422 = phi i32 [ %call4, %if.end ], [ %call420, %while.body ]
  call void @halide_mutex_unlock(%struct.halide_mutex* %lock) #15
  call void @halide_sleep_ms(i8* null, i32 %call422) #15
  call void @halide_mutex_lock(%struct.halide_mutex* %lock) #15
  %call4 = call i32 @halide_profiler_sample(%struct.halide_profiler_state* %call, i64* nonnull %t) #16
  %cmp5 = icmp slt i32 %call4, 0
  br i1 %cmp5, label %while.end, label %if.end

while.end:                                        ; preds = %if.end, %while.body
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #10
  %3 = load i32, i32* %current_func, align 8, !tbaa !340
  %cmp.not = icmp eq i32 %3, -2
  br i1 %cmp.not, label %while.end8, label %while.body, !llvm.loop !382

while.end8:                                       ; preds = %while.end, %entry
  call void @halide_mutex_unlock(%struct.halide_mutex* nonnull %lock) #15
  ret void
}

; Function Attrs: nounwind
define weak %struct.halide_profiler_pipeline_stats* @halide_profiler_get_pipeline_state(i8* %pipeline_name) local_unnamed_addr #4 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #16
  %lock.i = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock.i) #15
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 5
  %p.013 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !10
  %tobool.not14 = icmp eq %struct.halide_profiler_pipeline_stats* %p.013, null
  br i1 %tobool.not14, label %cleanup, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %p.015 = phi %struct.halide_profiler_pipeline_stats* [ %p.0, %for.inc ], [ %p.013, %entry ]
  %name = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.015, i64 0, i32 6
  %0 = load i8*, i8** %name, align 8, !tbaa !346
  %cmp = icmp eq i8* %0, %pipeline_name
  br i1 %cmp, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.015, i64 0, i32 8
  %1 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  %p.0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %1, align 8, !tbaa !10
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %p.0, null
  br i1 %tobool.not, label %cleanup, label %for.body, !llvm.loop !383

cleanup:                                          ; preds = %for.inc, %for.body, %entry
  %p.0.lcssa = phi %struct.halide_profiler_pipeline_stats* [ null, %entry ], [ null, %for.inc ], [ %p.015, %for.body ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* %lock.i) #15
  ret %struct.halide_profiler_pipeline_stats* %p.0.lcssa
}

; Function Attrs: nounwind
define weak i32 @halide_profiler_pipeline_start(i8* %user_context, i8* %pipeline_name, i32 %num_funcs, i64* %func_names) local_unnamed_addr #4 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #16
  %lock.i = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock.i) #15
  %sampling_thread = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 7
  %0 = load %struct.halide_thread*, %struct.halide_thread** %sampling_thread, align 8, !tbaa !338
  %tobool.not = icmp eq %struct.halide_thread* %0, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @halide_start_clock(i8* %user_context) #15
  %call2 = tail call %struct.halide_thread* @halide_spawn_thread(void (i8*)* nonnull @_ZN6Halide7Runtime8Internal24sampling_profiler_threadEPv, i8* null) #15
  store %struct.halide_thread* %call2, %struct.halide_thread** %sampling_thread, align 8, !tbaa !338
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call4 = tail call %struct.halide_profiler_pipeline_stats* @_ZN6Halide7Runtime8Internal23find_or_create_pipelineEPKciPKy(i8* %pipeline_name, i32 %num_funcs, i64* %func_names) #16
  %tobool5.not = icmp eq %struct.halide_profiler_pipeline_stats* %call4, null
  br i1 %tobool5.not, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.end
  %call7 = tail call i32 @halide_error_out_of_memory(i8* %user_context) #15
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %runs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %call4, i64 0, i32 11
  %1 = load i32, i32* %runs, align 8, !tbaa !343
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %runs, align 8, !tbaa !343
  %first_func_id = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %call4, i64 0, i32 10
  %2 = load i32, i32* %first_func_id, align 4, !tbaa !376
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.then6
  %retval.0 = phi i32 [ %2, %if.end8 ], [ %call7, %if.then6 ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull %lock.i) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_stack_peak_update(i8* %user_context, i8* %pipeline_state, i64* %f_values) local_unnamed_addr #0 {
entry:
  %cmp.not = icmp eq i8* %pipeline_state, null
  br i1 %cmp.not, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.186, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %num_funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 72
  %0 = bitcast i8* %num_funcs to i32*
  %1 = load i32, i32* %0, align 8, !tbaa !351
  %cmp118 = icmp sgt i32 %1, 0
  br i1 %cmp118, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %do.end
  %funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 56
  %2 = bitcast i8* %funcs to %struct.halide_profiler_func_stats**
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc, %do.end
  ret void

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %3 = phi i32 [ %1, %for.body.lr.ph ], [ %9, %for.inc ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds i64, i64* %f_values, i64 %indvars.iv
  %4 = load i64, i64* %arrayidx, align 8, !tbaa !110
  %cmp2.not = icmp eq i64 %4, 0
  br i1 %cmp2.not, label %for.inc, label %if.then3

if.then3:                                         ; preds = %for.body
  %5 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %2, align 8, !tbaa !352
  %stack_peak = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %5, i64 %indvars.iv, i32 4
  %6 = load i64, i64* %stack_peak, align 8, !tbaa !110
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %if.then3
  %old_val.0.i = phi i64 [ %6, %if.then3 ], [ %8, %while.body.i ]
  %cmp.i = icmp ult i64 %old_val.0.i, %4
  br i1 %cmp.i, label %while.body.i, label %for.inc.loopexit

while.body.i:                                     ; preds = %while.cond.i
  %7 = cmpxchg i64* %stack_peak, i64 %old_val.0.i, i64 %4 seq_cst seq_cst
  %8 = extractvalue { i64, i1 } %7, 0
  %cmp1.i = icmp eq i64 %old_val.0.i, %8
  br i1 %cmp1.i, label %for.inc.loopexit, label %while.cond.i, !llvm.loop !384

for.inc.loopexit:                                 ; preds = %while.body.i, %while.cond.i
  %.pre = load i32, i32* %0, align 8, !tbaa !351
  br label %for.inc

for.inc:                                          ; preds = %for.inc.loopexit, %for.body
  %9 = phi i32 [ %.pre, %for.inc.loopexit ], [ %3, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %10 = sext i32 %9 to i64
  %cmp1 = icmp slt i64 %indvars.iv.next, %10
  br i1 %cmp1, label %for.body, label %for.cond.cleanup, !llvm.loop !385
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_memory_allocate(i8* %user_context, i8* %pipeline_state, i32 %func_id, i64 %incr) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq i64 %incr, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp1.not = icmp eq i8* %pipeline_state, null
  br i1 %cmp1.not, label %if.then2, label %do.body4

if.then2:                                         ; preds = %if.end
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.1.187, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.body4

do.body4:                                         ; preds = %if.then2, %if.end
  %cmp5 = icmp sgt i32 %func_id, -1
  br i1 %cmp5, label %do.body10, label %if.then6

if.then6:                                         ; preds = %do.body4
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.2.188, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.body10

do.body10:                                        ; preds = %if.then6, %do.body4
  %num_funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 72
  %0 = bitcast i8* %num_funcs to i32*
  %1 = load i32, i32* %0, align 8, !tbaa !351
  %cmp11 = icmp sgt i32 %1, %func_id
  br i1 %cmp11, label %do.end15, label %if.then12

if.then12:                                        ; preds = %do.body10
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.3.189, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end15

do.end15:                                         ; preds = %if.then12, %do.body10
  %funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 56
  %2 = bitcast i8* %funcs to %struct.halide_profiler_func_stats**
  %3 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %2, align 8, !tbaa !352
  %idxprom = sext i32 %func_id to i64
  %num_allocs = getelementptr inbounds i8, i8* %pipeline_state, i64 88
  %4 = bitcast i8* %num_allocs to i32*
  %5 = atomicrmw add i32* %4, i32 1 seq_cst
  %memory_total = getelementptr inbounds i8, i8* %pipeline_state, i64 24
  %6 = bitcast i8* %memory_total to i64*
  %7 = atomicrmw add i64* %6, i64 %incr seq_cst
  %memory_current = getelementptr inbounds i8, i8* %pipeline_state, i64 8
  %8 = bitcast i8* %memory_current to i64*
  %9 = atomicrmw add i64* %8, i64 %incr seq_cst
  %10 = add i64 %9, %incr
  %memory_peak = getelementptr inbounds i8, i8* %pipeline_state, i64 16
  %11 = bitcast i8* %memory_peak to i64*
  %12 = load i64, i64* %11, align 8, !tbaa !110
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %do.end15
  %old_val.0.i = phi i64 [ %12, %do.end15 ], [ %14, %while.body.i ]
  %cmp.i = icmp ult i64 %old_val.0.i, %10
  br i1 %cmp.i, label %while.body.i, label %_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit

while.body.i:                                     ; preds = %while.cond.i
  %13 = cmpxchg i64* %11, i64 %old_val.0.i, i64 %10 seq_cst seq_cst
  %14 = extractvalue { i64, i1 } %13, 0
  %cmp1.i = icmp eq i64 %old_val.0.i, %14
  br i1 %cmp1.i, label %_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit, label %while.cond.i, !llvm.loop !384

_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit: ; preds = %while.body.i, %while.cond.i
  %num_allocs16 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 8
  %15 = atomicrmw add i32* %num_allocs16, i32 1 seq_cst
  %memory_total17 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 3
  %16 = atomicrmw add i64* %memory_total17, i64 %incr seq_cst
  %memory_current18 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 1
  %17 = atomicrmw add i64* %memory_current18, i64 %incr seq_cst
  %18 = add i64 %17, %incr
  %memory_peak19 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 2
  %19 = load i64, i64* %memory_peak19, align 8, !tbaa !110
  br label %while.cond.i43

while.cond.i43:                                   ; preds = %while.body.i45, %_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit
  %old_val.0.i41 = phi i64 [ %19, %_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit ], [ %21, %while.body.i45 ]
  %cmp.i42 = icmp ult i64 %old_val.0.i41, %18
  br i1 %cmp.i42, label %while.body.i45, label %return

while.body.i45:                                   ; preds = %while.cond.i43
  %20 = cmpxchg i64* %memory_peak19, i64 %old_val.0.i41, i64 %18 seq_cst seq_cst
  %21 = extractvalue { i64, i1 } %20, 0
  %cmp1.i44 = icmp eq i64 %old_val.0.i41, %21
  br i1 %cmp1.i44, label %return, label %while.cond.i43, !llvm.loop !384

return:                                           ; preds = %while.body.i45, %while.cond.i43, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_memory_free(i8* %user_context, i8* %pipeline_state, i32 %func_id, i64 %decr) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq i64 %decr, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp1.not = icmp eq i8* %pipeline_state, null
  br i1 %cmp1.not, label %if.then2, label %do.body4

if.then2:                                         ; preds = %if.end
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.4.190, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.body4

do.body4:                                         ; preds = %if.then2, %if.end
  %cmp5 = icmp sgt i32 %func_id, -1
  br i1 %cmp5, label %do.body10, label %if.then6

if.then6:                                         ; preds = %do.body4
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.5.191, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.body10

do.body10:                                        ; preds = %if.then6, %do.body4
  %num_funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 72
  %0 = bitcast i8* %num_funcs to i32*
  %1 = load i32, i32* %0, align 8, !tbaa !351
  %cmp11 = icmp sgt i32 %1, %func_id
  br i1 %cmp11, label %do.end15, label %if.then12

if.then12:                                        ; preds = %do.body10
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.6.192, i64 0, i64 0)) #15
  tail call void @abort() #15
  br label %do.end15

do.end15:                                         ; preds = %if.then12, %do.body10
  %funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 56
  %2 = bitcast i8* %funcs to %struct.halide_profiler_func_stats**
  %3 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %2, align 8, !tbaa !352
  %idxprom = sext i32 %func_id to i64
  %memory_current = getelementptr inbounds i8, i8* %pipeline_state, i64 8
  %4 = bitcast i8* %memory_current to i64*
  %5 = atomicrmw sub i64* %4, i64 %decr seq_cst
  %memory_current16 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 1
  %6 = atomicrmw sub i64* %memory_current16, i64 %decr seq_cst
  br label %return

return:                                           ; preds = %do.end15, %entry
  ret void
}

; Function Attrs: nounwind
define weak void @halide_profiler_report(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #16
  %lock.i = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock.i) #15
  tail call void @halide_profiler_report_unlocked(i8* %user_context, %struct.halide_profiler_state* %call) #16
  tail call void @halide_mutex_unlock(%struct.halide_mutex* %lock.i) #15
  ret void
}

; Function Attrs: nounwind
define weak void @halide_profiler_reset() local_unnamed_addr #4 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #16
  %lock.i = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock.i) #15
  tail call void @halide_profiler_reset_unlocked(%struct.halide_profiler_state* %call) #16
  tail call void @halide_mutex_unlock(%struct.halide_mutex* %lock.i) #15
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_profiler_pipeline_end(i8* %user_context, i8* %state) local_unnamed_addr #2 {
entry:
  %current_func = getelementptr inbounds i8, i8* %state, i64 16
  %0 = bitcast i8* %current_func to i32*
  store i32 -1, i32* %0, align 8, !tbaa !340
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* %ptr, i64 %len) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_check_memory_is_initialized(i8* %user_context, i8* %ptr, i64 %len, i8* %name) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_check_buffer_is_initialized(i8* %user_context, %struct.halide_buffer_t* %b, i8* %buf_name) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_annotate_buffer_is_initialized(i8* %user_context, %struct.halide_buffer_t* %b) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_msan_annotate_buffer_is_initialized_as_destructor(i8* %user_context, i8* %b) local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_default_can_use_target_features(i32 %count, i64* %features) #4 {
entry:
  %tmp = alloca %"struct.Halide::Runtime::Internal::CpuFeatures", align 8
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal36halide_cpu_features_initialized_lockE) #15
  %0 = load i8, i8* @_ZN6Halide7Runtime8Internal31halide_cpu_features_initializedE, align 1, !tbaa !15, !range !17
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::CpuFeatures"* %tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #10
  call void @_ZN6Halide7Runtime8Internal23halide_get_cpu_featuresEv(%"struct.Halide::Runtime::Internal::CpuFeatures"* nonnull sret(%"struct.Halide::Runtime::Internal::CpuFeatures") align 8 %tmp) #15
  %call = call i8* @memcpy(i8* bitcast ([4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE to i8*), i8* nonnull %1, i64 32) #15
  store i8 1, i8* @_ZN6Halide7Runtime8Internal31halide_cpu_features_initializedE, align 1, !tbaa !15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #10
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal36halide_cpu_features_initialized_lockE) #15
  %cmp.not = icmp eq i32 %count, 2
  br i1 %cmp.not, label %if.end2, label %if.then1

if.then1:                                         ; preds = %if.end
  call void @halide_error(i8* null, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.197, i64 0, i64 0)) #15
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.end
  %2 = load i64, i64* %features, align 8, !tbaa !110
  %3 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i64 0, i64 0), align 8, !tbaa !110
  %and = and i64 %3, %2
  %cmp6.not = icmp eq i64 %and, 0
  br i1 %cmp6.not, label %for.inc.critedge, label %if.then7

if.then7:                                         ; preds = %if.end2
  %4 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i64 0, i64 2), align 8, !tbaa !110
  %and10 = and i64 %4, %and
  %cmp11.not = icmp eq i64 %and10, %and
  br i1 %cmp11.not, label %for.inc.critedge, label %cleanup15

for.inc.critedge:                                 ; preds = %if.then7, %if.end2
  %arrayidx.1 = getelementptr inbounds i64, i64* %features, i64 1
  %5 = load i64, i64* %arrayidx.1, align 8, !tbaa !110
  %6 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i64 0, i64 1), align 8, !tbaa !110
  %and.1 = and i64 %6, %5
  %cmp6.not.1 = icmp eq i64 %and.1, 0
  br i1 %cmp6.not.1, label %for.inc.critedge.1, label %if.then7.1

cleanup15:                                        ; preds = %for.inc.critedge.1, %if.then7.1, %if.then7
  %cmp3.lcssa = phi i32 [ 0, %if.then7 ], [ 0, %if.then7.1 ], [ 1, %for.inc.critedge.1 ]
  ret i32 %cmp3.lcssa

if.then7.1:                                       ; preds = %for.inc.critedge
  %7 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i64 0, i64 3), align 8, !tbaa !110
  %and10.1 = and i64 %7, %and.1
  %cmp11.not.1 = icmp eq i64 %and10.1, %and.1
  br i1 %cmp11.not.1, label %for.inc.critedge.1, label %cleanup15

for.inc.critedge.1:                               ; preds = %if.then7.1, %for.inc.critedge
  br label %cleanup15
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i32, i64*)* @halide_set_custom_can_use_target_features(i32 (i32, i64*)* %fn) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i32, i64*)*, i32 (i32, i64*)** @_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE, align 8, !tbaa !10
  store i32 (i32, i64*)* %fn, i32 (i32, i64*)** @_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE, align 8, !tbaa !10
  ret i32 (i32, i64*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_can_use_target_features(i32 %count, i64* %features) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i32, i64*)*, i32 (i32, i64*)** @_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE, align 8, !tbaa !10
  %call = tail call i32 %0(i32 %count, i64* %features) #15
  ret i32 %call
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal23halide_get_cpu_featuresEv(%"struct.Halide::Runtime::Internal::CpuFeatures"* noalias sret(%"struct.Halide::Runtime::Internal::CpuFeatures") align 8 %agg.result) local_unnamed_addr #8 {
entry:
  %info = alloca [4 x i32], align 4
  %info2 = alloca [4 x i32], align 4
  %info3 = alloca [4 x i32], align 4
  %arrayidx3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::CpuFeatures", %"struct.Halide::Runtime::Internal::CpuFeatures"* %agg.result, i64 0, i32 1, i64 0
  %0 = bitcast %"struct.Halide::Runtime::Internal::CpuFeatures"* %agg.result to <4 x i64>*
  store <4 x i64> <i64 34084860461808, i64 0, i64 0, i64 0>, <4 x i64>* %0, align 8, !tbaa !110
  %1 = bitcast [4 x i32]* %info to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #10
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %info, i64 0, i64 0
  store i32 1, i32* %arraydecay, align 4, !tbaa !73
  %arrayidx1.i110 = getelementptr inbounds [4 x i32], [4 x i32]* %info, i64 0, i64 1
  store i32 0, i32* %arrayidx1.i110, align 4, !tbaa !73
  call void asm sideeffect inteldialect "xchg rbx, rsi\0A\09mov eax, dword ptr $$0 $0\0A\09mov ecx, dword ptr $$4 $0\0A\09cpuid\0A\09mov dword ptr $$0 $0, eax\0A\09mov dword ptr $$4 $0, ebx\0A\09mov dword ptr $$8 $0, ecx\0A\09mov dword ptr $$12 $0, edx\0A\09xchg rbx, rsi", "=*m,~{eax},~{ebx},~{ecx},~{edx},~{esi},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %arraydecay) #10
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %info, i64 0, i64 2
  %2 = load i32, i32* %arrayidx, align 4, !tbaa !73
  %and = lshr i32 %2, 15
  %3 = and i32 %and, 16
  %and2 = lshr i32 %2, 23
  %4 = and i32 %and2, 32
  %5 = or i32 %4, %3
  %and6 = lshr i32 %2, 20
  %6 = and i32 %and6, 512
  %7 = or i32 %5, %6
  %and14 = lshr i32 %2, 5
  %8 = and i32 %and14, 128
  %9 = or i32 %7, %8
  %10 = zext i32 %9 to i64
  %11 = and i32 %2, 805834752
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %entry
  store i64 %10, i64* %arrayidx3.i, align 8, !tbaa !110
  br label %14

14:                                               ; preds = %13, %entry
  %15 = and i32 %2, 1879048192
  %.not = icmp eq i32 %15, 1879048192
  br i1 %.not, label %if.then30, label %if.end67

if.then30:                                        ; preds = %14
  %16 = bitcast [4 x i32]* %info2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #10
  %arraydecay31 = getelementptr inbounds [4 x i32], [4 x i32]* %info2, i64 0, i64 0
  store i32 7, i32* %arraydecay31, align 4, !tbaa !73
  %arrayidx1.i99 = getelementptr inbounds [4 x i32], [4 x i32]* %info2, i64 0, i64 1
  store i32 0, i32* %arrayidx1.i99, align 4, !tbaa !73
  call void asm sideeffect inteldialect "xchg rbx, rsi\0A\09mov eax, dword ptr $$0 $0\0A\09mov ecx, dword ptr $$4 $0\0A\09cpuid\0A\09mov dword ptr $$0 $0, eax\0A\09mov dword ptr $$4 $0, ebx\0A\09mov dword ptr $$8 $0, ecx\0A\09mov dword ptr $$12 $0, edx\0A\09xchg rbx, rsi", "=*m,~{eax},~{ebx},~{ecx},~{edx},~{esi},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %arraydecay31) #10
  %17 = load i32, i32* %arrayidx1.i99, align 4, !tbaa !73
  %and33 = and i32 %17, 32
  %cmp34.not = icmp eq i32 %and33, 0
  br i1 %cmp34.not, label %if.end36, label %if.then35

if.then35:                                        ; preds = %if.then30
  %or.i98 = or i64 %10, 64
  store i64 %or.i98, i64* %arrayidx3.i, align 8, !tbaa !110
  br label %if.end36

if.end36:                                         ; preds = %if.then35, %if.then30
  %18 = phi i64 [ %or.i98, %if.then35 ], [ %10, %if.then30 ]
  %and38 = and i32 %17, 268500992
  %cmp39 = icmp eq i32 %and38, 268500992
  br i1 %cmp39, label %if.then40, label %if.end66

if.then40:                                        ; preds = %if.end36
  %and42 = and i32 %17, 469827584
  %cmp43 = icmp eq i32 %and42, 469827584
  %spec.select.v = select i1 %cmp43, i64 3298534883328, i64 1099511627776
  %spec.select = or i64 %18, %spec.select.v
  %and47 = and i32 %17, -805109760
  %cmp48 = icmp eq i32 %and47, -805109760
  %or.i92 = or i64 %spec.select, 4398046511104
  %spec.select130 = select i1 %cmp48, i64 %or.i92, i64 %spec.select
  store i64 %spec.select130, i64* %arrayidx3.i, align 8, !tbaa !110
  %and52 = and i32 %17, -803012608
  %cmp53 = icmp eq i32 %and52, -803012608
  br i1 %cmp53, label %if.then54, label %if.end66

if.then54:                                        ; preds = %if.then40
  %or.i90 = or i64 %spec.select130, 8796093022208
  store i64 %or.i90, i64* %arrayidx3.i, align 8, !tbaa !110
  %19 = bitcast [4 x i32]* %info3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #10
  %arraydecay55 = getelementptr inbounds [4 x i32], [4 x i32]* %info3, i64 0, i64 0
  store i32 7, i32* %arraydecay55, align 4, !tbaa !73
  %arrayidx1.i = getelementptr inbounds [4 x i32], [4 x i32]* %info3, i64 0, i64 1
  store i32 1, i32* %arrayidx1.i, align 4, !tbaa !73
  call void asm sideeffect inteldialect "xchg rbx, rsi\0A\09mov eax, dword ptr $$0 $0\0A\09mov ecx, dword ptr $$4 $0\0A\09cpuid\0A\09mov dword ptr $$0 $0, eax\0A\09mov dword ptr $$4 $0, ebx\0A\09mov dword ptr $$8 $0, ecx\0A\09mov dword ptr $$12 $0, edx\0A\09xchg rbx, rsi", "=*m,~{eax},~{ebx},~{ecx},~{edx},~{esi},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %arraydecay55) #10
  %arrayidx56 = getelementptr inbounds [4 x i32], [4 x i32]* %info2, i64 0, i64 2
  %20 = load i32, i32* %arrayidx56, align 4, !tbaa !73
  %and57 = and i32 %20, 2048
  %cmp58.not = icmp eq i32 %and57, 0
  br i1 %cmp58.not, label %if.end64, label %land.lhs.true59

land.lhs.true59:                                  ; preds = %if.then54
  %21 = load i32, i32* %arraydecay55, align 4, !tbaa !73
  %and61 = and i32 %21, 32
  %cmp62.not = icmp eq i32 %and61, 0
  br i1 %cmp62.not, label %if.end64, label %if.then63

if.then63:                                        ; preds = %land.lhs.true59
  %or.i = or i64 %spec.select130, 26388279066624
  store i64 %or.i, i64* %arrayidx3.i, align 8, !tbaa !110
  br label %if.end64

if.end64:                                         ; preds = %if.then63, %land.lhs.true59, %if.then54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #10
  br label %if.end66

if.end66:                                         ; preds = %if.end64, %if.then40, %if.end36
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #10
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_use_jit_module() local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_release_jit_module() local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind
define i32 @convolution(%struct.halide_buffer_t* noalias %IMG.buffer, %struct.halide_buffer_t* noalias %Filter.buffer, %struct.halide_buffer_t* noalias %Output.buffer) local_unnamed_addr #9 {
entry:
  %.not = icmp eq %struct.halide_buffer_t* %Output.buffer, null
  br i1 %.not, label %"assert failed", label %"assert succeeded", !prof !386

"assert failed":                                  ; preds = %entry
  %0 = tail call i32 @halide_error_buffer_argument_is_null(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i64 0, i64 0)) #10
  br label %destructor_block

"assert succeeded":                               ; preds = %entry
  %.not308 = icmp eq %struct.halide_buffer_t* %IMG.buffer, null
  br i1 %.not308, label %"assert failed1", label %"assert succeeded2", !prof !386

destructor_block:                                 ; preds = %"end for Output.s1.r10$z.rebased275", %"end for Output.s0.c_out.rebased210", %_halide_buffer_is_bounds_query.exit730, %"assert failed3", %"assert failed1", %"assert failed"
  %1 = phi i32 [ %0, %"assert failed" ], [ %2, %"assert failed1" ], [ %3, %"assert failed3" ], [ 0, %_halide_buffer_is_bounds_query.exit730 ], [ 0, %"end for Output.s0.c_out.rebased210" ], [ 0, %"end for Output.s1.r10$z.rebased275" ]
  ret i32 %1

"assert failed1":                                 ; preds = %"assert succeeded"
  %2 = tail call i32 @halide_error_buffer_argument_is_null(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0)) #10
  br label %destructor_block

"assert succeeded2":                              ; preds = %"assert succeeded"
  %.not309 = icmp eq %struct.halide_buffer_t* %Filter.buffer, null
  br i1 %.not309, label %"assert failed3", label %"assert succeeded4", !prof !386

"assert failed3":                                 ; preds = %"assert succeeded2"
  %3 = tail call i32 @halide_error_buffer_argument_is_null(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0)) #10
  br label %destructor_block

"assert succeeded4":                              ; preds = %"assert succeeded2"
  %host.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Filter.buffer, i64 0, i32 2
  %4 = load i8*, i8** %host.i, align 8, !tbaa !172
  %code.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Filter.buffer, i64 0, i32 4, i32 0
  %5 = load i8, i8* %code.i.i, align 2, !tbaa !305
  %conv.i.i = zext i8 %5 to i32
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Filter.buffer, i64 0, i32 4, i32 1
  %6 = load i8, i8* %bits.i.i, align 1, !tbaa !136
  %conv3.i.i = zext i8 %6 to i32
  %shl.i.i = shl nuw nsw i32 %conv3.i.i, 8
  %or.i.i = or i32 %shl.i.i, %conv.i.i
  %lanes.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Filter.buffer, i64 0, i32 4, i32 2
  %7 = load i16, i16* %lanes.i.i, align 2, !tbaa !306
  %conv4.i.i = zext i16 %7 to i32
  %shl5.i.i = shl nuw i32 %conv4.i.i, 16
  %or6.i.i = or i32 %or.i.i, %shl5.i.i
  %flags.i.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Filter.buffer, i64 0, i32 3
  %8 = load i64, i64* %flags.i.i.i, align 8, !tbaa !308
  %dimensions.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Filter.buffer, i64 0, i32 5
  %9 = load i32, i32* %dimensions.i, align 4, !tbaa !175
  %dim.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Filter.buffer, i64 0, i32 6
  %10 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !176
  %min.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i64 0, i32 0
  %11 = load i32, i32* %min.i, align 4, !tbaa !181
  %extent.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i64 0, i32 1
  %12 = load i32, i32* %extent.i, align 4, !tbaa !178
  %stride.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i64 0, i32 2
  %13 = load i32, i32* %stride.i, align 4, !tbaa !182
  %min.i406 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i64 1, i32 0
  %14 = load i32, i32* %min.i406, align 4, !tbaa !181
  %extent.i408 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i64 1, i32 1
  %15 = load i32, i32* %extent.i408, align 4, !tbaa !178
  %stride.i410 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i64 1, i32 2
  %16 = load i32, i32* %stride.i410, align 4, !tbaa !182
  %min.i412 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i64 2, i32 0
  %17 = load i32, i32* %min.i412, align 4, !tbaa !181
  %extent.i414 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i64 2, i32 1
  %18 = load i32, i32* %extent.i414, align 4, !tbaa !178
  %stride.i416 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i64 2, i32 2
  %19 = load i32, i32* %stride.i416, align 4, !tbaa !182
  %host.i417 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %IMG.buffer, i64 0, i32 2
  %20 = load i8*, i8** %host.i417, align 8, !tbaa !172
  %code.i.i418 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %IMG.buffer, i64 0, i32 4, i32 0
  %21 = load i8, i8* %code.i.i418, align 2, !tbaa !305
  %conv.i.i419 = zext i8 %21 to i32
  %bits.i.i420 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %IMG.buffer, i64 0, i32 4, i32 1
  %22 = load i8, i8* %bits.i.i420, align 1, !tbaa !136
  %conv3.i.i421 = zext i8 %22 to i32
  %shl.i.i422 = shl nuw nsw i32 %conv3.i.i421, 8
  %or.i.i423 = or i32 %shl.i.i422, %conv.i.i419
  %lanes.i.i424 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %IMG.buffer, i64 0, i32 4, i32 2
  %23 = load i16, i16* %lanes.i.i424, align 2, !tbaa !306
  %conv4.i.i425 = zext i16 %23 to i32
  %shl5.i.i426 = shl nuw i32 %conv4.i.i425, 16
  %or6.i.i427 = or i32 %or.i.i423, %shl5.i.i426
  %flags.i.i.i428 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %IMG.buffer, i64 0, i32 3
  %24 = load i64, i64* %flags.i.i.i428, align 8, !tbaa !308
  %dimensions.i431 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %IMG.buffer, i64 0, i32 5
  %25 = load i32, i32* %dimensions.i431, align 4, !tbaa !175
  %dim.i432 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %IMG.buffer, i64 0, i32 6
  %26 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i432, align 8, !tbaa !176
  %min.i433 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %26, i64 0, i32 0
  %27 = load i32, i32* %min.i433, align 4, !tbaa !181
  %extent.i435 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %26, i64 0, i32 1
  %28 = load i32, i32* %extent.i435, align 4, !tbaa !178
  %stride.i437 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %26, i64 0, i32 2
  %29 = load i32, i32* %stride.i437, align 4, !tbaa !182
  %min.i439 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %26, i64 1, i32 0
  %30 = load i32, i32* %min.i439, align 4, !tbaa !181
  %extent.i441 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %26, i64 1, i32 1
  %31 = load i32, i32* %extent.i441, align 4, !tbaa !178
  %stride.i443 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %26, i64 1, i32 2
  %32 = load i32, i32* %stride.i443, align 4, !tbaa !182
  %min.i445 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %26, i64 2, i32 0
  %33 = load i32, i32* %min.i445, align 4, !tbaa !181
  %extent.i447 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %26, i64 2, i32 1
  %34 = load i32, i32* %extent.i447, align 4, !tbaa !178
  %stride.i449 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %26, i64 2, i32 2
  %35 = load i32, i32* %stride.i449, align 4, !tbaa !182
  %host.i450 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Output.buffer, i64 0, i32 2
  %36 = load i8*, i8** %host.i450, align 8, !tbaa !172
  %code.i.i451 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Output.buffer, i64 0, i32 4, i32 0
  %37 = load i8, i8* %code.i.i451, align 2, !tbaa !305
  %conv.i.i452 = zext i8 %37 to i32
  %bits.i.i453 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Output.buffer, i64 0, i32 4, i32 1
  %38 = load i8, i8* %bits.i.i453, align 1, !tbaa !136
  %conv3.i.i454 = zext i8 %38 to i32
  %shl.i.i455 = shl nuw nsw i32 %conv3.i.i454, 8
  %or.i.i456 = or i32 %shl.i.i455, %conv.i.i452
  %lanes.i.i457 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Output.buffer, i64 0, i32 4, i32 2
  %39 = load i16, i16* %lanes.i.i457, align 2, !tbaa !306
  %conv4.i.i458 = zext i16 %39 to i32
  %shl5.i.i459 = shl nuw i32 %conv4.i.i458, 16
  %or6.i.i460 = or i32 %or.i.i456, %shl5.i.i459
  %flags.i.i.i461 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Output.buffer, i64 0, i32 3
  %40 = load i64, i64* %flags.i.i.i461, align 8, !tbaa !308
  %dimensions.i464 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Output.buffer, i64 0, i32 5
  %41 = load i32, i32* %dimensions.i464, align 4, !tbaa !175
  %dim.i465 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Output.buffer, i64 0, i32 6
  %42 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i465, align 8, !tbaa !176
  %min.i466 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %42, i64 0, i32 0
  %43 = load i32, i32* %min.i466, align 4, !tbaa !181
  %extent.i468 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %42, i64 0, i32 1
  %44 = load i32, i32* %extent.i468, align 4, !tbaa !178
  %stride.i470 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %42, i64 0, i32 2
  %45 = load i32, i32* %stride.i470, align 4, !tbaa !182
  %min.i472 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %42, i64 1, i32 0
  %46 = load i32, i32* %min.i472, align 4, !tbaa !181
  %extent.i474 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %42, i64 1, i32 1
  %47 = load i32, i32* %extent.i474, align 4, !tbaa !178
  %stride.i476 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %42, i64 1, i32 2
  %48 = load i32, i32* %stride.i476, align 4, !tbaa !182
  %min.i478 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %42, i64 2, i32 0
  %49 = load i32, i32* %min.i478, align 4, !tbaa !181
  %extent.i480 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %42, i64 2, i32 1
  %50 = load i32, i32* %extent.i480, align 4, !tbaa !178
  %stride.i482 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %42, i64 2, i32 2
  %51 = load i32, i32* %stride.i482, align 4, !tbaa !182
  %t254 = mul nsw i32 %47, %44
  %52 = mul nsw i32 %50, %t254
  %53 = icmp slt i32 %52, 1
  %54 = icmp eq i32 %t254, 0
  %t275 = sext i1 %54 to i32
  %t254.lobit = ashr i32 %t254, 31
  %55 = add nsw i32 %52, -1
  %56 = and i32 %55, -64
  %57 = select i1 %53, i32 64, i32 63
  %58 = add i32 %57, %56
  %59 = sub nsw i32 %t254, %t275
  %60 = sdiv i32 %58, %59
  %61 = xor i32 %t254.lobit, -1
  %62 = sub nsw i32 %61, %t254.lobit
  %63 = select i1 %53, i32 %62, i32 0
  %64 = add nsw i32 %63, %60
  %65 = xor i32 %t275, -1
  %t255 = and i32 %64, %65
  %66 = icmp sgt i32 %t254, 0
  %67 = sub nsw i32 0, %t255
  %Filter.extent.2.required.s = select i1 %66, i32 %t255, i32 %67
  %a42 = select i1 %66, i32 0, i32 %t255
  %b7 = add nsw i32 %28, %27
  %a2 = xor i32 %44, -1
  %68 = icmp sgt i32 %44, 1
  %69 = select i1 %68, i32 %44, i32 1
  %b4 = add nsw i32 %69, -1
  %.not310 = icmp sgt i32 %69, %a2
  %70 = select i1 %.not310, i32 %b4, i32 %a2
  %71 = ashr i32 %12, 1
  %72 = add i32 %43, %71
  %a1 = add i32 %72, %70
  %b3 = add nsw i32 %b7, -1
  %73 = icmp sgt i32 %b3, %a1
  %a0 = select i1 %73, i32 %a1, i32 %b3
  %74 = icmp sgt i32 %a0, %27
  %75 = select i1 %74, i32 %a0, i32 %27
  %76 = sub nsw i32 %72, %12
  %a5 = add nsw i32 %76, 2
  %77 = icmp sgt i32 %b7, %a5
  %78 = select i1 %77, i32 %a5, i32 %b7
  %a4 = add nsw i32 %78, -1
  %79 = icmp sgt i32 %a4, %27
  %80 = select i1 %79, i32 %a4, i32 %27
  %IMG.extent.0.required.s = sub nsw i32 %75, %80
  %t258 = icmp sgt i32 %44, 0
  %81 = icmp eq i32 %44, 0
  %t281 = sext i1 %81 to i32
  %b26.lobit = ashr i32 %44, 31
  %a8 = xor i32 %t254, -1
  %82 = icmp sgt i32 %t254, 1
  %83 = select i1 %82, i32 %t254, i32 1
  %b10 = add nsw i32 %83, -1
  %.not311 = icmp sgt i32 %83, %a8
  %84 = select i1 %.not311, i32 %b10, i32 %a8
  %85 = sub nsw i32 %44, %t281
  %86 = sdiv i32 %84, %85
  %87 = xor i32 %b26.lobit, -1
  %88 = sub nsw i32 %87, %b26.lobit
  %89 = xor i32 %t281, -1
  %t260 = and i32 %86, %89
  %b15 = add nsw i32 %31, %30
  %90 = select i1 %t258, i32 %t260, i32 0
  %91 = ashr i32 %15, 1
  %92 = add i32 %46, %91
  %a11 = add i32 %92, %90
  %b13 = add nsw i32 %b15, -1
  %93 = icmp sgt i32 %b13, %a11
  %a10 = select i1 %93, i32 %a11, i32 %b13
  %94 = icmp sgt i32 %a10, %30
  %95 = select i1 %94, i32 %a10, i32 %30
  %96 = select i1 %t258, i32 0, i32 %t260
  %97 = add i32 %92, 2
  %98 = sub i32 %97, %15
  %a13 = add i32 %98, %96
  %99 = icmp sgt i32 %b15, %a13
  %100 = select i1 %99, i32 %a13, i32 %b15
  %a12 = add nsw i32 %100, -1
  %101 = icmp sgt i32 %a12, %30
  %102 = select i1 %101, i32 %a12, i32 %30
  %IMG.extent.1.required.s = sub nsw i32 %95, %102
  %103 = icmp slt i32 %33, 0
  %104 = select i1 %103, i32 %33, i32 0
  %a18 = add nsw i32 %104, %34
  %b20 = add nsw i32 %33, 1
  %105 = icmp sgt i32 %a18, %b20
  %106 = select i1 %105, i32 %a18, i32 %b20
  %a21 = add nsw i32 %34, %33
  %107 = icmp slt i32 %a21, 1
  %108 = select i1 %107, i32 %a21, i32 1
  %a20 = add nsw i32 %108, -1
  %109 = icmp sgt i32 %a20, %33
  %110 = select i1 %109, i32 %a20, i32 %33
  %IMG.extent.2.required = sub nsw i32 %106, %110
  %111 = add nsw i32 %IMG.extent.0.required.s, 1
  %112 = add nsw i32 %IMG.extent.1.required.s, 1
  %IMG.stride.2.required = mul nsw i32 %112, %111
  %113 = tail call i32 @llvm.abs.i32(i32 %44, i1 true)
  %b29 = add nsw i32 %47, -1
  %.not312 = icmp slt i32 %90, %47
  %114 = select i1 %.not312, i32 %b29, i32 %90
  %115 = icmp slt i32 %96, 0
  %116 = select i1 %115, i32 %96, i32 0
  %Output.extent.1.required.s = sub nsw i32 %114, %116
  %a31 = select i1 %66, i32 %t255, i32 0
  %b33 = add nsw i32 %50, -1
  %.not313 = icmp slt i32 %a31, %50
  %117 = select i1 %.not313, i32 %b33, i32 %a31
  %118 = icmp slt i32 %a42, 0
  %119 = select i1 %118, i32 %a42, i32 0
  %120 = icmp ugt i32 %113, 1
  %121 = select i1 %120, i32 %113, i32 1
  %122 = add nsw i32 %Output.extent.1.required.s, 1
  %Output.stride.2.required = mul nsw i32 %122, %121
  %cmp.i = icmp eq i8* %4, null
  br i1 %cmp.i, label %_halide_buffer_is_bounds_query.exit, label %after_bb

_halide_buffer_is_bounds_query.exit:              ; preds = %"assert succeeded4"
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Filter.buffer, i64 0, i32 0
  %123 = load i64, i64* %device.i, align 8, !tbaa !174
  %cmp1.i = icmp eq i64 %123, 0
  br i1 %cmp1.i, label %then_bb, label %after_bb

after_bb:                                         ; preds = %"assert succeeded4", %_halide_buffer_is_bounds_query.exit, %then_bb
  %124 = load i8*, i8** %host.i417, align 8, !tbaa !172
  %cmp.i485 = icmp eq i8* %124, null
  br i1 %cmp.i485, label %_halide_buffer_is_bounds_query.exit489, label %after_bb5

_halide_buffer_is_bounds_query.exit489:           ; preds = %after_bb
  %device.i486 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %IMG.buffer, i64 0, i32 0
  %125 = load i64, i64* %device.i486, align 8, !tbaa !174
  %cmp1.i487 = icmp eq i64 %125, 0
  br i1 %cmp1.i487, label %then_bb6, label %after_bb5

then_bb:                                          ; preds = %_halide_buffer_is_bounds_query.exit
  %126 = add nsw i32 %a42, %49
  %127 = add nsw i32 %Filter.extent.2.required.s, 1
  %128 = mul nsw i32 %15, %12
  store i8 0, i8* %code.i.i, align 8, !tbaa !387
  %129 = bitcast %struct.halide_buffer_t* %Filter.buffer to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %129, i8 0, i64 24, i1 false)
  store i8 32, i8* %bits.i.i, align 1, !tbaa !388
  store i16 1, i16* %lanes.i.i, align 2, !tbaa !389
  store i32 3, i32* %dimensions.i, align 4, !tbaa !175
  store i32 0, i32* %min.i, align 4, !tbaa.struct !177
  store i32 %12, i32* %extent.i, align 4, !tbaa.struct !390
  store i32 1, i32* %stride.i, align 4, !tbaa.struct !391
  %.sroa.4.0..sroa_idx822 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i64 0, i32 3
  store i32 0, i32* %.sroa.4.0..sroa_idx822, align 4, !tbaa.struct !392
  %.pre.i = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !176
  %.sroa.5.16..sroa_idx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i, i64 1, i32 0
  store i32 0, i32* %.sroa.5.16..sroa_idx, align 4, !tbaa.struct !177
  %.sroa.7.16..sroa_idx823 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i, i64 1, i32 1
  store i32 %15, i32* %.sroa.7.16..sroa_idx823, align 4, !tbaa.struct !390
  %.sroa.8.16..sroa_idx824 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i, i64 1, i32 2
  store i32 %12, i32* %.sroa.8.16..sroa_idx824, align 4, !tbaa.struct !391
  %.sroa.9.16..sroa_idx825 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i, i64 1, i32 3
  store i32 0, i32* %.sroa.9.16..sroa_idx825, align 4, !tbaa.struct !392
  %.pre.i.1 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !176
  %.sroa.10.32..sroa_idx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i.1, i64 2, i32 0
  store i32 %126, i32* %.sroa.10.32..sroa_idx, align 4, !tbaa.struct !177
  %.sroa.12.32..sroa_idx826 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i.1, i64 2, i32 1
  store i32 %127, i32* %.sroa.12.32..sroa_idx826, align 4, !tbaa.struct !390
  %.sroa.13.32..sroa_idx827 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i.1, i64 2, i32 2
  store i32 %128, i32* %.sroa.13.32..sroa_idx827, align 4, !tbaa.struct !391
  %.sroa.14.32..sroa_idx828 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i.1, i64 2, i32 3
  store i32 0, i32* %.sroa.14.32..sroa_idx828, align 4, !tbaa.struct !392
  store i64 0, i64* %flags.i.i.i, align 8, !tbaa !308
  br label %after_bb

after_bb5:                                        ; preds = %after_bb, %_halide_buffer_is_bounds_query.exit489, %then_bb6
  %130 = load i8*, i8** %host.i450, align 8, !tbaa !172
  %cmp.i493 = icmp eq i8* %130, null
  br i1 %cmp.i493, label %_halide_buffer_is_bounds_query.exit497, label %_halide_buffer_is_bounds_query.exit523

_halide_buffer_is_bounds_query.exit497:           ; preds = %after_bb5
  %device.i494 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Output.buffer, i64 0, i32 0
  %131 = load i64, i64* %device.i494, align 8, !tbaa !174
  %cmp1.i495 = icmp eq i64 %131, 0
  br i1 %cmp1.i495, label %after_bb8, label %land.rhs.i522

then_bb6:                                         ; preds = %_halide_buffer_is_bounds_query.exit489
  %132 = bitcast %struct.halide_dimension_t** %dim.i432 to i8**
  %133 = load i8*, i8** %132, align 8, !tbaa !176
  store i8 0, i8* %code.i.i418, align 8, !tbaa !387
  %134 = bitcast %struct.halide_buffer_t* %IMG.buffer to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %134, i8 0, i64 24, i1 false)
  store i8 32, i8* %bits.i.i420, align 1, !tbaa !388
  store i16 1, i16* %lanes.i.i424, align 2, !tbaa !389
  store i32 3, i32* %dimensions.i431, align 4, !tbaa !175
  %.sroa.0829.0..sroa_cast = bitcast i8* %133 to i32*
  store i32 %80, i32* %.sroa.0829.0..sroa_cast, align 4, !tbaa.struct !177
  %.sroa.2830.0..sroa_idx = getelementptr inbounds i8, i8* %133, i64 4
  %.sroa.2830.0..sroa_cast = bitcast i8* %.sroa.2830.0..sroa_idx to i32*
  store i32 %111, i32* %.sroa.2830.0..sroa_cast, align 4, !tbaa.struct !390
  %.sroa.3831.0..sroa_idx = getelementptr inbounds i8, i8* %133, i64 8
  %.sroa.3831.0..sroa_cast = bitcast i8* %.sroa.3831.0..sroa_idx to i32*
  store i32 1, i32* %.sroa.3831.0..sroa_cast, align 4, !tbaa.struct !391
  %.sroa.4832.0..sroa_idx = getelementptr inbounds i8, i8* %133, i64 12
  %.sroa.4832.0..sroa_cast = bitcast i8* %.sroa.4832.0..sroa_idx to i32*
  store i32 0, i32* %.sroa.4832.0..sroa_cast, align 4, !tbaa.struct !392
  %.pre.i510 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i432, align 8, !tbaa !176
  %.sroa.5833.16..sroa_idx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i510, i64 1, i32 0
  store i32 %102, i32* %.sroa.5833.16..sroa_idx, align 4, !tbaa.struct !177
  %.sroa.7834.16..sroa_idx835 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i510, i64 1, i32 1
  store i32 %112, i32* %.sroa.7834.16..sroa_idx835, align 4, !tbaa.struct !390
  %.sroa.8836.16..sroa_idx837 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i510, i64 1, i32 2
  store i32 %111, i32* %.sroa.8836.16..sroa_idx837, align 4, !tbaa.struct !391
  %.sroa.9838.16..sroa_idx839 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i510, i64 1, i32 3
  store i32 0, i32* %.sroa.9838.16..sroa_idx839, align 4, !tbaa.struct !392
  %.pre.i510.1 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i432, align 8, !tbaa !176
  %.sroa.10840.32..sroa_idx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i510.1, i64 2, i32 0
  store i32 %110, i32* %.sroa.10840.32..sroa_idx, align 4, !tbaa.struct !177
  %.sroa.12841.32..sroa_idx842 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i510.1, i64 2, i32 1
  store i32 %IMG.extent.2.required, i32* %.sroa.12841.32..sroa_idx842, align 4, !tbaa.struct !390
  %.sroa.13843.32..sroa_idx844 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i510.1, i64 2, i32 2
  store i32 %IMG.stride.2.required, i32* %.sroa.13843.32..sroa_idx844, align 4, !tbaa.struct !391
  %.sroa.14845.32..sroa_idx846 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i510.1, i64 2, i32 3
  store i32 0, i32* %.sroa.14845.32..sroa_idx846, align 4, !tbaa.struct !392
  store i64 0, i64* %flags.i.i.i428, align 8, !tbaa !308
  br label %after_bb5

after_bb8:                                        ; preds = %_halide_buffer_is_bounds_query.exit497
  %135 = bitcast %struct.halide_dimension_t** %dim.i465 to i8**
  %136 = load i8*, i8** %135, align 8, !tbaa !176
  %137 = add nsw i32 %116, %46
  %138 = add nsw i32 %119, %49
  %Output.extent.2.required.s = sub i32 1, %119
  %139 = add i32 %Output.extent.2.required.s, %117
  store i8 0, i8* %code.i.i451, align 8, !tbaa !387
  %140 = bitcast %struct.halide_buffer_t* %Output.buffer to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %140, i8 0, i64 24, i1 false)
  store i8 32, i8* %bits.i.i453, align 1, !tbaa !388
  store i16 1, i16* %lanes.i.i457, align 2, !tbaa !389
  store i32 3, i32* %dimensions.i464, align 4, !tbaa !175
  %.sroa.0847.0..sroa_cast = bitcast i8* %136 to i32*
  store i32 %43, i32* %.sroa.0847.0..sroa_cast, align 4, !tbaa.struct !177
  %.sroa.2848.0..sroa_idx = getelementptr inbounds i8, i8* %136, i64 4
  %.sroa.2848.0..sroa_cast = bitcast i8* %.sroa.2848.0..sroa_idx to i32*
  store i32 %121, i32* %.sroa.2848.0..sroa_cast, align 4, !tbaa.struct !390
  %.sroa.3849.0..sroa_idx = getelementptr inbounds i8, i8* %136, i64 8
  %.sroa.3849.0..sroa_cast = bitcast i8* %.sroa.3849.0..sroa_idx to i32*
  store i32 1, i32* %.sroa.3849.0..sroa_cast, align 4, !tbaa.struct !391
  %.sroa.4850.0..sroa_idx = getelementptr inbounds i8, i8* %136, i64 12
  %.sroa.4850.0..sroa_cast = bitcast i8* %.sroa.4850.0..sroa_idx to i32*
  store i32 0, i32* %.sroa.4850.0..sroa_cast, align 4, !tbaa.struct !392
  %.pre.i548 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i465, align 8, !tbaa !176
  %.sroa.5851.16..sroa_idx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i548, i64 1, i32 0
  store i32 %137, i32* %.sroa.5851.16..sroa_idx, align 4, !tbaa.struct !177
  %.sroa.7852.16..sroa_idx853 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i548, i64 1, i32 1
  store i32 %122, i32* %.sroa.7852.16..sroa_idx853, align 4, !tbaa.struct !390
  %.sroa.8854.16..sroa_idx855 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i548, i64 1, i32 2
  store i32 %121, i32* %.sroa.8854.16..sroa_idx855, align 4, !tbaa.struct !391
  %.sroa.9856.16..sroa_idx857 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i548, i64 1, i32 3
  store i32 0, i32* %.sroa.9856.16..sroa_idx857, align 4, !tbaa.struct !392
  %.pre.i548.1 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i465, align 8, !tbaa !176
  %.sroa.10858.32..sroa_idx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i548.1, i64 2, i32 0
  store i32 %138, i32* %.sroa.10858.32..sroa_idx, align 4, !tbaa.struct !177
  %.sroa.12859.32..sroa_idx860 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i548.1, i64 2, i32 1
  store i32 %139, i32* %.sroa.12859.32..sroa_idx860, align 4, !tbaa.struct !390
  %.sroa.13861.32..sroa_idx862 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i548.1, i64 2, i32 2
  store i32 %Output.stride.2.required, i32* %.sroa.13861.32..sroa_idx862, align 4, !tbaa.struct !391
  %.sroa.14863.32..sroa_idx864 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i548.1, i64 2, i32 3
  store i32 0, i32* %.sroa.14863.32..sroa_idx864, align 4, !tbaa.struct !392
  store i64 0, i64* %flags.i.i.i461, align 8, !tbaa !308
  %.pr.pre = load i8*, i8** %host.i450, align 8, !tbaa !172
  %cmp.i519 = icmp eq i8* %.pr.pre, null
  br i1 %cmp.i519, label %land.rhs.i522, label %_halide_buffer_is_bounds_query.exit523

land.rhs.i522:                                    ; preds = %_halide_buffer_is_bounds_query.exit497, %after_bb8
  %141 = load i64, i64* %device.i494, align 8, !tbaa !174
  %cmp1.i521 = icmp eq i64 %141, 0
  br label %_halide_buffer_is_bounds_query.exit523

_halide_buffer_is_bounds_query.exit523:           ; preds = %after_bb5, %after_bb8, %land.rhs.i522
  %142 = phi i1 [ false, %after_bb8 ], [ %cmp1.i521, %land.rhs.i522 ], [ false, %after_bb5 ]
  %143 = load i8*, i8** %host.i, align 8, !tbaa !172
  %cmp.i525 = icmp eq i8* %143, null
  br i1 %cmp.i525, label %land.rhs.i528, label %_halide_buffer_is_bounds_query.exit529

land.rhs.i528:                                    ; preds = %_halide_buffer_is_bounds_query.exit523
  %device.i526 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Filter.buffer, i64 0, i32 0
  %144 = load i64, i64* %device.i526, align 8, !tbaa !174
  %cmp1.i527 = icmp eq i64 %144, 0
  br label %_halide_buffer_is_bounds_query.exit529

_halide_buffer_is_bounds_query.exit529:           ; preds = %_halide_buffer_is_bounds_query.exit523, %land.rhs.i528
  %145 = phi i1 [ false, %_halide_buffer_is_bounds_query.exit523 ], [ %cmp1.i527, %land.rhs.i528 ]
  %146 = load i8*, i8** %host.i417, align 8, !tbaa !172
  %cmp.i531 = icmp eq i8* %146, null
  br i1 %cmp.i531, label %land.rhs.i534, label %_halide_buffer_is_bounds_query.exit535

land.rhs.i534:                                    ; preds = %_halide_buffer_is_bounds_query.exit529
  %device.i532 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %IMG.buffer, i64 0, i32 0
  %147 = load i64, i64* %device.i532, align 8, !tbaa !174
  %cmp1.i533 = icmp eq i64 %147, 0
  br label %_halide_buffer_is_bounds_query.exit535

_halide_buffer_is_bounds_query.exit535:           ; preds = %_halide_buffer_is_bounds_query.exit529, %land.rhs.i534
  %148 = phi i1 [ false, %_halide_buffer_is_bounds_query.exit529 ], [ %cmp1.i533, %land.rhs.i534 ]
  %149 = or i1 %145, %148
  %150 = or i1 %142, %149
  br i1 %150, label %"assert succeeded81", label %then_bb12

then_bb12:                                        ; preds = %_halide_buffer_is_bounds_query.exit535
  %151 = icmp ne i32 %or6.i.i, 73728
  %152 = zext i1 %151 to i64
  %.not360 = icmp eq i32 %9, 3
  %.not361 = icmp eq i32 %or6.i.i427, 73728
  %.not362 = icmp eq i32 %25, 3
  %.not363 = icmp eq i32 %or6.i.i460, 73728
  %.not364 = icmp eq i32 %41, 3
  %.not365 = icmp eq i32 %11, 0
  %153 = lshr i32 %12, 24
  %154 = and i32 %153, 128
  %155 = zext i32 %154 to i64
  %.not366 = icmp eq i32 %14, 0
  %156 = lshr i32 %15, 22
  %157 = and i32 %156, 512
  %158 = zext i32 %157 to i64
  %t269 = add nsw i32 %a42, %49
  %159 = icmp sgt i32 %17, %t269
  %160 = add nsw i32 %t269, %Filter.extent.2.required.s
  %161 = add nsw i32 %18, %17
  %.not367 = icmp sge i32 %160, %161
  %162 = or i1 %159, %.not367
  %163 = lshr i32 %18, 20
  %164 = and i32 %163, 2048
  %165 = zext i32 %164 to i64
  %.not368 = icmp slt i32 %75, %b7
  %166 = lshr i32 %28, 18
  %167 = and i32 %166, 8192
  %168 = zext i32 %167 to i64
  %.not369 = icmp slt i32 %95, %b15
  %169 = lshr i32 %31, 16
  %170 = and i32 %169, 32768
  %171 = zext i32 %170 to i64
  %172 = icmp sgt i32 %106, %a21
  %173 = lshr i32 %34, 14
  %174 = and i32 %173, 131072
  %175 = zext i32 %174 to i64
  %176 = icmp sgt i32 %121, %44
  %177 = add i32 %114, %46
  %178 = add nsw i32 %47, %46
  %.not370 = icmp sge i32 %177, %178
  %179 = or i1 %115, %.not370
  %180 = lshr i32 %47, 11
  %181 = and i32 %180, 1048576
  %182 = zext i32 %181 to i64
  %183 = add i32 %117, %49
  %184 = add nsw i32 %50, %49
  %.not372 = icmp sge i32 %183, %184
  %185 = or i1 %118, %.not372
  %186 = select i1 %185, i64 2097152, i64 0
  %187 = lshr i32 %50, 9
  %188 = and i32 %187, 4194304
  %189 = zext i32 %188 to i64
  %.not374 = icmp eq i32 %13, 1
  %.not375 = icmp eq i32 %29, 1
  %.not376 = icmp eq i32 %45, 1
  %190 = insertelement <16 x i1> poison, i1 %.not360, i32 0
  %191 = insertelement <16 x i1> %190, i1 %.not365, i32 1
  %192 = insertelement <16 x i1> %191, i1 %.not374, i32 2
  %193 = insertelement <16 x i1> %192, i1 %.not366, i32 3
  %194 = insertelement <16 x i1> %193, i1 %.not362, i32 4
  %195 = insertelement <16 x i1> %194, i1 %.not361, i32 5
  %196 = insertelement <16 x i1> %195, i1 %.not375, i32 6
  %197 = insertelement <16 x i1> %196, i1 %172, i32 7
  %198 = insertelement <16 x i1> %197, i1 %.not364, i32 8
  %199 = insertelement <16 x i1> %198, i1 %.not363, i32 9
  %200 = insertelement <16 x i1> %199, i1 %.not376, i32 10
  %201 = insertelement <16 x i1> %200, i1 %176, i32 11
  %202 = insertelement <16 x i1> %201, i1 %.not368, i32 12
  %203 = insertelement <16 x i1> %202, i1 %179, i32 13
  %204 = insertelement <16 x i1> %203, i1 %162, i32 14
  %205 = insertelement <16 x i1> %204, i1 %.not369, i32 15
  %206 = select <16 x i1> %205, <16 x i64> <i64 -9223372036854775808, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 65536, i64 0, i64 0, i64 0, i64 262144, i64 0, i64 524288, i64 1024, i64 0>, <16 x i64> <i64 -9223372036854775806, i64 64, i64 8388608, i64 256, i64 8, i64 4, i64 16777216, i64 0, i64 32, i64 16, i64 33554432, i64 0, i64 4096, i64 0, i64 0, i64 16384>
  %207 = call i64 @llvm.vector.reduce.or.v16i64(<16 x i64> %206)
  %208 = or i64 %207, %186
  %op.extra944 = or i64 %208, %152
  %op.extra945 = or i64 %op.extra944, %155
  %op.extra946 = or i64 %op.extra945, %158
  %op.extra947 = or i64 %op.extra946, %165
  %op.extra948 = or i64 %op.extra947, %168
  %op.extra949 = or i64 %op.extra948, %171
  %op.extra950 = or i64 %op.extra949, %175
  %op.extra951 = or i64 %op.extra950, %182
  %op.extra952 = or i64 %op.extra951, %189
  %209 = tail call i64 @llvm.cttz.i64(i64 %op.extra952, i1 true), !range !393
  %210 = trunc i64 %209 to i32
  switch i32 %210, label %no_errors_bb [
    i32 0, label %assert_failed
    i32 1, label %assert_failed14
    i32 2, label %assert_failed15
    i32 3, label %assert_failed16
    i32 4, label %assert_failed17
    i32 5, label %assert_failed18
    i32 6, label %assert_failed19
    i32 7, label %assert_failed20
    i32 8, label %assert_failed21
    i32 9, label %assert_failed22
    i32 10, label %assert_failed23
    i32 11, label %assert_failed24
    i32 12, label %assert_failed25
    i32 13, label %assert_failed26
    i32 14, label %assert_failed27
    i32 15, label %assert_failed28
    i32 16, label %assert_failed29
    i32 17, label %assert_failed30
    i32 18, label %assert_failed31
    i32 19, label %assert_failed32
    i32 20, label %assert_failed33
    i32 21, label %assert_failed34
    i32 22, label %assert_failed35
    i32 23, label %assert_failed36
    i32 24, label %assert_failed37
    i32 25, label %assert_failed38
  ], !prof !394

no_errors_bb:                                     ; preds = %then_bb12
  %211 = sext i32 %15 to i64
  %212 = sext i32 %12 to i64
  %Filter.total_extent.1 = mul nsw i64 %211, %212
  %213 = sext i32 %18 to i64
  %Filter.total_extent.2 = mul nsw i64 %Filter.total_extent.1, %213
  %214 = sext i32 %31 to i64
  %215 = sext i32 %28 to i64
  %IMG.total_extent.1 = mul nsw i64 %214, %215
  %216 = sext i32 %34 to i64
  %IMG.total_extent.2 = mul nsw i64 %IMG.total_extent.1, %216
  %217 = sext i32 %47 to i64
  %218 = sext i32 %44 to i64
  %Output.total_extent.1 = mul nsw i64 %217, %218
  %219 = sext i32 %50 to i64
  %Output.total_extent.2 = mul nsw i64 %Output.total_extent.1, %219
  %Filter.extent.0.lobit = lshr i32 %12, 31
  %220 = zext i32 %Filter.extent.0.lobit to i64
  %221 = sext i32 %16 to i64
  %x0 = mul nsw i64 %221, %211
  %222 = tail call i64 @llvm.abs.i64(i64 %x0, i1 true)
  %223 = icmp ugt i64 %222, 2147483647
  %224 = select i1 %223, i64 2, i64 0
  %225 = icmp sgt i64 %Filter.total_extent.1, 2147483647
  %226 = select i1 %225, i64 4, i64 0
  %227 = sext i32 %19 to i64
  %x1 = mul nsw i64 %227, %213
  %228 = tail call i64 @llvm.abs.i64(i64 %x1, i1 true)
  %229 = icmp ugt i64 %228, 2147483647
  %230 = select i1 %229, i64 8, i64 0
  %231 = icmp sgt i64 %Filter.total_extent.2, 2147483647
  %232 = select i1 %231, i64 16, i64 0
  %233 = lshr i32 %28, 26
  %234 = and i32 %233, 32
  %235 = zext i32 %234 to i64
  %236 = sext i32 %32 to i64
  %x2 = mul nsw i64 %236, %214
  %237 = tail call i64 @llvm.abs.i64(i64 %x2, i1 true)
  %238 = icmp ugt i64 %237, 2147483647
  %239 = select i1 %238, i64 64, i64 0
  %240 = icmp sgt i64 %IMG.total_extent.1, 2147483647
  %241 = select i1 %240, i64 128, i64 0
  %242 = sext i32 %35 to i64
  %x3 = mul nsw i64 %242, %216
  %243 = tail call i64 @llvm.abs.i64(i64 %x3, i1 true)
  %244 = icmp ugt i64 %243, 2147483647
  %245 = select i1 %244, i64 256, i64 0
  %246 = icmp sgt i64 %IMG.total_extent.2, 2147483647
  %247 = select i1 %246, i64 512, i64 0
  %248 = lshr i32 %44, 21
  %249 = and i32 %248, 1024
  %250 = zext i32 %249 to i64
  %251 = sext i32 %48 to i64
  %x4 = mul nsw i64 %251, %217
  %252 = tail call i64 @llvm.abs.i64(i64 %x4, i1 true)
  %253 = icmp ugt i64 %252, 2147483647
  %254 = select i1 %253, i64 2048, i64 0
  %255 = icmp sgt i64 %Output.total_extent.1, 2147483647
  %256 = select i1 %255, i64 4096, i64 0
  %257 = sext i32 %51 to i64
  %x5 = mul nsw i64 %257, %219
  %258 = tail call i64 @llvm.abs.i64(i64 %x5, i1 true)
  %259 = icmp ugt i64 %258, 2147483647
  %260 = select i1 %259, i64 8192, i64 0
  %261 = icmp sgt i64 %Output.total_extent.2, 2147483647
  %262 = select i1 %261, i64 16384, i64 0
  %and.i.i.i = shl i64 %8, 14
  %263 = and i64 %and.i.i.i, 32768
  %and.i.i.i429 = shl i64 %24, 15
  %264 = and i64 %and.i.i.i429, 65536
  %and.i.i.i462 = shl i64 %40, 16
  %265 = and i64 %and.i.i.i462, 131072
  %266 = icmp eq i8* %20, null
  %267 = select i1 %266, i64 524288, i64 0
  %268 = icmp eq i8* %36, null
  %269 = select i1 %268, i64 1048576, i64 0
  %270 = select i1 %cmp.i, i64 -9223372036854513664, i64 -9223372036854775808
  %271 = or i64 %270, %263
  %272 = or i64 %271, %220
  %273 = or i64 %272, %226
  %274 = or i64 %273, %224
  %275 = or i64 %274, %232
  %276 = or i64 %275, %267
  %277 = or i64 %276, %230
  %278 = or i64 %277, %264
  %279 = or i64 %278, %235
  %280 = or i64 %279, %241
  %281 = or i64 %280, %239
  %282 = or i64 %281, %247
  %283 = or i64 %282, %269
  %284 = or i64 %283, %245
  %285 = or i64 %284, %265
  %286 = or i64 %285, %250
  %287 = or i64 %286, %256
  %288 = or i64 %287, %254
  %289 = or i64 %288, %262
  %290 = or i64 %289, %260
  %291 = tail call i64 @llvm.cttz.i64(i64 %290, i1 true), !range !393
  %292 = trunc i64 %291 to i32
  switch i32 %292, label %"produce Output" [
    i32 0, label %assert_failed40
    i32 1, label %assert_failed41
    i32 2, label %assert_failed42
    i32 3, label %assert_failed43
    i32 4, label %assert_failed44
    i32 5, label %assert_failed45
    i32 6, label %assert_failed46
    i32 7, label %assert_failed47
    i32 8, label %assert_failed48
    i32 9, label %assert_failed49
    i32 10, label %assert_failed50
    i32 11, label %assert_failed51
    i32 12, label %assert_failed52
    i32 13, label %assert_failed53
    i32 14, label %assert_failed54
    i32 15, label %assert_failed55
    i32 16, label %assert_failed56
    i32 17, label %assert_failed57
    i32 18, label %assert_failed58
    i32 19, label %assert_failed59
    i32 20, label %assert_failed60
  ], !prof !395

assert_failed:                                    ; preds = %then_bb12
  %293 = tail call i32 @halide_error_bad_type(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0), i32 %or6.i.i, i32 73728) #10
  ret i32 %293

assert_failed14:                                  ; preds = %then_bb12
  %294 = tail call i32 @halide_error_bad_dimensions(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0), i32 %9, i32 3) #10
  ret i32 %294

assert_failed15:                                  ; preds = %then_bb12
  %295 = tail call i32 @halide_error_bad_type(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0), i32 %or6.i.i427, i32 73728) #10
  ret i32 %295

assert_failed16:                                  ; preds = %then_bb12
  %296 = tail call i32 @halide_error_bad_dimensions(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0), i32 %25, i32 3) #10
  ret i32 %296

assert_failed17:                                  ; preds = %then_bb12
  %297 = tail call i32 @halide_error_bad_type(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0), i32 %or6.i.i460, i32 73728) #10
  ret i32 %297

assert_failed18:                                  ; preds = %then_bb12
  %298 = tail call i32 @halide_error_bad_dimensions(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0), i32 %41, i32 3) #10
  ret i32 %298

assert_failed19:                                  ; preds = %then_bb12
  %299 = add i32 %12, -1
  %300 = add i32 %299, %11
  %301 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0), i32 0, i32 0, i32 %299, i32 %11, i32 %300) #10
  ret i32 %301

assert_failed20:                                  ; preds = %then_bb12
  %302 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0), i32 0, i32 %12) #10
  ret i32 %302

assert_failed21:                                  ; preds = %then_bb12
  %303 = add i32 %15, -1
  %304 = add i32 %303, %14
  %305 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0), i32 1, i32 0, i32 %303, i32 %14, i32 %304) #10
  ret i32 %305

assert_failed22:                                  ; preds = %then_bb12
  %306 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0), i32 1, i32 %15) #10
  ret i32 %306

assert_failed23:                                  ; preds = %then_bb12
  %307 = add nsw i32 %161, -1
  %308 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0), i32 2, i32 %t269, i32 %160, i32 %17, i32 %307) #10
  ret i32 %308

assert_failed24:                                  ; preds = %then_bb12
  %309 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0), i32 2, i32 %18) #10
  ret i32 %309

assert_failed25:                                  ; preds = %then_bb12
  %310 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0), i32 0, i32 %80, i32 %75, i32 %27, i32 %b3) #10
  ret i32 %310

assert_failed26:                                  ; preds = %then_bb12
  %311 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0), i32 0, i32 %28) #10
  ret i32 %311

assert_failed27:                                  ; preds = %then_bb12
  %312 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0), i32 1, i32 %102, i32 %95, i32 %30, i32 %b13) #10
  ret i32 %312

assert_failed28:                                  ; preds = %then_bb12
  %313 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0), i32 1, i32 %31) #10
  ret i32 %313

assert_failed29:                                  ; preds = %then_bb12
  %314 = add nsw i32 %106, -1
  %315 = add nsw i32 %a21, -1
  %316 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0), i32 2, i32 %110, i32 %314, i32 %33, i32 %315) #10
  ret i32 %316

assert_failed30:                                  ; preds = %then_bb12
  %317 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0), i32 2, i32 %34) #10
  ret i32 %317

assert_failed31:                                  ; preds = %then_bb12
  %318 = add i32 %43, -1
  %319 = add i32 %318, %121
  %320 = add i32 %318, %44
  %321 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0), i32 0, i32 %43, i32 %319, i32 %43, i32 %320) #10
  ret i32 %321

assert_failed32:                                  ; preds = %then_bb12
  %322 = add nsw i32 %116, %46
  %323 = add nsw i32 %178, -1
  %324 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0), i32 1, i32 %322, i32 %177, i32 %46, i32 %323) #10
  ret i32 %324

assert_failed33:                                  ; preds = %then_bb12
  %325 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0), i32 1, i32 %47) #10
  ret i32 %325

assert_failed34:                                  ; preds = %then_bb12
  %326 = add nsw i32 %119, %49
  %327 = add nsw i32 %184, -1
  %328 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0), i32 2, i32 %326, i32 %183, i32 %49, i32 %327) #10
  ret i32 %328

assert_failed35:                                  ; preds = %then_bb12
  %329 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0), i32 2, i32 %50) #10
  ret i32 %329

assert_failed36:                                  ; preds = %then_bb12
  %330 = tail call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.207, i64 0, i64 0), i32 %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.208, i64 0, i64 0), i32 1) #10
  ret i32 %330

assert_failed37:                                  ; preds = %then_bb12
  %331 = tail call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.209, i64 0, i64 0), i32 %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.208, i64 0, i64 0), i32 1) #10
  ret i32 %331

assert_failed38:                                  ; preds = %then_bb12
  %332 = tail call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.210, i64 0, i64 0), i32 %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.208, i64 0, i64 0), i32 1) #10
  ret i32 %332

assert_failed40:                                  ; preds = %no_errors_bb
  %333 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0), i64 %212, i64 2147483647) #10
  ret i32 %333

assert_failed41:                                  ; preds = %no_errors_bb
  %334 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0), i64 %222, i64 2147483647) #10
  ret i32 %334

assert_failed42:                                  ; preds = %no_errors_bb
  %335 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0), i64 %Filter.total_extent.1, i64 2147483647) #10
  ret i32 %335

assert_failed43:                                  ; preds = %no_errors_bb
  %336 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0), i64 %228, i64 2147483647) #10
  ret i32 %336

assert_failed44:                                  ; preds = %no_errors_bb
  %337 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0), i64 %Filter.total_extent.2, i64 2147483647) #10
  ret i32 %337

assert_failed45:                                  ; preds = %no_errors_bb
  %338 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0), i64 %215, i64 2147483647) #10
  ret i32 %338

assert_failed46:                                  ; preds = %no_errors_bb
  %339 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0), i64 %237, i64 2147483647) #10
  ret i32 %339

assert_failed47:                                  ; preds = %no_errors_bb
  %340 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0), i64 %IMG.total_extent.1, i64 2147483647) #10
  ret i32 %340

assert_failed48:                                  ; preds = %no_errors_bb
  %341 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0), i64 %243, i64 2147483647) #10
  ret i32 %341

assert_failed49:                                  ; preds = %no_errors_bb
  %342 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0), i64 %IMG.total_extent.2, i64 2147483647) #10
  ret i32 %342

assert_failed50:                                  ; preds = %no_errors_bb
  %343 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i64 0, i64 0), i64 %218, i64 2147483647) #10
  ret i32 %343

assert_failed51:                                  ; preds = %no_errors_bb
  %344 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i64 0, i64 0), i64 %252, i64 2147483647) #10
  ret i32 %344

assert_failed52:                                  ; preds = %no_errors_bb
  %345 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i64 0, i64 0), i64 %Output.total_extent.1, i64 2147483647) #10
  ret i32 %345

assert_failed53:                                  ; preds = %no_errors_bb
  %346 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i64 0, i64 0), i64 %258, i64 2147483647) #10
  ret i32 %346

assert_failed54:                                  ; preds = %no_errors_bb
  %347 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i64 0, i64 0), i64 %Output.total_extent.2, i64 2147483647) #10
  ret i32 %347

assert_failed55:                                  ; preds = %no_errors_bb
  %348 = tail call i32 @halide_error_device_dirty_with_no_device_support(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0)) #10
  ret i32 %348

assert_failed56:                                  ; preds = %no_errors_bb
  %349 = tail call i32 @halide_error_device_dirty_with_no_device_support(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0)) #10
  ret i32 %349

assert_failed57:                                  ; preds = %no_errors_bb
  %350 = tail call i32 @halide_error_device_dirty_with_no_device_support(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0)) #10
  ret i32 %350

assert_failed58:                                  ; preds = %no_errors_bb
  %351 = tail call i32 @halide_error_host_is_null(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0)) #10
  ret i32 %351

assert_failed59:                                  ; preds = %no_errors_bb
  %352 = tail call i32 @halide_error_host_is_null(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0)) #10
  ret i32 %352

assert_failed60:                                  ; preds = %no_errors_bb
  %353 = tail call i32 @halide_error_host_is_null(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0)) #10
  ret i32 %353

"produce Output":                                 ; preds = %no_errors_bb
  %354 = mul i32 %51, %49
  %355 = mul i32 %48, %46
  %356 = add i32 %354, %355
  %357 = sub i32 0, %356
  %358 = icmp slt i32 %50, 1
  %359 = icmp slt i32 %47, 1
  %or.cond.not = or i1 %358, %359
  %t258.not = xor i1 %t258, true
  %brmerge = or i1 %or.cond.not, %t258.not
  br i1 %brmerge, label %"end for Output.s0.c_out.rebased", label %"for Output.s0.c_out.rebased.us.us.preheader", !prof !396

"for Output.s0.c_out.rebased.us.us.preheader":    ; preds = %"produce Output"
  %360 = shl nsw i64 %251, 2
  %361 = zext i32 %44 to i64
  %362 = shl nuw nsw i64 %361, 2
  %363 = zext i32 %50 to i64
  %364 = add i32 %47, -1
  %xtraiter = and i32 %47, 7
  %365 = icmp ult i32 %364, 7
  %unroll_iter = and i32 %47, -8
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  br label %"for Output.s0.c_out.rebased.us.us"

"for Output.s0.c_out.rebased.us.us":              ; preds = %"for Output.s0.c_out.rebased.us.us.preheader", %"end for Output.s0.y.rebased.loopexit.split.us.us.us"
  %indvars.iv = phi i64 [ 0, %"for Output.s0.c_out.rebased.us.us.preheader" ], [ %indvars.iv.next, %"end for Output.s0.y.rebased.loopexit.split.us.us.us" ]
  %366 = trunc i64 %indvars.iv to i32
  %367 = mul i32 %51, %366
  %368 = sext i32 %367 to i64
  %369 = shl nsw i64 %368, 2
  br i1 %365, label %"end for Output.s0.y.rebased.loopexit.split.us.us.us.unr-lcssa", label %"for Output.s0.y.rebased.us.us.us"

"for Output.s0.y.rebased.us.us.us":               ; preds = %"for Output.s0.c_out.rebased.us.us", %"for Output.s0.y.rebased.us.us.us"
  %indvar = phi i64 [ %indvar.next.7, %"for Output.s0.y.rebased.us.us.us" ], [ 0, %"for Output.s0.c_out.rebased.us.us" ]
  %niter = phi i32 [ %niter.nsub.7, %"for Output.s0.y.rebased.us.us.us" ], [ %unroll_iter, %"for Output.s0.c_out.rebased.us.us" ]
  %370 = mul i64 %360, %indvar
  %371 = add i64 %369, %370
  %scevgep = getelementptr i8, i8* %36, i64 %371
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep, i8 0, i64 %362, i1 false)
  %indvar.next = or i64 %indvar, 1
  %372 = mul i64 %360, %indvar.next
  %373 = add i64 %369, %372
  %scevgep.1 = getelementptr i8, i8* %36, i64 %373
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep.1, i8 0, i64 %362, i1 false)
  %indvar.next.1 = or i64 %indvar, 2
  %374 = mul i64 %360, %indvar.next.1
  %375 = add i64 %369, %374
  %scevgep.2 = getelementptr i8, i8* %36, i64 %375
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep.2, i8 0, i64 %362, i1 false)
  %indvar.next.2 = or i64 %indvar, 3
  %376 = mul i64 %360, %indvar.next.2
  %377 = add i64 %369, %376
  %scevgep.3 = getelementptr i8, i8* %36, i64 %377
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep.3, i8 0, i64 %362, i1 false)
  %indvar.next.3 = or i64 %indvar, 4
  %378 = mul i64 %360, %indvar.next.3
  %379 = add i64 %369, %378
  %scevgep.4 = getelementptr i8, i8* %36, i64 %379
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep.4, i8 0, i64 %362, i1 false)
  %indvar.next.4 = or i64 %indvar, 5
  %380 = mul i64 %360, %indvar.next.4
  %381 = add i64 %369, %380
  %scevgep.5 = getelementptr i8, i8* %36, i64 %381
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep.5, i8 0, i64 %362, i1 false)
  %indvar.next.5 = or i64 %indvar, 6
  %382 = mul i64 %360, %indvar.next.5
  %383 = add i64 %369, %382
  %scevgep.6 = getelementptr i8, i8* %36, i64 %383
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep.6, i8 0, i64 %362, i1 false)
  %indvar.next.6 = or i64 %indvar, 7
  %384 = mul i64 %360, %indvar.next.6
  %385 = add i64 %369, %384
  %scevgep.7 = getelementptr i8, i8* %36, i64 %385
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep.7, i8 0, i64 %362, i1 false)
  %indvar.next.7 = add nuw nsw i64 %indvar, 8
  %niter.nsub.7 = add i32 %niter, -8
  %niter.ncmp.7 = icmp eq i32 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %"end for Output.s0.y.rebased.loopexit.split.us.us.us.unr-lcssa", label %"for Output.s0.y.rebased.us.us.us"

"end for Output.s0.y.rebased.loopexit.split.us.us.us.unr-lcssa": ; preds = %"for Output.s0.y.rebased.us.us.us", %"for Output.s0.c_out.rebased.us.us"
  %indvar.unr = phi i64 [ 0, %"for Output.s0.c_out.rebased.us.us" ], [ %indvar.next.7, %"for Output.s0.y.rebased.us.us.us" ]
  br i1 %lcmp.mod.not, label %"end for Output.s0.y.rebased.loopexit.split.us.us.us", label %"for Output.s0.y.rebased.us.us.us.epil"

"for Output.s0.y.rebased.us.us.us.epil":          ; preds = %"end for Output.s0.y.rebased.loopexit.split.us.us.us.unr-lcssa", %"for Output.s0.y.rebased.us.us.us.epil"
  %indvar.epil = phi i64 [ %indvar.next.epil, %"for Output.s0.y.rebased.us.us.us.epil" ], [ %indvar.unr, %"end for Output.s0.y.rebased.loopexit.split.us.us.us.unr-lcssa" ]
  %epil.iter = phi i32 [ %epil.iter.sub, %"for Output.s0.y.rebased.us.us.us.epil" ], [ %xtraiter, %"end for Output.s0.y.rebased.loopexit.split.us.us.us.unr-lcssa" ]
  %386 = mul i64 %360, %indvar.epil
  %387 = add i64 %369, %386
  %scevgep.epil = getelementptr i8, i8* %36, i64 %387
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep.epil, i8 0, i64 %362, i1 false)
  %indvar.next.epil = add nuw nsw i64 %indvar.epil, 1
  %epil.iter.sub = add i32 %epil.iter, -1
  %epil.iter.cmp.not = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp.not, label %"end for Output.s0.y.rebased.loopexit.split.us.us.us", label %"for Output.s0.y.rebased.us.us.us.epil", !llvm.loop !397

"end for Output.s0.y.rebased.loopexit.split.us.us.us": ; preds = %"for Output.s0.y.rebased.us.us.us.epil", %"end for Output.s0.y.rebased.loopexit.split.us.us.us.unr-lcssa"
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %.not400.us.us = icmp eq i64 %indvars.iv.next, %363
  br i1 %.not400.us.us, label %"end for Output.s0.c_out.rebased", label %"for Output.s0.c_out.rebased.us.us"

"end for Output.s0.c_out.rebased":                ; preds = %"end for Output.s0.y.rebased.loopexit.split.us.us.us", %"produce Output"
  %388 = icmp sgt i32 %33, 0
  %a43 = select i1 %388, i32 %33, i32 0
  %389 = icmp sgt i32 %34, %a43
  %b47 = select i1 %389, i32 %a43, i32 %34
  %390 = icmp sgt i32 %a18, %b47
  %t227 = select i1 %390, i32 %a18, i32 %b47
  %391 = add nsw i32 %52, 63
  %t225 = ashr i32 %391, 6
  %392 = mul nsw i32 %32, %30
  %t231 = add nsw i32 %392, %27
  %393 = icmp sgt i32 %52, 0
  br i1 %393, label %"for Output.s1.x.x.x.x.preheader", label %"assert succeeded81", !prof !398

"for Output.s1.x.x.x.x.preheader":                ; preds = %"end for Output.s0.c_out.rebased"
  %t230 = sub nsw i32 %49, %17
  %394 = icmp sgt i32 %b47, 0
  %b50 = add nsw i32 %34, -1
  %395 = icmp sgt i32 %15, 0
  %396 = icmp sgt i32 %12, 0
  %t294 = select i1 %54, <64 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <64 x i32> zeroinitializer
  %397 = insertelement <64 x i32> undef, i32 %t254, i32 0
  %398 = shufflevector <64 x i32> %397, <64 x i32> undef, <64 x i32> zeroinitializer
  %399 = sub nsw <64 x i32> %398, %t294
  %400 = xor <64 x i32> %t294, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %401 = or <64 x i32> %398, %t294
  %t300 = select i1 %81, <64 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <64 x i32> zeroinitializer
  %402 = insertelement <64 x i32> undef, i32 %44, i32 0
  %403 = shufflevector <64 x i32> %402, <64 x i32> undef, <64 x i32> zeroinitializer
  %404 = sub nsw <64 x i32> %403, %t300
  %405 = insertelement <64 x i32> undef, i32 %88, i32 0
  %406 = shufflevector <64 x i32> %405, <64 x i32> undef, <64 x i32> zeroinitializer
  %407 = xor <64 x i32> %t300, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %408 = or <64 x i32> %403, %t300
  %409 = xor i32 %b26.lobit, %44
  %410 = add nsw i32 %409, %87
  %411 = insertelement <64 x i32> undef, i32 %410, i32 0
  %412 = shufflevector <64 x i32> %411, <64 x i32> undef, <64 x i32> zeroinitializer
  %413 = insertelement <64 x i32> undef, i32 %46, i32 0
  %414 = shufflevector <64 x i32> %413, <64 x i32> undef, <64 x i32> zeroinitializer
  %415 = insertelement <64 x i32> undef, i32 %48, i32 0
  %416 = shufflevector <64 x i32> %415, <64 x i32> undef, <64 x i32> zeroinitializer
  %417 = insertelement <64 x i32> undef, i32 %49, i32 0
  %418 = shufflevector <64 x i32> %417, <64 x i32> undef, <64 x i32> zeroinitializer
  %419 = insertelement <64 x i32> undef, i32 %51, i32 0
  %420 = shufflevector <64 x i32> %419, <64 x i32> undef, <64 x i32> zeroinitializer
  %421 = insertelement <64 x i32> undef, i32 %357, i32 0
  %422 = shufflevector <64 x i32> %421, <64 x i32> undef, <64 x i32> zeroinitializer
  %423 = bitcast i8* %36 to i32*
  %424 = insertelement <64 x i32> undef, i32 %t230, i32 0
  %425 = shufflevector <64 x i32> %424, <64 x i32> undef, <64 x i32> zeroinitializer
  %426 = insertelement <64 x i32> undef, i32 %19, i32 0
  %427 = shufflevector <64 x i32> %426, <64 x i32> undef, <64 x i32> zeroinitializer
  %428 = bitcast i8* %4 to i32*
  %429 = insertelement <64 x i32> undef, i32 %b3, i32 0
  %430 = shufflevector <64 x i32> %429, <64 x i32> undef, <16 x i32> zeroinitializer
  %431 = insertelement <64 x i32> undef, i32 %27, i32 0
  %432 = shufflevector <64 x i32> %431, <64 x i32> undef, <16 x i32> zeroinitializer
  %433 = insertelement <64 x i32> undef, i32 %b13, i32 0
  %434 = shufflevector <64 x i32> %433, <64 x i32> undef, <16 x i32> zeroinitializer
  %435 = insertelement <64 x i32> undef, i32 %30, i32 0
  %436 = shufflevector <64 x i32> %435, <64 x i32> undef, <16 x i32> zeroinitializer
  %437 = insertelement <64 x i32> undef, i32 %32, i32 0
  %438 = shufflevector <64 x i32> %437, <64 x i32> undef, <64 x i32> zeroinitializer
  %439 = bitcast i8* %20 to i32*
  %t244 = sub i32 %b47, %33
  %t242 = sub nsw i32 %t227, %b47
  %440 = icmp sgt i32 %t242, 0
  %t250 = sub nsw i32 %t227, %33
  %t248 = sub nsw i32 %34, %t227
  %441 = icmp sgt i32 %t248, 0
  %brmerge930.demorgan = and i1 %395, %396
  br label %"for Output.s1.x.x.x.x"

"for Output.s1.x.x.x.x":                          ; preds = %"for Output.s1.x.x.x.x.preheader", %"end for Output.s1.r10$z.rebased68"
  %Output.s1.x.x.x.x = phi i32 [ %3796, %"end for Output.s1.r10$z.rebased68" ], [ 0, %"for Output.s1.x.x.x.x.preheader" ]
  %t238 = shl nsw i32 %Output.s1.x.x.x.x, 6
  br i1 %394, label %"for Output.s1.r10$z.preheader", label %"end for Output.s1.r10$z", !prof !398

"for Output.s1.r10$z.preheader":                  ; preds = %"for Output.s1.x.x.x.x"
  %442 = insertelement <64 x i32> undef, i32 %t238, i32 0
  %443 = shufflevector <64 x i32> %442, <64 x i32> undef, <64 x i32> zeroinitializer
  %444 = or <64 x i32> %443, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  br i1 %395, label %"for Output.s1.r10$z.us", label %"end for Output.s1.r10$z.rebased", !prof !398

"for Output.s1.r10$z.us":                         ; preds = %"for Output.s1.r10$z.preheader", %"end for Output.s1.r10$y.loopexit.us"
  %"Output.s1.r10$z.us" = phi i32 [ %451, %"end for Output.s1.r10$y.loopexit.us" ], [ 0, %"for Output.s1.r10$z.preheader" ]
  %a48.us = sub nsw i32 %"Output.s1.r10$z.us", %33
  %445 = icmp sgt i32 %b50, %a48.us
  %a47.us = select i1 %445, i32 %a48.us, i32 %b50
  %446 = icmp sgt i32 %a47.us, 0
  %447 = select i1 %446, i32 %a47.us, i32 0
  %448 = mul nsw i32 %447, %35
  %t239.us = sub nsw i32 %448, %t231
  %449 = insertelement <64 x i32> undef, i32 %t239.us, i32 0
  %450 = shufflevector <64 x i32> %449, <64 x i32> undef, <64 x i32> zeroinitializer
  br i1 %396, label %"for Output.s1.r10$y.preheader.split.us.us", label %"end for Output.s1.r10$y.loopexit.us", !prof !398

"end for Output.s1.r10$y.loopexit.us":            ; preds = %"end for Output.s1.r10$x.loopexit.us.us", %"for Output.s1.r10$z.us"
  %451 = add nuw nsw i32 %"Output.s1.r10$z.us", 1
  %.not393.us = icmp eq i32 %451, %b47
  br i1 %.not393.us, label %"end for Output.s1.r10$z", label %"for Output.s1.r10$z.us"

"for Output.s1.r10$y.preheader.split.us.us":      ; preds = %"for Output.s1.r10$z.us"
  %452 = sdiv <64 x i32> %444, %399
  %t177.us.us = and <64 x i32> %452, %400
  %453 = srem <64 x i32> %444, %401
  %t178.us.us = and <64 x i32> %453, %400
  %454 = shufflevector <64 x i32> %t178.us.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %455 = shufflevector <64 x i32> %t178.us.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %456 = shufflevector <64 x i32> %t178.us.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %457 = shufflevector <64 x i32> %t178.us.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %.lobit395.us.us = ashr <16 x i32> %454, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit396.us.us = ashr <16 x i32> %455, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit397.us.us = ashr <16 x i32> %456, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit398.us.us = ashr <16 x i32> %457, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %458 = shufflevector <16 x i32> %.lobit395.us.us, <16 x i32> %.lobit396.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %459 = shufflevector <16 x i32> %.lobit397.us.us, <16 x i32> %.lobit398.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %t299.us.us = shufflevector <32 x i32> %458, <32 x i32> %459, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %460 = sub nsw <64 x i32> %t178.us.us, %t299.us.us
  %461 = sdiv <64 x i32> %460, %404
  %462 = and <64 x i32> %t299.us.us, %406
  %463 = add nsw <64 x i32> %462, %461
  %t179.us.us = and <64 x i32> %463, %407
  %464 = srem <64 x i32> %460, %408
  %465 = and <64 x i32> %t299.us.us, %412
  %466 = add nsw <64 x i32> %465, %464
  %t180.us.us = and <64 x i32> %466, %407
  %467 = add nsw <64 x i32> %t179.us.us, %414
  %468 = mul nsw <64 x i32> %467, %416
  %469 = add nsw <64 x i32> %t177.us.us, %418
  %470 = mul nsw <64 x i32> %469, %420
  %471 = add nsw <64 x i32> %470, %422
  %472 = add <64 x i32> %471, %t180.us.us
  %t181.us.us = add <64 x i32> %472, %468
  %473 = extractelement <64 x i32> %t181.us.us, i32 0
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds i32, i32* %423, i64 %474
  %476 = extractelement <64 x i32> %t181.us.us, i32 1
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds i32, i32* %423, i64 %477
  %479 = extractelement <64 x i32> %t181.us.us, i32 2
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds i32, i32* %423, i64 %480
  %482 = extractelement <64 x i32> %t181.us.us, i32 3
  %483 = sext i32 %482 to i64
  %484 = getelementptr inbounds i32, i32* %423, i64 %483
  %485 = extractelement <64 x i32> %t181.us.us, i32 4
  %486 = sext i32 %485 to i64
  %487 = getelementptr inbounds i32, i32* %423, i64 %486
  %488 = extractelement <64 x i32> %t181.us.us, i32 5
  %489 = sext i32 %488 to i64
  %490 = getelementptr inbounds i32, i32* %423, i64 %489
  %491 = extractelement <64 x i32> %t181.us.us, i32 6
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds i32, i32* %423, i64 %492
  %494 = extractelement <64 x i32> %t181.us.us, i32 7
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds i32, i32* %423, i64 %495
  %497 = extractelement <64 x i32> %t181.us.us, i32 8
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds i32, i32* %423, i64 %498
  %500 = extractelement <64 x i32> %t181.us.us, i32 9
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds i32, i32* %423, i64 %501
  %503 = extractelement <64 x i32> %t181.us.us, i32 10
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds i32, i32* %423, i64 %504
  %506 = extractelement <64 x i32> %t181.us.us, i32 11
  %507 = sext i32 %506 to i64
  %508 = getelementptr inbounds i32, i32* %423, i64 %507
  %509 = extractelement <64 x i32> %t181.us.us, i32 12
  %510 = sext i32 %509 to i64
  %511 = getelementptr inbounds i32, i32* %423, i64 %510
  %512 = extractelement <64 x i32> %t181.us.us, i32 13
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds i32, i32* %423, i64 %513
  %515 = extractelement <64 x i32> %t181.us.us, i32 14
  %516 = sext i32 %515 to i64
  %517 = getelementptr inbounds i32, i32* %423, i64 %516
  %518 = extractelement <64 x i32> %t181.us.us, i32 15
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds i32, i32* %423, i64 %519
  %521 = extractelement <64 x i32> %t181.us.us, i32 16
  %522 = sext i32 %521 to i64
  %523 = getelementptr inbounds i32, i32* %423, i64 %522
  %524 = extractelement <64 x i32> %t181.us.us, i32 17
  %525 = sext i32 %524 to i64
  %526 = getelementptr inbounds i32, i32* %423, i64 %525
  %527 = extractelement <64 x i32> %t181.us.us, i32 18
  %528 = sext i32 %527 to i64
  %529 = getelementptr inbounds i32, i32* %423, i64 %528
  %530 = extractelement <64 x i32> %t181.us.us, i32 19
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds i32, i32* %423, i64 %531
  %533 = extractelement <64 x i32> %t181.us.us, i32 20
  %534 = sext i32 %533 to i64
  %535 = getelementptr inbounds i32, i32* %423, i64 %534
  %536 = extractelement <64 x i32> %t181.us.us, i32 21
  %537 = sext i32 %536 to i64
  %538 = getelementptr inbounds i32, i32* %423, i64 %537
  %539 = extractelement <64 x i32> %t181.us.us, i32 22
  %540 = sext i32 %539 to i64
  %541 = getelementptr inbounds i32, i32* %423, i64 %540
  %542 = extractelement <64 x i32> %t181.us.us, i32 23
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds i32, i32* %423, i64 %543
  %545 = extractelement <64 x i32> %t181.us.us, i32 24
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds i32, i32* %423, i64 %546
  %548 = extractelement <64 x i32> %t181.us.us, i32 25
  %549 = sext i32 %548 to i64
  %550 = getelementptr inbounds i32, i32* %423, i64 %549
  %551 = extractelement <64 x i32> %t181.us.us, i32 26
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds i32, i32* %423, i64 %552
  %554 = extractelement <64 x i32> %t181.us.us, i32 27
  %555 = sext i32 %554 to i64
  %556 = getelementptr inbounds i32, i32* %423, i64 %555
  %557 = extractelement <64 x i32> %t181.us.us, i32 28
  %558 = sext i32 %557 to i64
  %559 = getelementptr inbounds i32, i32* %423, i64 %558
  %560 = extractelement <64 x i32> %t181.us.us, i32 29
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds i32, i32* %423, i64 %561
  %563 = extractelement <64 x i32> %t181.us.us, i32 30
  %564 = sext i32 %563 to i64
  %565 = getelementptr inbounds i32, i32* %423, i64 %564
  %566 = extractelement <64 x i32> %t181.us.us, i32 31
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds i32, i32* %423, i64 %567
  %569 = extractelement <64 x i32> %t181.us.us, i32 32
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds i32, i32* %423, i64 %570
  %572 = extractelement <64 x i32> %t181.us.us, i32 33
  %573 = sext i32 %572 to i64
  %574 = getelementptr inbounds i32, i32* %423, i64 %573
  %575 = extractelement <64 x i32> %t181.us.us, i32 34
  %576 = sext i32 %575 to i64
  %577 = getelementptr inbounds i32, i32* %423, i64 %576
  %578 = extractelement <64 x i32> %t181.us.us, i32 35
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds i32, i32* %423, i64 %579
  %581 = extractelement <64 x i32> %t181.us.us, i32 36
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds i32, i32* %423, i64 %582
  %584 = extractelement <64 x i32> %t181.us.us, i32 37
  %585 = sext i32 %584 to i64
  %586 = getelementptr inbounds i32, i32* %423, i64 %585
  %587 = extractelement <64 x i32> %t181.us.us, i32 38
  %588 = sext i32 %587 to i64
  %589 = getelementptr inbounds i32, i32* %423, i64 %588
  %590 = extractelement <64 x i32> %t181.us.us, i32 39
  %591 = sext i32 %590 to i64
  %592 = getelementptr inbounds i32, i32* %423, i64 %591
  %593 = extractelement <64 x i32> %t181.us.us, i32 40
  %594 = sext i32 %593 to i64
  %595 = getelementptr inbounds i32, i32* %423, i64 %594
  %596 = extractelement <64 x i32> %t181.us.us, i32 41
  %597 = sext i32 %596 to i64
  %598 = getelementptr inbounds i32, i32* %423, i64 %597
  %599 = extractelement <64 x i32> %t181.us.us, i32 42
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds i32, i32* %423, i64 %600
  %602 = extractelement <64 x i32> %t181.us.us, i32 43
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds i32, i32* %423, i64 %603
  %605 = extractelement <64 x i32> %t181.us.us, i32 44
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds i32, i32* %423, i64 %606
  %608 = extractelement <64 x i32> %t181.us.us, i32 45
  %609 = sext i32 %608 to i64
  %610 = getelementptr inbounds i32, i32* %423, i64 %609
  %611 = extractelement <64 x i32> %t181.us.us, i32 46
  %612 = sext i32 %611 to i64
  %613 = getelementptr inbounds i32, i32* %423, i64 %612
  %614 = extractelement <64 x i32> %t181.us.us, i32 47
  %615 = sext i32 %614 to i64
  %616 = getelementptr inbounds i32, i32* %423, i64 %615
  %617 = extractelement <64 x i32> %t181.us.us, i32 48
  %618 = sext i32 %617 to i64
  %619 = getelementptr inbounds i32, i32* %423, i64 %618
  %620 = extractelement <64 x i32> %t181.us.us, i32 49
  %621 = sext i32 %620 to i64
  %622 = getelementptr inbounds i32, i32* %423, i64 %621
  %623 = extractelement <64 x i32> %t181.us.us, i32 50
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds i32, i32* %423, i64 %624
  %626 = extractelement <64 x i32> %t181.us.us, i32 51
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds i32, i32* %423, i64 %627
  %629 = extractelement <64 x i32> %t181.us.us, i32 52
  %630 = sext i32 %629 to i64
  %631 = getelementptr inbounds i32, i32* %423, i64 %630
  %632 = extractelement <64 x i32> %t181.us.us, i32 53
  %633 = sext i32 %632 to i64
  %634 = getelementptr inbounds i32, i32* %423, i64 %633
  %635 = extractelement <64 x i32> %t181.us.us, i32 54
  %636 = sext i32 %635 to i64
  %637 = getelementptr inbounds i32, i32* %423, i64 %636
  %638 = extractelement <64 x i32> %t181.us.us, i32 55
  %639 = sext i32 %638 to i64
  %640 = getelementptr inbounds i32, i32* %423, i64 %639
  %641 = extractelement <64 x i32> %t181.us.us, i32 56
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds i32, i32* %423, i64 %642
  %644 = extractelement <64 x i32> %t181.us.us, i32 57
  %645 = sext i32 %644 to i64
  %646 = getelementptr inbounds i32, i32* %423, i64 %645
  %647 = extractelement <64 x i32> %t181.us.us, i32 58
  %648 = sext i32 %647 to i64
  %649 = getelementptr inbounds i32, i32* %423, i64 %648
  %650 = extractelement <64 x i32> %t181.us.us, i32 59
  %651 = sext i32 %650 to i64
  %652 = getelementptr inbounds i32, i32* %423, i64 %651
  %653 = extractelement <64 x i32> %t181.us.us, i32 60
  %654 = sext i32 %653 to i64
  %655 = getelementptr inbounds i32, i32* %423, i64 %654
  %656 = extractelement <64 x i32> %t181.us.us, i32 61
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds i32, i32* %423, i64 %657
  %659 = extractelement <64 x i32> %t181.us.us, i32 62
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds i32, i32* %423, i64 %660
  %662 = extractelement <64 x i32> %t181.us.us, i32 63
  %663 = sext i32 %662 to i64
  %664 = getelementptr inbounds i32, i32* %423, i64 %663
  %665 = add nsw <64 x i32> %t177.us.us, %425
  %666 = mul nsw <64 x i32> %665, %427
  br label %"for Output.s1.r10$y.us.us"

"for Output.s1.r10$y.us.us":                      ; preds = %"end for Output.s1.r10$x.loopexit.us.us", %"for Output.s1.r10$y.preheader.split.us.us"
  %"Output.s1.r10$y.us.us" = phi i32 [ %1560, %"end for Output.s1.r10$x.loopexit.us.us" ], [ 0, %"for Output.s1.r10$y.preheader.split.us.us" ]
  %t240.us.us = mul nsw i32 %"Output.s1.r10$y.us.us", %16
  %t241.us.us = sub nsw i32 %92, %"Output.s1.r10$y.us.us"
  %667 = insertelement <64 x i32> undef, i32 %t241.us.us, i32 0
  %668 = shufflevector <64 x i32> %667, <64 x i32> undef, <64 x i32> zeroinitializer
  %a52.us.us = add nsw <64 x i32> %t179.us.us, %668
  %669 = shufflevector <64 x i32> %a52.us.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %670 = icmp sgt <16 x i32> %434, %669
  %671 = shufflevector <64 x i32> %a52.us.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %672 = icmp sgt <16 x i32> %434, %671
  %673 = shufflevector <64 x i32> %a52.us.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %674 = icmp sgt <16 x i32> %434, %673
  %675 = shufflevector <64 x i32> %a52.us.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %676 = icmp sgt <16 x i32> %434, %675
  %677 = select <16 x i1> %670, <16 x i32> %669, <16 x i32> %434
  %678 = select <16 x i1> %672, <16 x i32> %671, <16 x i32> %434
  %679 = select <16 x i1> %674, <16 x i32> %673, <16 x i32> %434
  %680 = select <16 x i1> %676, <16 x i32> %675, <16 x i32> %434
  %681 = icmp sgt <16 x i32> %677, %436
  %682 = icmp sgt <16 x i32> %678, %436
  %683 = icmp sgt <16 x i32> %679, %436
  %684 = icmp sgt <16 x i32> %680, %436
  %685 = select <16 x i1> %681, <16 x i32> %677, <16 x i32> %436
  %686 = select <16 x i1> %682, <16 x i32> %678, <16 x i32> %436
  %687 = select <16 x i1> %683, <16 x i32> %679, <16 x i32> %436
  %688 = select <16 x i1> %684, <16 x i32> %680, <16 x i32> %436
  %689 = shufflevector <16 x i32> %685, <16 x i32> %686, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %690 = shufflevector <16 x i32> %687, <16 x i32> %688, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %691 = shufflevector <32 x i32> %689, <32 x i32> %690, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %692 = mul nsw <64 x i32> %691, %438
  br label %"for Output.s1.r10$x.us.us"

"for Output.s1.r10$x.us.us":                      ; preds = %"for Output.s1.r10$x.us.us", %"for Output.s1.r10$y.us.us"
  %"Output.s1.r10$x.us.us" = phi i32 [ %1559, %"for Output.s1.r10$x.us.us" ], [ 0, %"for Output.s1.r10$y.us.us" ]
  %693 = load i32, i32* %475, align 4, !tbaa !399
  %694 = insertelement <64 x i32> undef, i32 %693, i32 0
  %695 = load i32, i32* %478, align 4, !tbaa !399
  %696 = insertelement <64 x i32> %694, i32 %695, i32 1
  %697 = load i32, i32* %481, align 4, !tbaa !399
  %698 = insertelement <64 x i32> %696, i32 %697, i32 2
  %699 = load i32, i32* %484, align 4, !tbaa !399
  %700 = insertelement <64 x i32> %698, i32 %699, i32 3
  %701 = load i32, i32* %487, align 4, !tbaa !399
  %702 = insertelement <64 x i32> %700, i32 %701, i32 4
  %703 = load i32, i32* %490, align 4, !tbaa !399
  %704 = insertelement <64 x i32> %702, i32 %703, i32 5
  %705 = load i32, i32* %493, align 4, !tbaa !399
  %706 = insertelement <64 x i32> %704, i32 %705, i32 6
  %707 = load i32, i32* %496, align 4, !tbaa !399
  %708 = insertelement <64 x i32> %706, i32 %707, i32 7
  %709 = load i32, i32* %499, align 4, !tbaa !399
  %710 = insertelement <64 x i32> %708, i32 %709, i32 8
  %711 = load i32, i32* %502, align 4, !tbaa !399
  %712 = insertelement <64 x i32> %710, i32 %711, i32 9
  %713 = load i32, i32* %505, align 4, !tbaa !399
  %714 = insertelement <64 x i32> %712, i32 %713, i32 10
  %715 = load i32, i32* %508, align 4, !tbaa !399
  %716 = insertelement <64 x i32> %714, i32 %715, i32 11
  %717 = load i32, i32* %511, align 4, !tbaa !399
  %718 = insertelement <64 x i32> %716, i32 %717, i32 12
  %719 = load i32, i32* %514, align 4, !tbaa !399
  %720 = insertelement <64 x i32> %718, i32 %719, i32 13
  %721 = load i32, i32* %517, align 4, !tbaa !399
  %722 = insertelement <64 x i32> %720, i32 %721, i32 14
  %723 = load i32, i32* %520, align 4, !tbaa !399
  %724 = insertelement <64 x i32> %722, i32 %723, i32 15
  %725 = load i32, i32* %523, align 4, !tbaa !399
  %726 = insertelement <64 x i32> %724, i32 %725, i32 16
  %727 = load i32, i32* %526, align 4, !tbaa !399
  %728 = insertelement <64 x i32> %726, i32 %727, i32 17
  %729 = load i32, i32* %529, align 4, !tbaa !399
  %730 = insertelement <64 x i32> %728, i32 %729, i32 18
  %731 = load i32, i32* %532, align 4, !tbaa !399
  %732 = insertelement <64 x i32> %730, i32 %731, i32 19
  %733 = load i32, i32* %535, align 4, !tbaa !399
  %734 = insertelement <64 x i32> %732, i32 %733, i32 20
  %735 = load i32, i32* %538, align 4, !tbaa !399
  %736 = insertelement <64 x i32> %734, i32 %735, i32 21
  %737 = load i32, i32* %541, align 4, !tbaa !399
  %738 = insertelement <64 x i32> %736, i32 %737, i32 22
  %739 = load i32, i32* %544, align 4, !tbaa !399
  %740 = insertelement <64 x i32> %738, i32 %739, i32 23
  %741 = load i32, i32* %547, align 4, !tbaa !399
  %742 = insertelement <64 x i32> %740, i32 %741, i32 24
  %743 = load i32, i32* %550, align 4, !tbaa !399
  %744 = insertelement <64 x i32> %742, i32 %743, i32 25
  %745 = load i32, i32* %553, align 4, !tbaa !399
  %746 = insertelement <64 x i32> %744, i32 %745, i32 26
  %747 = load i32, i32* %556, align 4, !tbaa !399
  %748 = insertelement <64 x i32> %746, i32 %747, i32 27
  %749 = load i32, i32* %559, align 4, !tbaa !399
  %750 = insertelement <64 x i32> %748, i32 %749, i32 28
  %751 = load i32, i32* %562, align 4, !tbaa !399
  %752 = insertelement <64 x i32> %750, i32 %751, i32 29
  %753 = load i32, i32* %565, align 4, !tbaa !399
  %754 = insertelement <64 x i32> %752, i32 %753, i32 30
  %755 = load i32, i32* %568, align 4, !tbaa !399
  %756 = insertelement <64 x i32> %754, i32 %755, i32 31
  %757 = load i32, i32* %571, align 4, !tbaa !399
  %758 = insertelement <64 x i32> %756, i32 %757, i32 32
  %759 = load i32, i32* %574, align 4, !tbaa !399
  %760 = insertelement <64 x i32> %758, i32 %759, i32 33
  %761 = load i32, i32* %577, align 4, !tbaa !399
  %762 = insertelement <64 x i32> %760, i32 %761, i32 34
  %763 = load i32, i32* %580, align 4, !tbaa !399
  %764 = insertelement <64 x i32> %762, i32 %763, i32 35
  %765 = load i32, i32* %583, align 4, !tbaa !399
  %766 = insertelement <64 x i32> %764, i32 %765, i32 36
  %767 = load i32, i32* %586, align 4, !tbaa !399
  %768 = insertelement <64 x i32> %766, i32 %767, i32 37
  %769 = load i32, i32* %589, align 4, !tbaa !399
  %770 = insertelement <64 x i32> %768, i32 %769, i32 38
  %771 = load i32, i32* %592, align 4, !tbaa !399
  %772 = insertelement <64 x i32> %770, i32 %771, i32 39
  %773 = load i32, i32* %595, align 4, !tbaa !399
  %774 = insertelement <64 x i32> %772, i32 %773, i32 40
  %775 = load i32, i32* %598, align 4, !tbaa !399
  %776 = insertelement <64 x i32> %774, i32 %775, i32 41
  %777 = load i32, i32* %601, align 4, !tbaa !399
  %778 = insertelement <64 x i32> %776, i32 %777, i32 42
  %779 = load i32, i32* %604, align 4, !tbaa !399
  %780 = insertelement <64 x i32> %778, i32 %779, i32 43
  %781 = load i32, i32* %607, align 4, !tbaa !399
  %782 = insertelement <64 x i32> %780, i32 %781, i32 44
  %783 = load i32, i32* %610, align 4, !tbaa !399
  %784 = insertelement <64 x i32> %782, i32 %783, i32 45
  %785 = load i32, i32* %613, align 4, !tbaa !399
  %786 = insertelement <64 x i32> %784, i32 %785, i32 46
  %787 = load i32, i32* %616, align 4, !tbaa !399
  %788 = insertelement <64 x i32> %786, i32 %787, i32 47
  %789 = load i32, i32* %619, align 4, !tbaa !399
  %790 = insertelement <64 x i32> %788, i32 %789, i32 48
  %791 = load i32, i32* %622, align 4, !tbaa !399
  %792 = insertelement <64 x i32> %790, i32 %791, i32 49
  %793 = load i32, i32* %625, align 4, !tbaa !399
  %794 = insertelement <64 x i32> %792, i32 %793, i32 50
  %795 = load i32, i32* %628, align 4, !tbaa !399
  %796 = insertelement <64 x i32> %794, i32 %795, i32 51
  %797 = load i32, i32* %631, align 4, !tbaa !399
  %798 = insertelement <64 x i32> %796, i32 %797, i32 52
  %799 = load i32, i32* %634, align 4, !tbaa !399
  %800 = insertelement <64 x i32> %798, i32 %799, i32 53
  %801 = load i32, i32* %637, align 4, !tbaa !399
  %802 = insertelement <64 x i32> %800, i32 %801, i32 54
  %803 = load i32, i32* %640, align 4, !tbaa !399
  %804 = insertelement <64 x i32> %802, i32 %803, i32 55
  %805 = load i32, i32* %643, align 4, !tbaa !399
  %806 = insertelement <64 x i32> %804, i32 %805, i32 56
  %807 = load i32, i32* %646, align 4, !tbaa !399
  %808 = insertelement <64 x i32> %806, i32 %807, i32 57
  %809 = load i32, i32* %649, align 4, !tbaa !399
  %810 = insertelement <64 x i32> %808, i32 %809, i32 58
  %811 = load i32, i32* %652, align 4, !tbaa !399
  %812 = insertelement <64 x i32> %810, i32 %811, i32 59
  %813 = load i32, i32* %655, align 4, !tbaa !399
  %814 = insertelement <64 x i32> %812, i32 %813, i32 60
  %815 = load i32, i32* %658, align 4, !tbaa !399
  %816 = insertelement <64 x i32> %814, i32 %815, i32 61
  %817 = load i32, i32* %661, align 4, !tbaa !399
  %818 = insertelement <64 x i32> %816, i32 %817, i32 62
  %819 = load i32, i32* %664, align 4, !tbaa !399
  %820 = insertelement <64 x i32> %818, i32 %819, i32 63
  %821 = add nsw i32 %"Output.s1.r10$x.us.us", %t240.us.us
  %822 = insertelement <64 x i32> undef, i32 %821, i32 0
  %823 = shufflevector <64 x i32> %822, <64 x i32> undef, <64 x i32> zeroinitializer
  %824 = add nsw <64 x i32> %666, %823
  %825 = extractelement <64 x i32> %824, i32 0
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds i32, i32* %428, i64 %826
  %828 = load i32, i32* %827, align 4, !tbaa !402
  %829 = insertelement <64 x i32> undef, i32 %828, i32 0
  %830 = extractelement <64 x i32> %824, i32 1
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds i32, i32* %428, i64 %831
  %833 = load i32, i32* %832, align 4, !tbaa !402
  %834 = insertelement <64 x i32> %829, i32 %833, i32 1
  %835 = extractelement <64 x i32> %824, i32 2
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds i32, i32* %428, i64 %836
  %838 = load i32, i32* %837, align 4, !tbaa !402
  %839 = insertelement <64 x i32> %834, i32 %838, i32 2
  %840 = extractelement <64 x i32> %824, i32 3
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds i32, i32* %428, i64 %841
  %843 = load i32, i32* %842, align 4, !tbaa !402
  %844 = insertelement <64 x i32> %839, i32 %843, i32 3
  %845 = extractelement <64 x i32> %824, i32 4
  %846 = sext i32 %845 to i64
  %847 = getelementptr inbounds i32, i32* %428, i64 %846
  %848 = load i32, i32* %847, align 4, !tbaa !402
  %849 = insertelement <64 x i32> %844, i32 %848, i32 4
  %850 = extractelement <64 x i32> %824, i32 5
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds i32, i32* %428, i64 %851
  %853 = load i32, i32* %852, align 4, !tbaa !402
  %854 = insertelement <64 x i32> %849, i32 %853, i32 5
  %855 = extractelement <64 x i32> %824, i32 6
  %856 = sext i32 %855 to i64
  %857 = getelementptr inbounds i32, i32* %428, i64 %856
  %858 = load i32, i32* %857, align 4, !tbaa !402
  %859 = insertelement <64 x i32> %854, i32 %858, i32 6
  %860 = extractelement <64 x i32> %824, i32 7
  %861 = sext i32 %860 to i64
  %862 = getelementptr inbounds i32, i32* %428, i64 %861
  %863 = load i32, i32* %862, align 4, !tbaa !402
  %864 = insertelement <64 x i32> %859, i32 %863, i32 7
  %865 = extractelement <64 x i32> %824, i32 8
  %866 = sext i32 %865 to i64
  %867 = getelementptr inbounds i32, i32* %428, i64 %866
  %868 = load i32, i32* %867, align 4, !tbaa !402
  %869 = insertelement <64 x i32> %864, i32 %868, i32 8
  %870 = extractelement <64 x i32> %824, i32 9
  %871 = sext i32 %870 to i64
  %872 = getelementptr inbounds i32, i32* %428, i64 %871
  %873 = load i32, i32* %872, align 4, !tbaa !402
  %874 = insertelement <64 x i32> %869, i32 %873, i32 9
  %875 = extractelement <64 x i32> %824, i32 10
  %876 = sext i32 %875 to i64
  %877 = getelementptr inbounds i32, i32* %428, i64 %876
  %878 = load i32, i32* %877, align 4, !tbaa !402
  %879 = insertelement <64 x i32> %874, i32 %878, i32 10
  %880 = extractelement <64 x i32> %824, i32 11
  %881 = sext i32 %880 to i64
  %882 = getelementptr inbounds i32, i32* %428, i64 %881
  %883 = load i32, i32* %882, align 4, !tbaa !402
  %884 = insertelement <64 x i32> %879, i32 %883, i32 11
  %885 = extractelement <64 x i32> %824, i32 12
  %886 = sext i32 %885 to i64
  %887 = getelementptr inbounds i32, i32* %428, i64 %886
  %888 = load i32, i32* %887, align 4, !tbaa !402
  %889 = insertelement <64 x i32> %884, i32 %888, i32 12
  %890 = extractelement <64 x i32> %824, i32 13
  %891 = sext i32 %890 to i64
  %892 = getelementptr inbounds i32, i32* %428, i64 %891
  %893 = load i32, i32* %892, align 4, !tbaa !402
  %894 = insertelement <64 x i32> %889, i32 %893, i32 13
  %895 = extractelement <64 x i32> %824, i32 14
  %896 = sext i32 %895 to i64
  %897 = getelementptr inbounds i32, i32* %428, i64 %896
  %898 = load i32, i32* %897, align 4, !tbaa !402
  %899 = insertelement <64 x i32> %894, i32 %898, i32 14
  %900 = extractelement <64 x i32> %824, i32 15
  %901 = sext i32 %900 to i64
  %902 = getelementptr inbounds i32, i32* %428, i64 %901
  %903 = load i32, i32* %902, align 4, !tbaa !402
  %904 = insertelement <64 x i32> %899, i32 %903, i32 15
  %905 = extractelement <64 x i32> %824, i32 16
  %906 = sext i32 %905 to i64
  %907 = getelementptr inbounds i32, i32* %428, i64 %906
  %908 = load i32, i32* %907, align 4, !tbaa !402
  %909 = insertelement <64 x i32> %904, i32 %908, i32 16
  %910 = extractelement <64 x i32> %824, i32 17
  %911 = sext i32 %910 to i64
  %912 = getelementptr inbounds i32, i32* %428, i64 %911
  %913 = load i32, i32* %912, align 4, !tbaa !402
  %914 = insertelement <64 x i32> %909, i32 %913, i32 17
  %915 = extractelement <64 x i32> %824, i32 18
  %916 = sext i32 %915 to i64
  %917 = getelementptr inbounds i32, i32* %428, i64 %916
  %918 = load i32, i32* %917, align 4, !tbaa !402
  %919 = insertelement <64 x i32> %914, i32 %918, i32 18
  %920 = extractelement <64 x i32> %824, i32 19
  %921 = sext i32 %920 to i64
  %922 = getelementptr inbounds i32, i32* %428, i64 %921
  %923 = load i32, i32* %922, align 4, !tbaa !402
  %924 = insertelement <64 x i32> %919, i32 %923, i32 19
  %925 = extractelement <64 x i32> %824, i32 20
  %926 = sext i32 %925 to i64
  %927 = getelementptr inbounds i32, i32* %428, i64 %926
  %928 = load i32, i32* %927, align 4, !tbaa !402
  %929 = insertelement <64 x i32> %924, i32 %928, i32 20
  %930 = extractelement <64 x i32> %824, i32 21
  %931 = sext i32 %930 to i64
  %932 = getelementptr inbounds i32, i32* %428, i64 %931
  %933 = load i32, i32* %932, align 4, !tbaa !402
  %934 = insertelement <64 x i32> %929, i32 %933, i32 21
  %935 = extractelement <64 x i32> %824, i32 22
  %936 = sext i32 %935 to i64
  %937 = getelementptr inbounds i32, i32* %428, i64 %936
  %938 = load i32, i32* %937, align 4, !tbaa !402
  %939 = insertelement <64 x i32> %934, i32 %938, i32 22
  %940 = extractelement <64 x i32> %824, i32 23
  %941 = sext i32 %940 to i64
  %942 = getelementptr inbounds i32, i32* %428, i64 %941
  %943 = load i32, i32* %942, align 4, !tbaa !402
  %944 = insertelement <64 x i32> %939, i32 %943, i32 23
  %945 = extractelement <64 x i32> %824, i32 24
  %946 = sext i32 %945 to i64
  %947 = getelementptr inbounds i32, i32* %428, i64 %946
  %948 = load i32, i32* %947, align 4, !tbaa !402
  %949 = insertelement <64 x i32> %944, i32 %948, i32 24
  %950 = extractelement <64 x i32> %824, i32 25
  %951 = sext i32 %950 to i64
  %952 = getelementptr inbounds i32, i32* %428, i64 %951
  %953 = load i32, i32* %952, align 4, !tbaa !402
  %954 = insertelement <64 x i32> %949, i32 %953, i32 25
  %955 = extractelement <64 x i32> %824, i32 26
  %956 = sext i32 %955 to i64
  %957 = getelementptr inbounds i32, i32* %428, i64 %956
  %958 = load i32, i32* %957, align 4, !tbaa !402
  %959 = insertelement <64 x i32> %954, i32 %958, i32 26
  %960 = extractelement <64 x i32> %824, i32 27
  %961 = sext i32 %960 to i64
  %962 = getelementptr inbounds i32, i32* %428, i64 %961
  %963 = load i32, i32* %962, align 4, !tbaa !402
  %964 = insertelement <64 x i32> %959, i32 %963, i32 27
  %965 = extractelement <64 x i32> %824, i32 28
  %966 = sext i32 %965 to i64
  %967 = getelementptr inbounds i32, i32* %428, i64 %966
  %968 = load i32, i32* %967, align 4, !tbaa !402
  %969 = insertelement <64 x i32> %964, i32 %968, i32 28
  %970 = extractelement <64 x i32> %824, i32 29
  %971 = sext i32 %970 to i64
  %972 = getelementptr inbounds i32, i32* %428, i64 %971
  %973 = load i32, i32* %972, align 4, !tbaa !402
  %974 = insertelement <64 x i32> %969, i32 %973, i32 29
  %975 = extractelement <64 x i32> %824, i32 30
  %976 = sext i32 %975 to i64
  %977 = getelementptr inbounds i32, i32* %428, i64 %976
  %978 = load i32, i32* %977, align 4, !tbaa !402
  %979 = insertelement <64 x i32> %974, i32 %978, i32 30
  %980 = extractelement <64 x i32> %824, i32 31
  %981 = sext i32 %980 to i64
  %982 = getelementptr inbounds i32, i32* %428, i64 %981
  %983 = load i32, i32* %982, align 4, !tbaa !402
  %984 = insertelement <64 x i32> %979, i32 %983, i32 31
  %985 = extractelement <64 x i32> %824, i32 32
  %986 = sext i32 %985 to i64
  %987 = getelementptr inbounds i32, i32* %428, i64 %986
  %988 = load i32, i32* %987, align 4, !tbaa !402
  %989 = insertelement <64 x i32> %984, i32 %988, i32 32
  %990 = extractelement <64 x i32> %824, i32 33
  %991 = sext i32 %990 to i64
  %992 = getelementptr inbounds i32, i32* %428, i64 %991
  %993 = load i32, i32* %992, align 4, !tbaa !402
  %994 = insertelement <64 x i32> %989, i32 %993, i32 33
  %995 = extractelement <64 x i32> %824, i32 34
  %996 = sext i32 %995 to i64
  %997 = getelementptr inbounds i32, i32* %428, i64 %996
  %998 = load i32, i32* %997, align 4, !tbaa !402
  %999 = insertelement <64 x i32> %994, i32 %998, i32 34
  %1000 = extractelement <64 x i32> %824, i32 35
  %1001 = sext i32 %1000 to i64
  %1002 = getelementptr inbounds i32, i32* %428, i64 %1001
  %1003 = load i32, i32* %1002, align 4, !tbaa !402
  %1004 = insertelement <64 x i32> %999, i32 %1003, i32 35
  %1005 = extractelement <64 x i32> %824, i32 36
  %1006 = sext i32 %1005 to i64
  %1007 = getelementptr inbounds i32, i32* %428, i64 %1006
  %1008 = load i32, i32* %1007, align 4, !tbaa !402
  %1009 = insertelement <64 x i32> %1004, i32 %1008, i32 36
  %1010 = extractelement <64 x i32> %824, i32 37
  %1011 = sext i32 %1010 to i64
  %1012 = getelementptr inbounds i32, i32* %428, i64 %1011
  %1013 = load i32, i32* %1012, align 4, !tbaa !402
  %1014 = insertelement <64 x i32> %1009, i32 %1013, i32 37
  %1015 = extractelement <64 x i32> %824, i32 38
  %1016 = sext i32 %1015 to i64
  %1017 = getelementptr inbounds i32, i32* %428, i64 %1016
  %1018 = load i32, i32* %1017, align 4, !tbaa !402
  %1019 = insertelement <64 x i32> %1014, i32 %1018, i32 38
  %1020 = extractelement <64 x i32> %824, i32 39
  %1021 = sext i32 %1020 to i64
  %1022 = getelementptr inbounds i32, i32* %428, i64 %1021
  %1023 = load i32, i32* %1022, align 4, !tbaa !402
  %1024 = insertelement <64 x i32> %1019, i32 %1023, i32 39
  %1025 = extractelement <64 x i32> %824, i32 40
  %1026 = sext i32 %1025 to i64
  %1027 = getelementptr inbounds i32, i32* %428, i64 %1026
  %1028 = load i32, i32* %1027, align 4, !tbaa !402
  %1029 = insertelement <64 x i32> %1024, i32 %1028, i32 40
  %1030 = extractelement <64 x i32> %824, i32 41
  %1031 = sext i32 %1030 to i64
  %1032 = getelementptr inbounds i32, i32* %428, i64 %1031
  %1033 = load i32, i32* %1032, align 4, !tbaa !402
  %1034 = insertelement <64 x i32> %1029, i32 %1033, i32 41
  %1035 = extractelement <64 x i32> %824, i32 42
  %1036 = sext i32 %1035 to i64
  %1037 = getelementptr inbounds i32, i32* %428, i64 %1036
  %1038 = load i32, i32* %1037, align 4, !tbaa !402
  %1039 = insertelement <64 x i32> %1034, i32 %1038, i32 42
  %1040 = extractelement <64 x i32> %824, i32 43
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds i32, i32* %428, i64 %1041
  %1043 = load i32, i32* %1042, align 4, !tbaa !402
  %1044 = insertelement <64 x i32> %1039, i32 %1043, i32 43
  %1045 = extractelement <64 x i32> %824, i32 44
  %1046 = sext i32 %1045 to i64
  %1047 = getelementptr inbounds i32, i32* %428, i64 %1046
  %1048 = load i32, i32* %1047, align 4, !tbaa !402
  %1049 = insertelement <64 x i32> %1044, i32 %1048, i32 44
  %1050 = extractelement <64 x i32> %824, i32 45
  %1051 = sext i32 %1050 to i64
  %1052 = getelementptr inbounds i32, i32* %428, i64 %1051
  %1053 = load i32, i32* %1052, align 4, !tbaa !402
  %1054 = insertelement <64 x i32> %1049, i32 %1053, i32 45
  %1055 = extractelement <64 x i32> %824, i32 46
  %1056 = sext i32 %1055 to i64
  %1057 = getelementptr inbounds i32, i32* %428, i64 %1056
  %1058 = load i32, i32* %1057, align 4, !tbaa !402
  %1059 = insertelement <64 x i32> %1054, i32 %1058, i32 46
  %1060 = extractelement <64 x i32> %824, i32 47
  %1061 = sext i32 %1060 to i64
  %1062 = getelementptr inbounds i32, i32* %428, i64 %1061
  %1063 = load i32, i32* %1062, align 4, !tbaa !402
  %1064 = insertelement <64 x i32> %1059, i32 %1063, i32 47
  %1065 = extractelement <64 x i32> %824, i32 48
  %1066 = sext i32 %1065 to i64
  %1067 = getelementptr inbounds i32, i32* %428, i64 %1066
  %1068 = load i32, i32* %1067, align 4, !tbaa !402
  %1069 = insertelement <64 x i32> %1064, i32 %1068, i32 48
  %1070 = extractelement <64 x i32> %824, i32 49
  %1071 = sext i32 %1070 to i64
  %1072 = getelementptr inbounds i32, i32* %428, i64 %1071
  %1073 = load i32, i32* %1072, align 4, !tbaa !402
  %1074 = insertelement <64 x i32> %1069, i32 %1073, i32 49
  %1075 = extractelement <64 x i32> %824, i32 50
  %1076 = sext i32 %1075 to i64
  %1077 = getelementptr inbounds i32, i32* %428, i64 %1076
  %1078 = load i32, i32* %1077, align 4, !tbaa !402
  %1079 = insertelement <64 x i32> %1074, i32 %1078, i32 50
  %1080 = extractelement <64 x i32> %824, i32 51
  %1081 = sext i32 %1080 to i64
  %1082 = getelementptr inbounds i32, i32* %428, i64 %1081
  %1083 = load i32, i32* %1082, align 4, !tbaa !402
  %1084 = insertelement <64 x i32> %1079, i32 %1083, i32 51
  %1085 = extractelement <64 x i32> %824, i32 52
  %1086 = sext i32 %1085 to i64
  %1087 = getelementptr inbounds i32, i32* %428, i64 %1086
  %1088 = load i32, i32* %1087, align 4, !tbaa !402
  %1089 = insertelement <64 x i32> %1084, i32 %1088, i32 52
  %1090 = extractelement <64 x i32> %824, i32 53
  %1091 = sext i32 %1090 to i64
  %1092 = getelementptr inbounds i32, i32* %428, i64 %1091
  %1093 = load i32, i32* %1092, align 4, !tbaa !402
  %1094 = insertelement <64 x i32> %1089, i32 %1093, i32 53
  %1095 = extractelement <64 x i32> %824, i32 54
  %1096 = sext i32 %1095 to i64
  %1097 = getelementptr inbounds i32, i32* %428, i64 %1096
  %1098 = load i32, i32* %1097, align 4, !tbaa !402
  %1099 = insertelement <64 x i32> %1094, i32 %1098, i32 54
  %1100 = extractelement <64 x i32> %824, i32 55
  %1101 = sext i32 %1100 to i64
  %1102 = getelementptr inbounds i32, i32* %428, i64 %1101
  %1103 = load i32, i32* %1102, align 4, !tbaa !402
  %1104 = insertelement <64 x i32> %1099, i32 %1103, i32 55
  %1105 = extractelement <64 x i32> %824, i32 56
  %1106 = sext i32 %1105 to i64
  %1107 = getelementptr inbounds i32, i32* %428, i64 %1106
  %1108 = load i32, i32* %1107, align 4, !tbaa !402
  %1109 = insertelement <64 x i32> %1104, i32 %1108, i32 56
  %1110 = extractelement <64 x i32> %824, i32 57
  %1111 = sext i32 %1110 to i64
  %1112 = getelementptr inbounds i32, i32* %428, i64 %1111
  %1113 = load i32, i32* %1112, align 4, !tbaa !402
  %1114 = insertelement <64 x i32> %1109, i32 %1113, i32 57
  %1115 = extractelement <64 x i32> %824, i32 58
  %1116 = sext i32 %1115 to i64
  %1117 = getelementptr inbounds i32, i32* %428, i64 %1116
  %1118 = load i32, i32* %1117, align 4, !tbaa !402
  %1119 = insertelement <64 x i32> %1114, i32 %1118, i32 58
  %1120 = extractelement <64 x i32> %824, i32 59
  %1121 = sext i32 %1120 to i64
  %1122 = getelementptr inbounds i32, i32* %428, i64 %1121
  %1123 = load i32, i32* %1122, align 4, !tbaa !402
  %1124 = insertelement <64 x i32> %1119, i32 %1123, i32 59
  %1125 = extractelement <64 x i32> %824, i32 60
  %1126 = sext i32 %1125 to i64
  %1127 = getelementptr inbounds i32, i32* %428, i64 %1126
  %1128 = load i32, i32* %1127, align 4, !tbaa !402
  %1129 = insertelement <64 x i32> %1124, i32 %1128, i32 60
  %1130 = extractelement <64 x i32> %824, i32 61
  %1131 = sext i32 %1130 to i64
  %1132 = getelementptr inbounds i32, i32* %428, i64 %1131
  %1133 = load i32, i32* %1132, align 4, !tbaa !402
  %1134 = insertelement <64 x i32> %1129, i32 %1133, i32 61
  %1135 = extractelement <64 x i32> %824, i32 62
  %1136 = sext i32 %1135 to i64
  %1137 = getelementptr inbounds i32, i32* %428, i64 %1136
  %1138 = load i32, i32* %1137, align 4, !tbaa !402
  %1139 = insertelement <64 x i32> %1134, i32 %1138, i32 62
  %1140 = extractelement <64 x i32> %824, i32 63
  %1141 = sext i32 %1140 to i64
  %1142 = getelementptr inbounds i32, i32* %428, i64 %1141
  %1143 = load i32, i32* %1142, align 4, !tbaa !402
  %1144 = insertelement <64 x i32> %1139, i32 %1143, i32 63
  %1145 = sub nsw i32 %72, %"Output.s1.r10$x.us.us"
  %1146 = insertelement <64 x i32> undef, i32 %1145, i32 0
  %1147 = shufflevector <64 x i32> %1146, <64 x i32> undef, <64 x i32> zeroinitializer
  %a50.us.us = add nsw <64 x i32> %t180.us.us, %1147
  %1148 = shufflevector <64 x i32> %a50.us.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1149 = icmp sgt <16 x i32> %430, %1148
  %1150 = shufflevector <64 x i32> %a50.us.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1151 = icmp sgt <16 x i32> %430, %1150
  %1152 = shufflevector <64 x i32> %a50.us.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %1153 = icmp sgt <16 x i32> %430, %1152
  %1154 = shufflevector <64 x i32> %a50.us.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %1155 = icmp sgt <16 x i32> %430, %1154
  %1156 = select <16 x i1> %1149, <16 x i32> %1148, <16 x i32> %430
  %1157 = select <16 x i1> %1151, <16 x i32> %1150, <16 x i32> %430
  %1158 = select <16 x i1> %1153, <16 x i32> %1152, <16 x i32> %430
  %1159 = select <16 x i1> %1155, <16 x i32> %1154, <16 x i32> %430
  %1160 = icmp sgt <16 x i32> %1156, %432
  %1161 = icmp sgt <16 x i32> %1157, %432
  %1162 = icmp sgt <16 x i32> %1158, %432
  %1163 = icmp sgt <16 x i32> %1159, %432
  %1164 = select <16 x i1> %1160, <16 x i32> %1156, <16 x i32> %432
  %1165 = select <16 x i1> %1161, <16 x i32> %1157, <16 x i32> %432
  %1166 = select <16 x i1> %1162, <16 x i32> %1158, <16 x i32> %432
  %1167 = select <16 x i1> %1163, <16 x i32> %1159, <16 x i32> %432
  %1168 = shufflevector <16 x i32> %1164, <16 x i32> %1165, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1169 = shufflevector <16 x i32> %1166, <16 x i32> %1167, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1170 = shufflevector <32 x i32> %1168, <32 x i32> %1169, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %1171 = add <64 x i32> %1170, %450
  %1172 = add <64 x i32> %1171, %692
  %1173 = extractelement <64 x i32> %1172, i32 0
  %1174 = sext i32 %1173 to i64
  %1175 = getelementptr inbounds i32, i32* %439, i64 %1174
  %1176 = load i32, i32* %1175, align 4, !tbaa !404
  %1177 = insertelement <64 x i32> undef, i32 %1176, i32 0
  %1178 = extractelement <64 x i32> %1172, i32 1
  %1179 = sext i32 %1178 to i64
  %1180 = getelementptr inbounds i32, i32* %439, i64 %1179
  %1181 = load i32, i32* %1180, align 4, !tbaa !404
  %1182 = insertelement <64 x i32> %1177, i32 %1181, i32 1
  %1183 = extractelement <64 x i32> %1172, i32 2
  %1184 = sext i32 %1183 to i64
  %1185 = getelementptr inbounds i32, i32* %439, i64 %1184
  %1186 = load i32, i32* %1185, align 4, !tbaa !404
  %1187 = insertelement <64 x i32> %1182, i32 %1186, i32 2
  %1188 = extractelement <64 x i32> %1172, i32 3
  %1189 = sext i32 %1188 to i64
  %1190 = getelementptr inbounds i32, i32* %439, i64 %1189
  %1191 = load i32, i32* %1190, align 4, !tbaa !404
  %1192 = insertelement <64 x i32> %1187, i32 %1191, i32 3
  %1193 = extractelement <64 x i32> %1172, i32 4
  %1194 = sext i32 %1193 to i64
  %1195 = getelementptr inbounds i32, i32* %439, i64 %1194
  %1196 = load i32, i32* %1195, align 4, !tbaa !404
  %1197 = insertelement <64 x i32> %1192, i32 %1196, i32 4
  %1198 = extractelement <64 x i32> %1172, i32 5
  %1199 = sext i32 %1198 to i64
  %1200 = getelementptr inbounds i32, i32* %439, i64 %1199
  %1201 = load i32, i32* %1200, align 4, !tbaa !404
  %1202 = insertelement <64 x i32> %1197, i32 %1201, i32 5
  %1203 = extractelement <64 x i32> %1172, i32 6
  %1204 = sext i32 %1203 to i64
  %1205 = getelementptr inbounds i32, i32* %439, i64 %1204
  %1206 = load i32, i32* %1205, align 4, !tbaa !404
  %1207 = insertelement <64 x i32> %1202, i32 %1206, i32 6
  %1208 = extractelement <64 x i32> %1172, i32 7
  %1209 = sext i32 %1208 to i64
  %1210 = getelementptr inbounds i32, i32* %439, i64 %1209
  %1211 = load i32, i32* %1210, align 4, !tbaa !404
  %1212 = insertelement <64 x i32> %1207, i32 %1211, i32 7
  %1213 = extractelement <64 x i32> %1172, i32 8
  %1214 = sext i32 %1213 to i64
  %1215 = getelementptr inbounds i32, i32* %439, i64 %1214
  %1216 = load i32, i32* %1215, align 4, !tbaa !404
  %1217 = insertelement <64 x i32> %1212, i32 %1216, i32 8
  %1218 = extractelement <64 x i32> %1172, i32 9
  %1219 = sext i32 %1218 to i64
  %1220 = getelementptr inbounds i32, i32* %439, i64 %1219
  %1221 = load i32, i32* %1220, align 4, !tbaa !404
  %1222 = insertelement <64 x i32> %1217, i32 %1221, i32 9
  %1223 = extractelement <64 x i32> %1172, i32 10
  %1224 = sext i32 %1223 to i64
  %1225 = getelementptr inbounds i32, i32* %439, i64 %1224
  %1226 = load i32, i32* %1225, align 4, !tbaa !404
  %1227 = insertelement <64 x i32> %1222, i32 %1226, i32 10
  %1228 = extractelement <64 x i32> %1172, i32 11
  %1229 = sext i32 %1228 to i64
  %1230 = getelementptr inbounds i32, i32* %439, i64 %1229
  %1231 = load i32, i32* %1230, align 4, !tbaa !404
  %1232 = insertelement <64 x i32> %1227, i32 %1231, i32 11
  %1233 = extractelement <64 x i32> %1172, i32 12
  %1234 = sext i32 %1233 to i64
  %1235 = getelementptr inbounds i32, i32* %439, i64 %1234
  %1236 = load i32, i32* %1235, align 4, !tbaa !404
  %1237 = insertelement <64 x i32> %1232, i32 %1236, i32 12
  %1238 = extractelement <64 x i32> %1172, i32 13
  %1239 = sext i32 %1238 to i64
  %1240 = getelementptr inbounds i32, i32* %439, i64 %1239
  %1241 = load i32, i32* %1240, align 4, !tbaa !404
  %1242 = insertelement <64 x i32> %1237, i32 %1241, i32 13
  %1243 = extractelement <64 x i32> %1172, i32 14
  %1244 = sext i32 %1243 to i64
  %1245 = getelementptr inbounds i32, i32* %439, i64 %1244
  %1246 = load i32, i32* %1245, align 4, !tbaa !404
  %1247 = insertelement <64 x i32> %1242, i32 %1246, i32 14
  %1248 = extractelement <64 x i32> %1172, i32 15
  %1249 = sext i32 %1248 to i64
  %1250 = getelementptr inbounds i32, i32* %439, i64 %1249
  %1251 = load i32, i32* %1250, align 4, !tbaa !404
  %1252 = insertelement <64 x i32> %1247, i32 %1251, i32 15
  %1253 = extractelement <64 x i32> %1172, i32 16
  %1254 = sext i32 %1253 to i64
  %1255 = getelementptr inbounds i32, i32* %439, i64 %1254
  %1256 = load i32, i32* %1255, align 4, !tbaa !404
  %1257 = insertelement <64 x i32> %1252, i32 %1256, i32 16
  %1258 = extractelement <64 x i32> %1172, i32 17
  %1259 = sext i32 %1258 to i64
  %1260 = getelementptr inbounds i32, i32* %439, i64 %1259
  %1261 = load i32, i32* %1260, align 4, !tbaa !404
  %1262 = insertelement <64 x i32> %1257, i32 %1261, i32 17
  %1263 = extractelement <64 x i32> %1172, i32 18
  %1264 = sext i32 %1263 to i64
  %1265 = getelementptr inbounds i32, i32* %439, i64 %1264
  %1266 = load i32, i32* %1265, align 4, !tbaa !404
  %1267 = insertelement <64 x i32> %1262, i32 %1266, i32 18
  %1268 = extractelement <64 x i32> %1172, i32 19
  %1269 = sext i32 %1268 to i64
  %1270 = getelementptr inbounds i32, i32* %439, i64 %1269
  %1271 = load i32, i32* %1270, align 4, !tbaa !404
  %1272 = insertelement <64 x i32> %1267, i32 %1271, i32 19
  %1273 = extractelement <64 x i32> %1172, i32 20
  %1274 = sext i32 %1273 to i64
  %1275 = getelementptr inbounds i32, i32* %439, i64 %1274
  %1276 = load i32, i32* %1275, align 4, !tbaa !404
  %1277 = insertelement <64 x i32> %1272, i32 %1276, i32 20
  %1278 = extractelement <64 x i32> %1172, i32 21
  %1279 = sext i32 %1278 to i64
  %1280 = getelementptr inbounds i32, i32* %439, i64 %1279
  %1281 = load i32, i32* %1280, align 4, !tbaa !404
  %1282 = insertelement <64 x i32> %1277, i32 %1281, i32 21
  %1283 = extractelement <64 x i32> %1172, i32 22
  %1284 = sext i32 %1283 to i64
  %1285 = getelementptr inbounds i32, i32* %439, i64 %1284
  %1286 = load i32, i32* %1285, align 4, !tbaa !404
  %1287 = insertelement <64 x i32> %1282, i32 %1286, i32 22
  %1288 = extractelement <64 x i32> %1172, i32 23
  %1289 = sext i32 %1288 to i64
  %1290 = getelementptr inbounds i32, i32* %439, i64 %1289
  %1291 = load i32, i32* %1290, align 4, !tbaa !404
  %1292 = insertelement <64 x i32> %1287, i32 %1291, i32 23
  %1293 = extractelement <64 x i32> %1172, i32 24
  %1294 = sext i32 %1293 to i64
  %1295 = getelementptr inbounds i32, i32* %439, i64 %1294
  %1296 = load i32, i32* %1295, align 4, !tbaa !404
  %1297 = insertelement <64 x i32> %1292, i32 %1296, i32 24
  %1298 = extractelement <64 x i32> %1172, i32 25
  %1299 = sext i32 %1298 to i64
  %1300 = getelementptr inbounds i32, i32* %439, i64 %1299
  %1301 = load i32, i32* %1300, align 4, !tbaa !404
  %1302 = insertelement <64 x i32> %1297, i32 %1301, i32 25
  %1303 = extractelement <64 x i32> %1172, i32 26
  %1304 = sext i32 %1303 to i64
  %1305 = getelementptr inbounds i32, i32* %439, i64 %1304
  %1306 = load i32, i32* %1305, align 4, !tbaa !404
  %1307 = insertelement <64 x i32> %1302, i32 %1306, i32 26
  %1308 = extractelement <64 x i32> %1172, i32 27
  %1309 = sext i32 %1308 to i64
  %1310 = getelementptr inbounds i32, i32* %439, i64 %1309
  %1311 = load i32, i32* %1310, align 4, !tbaa !404
  %1312 = insertelement <64 x i32> %1307, i32 %1311, i32 27
  %1313 = extractelement <64 x i32> %1172, i32 28
  %1314 = sext i32 %1313 to i64
  %1315 = getelementptr inbounds i32, i32* %439, i64 %1314
  %1316 = load i32, i32* %1315, align 4, !tbaa !404
  %1317 = insertelement <64 x i32> %1312, i32 %1316, i32 28
  %1318 = extractelement <64 x i32> %1172, i32 29
  %1319 = sext i32 %1318 to i64
  %1320 = getelementptr inbounds i32, i32* %439, i64 %1319
  %1321 = load i32, i32* %1320, align 4, !tbaa !404
  %1322 = insertelement <64 x i32> %1317, i32 %1321, i32 29
  %1323 = extractelement <64 x i32> %1172, i32 30
  %1324 = sext i32 %1323 to i64
  %1325 = getelementptr inbounds i32, i32* %439, i64 %1324
  %1326 = load i32, i32* %1325, align 4, !tbaa !404
  %1327 = insertelement <64 x i32> %1322, i32 %1326, i32 30
  %1328 = extractelement <64 x i32> %1172, i32 31
  %1329 = sext i32 %1328 to i64
  %1330 = getelementptr inbounds i32, i32* %439, i64 %1329
  %1331 = load i32, i32* %1330, align 4, !tbaa !404
  %1332 = insertelement <64 x i32> %1327, i32 %1331, i32 31
  %1333 = extractelement <64 x i32> %1172, i32 32
  %1334 = sext i32 %1333 to i64
  %1335 = getelementptr inbounds i32, i32* %439, i64 %1334
  %1336 = load i32, i32* %1335, align 4, !tbaa !404
  %1337 = insertelement <64 x i32> %1332, i32 %1336, i32 32
  %1338 = extractelement <64 x i32> %1172, i32 33
  %1339 = sext i32 %1338 to i64
  %1340 = getelementptr inbounds i32, i32* %439, i64 %1339
  %1341 = load i32, i32* %1340, align 4, !tbaa !404
  %1342 = insertelement <64 x i32> %1337, i32 %1341, i32 33
  %1343 = extractelement <64 x i32> %1172, i32 34
  %1344 = sext i32 %1343 to i64
  %1345 = getelementptr inbounds i32, i32* %439, i64 %1344
  %1346 = load i32, i32* %1345, align 4, !tbaa !404
  %1347 = insertelement <64 x i32> %1342, i32 %1346, i32 34
  %1348 = extractelement <64 x i32> %1172, i32 35
  %1349 = sext i32 %1348 to i64
  %1350 = getelementptr inbounds i32, i32* %439, i64 %1349
  %1351 = load i32, i32* %1350, align 4, !tbaa !404
  %1352 = insertelement <64 x i32> %1347, i32 %1351, i32 35
  %1353 = extractelement <64 x i32> %1172, i32 36
  %1354 = sext i32 %1353 to i64
  %1355 = getelementptr inbounds i32, i32* %439, i64 %1354
  %1356 = load i32, i32* %1355, align 4, !tbaa !404
  %1357 = insertelement <64 x i32> %1352, i32 %1356, i32 36
  %1358 = extractelement <64 x i32> %1172, i32 37
  %1359 = sext i32 %1358 to i64
  %1360 = getelementptr inbounds i32, i32* %439, i64 %1359
  %1361 = load i32, i32* %1360, align 4, !tbaa !404
  %1362 = insertelement <64 x i32> %1357, i32 %1361, i32 37
  %1363 = extractelement <64 x i32> %1172, i32 38
  %1364 = sext i32 %1363 to i64
  %1365 = getelementptr inbounds i32, i32* %439, i64 %1364
  %1366 = load i32, i32* %1365, align 4, !tbaa !404
  %1367 = insertelement <64 x i32> %1362, i32 %1366, i32 38
  %1368 = extractelement <64 x i32> %1172, i32 39
  %1369 = sext i32 %1368 to i64
  %1370 = getelementptr inbounds i32, i32* %439, i64 %1369
  %1371 = load i32, i32* %1370, align 4, !tbaa !404
  %1372 = insertelement <64 x i32> %1367, i32 %1371, i32 39
  %1373 = extractelement <64 x i32> %1172, i32 40
  %1374 = sext i32 %1373 to i64
  %1375 = getelementptr inbounds i32, i32* %439, i64 %1374
  %1376 = load i32, i32* %1375, align 4, !tbaa !404
  %1377 = insertelement <64 x i32> %1372, i32 %1376, i32 40
  %1378 = extractelement <64 x i32> %1172, i32 41
  %1379 = sext i32 %1378 to i64
  %1380 = getelementptr inbounds i32, i32* %439, i64 %1379
  %1381 = load i32, i32* %1380, align 4, !tbaa !404
  %1382 = insertelement <64 x i32> %1377, i32 %1381, i32 41
  %1383 = extractelement <64 x i32> %1172, i32 42
  %1384 = sext i32 %1383 to i64
  %1385 = getelementptr inbounds i32, i32* %439, i64 %1384
  %1386 = load i32, i32* %1385, align 4, !tbaa !404
  %1387 = insertelement <64 x i32> %1382, i32 %1386, i32 42
  %1388 = extractelement <64 x i32> %1172, i32 43
  %1389 = sext i32 %1388 to i64
  %1390 = getelementptr inbounds i32, i32* %439, i64 %1389
  %1391 = load i32, i32* %1390, align 4, !tbaa !404
  %1392 = insertelement <64 x i32> %1387, i32 %1391, i32 43
  %1393 = extractelement <64 x i32> %1172, i32 44
  %1394 = sext i32 %1393 to i64
  %1395 = getelementptr inbounds i32, i32* %439, i64 %1394
  %1396 = load i32, i32* %1395, align 4, !tbaa !404
  %1397 = insertelement <64 x i32> %1392, i32 %1396, i32 44
  %1398 = extractelement <64 x i32> %1172, i32 45
  %1399 = sext i32 %1398 to i64
  %1400 = getelementptr inbounds i32, i32* %439, i64 %1399
  %1401 = load i32, i32* %1400, align 4, !tbaa !404
  %1402 = insertelement <64 x i32> %1397, i32 %1401, i32 45
  %1403 = extractelement <64 x i32> %1172, i32 46
  %1404 = sext i32 %1403 to i64
  %1405 = getelementptr inbounds i32, i32* %439, i64 %1404
  %1406 = load i32, i32* %1405, align 4, !tbaa !404
  %1407 = insertelement <64 x i32> %1402, i32 %1406, i32 46
  %1408 = extractelement <64 x i32> %1172, i32 47
  %1409 = sext i32 %1408 to i64
  %1410 = getelementptr inbounds i32, i32* %439, i64 %1409
  %1411 = load i32, i32* %1410, align 4, !tbaa !404
  %1412 = insertelement <64 x i32> %1407, i32 %1411, i32 47
  %1413 = extractelement <64 x i32> %1172, i32 48
  %1414 = sext i32 %1413 to i64
  %1415 = getelementptr inbounds i32, i32* %439, i64 %1414
  %1416 = load i32, i32* %1415, align 4, !tbaa !404
  %1417 = insertelement <64 x i32> %1412, i32 %1416, i32 48
  %1418 = extractelement <64 x i32> %1172, i32 49
  %1419 = sext i32 %1418 to i64
  %1420 = getelementptr inbounds i32, i32* %439, i64 %1419
  %1421 = load i32, i32* %1420, align 4, !tbaa !404
  %1422 = insertelement <64 x i32> %1417, i32 %1421, i32 49
  %1423 = extractelement <64 x i32> %1172, i32 50
  %1424 = sext i32 %1423 to i64
  %1425 = getelementptr inbounds i32, i32* %439, i64 %1424
  %1426 = load i32, i32* %1425, align 4, !tbaa !404
  %1427 = insertelement <64 x i32> %1422, i32 %1426, i32 50
  %1428 = extractelement <64 x i32> %1172, i32 51
  %1429 = sext i32 %1428 to i64
  %1430 = getelementptr inbounds i32, i32* %439, i64 %1429
  %1431 = load i32, i32* %1430, align 4, !tbaa !404
  %1432 = insertelement <64 x i32> %1427, i32 %1431, i32 51
  %1433 = extractelement <64 x i32> %1172, i32 52
  %1434 = sext i32 %1433 to i64
  %1435 = getelementptr inbounds i32, i32* %439, i64 %1434
  %1436 = load i32, i32* %1435, align 4, !tbaa !404
  %1437 = insertelement <64 x i32> %1432, i32 %1436, i32 52
  %1438 = extractelement <64 x i32> %1172, i32 53
  %1439 = sext i32 %1438 to i64
  %1440 = getelementptr inbounds i32, i32* %439, i64 %1439
  %1441 = load i32, i32* %1440, align 4, !tbaa !404
  %1442 = insertelement <64 x i32> %1437, i32 %1441, i32 53
  %1443 = extractelement <64 x i32> %1172, i32 54
  %1444 = sext i32 %1443 to i64
  %1445 = getelementptr inbounds i32, i32* %439, i64 %1444
  %1446 = load i32, i32* %1445, align 4, !tbaa !404
  %1447 = insertelement <64 x i32> %1442, i32 %1446, i32 54
  %1448 = extractelement <64 x i32> %1172, i32 55
  %1449 = sext i32 %1448 to i64
  %1450 = getelementptr inbounds i32, i32* %439, i64 %1449
  %1451 = load i32, i32* %1450, align 4, !tbaa !404
  %1452 = insertelement <64 x i32> %1447, i32 %1451, i32 55
  %1453 = extractelement <64 x i32> %1172, i32 56
  %1454 = sext i32 %1453 to i64
  %1455 = getelementptr inbounds i32, i32* %439, i64 %1454
  %1456 = load i32, i32* %1455, align 4, !tbaa !404
  %1457 = insertelement <64 x i32> %1452, i32 %1456, i32 56
  %1458 = extractelement <64 x i32> %1172, i32 57
  %1459 = sext i32 %1458 to i64
  %1460 = getelementptr inbounds i32, i32* %439, i64 %1459
  %1461 = load i32, i32* %1460, align 4, !tbaa !404
  %1462 = insertelement <64 x i32> %1457, i32 %1461, i32 57
  %1463 = extractelement <64 x i32> %1172, i32 58
  %1464 = sext i32 %1463 to i64
  %1465 = getelementptr inbounds i32, i32* %439, i64 %1464
  %1466 = load i32, i32* %1465, align 4, !tbaa !404
  %1467 = insertelement <64 x i32> %1462, i32 %1466, i32 58
  %1468 = extractelement <64 x i32> %1172, i32 59
  %1469 = sext i32 %1468 to i64
  %1470 = getelementptr inbounds i32, i32* %439, i64 %1469
  %1471 = load i32, i32* %1470, align 4, !tbaa !404
  %1472 = insertelement <64 x i32> %1467, i32 %1471, i32 59
  %1473 = extractelement <64 x i32> %1172, i32 60
  %1474 = sext i32 %1473 to i64
  %1475 = getelementptr inbounds i32, i32* %439, i64 %1474
  %1476 = load i32, i32* %1475, align 4, !tbaa !404
  %1477 = insertelement <64 x i32> %1472, i32 %1476, i32 60
  %1478 = extractelement <64 x i32> %1172, i32 61
  %1479 = sext i32 %1478 to i64
  %1480 = getelementptr inbounds i32, i32* %439, i64 %1479
  %1481 = load i32, i32* %1480, align 4, !tbaa !404
  %1482 = insertelement <64 x i32> %1477, i32 %1481, i32 61
  %1483 = extractelement <64 x i32> %1172, i32 62
  %1484 = sext i32 %1483 to i64
  %1485 = getelementptr inbounds i32, i32* %439, i64 %1484
  %1486 = load i32, i32* %1485, align 4, !tbaa !404
  %1487 = insertelement <64 x i32> %1482, i32 %1486, i32 62
  %1488 = extractelement <64 x i32> %1172, i32 63
  %1489 = sext i32 %1488 to i64
  %1490 = getelementptr inbounds i32, i32* %439, i64 %1489
  %1491 = load i32, i32* %1490, align 4, !tbaa !404
  %1492 = insertelement <64 x i32> %1487, i32 %1491, i32 63
  %1493 = mul nsw <64 x i32> %1492, %1144
  %1494 = add nsw <64 x i32> %1493, %820
  %1495 = extractelement <64 x i32> %1494, i32 0
  store i32 %1495, i32* %475, align 4, !tbaa !399
  %1496 = extractelement <64 x i32> %1494, i32 1
  store i32 %1496, i32* %478, align 4, !tbaa !399
  %1497 = extractelement <64 x i32> %1494, i32 2
  store i32 %1497, i32* %481, align 4, !tbaa !399
  %1498 = extractelement <64 x i32> %1494, i32 3
  store i32 %1498, i32* %484, align 4, !tbaa !399
  %1499 = extractelement <64 x i32> %1494, i32 4
  store i32 %1499, i32* %487, align 4, !tbaa !399
  %1500 = extractelement <64 x i32> %1494, i32 5
  store i32 %1500, i32* %490, align 4, !tbaa !399
  %1501 = extractelement <64 x i32> %1494, i32 6
  store i32 %1501, i32* %493, align 4, !tbaa !399
  %1502 = extractelement <64 x i32> %1494, i32 7
  store i32 %1502, i32* %496, align 4, !tbaa !399
  %1503 = extractelement <64 x i32> %1494, i32 8
  store i32 %1503, i32* %499, align 4, !tbaa !399
  %1504 = extractelement <64 x i32> %1494, i32 9
  store i32 %1504, i32* %502, align 4, !tbaa !399
  %1505 = extractelement <64 x i32> %1494, i32 10
  store i32 %1505, i32* %505, align 4, !tbaa !399
  %1506 = extractelement <64 x i32> %1494, i32 11
  store i32 %1506, i32* %508, align 4, !tbaa !399
  %1507 = extractelement <64 x i32> %1494, i32 12
  store i32 %1507, i32* %511, align 4, !tbaa !399
  %1508 = extractelement <64 x i32> %1494, i32 13
  store i32 %1508, i32* %514, align 4, !tbaa !399
  %1509 = extractelement <64 x i32> %1494, i32 14
  store i32 %1509, i32* %517, align 4, !tbaa !399
  %1510 = extractelement <64 x i32> %1494, i32 15
  store i32 %1510, i32* %520, align 4, !tbaa !399
  %1511 = extractelement <64 x i32> %1494, i32 16
  store i32 %1511, i32* %523, align 4, !tbaa !399
  %1512 = extractelement <64 x i32> %1494, i32 17
  store i32 %1512, i32* %526, align 4, !tbaa !399
  %1513 = extractelement <64 x i32> %1494, i32 18
  store i32 %1513, i32* %529, align 4, !tbaa !399
  %1514 = extractelement <64 x i32> %1494, i32 19
  store i32 %1514, i32* %532, align 4, !tbaa !399
  %1515 = extractelement <64 x i32> %1494, i32 20
  store i32 %1515, i32* %535, align 4, !tbaa !399
  %1516 = extractelement <64 x i32> %1494, i32 21
  store i32 %1516, i32* %538, align 4, !tbaa !399
  %1517 = extractelement <64 x i32> %1494, i32 22
  store i32 %1517, i32* %541, align 4, !tbaa !399
  %1518 = extractelement <64 x i32> %1494, i32 23
  store i32 %1518, i32* %544, align 4, !tbaa !399
  %1519 = extractelement <64 x i32> %1494, i32 24
  store i32 %1519, i32* %547, align 4, !tbaa !399
  %1520 = extractelement <64 x i32> %1494, i32 25
  store i32 %1520, i32* %550, align 4, !tbaa !399
  %1521 = extractelement <64 x i32> %1494, i32 26
  store i32 %1521, i32* %553, align 4, !tbaa !399
  %1522 = extractelement <64 x i32> %1494, i32 27
  store i32 %1522, i32* %556, align 4, !tbaa !399
  %1523 = extractelement <64 x i32> %1494, i32 28
  store i32 %1523, i32* %559, align 4, !tbaa !399
  %1524 = extractelement <64 x i32> %1494, i32 29
  store i32 %1524, i32* %562, align 4, !tbaa !399
  %1525 = extractelement <64 x i32> %1494, i32 30
  store i32 %1525, i32* %565, align 4, !tbaa !399
  %1526 = extractelement <64 x i32> %1494, i32 31
  store i32 %1526, i32* %568, align 4, !tbaa !399
  %1527 = extractelement <64 x i32> %1494, i32 32
  store i32 %1527, i32* %571, align 4, !tbaa !399
  %1528 = extractelement <64 x i32> %1494, i32 33
  store i32 %1528, i32* %574, align 4, !tbaa !399
  %1529 = extractelement <64 x i32> %1494, i32 34
  store i32 %1529, i32* %577, align 4, !tbaa !399
  %1530 = extractelement <64 x i32> %1494, i32 35
  store i32 %1530, i32* %580, align 4, !tbaa !399
  %1531 = extractelement <64 x i32> %1494, i32 36
  store i32 %1531, i32* %583, align 4, !tbaa !399
  %1532 = extractelement <64 x i32> %1494, i32 37
  store i32 %1532, i32* %586, align 4, !tbaa !399
  %1533 = extractelement <64 x i32> %1494, i32 38
  store i32 %1533, i32* %589, align 4, !tbaa !399
  %1534 = extractelement <64 x i32> %1494, i32 39
  store i32 %1534, i32* %592, align 4, !tbaa !399
  %1535 = extractelement <64 x i32> %1494, i32 40
  store i32 %1535, i32* %595, align 4, !tbaa !399
  %1536 = extractelement <64 x i32> %1494, i32 41
  store i32 %1536, i32* %598, align 4, !tbaa !399
  %1537 = extractelement <64 x i32> %1494, i32 42
  store i32 %1537, i32* %601, align 4, !tbaa !399
  %1538 = extractelement <64 x i32> %1494, i32 43
  store i32 %1538, i32* %604, align 4, !tbaa !399
  %1539 = extractelement <64 x i32> %1494, i32 44
  store i32 %1539, i32* %607, align 4, !tbaa !399
  %1540 = extractelement <64 x i32> %1494, i32 45
  store i32 %1540, i32* %610, align 4, !tbaa !399
  %1541 = extractelement <64 x i32> %1494, i32 46
  store i32 %1541, i32* %613, align 4, !tbaa !399
  %1542 = extractelement <64 x i32> %1494, i32 47
  store i32 %1542, i32* %616, align 4, !tbaa !399
  %1543 = extractelement <64 x i32> %1494, i32 48
  store i32 %1543, i32* %619, align 4, !tbaa !399
  %1544 = extractelement <64 x i32> %1494, i32 49
  store i32 %1544, i32* %622, align 4, !tbaa !399
  %1545 = extractelement <64 x i32> %1494, i32 50
  store i32 %1545, i32* %625, align 4, !tbaa !399
  %1546 = extractelement <64 x i32> %1494, i32 51
  store i32 %1546, i32* %628, align 4, !tbaa !399
  %1547 = extractelement <64 x i32> %1494, i32 52
  store i32 %1547, i32* %631, align 4, !tbaa !399
  %1548 = extractelement <64 x i32> %1494, i32 53
  store i32 %1548, i32* %634, align 4, !tbaa !399
  %1549 = extractelement <64 x i32> %1494, i32 54
  store i32 %1549, i32* %637, align 4, !tbaa !399
  %1550 = extractelement <64 x i32> %1494, i32 55
  store i32 %1550, i32* %640, align 4, !tbaa !399
  %1551 = extractelement <64 x i32> %1494, i32 56
  store i32 %1551, i32* %643, align 4, !tbaa !399
  %1552 = extractelement <64 x i32> %1494, i32 57
  store i32 %1552, i32* %646, align 4, !tbaa !399
  %1553 = extractelement <64 x i32> %1494, i32 58
  store i32 %1553, i32* %649, align 4, !tbaa !399
  %1554 = extractelement <64 x i32> %1494, i32 59
  store i32 %1554, i32* %652, align 4, !tbaa !399
  %1555 = extractelement <64 x i32> %1494, i32 60
  store i32 %1555, i32* %655, align 4, !tbaa !399
  %1556 = extractelement <64 x i32> %1494, i32 61
  store i32 %1556, i32* %658, align 4, !tbaa !399
  %1557 = extractelement <64 x i32> %1494, i32 62
  store i32 %1557, i32* %661, align 4, !tbaa !399
  %1558 = extractelement <64 x i32> %1494, i32 63
  store i32 %1558, i32* %664, align 4, !tbaa !399
  %1559 = add nuw nsw i32 %"Output.s1.r10$x.us.us", 1
  %.not399.us.us = icmp eq i32 %1559, %12
  br i1 %.not399.us.us, label %"end for Output.s1.r10$x.loopexit.us.us", label %"for Output.s1.r10$x.us.us"

"end for Output.s1.r10$x.loopexit.us.us":         ; preds = %"for Output.s1.r10$x.us.us"
  %1560 = add nuw nsw i32 %"Output.s1.r10$y.us.us", 1
  %.not394.us.us = icmp eq i32 %1560, %15
  br i1 %.not394.us.us, label %"end for Output.s1.r10$y.loopexit.us", label %"for Output.s1.r10$y.us.us"

"end for Output.s1.r10$z":                        ; preds = %"end for Output.s1.r10$y.loopexit.us", %"for Output.s1.x.x.x.x"
  br i1 %440, label %"for Output.s1.r10$z.rebased.preheader", label %"end for Output.s1.r10$z.rebased", !prof !398

"for Output.s1.r10$z.rebased.preheader":          ; preds = %"end for Output.s1.r10$z"
  %1561 = insertelement <64 x i32> undef, i32 %t238, i32 0
  %1562 = shufflevector <64 x i32> %1561, <64 x i32> undef, <64 x i32> zeroinitializer
  %1563 = or <64 x i32> %1562, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  br i1 %brmerge930.demorgan, label %"for Output.s1.r10$z.rebased.preheader.split.us.split.us", label %"end for Output.s1.r10$z.rebased", !prof !406

"for Output.s1.r10$z.rebased.preheader.split.us.split.us": ; preds = %"for Output.s1.r10$z.rebased.preheader"
  %1564 = sdiv <64 x i32> %1563, %399
  %t183.us.us.us = and <64 x i32> %1564, %400
  %1565 = srem <64 x i32> %1563, %401
  %t184.us.us.us = and <64 x i32> %1565, %400
  %1566 = shufflevector <64 x i32> %t184.us.us.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1567 = shufflevector <64 x i32> %t184.us.us.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1568 = shufflevector <64 x i32> %t184.us.us.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %1569 = shufflevector <64 x i32> %t184.us.us.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %.lobit388.us.us.us = ashr <16 x i32> %1566, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit389.us.us.us = ashr <16 x i32> %1567, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit390.us.us.us = ashr <16 x i32> %1568, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit391.us.us.us = ashr <16 x i32> %1569, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %1570 = shufflevector <16 x i32> %.lobit388.us.us.us, <16 x i32> %.lobit389.us.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1571 = shufflevector <16 x i32> %.lobit390.us.us.us, <16 x i32> %.lobit391.us.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %t311.us.us.us = shufflevector <32 x i32> %1570, <32 x i32> %1571, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %1572 = sub nsw <64 x i32> %t184.us.us.us, %t311.us.us.us
  %1573 = sdiv <64 x i32> %1572, %404
  %1574 = and <64 x i32> %t311.us.us.us, %406
  %1575 = add nsw <64 x i32> %1574, %1573
  %t185.us.us.us = and <64 x i32> %1575, %407
  %1576 = srem <64 x i32> %1572, %408
  %1577 = and <64 x i32> %t311.us.us.us, %412
  %1578 = add nsw <64 x i32> %1577, %1576
  %t186.us.us.us = and <64 x i32> %1578, %407
  %1579 = add nsw <64 x i32> %t185.us.us.us, %414
  %1580 = mul nsw <64 x i32> %1579, %416
  %1581 = add nsw <64 x i32> %t183.us.us.us, %418
  %1582 = mul nsw <64 x i32> %1581, %420
  %1583 = add nsw <64 x i32> %1582, %422
  %1584 = add <64 x i32> %1583, %t186.us.us.us
  %t187.us.us.us = add <64 x i32> %1584, %1580
  %1585 = extractelement <64 x i32> %t187.us.us.us, i32 0
  %1586 = sext i32 %1585 to i64
  %1587 = getelementptr inbounds i32, i32* %423, i64 %1586
  %1588 = extractelement <64 x i32> %t187.us.us.us, i32 1
  %1589 = sext i32 %1588 to i64
  %1590 = getelementptr inbounds i32, i32* %423, i64 %1589
  %1591 = extractelement <64 x i32> %t187.us.us.us, i32 2
  %1592 = sext i32 %1591 to i64
  %1593 = getelementptr inbounds i32, i32* %423, i64 %1592
  %1594 = extractelement <64 x i32> %t187.us.us.us, i32 3
  %1595 = sext i32 %1594 to i64
  %1596 = getelementptr inbounds i32, i32* %423, i64 %1595
  %1597 = extractelement <64 x i32> %t187.us.us.us, i32 4
  %1598 = sext i32 %1597 to i64
  %1599 = getelementptr inbounds i32, i32* %423, i64 %1598
  %1600 = extractelement <64 x i32> %t187.us.us.us, i32 5
  %1601 = sext i32 %1600 to i64
  %1602 = getelementptr inbounds i32, i32* %423, i64 %1601
  %1603 = extractelement <64 x i32> %t187.us.us.us, i32 6
  %1604 = sext i32 %1603 to i64
  %1605 = getelementptr inbounds i32, i32* %423, i64 %1604
  %1606 = extractelement <64 x i32> %t187.us.us.us, i32 7
  %1607 = sext i32 %1606 to i64
  %1608 = getelementptr inbounds i32, i32* %423, i64 %1607
  %1609 = extractelement <64 x i32> %t187.us.us.us, i32 8
  %1610 = sext i32 %1609 to i64
  %1611 = getelementptr inbounds i32, i32* %423, i64 %1610
  %1612 = extractelement <64 x i32> %t187.us.us.us, i32 9
  %1613 = sext i32 %1612 to i64
  %1614 = getelementptr inbounds i32, i32* %423, i64 %1613
  %1615 = extractelement <64 x i32> %t187.us.us.us, i32 10
  %1616 = sext i32 %1615 to i64
  %1617 = getelementptr inbounds i32, i32* %423, i64 %1616
  %1618 = extractelement <64 x i32> %t187.us.us.us, i32 11
  %1619 = sext i32 %1618 to i64
  %1620 = getelementptr inbounds i32, i32* %423, i64 %1619
  %1621 = extractelement <64 x i32> %t187.us.us.us, i32 12
  %1622 = sext i32 %1621 to i64
  %1623 = getelementptr inbounds i32, i32* %423, i64 %1622
  %1624 = extractelement <64 x i32> %t187.us.us.us, i32 13
  %1625 = sext i32 %1624 to i64
  %1626 = getelementptr inbounds i32, i32* %423, i64 %1625
  %1627 = extractelement <64 x i32> %t187.us.us.us, i32 14
  %1628 = sext i32 %1627 to i64
  %1629 = getelementptr inbounds i32, i32* %423, i64 %1628
  %1630 = extractelement <64 x i32> %t187.us.us.us, i32 15
  %1631 = sext i32 %1630 to i64
  %1632 = getelementptr inbounds i32, i32* %423, i64 %1631
  %1633 = extractelement <64 x i32> %t187.us.us.us, i32 16
  %1634 = sext i32 %1633 to i64
  %1635 = getelementptr inbounds i32, i32* %423, i64 %1634
  %1636 = extractelement <64 x i32> %t187.us.us.us, i32 17
  %1637 = sext i32 %1636 to i64
  %1638 = getelementptr inbounds i32, i32* %423, i64 %1637
  %1639 = extractelement <64 x i32> %t187.us.us.us, i32 18
  %1640 = sext i32 %1639 to i64
  %1641 = getelementptr inbounds i32, i32* %423, i64 %1640
  %1642 = extractelement <64 x i32> %t187.us.us.us, i32 19
  %1643 = sext i32 %1642 to i64
  %1644 = getelementptr inbounds i32, i32* %423, i64 %1643
  %1645 = extractelement <64 x i32> %t187.us.us.us, i32 20
  %1646 = sext i32 %1645 to i64
  %1647 = getelementptr inbounds i32, i32* %423, i64 %1646
  %1648 = extractelement <64 x i32> %t187.us.us.us, i32 21
  %1649 = sext i32 %1648 to i64
  %1650 = getelementptr inbounds i32, i32* %423, i64 %1649
  %1651 = extractelement <64 x i32> %t187.us.us.us, i32 22
  %1652 = sext i32 %1651 to i64
  %1653 = getelementptr inbounds i32, i32* %423, i64 %1652
  %1654 = extractelement <64 x i32> %t187.us.us.us, i32 23
  %1655 = sext i32 %1654 to i64
  %1656 = getelementptr inbounds i32, i32* %423, i64 %1655
  %1657 = extractelement <64 x i32> %t187.us.us.us, i32 24
  %1658 = sext i32 %1657 to i64
  %1659 = getelementptr inbounds i32, i32* %423, i64 %1658
  %1660 = extractelement <64 x i32> %t187.us.us.us, i32 25
  %1661 = sext i32 %1660 to i64
  %1662 = getelementptr inbounds i32, i32* %423, i64 %1661
  %1663 = extractelement <64 x i32> %t187.us.us.us, i32 26
  %1664 = sext i32 %1663 to i64
  %1665 = getelementptr inbounds i32, i32* %423, i64 %1664
  %1666 = extractelement <64 x i32> %t187.us.us.us, i32 27
  %1667 = sext i32 %1666 to i64
  %1668 = getelementptr inbounds i32, i32* %423, i64 %1667
  %1669 = extractelement <64 x i32> %t187.us.us.us, i32 28
  %1670 = sext i32 %1669 to i64
  %1671 = getelementptr inbounds i32, i32* %423, i64 %1670
  %1672 = extractelement <64 x i32> %t187.us.us.us, i32 29
  %1673 = sext i32 %1672 to i64
  %1674 = getelementptr inbounds i32, i32* %423, i64 %1673
  %1675 = extractelement <64 x i32> %t187.us.us.us, i32 30
  %1676 = sext i32 %1675 to i64
  %1677 = getelementptr inbounds i32, i32* %423, i64 %1676
  %1678 = extractelement <64 x i32> %t187.us.us.us, i32 31
  %1679 = sext i32 %1678 to i64
  %1680 = getelementptr inbounds i32, i32* %423, i64 %1679
  %1681 = extractelement <64 x i32> %t187.us.us.us, i32 32
  %1682 = sext i32 %1681 to i64
  %1683 = getelementptr inbounds i32, i32* %423, i64 %1682
  %1684 = extractelement <64 x i32> %t187.us.us.us, i32 33
  %1685 = sext i32 %1684 to i64
  %1686 = getelementptr inbounds i32, i32* %423, i64 %1685
  %1687 = extractelement <64 x i32> %t187.us.us.us, i32 34
  %1688 = sext i32 %1687 to i64
  %1689 = getelementptr inbounds i32, i32* %423, i64 %1688
  %1690 = extractelement <64 x i32> %t187.us.us.us, i32 35
  %1691 = sext i32 %1690 to i64
  %1692 = getelementptr inbounds i32, i32* %423, i64 %1691
  %1693 = extractelement <64 x i32> %t187.us.us.us, i32 36
  %1694 = sext i32 %1693 to i64
  %1695 = getelementptr inbounds i32, i32* %423, i64 %1694
  %1696 = extractelement <64 x i32> %t187.us.us.us, i32 37
  %1697 = sext i32 %1696 to i64
  %1698 = getelementptr inbounds i32, i32* %423, i64 %1697
  %1699 = extractelement <64 x i32> %t187.us.us.us, i32 38
  %1700 = sext i32 %1699 to i64
  %1701 = getelementptr inbounds i32, i32* %423, i64 %1700
  %1702 = extractelement <64 x i32> %t187.us.us.us, i32 39
  %1703 = sext i32 %1702 to i64
  %1704 = getelementptr inbounds i32, i32* %423, i64 %1703
  %1705 = extractelement <64 x i32> %t187.us.us.us, i32 40
  %1706 = sext i32 %1705 to i64
  %1707 = getelementptr inbounds i32, i32* %423, i64 %1706
  %1708 = extractelement <64 x i32> %t187.us.us.us, i32 41
  %1709 = sext i32 %1708 to i64
  %1710 = getelementptr inbounds i32, i32* %423, i64 %1709
  %1711 = extractelement <64 x i32> %t187.us.us.us, i32 42
  %1712 = sext i32 %1711 to i64
  %1713 = getelementptr inbounds i32, i32* %423, i64 %1712
  %1714 = extractelement <64 x i32> %t187.us.us.us, i32 43
  %1715 = sext i32 %1714 to i64
  %1716 = getelementptr inbounds i32, i32* %423, i64 %1715
  %1717 = extractelement <64 x i32> %t187.us.us.us, i32 44
  %1718 = sext i32 %1717 to i64
  %1719 = getelementptr inbounds i32, i32* %423, i64 %1718
  %1720 = extractelement <64 x i32> %t187.us.us.us, i32 45
  %1721 = sext i32 %1720 to i64
  %1722 = getelementptr inbounds i32, i32* %423, i64 %1721
  %1723 = extractelement <64 x i32> %t187.us.us.us, i32 46
  %1724 = sext i32 %1723 to i64
  %1725 = getelementptr inbounds i32, i32* %423, i64 %1724
  %1726 = extractelement <64 x i32> %t187.us.us.us, i32 47
  %1727 = sext i32 %1726 to i64
  %1728 = getelementptr inbounds i32, i32* %423, i64 %1727
  %1729 = extractelement <64 x i32> %t187.us.us.us, i32 48
  %1730 = sext i32 %1729 to i64
  %1731 = getelementptr inbounds i32, i32* %423, i64 %1730
  %1732 = extractelement <64 x i32> %t187.us.us.us, i32 49
  %1733 = sext i32 %1732 to i64
  %1734 = getelementptr inbounds i32, i32* %423, i64 %1733
  %1735 = extractelement <64 x i32> %t187.us.us.us, i32 50
  %1736 = sext i32 %1735 to i64
  %1737 = getelementptr inbounds i32, i32* %423, i64 %1736
  %1738 = extractelement <64 x i32> %t187.us.us.us, i32 51
  %1739 = sext i32 %1738 to i64
  %1740 = getelementptr inbounds i32, i32* %423, i64 %1739
  %1741 = extractelement <64 x i32> %t187.us.us.us, i32 52
  %1742 = sext i32 %1741 to i64
  %1743 = getelementptr inbounds i32, i32* %423, i64 %1742
  %1744 = extractelement <64 x i32> %t187.us.us.us, i32 53
  %1745 = sext i32 %1744 to i64
  %1746 = getelementptr inbounds i32, i32* %423, i64 %1745
  %1747 = extractelement <64 x i32> %t187.us.us.us, i32 54
  %1748 = sext i32 %1747 to i64
  %1749 = getelementptr inbounds i32, i32* %423, i64 %1748
  %1750 = extractelement <64 x i32> %t187.us.us.us, i32 55
  %1751 = sext i32 %1750 to i64
  %1752 = getelementptr inbounds i32, i32* %423, i64 %1751
  %1753 = extractelement <64 x i32> %t187.us.us.us, i32 56
  %1754 = sext i32 %1753 to i64
  %1755 = getelementptr inbounds i32, i32* %423, i64 %1754
  %1756 = extractelement <64 x i32> %t187.us.us.us, i32 57
  %1757 = sext i32 %1756 to i64
  %1758 = getelementptr inbounds i32, i32* %423, i64 %1757
  %1759 = extractelement <64 x i32> %t187.us.us.us, i32 58
  %1760 = sext i32 %1759 to i64
  %1761 = getelementptr inbounds i32, i32* %423, i64 %1760
  %1762 = extractelement <64 x i32> %t187.us.us.us, i32 59
  %1763 = sext i32 %1762 to i64
  %1764 = getelementptr inbounds i32, i32* %423, i64 %1763
  %1765 = extractelement <64 x i32> %t187.us.us.us, i32 60
  %1766 = sext i32 %1765 to i64
  %1767 = getelementptr inbounds i32, i32* %423, i64 %1766
  %1768 = extractelement <64 x i32> %t187.us.us.us, i32 61
  %1769 = sext i32 %1768 to i64
  %1770 = getelementptr inbounds i32, i32* %423, i64 %1769
  %1771 = extractelement <64 x i32> %t187.us.us.us, i32 62
  %1772 = sext i32 %1771 to i64
  %1773 = getelementptr inbounds i32, i32* %423, i64 %1772
  %1774 = extractelement <64 x i32> %t187.us.us.us, i32 63
  %1775 = sext i32 %1774 to i64
  %1776 = getelementptr inbounds i32, i32* %423, i64 %1775
  %1777 = add nsw <64 x i32> %t183.us.us.us, %425
  %1778 = mul nsw <64 x i32> %1777, %427
  br label %"for Output.s1.r10$z.rebased.us.us"

"for Output.s1.r10$z.rebased.us.us":              ; preds = %"end for Output.s1.r10$y62.loopexit.split.us.us.us", %"for Output.s1.r10$z.rebased.preheader.split.us.split.us"
  %"Output.s1.r10$z.rebased.us.us" = phi i32 [ %2677, %"end for Output.s1.r10$y62.loopexit.split.us.us.us" ], [ 0, %"for Output.s1.r10$z.rebased.preheader.split.us.split.us" ]
  %1779 = add nsw i32 %t244, %"Output.s1.r10$z.rebased.us.us"
  %1780 = mul nsw i32 %1779, %35
  %t245.us.us = sub nsw i32 %1780, %t231
  %1781 = insertelement <64 x i32> undef, i32 %t245.us.us, i32 0
  %1782 = shufflevector <64 x i32> %1781, <64 x i32> undef, <64 x i32> zeroinitializer
  br label %"for Output.s1.r10$y61.us.us.us"

"for Output.s1.r10$y61.us.us.us":                 ; preds = %"end for Output.s1.r10$x65.loopexit.us.us.us", %"for Output.s1.r10$z.rebased.us.us"
  %"Output.s1.r10$y63.us.us.us" = phi i32 [ %2676, %"end for Output.s1.r10$x65.loopexit.us.us.us" ], [ 0, %"for Output.s1.r10$z.rebased.us.us" ]
  %t246.us.us.us = mul nsw i32 %"Output.s1.r10$y63.us.us.us", %16
  %t247.us.us.us = sub nsw i32 %92, %"Output.s1.r10$y63.us.us.us"
  %1783 = insertelement <64 x i32> undef, i32 %t247.us.us.us, i32 0
  %1784 = shufflevector <64 x i32> %1783, <64 x i32> undef, <64 x i32> zeroinitializer
  %a56.us.us.us = add nsw <64 x i32> %t185.us.us.us, %1784
  %1785 = shufflevector <64 x i32> %a56.us.us.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1786 = icmp sgt <16 x i32> %434, %1785
  %1787 = shufflevector <64 x i32> %a56.us.us.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1788 = icmp sgt <16 x i32> %434, %1787
  %1789 = shufflevector <64 x i32> %a56.us.us.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %1790 = icmp sgt <16 x i32> %434, %1789
  %1791 = shufflevector <64 x i32> %a56.us.us.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %1792 = icmp sgt <16 x i32> %434, %1791
  %1793 = select <16 x i1> %1786, <16 x i32> %1785, <16 x i32> %434
  %1794 = select <16 x i1> %1788, <16 x i32> %1787, <16 x i32> %434
  %1795 = select <16 x i1> %1790, <16 x i32> %1789, <16 x i32> %434
  %1796 = select <16 x i1> %1792, <16 x i32> %1791, <16 x i32> %434
  %1797 = icmp sgt <16 x i32> %1793, %436
  %1798 = icmp sgt <16 x i32> %1794, %436
  %1799 = icmp sgt <16 x i32> %1795, %436
  %1800 = icmp sgt <16 x i32> %1796, %436
  %1801 = select <16 x i1> %1797, <16 x i32> %1793, <16 x i32> %436
  %1802 = select <16 x i1> %1798, <16 x i32> %1794, <16 x i32> %436
  %1803 = select <16 x i1> %1799, <16 x i32> %1795, <16 x i32> %436
  %1804 = select <16 x i1> %1800, <16 x i32> %1796, <16 x i32> %436
  %1805 = shufflevector <16 x i32> %1801, <16 x i32> %1802, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1806 = shufflevector <16 x i32> %1803, <16 x i32> %1804, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1807 = shufflevector <32 x i32> %1805, <32 x i32> %1806, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %1808 = mul nsw <64 x i32> %1807, %438
  br label %"for Output.s1.r10$x64.us.us.us"

"for Output.s1.r10$x64.us.us.us":                 ; preds = %"for Output.s1.r10$x64.us.us.us", %"for Output.s1.r10$y61.us.us.us"
  %"Output.s1.r10$x66.us.us.us" = phi i32 [ %2675, %"for Output.s1.r10$x64.us.us.us" ], [ 0, %"for Output.s1.r10$y61.us.us.us" ]
  %1809 = load i32, i32* %1587, align 4, !tbaa !399
  %1810 = insertelement <64 x i32> undef, i32 %1809, i32 0
  %1811 = load i32, i32* %1590, align 4, !tbaa !399
  %1812 = insertelement <64 x i32> %1810, i32 %1811, i32 1
  %1813 = load i32, i32* %1593, align 4, !tbaa !399
  %1814 = insertelement <64 x i32> %1812, i32 %1813, i32 2
  %1815 = load i32, i32* %1596, align 4, !tbaa !399
  %1816 = insertelement <64 x i32> %1814, i32 %1815, i32 3
  %1817 = load i32, i32* %1599, align 4, !tbaa !399
  %1818 = insertelement <64 x i32> %1816, i32 %1817, i32 4
  %1819 = load i32, i32* %1602, align 4, !tbaa !399
  %1820 = insertelement <64 x i32> %1818, i32 %1819, i32 5
  %1821 = load i32, i32* %1605, align 4, !tbaa !399
  %1822 = insertelement <64 x i32> %1820, i32 %1821, i32 6
  %1823 = load i32, i32* %1608, align 4, !tbaa !399
  %1824 = insertelement <64 x i32> %1822, i32 %1823, i32 7
  %1825 = load i32, i32* %1611, align 4, !tbaa !399
  %1826 = insertelement <64 x i32> %1824, i32 %1825, i32 8
  %1827 = load i32, i32* %1614, align 4, !tbaa !399
  %1828 = insertelement <64 x i32> %1826, i32 %1827, i32 9
  %1829 = load i32, i32* %1617, align 4, !tbaa !399
  %1830 = insertelement <64 x i32> %1828, i32 %1829, i32 10
  %1831 = load i32, i32* %1620, align 4, !tbaa !399
  %1832 = insertelement <64 x i32> %1830, i32 %1831, i32 11
  %1833 = load i32, i32* %1623, align 4, !tbaa !399
  %1834 = insertelement <64 x i32> %1832, i32 %1833, i32 12
  %1835 = load i32, i32* %1626, align 4, !tbaa !399
  %1836 = insertelement <64 x i32> %1834, i32 %1835, i32 13
  %1837 = load i32, i32* %1629, align 4, !tbaa !399
  %1838 = insertelement <64 x i32> %1836, i32 %1837, i32 14
  %1839 = load i32, i32* %1632, align 4, !tbaa !399
  %1840 = insertelement <64 x i32> %1838, i32 %1839, i32 15
  %1841 = load i32, i32* %1635, align 4, !tbaa !399
  %1842 = insertelement <64 x i32> %1840, i32 %1841, i32 16
  %1843 = load i32, i32* %1638, align 4, !tbaa !399
  %1844 = insertelement <64 x i32> %1842, i32 %1843, i32 17
  %1845 = load i32, i32* %1641, align 4, !tbaa !399
  %1846 = insertelement <64 x i32> %1844, i32 %1845, i32 18
  %1847 = load i32, i32* %1644, align 4, !tbaa !399
  %1848 = insertelement <64 x i32> %1846, i32 %1847, i32 19
  %1849 = load i32, i32* %1647, align 4, !tbaa !399
  %1850 = insertelement <64 x i32> %1848, i32 %1849, i32 20
  %1851 = load i32, i32* %1650, align 4, !tbaa !399
  %1852 = insertelement <64 x i32> %1850, i32 %1851, i32 21
  %1853 = load i32, i32* %1653, align 4, !tbaa !399
  %1854 = insertelement <64 x i32> %1852, i32 %1853, i32 22
  %1855 = load i32, i32* %1656, align 4, !tbaa !399
  %1856 = insertelement <64 x i32> %1854, i32 %1855, i32 23
  %1857 = load i32, i32* %1659, align 4, !tbaa !399
  %1858 = insertelement <64 x i32> %1856, i32 %1857, i32 24
  %1859 = load i32, i32* %1662, align 4, !tbaa !399
  %1860 = insertelement <64 x i32> %1858, i32 %1859, i32 25
  %1861 = load i32, i32* %1665, align 4, !tbaa !399
  %1862 = insertelement <64 x i32> %1860, i32 %1861, i32 26
  %1863 = load i32, i32* %1668, align 4, !tbaa !399
  %1864 = insertelement <64 x i32> %1862, i32 %1863, i32 27
  %1865 = load i32, i32* %1671, align 4, !tbaa !399
  %1866 = insertelement <64 x i32> %1864, i32 %1865, i32 28
  %1867 = load i32, i32* %1674, align 4, !tbaa !399
  %1868 = insertelement <64 x i32> %1866, i32 %1867, i32 29
  %1869 = load i32, i32* %1677, align 4, !tbaa !399
  %1870 = insertelement <64 x i32> %1868, i32 %1869, i32 30
  %1871 = load i32, i32* %1680, align 4, !tbaa !399
  %1872 = insertelement <64 x i32> %1870, i32 %1871, i32 31
  %1873 = load i32, i32* %1683, align 4, !tbaa !399
  %1874 = insertelement <64 x i32> %1872, i32 %1873, i32 32
  %1875 = load i32, i32* %1686, align 4, !tbaa !399
  %1876 = insertelement <64 x i32> %1874, i32 %1875, i32 33
  %1877 = load i32, i32* %1689, align 4, !tbaa !399
  %1878 = insertelement <64 x i32> %1876, i32 %1877, i32 34
  %1879 = load i32, i32* %1692, align 4, !tbaa !399
  %1880 = insertelement <64 x i32> %1878, i32 %1879, i32 35
  %1881 = load i32, i32* %1695, align 4, !tbaa !399
  %1882 = insertelement <64 x i32> %1880, i32 %1881, i32 36
  %1883 = load i32, i32* %1698, align 4, !tbaa !399
  %1884 = insertelement <64 x i32> %1882, i32 %1883, i32 37
  %1885 = load i32, i32* %1701, align 4, !tbaa !399
  %1886 = insertelement <64 x i32> %1884, i32 %1885, i32 38
  %1887 = load i32, i32* %1704, align 4, !tbaa !399
  %1888 = insertelement <64 x i32> %1886, i32 %1887, i32 39
  %1889 = load i32, i32* %1707, align 4, !tbaa !399
  %1890 = insertelement <64 x i32> %1888, i32 %1889, i32 40
  %1891 = load i32, i32* %1710, align 4, !tbaa !399
  %1892 = insertelement <64 x i32> %1890, i32 %1891, i32 41
  %1893 = load i32, i32* %1713, align 4, !tbaa !399
  %1894 = insertelement <64 x i32> %1892, i32 %1893, i32 42
  %1895 = load i32, i32* %1716, align 4, !tbaa !399
  %1896 = insertelement <64 x i32> %1894, i32 %1895, i32 43
  %1897 = load i32, i32* %1719, align 4, !tbaa !399
  %1898 = insertelement <64 x i32> %1896, i32 %1897, i32 44
  %1899 = load i32, i32* %1722, align 4, !tbaa !399
  %1900 = insertelement <64 x i32> %1898, i32 %1899, i32 45
  %1901 = load i32, i32* %1725, align 4, !tbaa !399
  %1902 = insertelement <64 x i32> %1900, i32 %1901, i32 46
  %1903 = load i32, i32* %1728, align 4, !tbaa !399
  %1904 = insertelement <64 x i32> %1902, i32 %1903, i32 47
  %1905 = load i32, i32* %1731, align 4, !tbaa !399
  %1906 = insertelement <64 x i32> %1904, i32 %1905, i32 48
  %1907 = load i32, i32* %1734, align 4, !tbaa !399
  %1908 = insertelement <64 x i32> %1906, i32 %1907, i32 49
  %1909 = load i32, i32* %1737, align 4, !tbaa !399
  %1910 = insertelement <64 x i32> %1908, i32 %1909, i32 50
  %1911 = load i32, i32* %1740, align 4, !tbaa !399
  %1912 = insertelement <64 x i32> %1910, i32 %1911, i32 51
  %1913 = load i32, i32* %1743, align 4, !tbaa !399
  %1914 = insertelement <64 x i32> %1912, i32 %1913, i32 52
  %1915 = load i32, i32* %1746, align 4, !tbaa !399
  %1916 = insertelement <64 x i32> %1914, i32 %1915, i32 53
  %1917 = load i32, i32* %1749, align 4, !tbaa !399
  %1918 = insertelement <64 x i32> %1916, i32 %1917, i32 54
  %1919 = load i32, i32* %1752, align 4, !tbaa !399
  %1920 = insertelement <64 x i32> %1918, i32 %1919, i32 55
  %1921 = load i32, i32* %1755, align 4, !tbaa !399
  %1922 = insertelement <64 x i32> %1920, i32 %1921, i32 56
  %1923 = load i32, i32* %1758, align 4, !tbaa !399
  %1924 = insertelement <64 x i32> %1922, i32 %1923, i32 57
  %1925 = load i32, i32* %1761, align 4, !tbaa !399
  %1926 = insertelement <64 x i32> %1924, i32 %1925, i32 58
  %1927 = load i32, i32* %1764, align 4, !tbaa !399
  %1928 = insertelement <64 x i32> %1926, i32 %1927, i32 59
  %1929 = load i32, i32* %1767, align 4, !tbaa !399
  %1930 = insertelement <64 x i32> %1928, i32 %1929, i32 60
  %1931 = load i32, i32* %1770, align 4, !tbaa !399
  %1932 = insertelement <64 x i32> %1930, i32 %1931, i32 61
  %1933 = load i32, i32* %1773, align 4, !tbaa !399
  %1934 = insertelement <64 x i32> %1932, i32 %1933, i32 62
  %1935 = load i32, i32* %1776, align 4, !tbaa !399
  %1936 = insertelement <64 x i32> %1934, i32 %1935, i32 63
  %1937 = add nsw i32 %"Output.s1.r10$x66.us.us.us", %t246.us.us.us
  %1938 = insertelement <64 x i32> undef, i32 %1937, i32 0
  %1939 = shufflevector <64 x i32> %1938, <64 x i32> undef, <64 x i32> zeroinitializer
  %1940 = add nsw <64 x i32> %1778, %1939
  %1941 = extractelement <64 x i32> %1940, i32 0
  %1942 = sext i32 %1941 to i64
  %1943 = getelementptr inbounds i32, i32* %428, i64 %1942
  %1944 = load i32, i32* %1943, align 4, !tbaa !402
  %1945 = insertelement <64 x i32> undef, i32 %1944, i32 0
  %1946 = extractelement <64 x i32> %1940, i32 1
  %1947 = sext i32 %1946 to i64
  %1948 = getelementptr inbounds i32, i32* %428, i64 %1947
  %1949 = load i32, i32* %1948, align 4, !tbaa !402
  %1950 = insertelement <64 x i32> %1945, i32 %1949, i32 1
  %1951 = extractelement <64 x i32> %1940, i32 2
  %1952 = sext i32 %1951 to i64
  %1953 = getelementptr inbounds i32, i32* %428, i64 %1952
  %1954 = load i32, i32* %1953, align 4, !tbaa !402
  %1955 = insertelement <64 x i32> %1950, i32 %1954, i32 2
  %1956 = extractelement <64 x i32> %1940, i32 3
  %1957 = sext i32 %1956 to i64
  %1958 = getelementptr inbounds i32, i32* %428, i64 %1957
  %1959 = load i32, i32* %1958, align 4, !tbaa !402
  %1960 = insertelement <64 x i32> %1955, i32 %1959, i32 3
  %1961 = extractelement <64 x i32> %1940, i32 4
  %1962 = sext i32 %1961 to i64
  %1963 = getelementptr inbounds i32, i32* %428, i64 %1962
  %1964 = load i32, i32* %1963, align 4, !tbaa !402
  %1965 = insertelement <64 x i32> %1960, i32 %1964, i32 4
  %1966 = extractelement <64 x i32> %1940, i32 5
  %1967 = sext i32 %1966 to i64
  %1968 = getelementptr inbounds i32, i32* %428, i64 %1967
  %1969 = load i32, i32* %1968, align 4, !tbaa !402
  %1970 = insertelement <64 x i32> %1965, i32 %1969, i32 5
  %1971 = extractelement <64 x i32> %1940, i32 6
  %1972 = sext i32 %1971 to i64
  %1973 = getelementptr inbounds i32, i32* %428, i64 %1972
  %1974 = load i32, i32* %1973, align 4, !tbaa !402
  %1975 = insertelement <64 x i32> %1970, i32 %1974, i32 6
  %1976 = extractelement <64 x i32> %1940, i32 7
  %1977 = sext i32 %1976 to i64
  %1978 = getelementptr inbounds i32, i32* %428, i64 %1977
  %1979 = load i32, i32* %1978, align 4, !tbaa !402
  %1980 = insertelement <64 x i32> %1975, i32 %1979, i32 7
  %1981 = extractelement <64 x i32> %1940, i32 8
  %1982 = sext i32 %1981 to i64
  %1983 = getelementptr inbounds i32, i32* %428, i64 %1982
  %1984 = load i32, i32* %1983, align 4, !tbaa !402
  %1985 = insertelement <64 x i32> %1980, i32 %1984, i32 8
  %1986 = extractelement <64 x i32> %1940, i32 9
  %1987 = sext i32 %1986 to i64
  %1988 = getelementptr inbounds i32, i32* %428, i64 %1987
  %1989 = load i32, i32* %1988, align 4, !tbaa !402
  %1990 = insertelement <64 x i32> %1985, i32 %1989, i32 9
  %1991 = extractelement <64 x i32> %1940, i32 10
  %1992 = sext i32 %1991 to i64
  %1993 = getelementptr inbounds i32, i32* %428, i64 %1992
  %1994 = load i32, i32* %1993, align 4, !tbaa !402
  %1995 = insertelement <64 x i32> %1990, i32 %1994, i32 10
  %1996 = extractelement <64 x i32> %1940, i32 11
  %1997 = sext i32 %1996 to i64
  %1998 = getelementptr inbounds i32, i32* %428, i64 %1997
  %1999 = load i32, i32* %1998, align 4, !tbaa !402
  %2000 = insertelement <64 x i32> %1995, i32 %1999, i32 11
  %2001 = extractelement <64 x i32> %1940, i32 12
  %2002 = sext i32 %2001 to i64
  %2003 = getelementptr inbounds i32, i32* %428, i64 %2002
  %2004 = load i32, i32* %2003, align 4, !tbaa !402
  %2005 = insertelement <64 x i32> %2000, i32 %2004, i32 12
  %2006 = extractelement <64 x i32> %1940, i32 13
  %2007 = sext i32 %2006 to i64
  %2008 = getelementptr inbounds i32, i32* %428, i64 %2007
  %2009 = load i32, i32* %2008, align 4, !tbaa !402
  %2010 = insertelement <64 x i32> %2005, i32 %2009, i32 13
  %2011 = extractelement <64 x i32> %1940, i32 14
  %2012 = sext i32 %2011 to i64
  %2013 = getelementptr inbounds i32, i32* %428, i64 %2012
  %2014 = load i32, i32* %2013, align 4, !tbaa !402
  %2015 = insertelement <64 x i32> %2010, i32 %2014, i32 14
  %2016 = extractelement <64 x i32> %1940, i32 15
  %2017 = sext i32 %2016 to i64
  %2018 = getelementptr inbounds i32, i32* %428, i64 %2017
  %2019 = load i32, i32* %2018, align 4, !tbaa !402
  %2020 = insertelement <64 x i32> %2015, i32 %2019, i32 15
  %2021 = extractelement <64 x i32> %1940, i32 16
  %2022 = sext i32 %2021 to i64
  %2023 = getelementptr inbounds i32, i32* %428, i64 %2022
  %2024 = load i32, i32* %2023, align 4, !tbaa !402
  %2025 = insertelement <64 x i32> %2020, i32 %2024, i32 16
  %2026 = extractelement <64 x i32> %1940, i32 17
  %2027 = sext i32 %2026 to i64
  %2028 = getelementptr inbounds i32, i32* %428, i64 %2027
  %2029 = load i32, i32* %2028, align 4, !tbaa !402
  %2030 = insertelement <64 x i32> %2025, i32 %2029, i32 17
  %2031 = extractelement <64 x i32> %1940, i32 18
  %2032 = sext i32 %2031 to i64
  %2033 = getelementptr inbounds i32, i32* %428, i64 %2032
  %2034 = load i32, i32* %2033, align 4, !tbaa !402
  %2035 = insertelement <64 x i32> %2030, i32 %2034, i32 18
  %2036 = extractelement <64 x i32> %1940, i32 19
  %2037 = sext i32 %2036 to i64
  %2038 = getelementptr inbounds i32, i32* %428, i64 %2037
  %2039 = load i32, i32* %2038, align 4, !tbaa !402
  %2040 = insertelement <64 x i32> %2035, i32 %2039, i32 19
  %2041 = extractelement <64 x i32> %1940, i32 20
  %2042 = sext i32 %2041 to i64
  %2043 = getelementptr inbounds i32, i32* %428, i64 %2042
  %2044 = load i32, i32* %2043, align 4, !tbaa !402
  %2045 = insertelement <64 x i32> %2040, i32 %2044, i32 20
  %2046 = extractelement <64 x i32> %1940, i32 21
  %2047 = sext i32 %2046 to i64
  %2048 = getelementptr inbounds i32, i32* %428, i64 %2047
  %2049 = load i32, i32* %2048, align 4, !tbaa !402
  %2050 = insertelement <64 x i32> %2045, i32 %2049, i32 21
  %2051 = extractelement <64 x i32> %1940, i32 22
  %2052 = sext i32 %2051 to i64
  %2053 = getelementptr inbounds i32, i32* %428, i64 %2052
  %2054 = load i32, i32* %2053, align 4, !tbaa !402
  %2055 = insertelement <64 x i32> %2050, i32 %2054, i32 22
  %2056 = extractelement <64 x i32> %1940, i32 23
  %2057 = sext i32 %2056 to i64
  %2058 = getelementptr inbounds i32, i32* %428, i64 %2057
  %2059 = load i32, i32* %2058, align 4, !tbaa !402
  %2060 = insertelement <64 x i32> %2055, i32 %2059, i32 23
  %2061 = extractelement <64 x i32> %1940, i32 24
  %2062 = sext i32 %2061 to i64
  %2063 = getelementptr inbounds i32, i32* %428, i64 %2062
  %2064 = load i32, i32* %2063, align 4, !tbaa !402
  %2065 = insertelement <64 x i32> %2060, i32 %2064, i32 24
  %2066 = extractelement <64 x i32> %1940, i32 25
  %2067 = sext i32 %2066 to i64
  %2068 = getelementptr inbounds i32, i32* %428, i64 %2067
  %2069 = load i32, i32* %2068, align 4, !tbaa !402
  %2070 = insertelement <64 x i32> %2065, i32 %2069, i32 25
  %2071 = extractelement <64 x i32> %1940, i32 26
  %2072 = sext i32 %2071 to i64
  %2073 = getelementptr inbounds i32, i32* %428, i64 %2072
  %2074 = load i32, i32* %2073, align 4, !tbaa !402
  %2075 = insertelement <64 x i32> %2070, i32 %2074, i32 26
  %2076 = extractelement <64 x i32> %1940, i32 27
  %2077 = sext i32 %2076 to i64
  %2078 = getelementptr inbounds i32, i32* %428, i64 %2077
  %2079 = load i32, i32* %2078, align 4, !tbaa !402
  %2080 = insertelement <64 x i32> %2075, i32 %2079, i32 27
  %2081 = extractelement <64 x i32> %1940, i32 28
  %2082 = sext i32 %2081 to i64
  %2083 = getelementptr inbounds i32, i32* %428, i64 %2082
  %2084 = load i32, i32* %2083, align 4, !tbaa !402
  %2085 = insertelement <64 x i32> %2080, i32 %2084, i32 28
  %2086 = extractelement <64 x i32> %1940, i32 29
  %2087 = sext i32 %2086 to i64
  %2088 = getelementptr inbounds i32, i32* %428, i64 %2087
  %2089 = load i32, i32* %2088, align 4, !tbaa !402
  %2090 = insertelement <64 x i32> %2085, i32 %2089, i32 29
  %2091 = extractelement <64 x i32> %1940, i32 30
  %2092 = sext i32 %2091 to i64
  %2093 = getelementptr inbounds i32, i32* %428, i64 %2092
  %2094 = load i32, i32* %2093, align 4, !tbaa !402
  %2095 = insertelement <64 x i32> %2090, i32 %2094, i32 30
  %2096 = extractelement <64 x i32> %1940, i32 31
  %2097 = sext i32 %2096 to i64
  %2098 = getelementptr inbounds i32, i32* %428, i64 %2097
  %2099 = load i32, i32* %2098, align 4, !tbaa !402
  %2100 = insertelement <64 x i32> %2095, i32 %2099, i32 31
  %2101 = extractelement <64 x i32> %1940, i32 32
  %2102 = sext i32 %2101 to i64
  %2103 = getelementptr inbounds i32, i32* %428, i64 %2102
  %2104 = load i32, i32* %2103, align 4, !tbaa !402
  %2105 = insertelement <64 x i32> %2100, i32 %2104, i32 32
  %2106 = extractelement <64 x i32> %1940, i32 33
  %2107 = sext i32 %2106 to i64
  %2108 = getelementptr inbounds i32, i32* %428, i64 %2107
  %2109 = load i32, i32* %2108, align 4, !tbaa !402
  %2110 = insertelement <64 x i32> %2105, i32 %2109, i32 33
  %2111 = extractelement <64 x i32> %1940, i32 34
  %2112 = sext i32 %2111 to i64
  %2113 = getelementptr inbounds i32, i32* %428, i64 %2112
  %2114 = load i32, i32* %2113, align 4, !tbaa !402
  %2115 = insertelement <64 x i32> %2110, i32 %2114, i32 34
  %2116 = extractelement <64 x i32> %1940, i32 35
  %2117 = sext i32 %2116 to i64
  %2118 = getelementptr inbounds i32, i32* %428, i64 %2117
  %2119 = load i32, i32* %2118, align 4, !tbaa !402
  %2120 = insertelement <64 x i32> %2115, i32 %2119, i32 35
  %2121 = extractelement <64 x i32> %1940, i32 36
  %2122 = sext i32 %2121 to i64
  %2123 = getelementptr inbounds i32, i32* %428, i64 %2122
  %2124 = load i32, i32* %2123, align 4, !tbaa !402
  %2125 = insertelement <64 x i32> %2120, i32 %2124, i32 36
  %2126 = extractelement <64 x i32> %1940, i32 37
  %2127 = sext i32 %2126 to i64
  %2128 = getelementptr inbounds i32, i32* %428, i64 %2127
  %2129 = load i32, i32* %2128, align 4, !tbaa !402
  %2130 = insertelement <64 x i32> %2125, i32 %2129, i32 37
  %2131 = extractelement <64 x i32> %1940, i32 38
  %2132 = sext i32 %2131 to i64
  %2133 = getelementptr inbounds i32, i32* %428, i64 %2132
  %2134 = load i32, i32* %2133, align 4, !tbaa !402
  %2135 = insertelement <64 x i32> %2130, i32 %2134, i32 38
  %2136 = extractelement <64 x i32> %1940, i32 39
  %2137 = sext i32 %2136 to i64
  %2138 = getelementptr inbounds i32, i32* %428, i64 %2137
  %2139 = load i32, i32* %2138, align 4, !tbaa !402
  %2140 = insertelement <64 x i32> %2135, i32 %2139, i32 39
  %2141 = extractelement <64 x i32> %1940, i32 40
  %2142 = sext i32 %2141 to i64
  %2143 = getelementptr inbounds i32, i32* %428, i64 %2142
  %2144 = load i32, i32* %2143, align 4, !tbaa !402
  %2145 = insertelement <64 x i32> %2140, i32 %2144, i32 40
  %2146 = extractelement <64 x i32> %1940, i32 41
  %2147 = sext i32 %2146 to i64
  %2148 = getelementptr inbounds i32, i32* %428, i64 %2147
  %2149 = load i32, i32* %2148, align 4, !tbaa !402
  %2150 = insertelement <64 x i32> %2145, i32 %2149, i32 41
  %2151 = extractelement <64 x i32> %1940, i32 42
  %2152 = sext i32 %2151 to i64
  %2153 = getelementptr inbounds i32, i32* %428, i64 %2152
  %2154 = load i32, i32* %2153, align 4, !tbaa !402
  %2155 = insertelement <64 x i32> %2150, i32 %2154, i32 42
  %2156 = extractelement <64 x i32> %1940, i32 43
  %2157 = sext i32 %2156 to i64
  %2158 = getelementptr inbounds i32, i32* %428, i64 %2157
  %2159 = load i32, i32* %2158, align 4, !tbaa !402
  %2160 = insertelement <64 x i32> %2155, i32 %2159, i32 43
  %2161 = extractelement <64 x i32> %1940, i32 44
  %2162 = sext i32 %2161 to i64
  %2163 = getelementptr inbounds i32, i32* %428, i64 %2162
  %2164 = load i32, i32* %2163, align 4, !tbaa !402
  %2165 = insertelement <64 x i32> %2160, i32 %2164, i32 44
  %2166 = extractelement <64 x i32> %1940, i32 45
  %2167 = sext i32 %2166 to i64
  %2168 = getelementptr inbounds i32, i32* %428, i64 %2167
  %2169 = load i32, i32* %2168, align 4, !tbaa !402
  %2170 = insertelement <64 x i32> %2165, i32 %2169, i32 45
  %2171 = extractelement <64 x i32> %1940, i32 46
  %2172 = sext i32 %2171 to i64
  %2173 = getelementptr inbounds i32, i32* %428, i64 %2172
  %2174 = load i32, i32* %2173, align 4, !tbaa !402
  %2175 = insertelement <64 x i32> %2170, i32 %2174, i32 46
  %2176 = extractelement <64 x i32> %1940, i32 47
  %2177 = sext i32 %2176 to i64
  %2178 = getelementptr inbounds i32, i32* %428, i64 %2177
  %2179 = load i32, i32* %2178, align 4, !tbaa !402
  %2180 = insertelement <64 x i32> %2175, i32 %2179, i32 47
  %2181 = extractelement <64 x i32> %1940, i32 48
  %2182 = sext i32 %2181 to i64
  %2183 = getelementptr inbounds i32, i32* %428, i64 %2182
  %2184 = load i32, i32* %2183, align 4, !tbaa !402
  %2185 = insertelement <64 x i32> %2180, i32 %2184, i32 48
  %2186 = extractelement <64 x i32> %1940, i32 49
  %2187 = sext i32 %2186 to i64
  %2188 = getelementptr inbounds i32, i32* %428, i64 %2187
  %2189 = load i32, i32* %2188, align 4, !tbaa !402
  %2190 = insertelement <64 x i32> %2185, i32 %2189, i32 49
  %2191 = extractelement <64 x i32> %1940, i32 50
  %2192 = sext i32 %2191 to i64
  %2193 = getelementptr inbounds i32, i32* %428, i64 %2192
  %2194 = load i32, i32* %2193, align 4, !tbaa !402
  %2195 = insertelement <64 x i32> %2190, i32 %2194, i32 50
  %2196 = extractelement <64 x i32> %1940, i32 51
  %2197 = sext i32 %2196 to i64
  %2198 = getelementptr inbounds i32, i32* %428, i64 %2197
  %2199 = load i32, i32* %2198, align 4, !tbaa !402
  %2200 = insertelement <64 x i32> %2195, i32 %2199, i32 51
  %2201 = extractelement <64 x i32> %1940, i32 52
  %2202 = sext i32 %2201 to i64
  %2203 = getelementptr inbounds i32, i32* %428, i64 %2202
  %2204 = load i32, i32* %2203, align 4, !tbaa !402
  %2205 = insertelement <64 x i32> %2200, i32 %2204, i32 52
  %2206 = extractelement <64 x i32> %1940, i32 53
  %2207 = sext i32 %2206 to i64
  %2208 = getelementptr inbounds i32, i32* %428, i64 %2207
  %2209 = load i32, i32* %2208, align 4, !tbaa !402
  %2210 = insertelement <64 x i32> %2205, i32 %2209, i32 53
  %2211 = extractelement <64 x i32> %1940, i32 54
  %2212 = sext i32 %2211 to i64
  %2213 = getelementptr inbounds i32, i32* %428, i64 %2212
  %2214 = load i32, i32* %2213, align 4, !tbaa !402
  %2215 = insertelement <64 x i32> %2210, i32 %2214, i32 54
  %2216 = extractelement <64 x i32> %1940, i32 55
  %2217 = sext i32 %2216 to i64
  %2218 = getelementptr inbounds i32, i32* %428, i64 %2217
  %2219 = load i32, i32* %2218, align 4, !tbaa !402
  %2220 = insertelement <64 x i32> %2215, i32 %2219, i32 55
  %2221 = extractelement <64 x i32> %1940, i32 56
  %2222 = sext i32 %2221 to i64
  %2223 = getelementptr inbounds i32, i32* %428, i64 %2222
  %2224 = load i32, i32* %2223, align 4, !tbaa !402
  %2225 = insertelement <64 x i32> %2220, i32 %2224, i32 56
  %2226 = extractelement <64 x i32> %1940, i32 57
  %2227 = sext i32 %2226 to i64
  %2228 = getelementptr inbounds i32, i32* %428, i64 %2227
  %2229 = load i32, i32* %2228, align 4, !tbaa !402
  %2230 = insertelement <64 x i32> %2225, i32 %2229, i32 57
  %2231 = extractelement <64 x i32> %1940, i32 58
  %2232 = sext i32 %2231 to i64
  %2233 = getelementptr inbounds i32, i32* %428, i64 %2232
  %2234 = load i32, i32* %2233, align 4, !tbaa !402
  %2235 = insertelement <64 x i32> %2230, i32 %2234, i32 58
  %2236 = extractelement <64 x i32> %1940, i32 59
  %2237 = sext i32 %2236 to i64
  %2238 = getelementptr inbounds i32, i32* %428, i64 %2237
  %2239 = load i32, i32* %2238, align 4, !tbaa !402
  %2240 = insertelement <64 x i32> %2235, i32 %2239, i32 59
  %2241 = extractelement <64 x i32> %1940, i32 60
  %2242 = sext i32 %2241 to i64
  %2243 = getelementptr inbounds i32, i32* %428, i64 %2242
  %2244 = load i32, i32* %2243, align 4, !tbaa !402
  %2245 = insertelement <64 x i32> %2240, i32 %2244, i32 60
  %2246 = extractelement <64 x i32> %1940, i32 61
  %2247 = sext i32 %2246 to i64
  %2248 = getelementptr inbounds i32, i32* %428, i64 %2247
  %2249 = load i32, i32* %2248, align 4, !tbaa !402
  %2250 = insertelement <64 x i32> %2245, i32 %2249, i32 61
  %2251 = extractelement <64 x i32> %1940, i32 62
  %2252 = sext i32 %2251 to i64
  %2253 = getelementptr inbounds i32, i32* %428, i64 %2252
  %2254 = load i32, i32* %2253, align 4, !tbaa !402
  %2255 = insertelement <64 x i32> %2250, i32 %2254, i32 62
  %2256 = extractelement <64 x i32> %1940, i32 63
  %2257 = sext i32 %2256 to i64
  %2258 = getelementptr inbounds i32, i32* %428, i64 %2257
  %2259 = load i32, i32* %2258, align 4, !tbaa !402
  %2260 = insertelement <64 x i32> %2255, i32 %2259, i32 63
  %2261 = sub nsw i32 %72, %"Output.s1.r10$x66.us.us.us"
  %2262 = insertelement <64 x i32> undef, i32 %2261, i32 0
  %2263 = shufflevector <64 x i32> %2262, <64 x i32> undef, <64 x i32> zeroinitializer
  %a54.us.us.us = add nsw <64 x i32> %t186.us.us.us, %2263
  %2264 = shufflevector <64 x i32> %a54.us.us.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2265 = icmp sgt <16 x i32> %430, %2264
  %2266 = shufflevector <64 x i32> %a54.us.us.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2267 = icmp sgt <16 x i32> %430, %2266
  %2268 = shufflevector <64 x i32> %a54.us.us.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %2269 = icmp sgt <16 x i32> %430, %2268
  %2270 = shufflevector <64 x i32> %a54.us.us.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %2271 = icmp sgt <16 x i32> %430, %2270
  %2272 = select <16 x i1> %2265, <16 x i32> %2264, <16 x i32> %430
  %2273 = select <16 x i1> %2267, <16 x i32> %2266, <16 x i32> %430
  %2274 = select <16 x i1> %2269, <16 x i32> %2268, <16 x i32> %430
  %2275 = select <16 x i1> %2271, <16 x i32> %2270, <16 x i32> %430
  %2276 = icmp sgt <16 x i32> %2272, %432
  %2277 = icmp sgt <16 x i32> %2273, %432
  %2278 = icmp sgt <16 x i32> %2274, %432
  %2279 = icmp sgt <16 x i32> %2275, %432
  %2280 = select <16 x i1> %2276, <16 x i32> %2272, <16 x i32> %432
  %2281 = select <16 x i1> %2277, <16 x i32> %2273, <16 x i32> %432
  %2282 = select <16 x i1> %2278, <16 x i32> %2274, <16 x i32> %432
  %2283 = select <16 x i1> %2279, <16 x i32> %2275, <16 x i32> %432
  %2284 = shufflevector <16 x i32> %2280, <16 x i32> %2281, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2285 = shufflevector <16 x i32> %2282, <16 x i32> %2283, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2286 = shufflevector <32 x i32> %2284, <32 x i32> %2285, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %2287 = add <64 x i32> %2286, %1782
  %2288 = add <64 x i32> %2287, %1808
  %2289 = extractelement <64 x i32> %2288, i32 0
  %2290 = sext i32 %2289 to i64
  %2291 = getelementptr inbounds i32, i32* %439, i64 %2290
  %2292 = load i32, i32* %2291, align 4, !tbaa !404
  %2293 = insertelement <64 x i32> undef, i32 %2292, i32 0
  %2294 = extractelement <64 x i32> %2288, i32 1
  %2295 = sext i32 %2294 to i64
  %2296 = getelementptr inbounds i32, i32* %439, i64 %2295
  %2297 = load i32, i32* %2296, align 4, !tbaa !404
  %2298 = insertelement <64 x i32> %2293, i32 %2297, i32 1
  %2299 = extractelement <64 x i32> %2288, i32 2
  %2300 = sext i32 %2299 to i64
  %2301 = getelementptr inbounds i32, i32* %439, i64 %2300
  %2302 = load i32, i32* %2301, align 4, !tbaa !404
  %2303 = insertelement <64 x i32> %2298, i32 %2302, i32 2
  %2304 = extractelement <64 x i32> %2288, i32 3
  %2305 = sext i32 %2304 to i64
  %2306 = getelementptr inbounds i32, i32* %439, i64 %2305
  %2307 = load i32, i32* %2306, align 4, !tbaa !404
  %2308 = insertelement <64 x i32> %2303, i32 %2307, i32 3
  %2309 = extractelement <64 x i32> %2288, i32 4
  %2310 = sext i32 %2309 to i64
  %2311 = getelementptr inbounds i32, i32* %439, i64 %2310
  %2312 = load i32, i32* %2311, align 4, !tbaa !404
  %2313 = insertelement <64 x i32> %2308, i32 %2312, i32 4
  %2314 = extractelement <64 x i32> %2288, i32 5
  %2315 = sext i32 %2314 to i64
  %2316 = getelementptr inbounds i32, i32* %439, i64 %2315
  %2317 = load i32, i32* %2316, align 4, !tbaa !404
  %2318 = insertelement <64 x i32> %2313, i32 %2317, i32 5
  %2319 = extractelement <64 x i32> %2288, i32 6
  %2320 = sext i32 %2319 to i64
  %2321 = getelementptr inbounds i32, i32* %439, i64 %2320
  %2322 = load i32, i32* %2321, align 4, !tbaa !404
  %2323 = insertelement <64 x i32> %2318, i32 %2322, i32 6
  %2324 = extractelement <64 x i32> %2288, i32 7
  %2325 = sext i32 %2324 to i64
  %2326 = getelementptr inbounds i32, i32* %439, i64 %2325
  %2327 = load i32, i32* %2326, align 4, !tbaa !404
  %2328 = insertelement <64 x i32> %2323, i32 %2327, i32 7
  %2329 = extractelement <64 x i32> %2288, i32 8
  %2330 = sext i32 %2329 to i64
  %2331 = getelementptr inbounds i32, i32* %439, i64 %2330
  %2332 = load i32, i32* %2331, align 4, !tbaa !404
  %2333 = insertelement <64 x i32> %2328, i32 %2332, i32 8
  %2334 = extractelement <64 x i32> %2288, i32 9
  %2335 = sext i32 %2334 to i64
  %2336 = getelementptr inbounds i32, i32* %439, i64 %2335
  %2337 = load i32, i32* %2336, align 4, !tbaa !404
  %2338 = insertelement <64 x i32> %2333, i32 %2337, i32 9
  %2339 = extractelement <64 x i32> %2288, i32 10
  %2340 = sext i32 %2339 to i64
  %2341 = getelementptr inbounds i32, i32* %439, i64 %2340
  %2342 = load i32, i32* %2341, align 4, !tbaa !404
  %2343 = insertelement <64 x i32> %2338, i32 %2342, i32 10
  %2344 = extractelement <64 x i32> %2288, i32 11
  %2345 = sext i32 %2344 to i64
  %2346 = getelementptr inbounds i32, i32* %439, i64 %2345
  %2347 = load i32, i32* %2346, align 4, !tbaa !404
  %2348 = insertelement <64 x i32> %2343, i32 %2347, i32 11
  %2349 = extractelement <64 x i32> %2288, i32 12
  %2350 = sext i32 %2349 to i64
  %2351 = getelementptr inbounds i32, i32* %439, i64 %2350
  %2352 = load i32, i32* %2351, align 4, !tbaa !404
  %2353 = insertelement <64 x i32> %2348, i32 %2352, i32 12
  %2354 = extractelement <64 x i32> %2288, i32 13
  %2355 = sext i32 %2354 to i64
  %2356 = getelementptr inbounds i32, i32* %439, i64 %2355
  %2357 = load i32, i32* %2356, align 4, !tbaa !404
  %2358 = insertelement <64 x i32> %2353, i32 %2357, i32 13
  %2359 = extractelement <64 x i32> %2288, i32 14
  %2360 = sext i32 %2359 to i64
  %2361 = getelementptr inbounds i32, i32* %439, i64 %2360
  %2362 = load i32, i32* %2361, align 4, !tbaa !404
  %2363 = insertelement <64 x i32> %2358, i32 %2362, i32 14
  %2364 = extractelement <64 x i32> %2288, i32 15
  %2365 = sext i32 %2364 to i64
  %2366 = getelementptr inbounds i32, i32* %439, i64 %2365
  %2367 = load i32, i32* %2366, align 4, !tbaa !404
  %2368 = insertelement <64 x i32> %2363, i32 %2367, i32 15
  %2369 = extractelement <64 x i32> %2288, i32 16
  %2370 = sext i32 %2369 to i64
  %2371 = getelementptr inbounds i32, i32* %439, i64 %2370
  %2372 = load i32, i32* %2371, align 4, !tbaa !404
  %2373 = insertelement <64 x i32> %2368, i32 %2372, i32 16
  %2374 = extractelement <64 x i32> %2288, i32 17
  %2375 = sext i32 %2374 to i64
  %2376 = getelementptr inbounds i32, i32* %439, i64 %2375
  %2377 = load i32, i32* %2376, align 4, !tbaa !404
  %2378 = insertelement <64 x i32> %2373, i32 %2377, i32 17
  %2379 = extractelement <64 x i32> %2288, i32 18
  %2380 = sext i32 %2379 to i64
  %2381 = getelementptr inbounds i32, i32* %439, i64 %2380
  %2382 = load i32, i32* %2381, align 4, !tbaa !404
  %2383 = insertelement <64 x i32> %2378, i32 %2382, i32 18
  %2384 = extractelement <64 x i32> %2288, i32 19
  %2385 = sext i32 %2384 to i64
  %2386 = getelementptr inbounds i32, i32* %439, i64 %2385
  %2387 = load i32, i32* %2386, align 4, !tbaa !404
  %2388 = insertelement <64 x i32> %2383, i32 %2387, i32 19
  %2389 = extractelement <64 x i32> %2288, i32 20
  %2390 = sext i32 %2389 to i64
  %2391 = getelementptr inbounds i32, i32* %439, i64 %2390
  %2392 = load i32, i32* %2391, align 4, !tbaa !404
  %2393 = insertelement <64 x i32> %2388, i32 %2392, i32 20
  %2394 = extractelement <64 x i32> %2288, i32 21
  %2395 = sext i32 %2394 to i64
  %2396 = getelementptr inbounds i32, i32* %439, i64 %2395
  %2397 = load i32, i32* %2396, align 4, !tbaa !404
  %2398 = insertelement <64 x i32> %2393, i32 %2397, i32 21
  %2399 = extractelement <64 x i32> %2288, i32 22
  %2400 = sext i32 %2399 to i64
  %2401 = getelementptr inbounds i32, i32* %439, i64 %2400
  %2402 = load i32, i32* %2401, align 4, !tbaa !404
  %2403 = insertelement <64 x i32> %2398, i32 %2402, i32 22
  %2404 = extractelement <64 x i32> %2288, i32 23
  %2405 = sext i32 %2404 to i64
  %2406 = getelementptr inbounds i32, i32* %439, i64 %2405
  %2407 = load i32, i32* %2406, align 4, !tbaa !404
  %2408 = insertelement <64 x i32> %2403, i32 %2407, i32 23
  %2409 = extractelement <64 x i32> %2288, i32 24
  %2410 = sext i32 %2409 to i64
  %2411 = getelementptr inbounds i32, i32* %439, i64 %2410
  %2412 = load i32, i32* %2411, align 4, !tbaa !404
  %2413 = insertelement <64 x i32> %2408, i32 %2412, i32 24
  %2414 = extractelement <64 x i32> %2288, i32 25
  %2415 = sext i32 %2414 to i64
  %2416 = getelementptr inbounds i32, i32* %439, i64 %2415
  %2417 = load i32, i32* %2416, align 4, !tbaa !404
  %2418 = insertelement <64 x i32> %2413, i32 %2417, i32 25
  %2419 = extractelement <64 x i32> %2288, i32 26
  %2420 = sext i32 %2419 to i64
  %2421 = getelementptr inbounds i32, i32* %439, i64 %2420
  %2422 = load i32, i32* %2421, align 4, !tbaa !404
  %2423 = insertelement <64 x i32> %2418, i32 %2422, i32 26
  %2424 = extractelement <64 x i32> %2288, i32 27
  %2425 = sext i32 %2424 to i64
  %2426 = getelementptr inbounds i32, i32* %439, i64 %2425
  %2427 = load i32, i32* %2426, align 4, !tbaa !404
  %2428 = insertelement <64 x i32> %2423, i32 %2427, i32 27
  %2429 = extractelement <64 x i32> %2288, i32 28
  %2430 = sext i32 %2429 to i64
  %2431 = getelementptr inbounds i32, i32* %439, i64 %2430
  %2432 = load i32, i32* %2431, align 4, !tbaa !404
  %2433 = insertelement <64 x i32> %2428, i32 %2432, i32 28
  %2434 = extractelement <64 x i32> %2288, i32 29
  %2435 = sext i32 %2434 to i64
  %2436 = getelementptr inbounds i32, i32* %439, i64 %2435
  %2437 = load i32, i32* %2436, align 4, !tbaa !404
  %2438 = insertelement <64 x i32> %2433, i32 %2437, i32 29
  %2439 = extractelement <64 x i32> %2288, i32 30
  %2440 = sext i32 %2439 to i64
  %2441 = getelementptr inbounds i32, i32* %439, i64 %2440
  %2442 = load i32, i32* %2441, align 4, !tbaa !404
  %2443 = insertelement <64 x i32> %2438, i32 %2442, i32 30
  %2444 = extractelement <64 x i32> %2288, i32 31
  %2445 = sext i32 %2444 to i64
  %2446 = getelementptr inbounds i32, i32* %439, i64 %2445
  %2447 = load i32, i32* %2446, align 4, !tbaa !404
  %2448 = insertelement <64 x i32> %2443, i32 %2447, i32 31
  %2449 = extractelement <64 x i32> %2288, i32 32
  %2450 = sext i32 %2449 to i64
  %2451 = getelementptr inbounds i32, i32* %439, i64 %2450
  %2452 = load i32, i32* %2451, align 4, !tbaa !404
  %2453 = insertelement <64 x i32> %2448, i32 %2452, i32 32
  %2454 = extractelement <64 x i32> %2288, i32 33
  %2455 = sext i32 %2454 to i64
  %2456 = getelementptr inbounds i32, i32* %439, i64 %2455
  %2457 = load i32, i32* %2456, align 4, !tbaa !404
  %2458 = insertelement <64 x i32> %2453, i32 %2457, i32 33
  %2459 = extractelement <64 x i32> %2288, i32 34
  %2460 = sext i32 %2459 to i64
  %2461 = getelementptr inbounds i32, i32* %439, i64 %2460
  %2462 = load i32, i32* %2461, align 4, !tbaa !404
  %2463 = insertelement <64 x i32> %2458, i32 %2462, i32 34
  %2464 = extractelement <64 x i32> %2288, i32 35
  %2465 = sext i32 %2464 to i64
  %2466 = getelementptr inbounds i32, i32* %439, i64 %2465
  %2467 = load i32, i32* %2466, align 4, !tbaa !404
  %2468 = insertelement <64 x i32> %2463, i32 %2467, i32 35
  %2469 = extractelement <64 x i32> %2288, i32 36
  %2470 = sext i32 %2469 to i64
  %2471 = getelementptr inbounds i32, i32* %439, i64 %2470
  %2472 = load i32, i32* %2471, align 4, !tbaa !404
  %2473 = insertelement <64 x i32> %2468, i32 %2472, i32 36
  %2474 = extractelement <64 x i32> %2288, i32 37
  %2475 = sext i32 %2474 to i64
  %2476 = getelementptr inbounds i32, i32* %439, i64 %2475
  %2477 = load i32, i32* %2476, align 4, !tbaa !404
  %2478 = insertelement <64 x i32> %2473, i32 %2477, i32 37
  %2479 = extractelement <64 x i32> %2288, i32 38
  %2480 = sext i32 %2479 to i64
  %2481 = getelementptr inbounds i32, i32* %439, i64 %2480
  %2482 = load i32, i32* %2481, align 4, !tbaa !404
  %2483 = insertelement <64 x i32> %2478, i32 %2482, i32 38
  %2484 = extractelement <64 x i32> %2288, i32 39
  %2485 = sext i32 %2484 to i64
  %2486 = getelementptr inbounds i32, i32* %439, i64 %2485
  %2487 = load i32, i32* %2486, align 4, !tbaa !404
  %2488 = insertelement <64 x i32> %2483, i32 %2487, i32 39
  %2489 = extractelement <64 x i32> %2288, i32 40
  %2490 = sext i32 %2489 to i64
  %2491 = getelementptr inbounds i32, i32* %439, i64 %2490
  %2492 = load i32, i32* %2491, align 4, !tbaa !404
  %2493 = insertelement <64 x i32> %2488, i32 %2492, i32 40
  %2494 = extractelement <64 x i32> %2288, i32 41
  %2495 = sext i32 %2494 to i64
  %2496 = getelementptr inbounds i32, i32* %439, i64 %2495
  %2497 = load i32, i32* %2496, align 4, !tbaa !404
  %2498 = insertelement <64 x i32> %2493, i32 %2497, i32 41
  %2499 = extractelement <64 x i32> %2288, i32 42
  %2500 = sext i32 %2499 to i64
  %2501 = getelementptr inbounds i32, i32* %439, i64 %2500
  %2502 = load i32, i32* %2501, align 4, !tbaa !404
  %2503 = insertelement <64 x i32> %2498, i32 %2502, i32 42
  %2504 = extractelement <64 x i32> %2288, i32 43
  %2505 = sext i32 %2504 to i64
  %2506 = getelementptr inbounds i32, i32* %439, i64 %2505
  %2507 = load i32, i32* %2506, align 4, !tbaa !404
  %2508 = insertelement <64 x i32> %2503, i32 %2507, i32 43
  %2509 = extractelement <64 x i32> %2288, i32 44
  %2510 = sext i32 %2509 to i64
  %2511 = getelementptr inbounds i32, i32* %439, i64 %2510
  %2512 = load i32, i32* %2511, align 4, !tbaa !404
  %2513 = insertelement <64 x i32> %2508, i32 %2512, i32 44
  %2514 = extractelement <64 x i32> %2288, i32 45
  %2515 = sext i32 %2514 to i64
  %2516 = getelementptr inbounds i32, i32* %439, i64 %2515
  %2517 = load i32, i32* %2516, align 4, !tbaa !404
  %2518 = insertelement <64 x i32> %2513, i32 %2517, i32 45
  %2519 = extractelement <64 x i32> %2288, i32 46
  %2520 = sext i32 %2519 to i64
  %2521 = getelementptr inbounds i32, i32* %439, i64 %2520
  %2522 = load i32, i32* %2521, align 4, !tbaa !404
  %2523 = insertelement <64 x i32> %2518, i32 %2522, i32 46
  %2524 = extractelement <64 x i32> %2288, i32 47
  %2525 = sext i32 %2524 to i64
  %2526 = getelementptr inbounds i32, i32* %439, i64 %2525
  %2527 = load i32, i32* %2526, align 4, !tbaa !404
  %2528 = insertelement <64 x i32> %2523, i32 %2527, i32 47
  %2529 = extractelement <64 x i32> %2288, i32 48
  %2530 = sext i32 %2529 to i64
  %2531 = getelementptr inbounds i32, i32* %439, i64 %2530
  %2532 = load i32, i32* %2531, align 4, !tbaa !404
  %2533 = insertelement <64 x i32> %2528, i32 %2532, i32 48
  %2534 = extractelement <64 x i32> %2288, i32 49
  %2535 = sext i32 %2534 to i64
  %2536 = getelementptr inbounds i32, i32* %439, i64 %2535
  %2537 = load i32, i32* %2536, align 4, !tbaa !404
  %2538 = insertelement <64 x i32> %2533, i32 %2537, i32 49
  %2539 = extractelement <64 x i32> %2288, i32 50
  %2540 = sext i32 %2539 to i64
  %2541 = getelementptr inbounds i32, i32* %439, i64 %2540
  %2542 = load i32, i32* %2541, align 4, !tbaa !404
  %2543 = insertelement <64 x i32> %2538, i32 %2542, i32 50
  %2544 = extractelement <64 x i32> %2288, i32 51
  %2545 = sext i32 %2544 to i64
  %2546 = getelementptr inbounds i32, i32* %439, i64 %2545
  %2547 = load i32, i32* %2546, align 4, !tbaa !404
  %2548 = insertelement <64 x i32> %2543, i32 %2547, i32 51
  %2549 = extractelement <64 x i32> %2288, i32 52
  %2550 = sext i32 %2549 to i64
  %2551 = getelementptr inbounds i32, i32* %439, i64 %2550
  %2552 = load i32, i32* %2551, align 4, !tbaa !404
  %2553 = insertelement <64 x i32> %2548, i32 %2552, i32 52
  %2554 = extractelement <64 x i32> %2288, i32 53
  %2555 = sext i32 %2554 to i64
  %2556 = getelementptr inbounds i32, i32* %439, i64 %2555
  %2557 = load i32, i32* %2556, align 4, !tbaa !404
  %2558 = insertelement <64 x i32> %2553, i32 %2557, i32 53
  %2559 = extractelement <64 x i32> %2288, i32 54
  %2560 = sext i32 %2559 to i64
  %2561 = getelementptr inbounds i32, i32* %439, i64 %2560
  %2562 = load i32, i32* %2561, align 4, !tbaa !404
  %2563 = insertelement <64 x i32> %2558, i32 %2562, i32 54
  %2564 = extractelement <64 x i32> %2288, i32 55
  %2565 = sext i32 %2564 to i64
  %2566 = getelementptr inbounds i32, i32* %439, i64 %2565
  %2567 = load i32, i32* %2566, align 4, !tbaa !404
  %2568 = insertelement <64 x i32> %2563, i32 %2567, i32 55
  %2569 = extractelement <64 x i32> %2288, i32 56
  %2570 = sext i32 %2569 to i64
  %2571 = getelementptr inbounds i32, i32* %439, i64 %2570
  %2572 = load i32, i32* %2571, align 4, !tbaa !404
  %2573 = insertelement <64 x i32> %2568, i32 %2572, i32 56
  %2574 = extractelement <64 x i32> %2288, i32 57
  %2575 = sext i32 %2574 to i64
  %2576 = getelementptr inbounds i32, i32* %439, i64 %2575
  %2577 = load i32, i32* %2576, align 4, !tbaa !404
  %2578 = insertelement <64 x i32> %2573, i32 %2577, i32 57
  %2579 = extractelement <64 x i32> %2288, i32 58
  %2580 = sext i32 %2579 to i64
  %2581 = getelementptr inbounds i32, i32* %439, i64 %2580
  %2582 = load i32, i32* %2581, align 4, !tbaa !404
  %2583 = insertelement <64 x i32> %2578, i32 %2582, i32 58
  %2584 = extractelement <64 x i32> %2288, i32 59
  %2585 = sext i32 %2584 to i64
  %2586 = getelementptr inbounds i32, i32* %439, i64 %2585
  %2587 = load i32, i32* %2586, align 4, !tbaa !404
  %2588 = insertelement <64 x i32> %2583, i32 %2587, i32 59
  %2589 = extractelement <64 x i32> %2288, i32 60
  %2590 = sext i32 %2589 to i64
  %2591 = getelementptr inbounds i32, i32* %439, i64 %2590
  %2592 = load i32, i32* %2591, align 4, !tbaa !404
  %2593 = insertelement <64 x i32> %2588, i32 %2592, i32 60
  %2594 = extractelement <64 x i32> %2288, i32 61
  %2595 = sext i32 %2594 to i64
  %2596 = getelementptr inbounds i32, i32* %439, i64 %2595
  %2597 = load i32, i32* %2596, align 4, !tbaa !404
  %2598 = insertelement <64 x i32> %2593, i32 %2597, i32 61
  %2599 = extractelement <64 x i32> %2288, i32 62
  %2600 = sext i32 %2599 to i64
  %2601 = getelementptr inbounds i32, i32* %439, i64 %2600
  %2602 = load i32, i32* %2601, align 4, !tbaa !404
  %2603 = insertelement <64 x i32> %2598, i32 %2602, i32 62
  %2604 = extractelement <64 x i32> %2288, i32 63
  %2605 = sext i32 %2604 to i64
  %2606 = getelementptr inbounds i32, i32* %439, i64 %2605
  %2607 = load i32, i32* %2606, align 4, !tbaa !404
  %2608 = insertelement <64 x i32> %2603, i32 %2607, i32 63
  %2609 = mul nsw <64 x i32> %2608, %2260
  %2610 = add nsw <64 x i32> %2609, %1936
  %2611 = extractelement <64 x i32> %2610, i32 0
  store i32 %2611, i32* %1587, align 4, !tbaa !399
  %2612 = extractelement <64 x i32> %2610, i32 1
  store i32 %2612, i32* %1590, align 4, !tbaa !399
  %2613 = extractelement <64 x i32> %2610, i32 2
  store i32 %2613, i32* %1593, align 4, !tbaa !399
  %2614 = extractelement <64 x i32> %2610, i32 3
  store i32 %2614, i32* %1596, align 4, !tbaa !399
  %2615 = extractelement <64 x i32> %2610, i32 4
  store i32 %2615, i32* %1599, align 4, !tbaa !399
  %2616 = extractelement <64 x i32> %2610, i32 5
  store i32 %2616, i32* %1602, align 4, !tbaa !399
  %2617 = extractelement <64 x i32> %2610, i32 6
  store i32 %2617, i32* %1605, align 4, !tbaa !399
  %2618 = extractelement <64 x i32> %2610, i32 7
  store i32 %2618, i32* %1608, align 4, !tbaa !399
  %2619 = extractelement <64 x i32> %2610, i32 8
  store i32 %2619, i32* %1611, align 4, !tbaa !399
  %2620 = extractelement <64 x i32> %2610, i32 9
  store i32 %2620, i32* %1614, align 4, !tbaa !399
  %2621 = extractelement <64 x i32> %2610, i32 10
  store i32 %2621, i32* %1617, align 4, !tbaa !399
  %2622 = extractelement <64 x i32> %2610, i32 11
  store i32 %2622, i32* %1620, align 4, !tbaa !399
  %2623 = extractelement <64 x i32> %2610, i32 12
  store i32 %2623, i32* %1623, align 4, !tbaa !399
  %2624 = extractelement <64 x i32> %2610, i32 13
  store i32 %2624, i32* %1626, align 4, !tbaa !399
  %2625 = extractelement <64 x i32> %2610, i32 14
  store i32 %2625, i32* %1629, align 4, !tbaa !399
  %2626 = extractelement <64 x i32> %2610, i32 15
  store i32 %2626, i32* %1632, align 4, !tbaa !399
  %2627 = extractelement <64 x i32> %2610, i32 16
  store i32 %2627, i32* %1635, align 4, !tbaa !399
  %2628 = extractelement <64 x i32> %2610, i32 17
  store i32 %2628, i32* %1638, align 4, !tbaa !399
  %2629 = extractelement <64 x i32> %2610, i32 18
  store i32 %2629, i32* %1641, align 4, !tbaa !399
  %2630 = extractelement <64 x i32> %2610, i32 19
  store i32 %2630, i32* %1644, align 4, !tbaa !399
  %2631 = extractelement <64 x i32> %2610, i32 20
  store i32 %2631, i32* %1647, align 4, !tbaa !399
  %2632 = extractelement <64 x i32> %2610, i32 21
  store i32 %2632, i32* %1650, align 4, !tbaa !399
  %2633 = extractelement <64 x i32> %2610, i32 22
  store i32 %2633, i32* %1653, align 4, !tbaa !399
  %2634 = extractelement <64 x i32> %2610, i32 23
  store i32 %2634, i32* %1656, align 4, !tbaa !399
  %2635 = extractelement <64 x i32> %2610, i32 24
  store i32 %2635, i32* %1659, align 4, !tbaa !399
  %2636 = extractelement <64 x i32> %2610, i32 25
  store i32 %2636, i32* %1662, align 4, !tbaa !399
  %2637 = extractelement <64 x i32> %2610, i32 26
  store i32 %2637, i32* %1665, align 4, !tbaa !399
  %2638 = extractelement <64 x i32> %2610, i32 27
  store i32 %2638, i32* %1668, align 4, !tbaa !399
  %2639 = extractelement <64 x i32> %2610, i32 28
  store i32 %2639, i32* %1671, align 4, !tbaa !399
  %2640 = extractelement <64 x i32> %2610, i32 29
  store i32 %2640, i32* %1674, align 4, !tbaa !399
  %2641 = extractelement <64 x i32> %2610, i32 30
  store i32 %2641, i32* %1677, align 4, !tbaa !399
  %2642 = extractelement <64 x i32> %2610, i32 31
  store i32 %2642, i32* %1680, align 4, !tbaa !399
  %2643 = extractelement <64 x i32> %2610, i32 32
  store i32 %2643, i32* %1683, align 4, !tbaa !399
  %2644 = extractelement <64 x i32> %2610, i32 33
  store i32 %2644, i32* %1686, align 4, !tbaa !399
  %2645 = extractelement <64 x i32> %2610, i32 34
  store i32 %2645, i32* %1689, align 4, !tbaa !399
  %2646 = extractelement <64 x i32> %2610, i32 35
  store i32 %2646, i32* %1692, align 4, !tbaa !399
  %2647 = extractelement <64 x i32> %2610, i32 36
  store i32 %2647, i32* %1695, align 4, !tbaa !399
  %2648 = extractelement <64 x i32> %2610, i32 37
  store i32 %2648, i32* %1698, align 4, !tbaa !399
  %2649 = extractelement <64 x i32> %2610, i32 38
  store i32 %2649, i32* %1701, align 4, !tbaa !399
  %2650 = extractelement <64 x i32> %2610, i32 39
  store i32 %2650, i32* %1704, align 4, !tbaa !399
  %2651 = extractelement <64 x i32> %2610, i32 40
  store i32 %2651, i32* %1707, align 4, !tbaa !399
  %2652 = extractelement <64 x i32> %2610, i32 41
  store i32 %2652, i32* %1710, align 4, !tbaa !399
  %2653 = extractelement <64 x i32> %2610, i32 42
  store i32 %2653, i32* %1713, align 4, !tbaa !399
  %2654 = extractelement <64 x i32> %2610, i32 43
  store i32 %2654, i32* %1716, align 4, !tbaa !399
  %2655 = extractelement <64 x i32> %2610, i32 44
  store i32 %2655, i32* %1719, align 4, !tbaa !399
  %2656 = extractelement <64 x i32> %2610, i32 45
  store i32 %2656, i32* %1722, align 4, !tbaa !399
  %2657 = extractelement <64 x i32> %2610, i32 46
  store i32 %2657, i32* %1725, align 4, !tbaa !399
  %2658 = extractelement <64 x i32> %2610, i32 47
  store i32 %2658, i32* %1728, align 4, !tbaa !399
  %2659 = extractelement <64 x i32> %2610, i32 48
  store i32 %2659, i32* %1731, align 4, !tbaa !399
  %2660 = extractelement <64 x i32> %2610, i32 49
  store i32 %2660, i32* %1734, align 4, !tbaa !399
  %2661 = extractelement <64 x i32> %2610, i32 50
  store i32 %2661, i32* %1737, align 4, !tbaa !399
  %2662 = extractelement <64 x i32> %2610, i32 51
  store i32 %2662, i32* %1740, align 4, !tbaa !399
  %2663 = extractelement <64 x i32> %2610, i32 52
  store i32 %2663, i32* %1743, align 4, !tbaa !399
  %2664 = extractelement <64 x i32> %2610, i32 53
  store i32 %2664, i32* %1746, align 4, !tbaa !399
  %2665 = extractelement <64 x i32> %2610, i32 54
  store i32 %2665, i32* %1749, align 4, !tbaa !399
  %2666 = extractelement <64 x i32> %2610, i32 55
  store i32 %2666, i32* %1752, align 4, !tbaa !399
  %2667 = extractelement <64 x i32> %2610, i32 56
  store i32 %2667, i32* %1755, align 4, !tbaa !399
  %2668 = extractelement <64 x i32> %2610, i32 57
  store i32 %2668, i32* %1758, align 4, !tbaa !399
  %2669 = extractelement <64 x i32> %2610, i32 58
  store i32 %2669, i32* %1761, align 4, !tbaa !399
  %2670 = extractelement <64 x i32> %2610, i32 59
  store i32 %2670, i32* %1764, align 4, !tbaa !399
  %2671 = extractelement <64 x i32> %2610, i32 60
  store i32 %2671, i32* %1767, align 4, !tbaa !399
  %2672 = extractelement <64 x i32> %2610, i32 61
  store i32 %2672, i32* %1770, align 4, !tbaa !399
  %2673 = extractelement <64 x i32> %2610, i32 62
  store i32 %2673, i32* %1773, align 4, !tbaa !399
  %2674 = extractelement <64 x i32> %2610, i32 63
  store i32 %2674, i32* %1776, align 4, !tbaa !399
  %2675 = add nuw nsw i32 %"Output.s1.r10$x66.us.us.us", 1
  %.not392.us.us.us = icmp eq i32 %2675, %12
  br i1 %.not392.us.us.us, label %"end for Output.s1.r10$x65.loopexit.us.us.us", label %"for Output.s1.r10$x64.us.us.us"

"end for Output.s1.r10$x65.loopexit.us.us.us":    ; preds = %"for Output.s1.r10$x64.us.us.us"
  %2676 = add nuw nsw i32 %"Output.s1.r10$y63.us.us.us", 1
  %.not387.us.us.us = icmp eq i32 %2676, %15
  br i1 %.not387.us.us.us, label %"end for Output.s1.r10$y62.loopexit.split.us.us.us", label %"for Output.s1.r10$y61.us.us.us"

"end for Output.s1.r10$y62.loopexit.split.us.us.us": ; preds = %"end for Output.s1.r10$x65.loopexit.us.us.us"
  %2677 = add nuw nsw i32 %"Output.s1.r10$z.rebased.us.us", 1
  %.not386.us.us = icmp eq i32 %2677, %t242
  br i1 %.not386.us.us, label %"end for Output.s1.r10$z.rebased", label %"for Output.s1.r10$z.rebased.us.us"

"end for Output.s1.r10$z.rebased":                ; preds = %"end for Output.s1.r10$y62.loopexit.split.us.us.us", %"for Output.s1.r10$z.rebased.preheader", %"for Output.s1.r10$z.preheader", %"end for Output.s1.r10$z"
  br i1 %441, label %"for Output.s1.r10$z.rebased67.preheader", label %"end for Output.s1.r10$z.rebased68", !prof !398

"for Output.s1.r10$z.rebased67.preheader":        ; preds = %"end for Output.s1.r10$z.rebased"
  %2678 = insertelement <64 x i32> undef, i32 %t238, i32 0
  %2679 = shufflevector <64 x i32> %2678, <64 x i32> undef, <64 x i32> zeroinitializer
  %2680 = or <64 x i32> %2679, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  br label %"for Output.s1.r10$z.rebased67"

"for Output.s1.r10$z.rebased67":                  ; preds = %"for Output.s1.r10$z.rebased67.preheader", %"end for Output.s1.r10$y71"
  %"Output.s1.r10$z.rebased69" = phi i32 [ %3797, %"end for Output.s1.r10$y71" ], [ 0, %"for Output.s1.r10$z.rebased67.preheader" ]
  %a58 = add nsw i32 %"Output.s1.r10$z.rebased69", %t250
  %2681 = icmp sgt i32 %b50, %a58
  %a57 = select i1 %2681, i32 %a58, i32 %b50
  br i1 %395, label %"for Output.s1.r10$y70.preheader", label %"end for Output.s1.r10$y71", !prof !398

"for Output.s1.r10$y70.preheader":                ; preds = %"for Output.s1.r10$z.rebased67"
  %2682 = icmp sgt i32 %a57, 0
  %2683 = select i1 %2682, i32 %a57, i32 0
  %2684 = mul nsw i32 %2683, %35
  %t251 = sub nsw i32 %2684, %t231
  %2685 = insertelement <64 x i32> undef, i32 %t251, i32 0
  %2686 = shufflevector <64 x i32> %2685, <64 x i32> undef, <64 x i32> zeroinitializer
  br i1 %396, label %"for Output.s1.r10$y70.preheader.split.us", label %"end for Output.s1.r10$y71", !prof !398

"for Output.s1.r10$y70.preheader.split.us":       ; preds = %"for Output.s1.r10$y70.preheader"
  %2687 = sdiv <64 x i32> %2680, %399
  %t189.us = and <64 x i32> %2687, %400
  %2688 = srem <64 x i32> %2680, %401
  %t190.us = and <64 x i32> %2688, %400
  %2689 = shufflevector <64 x i32> %t190.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2690 = shufflevector <64 x i32> %t190.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2691 = shufflevector <64 x i32> %t190.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %2692 = shufflevector <64 x i32> %t190.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %.lobit381.us = ashr <16 x i32> %2689, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit382.us = ashr <16 x i32> %2690, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit383.us = ashr <16 x i32> %2691, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit384.us = ashr <16 x i32> %2692, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %2693 = shufflevector <16 x i32> %.lobit381.us, <16 x i32> %.lobit382.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2694 = shufflevector <16 x i32> %.lobit383.us, <16 x i32> %.lobit384.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %t323.us = shufflevector <32 x i32> %2693, <32 x i32> %2694, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %2695 = sub nsw <64 x i32> %t190.us, %t323.us
  %2696 = sdiv <64 x i32> %2695, %404
  %2697 = and <64 x i32> %t323.us, %406
  %2698 = add nsw <64 x i32> %2697, %2696
  %t191.us = and <64 x i32> %2698, %407
  %2699 = srem <64 x i32> %2695, %408
  %2700 = and <64 x i32> %t323.us, %412
  %2701 = add nsw <64 x i32> %2700, %2699
  %t192.us = and <64 x i32> %2701, %407
  %2702 = add nsw <64 x i32> %t191.us, %414
  %2703 = mul nsw <64 x i32> %2702, %416
  %2704 = add nsw <64 x i32> %t189.us, %418
  %2705 = mul nsw <64 x i32> %2704, %420
  %2706 = add nsw <64 x i32> %2705, %422
  %2707 = add <64 x i32> %2706, %t192.us
  %t193.us = add <64 x i32> %2707, %2703
  %2708 = extractelement <64 x i32> %t193.us, i32 0
  %2709 = sext i32 %2708 to i64
  %2710 = getelementptr inbounds i32, i32* %423, i64 %2709
  %2711 = extractelement <64 x i32> %t193.us, i32 1
  %2712 = sext i32 %2711 to i64
  %2713 = getelementptr inbounds i32, i32* %423, i64 %2712
  %2714 = extractelement <64 x i32> %t193.us, i32 2
  %2715 = sext i32 %2714 to i64
  %2716 = getelementptr inbounds i32, i32* %423, i64 %2715
  %2717 = extractelement <64 x i32> %t193.us, i32 3
  %2718 = sext i32 %2717 to i64
  %2719 = getelementptr inbounds i32, i32* %423, i64 %2718
  %2720 = extractelement <64 x i32> %t193.us, i32 4
  %2721 = sext i32 %2720 to i64
  %2722 = getelementptr inbounds i32, i32* %423, i64 %2721
  %2723 = extractelement <64 x i32> %t193.us, i32 5
  %2724 = sext i32 %2723 to i64
  %2725 = getelementptr inbounds i32, i32* %423, i64 %2724
  %2726 = extractelement <64 x i32> %t193.us, i32 6
  %2727 = sext i32 %2726 to i64
  %2728 = getelementptr inbounds i32, i32* %423, i64 %2727
  %2729 = extractelement <64 x i32> %t193.us, i32 7
  %2730 = sext i32 %2729 to i64
  %2731 = getelementptr inbounds i32, i32* %423, i64 %2730
  %2732 = extractelement <64 x i32> %t193.us, i32 8
  %2733 = sext i32 %2732 to i64
  %2734 = getelementptr inbounds i32, i32* %423, i64 %2733
  %2735 = extractelement <64 x i32> %t193.us, i32 9
  %2736 = sext i32 %2735 to i64
  %2737 = getelementptr inbounds i32, i32* %423, i64 %2736
  %2738 = extractelement <64 x i32> %t193.us, i32 10
  %2739 = sext i32 %2738 to i64
  %2740 = getelementptr inbounds i32, i32* %423, i64 %2739
  %2741 = extractelement <64 x i32> %t193.us, i32 11
  %2742 = sext i32 %2741 to i64
  %2743 = getelementptr inbounds i32, i32* %423, i64 %2742
  %2744 = extractelement <64 x i32> %t193.us, i32 12
  %2745 = sext i32 %2744 to i64
  %2746 = getelementptr inbounds i32, i32* %423, i64 %2745
  %2747 = extractelement <64 x i32> %t193.us, i32 13
  %2748 = sext i32 %2747 to i64
  %2749 = getelementptr inbounds i32, i32* %423, i64 %2748
  %2750 = extractelement <64 x i32> %t193.us, i32 14
  %2751 = sext i32 %2750 to i64
  %2752 = getelementptr inbounds i32, i32* %423, i64 %2751
  %2753 = extractelement <64 x i32> %t193.us, i32 15
  %2754 = sext i32 %2753 to i64
  %2755 = getelementptr inbounds i32, i32* %423, i64 %2754
  %2756 = extractelement <64 x i32> %t193.us, i32 16
  %2757 = sext i32 %2756 to i64
  %2758 = getelementptr inbounds i32, i32* %423, i64 %2757
  %2759 = extractelement <64 x i32> %t193.us, i32 17
  %2760 = sext i32 %2759 to i64
  %2761 = getelementptr inbounds i32, i32* %423, i64 %2760
  %2762 = extractelement <64 x i32> %t193.us, i32 18
  %2763 = sext i32 %2762 to i64
  %2764 = getelementptr inbounds i32, i32* %423, i64 %2763
  %2765 = extractelement <64 x i32> %t193.us, i32 19
  %2766 = sext i32 %2765 to i64
  %2767 = getelementptr inbounds i32, i32* %423, i64 %2766
  %2768 = extractelement <64 x i32> %t193.us, i32 20
  %2769 = sext i32 %2768 to i64
  %2770 = getelementptr inbounds i32, i32* %423, i64 %2769
  %2771 = extractelement <64 x i32> %t193.us, i32 21
  %2772 = sext i32 %2771 to i64
  %2773 = getelementptr inbounds i32, i32* %423, i64 %2772
  %2774 = extractelement <64 x i32> %t193.us, i32 22
  %2775 = sext i32 %2774 to i64
  %2776 = getelementptr inbounds i32, i32* %423, i64 %2775
  %2777 = extractelement <64 x i32> %t193.us, i32 23
  %2778 = sext i32 %2777 to i64
  %2779 = getelementptr inbounds i32, i32* %423, i64 %2778
  %2780 = extractelement <64 x i32> %t193.us, i32 24
  %2781 = sext i32 %2780 to i64
  %2782 = getelementptr inbounds i32, i32* %423, i64 %2781
  %2783 = extractelement <64 x i32> %t193.us, i32 25
  %2784 = sext i32 %2783 to i64
  %2785 = getelementptr inbounds i32, i32* %423, i64 %2784
  %2786 = extractelement <64 x i32> %t193.us, i32 26
  %2787 = sext i32 %2786 to i64
  %2788 = getelementptr inbounds i32, i32* %423, i64 %2787
  %2789 = extractelement <64 x i32> %t193.us, i32 27
  %2790 = sext i32 %2789 to i64
  %2791 = getelementptr inbounds i32, i32* %423, i64 %2790
  %2792 = extractelement <64 x i32> %t193.us, i32 28
  %2793 = sext i32 %2792 to i64
  %2794 = getelementptr inbounds i32, i32* %423, i64 %2793
  %2795 = extractelement <64 x i32> %t193.us, i32 29
  %2796 = sext i32 %2795 to i64
  %2797 = getelementptr inbounds i32, i32* %423, i64 %2796
  %2798 = extractelement <64 x i32> %t193.us, i32 30
  %2799 = sext i32 %2798 to i64
  %2800 = getelementptr inbounds i32, i32* %423, i64 %2799
  %2801 = extractelement <64 x i32> %t193.us, i32 31
  %2802 = sext i32 %2801 to i64
  %2803 = getelementptr inbounds i32, i32* %423, i64 %2802
  %2804 = extractelement <64 x i32> %t193.us, i32 32
  %2805 = sext i32 %2804 to i64
  %2806 = getelementptr inbounds i32, i32* %423, i64 %2805
  %2807 = extractelement <64 x i32> %t193.us, i32 33
  %2808 = sext i32 %2807 to i64
  %2809 = getelementptr inbounds i32, i32* %423, i64 %2808
  %2810 = extractelement <64 x i32> %t193.us, i32 34
  %2811 = sext i32 %2810 to i64
  %2812 = getelementptr inbounds i32, i32* %423, i64 %2811
  %2813 = extractelement <64 x i32> %t193.us, i32 35
  %2814 = sext i32 %2813 to i64
  %2815 = getelementptr inbounds i32, i32* %423, i64 %2814
  %2816 = extractelement <64 x i32> %t193.us, i32 36
  %2817 = sext i32 %2816 to i64
  %2818 = getelementptr inbounds i32, i32* %423, i64 %2817
  %2819 = extractelement <64 x i32> %t193.us, i32 37
  %2820 = sext i32 %2819 to i64
  %2821 = getelementptr inbounds i32, i32* %423, i64 %2820
  %2822 = extractelement <64 x i32> %t193.us, i32 38
  %2823 = sext i32 %2822 to i64
  %2824 = getelementptr inbounds i32, i32* %423, i64 %2823
  %2825 = extractelement <64 x i32> %t193.us, i32 39
  %2826 = sext i32 %2825 to i64
  %2827 = getelementptr inbounds i32, i32* %423, i64 %2826
  %2828 = extractelement <64 x i32> %t193.us, i32 40
  %2829 = sext i32 %2828 to i64
  %2830 = getelementptr inbounds i32, i32* %423, i64 %2829
  %2831 = extractelement <64 x i32> %t193.us, i32 41
  %2832 = sext i32 %2831 to i64
  %2833 = getelementptr inbounds i32, i32* %423, i64 %2832
  %2834 = extractelement <64 x i32> %t193.us, i32 42
  %2835 = sext i32 %2834 to i64
  %2836 = getelementptr inbounds i32, i32* %423, i64 %2835
  %2837 = extractelement <64 x i32> %t193.us, i32 43
  %2838 = sext i32 %2837 to i64
  %2839 = getelementptr inbounds i32, i32* %423, i64 %2838
  %2840 = extractelement <64 x i32> %t193.us, i32 44
  %2841 = sext i32 %2840 to i64
  %2842 = getelementptr inbounds i32, i32* %423, i64 %2841
  %2843 = extractelement <64 x i32> %t193.us, i32 45
  %2844 = sext i32 %2843 to i64
  %2845 = getelementptr inbounds i32, i32* %423, i64 %2844
  %2846 = extractelement <64 x i32> %t193.us, i32 46
  %2847 = sext i32 %2846 to i64
  %2848 = getelementptr inbounds i32, i32* %423, i64 %2847
  %2849 = extractelement <64 x i32> %t193.us, i32 47
  %2850 = sext i32 %2849 to i64
  %2851 = getelementptr inbounds i32, i32* %423, i64 %2850
  %2852 = extractelement <64 x i32> %t193.us, i32 48
  %2853 = sext i32 %2852 to i64
  %2854 = getelementptr inbounds i32, i32* %423, i64 %2853
  %2855 = extractelement <64 x i32> %t193.us, i32 49
  %2856 = sext i32 %2855 to i64
  %2857 = getelementptr inbounds i32, i32* %423, i64 %2856
  %2858 = extractelement <64 x i32> %t193.us, i32 50
  %2859 = sext i32 %2858 to i64
  %2860 = getelementptr inbounds i32, i32* %423, i64 %2859
  %2861 = extractelement <64 x i32> %t193.us, i32 51
  %2862 = sext i32 %2861 to i64
  %2863 = getelementptr inbounds i32, i32* %423, i64 %2862
  %2864 = extractelement <64 x i32> %t193.us, i32 52
  %2865 = sext i32 %2864 to i64
  %2866 = getelementptr inbounds i32, i32* %423, i64 %2865
  %2867 = extractelement <64 x i32> %t193.us, i32 53
  %2868 = sext i32 %2867 to i64
  %2869 = getelementptr inbounds i32, i32* %423, i64 %2868
  %2870 = extractelement <64 x i32> %t193.us, i32 54
  %2871 = sext i32 %2870 to i64
  %2872 = getelementptr inbounds i32, i32* %423, i64 %2871
  %2873 = extractelement <64 x i32> %t193.us, i32 55
  %2874 = sext i32 %2873 to i64
  %2875 = getelementptr inbounds i32, i32* %423, i64 %2874
  %2876 = extractelement <64 x i32> %t193.us, i32 56
  %2877 = sext i32 %2876 to i64
  %2878 = getelementptr inbounds i32, i32* %423, i64 %2877
  %2879 = extractelement <64 x i32> %t193.us, i32 57
  %2880 = sext i32 %2879 to i64
  %2881 = getelementptr inbounds i32, i32* %423, i64 %2880
  %2882 = extractelement <64 x i32> %t193.us, i32 58
  %2883 = sext i32 %2882 to i64
  %2884 = getelementptr inbounds i32, i32* %423, i64 %2883
  %2885 = extractelement <64 x i32> %t193.us, i32 59
  %2886 = sext i32 %2885 to i64
  %2887 = getelementptr inbounds i32, i32* %423, i64 %2886
  %2888 = extractelement <64 x i32> %t193.us, i32 60
  %2889 = sext i32 %2888 to i64
  %2890 = getelementptr inbounds i32, i32* %423, i64 %2889
  %2891 = extractelement <64 x i32> %t193.us, i32 61
  %2892 = sext i32 %2891 to i64
  %2893 = getelementptr inbounds i32, i32* %423, i64 %2892
  %2894 = extractelement <64 x i32> %t193.us, i32 62
  %2895 = sext i32 %2894 to i64
  %2896 = getelementptr inbounds i32, i32* %423, i64 %2895
  %2897 = extractelement <64 x i32> %t193.us, i32 63
  %2898 = sext i32 %2897 to i64
  %2899 = getelementptr inbounds i32, i32* %423, i64 %2898
  %2900 = add nsw <64 x i32> %t189.us, %425
  %2901 = mul nsw <64 x i32> %2900, %427
  br label %"for Output.s1.r10$y70.us"

"for Output.s1.r10$y70.us":                       ; preds = %"end for Output.s1.r10$x74.loopexit.us", %"for Output.s1.r10$y70.preheader.split.us"
  %"Output.s1.r10$y72.us" = phi i32 [ %3795, %"end for Output.s1.r10$x74.loopexit.us" ], [ 0, %"for Output.s1.r10$y70.preheader.split.us" ]
  %t252.us = mul nsw i32 %"Output.s1.r10$y72.us", %16
  %t253.us = sub nsw i32 %92, %"Output.s1.r10$y72.us"
  %2902 = insertelement <64 x i32> undef, i32 %t253.us, i32 0
  %2903 = shufflevector <64 x i32> %2902, <64 x i32> undef, <64 x i32> zeroinitializer
  %a62.us = add nsw <64 x i32> %t191.us, %2903
  %2904 = shufflevector <64 x i32> %a62.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2905 = icmp sgt <16 x i32> %434, %2904
  %2906 = shufflevector <64 x i32> %a62.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2907 = icmp sgt <16 x i32> %434, %2906
  %2908 = shufflevector <64 x i32> %a62.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %2909 = icmp sgt <16 x i32> %434, %2908
  %2910 = shufflevector <64 x i32> %a62.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %2911 = icmp sgt <16 x i32> %434, %2910
  %2912 = select <16 x i1> %2905, <16 x i32> %2904, <16 x i32> %434
  %2913 = select <16 x i1> %2907, <16 x i32> %2906, <16 x i32> %434
  %2914 = select <16 x i1> %2909, <16 x i32> %2908, <16 x i32> %434
  %2915 = select <16 x i1> %2911, <16 x i32> %2910, <16 x i32> %434
  %2916 = icmp sgt <16 x i32> %2912, %436
  %2917 = icmp sgt <16 x i32> %2913, %436
  %2918 = icmp sgt <16 x i32> %2914, %436
  %2919 = icmp sgt <16 x i32> %2915, %436
  %2920 = select <16 x i1> %2916, <16 x i32> %2912, <16 x i32> %436
  %2921 = select <16 x i1> %2917, <16 x i32> %2913, <16 x i32> %436
  %2922 = select <16 x i1> %2918, <16 x i32> %2914, <16 x i32> %436
  %2923 = select <16 x i1> %2919, <16 x i32> %2915, <16 x i32> %436
  %2924 = shufflevector <16 x i32> %2920, <16 x i32> %2921, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2925 = shufflevector <16 x i32> %2922, <16 x i32> %2923, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2926 = shufflevector <32 x i32> %2924, <32 x i32> %2925, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %2927 = mul nsw <64 x i32> %2926, %438
  br label %"for Output.s1.r10$x73.us"

"for Output.s1.r10$x73.us":                       ; preds = %"for Output.s1.r10$y70.us", %"for Output.s1.r10$x73.us"
  %"Output.s1.r10$x75.us" = phi i32 [ %3794, %"for Output.s1.r10$x73.us" ], [ 0, %"for Output.s1.r10$y70.us" ]
  %2928 = load i32, i32* %2710, align 4, !tbaa !399
  %2929 = insertelement <64 x i32> undef, i32 %2928, i32 0
  %2930 = load i32, i32* %2713, align 4, !tbaa !399
  %2931 = insertelement <64 x i32> %2929, i32 %2930, i32 1
  %2932 = load i32, i32* %2716, align 4, !tbaa !399
  %2933 = insertelement <64 x i32> %2931, i32 %2932, i32 2
  %2934 = load i32, i32* %2719, align 4, !tbaa !399
  %2935 = insertelement <64 x i32> %2933, i32 %2934, i32 3
  %2936 = load i32, i32* %2722, align 4, !tbaa !399
  %2937 = insertelement <64 x i32> %2935, i32 %2936, i32 4
  %2938 = load i32, i32* %2725, align 4, !tbaa !399
  %2939 = insertelement <64 x i32> %2937, i32 %2938, i32 5
  %2940 = load i32, i32* %2728, align 4, !tbaa !399
  %2941 = insertelement <64 x i32> %2939, i32 %2940, i32 6
  %2942 = load i32, i32* %2731, align 4, !tbaa !399
  %2943 = insertelement <64 x i32> %2941, i32 %2942, i32 7
  %2944 = load i32, i32* %2734, align 4, !tbaa !399
  %2945 = insertelement <64 x i32> %2943, i32 %2944, i32 8
  %2946 = load i32, i32* %2737, align 4, !tbaa !399
  %2947 = insertelement <64 x i32> %2945, i32 %2946, i32 9
  %2948 = load i32, i32* %2740, align 4, !tbaa !399
  %2949 = insertelement <64 x i32> %2947, i32 %2948, i32 10
  %2950 = load i32, i32* %2743, align 4, !tbaa !399
  %2951 = insertelement <64 x i32> %2949, i32 %2950, i32 11
  %2952 = load i32, i32* %2746, align 4, !tbaa !399
  %2953 = insertelement <64 x i32> %2951, i32 %2952, i32 12
  %2954 = load i32, i32* %2749, align 4, !tbaa !399
  %2955 = insertelement <64 x i32> %2953, i32 %2954, i32 13
  %2956 = load i32, i32* %2752, align 4, !tbaa !399
  %2957 = insertelement <64 x i32> %2955, i32 %2956, i32 14
  %2958 = load i32, i32* %2755, align 4, !tbaa !399
  %2959 = insertelement <64 x i32> %2957, i32 %2958, i32 15
  %2960 = load i32, i32* %2758, align 4, !tbaa !399
  %2961 = insertelement <64 x i32> %2959, i32 %2960, i32 16
  %2962 = load i32, i32* %2761, align 4, !tbaa !399
  %2963 = insertelement <64 x i32> %2961, i32 %2962, i32 17
  %2964 = load i32, i32* %2764, align 4, !tbaa !399
  %2965 = insertelement <64 x i32> %2963, i32 %2964, i32 18
  %2966 = load i32, i32* %2767, align 4, !tbaa !399
  %2967 = insertelement <64 x i32> %2965, i32 %2966, i32 19
  %2968 = load i32, i32* %2770, align 4, !tbaa !399
  %2969 = insertelement <64 x i32> %2967, i32 %2968, i32 20
  %2970 = load i32, i32* %2773, align 4, !tbaa !399
  %2971 = insertelement <64 x i32> %2969, i32 %2970, i32 21
  %2972 = load i32, i32* %2776, align 4, !tbaa !399
  %2973 = insertelement <64 x i32> %2971, i32 %2972, i32 22
  %2974 = load i32, i32* %2779, align 4, !tbaa !399
  %2975 = insertelement <64 x i32> %2973, i32 %2974, i32 23
  %2976 = load i32, i32* %2782, align 4, !tbaa !399
  %2977 = insertelement <64 x i32> %2975, i32 %2976, i32 24
  %2978 = load i32, i32* %2785, align 4, !tbaa !399
  %2979 = insertelement <64 x i32> %2977, i32 %2978, i32 25
  %2980 = load i32, i32* %2788, align 4, !tbaa !399
  %2981 = insertelement <64 x i32> %2979, i32 %2980, i32 26
  %2982 = load i32, i32* %2791, align 4, !tbaa !399
  %2983 = insertelement <64 x i32> %2981, i32 %2982, i32 27
  %2984 = load i32, i32* %2794, align 4, !tbaa !399
  %2985 = insertelement <64 x i32> %2983, i32 %2984, i32 28
  %2986 = load i32, i32* %2797, align 4, !tbaa !399
  %2987 = insertelement <64 x i32> %2985, i32 %2986, i32 29
  %2988 = load i32, i32* %2800, align 4, !tbaa !399
  %2989 = insertelement <64 x i32> %2987, i32 %2988, i32 30
  %2990 = load i32, i32* %2803, align 4, !tbaa !399
  %2991 = insertelement <64 x i32> %2989, i32 %2990, i32 31
  %2992 = load i32, i32* %2806, align 4, !tbaa !399
  %2993 = insertelement <64 x i32> %2991, i32 %2992, i32 32
  %2994 = load i32, i32* %2809, align 4, !tbaa !399
  %2995 = insertelement <64 x i32> %2993, i32 %2994, i32 33
  %2996 = load i32, i32* %2812, align 4, !tbaa !399
  %2997 = insertelement <64 x i32> %2995, i32 %2996, i32 34
  %2998 = load i32, i32* %2815, align 4, !tbaa !399
  %2999 = insertelement <64 x i32> %2997, i32 %2998, i32 35
  %3000 = load i32, i32* %2818, align 4, !tbaa !399
  %3001 = insertelement <64 x i32> %2999, i32 %3000, i32 36
  %3002 = load i32, i32* %2821, align 4, !tbaa !399
  %3003 = insertelement <64 x i32> %3001, i32 %3002, i32 37
  %3004 = load i32, i32* %2824, align 4, !tbaa !399
  %3005 = insertelement <64 x i32> %3003, i32 %3004, i32 38
  %3006 = load i32, i32* %2827, align 4, !tbaa !399
  %3007 = insertelement <64 x i32> %3005, i32 %3006, i32 39
  %3008 = load i32, i32* %2830, align 4, !tbaa !399
  %3009 = insertelement <64 x i32> %3007, i32 %3008, i32 40
  %3010 = load i32, i32* %2833, align 4, !tbaa !399
  %3011 = insertelement <64 x i32> %3009, i32 %3010, i32 41
  %3012 = load i32, i32* %2836, align 4, !tbaa !399
  %3013 = insertelement <64 x i32> %3011, i32 %3012, i32 42
  %3014 = load i32, i32* %2839, align 4, !tbaa !399
  %3015 = insertelement <64 x i32> %3013, i32 %3014, i32 43
  %3016 = load i32, i32* %2842, align 4, !tbaa !399
  %3017 = insertelement <64 x i32> %3015, i32 %3016, i32 44
  %3018 = load i32, i32* %2845, align 4, !tbaa !399
  %3019 = insertelement <64 x i32> %3017, i32 %3018, i32 45
  %3020 = load i32, i32* %2848, align 4, !tbaa !399
  %3021 = insertelement <64 x i32> %3019, i32 %3020, i32 46
  %3022 = load i32, i32* %2851, align 4, !tbaa !399
  %3023 = insertelement <64 x i32> %3021, i32 %3022, i32 47
  %3024 = load i32, i32* %2854, align 4, !tbaa !399
  %3025 = insertelement <64 x i32> %3023, i32 %3024, i32 48
  %3026 = load i32, i32* %2857, align 4, !tbaa !399
  %3027 = insertelement <64 x i32> %3025, i32 %3026, i32 49
  %3028 = load i32, i32* %2860, align 4, !tbaa !399
  %3029 = insertelement <64 x i32> %3027, i32 %3028, i32 50
  %3030 = load i32, i32* %2863, align 4, !tbaa !399
  %3031 = insertelement <64 x i32> %3029, i32 %3030, i32 51
  %3032 = load i32, i32* %2866, align 4, !tbaa !399
  %3033 = insertelement <64 x i32> %3031, i32 %3032, i32 52
  %3034 = load i32, i32* %2869, align 4, !tbaa !399
  %3035 = insertelement <64 x i32> %3033, i32 %3034, i32 53
  %3036 = load i32, i32* %2872, align 4, !tbaa !399
  %3037 = insertelement <64 x i32> %3035, i32 %3036, i32 54
  %3038 = load i32, i32* %2875, align 4, !tbaa !399
  %3039 = insertelement <64 x i32> %3037, i32 %3038, i32 55
  %3040 = load i32, i32* %2878, align 4, !tbaa !399
  %3041 = insertelement <64 x i32> %3039, i32 %3040, i32 56
  %3042 = load i32, i32* %2881, align 4, !tbaa !399
  %3043 = insertelement <64 x i32> %3041, i32 %3042, i32 57
  %3044 = load i32, i32* %2884, align 4, !tbaa !399
  %3045 = insertelement <64 x i32> %3043, i32 %3044, i32 58
  %3046 = load i32, i32* %2887, align 4, !tbaa !399
  %3047 = insertelement <64 x i32> %3045, i32 %3046, i32 59
  %3048 = load i32, i32* %2890, align 4, !tbaa !399
  %3049 = insertelement <64 x i32> %3047, i32 %3048, i32 60
  %3050 = load i32, i32* %2893, align 4, !tbaa !399
  %3051 = insertelement <64 x i32> %3049, i32 %3050, i32 61
  %3052 = load i32, i32* %2896, align 4, !tbaa !399
  %3053 = insertelement <64 x i32> %3051, i32 %3052, i32 62
  %3054 = load i32, i32* %2899, align 4, !tbaa !399
  %3055 = insertelement <64 x i32> %3053, i32 %3054, i32 63
  %3056 = add nsw i32 %"Output.s1.r10$x75.us", %t252.us
  %3057 = insertelement <64 x i32> undef, i32 %3056, i32 0
  %3058 = shufflevector <64 x i32> %3057, <64 x i32> undef, <64 x i32> zeroinitializer
  %3059 = add nsw <64 x i32> %2901, %3058
  %3060 = extractelement <64 x i32> %3059, i32 0
  %3061 = sext i32 %3060 to i64
  %3062 = getelementptr inbounds i32, i32* %428, i64 %3061
  %3063 = load i32, i32* %3062, align 4, !tbaa !402
  %3064 = insertelement <64 x i32> undef, i32 %3063, i32 0
  %3065 = extractelement <64 x i32> %3059, i32 1
  %3066 = sext i32 %3065 to i64
  %3067 = getelementptr inbounds i32, i32* %428, i64 %3066
  %3068 = load i32, i32* %3067, align 4, !tbaa !402
  %3069 = insertelement <64 x i32> %3064, i32 %3068, i32 1
  %3070 = extractelement <64 x i32> %3059, i32 2
  %3071 = sext i32 %3070 to i64
  %3072 = getelementptr inbounds i32, i32* %428, i64 %3071
  %3073 = load i32, i32* %3072, align 4, !tbaa !402
  %3074 = insertelement <64 x i32> %3069, i32 %3073, i32 2
  %3075 = extractelement <64 x i32> %3059, i32 3
  %3076 = sext i32 %3075 to i64
  %3077 = getelementptr inbounds i32, i32* %428, i64 %3076
  %3078 = load i32, i32* %3077, align 4, !tbaa !402
  %3079 = insertelement <64 x i32> %3074, i32 %3078, i32 3
  %3080 = extractelement <64 x i32> %3059, i32 4
  %3081 = sext i32 %3080 to i64
  %3082 = getelementptr inbounds i32, i32* %428, i64 %3081
  %3083 = load i32, i32* %3082, align 4, !tbaa !402
  %3084 = insertelement <64 x i32> %3079, i32 %3083, i32 4
  %3085 = extractelement <64 x i32> %3059, i32 5
  %3086 = sext i32 %3085 to i64
  %3087 = getelementptr inbounds i32, i32* %428, i64 %3086
  %3088 = load i32, i32* %3087, align 4, !tbaa !402
  %3089 = insertelement <64 x i32> %3084, i32 %3088, i32 5
  %3090 = extractelement <64 x i32> %3059, i32 6
  %3091 = sext i32 %3090 to i64
  %3092 = getelementptr inbounds i32, i32* %428, i64 %3091
  %3093 = load i32, i32* %3092, align 4, !tbaa !402
  %3094 = insertelement <64 x i32> %3089, i32 %3093, i32 6
  %3095 = extractelement <64 x i32> %3059, i32 7
  %3096 = sext i32 %3095 to i64
  %3097 = getelementptr inbounds i32, i32* %428, i64 %3096
  %3098 = load i32, i32* %3097, align 4, !tbaa !402
  %3099 = insertelement <64 x i32> %3094, i32 %3098, i32 7
  %3100 = extractelement <64 x i32> %3059, i32 8
  %3101 = sext i32 %3100 to i64
  %3102 = getelementptr inbounds i32, i32* %428, i64 %3101
  %3103 = load i32, i32* %3102, align 4, !tbaa !402
  %3104 = insertelement <64 x i32> %3099, i32 %3103, i32 8
  %3105 = extractelement <64 x i32> %3059, i32 9
  %3106 = sext i32 %3105 to i64
  %3107 = getelementptr inbounds i32, i32* %428, i64 %3106
  %3108 = load i32, i32* %3107, align 4, !tbaa !402
  %3109 = insertelement <64 x i32> %3104, i32 %3108, i32 9
  %3110 = extractelement <64 x i32> %3059, i32 10
  %3111 = sext i32 %3110 to i64
  %3112 = getelementptr inbounds i32, i32* %428, i64 %3111
  %3113 = load i32, i32* %3112, align 4, !tbaa !402
  %3114 = insertelement <64 x i32> %3109, i32 %3113, i32 10
  %3115 = extractelement <64 x i32> %3059, i32 11
  %3116 = sext i32 %3115 to i64
  %3117 = getelementptr inbounds i32, i32* %428, i64 %3116
  %3118 = load i32, i32* %3117, align 4, !tbaa !402
  %3119 = insertelement <64 x i32> %3114, i32 %3118, i32 11
  %3120 = extractelement <64 x i32> %3059, i32 12
  %3121 = sext i32 %3120 to i64
  %3122 = getelementptr inbounds i32, i32* %428, i64 %3121
  %3123 = load i32, i32* %3122, align 4, !tbaa !402
  %3124 = insertelement <64 x i32> %3119, i32 %3123, i32 12
  %3125 = extractelement <64 x i32> %3059, i32 13
  %3126 = sext i32 %3125 to i64
  %3127 = getelementptr inbounds i32, i32* %428, i64 %3126
  %3128 = load i32, i32* %3127, align 4, !tbaa !402
  %3129 = insertelement <64 x i32> %3124, i32 %3128, i32 13
  %3130 = extractelement <64 x i32> %3059, i32 14
  %3131 = sext i32 %3130 to i64
  %3132 = getelementptr inbounds i32, i32* %428, i64 %3131
  %3133 = load i32, i32* %3132, align 4, !tbaa !402
  %3134 = insertelement <64 x i32> %3129, i32 %3133, i32 14
  %3135 = extractelement <64 x i32> %3059, i32 15
  %3136 = sext i32 %3135 to i64
  %3137 = getelementptr inbounds i32, i32* %428, i64 %3136
  %3138 = load i32, i32* %3137, align 4, !tbaa !402
  %3139 = insertelement <64 x i32> %3134, i32 %3138, i32 15
  %3140 = extractelement <64 x i32> %3059, i32 16
  %3141 = sext i32 %3140 to i64
  %3142 = getelementptr inbounds i32, i32* %428, i64 %3141
  %3143 = load i32, i32* %3142, align 4, !tbaa !402
  %3144 = insertelement <64 x i32> %3139, i32 %3143, i32 16
  %3145 = extractelement <64 x i32> %3059, i32 17
  %3146 = sext i32 %3145 to i64
  %3147 = getelementptr inbounds i32, i32* %428, i64 %3146
  %3148 = load i32, i32* %3147, align 4, !tbaa !402
  %3149 = insertelement <64 x i32> %3144, i32 %3148, i32 17
  %3150 = extractelement <64 x i32> %3059, i32 18
  %3151 = sext i32 %3150 to i64
  %3152 = getelementptr inbounds i32, i32* %428, i64 %3151
  %3153 = load i32, i32* %3152, align 4, !tbaa !402
  %3154 = insertelement <64 x i32> %3149, i32 %3153, i32 18
  %3155 = extractelement <64 x i32> %3059, i32 19
  %3156 = sext i32 %3155 to i64
  %3157 = getelementptr inbounds i32, i32* %428, i64 %3156
  %3158 = load i32, i32* %3157, align 4, !tbaa !402
  %3159 = insertelement <64 x i32> %3154, i32 %3158, i32 19
  %3160 = extractelement <64 x i32> %3059, i32 20
  %3161 = sext i32 %3160 to i64
  %3162 = getelementptr inbounds i32, i32* %428, i64 %3161
  %3163 = load i32, i32* %3162, align 4, !tbaa !402
  %3164 = insertelement <64 x i32> %3159, i32 %3163, i32 20
  %3165 = extractelement <64 x i32> %3059, i32 21
  %3166 = sext i32 %3165 to i64
  %3167 = getelementptr inbounds i32, i32* %428, i64 %3166
  %3168 = load i32, i32* %3167, align 4, !tbaa !402
  %3169 = insertelement <64 x i32> %3164, i32 %3168, i32 21
  %3170 = extractelement <64 x i32> %3059, i32 22
  %3171 = sext i32 %3170 to i64
  %3172 = getelementptr inbounds i32, i32* %428, i64 %3171
  %3173 = load i32, i32* %3172, align 4, !tbaa !402
  %3174 = insertelement <64 x i32> %3169, i32 %3173, i32 22
  %3175 = extractelement <64 x i32> %3059, i32 23
  %3176 = sext i32 %3175 to i64
  %3177 = getelementptr inbounds i32, i32* %428, i64 %3176
  %3178 = load i32, i32* %3177, align 4, !tbaa !402
  %3179 = insertelement <64 x i32> %3174, i32 %3178, i32 23
  %3180 = extractelement <64 x i32> %3059, i32 24
  %3181 = sext i32 %3180 to i64
  %3182 = getelementptr inbounds i32, i32* %428, i64 %3181
  %3183 = load i32, i32* %3182, align 4, !tbaa !402
  %3184 = insertelement <64 x i32> %3179, i32 %3183, i32 24
  %3185 = extractelement <64 x i32> %3059, i32 25
  %3186 = sext i32 %3185 to i64
  %3187 = getelementptr inbounds i32, i32* %428, i64 %3186
  %3188 = load i32, i32* %3187, align 4, !tbaa !402
  %3189 = insertelement <64 x i32> %3184, i32 %3188, i32 25
  %3190 = extractelement <64 x i32> %3059, i32 26
  %3191 = sext i32 %3190 to i64
  %3192 = getelementptr inbounds i32, i32* %428, i64 %3191
  %3193 = load i32, i32* %3192, align 4, !tbaa !402
  %3194 = insertelement <64 x i32> %3189, i32 %3193, i32 26
  %3195 = extractelement <64 x i32> %3059, i32 27
  %3196 = sext i32 %3195 to i64
  %3197 = getelementptr inbounds i32, i32* %428, i64 %3196
  %3198 = load i32, i32* %3197, align 4, !tbaa !402
  %3199 = insertelement <64 x i32> %3194, i32 %3198, i32 27
  %3200 = extractelement <64 x i32> %3059, i32 28
  %3201 = sext i32 %3200 to i64
  %3202 = getelementptr inbounds i32, i32* %428, i64 %3201
  %3203 = load i32, i32* %3202, align 4, !tbaa !402
  %3204 = insertelement <64 x i32> %3199, i32 %3203, i32 28
  %3205 = extractelement <64 x i32> %3059, i32 29
  %3206 = sext i32 %3205 to i64
  %3207 = getelementptr inbounds i32, i32* %428, i64 %3206
  %3208 = load i32, i32* %3207, align 4, !tbaa !402
  %3209 = insertelement <64 x i32> %3204, i32 %3208, i32 29
  %3210 = extractelement <64 x i32> %3059, i32 30
  %3211 = sext i32 %3210 to i64
  %3212 = getelementptr inbounds i32, i32* %428, i64 %3211
  %3213 = load i32, i32* %3212, align 4, !tbaa !402
  %3214 = insertelement <64 x i32> %3209, i32 %3213, i32 30
  %3215 = extractelement <64 x i32> %3059, i32 31
  %3216 = sext i32 %3215 to i64
  %3217 = getelementptr inbounds i32, i32* %428, i64 %3216
  %3218 = load i32, i32* %3217, align 4, !tbaa !402
  %3219 = insertelement <64 x i32> %3214, i32 %3218, i32 31
  %3220 = extractelement <64 x i32> %3059, i32 32
  %3221 = sext i32 %3220 to i64
  %3222 = getelementptr inbounds i32, i32* %428, i64 %3221
  %3223 = load i32, i32* %3222, align 4, !tbaa !402
  %3224 = insertelement <64 x i32> %3219, i32 %3223, i32 32
  %3225 = extractelement <64 x i32> %3059, i32 33
  %3226 = sext i32 %3225 to i64
  %3227 = getelementptr inbounds i32, i32* %428, i64 %3226
  %3228 = load i32, i32* %3227, align 4, !tbaa !402
  %3229 = insertelement <64 x i32> %3224, i32 %3228, i32 33
  %3230 = extractelement <64 x i32> %3059, i32 34
  %3231 = sext i32 %3230 to i64
  %3232 = getelementptr inbounds i32, i32* %428, i64 %3231
  %3233 = load i32, i32* %3232, align 4, !tbaa !402
  %3234 = insertelement <64 x i32> %3229, i32 %3233, i32 34
  %3235 = extractelement <64 x i32> %3059, i32 35
  %3236 = sext i32 %3235 to i64
  %3237 = getelementptr inbounds i32, i32* %428, i64 %3236
  %3238 = load i32, i32* %3237, align 4, !tbaa !402
  %3239 = insertelement <64 x i32> %3234, i32 %3238, i32 35
  %3240 = extractelement <64 x i32> %3059, i32 36
  %3241 = sext i32 %3240 to i64
  %3242 = getelementptr inbounds i32, i32* %428, i64 %3241
  %3243 = load i32, i32* %3242, align 4, !tbaa !402
  %3244 = insertelement <64 x i32> %3239, i32 %3243, i32 36
  %3245 = extractelement <64 x i32> %3059, i32 37
  %3246 = sext i32 %3245 to i64
  %3247 = getelementptr inbounds i32, i32* %428, i64 %3246
  %3248 = load i32, i32* %3247, align 4, !tbaa !402
  %3249 = insertelement <64 x i32> %3244, i32 %3248, i32 37
  %3250 = extractelement <64 x i32> %3059, i32 38
  %3251 = sext i32 %3250 to i64
  %3252 = getelementptr inbounds i32, i32* %428, i64 %3251
  %3253 = load i32, i32* %3252, align 4, !tbaa !402
  %3254 = insertelement <64 x i32> %3249, i32 %3253, i32 38
  %3255 = extractelement <64 x i32> %3059, i32 39
  %3256 = sext i32 %3255 to i64
  %3257 = getelementptr inbounds i32, i32* %428, i64 %3256
  %3258 = load i32, i32* %3257, align 4, !tbaa !402
  %3259 = insertelement <64 x i32> %3254, i32 %3258, i32 39
  %3260 = extractelement <64 x i32> %3059, i32 40
  %3261 = sext i32 %3260 to i64
  %3262 = getelementptr inbounds i32, i32* %428, i64 %3261
  %3263 = load i32, i32* %3262, align 4, !tbaa !402
  %3264 = insertelement <64 x i32> %3259, i32 %3263, i32 40
  %3265 = extractelement <64 x i32> %3059, i32 41
  %3266 = sext i32 %3265 to i64
  %3267 = getelementptr inbounds i32, i32* %428, i64 %3266
  %3268 = load i32, i32* %3267, align 4, !tbaa !402
  %3269 = insertelement <64 x i32> %3264, i32 %3268, i32 41
  %3270 = extractelement <64 x i32> %3059, i32 42
  %3271 = sext i32 %3270 to i64
  %3272 = getelementptr inbounds i32, i32* %428, i64 %3271
  %3273 = load i32, i32* %3272, align 4, !tbaa !402
  %3274 = insertelement <64 x i32> %3269, i32 %3273, i32 42
  %3275 = extractelement <64 x i32> %3059, i32 43
  %3276 = sext i32 %3275 to i64
  %3277 = getelementptr inbounds i32, i32* %428, i64 %3276
  %3278 = load i32, i32* %3277, align 4, !tbaa !402
  %3279 = insertelement <64 x i32> %3274, i32 %3278, i32 43
  %3280 = extractelement <64 x i32> %3059, i32 44
  %3281 = sext i32 %3280 to i64
  %3282 = getelementptr inbounds i32, i32* %428, i64 %3281
  %3283 = load i32, i32* %3282, align 4, !tbaa !402
  %3284 = insertelement <64 x i32> %3279, i32 %3283, i32 44
  %3285 = extractelement <64 x i32> %3059, i32 45
  %3286 = sext i32 %3285 to i64
  %3287 = getelementptr inbounds i32, i32* %428, i64 %3286
  %3288 = load i32, i32* %3287, align 4, !tbaa !402
  %3289 = insertelement <64 x i32> %3284, i32 %3288, i32 45
  %3290 = extractelement <64 x i32> %3059, i32 46
  %3291 = sext i32 %3290 to i64
  %3292 = getelementptr inbounds i32, i32* %428, i64 %3291
  %3293 = load i32, i32* %3292, align 4, !tbaa !402
  %3294 = insertelement <64 x i32> %3289, i32 %3293, i32 46
  %3295 = extractelement <64 x i32> %3059, i32 47
  %3296 = sext i32 %3295 to i64
  %3297 = getelementptr inbounds i32, i32* %428, i64 %3296
  %3298 = load i32, i32* %3297, align 4, !tbaa !402
  %3299 = insertelement <64 x i32> %3294, i32 %3298, i32 47
  %3300 = extractelement <64 x i32> %3059, i32 48
  %3301 = sext i32 %3300 to i64
  %3302 = getelementptr inbounds i32, i32* %428, i64 %3301
  %3303 = load i32, i32* %3302, align 4, !tbaa !402
  %3304 = insertelement <64 x i32> %3299, i32 %3303, i32 48
  %3305 = extractelement <64 x i32> %3059, i32 49
  %3306 = sext i32 %3305 to i64
  %3307 = getelementptr inbounds i32, i32* %428, i64 %3306
  %3308 = load i32, i32* %3307, align 4, !tbaa !402
  %3309 = insertelement <64 x i32> %3304, i32 %3308, i32 49
  %3310 = extractelement <64 x i32> %3059, i32 50
  %3311 = sext i32 %3310 to i64
  %3312 = getelementptr inbounds i32, i32* %428, i64 %3311
  %3313 = load i32, i32* %3312, align 4, !tbaa !402
  %3314 = insertelement <64 x i32> %3309, i32 %3313, i32 50
  %3315 = extractelement <64 x i32> %3059, i32 51
  %3316 = sext i32 %3315 to i64
  %3317 = getelementptr inbounds i32, i32* %428, i64 %3316
  %3318 = load i32, i32* %3317, align 4, !tbaa !402
  %3319 = insertelement <64 x i32> %3314, i32 %3318, i32 51
  %3320 = extractelement <64 x i32> %3059, i32 52
  %3321 = sext i32 %3320 to i64
  %3322 = getelementptr inbounds i32, i32* %428, i64 %3321
  %3323 = load i32, i32* %3322, align 4, !tbaa !402
  %3324 = insertelement <64 x i32> %3319, i32 %3323, i32 52
  %3325 = extractelement <64 x i32> %3059, i32 53
  %3326 = sext i32 %3325 to i64
  %3327 = getelementptr inbounds i32, i32* %428, i64 %3326
  %3328 = load i32, i32* %3327, align 4, !tbaa !402
  %3329 = insertelement <64 x i32> %3324, i32 %3328, i32 53
  %3330 = extractelement <64 x i32> %3059, i32 54
  %3331 = sext i32 %3330 to i64
  %3332 = getelementptr inbounds i32, i32* %428, i64 %3331
  %3333 = load i32, i32* %3332, align 4, !tbaa !402
  %3334 = insertelement <64 x i32> %3329, i32 %3333, i32 54
  %3335 = extractelement <64 x i32> %3059, i32 55
  %3336 = sext i32 %3335 to i64
  %3337 = getelementptr inbounds i32, i32* %428, i64 %3336
  %3338 = load i32, i32* %3337, align 4, !tbaa !402
  %3339 = insertelement <64 x i32> %3334, i32 %3338, i32 55
  %3340 = extractelement <64 x i32> %3059, i32 56
  %3341 = sext i32 %3340 to i64
  %3342 = getelementptr inbounds i32, i32* %428, i64 %3341
  %3343 = load i32, i32* %3342, align 4, !tbaa !402
  %3344 = insertelement <64 x i32> %3339, i32 %3343, i32 56
  %3345 = extractelement <64 x i32> %3059, i32 57
  %3346 = sext i32 %3345 to i64
  %3347 = getelementptr inbounds i32, i32* %428, i64 %3346
  %3348 = load i32, i32* %3347, align 4, !tbaa !402
  %3349 = insertelement <64 x i32> %3344, i32 %3348, i32 57
  %3350 = extractelement <64 x i32> %3059, i32 58
  %3351 = sext i32 %3350 to i64
  %3352 = getelementptr inbounds i32, i32* %428, i64 %3351
  %3353 = load i32, i32* %3352, align 4, !tbaa !402
  %3354 = insertelement <64 x i32> %3349, i32 %3353, i32 58
  %3355 = extractelement <64 x i32> %3059, i32 59
  %3356 = sext i32 %3355 to i64
  %3357 = getelementptr inbounds i32, i32* %428, i64 %3356
  %3358 = load i32, i32* %3357, align 4, !tbaa !402
  %3359 = insertelement <64 x i32> %3354, i32 %3358, i32 59
  %3360 = extractelement <64 x i32> %3059, i32 60
  %3361 = sext i32 %3360 to i64
  %3362 = getelementptr inbounds i32, i32* %428, i64 %3361
  %3363 = load i32, i32* %3362, align 4, !tbaa !402
  %3364 = insertelement <64 x i32> %3359, i32 %3363, i32 60
  %3365 = extractelement <64 x i32> %3059, i32 61
  %3366 = sext i32 %3365 to i64
  %3367 = getelementptr inbounds i32, i32* %428, i64 %3366
  %3368 = load i32, i32* %3367, align 4, !tbaa !402
  %3369 = insertelement <64 x i32> %3364, i32 %3368, i32 61
  %3370 = extractelement <64 x i32> %3059, i32 62
  %3371 = sext i32 %3370 to i64
  %3372 = getelementptr inbounds i32, i32* %428, i64 %3371
  %3373 = load i32, i32* %3372, align 4, !tbaa !402
  %3374 = insertelement <64 x i32> %3369, i32 %3373, i32 62
  %3375 = extractelement <64 x i32> %3059, i32 63
  %3376 = sext i32 %3375 to i64
  %3377 = getelementptr inbounds i32, i32* %428, i64 %3376
  %3378 = load i32, i32* %3377, align 4, !tbaa !402
  %3379 = insertelement <64 x i32> %3374, i32 %3378, i32 63
  %3380 = sub nsw i32 %72, %"Output.s1.r10$x75.us"
  %3381 = insertelement <64 x i32> undef, i32 %3380, i32 0
  %3382 = shufflevector <64 x i32> %3381, <64 x i32> undef, <64 x i32> zeroinitializer
  %a60.us = add nsw <64 x i32> %t192.us, %3382
  %3383 = shufflevector <64 x i32> %a60.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3384 = icmp sgt <16 x i32> %430, %3383
  %3385 = shufflevector <64 x i32> %a60.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3386 = icmp sgt <16 x i32> %430, %3385
  %3387 = shufflevector <64 x i32> %a60.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %3388 = icmp sgt <16 x i32> %430, %3387
  %3389 = shufflevector <64 x i32> %a60.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %3390 = icmp sgt <16 x i32> %430, %3389
  %3391 = select <16 x i1> %3384, <16 x i32> %3383, <16 x i32> %430
  %3392 = select <16 x i1> %3386, <16 x i32> %3385, <16 x i32> %430
  %3393 = select <16 x i1> %3388, <16 x i32> %3387, <16 x i32> %430
  %3394 = select <16 x i1> %3390, <16 x i32> %3389, <16 x i32> %430
  %3395 = icmp sgt <16 x i32> %3391, %432
  %3396 = icmp sgt <16 x i32> %3392, %432
  %3397 = icmp sgt <16 x i32> %3393, %432
  %3398 = icmp sgt <16 x i32> %3394, %432
  %3399 = select <16 x i1> %3395, <16 x i32> %3391, <16 x i32> %432
  %3400 = select <16 x i1> %3396, <16 x i32> %3392, <16 x i32> %432
  %3401 = select <16 x i1> %3397, <16 x i32> %3393, <16 x i32> %432
  %3402 = select <16 x i1> %3398, <16 x i32> %3394, <16 x i32> %432
  %3403 = shufflevector <16 x i32> %3399, <16 x i32> %3400, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3404 = shufflevector <16 x i32> %3401, <16 x i32> %3402, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3405 = shufflevector <32 x i32> %3403, <32 x i32> %3404, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %3406 = add <64 x i32> %3405, %2686
  %3407 = add <64 x i32> %3406, %2927
  %3408 = extractelement <64 x i32> %3407, i32 0
  %3409 = sext i32 %3408 to i64
  %3410 = getelementptr inbounds i32, i32* %439, i64 %3409
  %3411 = load i32, i32* %3410, align 4, !tbaa !404
  %3412 = insertelement <64 x i32> undef, i32 %3411, i32 0
  %3413 = extractelement <64 x i32> %3407, i32 1
  %3414 = sext i32 %3413 to i64
  %3415 = getelementptr inbounds i32, i32* %439, i64 %3414
  %3416 = load i32, i32* %3415, align 4, !tbaa !404
  %3417 = insertelement <64 x i32> %3412, i32 %3416, i32 1
  %3418 = extractelement <64 x i32> %3407, i32 2
  %3419 = sext i32 %3418 to i64
  %3420 = getelementptr inbounds i32, i32* %439, i64 %3419
  %3421 = load i32, i32* %3420, align 4, !tbaa !404
  %3422 = insertelement <64 x i32> %3417, i32 %3421, i32 2
  %3423 = extractelement <64 x i32> %3407, i32 3
  %3424 = sext i32 %3423 to i64
  %3425 = getelementptr inbounds i32, i32* %439, i64 %3424
  %3426 = load i32, i32* %3425, align 4, !tbaa !404
  %3427 = insertelement <64 x i32> %3422, i32 %3426, i32 3
  %3428 = extractelement <64 x i32> %3407, i32 4
  %3429 = sext i32 %3428 to i64
  %3430 = getelementptr inbounds i32, i32* %439, i64 %3429
  %3431 = load i32, i32* %3430, align 4, !tbaa !404
  %3432 = insertelement <64 x i32> %3427, i32 %3431, i32 4
  %3433 = extractelement <64 x i32> %3407, i32 5
  %3434 = sext i32 %3433 to i64
  %3435 = getelementptr inbounds i32, i32* %439, i64 %3434
  %3436 = load i32, i32* %3435, align 4, !tbaa !404
  %3437 = insertelement <64 x i32> %3432, i32 %3436, i32 5
  %3438 = extractelement <64 x i32> %3407, i32 6
  %3439 = sext i32 %3438 to i64
  %3440 = getelementptr inbounds i32, i32* %439, i64 %3439
  %3441 = load i32, i32* %3440, align 4, !tbaa !404
  %3442 = insertelement <64 x i32> %3437, i32 %3441, i32 6
  %3443 = extractelement <64 x i32> %3407, i32 7
  %3444 = sext i32 %3443 to i64
  %3445 = getelementptr inbounds i32, i32* %439, i64 %3444
  %3446 = load i32, i32* %3445, align 4, !tbaa !404
  %3447 = insertelement <64 x i32> %3442, i32 %3446, i32 7
  %3448 = extractelement <64 x i32> %3407, i32 8
  %3449 = sext i32 %3448 to i64
  %3450 = getelementptr inbounds i32, i32* %439, i64 %3449
  %3451 = load i32, i32* %3450, align 4, !tbaa !404
  %3452 = insertelement <64 x i32> %3447, i32 %3451, i32 8
  %3453 = extractelement <64 x i32> %3407, i32 9
  %3454 = sext i32 %3453 to i64
  %3455 = getelementptr inbounds i32, i32* %439, i64 %3454
  %3456 = load i32, i32* %3455, align 4, !tbaa !404
  %3457 = insertelement <64 x i32> %3452, i32 %3456, i32 9
  %3458 = extractelement <64 x i32> %3407, i32 10
  %3459 = sext i32 %3458 to i64
  %3460 = getelementptr inbounds i32, i32* %439, i64 %3459
  %3461 = load i32, i32* %3460, align 4, !tbaa !404
  %3462 = insertelement <64 x i32> %3457, i32 %3461, i32 10
  %3463 = extractelement <64 x i32> %3407, i32 11
  %3464 = sext i32 %3463 to i64
  %3465 = getelementptr inbounds i32, i32* %439, i64 %3464
  %3466 = load i32, i32* %3465, align 4, !tbaa !404
  %3467 = insertelement <64 x i32> %3462, i32 %3466, i32 11
  %3468 = extractelement <64 x i32> %3407, i32 12
  %3469 = sext i32 %3468 to i64
  %3470 = getelementptr inbounds i32, i32* %439, i64 %3469
  %3471 = load i32, i32* %3470, align 4, !tbaa !404
  %3472 = insertelement <64 x i32> %3467, i32 %3471, i32 12
  %3473 = extractelement <64 x i32> %3407, i32 13
  %3474 = sext i32 %3473 to i64
  %3475 = getelementptr inbounds i32, i32* %439, i64 %3474
  %3476 = load i32, i32* %3475, align 4, !tbaa !404
  %3477 = insertelement <64 x i32> %3472, i32 %3476, i32 13
  %3478 = extractelement <64 x i32> %3407, i32 14
  %3479 = sext i32 %3478 to i64
  %3480 = getelementptr inbounds i32, i32* %439, i64 %3479
  %3481 = load i32, i32* %3480, align 4, !tbaa !404
  %3482 = insertelement <64 x i32> %3477, i32 %3481, i32 14
  %3483 = extractelement <64 x i32> %3407, i32 15
  %3484 = sext i32 %3483 to i64
  %3485 = getelementptr inbounds i32, i32* %439, i64 %3484
  %3486 = load i32, i32* %3485, align 4, !tbaa !404
  %3487 = insertelement <64 x i32> %3482, i32 %3486, i32 15
  %3488 = extractelement <64 x i32> %3407, i32 16
  %3489 = sext i32 %3488 to i64
  %3490 = getelementptr inbounds i32, i32* %439, i64 %3489
  %3491 = load i32, i32* %3490, align 4, !tbaa !404
  %3492 = insertelement <64 x i32> %3487, i32 %3491, i32 16
  %3493 = extractelement <64 x i32> %3407, i32 17
  %3494 = sext i32 %3493 to i64
  %3495 = getelementptr inbounds i32, i32* %439, i64 %3494
  %3496 = load i32, i32* %3495, align 4, !tbaa !404
  %3497 = insertelement <64 x i32> %3492, i32 %3496, i32 17
  %3498 = extractelement <64 x i32> %3407, i32 18
  %3499 = sext i32 %3498 to i64
  %3500 = getelementptr inbounds i32, i32* %439, i64 %3499
  %3501 = load i32, i32* %3500, align 4, !tbaa !404
  %3502 = insertelement <64 x i32> %3497, i32 %3501, i32 18
  %3503 = extractelement <64 x i32> %3407, i32 19
  %3504 = sext i32 %3503 to i64
  %3505 = getelementptr inbounds i32, i32* %439, i64 %3504
  %3506 = load i32, i32* %3505, align 4, !tbaa !404
  %3507 = insertelement <64 x i32> %3502, i32 %3506, i32 19
  %3508 = extractelement <64 x i32> %3407, i32 20
  %3509 = sext i32 %3508 to i64
  %3510 = getelementptr inbounds i32, i32* %439, i64 %3509
  %3511 = load i32, i32* %3510, align 4, !tbaa !404
  %3512 = insertelement <64 x i32> %3507, i32 %3511, i32 20
  %3513 = extractelement <64 x i32> %3407, i32 21
  %3514 = sext i32 %3513 to i64
  %3515 = getelementptr inbounds i32, i32* %439, i64 %3514
  %3516 = load i32, i32* %3515, align 4, !tbaa !404
  %3517 = insertelement <64 x i32> %3512, i32 %3516, i32 21
  %3518 = extractelement <64 x i32> %3407, i32 22
  %3519 = sext i32 %3518 to i64
  %3520 = getelementptr inbounds i32, i32* %439, i64 %3519
  %3521 = load i32, i32* %3520, align 4, !tbaa !404
  %3522 = insertelement <64 x i32> %3517, i32 %3521, i32 22
  %3523 = extractelement <64 x i32> %3407, i32 23
  %3524 = sext i32 %3523 to i64
  %3525 = getelementptr inbounds i32, i32* %439, i64 %3524
  %3526 = load i32, i32* %3525, align 4, !tbaa !404
  %3527 = insertelement <64 x i32> %3522, i32 %3526, i32 23
  %3528 = extractelement <64 x i32> %3407, i32 24
  %3529 = sext i32 %3528 to i64
  %3530 = getelementptr inbounds i32, i32* %439, i64 %3529
  %3531 = load i32, i32* %3530, align 4, !tbaa !404
  %3532 = insertelement <64 x i32> %3527, i32 %3531, i32 24
  %3533 = extractelement <64 x i32> %3407, i32 25
  %3534 = sext i32 %3533 to i64
  %3535 = getelementptr inbounds i32, i32* %439, i64 %3534
  %3536 = load i32, i32* %3535, align 4, !tbaa !404
  %3537 = insertelement <64 x i32> %3532, i32 %3536, i32 25
  %3538 = extractelement <64 x i32> %3407, i32 26
  %3539 = sext i32 %3538 to i64
  %3540 = getelementptr inbounds i32, i32* %439, i64 %3539
  %3541 = load i32, i32* %3540, align 4, !tbaa !404
  %3542 = insertelement <64 x i32> %3537, i32 %3541, i32 26
  %3543 = extractelement <64 x i32> %3407, i32 27
  %3544 = sext i32 %3543 to i64
  %3545 = getelementptr inbounds i32, i32* %439, i64 %3544
  %3546 = load i32, i32* %3545, align 4, !tbaa !404
  %3547 = insertelement <64 x i32> %3542, i32 %3546, i32 27
  %3548 = extractelement <64 x i32> %3407, i32 28
  %3549 = sext i32 %3548 to i64
  %3550 = getelementptr inbounds i32, i32* %439, i64 %3549
  %3551 = load i32, i32* %3550, align 4, !tbaa !404
  %3552 = insertelement <64 x i32> %3547, i32 %3551, i32 28
  %3553 = extractelement <64 x i32> %3407, i32 29
  %3554 = sext i32 %3553 to i64
  %3555 = getelementptr inbounds i32, i32* %439, i64 %3554
  %3556 = load i32, i32* %3555, align 4, !tbaa !404
  %3557 = insertelement <64 x i32> %3552, i32 %3556, i32 29
  %3558 = extractelement <64 x i32> %3407, i32 30
  %3559 = sext i32 %3558 to i64
  %3560 = getelementptr inbounds i32, i32* %439, i64 %3559
  %3561 = load i32, i32* %3560, align 4, !tbaa !404
  %3562 = insertelement <64 x i32> %3557, i32 %3561, i32 30
  %3563 = extractelement <64 x i32> %3407, i32 31
  %3564 = sext i32 %3563 to i64
  %3565 = getelementptr inbounds i32, i32* %439, i64 %3564
  %3566 = load i32, i32* %3565, align 4, !tbaa !404
  %3567 = insertelement <64 x i32> %3562, i32 %3566, i32 31
  %3568 = extractelement <64 x i32> %3407, i32 32
  %3569 = sext i32 %3568 to i64
  %3570 = getelementptr inbounds i32, i32* %439, i64 %3569
  %3571 = load i32, i32* %3570, align 4, !tbaa !404
  %3572 = insertelement <64 x i32> %3567, i32 %3571, i32 32
  %3573 = extractelement <64 x i32> %3407, i32 33
  %3574 = sext i32 %3573 to i64
  %3575 = getelementptr inbounds i32, i32* %439, i64 %3574
  %3576 = load i32, i32* %3575, align 4, !tbaa !404
  %3577 = insertelement <64 x i32> %3572, i32 %3576, i32 33
  %3578 = extractelement <64 x i32> %3407, i32 34
  %3579 = sext i32 %3578 to i64
  %3580 = getelementptr inbounds i32, i32* %439, i64 %3579
  %3581 = load i32, i32* %3580, align 4, !tbaa !404
  %3582 = insertelement <64 x i32> %3577, i32 %3581, i32 34
  %3583 = extractelement <64 x i32> %3407, i32 35
  %3584 = sext i32 %3583 to i64
  %3585 = getelementptr inbounds i32, i32* %439, i64 %3584
  %3586 = load i32, i32* %3585, align 4, !tbaa !404
  %3587 = insertelement <64 x i32> %3582, i32 %3586, i32 35
  %3588 = extractelement <64 x i32> %3407, i32 36
  %3589 = sext i32 %3588 to i64
  %3590 = getelementptr inbounds i32, i32* %439, i64 %3589
  %3591 = load i32, i32* %3590, align 4, !tbaa !404
  %3592 = insertelement <64 x i32> %3587, i32 %3591, i32 36
  %3593 = extractelement <64 x i32> %3407, i32 37
  %3594 = sext i32 %3593 to i64
  %3595 = getelementptr inbounds i32, i32* %439, i64 %3594
  %3596 = load i32, i32* %3595, align 4, !tbaa !404
  %3597 = insertelement <64 x i32> %3592, i32 %3596, i32 37
  %3598 = extractelement <64 x i32> %3407, i32 38
  %3599 = sext i32 %3598 to i64
  %3600 = getelementptr inbounds i32, i32* %439, i64 %3599
  %3601 = load i32, i32* %3600, align 4, !tbaa !404
  %3602 = insertelement <64 x i32> %3597, i32 %3601, i32 38
  %3603 = extractelement <64 x i32> %3407, i32 39
  %3604 = sext i32 %3603 to i64
  %3605 = getelementptr inbounds i32, i32* %439, i64 %3604
  %3606 = load i32, i32* %3605, align 4, !tbaa !404
  %3607 = insertelement <64 x i32> %3602, i32 %3606, i32 39
  %3608 = extractelement <64 x i32> %3407, i32 40
  %3609 = sext i32 %3608 to i64
  %3610 = getelementptr inbounds i32, i32* %439, i64 %3609
  %3611 = load i32, i32* %3610, align 4, !tbaa !404
  %3612 = insertelement <64 x i32> %3607, i32 %3611, i32 40
  %3613 = extractelement <64 x i32> %3407, i32 41
  %3614 = sext i32 %3613 to i64
  %3615 = getelementptr inbounds i32, i32* %439, i64 %3614
  %3616 = load i32, i32* %3615, align 4, !tbaa !404
  %3617 = insertelement <64 x i32> %3612, i32 %3616, i32 41
  %3618 = extractelement <64 x i32> %3407, i32 42
  %3619 = sext i32 %3618 to i64
  %3620 = getelementptr inbounds i32, i32* %439, i64 %3619
  %3621 = load i32, i32* %3620, align 4, !tbaa !404
  %3622 = insertelement <64 x i32> %3617, i32 %3621, i32 42
  %3623 = extractelement <64 x i32> %3407, i32 43
  %3624 = sext i32 %3623 to i64
  %3625 = getelementptr inbounds i32, i32* %439, i64 %3624
  %3626 = load i32, i32* %3625, align 4, !tbaa !404
  %3627 = insertelement <64 x i32> %3622, i32 %3626, i32 43
  %3628 = extractelement <64 x i32> %3407, i32 44
  %3629 = sext i32 %3628 to i64
  %3630 = getelementptr inbounds i32, i32* %439, i64 %3629
  %3631 = load i32, i32* %3630, align 4, !tbaa !404
  %3632 = insertelement <64 x i32> %3627, i32 %3631, i32 44
  %3633 = extractelement <64 x i32> %3407, i32 45
  %3634 = sext i32 %3633 to i64
  %3635 = getelementptr inbounds i32, i32* %439, i64 %3634
  %3636 = load i32, i32* %3635, align 4, !tbaa !404
  %3637 = insertelement <64 x i32> %3632, i32 %3636, i32 45
  %3638 = extractelement <64 x i32> %3407, i32 46
  %3639 = sext i32 %3638 to i64
  %3640 = getelementptr inbounds i32, i32* %439, i64 %3639
  %3641 = load i32, i32* %3640, align 4, !tbaa !404
  %3642 = insertelement <64 x i32> %3637, i32 %3641, i32 46
  %3643 = extractelement <64 x i32> %3407, i32 47
  %3644 = sext i32 %3643 to i64
  %3645 = getelementptr inbounds i32, i32* %439, i64 %3644
  %3646 = load i32, i32* %3645, align 4, !tbaa !404
  %3647 = insertelement <64 x i32> %3642, i32 %3646, i32 47
  %3648 = extractelement <64 x i32> %3407, i32 48
  %3649 = sext i32 %3648 to i64
  %3650 = getelementptr inbounds i32, i32* %439, i64 %3649
  %3651 = load i32, i32* %3650, align 4, !tbaa !404
  %3652 = insertelement <64 x i32> %3647, i32 %3651, i32 48
  %3653 = extractelement <64 x i32> %3407, i32 49
  %3654 = sext i32 %3653 to i64
  %3655 = getelementptr inbounds i32, i32* %439, i64 %3654
  %3656 = load i32, i32* %3655, align 4, !tbaa !404
  %3657 = insertelement <64 x i32> %3652, i32 %3656, i32 49
  %3658 = extractelement <64 x i32> %3407, i32 50
  %3659 = sext i32 %3658 to i64
  %3660 = getelementptr inbounds i32, i32* %439, i64 %3659
  %3661 = load i32, i32* %3660, align 4, !tbaa !404
  %3662 = insertelement <64 x i32> %3657, i32 %3661, i32 50
  %3663 = extractelement <64 x i32> %3407, i32 51
  %3664 = sext i32 %3663 to i64
  %3665 = getelementptr inbounds i32, i32* %439, i64 %3664
  %3666 = load i32, i32* %3665, align 4, !tbaa !404
  %3667 = insertelement <64 x i32> %3662, i32 %3666, i32 51
  %3668 = extractelement <64 x i32> %3407, i32 52
  %3669 = sext i32 %3668 to i64
  %3670 = getelementptr inbounds i32, i32* %439, i64 %3669
  %3671 = load i32, i32* %3670, align 4, !tbaa !404
  %3672 = insertelement <64 x i32> %3667, i32 %3671, i32 52
  %3673 = extractelement <64 x i32> %3407, i32 53
  %3674 = sext i32 %3673 to i64
  %3675 = getelementptr inbounds i32, i32* %439, i64 %3674
  %3676 = load i32, i32* %3675, align 4, !tbaa !404
  %3677 = insertelement <64 x i32> %3672, i32 %3676, i32 53
  %3678 = extractelement <64 x i32> %3407, i32 54
  %3679 = sext i32 %3678 to i64
  %3680 = getelementptr inbounds i32, i32* %439, i64 %3679
  %3681 = load i32, i32* %3680, align 4, !tbaa !404
  %3682 = insertelement <64 x i32> %3677, i32 %3681, i32 54
  %3683 = extractelement <64 x i32> %3407, i32 55
  %3684 = sext i32 %3683 to i64
  %3685 = getelementptr inbounds i32, i32* %439, i64 %3684
  %3686 = load i32, i32* %3685, align 4, !tbaa !404
  %3687 = insertelement <64 x i32> %3682, i32 %3686, i32 55
  %3688 = extractelement <64 x i32> %3407, i32 56
  %3689 = sext i32 %3688 to i64
  %3690 = getelementptr inbounds i32, i32* %439, i64 %3689
  %3691 = load i32, i32* %3690, align 4, !tbaa !404
  %3692 = insertelement <64 x i32> %3687, i32 %3691, i32 56
  %3693 = extractelement <64 x i32> %3407, i32 57
  %3694 = sext i32 %3693 to i64
  %3695 = getelementptr inbounds i32, i32* %439, i64 %3694
  %3696 = load i32, i32* %3695, align 4, !tbaa !404
  %3697 = insertelement <64 x i32> %3692, i32 %3696, i32 57
  %3698 = extractelement <64 x i32> %3407, i32 58
  %3699 = sext i32 %3698 to i64
  %3700 = getelementptr inbounds i32, i32* %439, i64 %3699
  %3701 = load i32, i32* %3700, align 4, !tbaa !404
  %3702 = insertelement <64 x i32> %3697, i32 %3701, i32 58
  %3703 = extractelement <64 x i32> %3407, i32 59
  %3704 = sext i32 %3703 to i64
  %3705 = getelementptr inbounds i32, i32* %439, i64 %3704
  %3706 = load i32, i32* %3705, align 4, !tbaa !404
  %3707 = insertelement <64 x i32> %3702, i32 %3706, i32 59
  %3708 = extractelement <64 x i32> %3407, i32 60
  %3709 = sext i32 %3708 to i64
  %3710 = getelementptr inbounds i32, i32* %439, i64 %3709
  %3711 = load i32, i32* %3710, align 4, !tbaa !404
  %3712 = insertelement <64 x i32> %3707, i32 %3711, i32 60
  %3713 = extractelement <64 x i32> %3407, i32 61
  %3714 = sext i32 %3713 to i64
  %3715 = getelementptr inbounds i32, i32* %439, i64 %3714
  %3716 = load i32, i32* %3715, align 4, !tbaa !404
  %3717 = insertelement <64 x i32> %3712, i32 %3716, i32 61
  %3718 = extractelement <64 x i32> %3407, i32 62
  %3719 = sext i32 %3718 to i64
  %3720 = getelementptr inbounds i32, i32* %439, i64 %3719
  %3721 = load i32, i32* %3720, align 4, !tbaa !404
  %3722 = insertelement <64 x i32> %3717, i32 %3721, i32 62
  %3723 = extractelement <64 x i32> %3407, i32 63
  %3724 = sext i32 %3723 to i64
  %3725 = getelementptr inbounds i32, i32* %439, i64 %3724
  %3726 = load i32, i32* %3725, align 4, !tbaa !404
  %3727 = insertelement <64 x i32> %3722, i32 %3726, i32 63
  %3728 = mul nsw <64 x i32> %3727, %3379
  %3729 = add nsw <64 x i32> %3728, %3055
  %3730 = extractelement <64 x i32> %3729, i32 0
  store i32 %3730, i32* %2710, align 4, !tbaa !399
  %3731 = extractelement <64 x i32> %3729, i32 1
  store i32 %3731, i32* %2713, align 4, !tbaa !399
  %3732 = extractelement <64 x i32> %3729, i32 2
  store i32 %3732, i32* %2716, align 4, !tbaa !399
  %3733 = extractelement <64 x i32> %3729, i32 3
  store i32 %3733, i32* %2719, align 4, !tbaa !399
  %3734 = extractelement <64 x i32> %3729, i32 4
  store i32 %3734, i32* %2722, align 4, !tbaa !399
  %3735 = extractelement <64 x i32> %3729, i32 5
  store i32 %3735, i32* %2725, align 4, !tbaa !399
  %3736 = extractelement <64 x i32> %3729, i32 6
  store i32 %3736, i32* %2728, align 4, !tbaa !399
  %3737 = extractelement <64 x i32> %3729, i32 7
  store i32 %3737, i32* %2731, align 4, !tbaa !399
  %3738 = extractelement <64 x i32> %3729, i32 8
  store i32 %3738, i32* %2734, align 4, !tbaa !399
  %3739 = extractelement <64 x i32> %3729, i32 9
  store i32 %3739, i32* %2737, align 4, !tbaa !399
  %3740 = extractelement <64 x i32> %3729, i32 10
  store i32 %3740, i32* %2740, align 4, !tbaa !399
  %3741 = extractelement <64 x i32> %3729, i32 11
  store i32 %3741, i32* %2743, align 4, !tbaa !399
  %3742 = extractelement <64 x i32> %3729, i32 12
  store i32 %3742, i32* %2746, align 4, !tbaa !399
  %3743 = extractelement <64 x i32> %3729, i32 13
  store i32 %3743, i32* %2749, align 4, !tbaa !399
  %3744 = extractelement <64 x i32> %3729, i32 14
  store i32 %3744, i32* %2752, align 4, !tbaa !399
  %3745 = extractelement <64 x i32> %3729, i32 15
  store i32 %3745, i32* %2755, align 4, !tbaa !399
  %3746 = extractelement <64 x i32> %3729, i32 16
  store i32 %3746, i32* %2758, align 4, !tbaa !399
  %3747 = extractelement <64 x i32> %3729, i32 17
  store i32 %3747, i32* %2761, align 4, !tbaa !399
  %3748 = extractelement <64 x i32> %3729, i32 18
  store i32 %3748, i32* %2764, align 4, !tbaa !399
  %3749 = extractelement <64 x i32> %3729, i32 19
  store i32 %3749, i32* %2767, align 4, !tbaa !399
  %3750 = extractelement <64 x i32> %3729, i32 20
  store i32 %3750, i32* %2770, align 4, !tbaa !399
  %3751 = extractelement <64 x i32> %3729, i32 21
  store i32 %3751, i32* %2773, align 4, !tbaa !399
  %3752 = extractelement <64 x i32> %3729, i32 22
  store i32 %3752, i32* %2776, align 4, !tbaa !399
  %3753 = extractelement <64 x i32> %3729, i32 23
  store i32 %3753, i32* %2779, align 4, !tbaa !399
  %3754 = extractelement <64 x i32> %3729, i32 24
  store i32 %3754, i32* %2782, align 4, !tbaa !399
  %3755 = extractelement <64 x i32> %3729, i32 25
  store i32 %3755, i32* %2785, align 4, !tbaa !399
  %3756 = extractelement <64 x i32> %3729, i32 26
  store i32 %3756, i32* %2788, align 4, !tbaa !399
  %3757 = extractelement <64 x i32> %3729, i32 27
  store i32 %3757, i32* %2791, align 4, !tbaa !399
  %3758 = extractelement <64 x i32> %3729, i32 28
  store i32 %3758, i32* %2794, align 4, !tbaa !399
  %3759 = extractelement <64 x i32> %3729, i32 29
  store i32 %3759, i32* %2797, align 4, !tbaa !399
  %3760 = extractelement <64 x i32> %3729, i32 30
  store i32 %3760, i32* %2800, align 4, !tbaa !399
  %3761 = extractelement <64 x i32> %3729, i32 31
  store i32 %3761, i32* %2803, align 4, !tbaa !399
  %3762 = extractelement <64 x i32> %3729, i32 32
  store i32 %3762, i32* %2806, align 4, !tbaa !399
  %3763 = extractelement <64 x i32> %3729, i32 33
  store i32 %3763, i32* %2809, align 4, !tbaa !399
  %3764 = extractelement <64 x i32> %3729, i32 34
  store i32 %3764, i32* %2812, align 4, !tbaa !399
  %3765 = extractelement <64 x i32> %3729, i32 35
  store i32 %3765, i32* %2815, align 4, !tbaa !399
  %3766 = extractelement <64 x i32> %3729, i32 36
  store i32 %3766, i32* %2818, align 4, !tbaa !399
  %3767 = extractelement <64 x i32> %3729, i32 37
  store i32 %3767, i32* %2821, align 4, !tbaa !399
  %3768 = extractelement <64 x i32> %3729, i32 38
  store i32 %3768, i32* %2824, align 4, !tbaa !399
  %3769 = extractelement <64 x i32> %3729, i32 39
  store i32 %3769, i32* %2827, align 4, !tbaa !399
  %3770 = extractelement <64 x i32> %3729, i32 40
  store i32 %3770, i32* %2830, align 4, !tbaa !399
  %3771 = extractelement <64 x i32> %3729, i32 41
  store i32 %3771, i32* %2833, align 4, !tbaa !399
  %3772 = extractelement <64 x i32> %3729, i32 42
  store i32 %3772, i32* %2836, align 4, !tbaa !399
  %3773 = extractelement <64 x i32> %3729, i32 43
  store i32 %3773, i32* %2839, align 4, !tbaa !399
  %3774 = extractelement <64 x i32> %3729, i32 44
  store i32 %3774, i32* %2842, align 4, !tbaa !399
  %3775 = extractelement <64 x i32> %3729, i32 45
  store i32 %3775, i32* %2845, align 4, !tbaa !399
  %3776 = extractelement <64 x i32> %3729, i32 46
  store i32 %3776, i32* %2848, align 4, !tbaa !399
  %3777 = extractelement <64 x i32> %3729, i32 47
  store i32 %3777, i32* %2851, align 4, !tbaa !399
  %3778 = extractelement <64 x i32> %3729, i32 48
  store i32 %3778, i32* %2854, align 4, !tbaa !399
  %3779 = extractelement <64 x i32> %3729, i32 49
  store i32 %3779, i32* %2857, align 4, !tbaa !399
  %3780 = extractelement <64 x i32> %3729, i32 50
  store i32 %3780, i32* %2860, align 4, !tbaa !399
  %3781 = extractelement <64 x i32> %3729, i32 51
  store i32 %3781, i32* %2863, align 4, !tbaa !399
  %3782 = extractelement <64 x i32> %3729, i32 52
  store i32 %3782, i32* %2866, align 4, !tbaa !399
  %3783 = extractelement <64 x i32> %3729, i32 53
  store i32 %3783, i32* %2869, align 4, !tbaa !399
  %3784 = extractelement <64 x i32> %3729, i32 54
  store i32 %3784, i32* %2872, align 4, !tbaa !399
  %3785 = extractelement <64 x i32> %3729, i32 55
  store i32 %3785, i32* %2875, align 4, !tbaa !399
  %3786 = extractelement <64 x i32> %3729, i32 56
  store i32 %3786, i32* %2878, align 4, !tbaa !399
  %3787 = extractelement <64 x i32> %3729, i32 57
  store i32 %3787, i32* %2881, align 4, !tbaa !399
  %3788 = extractelement <64 x i32> %3729, i32 58
  store i32 %3788, i32* %2884, align 4, !tbaa !399
  %3789 = extractelement <64 x i32> %3729, i32 59
  store i32 %3789, i32* %2887, align 4, !tbaa !399
  %3790 = extractelement <64 x i32> %3729, i32 60
  store i32 %3790, i32* %2890, align 4, !tbaa !399
  %3791 = extractelement <64 x i32> %3729, i32 61
  store i32 %3791, i32* %2893, align 4, !tbaa !399
  %3792 = extractelement <64 x i32> %3729, i32 62
  store i32 %3792, i32* %2896, align 4, !tbaa !399
  %3793 = extractelement <64 x i32> %3729, i32 63
  store i32 %3793, i32* %2899, align 4, !tbaa !399
  %3794 = add nuw nsw i32 %"Output.s1.r10$x75.us", 1
  %.not385.us = icmp eq i32 %3794, %12
  br i1 %.not385.us, label %"end for Output.s1.r10$x74.loopexit.us", label %"for Output.s1.r10$x73.us"

"end for Output.s1.r10$x74.loopexit.us":          ; preds = %"for Output.s1.r10$x73.us"
  %3795 = add nuw nsw i32 %"Output.s1.r10$y72.us", 1
  %.not380.us = icmp eq i32 %3795, %15
  br i1 %.not380.us, label %"end for Output.s1.r10$y71", label %"for Output.s1.r10$y70.us"

"end for Output.s1.r10$z.rebased68":              ; preds = %"end for Output.s1.r10$y71", %"end for Output.s1.r10$z.rebased"
  %3796 = add nuw nsw i32 %Output.s1.x.x.x.x, 1
  %.not378 = icmp eq i32 %3796, %t225
  br i1 %.not378, label %"assert succeeded81", label %"for Output.s1.x.x.x.x"

"end for Output.s1.r10$y71":                      ; preds = %"end for Output.s1.r10$x74.loopexit.us", %"for Output.s1.r10$y70.preheader", %"for Output.s1.r10$z.rebased67"
  %3797 = add nuw nsw i32 %"Output.s1.r10$z.rebased69", 1
  %.not379 = icmp eq i32 %3797, %t248
  br i1 %.not379, label %"end for Output.s1.r10$z.rebased68", label %"for Output.s1.r10$z.rebased67"

"assert succeeded81":                             ; preds = %"end for Output.s1.r10$z.rebased68", %_halide_buffer_is_bounds_query.exit535, %"end for Output.s0.c_out.rebased"
  %3798 = load i8*, i8** %host.i, align 8, !tbaa !172
  %3799 = load i8, i8* %code.i.i, align 2, !tbaa !305
  %conv.i.i558 = zext i8 %3799 to i32
  %3800 = load i8, i8* %bits.i.i, align 1, !tbaa !136
  %conv3.i.i560 = zext i8 %3800 to i32
  %shl.i.i561 = shl nuw nsw i32 %conv3.i.i560, 8
  %or.i.i562 = or i32 %shl.i.i561, %conv.i.i558
  %3801 = load i16, i16* %lanes.i.i, align 2, !tbaa !306
  %conv4.i.i564 = zext i16 %3801 to i32
  %shl5.i.i565 = shl nuw i32 %conv4.i.i564, 16
  %or6.i.i566 = or i32 %or.i.i562, %shl5.i.i565
  %3802 = load i64, i64* %flags.i.i.i, align 8, !tbaa !308
  %3803 = load i32, i32* %dimensions.i, align 4, !tbaa !175
  %3804 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !176
  %min.i572 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3804, i64 0, i32 0
  %3805 = load i32, i32* %min.i572, align 4, !tbaa !181
  %extent.i574 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3804, i64 0, i32 1
  %3806 = load i32, i32* %extent.i574, align 4, !tbaa !178
  %stride.i576 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3804, i64 0, i32 2
  %3807 = load i32, i32* %stride.i576, align 4, !tbaa !182
  %min.i578 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3804, i64 1, i32 0
  %3808 = load i32, i32* %min.i578, align 4, !tbaa !181
  %extent.i580 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3804, i64 1, i32 1
  %3809 = load i32, i32* %extent.i580, align 4, !tbaa !178
  %stride.i582 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3804, i64 1, i32 2
  %3810 = load i32, i32* %stride.i582, align 4, !tbaa !182
  %min.i584 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3804, i64 2, i32 0
  %3811 = load i32, i32* %min.i584, align 4, !tbaa !181
  %extent.i586 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3804, i64 2, i32 1
  %3812 = load i32, i32* %extent.i586, align 4, !tbaa !178
  %stride.i588 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3804, i64 2, i32 2
  %3813 = load i32, i32* %stride.i588, align 4, !tbaa !182
  %3814 = load i8*, i8** %host.i417, align 8, !tbaa !172
  %3815 = load i8, i8* %code.i.i418, align 2, !tbaa !305
  %conv.i.i591 = zext i8 %3815 to i32
  %3816 = load i8, i8* %bits.i.i420, align 1, !tbaa !136
  %conv3.i.i593 = zext i8 %3816 to i32
  %shl.i.i594 = shl nuw nsw i32 %conv3.i.i593, 8
  %or.i.i595 = or i32 %shl.i.i594, %conv.i.i591
  %3817 = load i16, i16* %lanes.i.i424, align 2, !tbaa !306
  %conv4.i.i597 = zext i16 %3817 to i32
  %shl5.i.i598 = shl nuw i32 %conv4.i.i597, 16
  %or6.i.i599 = or i32 %or.i.i595, %shl5.i.i598
  %3818 = load i64, i64* %flags.i.i.i428, align 8, !tbaa !308
  %3819 = load i32, i32* %dimensions.i431, align 4, !tbaa !175
  %3820 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i432, align 8, !tbaa !176
  %min.i605 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3820, i64 0, i32 0
  %3821 = load i32, i32* %min.i605, align 4, !tbaa !181
  %extent.i607 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3820, i64 0, i32 1
  %3822 = load i32, i32* %extent.i607, align 4, !tbaa !178
  %stride.i609 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3820, i64 0, i32 2
  %3823 = load i32, i32* %stride.i609, align 4, !tbaa !182
  %min.i611 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3820, i64 1, i32 0
  %3824 = load i32, i32* %min.i611, align 4, !tbaa !181
  %extent.i613 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3820, i64 1, i32 1
  %3825 = load i32, i32* %extent.i613, align 4, !tbaa !178
  %stride.i615 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3820, i64 1, i32 2
  %3826 = load i32, i32* %stride.i615, align 4, !tbaa !182
  %min.i617 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3820, i64 2, i32 0
  %3827 = load i32, i32* %min.i617, align 4, !tbaa !181
  %extent.i619 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3820, i64 2, i32 1
  %3828 = load i32, i32* %extent.i619, align 4, !tbaa !178
  %stride.i621 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3820, i64 2, i32 2
  %3829 = load i32, i32* %stride.i621, align 4, !tbaa !182
  %3830 = load i8*, i8** %host.i450, align 8, !tbaa !172
  %3831 = load i8, i8* %code.i.i451, align 2, !tbaa !305
  %conv.i.i624 = zext i8 %3831 to i32
  %3832 = load i8, i8* %bits.i.i453, align 1, !tbaa !136
  %conv3.i.i626 = zext i8 %3832 to i32
  %shl.i.i627 = shl nuw nsw i32 %conv3.i.i626, 8
  %or.i.i628 = or i32 %shl.i.i627, %conv.i.i624
  %3833 = load i16, i16* %lanes.i.i457, align 2, !tbaa !306
  %conv4.i.i630 = zext i16 %3833 to i32
  %shl5.i.i631 = shl nuw i32 %conv4.i.i630, 16
  %or6.i.i632 = or i32 %or.i.i628, %shl5.i.i631
  %3834 = load i64, i64* %flags.i.i.i461, align 8, !tbaa !308
  %3835 = load i32, i32* %dimensions.i464, align 4, !tbaa !175
  %3836 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i465, align 8, !tbaa !176
  %min.i638 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3836, i64 0, i32 0
  %3837 = load i32, i32* %min.i638, align 4, !tbaa !181
  %extent.i640 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3836, i64 0, i32 1
  %3838 = load i32, i32* %extent.i640, align 4, !tbaa !178
  %stride.i642 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3836, i64 0, i32 2
  %3839 = load i32, i32* %stride.i642, align 4, !tbaa !182
  %min.i644 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3836, i64 1, i32 0
  %3840 = load i32, i32* %min.i644, align 4, !tbaa !181
  %extent.i646 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3836, i64 1, i32 1
  %3841 = load i32, i32* %extent.i646, align 4, !tbaa !178
  %stride.i648 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3836, i64 1, i32 2
  %3842 = load i32, i32* %stride.i648, align 4, !tbaa !182
  %min.i650 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3836, i64 2, i32 0
  %3843 = load i32, i32* %min.i650, align 4, !tbaa !181
  %extent.i652 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3836, i64 2, i32 1
  %3844 = load i32, i32* %extent.i652, align 4, !tbaa !178
  %stride.i654 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3836, i64 2, i32 2
  %3845 = load i32, i32* %stride.i654, align 4, !tbaa !182
  %t254116 = mul nsw i32 %3841, %3838
  %3846 = mul nsw i32 %3844, %t254116
  %3847 = icmp slt i32 %3846, 1
  %3848 = icmp eq i32 %t254116, 0
  %t331 = sext i1 %3848 to i32
  %t254116.lobit = ashr i32 %t254116, 31
  %3849 = add nsw i32 %3846, -1
  %3850 = and i32 %3849, -64
  %3851 = select i1 %3847, i32 64, i32 63
  %3852 = add i32 %3851, %3850
  %3853 = sub nsw i32 %t254116, %t331
  %3854 = sdiv i32 %3852, %3853
  %3855 = xor i32 %t254116.lobit, -1
  %3856 = sub nsw i32 %3855, %t254116.lobit
  %3857 = select i1 %3847, i32 %3856, i32 0
  %3858 = add nsw i32 %3857, %3854
  %3859 = xor i32 %t331, -1
  %t255117 = and i32 %3858, %3859
  %3860 = icmp sgt i32 %t254116, 0
  %3861 = sub nsw i32 0, %t255117
  %Filter.extent.2.required.s118 = select i1 %3860, i32 %t255117, i32 %3861
  %a105 = select i1 %3860, i32 0, i32 %t255117
  %b70 = add nsw i32 %3822, %3821
  %a65 = xor i32 %3838, -1
  %3862 = icmp sgt i32 %3838, 1
  %3863 = select i1 %3862, i32 %3838, i32 1
  %b67 = add nsw i32 %3863, -1
  %.not314 = icmp sgt i32 %3863, %a65
  %3864 = select i1 %.not314, i32 %b67, i32 %a65
  %3865 = ashr i32 %3806, 1
  %3866 = add i32 %3837, %3865
  %a64 = add i32 %3866, %3864
  %b66 = add nsw i32 %b70, -1
  %3867 = icmp sgt i32 %b66, %a64
  %a63 = select i1 %3867, i32 %a64, i32 %b66
  %3868 = icmp sgt i32 %a63, %3821
  %3869 = select i1 %3868, i32 %a63, i32 %3821
  %3870 = sub nsw i32 %3866, %3806
  %a68 = add nsw i32 %3870, 2
  %3871 = icmp sgt i32 %b70, %a68
  %3872 = select i1 %3871, i32 %a68, i32 %b70
  %a67 = add nsw i32 %3872, -1
  %3873 = icmp sgt i32 %a67, %3821
  %3874 = select i1 %3873, i32 %a67, i32 %3821
  %IMG.extent.0.required.s120 = sub nsw i32 %3869, %3874
  %t258122 = icmp sgt i32 %3838, 0
  %3875 = icmp eq i32 %3838, 0
  %t337 = sext i1 %3875 to i32
  %b89.lobit = ashr i32 %3838, 31
  %a71 = xor i32 %t254116, -1
  %3876 = icmp sgt i32 %t254116, 1
  %3877 = select i1 %3876, i32 %t254116, i32 1
  %b73 = add nsw i32 %3877, -1
  %.not315 = icmp sgt i32 %3877, %a71
  %3878 = select i1 %.not315, i32 %b73, i32 %a71
  %3879 = sub nsw i32 %3838, %t337
  %3880 = sdiv i32 %3878, %3879
  %3881 = xor i32 %b89.lobit, -1
  %3882 = sub nsw i32 %3881, %b89.lobit
  %3883 = xor i32 %t337, -1
  %t260123 = and i32 %3880, %3883
  %b78 = add nsw i32 %3825, %3824
  %3884 = select i1 %t258122, i32 %t260123, i32 0
  %3885 = ashr i32 %3809, 1
  %3886 = add i32 %3840, %3885
  %a74 = add i32 %3886, %3884
  %b76 = add nsw i32 %b78, -1
  %3887 = icmp sgt i32 %b76, %a74
  %a73 = select i1 %3887, i32 %a74, i32 %b76
  %3888 = icmp sgt i32 %a73, %3824
  %3889 = select i1 %3888, i32 %a73, i32 %3824
  %3890 = select i1 %t258122, i32 0, i32 %t260123
  %3891 = add i32 %3886, 2
  %3892 = sub i32 %3891, %3809
  %a76 = add i32 %3892, %3890
  %3893 = icmp sgt i32 %b78, %a76
  %3894 = select i1 %3893, i32 %a76, i32 %b78
  %a75 = add nsw i32 %3894, -1
  %3895 = icmp sgt i32 %a75, %3824
  %3896 = select i1 %3895, i32 %a75, i32 %3824
  %IMG.extent.1.required.s124 = sub nsw i32 %3889, %3896
  %3897 = icmp slt i32 %3827, 0
  %3898 = select i1 %3897, i32 %3827, i32 0
  %a81 = add nsw i32 %3898, %3828
  %b83 = add nsw i32 %3827, 1
  %3899 = icmp sgt i32 %a81, %b83
  %3900 = select i1 %3899, i32 %a81, i32 %b83
  %a84 = add nsw i32 %3828, %3827
  %3901 = icmp slt i32 %a84, 1
  %3902 = select i1 %3901, i32 %a84, i32 1
  %a83 = add nsw i32 %3902, -1
  %3903 = icmp sgt i32 %a83, %3827
  %3904 = select i1 %3903, i32 %a83, i32 %3827
  %IMG.extent.2.required126 = sub nsw i32 %3900, %3904
  %3905 = add nsw i32 %IMG.extent.0.required.s120, 1
  %3906 = add nsw i32 %IMG.extent.1.required.s124, 1
  %IMG.stride.2.required128 = mul nsw i32 %3906, %3905
  %3907 = tail call i32 @llvm.abs.i32(i32 %3838, i1 true)
  %b92 = add nsw i32 %3841, -1
  %.not316 = icmp slt i32 %3884, %3841
  %3908 = select i1 %.not316, i32 %b92, i32 %3884
  %3909 = icmp slt i32 %3890, 0
  %3910 = select i1 %3909, i32 %3890, i32 0
  %Output.extent.1.required.s131 = sub nsw i32 %3908, %3910
  %a94 = select i1 %3860, i32 %t255117, i32 0
  %b96 = add nsw i32 %3844, -1
  %.not317 = icmp slt i32 %a94, %3844
  %3911 = select i1 %.not317, i32 %b96, i32 %a94
  %3912 = icmp slt i32 %a105, 0
  %3913 = select i1 %3912, i32 %a105, i32 0
  %3914 = icmp ugt i32 %3907, 1
  %3915 = select i1 %3914, i32 %3907, i32 1
  %3916 = add nsw i32 %Output.extent.1.required.s131, 1
  %Output.stride.2.required134 = mul nsw i32 %3916, %3915
  %cmp.i656 = icmp eq i8* %3798, null
  br i1 %cmp.i656, label %_halide_buffer_is_bounds_query.exit660, label %after_bb135

_halide_buffer_is_bounds_query.exit660:           ; preds = %"assert succeeded81"
  %device.i657 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Filter.buffer, i64 0, i32 0
  %3917 = load i64, i64* %device.i657, align 8, !tbaa !174
  %cmp1.i658 = icmp eq i64 %3917, 0
  br i1 %cmp1.i658, label %then_bb136, label %after_bb135

after_bb135:                                      ; preds = %"assert succeeded81", %_halide_buffer_is_bounds_query.exit660, %then_bb136
  %3918 = load i8*, i8** %host.i417, align 8, !tbaa !172
  %cmp.i662 = icmp eq i8* %3918, null
  br i1 %cmp.i662, label %_halide_buffer_is_bounds_query.exit666, label %after_bb138

_halide_buffer_is_bounds_query.exit666:           ; preds = %after_bb135
  %device.i663 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %IMG.buffer, i64 0, i32 0
  %3919 = load i64, i64* %device.i663, align 8, !tbaa !174
  %cmp1.i664 = icmp eq i64 %3919, 0
  br i1 %cmp1.i664, label %then_bb139, label %after_bb138

then_bb136:                                       ; preds = %_halide_buffer_is_bounds_query.exit660
  %3920 = add nsw i32 %a105, %3843
  %3921 = add nsw i32 %Filter.extent.2.required.s118, 1
  %3922 = mul nsw i32 %3809, %3806
  store i8 0, i8* %code.i.i, align 8, !tbaa !387
  %3923 = bitcast %struct.halide_buffer_t* %Filter.buffer to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %3923, i8 0, i64 24, i1 false)
  store i8 32, i8* %bits.i.i, align 1, !tbaa !388
  store i16 1, i16* %lanes.i.i, align 2, !tbaa !389
  store i32 3, i32* %dimensions.i, align 4, !tbaa !175
  store i32 0, i32* %min.i572, align 4, !tbaa.struct !177
  store i32 %3806, i32* %extent.i574, align 4, !tbaa.struct !390
  store i32 1, i32* %stride.i576, align 4, !tbaa.struct !391
  %.sroa.4870.0..sroa_idx871 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %3804, i64 0, i32 3
  store i32 0, i32* %.sroa.4870.0..sroa_idx871, align 4, !tbaa.struct !392
  %.pre.i679 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !176
  %.sroa.5872.16..sroa_idx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i679, i64 1, i32 0
  store i32 0, i32* %.sroa.5872.16..sroa_idx, align 4, !tbaa.struct !177
  %.sroa.7873.16..sroa_idx874 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i679, i64 1, i32 1
  store i32 %3809, i32* %.sroa.7873.16..sroa_idx874, align 4, !tbaa.struct !390
  %.sroa.8875.16..sroa_idx876 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i679, i64 1, i32 2
  store i32 %3806, i32* %.sroa.8875.16..sroa_idx876, align 4, !tbaa.struct !391
  %.sroa.9877.16..sroa_idx878 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i679, i64 1, i32 3
  store i32 0, i32* %.sroa.9877.16..sroa_idx878, align 4, !tbaa.struct !392
  %.pre.i679.1 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !176
  %.sroa.10879.32..sroa_idx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i679.1, i64 2, i32 0
  store i32 %3920, i32* %.sroa.10879.32..sroa_idx, align 4, !tbaa.struct !177
  %.sroa.12880.32..sroa_idx881 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i679.1, i64 2, i32 1
  store i32 %3921, i32* %.sroa.12880.32..sroa_idx881, align 4, !tbaa.struct !390
  %.sroa.13882.32..sroa_idx883 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i679.1, i64 2, i32 2
  store i32 %3922, i32* %.sroa.13882.32..sroa_idx883, align 4, !tbaa.struct !391
  %.sroa.14884.32..sroa_idx885 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i679.1, i64 2, i32 3
  store i32 0, i32* %.sroa.14884.32..sroa_idx885, align 4, !tbaa.struct !392
  store i64 0, i64* %flags.i.i.i, align 8, !tbaa !308
  br label %after_bb135

after_bb138:                                      ; preds = %after_bb135, %_halide_buffer_is_bounds_query.exit666, %then_bb139
  %3924 = load i8*, i8** %host.i450, align 8, !tbaa !172
  %cmp.i688 = icmp eq i8* %3924, null
  br i1 %cmp.i688, label %_halide_buffer_is_bounds_query.exit692, label %_halide_buffer_is_bounds_query.exit718

_halide_buffer_is_bounds_query.exit692:           ; preds = %after_bb138
  %device.i689 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Output.buffer, i64 0, i32 0
  %3925 = load i64, i64* %device.i689, align 8, !tbaa !174
  %cmp1.i690 = icmp eq i64 %3925, 0
  br i1 %cmp1.i690, label %after_bb141, label %land.rhs.i717

then_bb139:                                       ; preds = %_halide_buffer_is_bounds_query.exit666
  %3926 = bitcast %struct.halide_dimension_t** %dim.i432 to i8**
  %3927 = load i8*, i8** %3926, align 8, !tbaa !176
  store i8 0, i8* %code.i.i418, align 8, !tbaa !387
  %3928 = bitcast %struct.halide_buffer_t* %IMG.buffer to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %3928, i8 0, i64 24, i1 false)
  store i8 32, i8* %bits.i.i420, align 1, !tbaa !388
  store i16 1, i16* %lanes.i.i424, align 2, !tbaa !389
  store i32 3, i32* %dimensions.i431, align 4, !tbaa !175
  %.sroa.0886.0..sroa_cast = bitcast i8* %3927 to i32*
  store i32 %3874, i32* %.sroa.0886.0..sroa_cast, align 4, !tbaa.struct !177
  %.sroa.2887.0..sroa_idx = getelementptr inbounds i8, i8* %3927, i64 4
  %.sroa.2887.0..sroa_cast = bitcast i8* %.sroa.2887.0..sroa_idx to i32*
  store i32 %3905, i32* %.sroa.2887.0..sroa_cast, align 4, !tbaa.struct !390
  %.sroa.3888.0..sroa_idx = getelementptr inbounds i8, i8* %3927, i64 8
  %.sroa.3888.0..sroa_cast = bitcast i8* %.sroa.3888.0..sroa_idx to i32*
  store i32 1, i32* %.sroa.3888.0..sroa_cast, align 4, !tbaa.struct !391
  %.sroa.4889.0..sroa_idx = getelementptr inbounds i8, i8* %3927, i64 12
  %.sroa.4889.0..sroa_cast = bitcast i8* %.sroa.4889.0..sroa_idx to i32*
  store i32 0, i32* %.sroa.4889.0..sroa_cast, align 4, !tbaa.struct !392
  %.pre.i705 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i432, align 8, !tbaa !176
  %.sroa.5890.16..sroa_idx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i705, i64 1, i32 0
  store i32 %3896, i32* %.sroa.5890.16..sroa_idx, align 4, !tbaa.struct !177
  %.sroa.7891.16..sroa_idx892 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i705, i64 1, i32 1
  store i32 %3906, i32* %.sroa.7891.16..sroa_idx892, align 4, !tbaa.struct !390
  %.sroa.8893.16..sroa_idx894 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i705, i64 1, i32 2
  store i32 %3905, i32* %.sroa.8893.16..sroa_idx894, align 4, !tbaa.struct !391
  %.sroa.9895.16..sroa_idx896 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i705, i64 1, i32 3
  store i32 0, i32* %.sroa.9895.16..sroa_idx896, align 4, !tbaa.struct !392
  %.pre.i705.1 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i432, align 8, !tbaa !176
  %.sroa.10897.32..sroa_idx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i705.1, i64 2, i32 0
  store i32 %3904, i32* %.sroa.10897.32..sroa_idx, align 4, !tbaa.struct !177
  %.sroa.12898.32..sroa_idx899 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i705.1, i64 2, i32 1
  store i32 %IMG.extent.2.required126, i32* %.sroa.12898.32..sroa_idx899, align 4, !tbaa.struct !390
  %.sroa.13900.32..sroa_idx901 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i705.1, i64 2, i32 2
  store i32 %IMG.stride.2.required128, i32* %.sroa.13900.32..sroa_idx901, align 4, !tbaa.struct !391
  %.sroa.14902.32..sroa_idx903 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i705.1, i64 2, i32 3
  store i32 0, i32* %.sroa.14902.32..sroa_idx903, align 4, !tbaa.struct !392
  store i64 0, i64* %flags.i.i.i428, align 8, !tbaa !308
  br label %after_bb138

after_bb141:                                      ; preds = %_halide_buffer_is_bounds_query.exit692
  %3929 = bitcast %struct.halide_dimension_t** %dim.i465 to i8**
  %3930 = load i8*, i8** %3929, align 8, !tbaa !176
  %3931 = add nsw i32 %3910, %3840
  %3932 = add nsw i32 %3913, %3843
  %Output.extent.2.required.s133 = sub i32 1, %3913
  %3933 = add i32 %Output.extent.2.required.s133, %3911
  store i8 0, i8* %code.i.i451, align 8, !tbaa !387
  %3934 = bitcast %struct.halide_buffer_t* %Output.buffer to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %3934, i8 0, i64 24, i1 false)
  store i8 32, i8* %bits.i.i453, align 1, !tbaa !388
  store i16 1, i16* %lanes.i.i457, align 2, !tbaa !389
  store i32 3, i32* %dimensions.i464, align 4, !tbaa !175
  %.sroa.0904.0..sroa_cast = bitcast i8* %3930 to i32*
  store i32 %3837, i32* %.sroa.0904.0..sroa_cast, align 4, !tbaa.struct !177
  %.sroa.2905.0..sroa_idx = getelementptr inbounds i8, i8* %3930, i64 4
  %.sroa.2905.0..sroa_cast = bitcast i8* %.sroa.2905.0..sroa_idx to i32*
  store i32 %3915, i32* %.sroa.2905.0..sroa_cast, align 4, !tbaa.struct !390
  %.sroa.3906.0..sroa_idx = getelementptr inbounds i8, i8* %3930, i64 8
  %.sroa.3906.0..sroa_cast = bitcast i8* %.sroa.3906.0..sroa_idx to i32*
  store i32 1, i32* %.sroa.3906.0..sroa_cast, align 4, !tbaa.struct !391
  %.sroa.4907.0..sroa_idx = getelementptr inbounds i8, i8* %3930, i64 12
  %.sroa.4907.0..sroa_cast = bitcast i8* %.sroa.4907.0..sroa_idx to i32*
  store i32 0, i32* %.sroa.4907.0..sroa_cast, align 4, !tbaa.struct !392
  %.pre.i743 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i465, align 8, !tbaa !176
  %.sroa.5908.16..sroa_idx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i743, i64 1, i32 0
  store i32 %3931, i32* %.sroa.5908.16..sroa_idx, align 4, !tbaa.struct !177
  %.sroa.7909.16..sroa_idx910 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i743, i64 1, i32 1
  store i32 %3916, i32* %.sroa.7909.16..sroa_idx910, align 4, !tbaa.struct !390
  %.sroa.8911.16..sroa_idx912 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i743, i64 1, i32 2
  store i32 %3915, i32* %.sroa.8911.16..sroa_idx912, align 4, !tbaa.struct !391
  %.sroa.9913.16..sroa_idx914 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i743, i64 1, i32 3
  store i32 0, i32* %.sroa.9913.16..sroa_idx914, align 4, !tbaa.struct !392
  %.pre.i743.1 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i465, align 8, !tbaa !176
  %.sroa.10915.32..sroa_idx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i743.1, i64 2, i32 0
  store i32 %3932, i32* %.sroa.10915.32..sroa_idx, align 4, !tbaa.struct !177
  %.sroa.12916.32..sroa_idx917 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i743.1, i64 2, i32 1
  store i32 %3933, i32* %.sroa.12916.32..sroa_idx917, align 4, !tbaa.struct !390
  %.sroa.13918.32..sroa_idx919 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i743.1, i64 2, i32 2
  store i32 %Output.stride.2.required134, i32* %.sroa.13918.32..sroa_idx919, align 4, !tbaa.struct !391
  %.sroa.14920.32..sroa_idx921 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre.i743.1, i64 2, i32 3
  store i32 0, i32* %.sroa.14920.32..sroa_idx921, align 4, !tbaa.struct !392
  store i64 0, i64* %flags.i.i.i461, align 8, !tbaa !308
  %.pr752.pre = load i8*, i8** %host.i450, align 8, !tbaa !172
  %cmp.i714 = icmp eq i8* %.pr752.pre, null
  br i1 %cmp.i714, label %land.rhs.i717, label %_halide_buffer_is_bounds_query.exit718

land.rhs.i717:                                    ; preds = %_halide_buffer_is_bounds_query.exit692, %after_bb141
  %3935 = load i64, i64* %device.i689, align 8, !tbaa !174
  %cmp1.i716 = icmp eq i64 %3935, 0
  br label %_halide_buffer_is_bounds_query.exit718

_halide_buffer_is_bounds_query.exit718:           ; preds = %after_bb138, %after_bb141, %land.rhs.i717
  %3936 = phi i1 [ false, %after_bb141 ], [ %cmp1.i716, %land.rhs.i717 ], [ false, %after_bb138 ]
  %3937 = load i8*, i8** %host.i, align 8, !tbaa !172
  %cmp.i720 = icmp eq i8* %3937, null
  br i1 %cmp.i720, label %land.rhs.i723, label %_halide_buffer_is_bounds_query.exit724

land.rhs.i723:                                    ; preds = %_halide_buffer_is_bounds_query.exit718
  %device.i721 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %Filter.buffer, i64 0, i32 0
  %3938 = load i64, i64* %device.i721, align 8, !tbaa !174
  %cmp1.i722 = icmp eq i64 %3938, 0
  br label %_halide_buffer_is_bounds_query.exit724

_halide_buffer_is_bounds_query.exit724:           ; preds = %_halide_buffer_is_bounds_query.exit718, %land.rhs.i723
  %3939 = phi i1 [ false, %_halide_buffer_is_bounds_query.exit718 ], [ %cmp1.i722, %land.rhs.i723 ]
  %3940 = load i8*, i8** %host.i417, align 8, !tbaa !172
  %cmp.i726 = icmp eq i8* %3940, null
  br i1 %cmp.i726, label %land.rhs.i729, label %_halide_buffer_is_bounds_query.exit730

land.rhs.i729:                                    ; preds = %_halide_buffer_is_bounds_query.exit724
  %device.i727 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %IMG.buffer, i64 0, i32 0
  %3941 = load i64, i64* %device.i727, align 8, !tbaa !174
  %cmp1.i728 = icmp eq i64 %3941, 0
  br label %_halide_buffer_is_bounds_query.exit730

_halide_buffer_is_bounds_query.exit730:           ; preds = %_halide_buffer_is_bounds_query.exit724, %land.rhs.i729
  %3942 = phi i1 [ false, %_halide_buffer_is_bounds_query.exit724 ], [ %cmp1.i728, %land.rhs.i729 ]
  %3943 = or i1 %3939, %3942
  %3944 = or i1 %3936, %3943
  br i1 %3944, label %destructor_block, label %then_bb146

then_bb146:                                       ; preds = %_halide_buffer_is_bounds_query.exit730
  %3945 = icmp ne i32 %or6.i.i566, 73728
  %3946 = zext i1 %3945 to i64
  %.not318 = icmp eq i32 %3803, 3
  %.not319 = icmp eq i32 %or6.i.i599, 73728
  %.not320 = icmp eq i32 %3819, 3
  %.not321 = icmp eq i32 %or6.i.i632, 73728
  %.not322 = icmp eq i32 %3835, 3
  %.not323 = icmp eq i32 %3805, 0
  %3947 = lshr i32 %3806, 24
  %3948 = and i32 %3947, 128
  %3949 = zext i32 %3948 to i64
  %.not324 = icmp eq i32 %3808, 0
  %3950 = lshr i32 %3809, 22
  %3951 = and i32 %3950, 512
  %3952 = zext i32 %3951 to i64
  %t269149 = add nsw i32 %a105, %3843
  %3953 = icmp sgt i32 %3811, %t269149
  %3954 = add nsw i32 %t269149, %Filter.extent.2.required.s118
  %3955 = add nsw i32 %3812, %3811
  %.not325 = icmp sge i32 %3954, %3955
  %3956 = or i1 %3953, %.not325
  %3957 = lshr i32 %3812, 20
  %3958 = and i32 %3957, 2048
  %3959 = zext i32 %3958 to i64
  %.not326 = icmp slt i32 %3869, %b70
  %3960 = lshr i32 %3822, 18
  %3961 = and i32 %3960, 8192
  %3962 = zext i32 %3961 to i64
  %.not327 = icmp slt i32 %3889, %b78
  %3963 = lshr i32 %3825, 16
  %3964 = and i32 %3963, 32768
  %3965 = zext i32 %3964 to i64
  %3966 = icmp sgt i32 %3900, %a84
  %3967 = lshr i32 %3828, 14
  %3968 = and i32 %3967, 131072
  %3969 = zext i32 %3968 to i64
  %3970 = icmp sgt i32 %3915, %3838
  %3971 = add i32 %3908, %3840
  %3972 = add nsw i32 %3841, %3840
  %.not328 = icmp sge i32 %3971, %3972
  %3973 = or i1 %3909, %.not328
  %3974 = lshr i32 %3841, 11
  %3975 = and i32 %3974, 1048576
  %3976 = zext i32 %3975 to i64
  %3977 = add i32 %3911, %3843
  %3978 = add nsw i32 %3844, %3843
  %.not330 = icmp sge i32 %3977, %3978
  %3979 = or i1 %3912, %.not330
  %3980 = select i1 %3979, i64 2097152, i64 0
  %3981 = lshr i32 %3844, 9
  %3982 = and i32 %3981, 4194304
  %3983 = zext i32 %3982 to i64
  %.not332 = icmp eq i32 %3807, 1
  %.not333 = icmp eq i32 %3823, 1
  %.not334 = icmp eq i32 %3839, 1
  %3984 = insertelement <16 x i1> poison, i1 %.not318, i32 0
  %3985 = insertelement <16 x i1> %3984, i1 %.not323, i32 1
  %3986 = insertelement <16 x i1> %3985, i1 %.not332, i32 2
  %3987 = insertelement <16 x i1> %3986, i1 %.not324, i32 3
  %3988 = insertelement <16 x i1> %3987, i1 %.not320, i32 4
  %3989 = insertelement <16 x i1> %3988, i1 %.not319, i32 5
  %3990 = insertelement <16 x i1> %3989, i1 %.not333, i32 6
  %3991 = insertelement <16 x i1> %3990, i1 %3966, i32 7
  %3992 = insertelement <16 x i1> %3991, i1 %.not322, i32 8
  %3993 = insertelement <16 x i1> %3992, i1 %.not321, i32 9
  %3994 = insertelement <16 x i1> %3993, i1 %.not334, i32 10
  %3995 = insertelement <16 x i1> %3994, i1 %3970, i32 11
  %3996 = insertelement <16 x i1> %3995, i1 %.not326, i32 12
  %3997 = insertelement <16 x i1> %3996, i1 %3973, i32 13
  %3998 = insertelement <16 x i1> %3997, i1 %3956, i32 14
  %3999 = insertelement <16 x i1> %3998, i1 %.not327, i32 15
  %4000 = select <16 x i1> %3999, <16 x i64> <i64 -9223372036854775808, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 65536, i64 0, i64 0, i64 0, i64 262144, i64 0, i64 524288, i64 1024, i64 0>, <16 x i64> <i64 -9223372036854775806, i64 64, i64 8388608, i64 256, i64 8, i64 4, i64 16777216, i64 0, i64 32, i64 16, i64 33554432, i64 0, i64 4096, i64 0, i64 0, i64 16384>
  %4001 = call i64 @llvm.vector.reduce.or.v16i64(<16 x i64> %4000)
  %4002 = or i64 %4001, %3980
  %op.extra = or i64 %4002, %3946
  %op.extra936 = or i64 %op.extra, %3949
  %op.extra937 = or i64 %op.extra936, %3952
  %op.extra938 = or i64 %op.extra937, %3959
  %op.extra939 = or i64 %op.extra938, %3962
  %op.extra940 = or i64 %op.extra939, %3965
  %op.extra941 = or i64 %op.extra940, %3969
  %op.extra942 = or i64 %op.extra941, %3976
  %op.extra943 = or i64 %op.extra942, %3983
  %4003 = tail call i64 @llvm.cttz.i64(i64 %op.extra943, i1 true), !range !393
  %4004 = trunc i64 %4003 to i32
  switch i32 %4004, label %no_errors_bb148 [
    i32 0, label %assert_failed150
    i32 1, label %assert_failed151
    i32 2, label %assert_failed152
    i32 3, label %assert_failed153
    i32 4, label %assert_failed154
    i32 5, label %assert_failed155
    i32 6, label %assert_failed156
    i32 7, label %assert_failed157
    i32 8, label %assert_failed158
    i32 9, label %assert_failed159
    i32 10, label %assert_failed160
    i32 11, label %assert_failed162
    i32 12, label %assert_failed163
    i32 13, label %assert_failed164
    i32 14, label %assert_failed165
    i32 15, label %assert_failed166
    i32 16, label %assert_failed167
    i32 17, label %assert_failed168
    i32 18, label %assert_failed169
    i32 19, label %assert_failed170
    i32 20, label %assert_failed172
    i32 21, label %assert_failed173
    i32 22, label %assert_failed175
    i32 23, label %assert_failed176
    i32 24, label %assert_failed177
    i32 25, label %assert_failed178
  ], !prof !394

no_errors_bb148:                                  ; preds = %then_bb146
  %4005 = sext i32 %3809 to i64
  %4006 = sext i32 %3806 to i64
  %Filter.total_extent.1179 = mul nsw i64 %4005, %4006
  %4007 = sext i32 %3812 to i64
  %Filter.total_extent.2180 = mul nsw i64 %Filter.total_extent.1179, %4007
  %4008 = sext i32 %3825 to i64
  %4009 = sext i32 %3822 to i64
  %IMG.total_extent.1181 = mul nsw i64 %4008, %4009
  %4010 = sext i32 %3828 to i64
  %IMG.total_extent.2182 = mul nsw i64 %IMG.total_extent.1181, %4010
  %4011 = sext i32 %3841 to i64
  %4012 = sext i32 %3838 to i64
  %Output.total_extent.1183 = mul nsw i64 %4011, %4012
  %4013 = sext i32 %3844 to i64
  %Output.total_extent.2184 = mul nsw i64 %Output.total_extent.1183, %4013
  %Filter.extent.087.lobit = lshr i32 %3806, 31
  %4014 = zext i32 %Filter.extent.087.lobit to i64
  %4015 = sext i32 %3810 to i64
  %x12 = mul nsw i64 %4015, %4005
  %4016 = tail call i64 @llvm.abs.i64(i64 %x12, i1 true)
  %4017 = icmp ugt i64 %4016, 2147483647
  %4018 = select i1 %4017, i64 2, i64 0
  %4019 = icmp sgt i64 %Filter.total_extent.1179, 2147483647
  %4020 = select i1 %4019, i64 4, i64 0
  %4021 = sext i32 %3813 to i64
  %x13 = mul nsw i64 %4021, %4007
  %4022 = tail call i64 @llvm.abs.i64(i64 %x13, i1 true)
  %4023 = icmp ugt i64 %4022, 2147483647
  %4024 = select i1 %4023, i64 8, i64 0
  %4025 = icmp sgt i64 %Filter.total_extent.2180, 2147483647
  %4026 = select i1 %4025, i64 16, i64 0
  %4027 = lshr i32 %3822, 26
  %4028 = and i32 %4027, 32
  %4029 = zext i32 %4028 to i64
  %4030 = sext i32 %3826 to i64
  %x14 = mul nsw i64 %4030, %4008
  %4031 = tail call i64 @llvm.abs.i64(i64 %x14, i1 true)
  %4032 = icmp ugt i64 %4031, 2147483647
  %4033 = select i1 %4032, i64 64, i64 0
  %4034 = icmp sgt i64 %IMG.total_extent.1181, 2147483647
  %4035 = select i1 %4034, i64 128, i64 0
  %4036 = sext i32 %3829 to i64
  %x15 = mul nsw i64 %4036, %4010
  %4037 = tail call i64 @llvm.abs.i64(i64 %x15, i1 true)
  %4038 = icmp ugt i64 %4037, 2147483647
  %4039 = select i1 %4038, i64 256, i64 0
  %4040 = icmp sgt i64 %IMG.total_extent.2182, 2147483647
  %4041 = select i1 %4040, i64 512, i64 0
  %4042 = lshr i32 %3838, 21
  %4043 = and i32 %4042, 1024
  %4044 = zext i32 %4043 to i64
  %4045 = sext i32 %3842 to i64
  %x16 = mul nsw i64 %4045, %4011
  %4046 = tail call i64 @llvm.abs.i64(i64 %x16, i1 true)
  %4047 = icmp ugt i64 %4046, 2147483647
  %4048 = select i1 %4047, i64 2048, i64 0
  %4049 = icmp sgt i64 %Output.total_extent.1183, 2147483647
  %4050 = select i1 %4049, i64 4096, i64 0
  %4051 = sext i32 %3845 to i64
  %x17 = mul nsw i64 %4051, %4013
  %4052 = tail call i64 @llvm.abs.i64(i64 %x17, i1 true)
  %4053 = icmp ugt i64 %4052, 2147483647
  %4054 = select i1 %4053, i64 8192, i64 0
  %4055 = icmp sgt i64 %Output.total_extent.2184, 2147483647
  %4056 = select i1 %4055, i64 16384, i64 0
  %and.i.i.i568 = shl i64 %3802, 14
  %4057 = and i64 %and.i.i.i568, 32768
  %and.i.i.i601 = shl i64 %3818, 15
  %4058 = and i64 %and.i.i.i601, 65536
  %and.i.i.i634 = shl i64 %3834, 16
  %4059 = and i64 %and.i.i.i634, 131072
  %4060 = icmp eq i8* %3814, null
  %4061 = select i1 %4060, i64 524288, i64 0
  %4062 = icmp eq i8* %3830, null
  %4063 = select i1 %4062, i64 1048576, i64 0
  %4064 = select i1 %cmp.i656, i64 -9223372036854513664, i64 -9223372036854775808
  %4065 = or i64 %4064, %4057
  %4066 = or i64 %4065, %4014
  %4067 = or i64 %4066, %4020
  %4068 = or i64 %4067, %4018
  %4069 = or i64 %4068, %4026
  %4070 = or i64 %4069, %4061
  %4071 = or i64 %4070, %4024
  %4072 = or i64 %4071, %4058
  %4073 = or i64 %4072, %4029
  %4074 = or i64 %4073, %4035
  %4075 = or i64 %4074, %4033
  %4076 = or i64 %4075, %4041
  %4077 = or i64 %4076, %4063
  %4078 = or i64 %4077, %4039
  %4079 = or i64 %4078, %4059
  %4080 = or i64 %4079, %4044
  %4081 = or i64 %4080, %4050
  %4082 = or i64 %4081, %4048
  %4083 = or i64 %4082, %4056
  %4084 = or i64 %4083, %4054
  %4085 = tail call i64 @llvm.cttz.i64(i64 %4084, i1 true), !range !393
  %4086 = trunc i64 %4085 to i32
  switch i32 %4086, label %"produce Output207" [
    i32 0, label %assert_failed186
    i32 1, label %assert_failed187
    i32 2, label %assert_failed188
    i32 3, label %assert_failed189
    i32 4, label %assert_failed190
    i32 5, label %assert_failed191
    i32 6, label %assert_failed192
    i32 7, label %assert_failed193
    i32 8, label %assert_failed194
    i32 9, label %assert_failed195
    i32 10, label %assert_failed196
    i32 11, label %assert_failed197
    i32 12, label %assert_failed198
    i32 13, label %assert_failed199
    i32 14, label %assert_failed200
    i32 15, label %assert_failed201
    i32 16, label %assert_failed202
    i32 17, label %assert_failed203
    i32 18, label %assert_failed204
    i32 19, label %assert_failed205
    i32 20, label %assert_failed206
  ], !prof !395

assert_failed150:                                 ; preds = %then_bb146
  %4087 = tail call i32 @halide_error_bad_type(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0), i32 %or6.i.i566, i32 73728) #10
  ret i32 %4087

assert_failed151:                                 ; preds = %then_bb146
  %4088 = tail call i32 @halide_error_bad_dimensions(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0), i32 %3803, i32 3) #10
  ret i32 %4088

assert_failed152:                                 ; preds = %then_bb146
  %4089 = tail call i32 @halide_error_bad_type(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0), i32 %or6.i.i599, i32 73728) #10
  ret i32 %4089

assert_failed153:                                 ; preds = %then_bb146
  %4090 = tail call i32 @halide_error_bad_dimensions(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0), i32 %3819, i32 3) #10
  ret i32 %4090

assert_failed154:                                 ; preds = %then_bb146
  %4091 = tail call i32 @halide_error_bad_type(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0), i32 %or6.i.i632, i32 73728) #10
  ret i32 %4091

assert_failed155:                                 ; preds = %then_bb146
  %4092 = tail call i32 @halide_error_bad_dimensions(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0), i32 %3835, i32 3) #10
  ret i32 %4092

assert_failed156:                                 ; preds = %then_bb146
  %4093 = add i32 %3806, -1
  %4094 = add i32 %4093, %3805
  %4095 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0), i32 0, i32 0, i32 %4093, i32 %3805, i32 %4094) #10
  ret i32 %4095

assert_failed157:                                 ; preds = %then_bb146
  %4096 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0), i32 0, i32 %3806) #10
  ret i32 %4096

assert_failed158:                                 ; preds = %then_bb146
  %4097 = add i32 %3809, -1
  %4098 = add i32 %4097, %3808
  %4099 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0), i32 1, i32 0, i32 %4097, i32 %3808, i32 %4098) #10
  ret i32 %4099

assert_failed159:                                 ; preds = %then_bb146
  %4100 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0), i32 1, i32 %3809) #10
  ret i32 %4100

assert_failed160:                                 ; preds = %then_bb146
  %4101 = add nsw i32 %3955, -1
  %4102 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0), i32 2, i32 %t269149, i32 %3954, i32 %3811, i32 %4101) #10
  ret i32 %4102

assert_failed162:                                 ; preds = %then_bb146
  %4103 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0), i32 2, i32 %3812) #10
  ret i32 %4103

assert_failed163:                                 ; preds = %then_bb146
  %4104 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0), i32 0, i32 %3874, i32 %3869, i32 %3821, i32 %b66) #10
  ret i32 %4104

assert_failed164:                                 ; preds = %then_bb146
  %4105 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0), i32 0, i32 %3822) #10
  ret i32 %4105

assert_failed165:                                 ; preds = %then_bb146
  %4106 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0), i32 1, i32 %3896, i32 %3889, i32 %3824, i32 %b76) #10
  ret i32 %4106

assert_failed166:                                 ; preds = %then_bb146
  %4107 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0), i32 1, i32 %3825) #10
  ret i32 %4107

assert_failed167:                                 ; preds = %then_bb146
  %4108 = add nsw i32 %3900, -1
  %4109 = add nsw i32 %a84, -1
  %4110 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0), i32 2, i32 %3904, i32 %4108, i32 %3827, i32 %4109) #10
  ret i32 %4110

assert_failed168:                                 ; preds = %then_bb146
  %4111 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0), i32 2, i32 %3828) #10
  ret i32 %4111

assert_failed169:                                 ; preds = %then_bb146
  %4112 = add i32 %3837, -1
  %4113 = add i32 %4112, %3915
  %4114 = add i32 %4112, %3838
  %4115 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0), i32 0, i32 %3837, i32 %4113, i32 %3837, i32 %4114) #10
  ret i32 %4115

assert_failed170:                                 ; preds = %then_bb146
  %4116 = add nsw i32 %3910, %3840
  %4117 = add nsw i32 %3972, -1
  %4118 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0), i32 1, i32 %4116, i32 %3971, i32 %3840, i32 %4117) #10
  ret i32 %4118

assert_failed172:                                 ; preds = %then_bb146
  %4119 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0), i32 1, i32 %3841) #10
  ret i32 %4119

assert_failed173:                                 ; preds = %then_bb146
  %4120 = add nsw i32 %3913, %3843
  %4121 = add nsw i32 %3978, -1
  %4122 = tail call i32 @halide_error_access_out_of_bounds(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0), i32 2, i32 %4120, i32 %3977, i32 %3843, i32 %4121) #10
  ret i32 %4122

assert_failed175:                                 ; preds = %then_bb146
  %4123 = tail call i32 @halide_error_buffer_extents_negative(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0), i32 2, i32 %3844) #10
  ret i32 %4123

assert_failed176:                                 ; preds = %then_bb146
  %4124 = tail call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.207, i64 0, i64 0), i32 %3807, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.208, i64 0, i64 0), i32 1) #10
  ret i32 %4124

assert_failed177:                                 ; preds = %then_bb146
  %4125 = tail call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.209, i64 0, i64 0), i32 %3823, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.208, i64 0, i64 0), i32 1) #10
  ret i32 %4125

assert_failed178:                                 ; preds = %then_bb146
  %4126 = tail call i32 @halide_error_constraint_violated(i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.210, i64 0, i64 0), i32 %3839, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.208, i64 0, i64 0), i32 1) #10
  ret i32 %4126

assert_failed186:                                 ; preds = %no_errors_bb148
  %4127 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0), i64 %4006, i64 2147483647) #10
  ret i32 %4127

assert_failed187:                                 ; preds = %no_errors_bb148
  %4128 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0), i64 %4016, i64 2147483647) #10
  ret i32 %4128

assert_failed188:                                 ; preds = %no_errors_bb148
  %4129 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0), i64 %Filter.total_extent.1179, i64 2147483647) #10
  ret i32 %4129

assert_failed189:                                 ; preds = %no_errors_bb148
  %4130 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0), i64 %4022, i64 2147483647) #10
  ret i32 %4130

assert_failed190:                                 ; preds = %no_errors_bb148
  %4131 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.200, i64 0, i64 0), i64 %Filter.total_extent.2180, i64 2147483647) #10
  ret i32 %4131

assert_failed191:                                 ; preds = %no_errors_bb148
  %4132 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0), i64 %4009, i64 2147483647) #10
  ret i32 %4132

assert_failed192:                                 ; preds = %no_errors_bb148
  %4133 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0), i64 %4031, i64 2147483647) #10
  ret i32 %4133

assert_failed193:                                 ; preds = %no_errors_bb148
  %4134 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0), i64 %IMG.total_extent.1181, i64 2147483647) #10
  ret i32 %4134

assert_failed194:                                 ; preds = %no_errors_bb148
  %4135 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0), i64 %4037, i64 2147483647) #10
  ret i32 %4135

assert_failed195:                                 ; preds = %no_errors_bb148
  %4136 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str, i64 0, i64 0), i64 %IMG.total_extent.2182, i64 2147483647) #10
  ret i32 %4136

assert_failed196:                                 ; preds = %no_errors_bb148
  %4137 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i64 0, i64 0), i64 %4012, i64 2147483647) #10
  ret i32 %4137

assert_failed197:                                 ; preds = %no_errors_bb148
  %4138 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i64 0, i64 0), i64 %4046, i64 2147483647) #10
  ret i32 %4138

assert_failed198:                                 ; preds = %no_errors_bb148
  %4139 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i64 0, i64 0), i64 %Output.total_extent.1183, i64 2147483647) #10
  ret i32 %4139

assert_failed199:                                 ; preds = %no_errors_bb148
  %4140 = tail call i32 @halide_error_buffer_allocation_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i64 0, i64 0), i64 %4052, i64 2147483647) #10
  ret i32 %4140

assert_failed200:                                 ; preds = %no_errors_bb148
  %4141 = tail call i32 @halide_error_buffer_extents_too_large(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i64 0, i64 0), i64 %Output.total_extent.2184, i64 2147483647) #10
  ret i32 %4141

assert_failed201:                                 ; preds = %no_errors_bb148
  %4142 = tail call i32 @halide_error_device_dirty_with_no_device_support(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0)) #10
  ret i32 %4142

assert_failed202:                                 ; preds = %no_errors_bb148
  %4143 = tail call i32 @halide_error_device_dirty_with_no_device_support(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0)) #10
  ret i32 %4143

assert_failed203:                                 ; preds = %no_errors_bb148
  %4144 = tail call i32 @halide_error_device_dirty_with_no_device_support(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0)) #10
  ret i32 %4144

assert_failed204:                                 ; preds = %no_errors_bb148
  %4145 = tail call i32 @halide_error_host_is_null(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.204, i64 0, i64 0)) #10
  ret i32 %4145

assert_failed205:                                 ; preds = %no_errors_bb148
  %4146 = tail call i32 @halide_error_host_is_null(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.205, i64 0, i64 0)) #10
  ret i32 %4146

assert_failed206:                                 ; preds = %no_errors_bb148
  %4147 = tail call i32 @halide_error_host_is_null(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.206, i64 0, i64 0)) #10
  ret i32 %4147

"produce Output207":                              ; preds = %no_errors_bb148
  %4148 = mul i32 %3845, %3843
  %4149 = mul i32 %3842, %3840
  %4150 = add i32 %4148, %4149
  %4151 = sub i32 0, %4150
  %4152 = icmp slt i32 %3844, 1
  %4153 = icmp slt i32 %3841, 1
  %or.cond931.not = or i1 %4152, %4153
  %t258122.not = xor i1 %t258122, true
  %brmerge932 = or i1 %or.cond931.not, %t258122.not
  br i1 %brmerge932, label %"end for Output.s0.c_out.rebased210", label %"for Output.s0.c_out.rebased209.us.us.preheader", !prof !396

"for Output.s0.c_out.rebased209.us.us.preheader": ; preds = %"produce Output207"
  %4154 = shl nsw i64 %4045, 2
  %4155 = zext i32 %3838 to i64
  %4156 = shl nuw nsw i64 %4155, 2
  %4157 = zext i32 %3844 to i64
  %4158 = add i32 %3841, -1
  %xtraiter953 = and i32 %3841, 7
  %4159 = icmp ult i32 %4158, 7
  %unroll_iter956 = and i32 %3841, -8
  %lcmp.mod955.not = icmp eq i32 %xtraiter953, 0
  br label %"for Output.s0.c_out.rebased209.us.us"

"for Output.s0.c_out.rebased209.us.us":           ; preds = %"for Output.s0.c_out.rebased209.us.us.preheader", %"end for Output.s0.y.rebased214.loopexit.split.us.us.us"
  %indvars.iv818 = phi i64 [ 0, %"for Output.s0.c_out.rebased209.us.us.preheader" ], [ %indvars.iv.next819, %"end for Output.s0.y.rebased214.loopexit.split.us.us.us" ]
  %4160 = trunc i64 %indvars.iv818 to i32
  %4161 = mul i32 %3845, %4160
  %4162 = sext i32 %4161 to i64
  %4163 = shl nsw i64 %4162, 2
  br i1 %4159, label %"end for Output.s0.y.rebased214.loopexit.split.us.us.us.unr-lcssa", label %"for Output.s0.y.rebased213.us.us.us"

"for Output.s0.y.rebased213.us.us.us":            ; preds = %"for Output.s0.c_out.rebased209.us.us", %"for Output.s0.y.rebased213.us.us.us"
  %indvar813 = phi i64 [ %indvar.next814.7, %"for Output.s0.y.rebased213.us.us.us" ], [ 0, %"for Output.s0.c_out.rebased209.us.us" ]
  %niter957 = phi i32 [ %niter957.nsub.7, %"for Output.s0.y.rebased213.us.us.us" ], [ %unroll_iter956, %"for Output.s0.c_out.rebased209.us.us" ]
  %4164 = mul i64 %4154, %indvar813
  %4165 = add i64 %4163, %4164
  %scevgep815 = getelementptr i8, i8* %3830, i64 %4165
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep815, i8 0, i64 %4156, i1 false)
  %indvar.next814 = or i64 %indvar813, 1
  %4166 = mul i64 %4154, %indvar.next814
  %4167 = add i64 %4163, %4166
  %scevgep815.1 = getelementptr i8, i8* %3830, i64 %4167
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep815.1, i8 0, i64 %4156, i1 false)
  %indvar.next814.1 = or i64 %indvar813, 2
  %4168 = mul i64 %4154, %indvar.next814.1
  %4169 = add i64 %4163, %4168
  %scevgep815.2 = getelementptr i8, i8* %3830, i64 %4169
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep815.2, i8 0, i64 %4156, i1 false)
  %indvar.next814.2 = or i64 %indvar813, 3
  %4170 = mul i64 %4154, %indvar.next814.2
  %4171 = add i64 %4163, %4170
  %scevgep815.3 = getelementptr i8, i8* %3830, i64 %4171
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep815.3, i8 0, i64 %4156, i1 false)
  %indvar.next814.3 = or i64 %indvar813, 4
  %4172 = mul i64 %4154, %indvar.next814.3
  %4173 = add i64 %4163, %4172
  %scevgep815.4 = getelementptr i8, i8* %3830, i64 %4173
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep815.4, i8 0, i64 %4156, i1 false)
  %indvar.next814.4 = or i64 %indvar813, 5
  %4174 = mul i64 %4154, %indvar.next814.4
  %4175 = add i64 %4163, %4174
  %scevgep815.5 = getelementptr i8, i8* %3830, i64 %4175
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep815.5, i8 0, i64 %4156, i1 false)
  %indvar.next814.5 = or i64 %indvar813, 6
  %4176 = mul i64 %4154, %indvar.next814.5
  %4177 = add i64 %4163, %4176
  %scevgep815.6 = getelementptr i8, i8* %3830, i64 %4177
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep815.6, i8 0, i64 %4156, i1 false)
  %indvar.next814.6 = or i64 %indvar813, 7
  %4178 = mul i64 %4154, %indvar.next814.6
  %4179 = add i64 %4163, %4178
  %scevgep815.7 = getelementptr i8, i8* %3830, i64 %4179
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep815.7, i8 0, i64 %4156, i1 false)
  %indvar.next814.7 = add nuw nsw i64 %indvar813, 8
  %niter957.nsub.7 = add i32 %niter957, -8
  %niter957.ncmp.7 = icmp eq i32 %niter957.nsub.7, 0
  br i1 %niter957.ncmp.7, label %"end for Output.s0.y.rebased214.loopexit.split.us.us.us.unr-lcssa", label %"for Output.s0.y.rebased213.us.us.us"

"end for Output.s0.y.rebased214.loopexit.split.us.us.us.unr-lcssa": ; preds = %"for Output.s0.y.rebased213.us.us.us", %"for Output.s0.c_out.rebased209.us.us"
  %indvar813.unr = phi i64 [ 0, %"for Output.s0.c_out.rebased209.us.us" ], [ %indvar.next814.7, %"for Output.s0.y.rebased213.us.us.us" ]
  br i1 %lcmp.mod955.not, label %"end for Output.s0.y.rebased214.loopexit.split.us.us.us", label %"for Output.s0.y.rebased213.us.us.us.epil"

"for Output.s0.y.rebased213.us.us.us.epil":       ; preds = %"end for Output.s0.y.rebased214.loopexit.split.us.us.us.unr-lcssa", %"for Output.s0.y.rebased213.us.us.us.epil"
  %indvar813.epil = phi i64 [ %indvar.next814.epil, %"for Output.s0.y.rebased213.us.us.us.epil" ], [ %indvar813.unr, %"end for Output.s0.y.rebased214.loopexit.split.us.us.us.unr-lcssa" ]
  %epil.iter954 = phi i32 [ %epil.iter954.sub, %"for Output.s0.y.rebased213.us.us.us.epil" ], [ %xtraiter953, %"end for Output.s0.y.rebased214.loopexit.split.us.us.us.unr-lcssa" ]
  %4180 = mul i64 %4154, %indvar813.epil
  %4181 = add i64 %4163, %4180
  %scevgep815.epil = getelementptr i8, i8* %3830, i64 %4181
  call void @llvm.memset.p0i8.i64(i8* align 4 %scevgep815.epil, i8 0, i64 %4156, i1 false)
  %indvar.next814.epil = add nuw nsw i64 %indvar813.epil, 1
  %epil.iter954.sub = add i32 %epil.iter954, -1
  %epil.iter954.cmp.not = icmp eq i32 %epil.iter954.sub, 0
  br i1 %epil.iter954.cmp.not, label %"end for Output.s0.y.rebased214.loopexit.split.us.us.us", label %"for Output.s0.y.rebased213.us.us.us.epil", !llvm.loop !407

"end for Output.s0.y.rebased214.loopexit.split.us.us.us": ; preds = %"for Output.s0.y.rebased213.us.us.us.epil", %"end for Output.s0.y.rebased214.loopexit.split.us.us.us.unr-lcssa"
  %indvars.iv.next819 = add nuw nsw i64 %indvars.iv818, 1
  %.not357.us.us = icmp eq i64 %indvars.iv.next819, %4157
  br i1 %.not357.us.us, label %"end for Output.s0.c_out.rebased210", label %"for Output.s0.c_out.rebased209.us.us"

"end for Output.s0.c_out.rebased210":             ; preds = %"end for Output.s0.y.rebased214.loopexit.split.us.us.us", %"produce Output207"
  %4182 = icmp sgt i32 %3827, 0
  %a106 = select i1 %4182, i32 %3827, i32 0
  %4183 = icmp sgt i32 %3828, %a106
  %b110 = select i1 %4183, i32 %a106, i32 %3828
  %4184 = icmp sgt i32 %a81, %b110
  %t227221 = select i1 %4184, i32 %a81, i32 %b110
  %4185 = add nsw i32 %3846, 63
  %t225222 = ashr i32 %4185, 6
  %4186 = mul nsw i32 %3826, %3824
  %t231226 = add nsw i32 %4186, %3821
  %4187 = icmp sgt i32 %3846, 0
  br i1 %4187, label %"for Output.s1.x.x.x.x230.preheader", label %destructor_block, !prof !398

"for Output.s1.x.x.x.x230.preheader":             ; preds = %"end for Output.s0.c_out.rebased210"
  %t230223 = sub nsw i32 %3843, %3811
  %4188 = icmp sgt i32 %b110, 0
  %b113 = add nsw i32 %3828, -1
  %4189 = icmp sgt i32 %3809, 0
  %4190 = icmp sgt i32 %3806, 0
  %t350 = select i1 %3848, <64 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <64 x i32> zeroinitializer
  %4191 = insertelement <64 x i32> undef, i32 %t254116, i32 0
  %4192 = shufflevector <64 x i32> %4191, <64 x i32> undef, <64 x i32> zeroinitializer
  %4193 = sub nsw <64 x i32> %4192, %t350
  %4194 = xor <64 x i32> %t350, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %4195 = or <64 x i32> %4192, %t350
  %t356 = select i1 %3875, <64 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <64 x i32> zeroinitializer
  %4196 = insertelement <64 x i32> undef, i32 %3838, i32 0
  %4197 = shufflevector <64 x i32> %4196, <64 x i32> undef, <64 x i32> zeroinitializer
  %4198 = sub nsw <64 x i32> %4197, %t356
  %4199 = insertelement <64 x i32> undef, i32 %3882, i32 0
  %4200 = shufflevector <64 x i32> %4199, <64 x i32> undef, <64 x i32> zeroinitializer
  %4201 = xor <64 x i32> %t356, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %4202 = or <64 x i32> %4197, %t356
  %4203 = xor i32 %b89.lobit, %3838
  %4204 = add nsw i32 %4203, %3881
  %4205 = insertelement <64 x i32> undef, i32 %4204, i32 0
  %4206 = shufflevector <64 x i32> %4205, <64 x i32> undef, <64 x i32> zeroinitializer
  %4207 = insertelement <64 x i32> undef, i32 %3840, i32 0
  %4208 = shufflevector <64 x i32> %4207, <64 x i32> undef, <64 x i32> zeroinitializer
  %4209 = insertelement <64 x i32> undef, i32 %3842, i32 0
  %4210 = shufflevector <64 x i32> %4209, <64 x i32> undef, <64 x i32> zeroinitializer
  %4211 = insertelement <64 x i32> undef, i32 %3843, i32 0
  %4212 = shufflevector <64 x i32> %4211, <64 x i32> undef, <64 x i32> zeroinitializer
  %4213 = insertelement <64 x i32> undef, i32 %3845, i32 0
  %4214 = shufflevector <64 x i32> %4213, <64 x i32> undef, <64 x i32> zeroinitializer
  %4215 = insertelement <64 x i32> undef, i32 %4151, i32 0
  %4216 = shufflevector <64 x i32> %4215, <64 x i32> undef, <64 x i32> zeroinitializer
  %4217 = bitcast i8* %3830 to i32*
  %4218 = insertelement <64 x i32> undef, i32 %t230223, i32 0
  %4219 = shufflevector <64 x i32> %4218, <64 x i32> undef, <64 x i32> zeroinitializer
  %4220 = insertelement <64 x i32> undef, i32 %3813, i32 0
  %4221 = shufflevector <64 x i32> %4220, <64 x i32> undef, <64 x i32> zeroinitializer
  %4222 = bitcast i8* %3798 to i32*
  %4223 = insertelement <64 x i32> undef, i32 %b66, i32 0
  %4224 = shufflevector <64 x i32> %4223, <64 x i32> undef, <16 x i32> zeroinitializer
  %4225 = insertelement <64 x i32> undef, i32 %3821, i32 0
  %4226 = shufflevector <64 x i32> %4225, <64 x i32> undef, <16 x i32> zeroinitializer
  %4227 = insertelement <64 x i32> undef, i32 %b76, i32 0
  %4228 = shufflevector <64 x i32> %4227, <64 x i32> undef, <16 x i32> zeroinitializer
  %4229 = insertelement <64 x i32> undef, i32 %3824, i32 0
  %4230 = shufflevector <64 x i32> %4229, <64 x i32> undef, <16 x i32> zeroinitializer
  %4231 = insertelement <64 x i32> undef, i32 %3826, i32 0
  %4232 = shufflevector <64 x i32> %4231, <64 x i32> undef, <64 x i32> zeroinitializer
  %4233 = bitcast i8* %3814 to i32*
  %t244252 = sub i32 %b110, %3827
  %t242253 = sub nsw i32 %t227221, %b110
  %4234 = icmp sgt i32 %t242253, 0
  %t250272 = sub nsw i32 %t227221, %3827
  %t248273 = sub nsw i32 %3828, %t227221
  %4235 = icmp sgt i32 %t248273, 0
  %brmerge935.demorgan = and i1 %4189, %4190
  br label %"for Output.s1.x.x.x.x230"

"for Output.s1.x.x.x.x230":                       ; preds = %"for Output.s1.x.x.x.x230.preheader", %"end for Output.s1.r10$z.rebased275"
  %Output.s1.x.x.x.x232 = phi i32 [ %7590, %"end for Output.s1.r10$z.rebased275" ], [ 0, %"for Output.s1.x.x.x.x230.preheader" ]
  %t238233 = shl nsw i32 %Output.s1.x.x.x.x232, 6
  br i1 %4188, label %"for Output.s1.r10$z234.preheader", label %"end for Output.s1.r10$z235", !prof !398

"for Output.s1.r10$z234.preheader":               ; preds = %"for Output.s1.x.x.x.x230"
  %4236 = insertelement <64 x i32> undef, i32 %t238233, i32 0
  %4237 = shufflevector <64 x i32> %4236, <64 x i32> undef, <64 x i32> zeroinitializer
  %4238 = or <64 x i32> %4237, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  br i1 %4189, label %"for Output.s1.r10$z234.us", label %"end for Output.s1.r10$z.rebased255", !prof !398

"for Output.s1.r10$z234.us":                      ; preds = %"for Output.s1.r10$z234.preheader", %"end for Output.s1.r10$y239.loopexit.us"
  %"Output.s1.r10$z236.us" = phi i32 [ %4245, %"end for Output.s1.r10$y239.loopexit.us" ], [ 0, %"for Output.s1.r10$z234.preheader" ]
  %a111.us = sub nsw i32 %"Output.s1.r10$z236.us", %3827
  %4239 = icmp sgt i32 %b113, %a111.us
  %a110.us = select i1 %4239, i32 %a111.us, i32 %b113
  %4240 = icmp sgt i32 %a110.us, 0
  %4241 = select i1 %4240, i32 %a110.us, i32 0
  %4242 = mul nsw i32 %4241, %3829
  %t239237.us = sub nsw i32 %4242, %t231226
  %4243 = insertelement <64 x i32> undef, i32 %t239237.us, i32 0
  %4244 = shufflevector <64 x i32> %4243, <64 x i32> undef, <64 x i32> zeroinitializer
  br i1 %4190, label %"for Output.s1.r10$y238.preheader.split.us.us", label %"end for Output.s1.r10$y239.loopexit.us", !prof !398

"end for Output.s1.r10$y239.loopexit.us":         ; preds = %"end for Output.s1.r10$x244.loopexit.us.us", %"for Output.s1.r10$z234.us"
  %4245 = add nuw nsw i32 %"Output.s1.r10$z236.us", 1
  %.not350.us = icmp eq i32 %4245, %b110
  br i1 %.not350.us, label %"end for Output.s1.r10$z235", label %"for Output.s1.r10$z234.us"

"for Output.s1.r10$y238.preheader.split.us.us":   ; preds = %"for Output.s1.r10$z234.us"
  %4246 = sdiv <64 x i32> %4238, %4193
  %t177246.us.us = and <64 x i32> %4246, %4194
  %4247 = srem <64 x i32> %4238, %4195
  %t178247.us.us = and <64 x i32> %4247, %4194
  %4248 = shufflevector <64 x i32> %t178247.us.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4249 = shufflevector <64 x i32> %t178247.us.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4250 = shufflevector <64 x i32> %t178247.us.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %4251 = shufflevector <64 x i32> %t178247.us.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %.lobit352.us.us = ashr <16 x i32> %4248, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit353.us.us = ashr <16 x i32> %4249, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit354.us.us = ashr <16 x i32> %4250, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit355.us.us = ashr <16 x i32> %4251, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %4252 = shufflevector <16 x i32> %.lobit352.us.us, <16 x i32> %.lobit353.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4253 = shufflevector <16 x i32> %.lobit354.us.us, <16 x i32> %.lobit355.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %t355.us.us = shufflevector <32 x i32> %4252, <32 x i32> %4253, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %4254 = sub nsw <64 x i32> %t178247.us.us, %t355.us.us
  %4255 = sdiv <64 x i32> %4254, %4198
  %4256 = and <64 x i32> %t355.us.us, %4200
  %4257 = add nsw <64 x i32> %4256, %4255
  %t179248.us.us = and <64 x i32> %4257, %4201
  %4258 = srem <64 x i32> %4254, %4202
  %4259 = and <64 x i32> %t355.us.us, %4206
  %4260 = add nsw <64 x i32> %4259, %4258
  %t180249.us.us = and <64 x i32> %4260, %4201
  %4261 = add nsw <64 x i32> %t179248.us.us, %4208
  %4262 = mul nsw <64 x i32> %4261, %4210
  %4263 = add nsw <64 x i32> %t177246.us.us, %4212
  %4264 = mul nsw <64 x i32> %4263, %4214
  %4265 = add nsw <64 x i32> %4264, %4216
  %4266 = add <64 x i32> %4265, %t180249.us.us
  %t181250.us.us = add <64 x i32> %4266, %4262
  %4267 = extractelement <64 x i32> %t181250.us.us, i32 0
  %4268 = sext i32 %4267 to i64
  %4269 = getelementptr inbounds i32, i32* %4217, i64 %4268
  %4270 = extractelement <64 x i32> %t181250.us.us, i32 1
  %4271 = sext i32 %4270 to i64
  %4272 = getelementptr inbounds i32, i32* %4217, i64 %4271
  %4273 = extractelement <64 x i32> %t181250.us.us, i32 2
  %4274 = sext i32 %4273 to i64
  %4275 = getelementptr inbounds i32, i32* %4217, i64 %4274
  %4276 = extractelement <64 x i32> %t181250.us.us, i32 3
  %4277 = sext i32 %4276 to i64
  %4278 = getelementptr inbounds i32, i32* %4217, i64 %4277
  %4279 = extractelement <64 x i32> %t181250.us.us, i32 4
  %4280 = sext i32 %4279 to i64
  %4281 = getelementptr inbounds i32, i32* %4217, i64 %4280
  %4282 = extractelement <64 x i32> %t181250.us.us, i32 5
  %4283 = sext i32 %4282 to i64
  %4284 = getelementptr inbounds i32, i32* %4217, i64 %4283
  %4285 = extractelement <64 x i32> %t181250.us.us, i32 6
  %4286 = sext i32 %4285 to i64
  %4287 = getelementptr inbounds i32, i32* %4217, i64 %4286
  %4288 = extractelement <64 x i32> %t181250.us.us, i32 7
  %4289 = sext i32 %4288 to i64
  %4290 = getelementptr inbounds i32, i32* %4217, i64 %4289
  %4291 = extractelement <64 x i32> %t181250.us.us, i32 8
  %4292 = sext i32 %4291 to i64
  %4293 = getelementptr inbounds i32, i32* %4217, i64 %4292
  %4294 = extractelement <64 x i32> %t181250.us.us, i32 9
  %4295 = sext i32 %4294 to i64
  %4296 = getelementptr inbounds i32, i32* %4217, i64 %4295
  %4297 = extractelement <64 x i32> %t181250.us.us, i32 10
  %4298 = sext i32 %4297 to i64
  %4299 = getelementptr inbounds i32, i32* %4217, i64 %4298
  %4300 = extractelement <64 x i32> %t181250.us.us, i32 11
  %4301 = sext i32 %4300 to i64
  %4302 = getelementptr inbounds i32, i32* %4217, i64 %4301
  %4303 = extractelement <64 x i32> %t181250.us.us, i32 12
  %4304 = sext i32 %4303 to i64
  %4305 = getelementptr inbounds i32, i32* %4217, i64 %4304
  %4306 = extractelement <64 x i32> %t181250.us.us, i32 13
  %4307 = sext i32 %4306 to i64
  %4308 = getelementptr inbounds i32, i32* %4217, i64 %4307
  %4309 = extractelement <64 x i32> %t181250.us.us, i32 14
  %4310 = sext i32 %4309 to i64
  %4311 = getelementptr inbounds i32, i32* %4217, i64 %4310
  %4312 = extractelement <64 x i32> %t181250.us.us, i32 15
  %4313 = sext i32 %4312 to i64
  %4314 = getelementptr inbounds i32, i32* %4217, i64 %4313
  %4315 = extractelement <64 x i32> %t181250.us.us, i32 16
  %4316 = sext i32 %4315 to i64
  %4317 = getelementptr inbounds i32, i32* %4217, i64 %4316
  %4318 = extractelement <64 x i32> %t181250.us.us, i32 17
  %4319 = sext i32 %4318 to i64
  %4320 = getelementptr inbounds i32, i32* %4217, i64 %4319
  %4321 = extractelement <64 x i32> %t181250.us.us, i32 18
  %4322 = sext i32 %4321 to i64
  %4323 = getelementptr inbounds i32, i32* %4217, i64 %4322
  %4324 = extractelement <64 x i32> %t181250.us.us, i32 19
  %4325 = sext i32 %4324 to i64
  %4326 = getelementptr inbounds i32, i32* %4217, i64 %4325
  %4327 = extractelement <64 x i32> %t181250.us.us, i32 20
  %4328 = sext i32 %4327 to i64
  %4329 = getelementptr inbounds i32, i32* %4217, i64 %4328
  %4330 = extractelement <64 x i32> %t181250.us.us, i32 21
  %4331 = sext i32 %4330 to i64
  %4332 = getelementptr inbounds i32, i32* %4217, i64 %4331
  %4333 = extractelement <64 x i32> %t181250.us.us, i32 22
  %4334 = sext i32 %4333 to i64
  %4335 = getelementptr inbounds i32, i32* %4217, i64 %4334
  %4336 = extractelement <64 x i32> %t181250.us.us, i32 23
  %4337 = sext i32 %4336 to i64
  %4338 = getelementptr inbounds i32, i32* %4217, i64 %4337
  %4339 = extractelement <64 x i32> %t181250.us.us, i32 24
  %4340 = sext i32 %4339 to i64
  %4341 = getelementptr inbounds i32, i32* %4217, i64 %4340
  %4342 = extractelement <64 x i32> %t181250.us.us, i32 25
  %4343 = sext i32 %4342 to i64
  %4344 = getelementptr inbounds i32, i32* %4217, i64 %4343
  %4345 = extractelement <64 x i32> %t181250.us.us, i32 26
  %4346 = sext i32 %4345 to i64
  %4347 = getelementptr inbounds i32, i32* %4217, i64 %4346
  %4348 = extractelement <64 x i32> %t181250.us.us, i32 27
  %4349 = sext i32 %4348 to i64
  %4350 = getelementptr inbounds i32, i32* %4217, i64 %4349
  %4351 = extractelement <64 x i32> %t181250.us.us, i32 28
  %4352 = sext i32 %4351 to i64
  %4353 = getelementptr inbounds i32, i32* %4217, i64 %4352
  %4354 = extractelement <64 x i32> %t181250.us.us, i32 29
  %4355 = sext i32 %4354 to i64
  %4356 = getelementptr inbounds i32, i32* %4217, i64 %4355
  %4357 = extractelement <64 x i32> %t181250.us.us, i32 30
  %4358 = sext i32 %4357 to i64
  %4359 = getelementptr inbounds i32, i32* %4217, i64 %4358
  %4360 = extractelement <64 x i32> %t181250.us.us, i32 31
  %4361 = sext i32 %4360 to i64
  %4362 = getelementptr inbounds i32, i32* %4217, i64 %4361
  %4363 = extractelement <64 x i32> %t181250.us.us, i32 32
  %4364 = sext i32 %4363 to i64
  %4365 = getelementptr inbounds i32, i32* %4217, i64 %4364
  %4366 = extractelement <64 x i32> %t181250.us.us, i32 33
  %4367 = sext i32 %4366 to i64
  %4368 = getelementptr inbounds i32, i32* %4217, i64 %4367
  %4369 = extractelement <64 x i32> %t181250.us.us, i32 34
  %4370 = sext i32 %4369 to i64
  %4371 = getelementptr inbounds i32, i32* %4217, i64 %4370
  %4372 = extractelement <64 x i32> %t181250.us.us, i32 35
  %4373 = sext i32 %4372 to i64
  %4374 = getelementptr inbounds i32, i32* %4217, i64 %4373
  %4375 = extractelement <64 x i32> %t181250.us.us, i32 36
  %4376 = sext i32 %4375 to i64
  %4377 = getelementptr inbounds i32, i32* %4217, i64 %4376
  %4378 = extractelement <64 x i32> %t181250.us.us, i32 37
  %4379 = sext i32 %4378 to i64
  %4380 = getelementptr inbounds i32, i32* %4217, i64 %4379
  %4381 = extractelement <64 x i32> %t181250.us.us, i32 38
  %4382 = sext i32 %4381 to i64
  %4383 = getelementptr inbounds i32, i32* %4217, i64 %4382
  %4384 = extractelement <64 x i32> %t181250.us.us, i32 39
  %4385 = sext i32 %4384 to i64
  %4386 = getelementptr inbounds i32, i32* %4217, i64 %4385
  %4387 = extractelement <64 x i32> %t181250.us.us, i32 40
  %4388 = sext i32 %4387 to i64
  %4389 = getelementptr inbounds i32, i32* %4217, i64 %4388
  %4390 = extractelement <64 x i32> %t181250.us.us, i32 41
  %4391 = sext i32 %4390 to i64
  %4392 = getelementptr inbounds i32, i32* %4217, i64 %4391
  %4393 = extractelement <64 x i32> %t181250.us.us, i32 42
  %4394 = sext i32 %4393 to i64
  %4395 = getelementptr inbounds i32, i32* %4217, i64 %4394
  %4396 = extractelement <64 x i32> %t181250.us.us, i32 43
  %4397 = sext i32 %4396 to i64
  %4398 = getelementptr inbounds i32, i32* %4217, i64 %4397
  %4399 = extractelement <64 x i32> %t181250.us.us, i32 44
  %4400 = sext i32 %4399 to i64
  %4401 = getelementptr inbounds i32, i32* %4217, i64 %4400
  %4402 = extractelement <64 x i32> %t181250.us.us, i32 45
  %4403 = sext i32 %4402 to i64
  %4404 = getelementptr inbounds i32, i32* %4217, i64 %4403
  %4405 = extractelement <64 x i32> %t181250.us.us, i32 46
  %4406 = sext i32 %4405 to i64
  %4407 = getelementptr inbounds i32, i32* %4217, i64 %4406
  %4408 = extractelement <64 x i32> %t181250.us.us, i32 47
  %4409 = sext i32 %4408 to i64
  %4410 = getelementptr inbounds i32, i32* %4217, i64 %4409
  %4411 = extractelement <64 x i32> %t181250.us.us, i32 48
  %4412 = sext i32 %4411 to i64
  %4413 = getelementptr inbounds i32, i32* %4217, i64 %4412
  %4414 = extractelement <64 x i32> %t181250.us.us, i32 49
  %4415 = sext i32 %4414 to i64
  %4416 = getelementptr inbounds i32, i32* %4217, i64 %4415
  %4417 = extractelement <64 x i32> %t181250.us.us, i32 50
  %4418 = sext i32 %4417 to i64
  %4419 = getelementptr inbounds i32, i32* %4217, i64 %4418
  %4420 = extractelement <64 x i32> %t181250.us.us, i32 51
  %4421 = sext i32 %4420 to i64
  %4422 = getelementptr inbounds i32, i32* %4217, i64 %4421
  %4423 = extractelement <64 x i32> %t181250.us.us, i32 52
  %4424 = sext i32 %4423 to i64
  %4425 = getelementptr inbounds i32, i32* %4217, i64 %4424
  %4426 = extractelement <64 x i32> %t181250.us.us, i32 53
  %4427 = sext i32 %4426 to i64
  %4428 = getelementptr inbounds i32, i32* %4217, i64 %4427
  %4429 = extractelement <64 x i32> %t181250.us.us, i32 54
  %4430 = sext i32 %4429 to i64
  %4431 = getelementptr inbounds i32, i32* %4217, i64 %4430
  %4432 = extractelement <64 x i32> %t181250.us.us, i32 55
  %4433 = sext i32 %4432 to i64
  %4434 = getelementptr inbounds i32, i32* %4217, i64 %4433
  %4435 = extractelement <64 x i32> %t181250.us.us, i32 56
  %4436 = sext i32 %4435 to i64
  %4437 = getelementptr inbounds i32, i32* %4217, i64 %4436
  %4438 = extractelement <64 x i32> %t181250.us.us, i32 57
  %4439 = sext i32 %4438 to i64
  %4440 = getelementptr inbounds i32, i32* %4217, i64 %4439
  %4441 = extractelement <64 x i32> %t181250.us.us, i32 58
  %4442 = sext i32 %4441 to i64
  %4443 = getelementptr inbounds i32, i32* %4217, i64 %4442
  %4444 = extractelement <64 x i32> %t181250.us.us, i32 59
  %4445 = sext i32 %4444 to i64
  %4446 = getelementptr inbounds i32, i32* %4217, i64 %4445
  %4447 = extractelement <64 x i32> %t181250.us.us, i32 60
  %4448 = sext i32 %4447 to i64
  %4449 = getelementptr inbounds i32, i32* %4217, i64 %4448
  %4450 = extractelement <64 x i32> %t181250.us.us, i32 61
  %4451 = sext i32 %4450 to i64
  %4452 = getelementptr inbounds i32, i32* %4217, i64 %4451
  %4453 = extractelement <64 x i32> %t181250.us.us, i32 62
  %4454 = sext i32 %4453 to i64
  %4455 = getelementptr inbounds i32, i32* %4217, i64 %4454
  %4456 = extractelement <64 x i32> %t181250.us.us, i32 63
  %4457 = sext i32 %4456 to i64
  %4458 = getelementptr inbounds i32, i32* %4217, i64 %4457
  %4459 = add nsw <64 x i32> %t177246.us.us, %4219
  %4460 = mul nsw <64 x i32> %4459, %4221
  br label %"for Output.s1.r10$y238.us.us"

"for Output.s1.r10$y238.us.us":                   ; preds = %"end for Output.s1.r10$x244.loopexit.us.us", %"for Output.s1.r10$y238.preheader.split.us.us"
  %"Output.s1.r10$y240.us.us" = phi i32 [ %5354, %"end for Output.s1.r10$x244.loopexit.us.us" ], [ 0, %"for Output.s1.r10$y238.preheader.split.us.us" ]
  %t240241.us.us = mul nsw i32 %"Output.s1.r10$y240.us.us", %3810
  %t241242.us.us = sub nsw i32 %3886, %"Output.s1.r10$y240.us.us"
  %4461 = insertelement <64 x i32> undef, i32 %t241242.us.us, i32 0
  %4462 = shufflevector <64 x i32> %4461, <64 x i32> undef, <64 x i32> zeroinitializer
  %a115.us.us = add nsw <64 x i32> %t179248.us.us, %4462
  %4463 = shufflevector <64 x i32> %a115.us.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4464 = icmp sgt <16 x i32> %4228, %4463
  %4465 = shufflevector <64 x i32> %a115.us.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4466 = icmp sgt <16 x i32> %4228, %4465
  %4467 = shufflevector <64 x i32> %a115.us.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %4468 = icmp sgt <16 x i32> %4228, %4467
  %4469 = shufflevector <64 x i32> %a115.us.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %4470 = icmp sgt <16 x i32> %4228, %4469
  %4471 = select <16 x i1> %4464, <16 x i32> %4463, <16 x i32> %4228
  %4472 = select <16 x i1> %4466, <16 x i32> %4465, <16 x i32> %4228
  %4473 = select <16 x i1> %4468, <16 x i32> %4467, <16 x i32> %4228
  %4474 = select <16 x i1> %4470, <16 x i32> %4469, <16 x i32> %4228
  %4475 = icmp sgt <16 x i32> %4471, %4230
  %4476 = icmp sgt <16 x i32> %4472, %4230
  %4477 = icmp sgt <16 x i32> %4473, %4230
  %4478 = icmp sgt <16 x i32> %4474, %4230
  %4479 = select <16 x i1> %4475, <16 x i32> %4471, <16 x i32> %4230
  %4480 = select <16 x i1> %4476, <16 x i32> %4472, <16 x i32> %4230
  %4481 = select <16 x i1> %4477, <16 x i32> %4473, <16 x i32> %4230
  %4482 = select <16 x i1> %4478, <16 x i32> %4474, <16 x i32> %4230
  %4483 = shufflevector <16 x i32> %4479, <16 x i32> %4480, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4484 = shufflevector <16 x i32> %4481, <16 x i32> %4482, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4485 = shufflevector <32 x i32> %4483, <32 x i32> %4484, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %4486 = mul nsw <64 x i32> %4485, %4232
  br label %"for Output.s1.r10$x243.us.us"

"for Output.s1.r10$x243.us.us":                   ; preds = %"for Output.s1.r10$x243.us.us", %"for Output.s1.r10$y238.us.us"
  %"Output.s1.r10$x245.us.us" = phi i32 [ %5353, %"for Output.s1.r10$x243.us.us" ], [ 0, %"for Output.s1.r10$y238.us.us" ]
  %4487 = load i32, i32* %4269, align 4, !tbaa !399
  %4488 = insertelement <64 x i32> undef, i32 %4487, i32 0
  %4489 = load i32, i32* %4272, align 4, !tbaa !399
  %4490 = insertelement <64 x i32> %4488, i32 %4489, i32 1
  %4491 = load i32, i32* %4275, align 4, !tbaa !399
  %4492 = insertelement <64 x i32> %4490, i32 %4491, i32 2
  %4493 = load i32, i32* %4278, align 4, !tbaa !399
  %4494 = insertelement <64 x i32> %4492, i32 %4493, i32 3
  %4495 = load i32, i32* %4281, align 4, !tbaa !399
  %4496 = insertelement <64 x i32> %4494, i32 %4495, i32 4
  %4497 = load i32, i32* %4284, align 4, !tbaa !399
  %4498 = insertelement <64 x i32> %4496, i32 %4497, i32 5
  %4499 = load i32, i32* %4287, align 4, !tbaa !399
  %4500 = insertelement <64 x i32> %4498, i32 %4499, i32 6
  %4501 = load i32, i32* %4290, align 4, !tbaa !399
  %4502 = insertelement <64 x i32> %4500, i32 %4501, i32 7
  %4503 = load i32, i32* %4293, align 4, !tbaa !399
  %4504 = insertelement <64 x i32> %4502, i32 %4503, i32 8
  %4505 = load i32, i32* %4296, align 4, !tbaa !399
  %4506 = insertelement <64 x i32> %4504, i32 %4505, i32 9
  %4507 = load i32, i32* %4299, align 4, !tbaa !399
  %4508 = insertelement <64 x i32> %4506, i32 %4507, i32 10
  %4509 = load i32, i32* %4302, align 4, !tbaa !399
  %4510 = insertelement <64 x i32> %4508, i32 %4509, i32 11
  %4511 = load i32, i32* %4305, align 4, !tbaa !399
  %4512 = insertelement <64 x i32> %4510, i32 %4511, i32 12
  %4513 = load i32, i32* %4308, align 4, !tbaa !399
  %4514 = insertelement <64 x i32> %4512, i32 %4513, i32 13
  %4515 = load i32, i32* %4311, align 4, !tbaa !399
  %4516 = insertelement <64 x i32> %4514, i32 %4515, i32 14
  %4517 = load i32, i32* %4314, align 4, !tbaa !399
  %4518 = insertelement <64 x i32> %4516, i32 %4517, i32 15
  %4519 = load i32, i32* %4317, align 4, !tbaa !399
  %4520 = insertelement <64 x i32> %4518, i32 %4519, i32 16
  %4521 = load i32, i32* %4320, align 4, !tbaa !399
  %4522 = insertelement <64 x i32> %4520, i32 %4521, i32 17
  %4523 = load i32, i32* %4323, align 4, !tbaa !399
  %4524 = insertelement <64 x i32> %4522, i32 %4523, i32 18
  %4525 = load i32, i32* %4326, align 4, !tbaa !399
  %4526 = insertelement <64 x i32> %4524, i32 %4525, i32 19
  %4527 = load i32, i32* %4329, align 4, !tbaa !399
  %4528 = insertelement <64 x i32> %4526, i32 %4527, i32 20
  %4529 = load i32, i32* %4332, align 4, !tbaa !399
  %4530 = insertelement <64 x i32> %4528, i32 %4529, i32 21
  %4531 = load i32, i32* %4335, align 4, !tbaa !399
  %4532 = insertelement <64 x i32> %4530, i32 %4531, i32 22
  %4533 = load i32, i32* %4338, align 4, !tbaa !399
  %4534 = insertelement <64 x i32> %4532, i32 %4533, i32 23
  %4535 = load i32, i32* %4341, align 4, !tbaa !399
  %4536 = insertelement <64 x i32> %4534, i32 %4535, i32 24
  %4537 = load i32, i32* %4344, align 4, !tbaa !399
  %4538 = insertelement <64 x i32> %4536, i32 %4537, i32 25
  %4539 = load i32, i32* %4347, align 4, !tbaa !399
  %4540 = insertelement <64 x i32> %4538, i32 %4539, i32 26
  %4541 = load i32, i32* %4350, align 4, !tbaa !399
  %4542 = insertelement <64 x i32> %4540, i32 %4541, i32 27
  %4543 = load i32, i32* %4353, align 4, !tbaa !399
  %4544 = insertelement <64 x i32> %4542, i32 %4543, i32 28
  %4545 = load i32, i32* %4356, align 4, !tbaa !399
  %4546 = insertelement <64 x i32> %4544, i32 %4545, i32 29
  %4547 = load i32, i32* %4359, align 4, !tbaa !399
  %4548 = insertelement <64 x i32> %4546, i32 %4547, i32 30
  %4549 = load i32, i32* %4362, align 4, !tbaa !399
  %4550 = insertelement <64 x i32> %4548, i32 %4549, i32 31
  %4551 = load i32, i32* %4365, align 4, !tbaa !399
  %4552 = insertelement <64 x i32> %4550, i32 %4551, i32 32
  %4553 = load i32, i32* %4368, align 4, !tbaa !399
  %4554 = insertelement <64 x i32> %4552, i32 %4553, i32 33
  %4555 = load i32, i32* %4371, align 4, !tbaa !399
  %4556 = insertelement <64 x i32> %4554, i32 %4555, i32 34
  %4557 = load i32, i32* %4374, align 4, !tbaa !399
  %4558 = insertelement <64 x i32> %4556, i32 %4557, i32 35
  %4559 = load i32, i32* %4377, align 4, !tbaa !399
  %4560 = insertelement <64 x i32> %4558, i32 %4559, i32 36
  %4561 = load i32, i32* %4380, align 4, !tbaa !399
  %4562 = insertelement <64 x i32> %4560, i32 %4561, i32 37
  %4563 = load i32, i32* %4383, align 4, !tbaa !399
  %4564 = insertelement <64 x i32> %4562, i32 %4563, i32 38
  %4565 = load i32, i32* %4386, align 4, !tbaa !399
  %4566 = insertelement <64 x i32> %4564, i32 %4565, i32 39
  %4567 = load i32, i32* %4389, align 4, !tbaa !399
  %4568 = insertelement <64 x i32> %4566, i32 %4567, i32 40
  %4569 = load i32, i32* %4392, align 4, !tbaa !399
  %4570 = insertelement <64 x i32> %4568, i32 %4569, i32 41
  %4571 = load i32, i32* %4395, align 4, !tbaa !399
  %4572 = insertelement <64 x i32> %4570, i32 %4571, i32 42
  %4573 = load i32, i32* %4398, align 4, !tbaa !399
  %4574 = insertelement <64 x i32> %4572, i32 %4573, i32 43
  %4575 = load i32, i32* %4401, align 4, !tbaa !399
  %4576 = insertelement <64 x i32> %4574, i32 %4575, i32 44
  %4577 = load i32, i32* %4404, align 4, !tbaa !399
  %4578 = insertelement <64 x i32> %4576, i32 %4577, i32 45
  %4579 = load i32, i32* %4407, align 4, !tbaa !399
  %4580 = insertelement <64 x i32> %4578, i32 %4579, i32 46
  %4581 = load i32, i32* %4410, align 4, !tbaa !399
  %4582 = insertelement <64 x i32> %4580, i32 %4581, i32 47
  %4583 = load i32, i32* %4413, align 4, !tbaa !399
  %4584 = insertelement <64 x i32> %4582, i32 %4583, i32 48
  %4585 = load i32, i32* %4416, align 4, !tbaa !399
  %4586 = insertelement <64 x i32> %4584, i32 %4585, i32 49
  %4587 = load i32, i32* %4419, align 4, !tbaa !399
  %4588 = insertelement <64 x i32> %4586, i32 %4587, i32 50
  %4589 = load i32, i32* %4422, align 4, !tbaa !399
  %4590 = insertelement <64 x i32> %4588, i32 %4589, i32 51
  %4591 = load i32, i32* %4425, align 4, !tbaa !399
  %4592 = insertelement <64 x i32> %4590, i32 %4591, i32 52
  %4593 = load i32, i32* %4428, align 4, !tbaa !399
  %4594 = insertelement <64 x i32> %4592, i32 %4593, i32 53
  %4595 = load i32, i32* %4431, align 4, !tbaa !399
  %4596 = insertelement <64 x i32> %4594, i32 %4595, i32 54
  %4597 = load i32, i32* %4434, align 4, !tbaa !399
  %4598 = insertelement <64 x i32> %4596, i32 %4597, i32 55
  %4599 = load i32, i32* %4437, align 4, !tbaa !399
  %4600 = insertelement <64 x i32> %4598, i32 %4599, i32 56
  %4601 = load i32, i32* %4440, align 4, !tbaa !399
  %4602 = insertelement <64 x i32> %4600, i32 %4601, i32 57
  %4603 = load i32, i32* %4443, align 4, !tbaa !399
  %4604 = insertelement <64 x i32> %4602, i32 %4603, i32 58
  %4605 = load i32, i32* %4446, align 4, !tbaa !399
  %4606 = insertelement <64 x i32> %4604, i32 %4605, i32 59
  %4607 = load i32, i32* %4449, align 4, !tbaa !399
  %4608 = insertelement <64 x i32> %4606, i32 %4607, i32 60
  %4609 = load i32, i32* %4452, align 4, !tbaa !399
  %4610 = insertelement <64 x i32> %4608, i32 %4609, i32 61
  %4611 = load i32, i32* %4455, align 4, !tbaa !399
  %4612 = insertelement <64 x i32> %4610, i32 %4611, i32 62
  %4613 = load i32, i32* %4458, align 4, !tbaa !399
  %4614 = insertelement <64 x i32> %4612, i32 %4613, i32 63
  %4615 = add nsw i32 %"Output.s1.r10$x245.us.us", %t240241.us.us
  %4616 = insertelement <64 x i32> undef, i32 %4615, i32 0
  %4617 = shufflevector <64 x i32> %4616, <64 x i32> undef, <64 x i32> zeroinitializer
  %4618 = add nsw <64 x i32> %4460, %4617
  %4619 = extractelement <64 x i32> %4618, i32 0
  %4620 = sext i32 %4619 to i64
  %4621 = getelementptr inbounds i32, i32* %4222, i64 %4620
  %4622 = load i32, i32* %4621, align 4, !tbaa !402
  %4623 = insertelement <64 x i32> undef, i32 %4622, i32 0
  %4624 = extractelement <64 x i32> %4618, i32 1
  %4625 = sext i32 %4624 to i64
  %4626 = getelementptr inbounds i32, i32* %4222, i64 %4625
  %4627 = load i32, i32* %4626, align 4, !tbaa !402
  %4628 = insertelement <64 x i32> %4623, i32 %4627, i32 1
  %4629 = extractelement <64 x i32> %4618, i32 2
  %4630 = sext i32 %4629 to i64
  %4631 = getelementptr inbounds i32, i32* %4222, i64 %4630
  %4632 = load i32, i32* %4631, align 4, !tbaa !402
  %4633 = insertelement <64 x i32> %4628, i32 %4632, i32 2
  %4634 = extractelement <64 x i32> %4618, i32 3
  %4635 = sext i32 %4634 to i64
  %4636 = getelementptr inbounds i32, i32* %4222, i64 %4635
  %4637 = load i32, i32* %4636, align 4, !tbaa !402
  %4638 = insertelement <64 x i32> %4633, i32 %4637, i32 3
  %4639 = extractelement <64 x i32> %4618, i32 4
  %4640 = sext i32 %4639 to i64
  %4641 = getelementptr inbounds i32, i32* %4222, i64 %4640
  %4642 = load i32, i32* %4641, align 4, !tbaa !402
  %4643 = insertelement <64 x i32> %4638, i32 %4642, i32 4
  %4644 = extractelement <64 x i32> %4618, i32 5
  %4645 = sext i32 %4644 to i64
  %4646 = getelementptr inbounds i32, i32* %4222, i64 %4645
  %4647 = load i32, i32* %4646, align 4, !tbaa !402
  %4648 = insertelement <64 x i32> %4643, i32 %4647, i32 5
  %4649 = extractelement <64 x i32> %4618, i32 6
  %4650 = sext i32 %4649 to i64
  %4651 = getelementptr inbounds i32, i32* %4222, i64 %4650
  %4652 = load i32, i32* %4651, align 4, !tbaa !402
  %4653 = insertelement <64 x i32> %4648, i32 %4652, i32 6
  %4654 = extractelement <64 x i32> %4618, i32 7
  %4655 = sext i32 %4654 to i64
  %4656 = getelementptr inbounds i32, i32* %4222, i64 %4655
  %4657 = load i32, i32* %4656, align 4, !tbaa !402
  %4658 = insertelement <64 x i32> %4653, i32 %4657, i32 7
  %4659 = extractelement <64 x i32> %4618, i32 8
  %4660 = sext i32 %4659 to i64
  %4661 = getelementptr inbounds i32, i32* %4222, i64 %4660
  %4662 = load i32, i32* %4661, align 4, !tbaa !402
  %4663 = insertelement <64 x i32> %4658, i32 %4662, i32 8
  %4664 = extractelement <64 x i32> %4618, i32 9
  %4665 = sext i32 %4664 to i64
  %4666 = getelementptr inbounds i32, i32* %4222, i64 %4665
  %4667 = load i32, i32* %4666, align 4, !tbaa !402
  %4668 = insertelement <64 x i32> %4663, i32 %4667, i32 9
  %4669 = extractelement <64 x i32> %4618, i32 10
  %4670 = sext i32 %4669 to i64
  %4671 = getelementptr inbounds i32, i32* %4222, i64 %4670
  %4672 = load i32, i32* %4671, align 4, !tbaa !402
  %4673 = insertelement <64 x i32> %4668, i32 %4672, i32 10
  %4674 = extractelement <64 x i32> %4618, i32 11
  %4675 = sext i32 %4674 to i64
  %4676 = getelementptr inbounds i32, i32* %4222, i64 %4675
  %4677 = load i32, i32* %4676, align 4, !tbaa !402
  %4678 = insertelement <64 x i32> %4673, i32 %4677, i32 11
  %4679 = extractelement <64 x i32> %4618, i32 12
  %4680 = sext i32 %4679 to i64
  %4681 = getelementptr inbounds i32, i32* %4222, i64 %4680
  %4682 = load i32, i32* %4681, align 4, !tbaa !402
  %4683 = insertelement <64 x i32> %4678, i32 %4682, i32 12
  %4684 = extractelement <64 x i32> %4618, i32 13
  %4685 = sext i32 %4684 to i64
  %4686 = getelementptr inbounds i32, i32* %4222, i64 %4685
  %4687 = load i32, i32* %4686, align 4, !tbaa !402
  %4688 = insertelement <64 x i32> %4683, i32 %4687, i32 13
  %4689 = extractelement <64 x i32> %4618, i32 14
  %4690 = sext i32 %4689 to i64
  %4691 = getelementptr inbounds i32, i32* %4222, i64 %4690
  %4692 = load i32, i32* %4691, align 4, !tbaa !402
  %4693 = insertelement <64 x i32> %4688, i32 %4692, i32 14
  %4694 = extractelement <64 x i32> %4618, i32 15
  %4695 = sext i32 %4694 to i64
  %4696 = getelementptr inbounds i32, i32* %4222, i64 %4695
  %4697 = load i32, i32* %4696, align 4, !tbaa !402
  %4698 = insertelement <64 x i32> %4693, i32 %4697, i32 15
  %4699 = extractelement <64 x i32> %4618, i32 16
  %4700 = sext i32 %4699 to i64
  %4701 = getelementptr inbounds i32, i32* %4222, i64 %4700
  %4702 = load i32, i32* %4701, align 4, !tbaa !402
  %4703 = insertelement <64 x i32> %4698, i32 %4702, i32 16
  %4704 = extractelement <64 x i32> %4618, i32 17
  %4705 = sext i32 %4704 to i64
  %4706 = getelementptr inbounds i32, i32* %4222, i64 %4705
  %4707 = load i32, i32* %4706, align 4, !tbaa !402
  %4708 = insertelement <64 x i32> %4703, i32 %4707, i32 17
  %4709 = extractelement <64 x i32> %4618, i32 18
  %4710 = sext i32 %4709 to i64
  %4711 = getelementptr inbounds i32, i32* %4222, i64 %4710
  %4712 = load i32, i32* %4711, align 4, !tbaa !402
  %4713 = insertelement <64 x i32> %4708, i32 %4712, i32 18
  %4714 = extractelement <64 x i32> %4618, i32 19
  %4715 = sext i32 %4714 to i64
  %4716 = getelementptr inbounds i32, i32* %4222, i64 %4715
  %4717 = load i32, i32* %4716, align 4, !tbaa !402
  %4718 = insertelement <64 x i32> %4713, i32 %4717, i32 19
  %4719 = extractelement <64 x i32> %4618, i32 20
  %4720 = sext i32 %4719 to i64
  %4721 = getelementptr inbounds i32, i32* %4222, i64 %4720
  %4722 = load i32, i32* %4721, align 4, !tbaa !402
  %4723 = insertelement <64 x i32> %4718, i32 %4722, i32 20
  %4724 = extractelement <64 x i32> %4618, i32 21
  %4725 = sext i32 %4724 to i64
  %4726 = getelementptr inbounds i32, i32* %4222, i64 %4725
  %4727 = load i32, i32* %4726, align 4, !tbaa !402
  %4728 = insertelement <64 x i32> %4723, i32 %4727, i32 21
  %4729 = extractelement <64 x i32> %4618, i32 22
  %4730 = sext i32 %4729 to i64
  %4731 = getelementptr inbounds i32, i32* %4222, i64 %4730
  %4732 = load i32, i32* %4731, align 4, !tbaa !402
  %4733 = insertelement <64 x i32> %4728, i32 %4732, i32 22
  %4734 = extractelement <64 x i32> %4618, i32 23
  %4735 = sext i32 %4734 to i64
  %4736 = getelementptr inbounds i32, i32* %4222, i64 %4735
  %4737 = load i32, i32* %4736, align 4, !tbaa !402
  %4738 = insertelement <64 x i32> %4733, i32 %4737, i32 23
  %4739 = extractelement <64 x i32> %4618, i32 24
  %4740 = sext i32 %4739 to i64
  %4741 = getelementptr inbounds i32, i32* %4222, i64 %4740
  %4742 = load i32, i32* %4741, align 4, !tbaa !402
  %4743 = insertelement <64 x i32> %4738, i32 %4742, i32 24
  %4744 = extractelement <64 x i32> %4618, i32 25
  %4745 = sext i32 %4744 to i64
  %4746 = getelementptr inbounds i32, i32* %4222, i64 %4745
  %4747 = load i32, i32* %4746, align 4, !tbaa !402
  %4748 = insertelement <64 x i32> %4743, i32 %4747, i32 25
  %4749 = extractelement <64 x i32> %4618, i32 26
  %4750 = sext i32 %4749 to i64
  %4751 = getelementptr inbounds i32, i32* %4222, i64 %4750
  %4752 = load i32, i32* %4751, align 4, !tbaa !402
  %4753 = insertelement <64 x i32> %4748, i32 %4752, i32 26
  %4754 = extractelement <64 x i32> %4618, i32 27
  %4755 = sext i32 %4754 to i64
  %4756 = getelementptr inbounds i32, i32* %4222, i64 %4755
  %4757 = load i32, i32* %4756, align 4, !tbaa !402
  %4758 = insertelement <64 x i32> %4753, i32 %4757, i32 27
  %4759 = extractelement <64 x i32> %4618, i32 28
  %4760 = sext i32 %4759 to i64
  %4761 = getelementptr inbounds i32, i32* %4222, i64 %4760
  %4762 = load i32, i32* %4761, align 4, !tbaa !402
  %4763 = insertelement <64 x i32> %4758, i32 %4762, i32 28
  %4764 = extractelement <64 x i32> %4618, i32 29
  %4765 = sext i32 %4764 to i64
  %4766 = getelementptr inbounds i32, i32* %4222, i64 %4765
  %4767 = load i32, i32* %4766, align 4, !tbaa !402
  %4768 = insertelement <64 x i32> %4763, i32 %4767, i32 29
  %4769 = extractelement <64 x i32> %4618, i32 30
  %4770 = sext i32 %4769 to i64
  %4771 = getelementptr inbounds i32, i32* %4222, i64 %4770
  %4772 = load i32, i32* %4771, align 4, !tbaa !402
  %4773 = insertelement <64 x i32> %4768, i32 %4772, i32 30
  %4774 = extractelement <64 x i32> %4618, i32 31
  %4775 = sext i32 %4774 to i64
  %4776 = getelementptr inbounds i32, i32* %4222, i64 %4775
  %4777 = load i32, i32* %4776, align 4, !tbaa !402
  %4778 = insertelement <64 x i32> %4773, i32 %4777, i32 31
  %4779 = extractelement <64 x i32> %4618, i32 32
  %4780 = sext i32 %4779 to i64
  %4781 = getelementptr inbounds i32, i32* %4222, i64 %4780
  %4782 = load i32, i32* %4781, align 4, !tbaa !402
  %4783 = insertelement <64 x i32> %4778, i32 %4782, i32 32
  %4784 = extractelement <64 x i32> %4618, i32 33
  %4785 = sext i32 %4784 to i64
  %4786 = getelementptr inbounds i32, i32* %4222, i64 %4785
  %4787 = load i32, i32* %4786, align 4, !tbaa !402
  %4788 = insertelement <64 x i32> %4783, i32 %4787, i32 33
  %4789 = extractelement <64 x i32> %4618, i32 34
  %4790 = sext i32 %4789 to i64
  %4791 = getelementptr inbounds i32, i32* %4222, i64 %4790
  %4792 = load i32, i32* %4791, align 4, !tbaa !402
  %4793 = insertelement <64 x i32> %4788, i32 %4792, i32 34
  %4794 = extractelement <64 x i32> %4618, i32 35
  %4795 = sext i32 %4794 to i64
  %4796 = getelementptr inbounds i32, i32* %4222, i64 %4795
  %4797 = load i32, i32* %4796, align 4, !tbaa !402
  %4798 = insertelement <64 x i32> %4793, i32 %4797, i32 35
  %4799 = extractelement <64 x i32> %4618, i32 36
  %4800 = sext i32 %4799 to i64
  %4801 = getelementptr inbounds i32, i32* %4222, i64 %4800
  %4802 = load i32, i32* %4801, align 4, !tbaa !402
  %4803 = insertelement <64 x i32> %4798, i32 %4802, i32 36
  %4804 = extractelement <64 x i32> %4618, i32 37
  %4805 = sext i32 %4804 to i64
  %4806 = getelementptr inbounds i32, i32* %4222, i64 %4805
  %4807 = load i32, i32* %4806, align 4, !tbaa !402
  %4808 = insertelement <64 x i32> %4803, i32 %4807, i32 37
  %4809 = extractelement <64 x i32> %4618, i32 38
  %4810 = sext i32 %4809 to i64
  %4811 = getelementptr inbounds i32, i32* %4222, i64 %4810
  %4812 = load i32, i32* %4811, align 4, !tbaa !402
  %4813 = insertelement <64 x i32> %4808, i32 %4812, i32 38
  %4814 = extractelement <64 x i32> %4618, i32 39
  %4815 = sext i32 %4814 to i64
  %4816 = getelementptr inbounds i32, i32* %4222, i64 %4815
  %4817 = load i32, i32* %4816, align 4, !tbaa !402
  %4818 = insertelement <64 x i32> %4813, i32 %4817, i32 39
  %4819 = extractelement <64 x i32> %4618, i32 40
  %4820 = sext i32 %4819 to i64
  %4821 = getelementptr inbounds i32, i32* %4222, i64 %4820
  %4822 = load i32, i32* %4821, align 4, !tbaa !402
  %4823 = insertelement <64 x i32> %4818, i32 %4822, i32 40
  %4824 = extractelement <64 x i32> %4618, i32 41
  %4825 = sext i32 %4824 to i64
  %4826 = getelementptr inbounds i32, i32* %4222, i64 %4825
  %4827 = load i32, i32* %4826, align 4, !tbaa !402
  %4828 = insertelement <64 x i32> %4823, i32 %4827, i32 41
  %4829 = extractelement <64 x i32> %4618, i32 42
  %4830 = sext i32 %4829 to i64
  %4831 = getelementptr inbounds i32, i32* %4222, i64 %4830
  %4832 = load i32, i32* %4831, align 4, !tbaa !402
  %4833 = insertelement <64 x i32> %4828, i32 %4832, i32 42
  %4834 = extractelement <64 x i32> %4618, i32 43
  %4835 = sext i32 %4834 to i64
  %4836 = getelementptr inbounds i32, i32* %4222, i64 %4835
  %4837 = load i32, i32* %4836, align 4, !tbaa !402
  %4838 = insertelement <64 x i32> %4833, i32 %4837, i32 43
  %4839 = extractelement <64 x i32> %4618, i32 44
  %4840 = sext i32 %4839 to i64
  %4841 = getelementptr inbounds i32, i32* %4222, i64 %4840
  %4842 = load i32, i32* %4841, align 4, !tbaa !402
  %4843 = insertelement <64 x i32> %4838, i32 %4842, i32 44
  %4844 = extractelement <64 x i32> %4618, i32 45
  %4845 = sext i32 %4844 to i64
  %4846 = getelementptr inbounds i32, i32* %4222, i64 %4845
  %4847 = load i32, i32* %4846, align 4, !tbaa !402
  %4848 = insertelement <64 x i32> %4843, i32 %4847, i32 45
  %4849 = extractelement <64 x i32> %4618, i32 46
  %4850 = sext i32 %4849 to i64
  %4851 = getelementptr inbounds i32, i32* %4222, i64 %4850
  %4852 = load i32, i32* %4851, align 4, !tbaa !402
  %4853 = insertelement <64 x i32> %4848, i32 %4852, i32 46
  %4854 = extractelement <64 x i32> %4618, i32 47
  %4855 = sext i32 %4854 to i64
  %4856 = getelementptr inbounds i32, i32* %4222, i64 %4855
  %4857 = load i32, i32* %4856, align 4, !tbaa !402
  %4858 = insertelement <64 x i32> %4853, i32 %4857, i32 47
  %4859 = extractelement <64 x i32> %4618, i32 48
  %4860 = sext i32 %4859 to i64
  %4861 = getelementptr inbounds i32, i32* %4222, i64 %4860
  %4862 = load i32, i32* %4861, align 4, !tbaa !402
  %4863 = insertelement <64 x i32> %4858, i32 %4862, i32 48
  %4864 = extractelement <64 x i32> %4618, i32 49
  %4865 = sext i32 %4864 to i64
  %4866 = getelementptr inbounds i32, i32* %4222, i64 %4865
  %4867 = load i32, i32* %4866, align 4, !tbaa !402
  %4868 = insertelement <64 x i32> %4863, i32 %4867, i32 49
  %4869 = extractelement <64 x i32> %4618, i32 50
  %4870 = sext i32 %4869 to i64
  %4871 = getelementptr inbounds i32, i32* %4222, i64 %4870
  %4872 = load i32, i32* %4871, align 4, !tbaa !402
  %4873 = insertelement <64 x i32> %4868, i32 %4872, i32 50
  %4874 = extractelement <64 x i32> %4618, i32 51
  %4875 = sext i32 %4874 to i64
  %4876 = getelementptr inbounds i32, i32* %4222, i64 %4875
  %4877 = load i32, i32* %4876, align 4, !tbaa !402
  %4878 = insertelement <64 x i32> %4873, i32 %4877, i32 51
  %4879 = extractelement <64 x i32> %4618, i32 52
  %4880 = sext i32 %4879 to i64
  %4881 = getelementptr inbounds i32, i32* %4222, i64 %4880
  %4882 = load i32, i32* %4881, align 4, !tbaa !402
  %4883 = insertelement <64 x i32> %4878, i32 %4882, i32 52
  %4884 = extractelement <64 x i32> %4618, i32 53
  %4885 = sext i32 %4884 to i64
  %4886 = getelementptr inbounds i32, i32* %4222, i64 %4885
  %4887 = load i32, i32* %4886, align 4, !tbaa !402
  %4888 = insertelement <64 x i32> %4883, i32 %4887, i32 53
  %4889 = extractelement <64 x i32> %4618, i32 54
  %4890 = sext i32 %4889 to i64
  %4891 = getelementptr inbounds i32, i32* %4222, i64 %4890
  %4892 = load i32, i32* %4891, align 4, !tbaa !402
  %4893 = insertelement <64 x i32> %4888, i32 %4892, i32 54
  %4894 = extractelement <64 x i32> %4618, i32 55
  %4895 = sext i32 %4894 to i64
  %4896 = getelementptr inbounds i32, i32* %4222, i64 %4895
  %4897 = load i32, i32* %4896, align 4, !tbaa !402
  %4898 = insertelement <64 x i32> %4893, i32 %4897, i32 55
  %4899 = extractelement <64 x i32> %4618, i32 56
  %4900 = sext i32 %4899 to i64
  %4901 = getelementptr inbounds i32, i32* %4222, i64 %4900
  %4902 = load i32, i32* %4901, align 4, !tbaa !402
  %4903 = insertelement <64 x i32> %4898, i32 %4902, i32 56
  %4904 = extractelement <64 x i32> %4618, i32 57
  %4905 = sext i32 %4904 to i64
  %4906 = getelementptr inbounds i32, i32* %4222, i64 %4905
  %4907 = load i32, i32* %4906, align 4, !tbaa !402
  %4908 = insertelement <64 x i32> %4903, i32 %4907, i32 57
  %4909 = extractelement <64 x i32> %4618, i32 58
  %4910 = sext i32 %4909 to i64
  %4911 = getelementptr inbounds i32, i32* %4222, i64 %4910
  %4912 = load i32, i32* %4911, align 4, !tbaa !402
  %4913 = insertelement <64 x i32> %4908, i32 %4912, i32 58
  %4914 = extractelement <64 x i32> %4618, i32 59
  %4915 = sext i32 %4914 to i64
  %4916 = getelementptr inbounds i32, i32* %4222, i64 %4915
  %4917 = load i32, i32* %4916, align 4, !tbaa !402
  %4918 = insertelement <64 x i32> %4913, i32 %4917, i32 59
  %4919 = extractelement <64 x i32> %4618, i32 60
  %4920 = sext i32 %4919 to i64
  %4921 = getelementptr inbounds i32, i32* %4222, i64 %4920
  %4922 = load i32, i32* %4921, align 4, !tbaa !402
  %4923 = insertelement <64 x i32> %4918, i32 %4922, i32 60
  %4924 = extractelement <64 x i32> %4618, i32 61
  %4925 = sext i32 %4924 to i64
  %4926 = getelementptr inbounds i32, i32* %4222, i64 %4925
  %4927 = load i32, i32* %4926, align 4, !tbaa !402
  %4928 = insertelement <64 x i32> %4923, i32 %4927, i32 61
  %4929 = extractelement <64 x i32> %4618, i32 62
  %4930 = sext i32 %4929 to i64
  %4931 = getelementptr inbounds i32, i32* %4222, i64 %4930
  %4932 = load i32, i32* %4931, align 4, !tbaa !402
  %4933 = insertelement <64 x i32> %4928, i32 %4932, i32 62
  %4934 = extractelement <64 x i32> %4618, i32 63
  %4935 = sext i32 %4934 to i64
  %4936 = getelementptr inbounds i32, i32* %4222, i64 %4935
  %4937 = load i32, i32* %4936, align 4, !tbaa !402
  %4938 = insertelement <64 x i32> %4933, i32 %4937, i32 63
  %4939 = sub nsw i32 %3866, %"Output.s1.r10$x245.us.us"
  %4940 = insertelement <64 x i32> undef, i32 %4939, i32 0
  %4941 = shufflevector <64 x i32> %4940, <64 x i32> undef, <64 x i32> zeroinitializer
  %a113.us.us = add nsw <64 x i32> %t180249.us.us, %4941
  %4942 = shufflevector <64 x i32> %a113.us.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4943 = icmp sgt <16 x i32> %4224, %4942
  %4944 = shufflevector <64 x i32> %a113.us.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4945 = icmp sgt <16 x i32> %4224, %4944
  %4946 = shufflevector <64 x i32> %a113.us.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %4947 = icmp sgt <16 x i32> %4224, %4946
  %4948 = shufflevector <64 x i32> %a113.us.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %4949 = icmp sgt <16 x i32> %4224, %4948
  %4950 = select <16 x i1> %4943, <16 x i32> %4942, <16 x i32> %4224
  %4951 = select <16 x i1> %4945, <16 x i32> %4944, <16 x i32> %4224
  %4952 = select <16 x i1> %4947, <16 x i32> %4946, <16 x i32> %4224
  %4953 = select <16 x i1> %4949, <16 x i32> %4948, <16 x i32> %4224
  %4954 = icmp sgt <16 x i32> %4950, %4226
  %4955 = icmp sgt <16 x i32> %4951, %4226
  %4956 = icmp sgt <16 x i32> %4952, %4226
  %4957 = icmp sgt <16 x i32> %4953, %4226
  %4958 = select <16 x i1> %4954, <16 x i32> %4950, <16 x i32> %4226
  %4959 = select <16 x i1> %4955, <16 x i32> %4951, <16 x i32> %4226
  %4960 = select <16 x i1> %4956, <16 x i32> %4952, <16 x i32> %4226
  %4961 = select <16 x i1> %4957, <16 x i32> %4953, <16 x i32> %4226
  %4962 = shufflevector <16 x i32> %4958, <16 x i32> %4959, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4963 = shufflevector <16 x i32> %4960, <16 x i32> %4961, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4964 = shufflevector <32 x i32> %4962, <32 x i32> %4963, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %4965 = add <64 x i32> %4964, %4244
  %4966 = add <64 x i32> %4965, %4486
  %4967 = extractelement <64 x i32> %4966, i32 0
  %4968 = sext i32 %4967 to i64
  %4969 = getelementptr inbounds i32, i32* %4233, i64 %4968
  %4970 = load i32, i32* %4969, align 4, !tbaa !404
  %4971 = insertelement <64 x i32> undef, i32 %4970, i32 0
  %4972 = extractelement <64 x i32> %4966, i32 1
  %4973 = sext i32 %4972 to i64
  %4974 = getelementptr inbounds i32, i32* %4233, i64 %4973
  %4975 = load i32, i32* %4974, align 4, !tbaa !404
  %4976 = insertelement <64 x i32> %4971, i32 %4975, i32 1
  %4977 = extractelement <64 x i32> %4966, i32 2
  %4978 = sext i32 %4977 to i64
  %4979 = getelementptr inbounds i32, i32* %4233, i64 %4978
  %4980 = load i32, i32* %4979, align 4, !tbaa !404
  %4981 = insertelement <64 x i32> %4976, i32 %4980, i32 2
  %4982 = extractelement <64 x i32> %4966, i32 3
  %4983 = sext i32 %4982 to i64
  %4984 = getelementptr inbounds i32, i32* %4233, i64 %4983
  %4985 = load i32, i32* %4984, align 4, !tbaa !404
  %4986 = insertelement <64 x i32> %4981, i32 %4985, i32 3
  %4987 = extractelement <64 x i32> %4966, i32 4
  %4988 = sext i32 %4987 to i64
  %4989 = getelementptr inbounds i32, i32* %4233, i64 %4988
  %4990 = load i32, i32* %4989, align 4, !tbaa !404
  %4991 = insertelement <64 x i32> %4986, i32 %4990, i32 4
  %4992 = extractelement <64 x i32> %4966, i32 5
  %4993 = sext i32 %4992 to i64
  %4994 = getelementptr inbounds i32, i32* %4233, i64 %4993
  %4995 = load i32, i32* %4994, align 4, !tbaa !404
  %4996 = insertelement <64 x i32> %4991, i32 %4995, i32 5
  %4997 = extractelement <64 x i32> %4966, i32 6
  %4998 = sext i32 %4997 to i64
  %4999 = getelementptr inbounds i32, i32* %4233, i64 %4998
  %5000 = load i32, i32* %4999, align 4, !tbaa !404
  %5001 = insertelement <64 x i32> %4996, i32 %5000, i32 6
  %5002 = extractelement <64 x i32> %4966, i32 7
  %5003 = sext i32 %5002 to i64
  %5004 = getelementptr inbounds i32, i32* %4233, i64 %5003
  %5005 = load i32, i32* %5004, align 4, !tbaa !404
  %5006 = insertelement <64 x i32> %5001, i32 %5005, i32 7
  %5007 = extractelement <64 x i32> %4966, i32 8
  %5008 = sext i32 %5007 to i64
  %5009 = getelementptr inbounds i32, i32* %4233, i64 %5008
  %5010 = load i32, i32* %5009, align 4, !tbaa !404
  %5011 = insertelement <64 x i32> %5006, i32 %5010, i32 8
  %5012 = extractelement <64 x i32> %4966, i32 9
  %5013 = sext i32 %5012 to i64
  %5014 = getelementptr inbounds i32, i32* %4233, i64 %5013
  %5015 = load i32, i32* %5014, align 4, !tbaa !404
  %5016 = insertelement <64 x i32> %5011, i32 %5015, i32 9
  %5017 = extractelement <64 x i32> %4966, i32 10
  %5018 = sext i32 %5017 to i64
  %5019 = getelementptr inbounds i32, i32* %4233, i64 %5018
  %5020 = load i32, i32* %5019, align 4, !tbaa !404
  %5021 = insertelement <64 x i32> %5016, i32 %5020, i32 10
  %5022 = extractelement <64 x i32> %4966, i32 11
  %5023 = sext i32 %5022 to i64
  %5024 = getelementptr inbounds i32, i32* %4233, i64 %5023
  %5025 = load i32, i32* %5024, align 4, !tbaa !404
  %5026 = insertelement <64 x i32> %5021, i32 %5025, i32 11
  %5027 = extractelement <64 x i32> %4966, i32 12
  %5028 = sext i32 %5027 to i64
  %5029 = getelementptr inbounds i32, i32* %4233, i64 %5028
  %5030 = load i32, i32* %5029, align 4, !tbaa !404
  %5031 = insertelement <64 x i32> %5026, i32 %5030, i32 12
  %5032 = extractelement <64 x i32> %4966, i32 13
  %5033 = sext i32 %5032 to i64
  %5034 = getelementptr inbounds i32, i32* %4233, i64 %5033
  %5035 = load i32, i32* %5034, align 4, !tbaa !404
  %5036 = insertelement <64 x i32> %5031, i32 %5035, i32 13
  %5037 = extractelement <64 x i32> %4966, i32 14
  %5038 = sext i32 %5037 to i64
  %5039 = getelementptr inbounds i32, i32* %4233, i64 %5038
  %5040 = load i32, i32* %5039, align 4, !tbaa !404
  %5041 = insertelement <64 x i32> %5036, i32 %5040, i32 14
  %5042 = extractelement <64 x i32> %4966, i32 15
  %5043 = sext i32 %5042 to i64
  %5044 = getelementptr inbounds i32, i32* %4233, i64 %5043
  %5045 = load i32, i32* %5044, align 4, !tbaa !404
  %5046 = insertelement <64 x i32> %5041, i32 %5045, i32 15
  %5047 = extractelement <64 x i32> %4966, i32 16
  %5048 = sext i32 %5047 to i64
  %5049 = getelementptr inbounds i32, i32* %4233, i64 %5048
  %5050 = load i32, i32* %5049, align 4, !tbaa !404
  %5051 = insertelement <64 x i32> %5046, i32 %5050, i32 16
  %5052 = extractelement <64 x i32> %4966, i32 17
  %5053 = sext i32 %5052 to i64
  %5054 = getelementptr inbounds i32, i32* %4233, i64 %5053
  %5055 = load i32, i32* %5054, align 4, !tbaa !404
  %5056 = insertelement <64 x i32> %5051, i32 %5055, i32 17
  %5057 = extractelement <64 x i32> %4966, i32 18
  %5058 = sext i32 %5057 to i64
  %5059 = getelementptr inbounds i32, i32* %4233, i64 %5058
  %5060 = load i32, i32* %5059, align 4, !tbaa !404
  %5061 = insertelement <64 x i32> %5056, i32 %5060, i32 18
  %5062 = extractelement <64 x i32> %4966, i32 19
  %5063 = sext i32 %5062 to i64
  %5064 = getelementptr inbounds i32, i32* %4233, i64 %5063
  %5065 = load i32, i32* %5064, align 4, !tbaa !404
  %5066 = insertelement <64 x i32> %5061, i32 %5065, i32 19
  %5067 = extractelement <64 x i32> %4966, i32 20
  %5068 = sext i32 %5067 to i64
  %5069 = getelementptr inbounds i32, i32* %4233, i64 %5068
  %5070 = load i32, i32* %5069, align 4, !tbaa !404
  %5071 = insertelement <64 x i32> %5066, i32 %5070, i32 20
  %5072 = extractelement <64 x i32> %4966, i32 21
  %5073 = sext i32 %5072 to i64
  %5074 = getelementptr inbounds i32, i32* %4233, i64 %5073
  %5075 = load i32, i32* %5074, align 4, !tbaa !404
  %5076 = insertelement <64 x i32> %5071, i32 %5075, i32 21
  %5077 = extractelement <64 x i32> %4966, i32 22
  %5078 = sext i32 %5077 to i64
  %5079 = getelementptr inbounds i32, i32* %4233, i64 %5078
  %5080 = load i32, i32* %5079, align 4, !tbaa !404
  %5081 = insertelement <64 x i32> %5076, i32 %5080, i32 22
  %5082 = extractelement <64 x i32> %4966, i32 23
  %5083 = sext i32 %5082 to i64
  %5084 = getelementptr inbounds i32, i32* %4233, i64 %5083
  %5085 = load i32, i32* %5084, align 4, !tbaa !404
  %5086 = insertelement <64 x i32> %5081, i32 %5085, i32 23
  %5087 = extractelement <64 x i32> %4966, i32 24
  %5088 = sext i32 %5087 to i64
  %5089 = getelementptr inbounds i32, i32* %4233, i64 %5088
  %5090 = load i32, i32* %5089, align 4, !tbaa !404
  %5091 = insertelement <64 x i32> %5086, i32 %5090, i32 24
  %5092 = extractelement <64 x i32> %4966, i32 25
  %5093 = sext i32 %5092 to i64
  %5094 = getelementptr inbounds i32, i32* %4233, i64 %5093
  %5095 = load i32, i32* %5094, align 4, !tbaa !404
  %5096 = insertelement <64 x i32> %5091, i32 %5095, i32 25
  %5097 = extractelement <64 x i32> %4966, i32 26
  %5098 = sext i32 %5097 to i64
  %5099 = getelementptr inbounds i32, i32* %4233, i64 %5098
  %5100 = load i32, i32* %5099, align 4, !tbaa !404
  %5101 = insertelement <64 x i32> %5096, i32 %5100, i32 26
  %5102 = extractelement <64 x i32> %4966, i32 27
  %5103 = sext i32 %5102 to i64
  %5104 = getelementptr inbounds i32, i32* %4233, i64 %5103
  %5105 = load i32, i32* %5104, align 4, !tbaa !404
  %5106 = insertelement <64 x i32> %5101, i32 %5105, i32 27
  %5107 = extractelement <64 x i32> %4966, i32 28
  %5108 = sext i32 %5107 to i64
  %5109 = getelementptr inbounds i32, i32* %4233, i64 %5108
  %5110 = load i32, i32* %5109, align 4, !tbaa !404
  %5111 = insertelement <64 x i32> %5106, i32 %5110, i32 28
  %5112 = extractelement <64 x i32> %4966, i32 29
  %5113 = sext i32 %5112 to i64
  %5114 = getelementptr inbounds i32, i32* %4233, i64 %5113
  %5115 = load i32, i32* %5114, align 4, !tbaa !404
  %5116 = insertelement <64 x i32> %5111, i32 %5115, i32 29
  %5117 = extractelement <64 x i32> %4966, i32 30
  %5118 = sext i32 %5117 to i64
  %5119 = getelementptr inbounds i32, i32* %4233, i64 %5118
  %5120 = load i32, i32* %5119, align 4, !tbaa !404
  %5121 = insertelement <64 x i32> %5116, i32 %5120, i32 30
  %5122 = extractelement <64 x i32> %4966, i32 31
  %5123 = sext i32 %5122 to i64
  %5124 = getelementptr inbounds i32, i32* %4233, i64 %5123
  %5125 = load i32, i32* %5124, align 4, !tbaa !404
  %5126 = insertelement <64 x i32> %5121, i32 %5125, i32 31
  %5127 = extractelement <64 x i32> %4966, i32 32
  %5128 = sext i32 %5127 to i64
  %5129 = getelementptr inbounds i32, i32* %4233, i64 %5128
  %5130 = load i32, i32* %5129, align 4, !tbaa !404
  %5131 = insertelement <64 x i32> %5126, i32 %5130, i32 32
  %5132 = extractelement <64 x i32> %4966, i32 33
  %5133 = sext i32 %5132 to i64
  %5134 = getelementptr inbounds i32, i32* %4233, i64 %5133
  %5135 = load i32, i32* %5134, align 4, !tbaa !404
  %5136 = insertelement <64 x i32> %5131, i32 %5135, i32 33
  %5137 = extractelement <64 x i32> %4966, i32 34
  %5138 = sext i32 %5137 to i64
  %5139 = getelementptr inbounds i32, i32* %4233, i64 %5138
  %5140 = load i32, i32* %5139, align 4, !tbaa !404
  %5141 = insertelement <64 x i32> %5136, i32 %5140, i32 34
  %5142 = extractelement <64 x i32> %4966, i32 35
  %5143 = sext i32 %5142 to i64
  %5144 = getelementptr inbounds i32, i32* %4233, i64 %5143
  %5145 = load i32, i32* %5144, align 4, !tbaa !404
  %5146 = insertelement <64 x i32> %5141, i32 %5145, i32 35
  %5147 = extractelement <64 x i32> %4966, i32 36
  %5148 = sext i32 %5147 to i64
  %5149 = getelementptr inbounds i32, i32* %4233, i64 %5148
  %5150 = load i32, i32* %5149, align 4, !tbaa !404
  %5151 = insertelement <64 x i32> %5146, i32 %5150, i32 36
  %5152 = extractelement <64 x i32> %4966, i32 37
  %5153 = sext i32 %5152 to i64
  %5154 = getelementptr inbounds i32, i32* %4233, i64 %5153
  %5155 = load i32, i32* %5154, align 4, !tbaa !404
  %5156 = insertelement <64 x i32> %5151, i32 %5155, i32 37
  %5157 = extractelement <64 x i32> %4966, i32 38
  %5158 = sext i32 %5157 to i64
  %5159 = getelementptr inbounds i32, i32* %4233, i64 %5158
  %5160 = load i32, i32* %5159, align 4, !tbaa !404
  %5161 = insertelement <64 x i32> %5156, i32 %5160, i32 38
  %5162 = extractelement <64 x i32> %4966, i32 39
  %5163 = sext i32 %5162 to i64
  %5164 = getelementptr inbounds i32, i32* %4233, i64 %5163
  %5165 = load i32, i32* %5164, align 4, !tbaa !404
  %5166 = insertelement <64 x i32> %5161, i32 %5165, i32 39
  %5167 = extractelement <64 x i32> %4966, i32 40
  %5168 = sext i32 %5167 to i64
  %5169 = getelementptr inbounds i32, i32* %4233, i64 %5168
  %5170 = load i32, i32* %5169, align 4, !tbaa !404
  %5171 = insertelement <64 x i32> %5166, i32 %5170, i32 40
  %5172 = extractelement <64 x i32> %4966, i32 41
  %5173 = sext i32 %5172 to i64
  %5174 = getelementptr inbounds i32, i32* %4233, i64 %5173
  %5175 = load i32, i32* %5174, align 4, !tbaa !404
  %5176 = insertelement <64 x i32> %5171, i32 %5175, i32 41
  %5177 = extractelement <64 x i32> %4966, i32 42
  %5178 = sext i32 %5177 to i64
  %5179 = getelementptr inbounds i32, i32* %4233, i64 %5178
  %5180 = load i32, i32* %5179, align 4, !tbaa !404
  %5181 = insertelement <64 x i32> %5176, i32 %5180, i32 42
  %5182 = extractelement <64 x i32> %4966, i32 43
  %5183 = sext i32 %5182 to i64
  %5184 = getelementptr inbounds i32, i32* %4233, i64 %5183
  %5185 = load i32, i32* %5184, align 4, !tbaa !404
  %5186 = insertelement <64 x i32> %5181, i32 %5185, i32 43
  %5187 = extractelement <64 x i32> %4966, i32 44
  %5188 = sext i32 %5187 to i64
  %5189 = getelementptr inbounds i32, i32* %4233, i64 %5188
  %5190 = load i32, i32* %5189, align 4, !tbaa !404
  %5191 = insertelement <64 x i32> %5186, i32 %5190, i32 44
  %5192 = extractelement <64 x i32> %4966, i32 45
  %5193 = sext i32 %5192 to i64
  %5194 = getelementptr inbounds i32, i32* %4233, i64 %5193
  %5195 = load i32, i32* %5194, align 4, !tbaa !404
  %5196 = insertelement <64 x i32> %5191, i32 %5195, i32 45
  %5197 = extractelement <64 x i32> %4966, i32 46
  %5198 = sext i32 %5197 to i64
  %5199 = getelementptr inbounds i32, i32* %4233, i64 %5198
  %5200 = load i32, i32* %5199, align 4, !tbaa !404
  %5201 = insertelement <64 x i32> %5196, i32 %5200, i32 46
  %5202 = extractelement <64 x i32> %4966, i32 47
  %5203 = sext i32 %5202 to i64
  %5204 = getelementptr inbounds i32, i32* %4233, i64 %5203
  %5205 = load i32, i32* %5204, align 4, !tbaa !404
  %5206 = insertelement <64 x i32> %5201, i32 %5205, i32 47
  %5207 = extractelement <64 x i32> %4966, i32 48
  %5208 = sext i32 %5207 to i64
  %5209 = getelementptr inbounds i32, i32* %4233, i64 %5208
  %5210 = load i32, i32* %5209, align 4, !tbaa !404
  %5211 = insertelement <64 x i32> %5206, i32 %5210, i32 48
  %5212 = extractelement <64 x i32> %4966, i32 49
  %5213 = sext i32 %5212 to i64
  %5214 = getelementptr inbounds i32, i32* %4233, i64 %5213
  %5215 = load i32, i32* %5214, align 4, !tbaa !404
  %5216 = insertelement <64 x i32> %5211, i32 %5215, i32 49
  %5217 = extractelement <64 x i32> %4966, i32 50
  %5218 = sext i32 %5217 to i64
  %5219 = getelementptr inbounds i32, i32* %4233, i64 %5218
  %5220 = load i32, i32* %5219, align 4, !tbaa !404
  %5221 = insertelement <64 x i32> %5216, i32 %5220, i32 50
  %5222 = extractelement <64 x i32> %4966, i32 51
  %5223 = sext i32 %5222 to i64
  %5224 = getelementptr inbounds i32, i32* %4233, i64 %5223
  %5225 = load i32, i32* %5224, align 4, !tbaa !404
  %5226 = insertelement <64 x i32> %5221, i32 %5225, i32 51
  %5227 = extractelement <64 x i32> %4966, i32 52
  %5228 = sext i32 %5227 to i64
  %5229 = getelementptr inbounds i32, i32* %4233, i64 %5228
  %5230 = load i32, i32* %5229, align 4, !tbaa !404
  %5231 = insertelement <64 x i32> %5226, i32 %5230, i32 52
  %5232 = extractelement <64 x i32> %4966, i32 53
  %5233 = sext i32 %5232 to i64
  %5234 = getelementptr inbounds i32, i32* %4233, i64 %5233
  %5235 = load i32, i32* %5234, align 4, !tbaa !404
  %5236 = insertelement <64 x i32> %5231, i32 %5235, i32 53
  %5237 = extractelement <64 x i32> %4966, i32 54
  %5238 = sext i32 %5237 to i64
  %5239 = getelementptr inbounds i32, i32* %4233, i64 %5238
  %5240 = load i32, i32* %5239, align 4, !tbaa !404
  %5241 = insertelement <64 x i32> %5236, i32 %5240, i32 54
  %5242 = extractelement <64 x i32> %4966, i32 55
  %5243 = sext i32 %5242 to i64
  %5244 = getelementptr inbounds i32, i32* %4233, i64 %5243
  %5245 = load i32, i32* %5244, align 4, !tbaa !404
  %5246 = insertelement <64 x i32> %5241, i32 %5245, i32 55
  %5247 = extractelement <64 x i32> %4966, i32 56
  %5248 = sext i32 %5247 to i64
  %5249 = getelementptr inbounds i32, i32* %4233, i64 %5248
  %5250 = load i32, i32* %5249, align 4, !tbaa !404
  %5251 = insertelement <64 x i32> %5246, i32 %5250, i32 56
  %5252 = extractelement <64 x i32> %4966, i32 57
  %5253 = sext i32 %5252 to i64
  %5254 = getelementptr inbounds i32, i32* %4233, i64 %5253
  %5255 = load i32, i32* %5254, align 4, !tbaa !404
  %5256 = insertelement <64 x i32> %5251, i32 %5255, i32 57
  %5257 = extractelement <64 x i32> %4966, i32 58
  %5258 = sext i32 %5257 to i64
  %5259 = getelementptr inbounds i32, i32* %4233, i64 %5258
  %5260 = load i32, i32* %5259, align 4, !tbaa !404
  %5261 = insertelement <64 x i32> %5256, i32 %5260, i32 58
  %5262 = extractelement <64 x i32> %4966, i32 59
  %5263 = sext i32 %5262 to i64
  %5264 = getelementptr inbounds i32, i32* %4233, i64 %5263
  %5265 = load i32, i32* %5264, align 4, !tbaa !404
  %5266 = insertelement <64 x i32> %5261, i32 %5265, i32 59
  %5267 = extractelement <64 x i32> %4966, i32 60
  %5268 = sext i32 %5267 to i64
  %5269 = getelementptr inbounds i32, i32* %4233, i64 %5268
  %5270 = load i32, i32* %5269, align 4, !tbaa !404
  %5271 = insertelement <64 x i32> %5266, i32 %5270, i32 60
  %5272 = extractelement <64 x i32> %4966, i32 61
  %5273 = sext i32 %5272 to i64
  %5274 = getelementptr inbounds i32, i32* %4233, i64 %5273
  %5275 = load i32, i32* %5274, align 4, !tbaa !404
  %5276 = insertelement <64 x i32> %5271, i32 %5275, i32 61
  %5277 = extractelement <64 x i32> %4966, i32 62
  %5278 = sext i32 %5277 to i64
  %5279 = getelementptr inbounds i32, i32* %4233, i64 %5278
  %5280 = load i32, i32* %5279, align 4, !tbaa !404
  %5281 = insertelement <64 x i32> %5276, i32 %5280, i32 62
  %5282 = extractelement <64 x i32> %4966, i32 63
  %5283 = sext i32 %5282 to i64
  %5284 = getelementptr inbounds i32, i32* %4233, i64 %5283
  %5285 = load i32, i32* %5284, align 4, !tbaa !404
  %5286 = insertelement <64 x i32> %5281, i32 %5285, i32 63
  %5287 = mul nsw <64 x i32> %5286, %4938
  %5288 = add nsw <64 x i32> %5287, %4614
  %5289 = extractelement <64 x i32> %5288, i32 0
  store i32 %5289, i32* %4269, align 4, !tbaa !399
  %5290 = extractelement <64 x i32> %5288, i32 1
  store i32 %5290, i32* %4272, align 4, !tbaa !399
  %5291 = extractelement <64 x i32> %5288, i32 2
  store i32 %5291, i32* %4275, align 4, !tbaa !399
  %5292 = extractelement <64 x i32> %5288, i32 3
  store i32 %5292, i32* %4278, align 4, !tbaa !399
  %5293 = extractelement <64 x i32> %5288, i32 4
  store i32 %5293, i32* %4281, align 4, !tbaa !399
  %5294 = extractelement <64 x i32> %5288, i32 5
  store i32 %5294, i32* %4284, align 4, !tbaa !399
  %5295 = extractelement <64 x i32> %5288, i32 6
  store i32 %5295, i32* %4287, align 4, !tbaa !399
  %5296 = extractelement <64 x i32> %5288, i32 7
  store i32 %5296, i32* %4290, align 4, !tbaa !399
  %5297 = extractelement <64 x i32> %5288, i32 8
  store i32 %5297, i32* %4293, align 4, !tbaa !399
  %5298 = extractelement <64 x i32> %5288, i32 9
  store i32 %5298, i32* %4296, align 4, !tbaa !399
  %5299 = extractelement <64 x i32> %5288, i32 10
  store i32 %5299, i32* %4299, align 4, !tbaa !399
  %5300 = extractelement <64 x i32> %5288, i32 11
  store i32 %5300, i32* %4302, align 4, !tbaa !399
  %5301 = extractelement <64 x i32> %5288, i32 12
  store i32 %5301, i32* %4305, align 4, !tbaa !399
  %5302 = extractelement <64 x i32> %5288, i32 13
  store i32 %5302, i32* %4308, align 4, !tbaa !399
  %5303 = extractelement <64 x i32> %5288, i32 14
  store i32 %5303, i32* %4311, align 4, !tbaa !399
  %5304 = extractelement <64 x i32> %5288, i32 15
  store i32 %5304, i32* %4314, align 4, !tbaa !399
  %5305 = extractelement <64 x i32> %5288, i32 16
  store i32 %5305, i32* %4317, align 4, !tbaa !399
  %5306 = extractelement <64 x i32> %5288, i32 17
  store i32 %5306, i32* %4320, align 4, !tbaa !399
  %5307 = extractelement <64 x i32> %5288, i32 18
  store i32 %5307, i32* %4323, align 4, !tbaa !399
  %5308 = extractelement <64 x i32> %5288, i32 19
  store i32 %5308, i32* %4326, align 4, !tbaa !399
  %5309 = extractelement <64 x i32> %5288, i32 20
  store i32 %5309, i32* %4329, align 4, !tbaa !399
  %5310 = extractelement <64 x i32> %5288, i32 21
  store i32 %5310, i32* %4332, align 4, !tbaa !399
  %5311 = extractelement <64 x i32> %5288, i32 22
  store i32 %5311, i32* %4335, align 4, !tbaa !399
  %5312 = extractelement <64 x i32> %5288, i32 23
  store i32 %5312, i32* %4338, align 4, !tbaa !399
  %5313 = extractelement <64 x i32> %5288, i32 24
  store i32 %5313, i32* %4341, align 4, !tbaa !399
  %5314 = extractelement <64 x i32> %5288, i32 25
  store i32 %5314, i32* %4344, align 4, !tbaa !399
  %5315 = extractelement <64 x i32> %5288, i32 26
  store i32 %5315, i32* %4347, align 4, !tbaa !399
  %5316 = extractelement <64 x i32> %5288, i32 27
  store i32 %5316, i32* %4350, align 4, !tbaa !399
  %5317 = extractelement <64 x i32> %5288, i32 28
  store i32 %5317, i32* %4353, align 4, !tbaa !399
  %5318 = extractelement <64 x i32> %5288, i32 29
  store i32 %5318, i32* %4356, align 4, !tbaa !399
  %5319 = extractelement <64 x i32> %5288, i32 30
  store i32 %5319, i32* %4359, align 4, !tbaa !399
  %5320 = extractelement <64 x i32> %5288, i32 31
  store i32 %5320, i32* %4362, align 4, !tbaa !399
  %5321 = extractelement <64 x i32> %5288, i32 32
  store i32 %5321, i32* %4365, align 4, !tbaa !399
  %5322 = extractelement <64 x i32> %5288, i32 33
  store i32 %5322, i32* %4368, align 4, !tbaa !399
  %5323 = extractelement <64 x i32> %5288, i32 34
  store i32 %5323, i32* %4371, align 4, !tbaa !399
  %5324 = extractelement <64 x i32> %5288, i32 35
  store i32 %5324, i32* %4374, align 4, !tbaa !399
  %5325 = extractelement <64 x i32> %5288, i32 36
  store i32 %5325, i32* %4377, align 4, !tbaa !399
  %5326 = extractelement <64 x i32> %5288, i32 37
  store i32 %5326, i32* %4380, align 4, !tbaa !399
  %5327 = extractelement <64 x i32> %5288, i32 38
  store i32 %5327, i32* %4383, align 4, !tbaa !399
  %5328 = extractelement <64 x i32> %5288, i32 39
  store i32 %5328, i32* %4386, align 4, !tbaa !399
  %5329 = extractelement <64 x i32> %5288, i32 40
  store i32 %5329, i32* %4389, align 4, !tbaa !399
  %5330 = extractelement <64 x i32> %5288, i32 41
  store i32 %5330, i32* %4392, align 4, !tbaa !399
  %5331 = extractelement <64 x i32> %5288, i32 42
  store i32 %5331, i32* %4395, align 4, !tbaa !399
  %5332 = extractelement <64 x i32> %5288, i32 43
  store i32 %5332, i32* %4398, align 4, !tbaa !399
  %5333 = extractelement <64 x i32> %5288, i32 44
  store i32 %5333, i32* %4401, align 4, !tbaa !399
  %5334 = extractelement <64 x i32> %5288, i32 45
  store i32 %5334, i32* %4404, align 4, !tbaa !399
  %5335 = extractelement <64 x i32> %5288, i32 46
  store i32 %5335, i32* %4407, align 4, !tbaa !399
  %5336 = extractelement <64 x i32> %5288, i32 47
  store i32 %5336, i32* %4410, align 4, !tbaa !399
  %5337 = extractelement <64 x i32> %5288, i32 48
  store i32 %5337, i32* %4413, align 4, !tbaa !399
  %5338 = extractelement <64 x i32> %5288, i32 49
  store i32 %5338, i32* %4416, align 4, !tbaa !399
  %5339 = extractelement <64 x i32> %5288, i32 50
  store i32 %5339, i32* %4419, align 4, !tbaa !399
  %5340 = extractelement <64 x i32> %5288, i32 51
  store i32 %5340, i32* %4422, align 4, !tbaa !399
  %5341 = extractelement <64 x i32> %5288, i32 52
  store i32 %5341, i32* %4425, align 4, !tbaa !399
  %5342 = extractelement <64 x i32> %5288, i32 53
  store i32 %5342, i32* %4428, align 4, !tbaa !399
  %5343 = extractelement <64 x i32> %5288, i32 54
  store i32 %5343, i32* %4431, align 4, !tbaa !399
  %5344 = extractelement <64 x i32> %5288, i32 55
  store i32 %5344, i32* %4434, align 4, !tbaa !399
  %5345 = extractelement <64 x i32> %5288, i32 56
  store i32 %5345, i32* %4437, align 4, !tbaa !399
  %5346 = extractelement <64 x i32> %5288, i32 57
  store i32 %5346, i32* %4440, align 4, !tbaa !399
  %5347 = extractelement <64 x i32> %5288, i32 58
  store i32 %5347, i32* %4443, align 4, !tbaa !399
  %5348 = extractelement <64 x i32> %5288, i32 59
  store i32 %5348, i32* %4446, align 4, !tbaa !399
  %5349 = extractelement <64 x i32> %5288, i32 60
  store i32 %5349, i32* %4449, align 4, !tbaa !399
  %5350 = extractelement <64 x i32> %5288, i32 61
  store i32 %5350, i32* %4452, align 4, !tbaa !399
  %5351 = extractelement <64 x i32> %5288, i32 62
  store i32 %5351, i32* %4455, align 4, !tbaa !399
  %5352 = extractelement <64 x i32> %5288, i32 63
  store i32 %5352, i32* %4458, align 4, !tbaa !399
  %5353 = add nuw nsw i32 %"Output.s1.r10$x245.us.us", 1
  %.not356.us.us = icmp eq i32 %5353, %3806
  br i1 %.not356.us.us, label %"end for Output.s1.r10$x244.loopexit.us.us", label %"for Output.s1.r10$x243.us.us"

"end for Output.s1.r10$x244.loopexit.us.us":      ; preds = %"for Output.s1.r10$x243.us.us"
  %5354 = add nuw nsw i32 %"Output.s1.r10$y240.us.us", 1
  %.not351.us.us = icmp eq i32 %5354, %3809
  br i1 %.not351.us.us, label %"end for Output.s1.r10$y239.loopexit.us", label %"for Output.s1.r10$y238.us.us"

"end for Output.s1.r10$z235":                     ; preds = %"end for Output.s1.r10$y239.loopexit.us", %"for Output.s1.x.x.x.x230"
  br i1 %4234, label %"for Output.s1.r10$z.rebased254.preheader", label %"end for Output.s1.r10$z.rebased255", !prof !398

"for Output.s1.r10$z.rebased254.preheader":       ; preds = %"end for Output.s1.r10$z235"
  %5355 = insertelement <64 x i32> undef, i32 %t238233, i32 0
  %5356 = shufflevector <64 x i32> %5355, <64 x i32> undef, <64 x i32> zeroinitializer
  %5357 = or <64 x i32> %5356, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  br i1 %brmerge935.demorgan, label %"for Output.s1.r10$z.rebased254.preheader.split.us.split.us", label %"end for Output.s1.r10$z.rebased255", !prof !406

"for Output.s1.r10$z.rebased254.preheader.split.us.split.us": ; preds = %"for Output.s1.r10$z.rebased254.preheader"
  %5358 = sdiv <64 x i32> %5357, %4193
  %t183266.us.us.us = and <64 x i32> %5358, %4194
  %5359 = srem <64 x i32> %5357, %4195
  %t184267.us.us.us = and <64 x i32> %5359, %4194
  %5360 = shufflevector <64 x i32> %t184267.us.us.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5361 = shufflevector <64 x i32> %t184267.us.us.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5362 = shufflevector <64 x i32> %t184267.us.us.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %5363 = shufflevector <64 x i32> %t184267.us.us.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %.lobit345.us.us.us = ashr <16 x i32> %5360, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit346.us.us.us = ashr <16 x i32> %5361, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit347.us.us.us = ashr <16 x i32> %5362, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit348.us.us.us = ashr <16 x i32> %5363, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %5364 = shufflevector <16 x i32> %.lobit345.us.us.us, <16 x i32> %.lobit346.us.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5365 = shufflevector <16 x i32> %.lobit347.us.us.us, <16 x i32> %.lobit348.us.us.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %t367.us.us.us = shufflevector <32 x i32> %5364, <32 x i32> %5365, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %5366 = sub nsw <64 x i32> %t184267.us.us.us, %t367.us.us.us
  %5367 = sdiv <64 x i32> %5366, %4198
  %5368 = and <64 x i32> %t367.us.us.us, %4200
  %5369 = add nsw <64 x i32> %5368, %5367
  %t185268.us.us.us = and <64 x i32> %5369, %4201
  %5370 = srem <64 x i32> %5366, %4202
  %5371 = and <64 x i32> %t367.us.us.us, %4206
  %5372 = add nsw <64 x i32> %5371, %5370
  %t186269.us.us.us = and <64 x i32> %5372, %4201
  %5373 = add nsw <64 x i32> %t185268.us.us.us, %4208
  %5374 = mul nsw <64 x i32> %5373, %4210
  %5375 = add nsw <64 x i32> %t183266.us.us.us, %4212
  %5376 = mul nsw <64 x i32> %5375, %4214
  %5377 = add nsw <64 x i32> %5376, %4216
  %5378 = add <64 x i32> %5377, %t186269.us.us.us
  %t187270.us.us.us = add <64 x i32> %5378, %5374
  %5379 = extractelement <64 x i32> %t187270.us.us.us, i32 0
  %5380 = sext i32 %5379 to i64
  %5381 = getelementptr inbounds i32, i32* %4217, i64 %5380
  %5382 = extractelement <64 x i32> %t187270.us.us.us, i32 1
  %5383 = sext i32 %5382 to i64
  %5384 = getelementptr inbounds i32, i32* %4217, i64 %5383
  %5385 = extractelement <64 x i32> %t187270.us.us.us, i32 2
  %5386 = sext i32 %5385 to i64
  %5387 = getelementptr inbounds i32, i32* %4217, i64 %5386
  %5388 = extractelement <64 x i32> %t187270.us.us.us, i32 3
  %5389 = sext i32 %5388 to i64
  %5390 = getelementptr inbounds i32, i32* %4217, i64 %5389
  %5391 = extractelement <64 x i32> %t187270.us.us.us, i32 4
  %5392 = sext i32 %5391 to i64
  %5393 = getelementptr inbounds i32, i32* %4217, i64 %5392
  %5394 = extractelement <64 x i32> %t187270.us.us.us, i32 5
  %5395 = sext i32 %5394 to i64
  %5396 = getelementptr inbounds i32, i32* %4217, i64 %5395
  %5397 = extractelement <64 x i32> %t187270.us.us.us, i32 6
  %5398 = sext i32 %5397 to i64
  %5399 = getelementptr inbounds i32, i32* %4217, i64 %5398
  %5400 = extractelement <64 x i32> %t187270.us.us.us, i32 7
  %5401 = sext i32 %5400 to i64
  %5402 = getelementptr inbounds i32, i32* %4217, i64 %5401
  %5403 = extractelement <64 x i32> %t187270.us.us.us, i32 8
  %5404 = sext i32 %5403 to i64
  %5405 = getelementptr inbounds i32, i32* %4217, i64 %5404
  %5406 = extractelement <64 x i32> %t187270.us.us.us, i32 9
  %5407 = sext i32 %5406 to i64
  %5408 = getelementptr inbounds i32, i32* %4217, i64 %5407
  %5409 = extractelement <64 x i32> %t187270.us.us.us, i32 10
  %5410 = sext i32 %5409 to i64
  %5411 = getelementptr inbounds i32, i32* %4217, i64 %5410
  %5412 = extractelement <64 x i32> %t187270.us.us.us, i32 11
  %5413 = sext i32 %5412 to i64
  %5414 = getelementptr inbounds i32, i32* %4217, i64 %5413
  %5415 = extractelement <64 x i32> %t187270.us.us.us, i32 12
  %5416 = sext i32 %5415 to i64
  %5417 = getelementptr inbounds i32, i32* %4217, i64 %5416
  %5418 = extractelement <64 x i32> %t187270.us.us.us, i32 13
  %5419 = sext i32 %5418 to i64
  %5420 = getelementptr inbounds i32, i32* %4217, i64 %5419
  %5421 = extractelement <64 x i32> %t187270.us.us.us, i32 14
  %5422 = sext i32 %5421 to i64
  %5423 = getelementptr inbounds i32, i32* %4217, i64 %5422
  %5424 = extractelement <64 x i32> %t187270.us.us.us, i32 15
  %5425 = sext i32 %5424 to i64
  %5426 = getelementptr inbounds i32, i32* %4217, i64 %5425
  %5427 = extractelement <64 x i32> %t187270.us.us.us, i32 16
  %5428 = sext i32 %5427 to i64
  %5429 = getelementptr inbounds i32, i32* %4217, i64 %5428
  %5430 = extractelement <64 x i32> %t187270.us.us.us, i32 17
  %5431 = sext i32 %5430 to i64
  %5432 = getelementptr inbounds i32, i32* %4217, i64 %5431
  %5433 = extractelement <64 x i32> %t187270.us.us.us, i32 18
  %5434 = sext i32 %5433 to i64
  %5435 = getelementptr inbounds i32, i32* %4217, i64 %5434
  %5436 = extractelement <64 x i32> %t187270.us.us.us, i32 19
  %5437 = sext i32 %5436 to i64
  %5438 = getelementptr inbounds i32, i32* %4217, i64 %5437
  %5439 = extractelement <64 x i32> %t187270.us.us.us, i32 20
  %5440 = sext i32 %5439 to i64
  %5441 = getelementptr inbounds i32, i32* %4217, i64 %5440
  %5442 = extractelement <64 x i32> %t187270.us.us.us, i32 21
  %5443 = sext i32 %5442 to i64
  %5444 = getelementptr inbounds i32, i32* %4217, i64 %5443
  %5445 = extractelement <64 x i32> %t187270.us.us.us, i32 22
  %5446 = sext i32 %5445 to i64
  %5447 = getelementptr inbounds i32, i32* %4217, i64 %5446
  %5448 = extractelement <64 x i32> %t187270.us.us.us, i32 23
  %5449 = sext i32 %5448 to i64
  %5450 = getelementptr inbounds i32, i32* %4217, i64 %5449
  %5451 = extractelement <64 x i32> %t187270.us.us.us, i32 24
  %5452 = sext i32 %5451 to i64
  %5453 = getelementptr inbounds i32, i32* %4217, i64 %5452
  %5454 = extractelement <64 x i32> %t187270.us.us.us, i32 25
  %5455 = sext i32 %5454 to i64
  %5456 = getelementptr inbounds i32, i32* %4217, i64 %5455
  %5457 = extractelement <64 x i32> %t187270.us.us.us, i32 26
  %5458 = sext i32 %5457 to i64
  %5459 = getelementptr inbounds i32, i32* %4217, i64 %5458
  %5460 = extractelement <64 x i32> %t187270.us.us.us, i32 27
  %5461 = sext i32 %5460 to i64
  %5462 = getelementptr inbounds i32, i32* %4217, i64 %5461
  %5463 = extractelement <64 x i32> %t187270.us.us.us, i32 28
  %5464 = sext i32 %5463 to i64
  %5465 = getelementptr inbounds i32, i32* %4217, i64 %5464
  %5466 = extractelement <64 x i32> %t187270.us.us.us, i32 29
  %5467 = sext i32 %5466 to i64
  %5468 = getelementptr inbounds i32, i32* %4217, i64 %5467
  %5469 = extractelement <64 x i32> %t187270.us.us.us, i32 30
  %5470 = sext i32 %5469 to i64
  %5471 = getelementptr inbounds i32, i32* %4217, i64 %5470
  %5472 = extractelement <64 x i32> %t187270.us.us.us, i32 31
  %5473 = sext i32 %5472 to i64
  %5474 = getelementptr inbounds i32, i32* %4217, i64 %5473
  %5475 = extractelement <64 x i32> %t187270.us.us.us, i32 32
  %5476 = sext i32 %5475 to i64
  %5477 = getelementptr inbounds i32, i32* %4217, i64 %5476
  %5478 = extractelement <64 x i32> %t187270.us.us.us, i32 33
  %5479 = sext i32 %5478 to i64
  %5480 = getelementptr inbounds i32, i32* %4217, i64 %5479
  %5481 = extractelement <64 x i32> %t187270.us.us.us, i32 34
  %5482 = sext i32 %5481 to i64
  %5483 = getelementptr inbounds i32, i32* %4217, i64 %5482
  %5484 = extractelement <64 x i32> %t187270.us.us.us, i32 35
  %5485 = sext i32 %5484 to i64
  %5486 = getelementptr inbounds i32, i32* %4217, i64 %5485
  %5487 = extractelement <64 x i32> %t187270.us.us.us, i32 36
  %5488 = sext i32 %5487 to i64
  %5489 = getelementptr inbounds i32, i32* %4217, i64 %5488
  %5490 = extractelement <64 x i32> %t187270.us.us.us, i32 37
  %5491 = sext i32 %5490 to i64
  %5492 = getelementptr inbounds i32, i32* %4217, i64 %5491
  %5493 = extractelement <64 x i32> %t187270.us.us.us, i32 38
  %5494 = sext i32 %5493 to i64
  %5495 = getelementptr inbounds i32, i32* %4217, i64 %5494
  %5496 = extractelement <64 x i32> %t187270.us.us.us, i32 39
  %5497 = sext i32 %5496 to i64
  %5498 = getelementptr inbounds i32, i32* %4217, i64 %5497
  %5499 = extractelement <64 x i32> %t187270.us.us.us, i32 40
  %5500 = sext i32 %5499 to i64
  %5501 = getelementptr inbounds i32, i32* %4217, i64 %5500
  %5502 = extractelement <64 x i32> %t187270.us.us.us, i32 41
  %5503 = sext i32 %5502 to i64
  %5504 = getelementptr inbounds i32, i32* %4217, i64 %5503
  %5505 = extractelement <64 x i32> %t187270.us.us.us, i32 42
  %5506 = sext i32 %5505 to i64
  %5507 = getelementptr inbounds i32, i32* %4217, i64 %5506
  %5508 = extractelement <64 x i32> %t187270.us.us.us, i32 43
  %5509 = sext i32 %5508 to i64
  %5510 = getelementptr inbounds i32, i32* %4217, i64 %5509
  %5511 = extractelement <64 x i32> %t187270.us.us.us, i32 44
  %5512 = sext i32 %5511 to i64
  %5513 = getelementptr inbounds i32, i32* %4217, i64 %5512
  %5514 = extractelement <64 x i32> %t187270.us.us.us, i32 45
  %5515 = sext i32 %5514 to i64
  %5516 = getelementptr inbounds i32, i32* %4217, i64 %5515
  %5517 = extractelement <64 x i32> %t187270.us.us.us, i32 46
  %5518 = sext i32 %5517 to i64
  %5519 = getelementptr inbounds i32, i32* %4217, i64 %5518
  %5520 = extractelement <64 x i32> %t187270.us.us.us, i32 47
  %5521 = sext i32 %5520 to i64
  %5522 = getelementptr inbounds i32, i32* %4217, i64 %5521
  %5523 = extractelement <64 x i32> %t187270.us.us.us, i32 48
  %5524 = sext i32 %5523 to i64
  %5525 = getelementptr inbounds i32, i32* %4217, i64 %5524
  %5526 = extractelement <64 x i32> %t187270.us.us.us, i32 49
  %5527 = sext i32 %5526 to i64
  %5528 = getelementptr inbounds i32, i32* %4217, i64 %5527
  %5529 = extractelement <64 x i32> %t187270.us.us.us, i32 50
  %5530 = sext i32 %5529 to i64
  %5531 = getelementptr inbounds i32, i32* %4217, i64 %5530
  %5532 = extractelement <64 x i32> %t187270.us.us.us, i32 51
  %5533 = sext i32 %5532 to i64
  %5534 = getelementptr inbounds i32, i32* %4217, i64 %5533
  %5535 = extractelement <64 x i32> %t187270.us.us.us, i32 52
  %5536 = sext i32 %5535 to i64
  %5537 = getelementptr inbounds i32, i32* %4217, i64 %5536
  %5538 = extractelement <64 x i32> %t187270.us.us.us, i32 53
  %5539 = sext i32 %5538 to i64
  %5540 = getelementptr inbounds i32, i32* %4217, i64 %5539
  %5541 = extractelement <64 x i32> %t187270.us.us.us, i32 54
  %5542 = sext i32 %5541 to i64
  %5543 = getelementptr inbounds i32, i32* %4217, i64 %5542
  %5544 = extractelement <64 x i32> %t187270.us.us.us, i32 55
  %5545 = sext i32 %5544 to i64
  %5546 = getelementptr inbounds i32, i32* %4217, i64 %5545
  %5547 = extractelement <64 x i32> %t187270.us.us.us, i32 56
  %5548 = sext i32 %5547 to i64
  %5549 = getelementptr inbounds i32, i32* %4217, i64 %5548
  %5550 = extractelement <64 x i32> %t187270.us.us.us, i32 57
  %5551 = sext i32 %5550 to i64
  %5552 = getelementptr inbounds i32, i32* %4217, i64 %5551
  %5553 = extractelement <64 x i32> %t187270.us.us.us, i32 58
  %5554 = sext i32 %5553 to i64
  %5555 = getelementptr inbounds i32, i32* %4217, i64 %5554
  %5556 = extractelement <64 x i32> %t187270.us.us.us, i32 59
  %5557 = sext i32 %5556 to i64
  %5558 = getelementptr inbounds i32, i32* %4217, i64 %5557
  %5559 = extractelement <64 x i32> %t187270.us.us.us, i32 60
  %5560 = sext i32 %5559 to i64
  %5561 = getelementptr inbounds i32, i32* %4217, i64 %5560
  %5562 = extractelement <64 x i32> %t187270.us.us.us, i32 61
  %5563 = sext i32 %5562 to i64
  %5564 = getelementptr inbounds i32, i32* %4217, i64 %5563
  %5565 = extractelement <64 x i32> %t187270.us.us.us, i32 62
  %5566 = sext i32 %5565 to i64
  %5567 = getelementptr inbounds i32, i32* %4217, i64 %5566
  %5568 = extractelement <64 x i32> %t187270.us.us.us, i32 63
  %5569 = sext i32 %5568 to i64
  %5570 = getelementptr inbounds i32, i32* %4217, i64 %5569
  %5571 = add nsw <64 x i32> %t183266.us.us.us, %4219
  %5572 = mul nsw <64 x i32> %5571, %4221
  br label %"for Output.s1.r10$z.rebased254.us.us"

"for Output.s1.r10$z.rebased254.us.us":           ; preds = %"end for Output.s1.r10$y259.loopexit.split.us.us.us", %"for Output.s1.r10$z.rebased254.preheader.split.us.split.us"
  %"Output.s1.r10$z.rebased256.us.us" = phi i32 [ %6471, %"end for Output.s1.r10$y259.loopexit.split.us.us.us" ], [ 0, %"for Output.s1.r10$z.rebased254.preheader.split.us.split.us" ]
  %5573 = add nsw i32 %t244252, %"Output.s1.r10$z.rebased256.us.us"
  %5574 = mul nsw i32 %5573, %3829
  %t245257.us.us = sub nsw i32 %5574, %t231226
  %5575 = insertelement <64 x i32> undef, i32 %t245257.us.us, i32 0
  %5576 = shufflevector <64 x i32> %5575, <64 x i32> undef, <64 x i32> zeroinitializer
  br label %"for Output.s1.r10$y258.us.us.us"

"for Output.s1.r10$y258.us.us.us":                ; preds = %"end for Output.s1.r10$x264.loopexit.us.us.us", %"for Output.s1.r10$z.rebased254.us.us"
  %"Output.s1.r10$y260.us.us.us" = phi i32 [ %6470, %"end for Output.s1.r10$x264.loopexit.us.us.us" ], [ 0, %"for Output.s1.r10$z.rebased254.us.us" ]
  %t246261.us.us.us = mul nsw i32 %"Output.s1.r10$y260.us.us.us", %3810
  %t247262.us.us.us = sub nsw i32 %3886, %"Output.s1.r10$y260.us.us.us"
  %5577 = insertelement <64 x i32> undef, i32 %t247262.us.us.us, i32 0
  %5578 = shufflevector <64 x i32> %5577, <64 x i32> undef, <64 x i32> zeroinitializer
  %a119.us.us.us = add nsw <64 x i32> %t185268.us.us.us, %5578
  %5579 = shufflevector <64 x i32> %a119.us.us.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5580 = icmp sgt <16 x i32> %4228, %5579
  %5581 = shufflevector <64 x i32> %a119.us.us.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5582 = icmp sgt <16 x i32> %4228, %5581
  %5583 = shufflevector <64 x i32> %a119.us.us.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %5584 = icmp sgt <16 x i32> %4228, %5583
  %5585 = shufflevector <64 x i32> %a119.us.us.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %5586 = icmp sgt <16 x i32> %4228, %5585
  %5587 = select <16 x i1> %5580, <16 x i32> %5579, <16 x i32> %4228
  %5588 = select <16 x i1> %5582, <16 x i32> %5581, <16 x i32> %4228
  %5589 = select <16 x i1> %5584, <16 x i32> %5583, <16 x i32> %4228
  %5590 = select <16 x i1> %5586, <16 x i32> %5585, <16 x i32> %4228
  %5591 = icmp sgt <16 x i32> %5587, %4230
  %5592 = icmp sgt <16 x i32> %5588, %4230
  %5593 = icmp sgt <16 x i32> %5589, %4230
  %5594 = icmp sgt <16 x i32> %5590, %4230
  %5595 = select <16 x i1> %5591, <16 x i32> %5587, <16 x i32> %4230
  %5596 = select <16 x i1> %5592, <16 x i32> %5588, <16 x i32> %4230
  %5597 = select <16 x i1> %5593, <16 x i32> %5589, <16 x i32> %4230
  %5598 = select <16 x i1> %5594, <16 x i32> %5590, <16 x i32> %4230
  %5599 = shufflevector <16 x i32> %5595, <16 x i32> %5596, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5600 = shufflevector <16 x i32> %5597, <16 x i32> %5598, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5601 = shufflevector <32 x i32> %5599, <32 x i32> %5600, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %5602 = mul nsw <64 x i32> %5601, %4232
  br label %"for Output.s1.r10$x263.us.us.us"

"for Output.s1.r10$x263.us.us.us":                ; preds = %"for Output.s1.r10$x263.us.us.us", %"for Output.s1.r10$y258.us.us.us"
  %"Output.s1.r10$x265.us.us.us" = phi i32 [ %6469, %"for Output.s1.r10$x263.us.us.us" ], [ 0, %"for Output.s1.r10$y258.us.us.us" ]
  %5603 = load i32, i32* %5381, align 4, !tbaa !399
  %5604 = insertelement <64 x i32> undef, i32 %5603, i32 0
  %5605 = load i32, i32* %5384, align 4, !tbaa !399
  %5606 = insertelement <64 x i32> %5604, i32 %5605, i32 1
  %5607 = load i32, i32* %5387, align 4, !tbaa !399
  %5608 = insertelement <64 x i32> %5606, i32 %5607, i32 2
  %5609 = load i32, i32* %5390, align 4, !tbaa !399
  %5610 = insertelement <64 x i32> %5608, i32 %5609, i32 3
  %5611 = load i32, i32* %5393, align 4, !tbaa !399
  %5612 = insertelement <64 x i32> %5610, i32 %5611, i32 4
  %5613 = load i32, i32* %5396, align 4, !tbaa !399
  %5614 = insertelement <64 x i32> %5612, i32 %5613, i32 5
  %5615 = load i32, i32* %5399, align 4, !tbaa !399
  %5616 = insertelement <64 x i32> %5614, i32 %5615, i32 6
  %5617 = load i32, i32* %5402, align 4, !tbaa !399
  %5618 = insertelement <64 x i32> %5616, i32 %5617, i32 7
  %5619 = load i32, i32* %5405, align 4, !tbaa !399
  %5620 = insertelement <64 x i32> %5618, i32 %5619, i32 8
  %5621 = load i32, i32* %5408, align 4, !tbaa !399
  %5622 = insertelement <64 x i32> %5620, i32 %5621, i32 9
  %5623 = load i32, i32* %5411, align 4, !tbaa !399
  %5624 = insertelement <64 x i32> %5622, i32 %5623, i32 10
  %5625 = load i32, i32* %5414, align 4, !tbaa !399
  %5626 = insertelement <64 x i32> %5624, i32 %5625, i32 11
  %5627 = load i32, i32* %5417, align 4, !tbaa !399
  %5628 = insertelement <64 x i32> %5626, i32 %5627, i32 12
  %5629 = load i32, i32* %5420, align 4, !tbaa !399
  %5630 = insertelement <64 x i32> %5628, i32 %5629, i32 13
  %5631 = load i32, i32* %5423, align 4, !tbaa !399
  %5632 = insertelement <64 x i32> %5630, i32 %5631, i32 14
  %5633 = load i32, i32* %5426, align 4, !tbaa !399
  %5634 = insertelement <64 x i32> %5632, i32 %5633, i32 15
  %5635 = load i32, i32* %5429, align 4, !tbaa !399
  %5636 = insertelement <64 x i32> %5634, i32 %5635, i32 16
  %5637 = load i32, i32* %5432, align 4, !tbaa !399
  %5638 = insertelement <64 x i32> %5636, i32 %5637, i32 17
  %5639 = load i32, i32* %5435, align 4, !tbaa !399
  %5640 = insertelement <64 x i32> %5638, i32 %5639, i32 18
  %5641 = load i32, i32* %5438, align 4, !tbaa !399
  %5642 = insertelement <64 x i32> %5640, i32 %5641, i32 19
  %5643 = load i32, i32* %5441, align 4, !tbaa !399
  %5644 = insertelement <64 x i32> %5642, i32 %5643, i32 20
  %5645 = load i32, i32* %5444, align 4, !tbaa !399
  %5646 = insertelement <64 x i32> %5644, i32 %5645, i32 21
  %5647 = load i32, i32* %5447, align 4, !tbaa !399
  %5648 = insertelement <64 x i32> %5646, i32 %5647, i32 22
  %5649 = load i32, i32* %5450, align 4, !tbaa !399
  %5650 = insertelement <64 x i32> %5648, i32 %5649, i32 23
  %5651 = load i32, i32* %5453, align 4, !tbaa !399
  %5652 = insertelement <64 x i32> %5650, i32 %5651, i32 24
  %5653 = load i32, i32* %5456, align 4, !tbaa !399
  %5654 = insertelement <64 x i32> %5652, i32 %5653, i32 25
  %5655 = load i32, i32* %5459, align 4, !tbaa !399
  %5656 = insertelement <64 x i32> %5654, i32 %5655, i32 26
  %5657 = load i32, i32* %5462, align 4, !tbaa !399
  %5658 = insertelement <64 x i32> %5656, i32 %5657, i32 27
  %5659 = load i32, i32* %5465, align 4, !tbaa !399
  %5660 = insertelement <64 x i32> %5658, i32 %5659, i32 28
  %5661 = load i32, i32* %5468, align 4, !tbaa !399
  %5662 = insertelement <64 x i32> %5660, i32 %5661, i32 29
  %5663 = load i32, i32* %5471, align 4, !tbaa !399
  %5664 = insertelement <64 x i32> %5662, i32 %5663, i32 30
  %5665 = load i32, i32* %5474, align 4, !tbaa !399
  %5666 = insertelement <64 x i32> %5664, i32 %5665, i32 31
  %5667 = load i32, i32* %5477, align 4, !tbaa !399
  %5668 = insertelement <64 x i32> %5666, i32 %5667, i32 32
  %5669 = load i32, i32* %5480, align 4, !tbaa !399
  %5670 = insertelement <64 x i32> %5668, i32 %5669, i32 33
  %5671 = load i32, i32* %5483, align 4, !tbaa !399
  %5672 = insertelement <64 x i32> %5670, i32 %5671, i32 34
  %5673 = load i32, i32* %5486, align 4, !tbaa !399
  %5674 = insertelement <64 x i32> %5672, i32 %5673, i32 35
  %5675 = load i32, i32* %5489, align 4, !tbaa !399
  %5676 = insertelement <64 x i32> %5674, i32 %5675, i32 36
  %5677 = load i32, i32* %5492, align 4, !tbaa !399
  %5678 = insertelement <64 x i32> %5676, i32 %5677, i32 37
  %5679 = load i32, i32* %5495, align 4, !tbaa !399
  %5680 = insertelement <64 x i32> %5678, i32 %5679, i32 38
  %5681 = load i32, i32* %5498, align 4, !tbaa !399
  %5682 = insertelement <64 x i32> %5680, i32 %5681, i32 39
  %5683 = load i32, i32* %5501, align 4, !tbaa !399
  %5684 = insertelement <64 x i32> %5682, i32 %5683, i32 40
  %5685 = load i32, i32* %5504, align 4, !tbaa !399
  %5686 = insertelement <64 x i32> %5684, i32 %5685, i32 41
  %5687 = load i32, i32* %5507, align 4, !tbaa !399
  %5688 = insertelement <64 x i32> %5686, i32 %5687, i32 42
  %5689 = load i32, i32* %5510, align 4, !tbaa !399
  %5690 = insertelement <64 x i32> %5688, i32 %5689, i32 43
  %5691 = load i32, i32* %5513, align 4, !tbaa !399
  %5692 = insertelement <64 x i32> %5690, i32 %5691, i32 44
  %5693 = load i32, i32* %5516, align 4, !tbaa !399
  %5694 = insertelement <64 x i32> %5692, i32 %5693, i32 45
  %5695 = load i32, i32* %5519, align 4, !tbaa !399
  %5696 = insertelement <64 x i32> %5694, i32 %5695, i32 46
  %5697 = load i32, i32* %5522, align 4, !tbaa !399
  %5698 = insertelement <64 x i32> %5696, i32 %5697, i32 47
  %5699 = load i32, i32* %5525, align 4, !tbaa !399
  %5700 = insertelement <64 x i32> %5698, i32 %5699, i32 48
  %5701 = load i32, i32* %5528, align 4, !tbaa !399
  %5702 = insertelement <64 x i32> %5700, i32 %5701, i32 49
  %5703 = load i32, i32* %5531, align 4, !tbaa !399
  %5704 = insertelement <64 x i32> %5702, i32 %5703, i32 50
  %5705 = load i32, i32* %5534, align 4, !tbaa !399
  %5706 = insertelement <64 x i32> %5704, i32 %5705, i32 51
  %5707 = load i32, i32* %5537, align 4, !tbaa !399
  %5708 = insertelement <64 x i32> %5706, i32 %5707, i32 52
  %5709 = load i32, i32* %5540, align 4, !tbaa !399
  %5710 = insertelement <64 x i32> %5708, i32 %5709, i32 53
  %5711 = load i32, i32* %5543, align 4, !tbaa !399
  %5712 = insertelement <64 x i32> %5710, i32 %5711, i32 54
  %5713 = load i32, i32* %5546, align 4, !tbaa !399
  %5714 = insertelement <64 x i32> %5712, i32 %5713, i32 55
  %5715 = load i32, i32* %5549, align 4, !tbaa !399
  %5716 = insertelement <64 x i32> %5714, i32 %5715, i32 56
  %5717 = load i32, i32* %5552, align 4, !tbaa !399
  %5718 = insertelement <64 x i32> %5716, i32 %5717, i32 57
  %5719 = load i32, i32* %5555, align 4, !tbaa !399
  %5720 = insertelement <64 x i32> %5718, i32 %5719, i32 58
  %5721 = load i32, i32* %5558, align 4, !tbaa !399
  %5722 = insertelement <64 x i32> %5720, i32 %5721, i32 59
  %5723 = load i32, i32* %5561, align 4, !tbaa !399
  %5724 = insertelement <64 x i32> %5722, i32 %5723, i32 60
  %5725 = load i32, i32* %5564, align 4, !tbaa !399
  %5726 = insertelement <64 x i32> %5724, i32 %5725, i32 61
  %5727 = load i32, i32* %5567, align 4, !tbaa !399
  %5728 = insertelement <64 x i32> %5726, i32 %5727, i32 62
  %5729 = load i32, i32* %5570, align 4, !tbaa !399
  %5730 = insertelement <64 x i32> %5728, i32 %5729, i32 63
  %5731 = add nsw i32 %"Output.s1.r10$x265.us.us.us", %t246261.us.us.us
  %5732 = insertelement <64 x i32> undef, i32 %5731, i32 0
  %5733 = shufflevector <64 x i32> %5732, <64 x i32> undef, <64 x i32> zeroinitializer
  %5734 = add nsw <64 x i32> %5572, %5733
  %5735 = extractelement <64 x i32> %5734, i32 0
  %5736 = sext i32 %5735 to i64
  %5737 = getelementptr inbounds i32, i32* %4222, i64 %5736
  %5738 = load i32, i32* %5737, align 4, !tbaa !402
  %5739 = insertelement <64 x i32> undef, i32 %5738, i32 0
  %5740 = extractelement <64 x i32> %5734, i32 1
  %5741 = sext i32 %5740 to i64
  %5742 = getelementptr inbounds i32, i32* %4222, i64 %5741
  %5743 = load i32, i32* %5742, align 4, !tbaa !402
  %5744 = insertelement <64 x i32> %5739, i32 %5743, i32 1
  %5745 = extractelement <64 x i32> %5734, i32 2
  %5746 = sext i32 %5745 to i64
  %5747 = getelementptr inbounds i32, i32* %4222, i64 %5746
  %5748 = load i32, i32* %5747, align 4, !tbaa !402
  %5749 = insertelement <64 x i32> %5744, i32 %5748, i32 2
  %5750 = extractelement <64 x i32> %5734, i32 3
  %5751 = sext i32 %5750 to i64
  %5752 = getelementptr inbounds i32, i32* %4222, i64 %5751
  %5753 = load i32, i32* %5752, align 4, !tbaa !402
  %5754 = insertelement <64 x i32> %5749, i32 %5753, i32 3
  %5755 = extractelement <64 x i32> %5734, i32 4
  %5756 = sext i32 %5755 to i64
  %5757 = getelementptr inbounds i32, i32* %4222, i64 %5756
  %5758 = load i32, i32* %5757, align 4, !tbaa !402
  %5759 = insertelement <64 x i32> %5754, i32 %5758, i32 4
  %5760 = extractelement <64 x i32> %5734, i32 5
  %5761 = sext i32 %5760 to i64
  %5762 = getelementptr inbounds i32, i32* %4222, i64 %5761
  %5763 = load i32, i32* %5762, align 4, !tbaa !402
  %5764 = insertelement <64 x i32> %5759, i32 %5763, i32 5
  %5765 = extractelement <64 x i32> %5734, i32 6
  %5766 = sext i32 %5765 to i64
  %5767 = getelementptr inbounds i32, i32* %4222, i64 %5766
  %5768 = load i32, i32* %5767, align 4, !tbaa !402
  %5769 = insertelement <64 x i32> %5764, i32 %5768, i32 6
  %5770 = extractelement <64 x i32> %5734, i32 7
  %5771 = sext i32 %5770 to i64
  %5772 = getelementptr inbounds i32, i32* %4222, i64 %5771
  %5773 = load i32, i32* %5772, align 4, !tbaa !402
  %5774 = insertelement <64 x i32> %5769, i32 %5773, i32 7
  %5775 = extractelement <64 x i32> %5734, i32 8
  %5776 = sext i32 %5775 to i64
  %5777 = getelementptr inbounds i32, i32* %4222, i64 %5776
  %5778 = load i32, i32* %5777, align 4, !tbaa !402
  %5779 = insertelement <64 x i32> %5774, i32 %5778, i32 8
  %5780 = extractelement <64 x i32> %5734, i32 9
  %5781 = sext i32 %5780 to i64
  %5782 = getelementptr inbounds i32, i32* %4222, i64 %5781
  %5783 = load i32, i32* %5782, align 4, !tbaa !402
  %5784 = insertelement <64 x i32> %5779, i32 %5783, i32 9
  %5785 = extractelement <64 x i32> %5734, i32 10
  %5786 = sext i32 %5785 to i64
  %5787 = getelementptr inbounds i32, i32* %4222, i64 %5786
  %5788 = load i32, i32* %5787, align 4, !tbaa !402
  %5789 = insertelement <64 x i32> %5784, i32 %5788, i32 10
  %5790 = extractelement <64 x i32> %5734, i32 11
  %5791 = sext i32 %5790 to i64
  %5792 = getelementptr inbounds i32, i32* %4222, i64 %5791
  %5793 = load i32, i32* %5792, align 4, !tbaa !402
  %5794 = insertelement <64 x i32> %5789, i32 %5793, i32 11
  %5795 = extractelement <64 x i32> %5734, i32 12
  %5796 = sext i32 %5795 to i64
  %5797 = getelementptr inbounds i32, i32* %4222, i64 %5796
  %5798 = load i32, i32* %5797, align 4, !tbaa !402
  %5799 = insertelement <64 x i32> %5794, i32 %5798, i32 12
  %5800 = extractelement <64 x i32> %5734, i32 13
  %5801 = sext i32 %5800 to i64
  %5802 = getelementptr inbounds i32, i32* %4222, i64 %5801
  %5803 = load i32, i32* %5802, align 4, !tbaa !402
  %5804 = insertelement <64 x i32> %5799, i32 %5803, i32 13
  %5805 = extractelement <64 x i32> %5734, i32 14
  %5806 = sext i32 %5805 to i64
  %5807 = getelementptr inbounds i32, i32* %4222, i64 %5806
  %5808 = load i32, i32* %5807, align 4, !tbaa !402
  %5809 = insertelement <64 x i32> %5804, i32 %5808, i32 14
  %5810 = extractelement <64 x i32> %5734, i32 15
  %5811 = sext i32 %5810 to i64
  %5812 = getelementptr inbounds i32, i32* %4222, i64 %5811
  %5813 = load i32, i32* %5812, align 4, !tbaa !402
  %5814 = insertelement <64 x i32> %5809, i32 %5813, i32 15
  %5815 = extractelement <64 x i32> %5734, i32 16
  %5816 = sext i32 %5815 to i64
  %5817 = getelementptr inbounds i32, i32* %4222, i64 %5816
  %5818 = load i32, i32* %5817, align 4, !tbaa !402
  %5819 = insertelement <64 x i32> %5814, i32 %5818, i32 16
  %5820 = extractelement <64 x i32> %5734, i32 17
  %5821 = sext i32 %5820 to i64
  %5822 = getelementptr inbounds i32, i32* %4222, i64 %5821
  %5823 = load i32, i32* %5822, align 4, !tbaa !402
  %5824 = insertelement <64 x i32> %5819, i32 %5823, i32 17
  %5825 = extractelement <64 x i32> %5734, i32 18
  %5826 = sext i32 %5825 to i64
  %5827 = getelementptr inbounds i32, i32* %4222, i64 %5826
  %5828 = load i32, i32* %5827, align 4, !tbaa !402
  %5829 = insertelement <64 x i32> %5824, i32 %5828, i32 18
  %5830 = extractelement <64 x i32> %5734, i32 19
  %5831 = sext i32 %5830 to i64
  %5832 = getelementptr inbounds i32, i32* %4222, i64 %5831
  %5833 = load i32, i32* %5832, align 4, !tbaa !402
  %5834 = insertelement <64 x i32> %5829, i32 %5833, i32 19
  %5835 = extractelement <64 x i32> %5734, i32 20
  %5836 = sext i32 %5835 to i64
  %5837 = getelementptr inbounds i32, i32* %4222, i64 %5836
  %5838 = load i32, i32* %5837, align 4, !tbaa !402
  %5839 = insertelement <64 x i32> %5834, i32 %5838, i32 20
  %5840 = extractelement <64 x i32> %5734, i32 21
  %5841 = sext i32 %5840 to i64
  %5842 = getelementptr inbounds i32, i32* %4222, i64 %5841
  %5843 = load i32, i32* %5842, align 4, !tbaa !402
  %5844 = insertelement <64 x i32> %5839, i32 %5843, i32 21
  %5845 = extractelement <64 x i32> %5734, i32 22
  %5846 = sext i32 %5845 to i64
  %5847 = getelementptr inbounds i32, i32* %4222, i64 %5846
  %5848 = load i32, i32* %5847, align 4, !tbaa !402
  %5849 = insertelement <64 x i32> %5844, i32 %5848, i32 22
  %5850 = extractelement <64 x i32> %5734, i32 23
  %5851 = sext i32 %5850 to i64
  %5852 = getelementptr inbounds i32, i32* %4222, i64 %5851
  %5853 = load i32, i32* %5852, align 4, !tbaa !402
  %5854 = insertelement <64 x i32> %5849, i32 %5853, i32 23
  %5855 = extractelement <64 x i32> %5734, i32 24
  %5856 = sext i32 %5855 to i64
  %5857 = getelementptr inbounds i32, i32* %4222, i64 %5856
  %5858 = load i32, i32* %5857, align 4, !tbaa !402
  %5859 = insertelement <64 x i32> %5854, i32 %5858, i32 24
  %5860 = extractelement <64 x i32> %5734, i32 25
  %5861 = sext i32 %5860 to i64
  %5862 = getelementptr inbounds i32, i32* %4222, i64 %5861
  %5863 = load i32, i32* %5862, align 4, !tbaa !402
  %5864 = insertelement <64 x i32> %5859, i32 %5863, i32 25
  %5865 = extractelement <64 x i32> %5734, i32 26
  %5866 = sext i32 %5865 to i64
  %5867 = getelementptr inbounds i32, i32* %4222, i64 %5866
  %5868 = load i32, i32* %5867, align 4, !tbaa !402
  %5869 = insertelement <64 x i32> %5864, i32 %5868, i32 26
  %5870 = extractelement <64 x i32> %5734, i32 27
  %5871 = sext i32 %5870 to i64
  %5872 = getelementptr inbounds i32, i32* %4222, i64 %5871
  %5873 = load i32, i32* %5872, align 4, !tbaa !402
  %5874 = insertelement <64 x i32> %5869, i32 %5873, i32 27
  %5875 = extractelement <64 x i32> %5734, i32 28
  %5876 = sext i32 %5875 to i64
  %5877 = getelementptr inbounds i32, i32* %4222, i64 %5876
  %5878 = load i32, i32* %5877, align 4, !tbaa !402
  %5879 = insertelement <64 x i32> %5874, i32 %5878, i32 28
  %5880 = extractelement <64 x i32> %5734, i32 29
  %5881 = sext i32 %5880 to i64
  %5882 = getelementptr inbounds i32, i32* %4222, i64 %5881
  %5883 = load i32, i32* %5882, align 4, !tbaa !402
  %5884 = insertelement <64 x i32> %5879, i32 %5883, i32 29
  %5885 = extractelement <64 x i32> %5734, i32 30
  %5886 = sext i32 %5885 to i64
  %5887 = getelementptr inbounds i32, i32* %4222, i64 %5886
  %5888 = load i32, i32* %5887, align 4, !tbaa !402
  %5889 = insertelement <64 x i32> %5884, i32 %5888, i32 30
  %5890 = extractelement <64 x i32> %5734, i32 31
  %5891 = sext i32 %5890 to i64
  %5892 = getelementptr inbounds i32, i32* %4222, i64 %5891
  %5893 = load i32, i32* %5892, align 4, !tbaa !402
  %5894 = insertelement <64 x i32> %5889, i32 %5893, i32 31
  %5895 = extractelement <64 x i32> %5734, i32 32
  %5896 = sext i32 %5895 to i64
  %5897 = getelementptr inbounds i32, i32* %4222, i64 %5896
  %5898 = load i32, i32* %5897, align 4, !tbaa !402
  %5899 = insertelement <64 x i32> %5894, i32 %5898, i32 32
  %5900 = extractelement <64 x i32> %5734, i32 33
  %5901 = sext i32 %5900 to i64
  %5902 = getelementptr inbounds i32, i32* %4222, i64 %5901
  %5903 = load i32, i32* %5902, align 4, !tbaa !402
  %5904 = insertelement <64 x i32> %5899, i32 %5903, i32 33
  %5905 = extractelement <64 x i32> %5734, i32 34
  %5906 = sext i32 %5905 to i64
  %5907 = getelementptr inbounds i32, i32* %4222, i64 %5906
  %5908 = load i32, i32* %5907, align 4, !tbaa !402
  %5909 = insertelement <64 x i32> %5904, i32 %5908, i32 34
  %5910 = extractelement <64 x i32> %5734, i32 35
  %5911 = sext i32 %5910 to i64
  %5912 = getelementptr inbounds i32, i32* %4222, i64 %5911
  %5913 = load i32, i32* %5912, align 4, !tbaa !402
  %5914 = insertelement <64 x i32> %5909, i32 %5913, i32 35
  %5915 = extractelement <64 x i32> %5734, i32 36
  %5916 = sext i32 %5915 to i64
  %5917 = getelementptr inbounds i32, i32* %4222, i64 %5916
  %5918 = load i32, i32* %5917, align 4, !tbaa !402
  %5919 = insertelement <64 x i32> %5914, i32 %5918, i32 36
  %5920 = extractelement <64 x i32> %5734, i32 37
  %5921 = sext i32 %5920 to i64
  %5922 = getelementptr inbounds i32, i32* %4222, i64 %5921
  %5923 = load i32, i32* %5922, align 4, !tbaa !402
  %5924 = insertelement <64 x i32> %5919, i32 %5923, i32 37
  %5925 = extractelement <64 x i32> %5734, i32 38
  %5926 = sext i32 %5925 to i64
  %5927 = getelementptr inbounds i32, i32* %4222, i64 %5926
  %5928 = load i32, i32* %5927, align 4, !tbaa !402
  %5929 = insertelement <64 x i32> %5924, i32 %5928, i32 38
  %5930 = extractelement <64 x i32> %5734, i32 39
  %5931 = sext i32 %5930 to i64
  %5932 = getelementptr inbounds i32, i32* %4222, i64 %5931
  %5933 = load i32, i32* %5932, align 4, !tbaa !402
  %5934 = insertelement <64 x i32> %5929, i32 %5933, i32 39
  %5935 = extractelement <64 x i32> %5734, i32 40
  %5936 = sext i32 %5935 to i64
  %5937 = getelementptr inbounds i32, i32* %4222, i64 %5936
  %5938 = load i32, i32* %5937, align 4, !tbaa !402
  %5939 = insertelement <64 x i32> %5934, i32 %5938, i32 40
  %5940 = extractelement <64 x i32> %5734, i32 41
  %5941 = sext i32 %5940 to i64
  %5942 = getelementptr inbounds i32, i32* %4222, i64 %5941
  %5943 = load i32, i32* %5942, align 4, !tbaa !402
  %5944 = insertelement <64 x i32> %5939, i32 %5943, i32 41
  %5945 = extractelement <64 x i32> %5734, i32 42
  %5946 = sext i32 %5945 to i64
  %5947 = getelementptr inbounds i32, i32* %4222, i64 %5946
  %5948 = load i32, i32* %5947, align 4, !tbaa !402
  %5949 = insertelement <64 x i32> %5944, i32 %5948, i32 42
  %5950 = extractelement <64 x i32> %5734, i32 43
  %5951 = sext i32 %5950 to i64
  %5952 = getelementptr inbounds i32, i32* %4222, i64 %5951
  %5953 = load i32, i32* %5952, align 4, !tbaa !402
  %5954 = insertelement <64 x i32> %5949, i32 %5953, i32 43
  %5955 = extractelement <64 x i32> %5734, i32 44
  %5956 = sext i32 %5955 to i64
  %5957 = getelementptr inbounds i32, i32* %4222, i64 %5956
  %5958 = load i32, i32* %5957, align 4, !tbaa !402
  %5959 = insertelement <64 x i32> %5954, i32 %5958, i32 44
  %5960 = extractelement <64 x i32> %5734, i32 45
  %5961 = sext i32 %5960 to i64
  %5962 = getelementptr inbounds i32, i32* %4222, i64 %5961
  %5963 = load i32, i32* %5962, align 4, !tbaa !402
  %5964 = insertelement <64 x i32> %5959, i32 %5963, i32 45
  %5965 = extractelement <64 x i32> %5734, i32 46
  %5966 = sext i32 %5965 to i64
  %5967 = getelementptr inbounds i32, i32* %4222, i64 %5966
  %5968 = load i32, i32* %5967, align 4, !tbaa !402
  %5969 = insertelement <64 x i32> %5964, i32 %5968, i32 46
  %5970 = extractelement <64 x i32> %5734, i32 47
  %5971 = sext i32 %5970 to i64
  %5972 = getelementptr inbounds i32, i32* %4222, i64 %5971
  %5973 = load i32, i32* %5972, align 4, !tbaa !402
  %5974 = insertelement <64 x i32> %5969, i32 %5973, i32 47
  %5975 = extractelement <64 x i32> %5734, i32 48
  %5976 = sext i32 %5975 to i64
  %5977 = getelementptr inbounds i32, i32* %4222, i64 %5976
  %5978 = load i32, i32* %5977, align 4, !tbaa !402
  %5979 = insertelement <64 x i32> %5974, i32 %5978, i32 48
  %5980 = extractelement <64 x i32> %5734, i32 49
  %5981 = sext i32 %5980 to i64
  %5982 = getelementptr inbounds i32, i32* %4222, i64 %5981
  %5983 = load i32, i32* %5982, align 4, !tbaa !402
  %5984 = insertelement <64 x i32> %5979, i32 %5983, i32 49
  %5985 = extractelement <64 x i32> %5734, i32 50
  %5986 = sext i32 %5985 to i64
  %5987 = getelementptr inbounds i32, i32* %4222, i64 %5986
  %5988 = load i32, i32* %5987, align 4, !tbaa !402
  %5989 = insertelement <64 x i32> %5984, i32 %5988, i32 50
  %5990 = extractelement <64 x i32> %5734, i32 51
  %5991 = sext i32 %5990 to i64
  %5992 = getelementptr inbounds i32, i32* %4222, i64 %5991
  %5993 = load i32, i32* %5992, align 4, !tbaa !402
  %5994 = insertelement <64 x i32> %5989, i32 %5993, i32 51
  %5995 = extractelement <64 x i32> %5734, i32 52
  %5996 = sext i32 %5995 to i64
  %5997 = getelementptr inbounds i32, i32* %4222, i64 %5996
  %5998 = load i32, i32* %5997, align 4, !tbaa !402
  %5999 = insertelement <64 x i32> %5994, i32 %5998, i32 52
  %6000 = extractelement <64 x i32> %5734, i32 53
  %6001 = sext i32 %6000 to i64
  %6002 = getelementptr inbounds i32, i32* %4222, i64 %6001
  %6003 = load i32, i32* %6002, align 4, !tbaa !402
  %6004 = insertelement <64 x i32> %5999, i32 %6003, i32 53
  %6005 = extractelement <64 x i32> %5734, i32 54
  %6006 = sext i32 %6005 to i64
  %6007 = getelementptr inbounds i32, i32* %4222, i64 %6006
  %6008 = load i32, i32* %6007, align 4, !tbaa !402
  %6009 = insertelement <64 x i32> %6004, i32 %6008, i32 54
  %6010 = extractelement <64 x i32> %5734, i32 55
  %6011 = sext i32 %6010 to i64
  %6012 = getelementptr inbounds i32, i32* %4222, i64 %6011
  %6013 = load i32, i32* %6012, align 4, !tbaa !402
  %6014 = insertelement <64 x i32> %6009, i32 %6013, i32 55
  %6015 = extractelement <64 x i32> %5734, i32 56
  %6016 = sext i32 %6015 to i64
  %6017 = getelementptr inbounds i32, i32* %4222, i64 %6016
  %6018 = load i32, i32* %6017, align 4, !tbaa !402
  %6019 = insertelement <64 x i32> %6014, i32 %6018, i32 56
  %6020 = extractelement <64 x i32> %5734, i32 57
  %6021 = sext i32 %6020 to i64
  %6022 = getelementptr inbounds i32, i32* %4222, i64 %6021
  %6023 = load i32, i32* %6022, align 4, !tbaa !402
  %6024 = insertelement <64 x i32> %6019, i32 %6023, i32 57
  %6025 = extractelement <64 x i32> %5734, i32 58
  %6026 = sext i32 %6025 to i64
  %6027 = getelementptr inbounds i32, i32* %4222, i64 %6026
  %6028 = load i32, i32* %6027, align 4, !tbaa !402
  %6029 = insertelement <64 x i32> %6024, i32 %6028, i32 58
  %6030 = extractelement <64 x i32> %5734, i32 59
  %6031 = sext i32 %6030 to i64
  %6032 = getelementptr inbounds i32, i32* %4222, i64 %6031
  %6033 = load i32, i32* %6032, align 4, !tbaa !402
  %6034 = insertelement <64 x i32> %6029, i32 %6033, i32 59
  %6035 = extractelement <64 x i32> %5734, i32 60
  %6036 = sext i32 %6035 to i64
  %6037 = getelementptr inbounds i32, i32* %4222, i64 %6036
  %6038 = load i32, i32* %6037, align 4, !tbaa !402
  %6039 = insertelement <64 x i32> %6034, i32 %6038, i32 60
  %6040 = extractelement <64 x i32> %5734, i32 61
  %6041 = sext i32 %6040 to i64
  %6042 = getelementptr inbounds i32, i32* %4222, i64 %6041
  %6043 = load i32, i32* %6042, align 4, !tbaa !402
  %6044 = insertelement <64 x i32> %6039, i32 %6043, i32 61
  %6045 = extractelement <64 x i32> %5734, i32 62
  %6046 = sext i32 %6045 to i64
  %6047 = getelementptr inbounds i32, i32* %4222, i64 %6046
  %6048 = load i32, i32* %6047, align 4, !tbaa !402
  %6049 = insertelement <64 x i32> %6044, i32 %6048, i32 62
  %6050 = extractelement <64 x i32> %5734, i32 63
  %6051 = sext i32 %6050 to i64
  %6052 = getelementptr inbounds i32, i32* %4222, i64 %6051
  %6053 = load i32, i32* %6052, align 4, !tbaa !402
  %6054 = insertelement <64 x i32> %6049, i32 %6053, i32 63
  %6055 = sub nsw i32 %3866, %"Output.s1.r10$x265.us.us.us"
  %6056 = insertelement <64 x i32> undef, i32 %6055, i32 0
  %6057 = shufflevector <64 x i32> %6056, <64 x i32> undef, <64 x i32> zeroinitializer
  %a117.us.us.us = add nsw <64 x i32> %t186269.us.us.us, %6057
  %6058 = shufflevector <64 x i32> %a117.us.us.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6059 = icmp sgt <16 x i32> %4224, %6058
  %6060 = shufflevector <64 x i32> %a117.us.us.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6061 = icmp sgt <16 x i32> %4224, %6060
  %6062 = shufflevector <64 x i32> %a117.us.us.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %6063 = icmp sgt <16 x i32> %4224, %6062
  %6064 = shufflevector <64 x i32> %a117.us.us.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %6065 = icmp sgt <16 x i32> %4224, %6064
  %6066 = select <16 x i1> %6059, <16 x i32> %6058, <16 x i32> %4224
  %6067 = select <16 x i1> %6061, <16 x i32> %6060, <16 x i32> %4224
  %6068 = select <16 x i1> %6063, <16 x i32> %6062, <16 x i32> %4224
  %6069 = select <16 x i1> %6065, <16 x i32> %6064, <16 x i32> %4224
  %6070 = icmp sgt <16 x i32> %6066, %4226
  %6071 = icmp sgt <16 x i32> %6067, %4226
  %6072 = icmp sgt <16 x i32> %6068, %4226
  %6073 = icmp sgt <16 x i32> %6069, %4226
  %6074 = select <16 x i1> %6070, <16 x i32> %6066, <16 x i32> %4226
  %6075 = select <16 x i1> %6071, <16 x i32> %6067, <16 x i32> %4226
  %6076 = select <16 x i1> %6072, <16 x i32> %6068, <16 x i32> %4226
  %6077 = select <16 x i1> %6073, <16 x i32> %6069, <16 x i32> %4226
  %6078 = shufflevector <16 x i32> %6074, <16 x i32> %6075, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6079 = shufflevector <16 x i32> %6076, <16 x i32> %6077, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6080 = shufflevector <32 x i32> %6078, <32 x i32> %6079, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %6081 = add <64 x i32> %6080, %5576
  %6082 = add <64 x i32> %6081, %5602
  %6083 = extractelement <64 x i32> %6082, i32 0
  %6084 = sext i32 %6083 to i64
  %6085 = getelementptr inbounds i32, i32* %4233, i64 %6084
  %6086 = load i32, i32* %6085, align 4, !tbaa !404
  %6087 = insertelement <64 x i32> undef, i32 %6086, i32 0
  %6088 = extractelement <64 x i32> %6082, i32 1
  %6089 = sext i32 %6088 to i64
  %6090 = getelementptr inbounds i32, i32* %4233, i64 %6089
  %6091 = load i32, i32* %6090, align 4, !tbaa !404
  %6092 = insertelement <64 x i32> %6087, i32 %6091, i32 1
  %6093 = extractelement <64 x i32> %6082, i32 2
  %6094 = sext i32 %6093 to i64
  %6095 = getelementptr inbounds i32, i32* %4233, i64 %6094
  %6096 = load i32, i32* %6095, align 4, !tbaa !404
  %6097 = insertelement <64 x i32> %6092, i32 %6096, i32 2
  %6098 = extractelement <64 x i32> %6082, i32 3
  %6099 = sext i32 %6098 to i64
  %6100 = getelementptr inbounds i32, i32* %4233, i64 %6099
  %6101 = load i32, i32* %6100, align 4, !tbaa !404
  %6102 = insertelement <64 x i32> %6097, i32 %6101, i32 3
  %6103 = extractelement <64 x i32> %6082, i32 4
  %6104 = sext i32 %6103 to i64
  %6105 = getelementptr inbounds i32, i32* %4233, i64 %6104
  %6106 = load i32, i32* %6105, align 4, !tbaa !404
  %6107 = insertelement <64 x i32> %6102, i32 %6106, i32 4
  %6108 = extractelement <64 x i32> %6082, i32 5
  %6109 = sext i32 %6108 to i64
  %6110 = getelementptr inbounds i32, i32* %4233, i64 %6109
  %6111 = load i32, i32* %6110, align 4, !tbaa !404
  %6112 = insertelement <64 x i32> %6107, i32 %6111, i32 5
  %6113 = extractelement <64 x i32> %6082, i32 6
  %6114 = sext i32 %6113 to i64
  %6115 = getelementptr inbounds i32, i32* %4233, i64 %6114
  %6116 = load i32, i32* %6115, align 4, !tbaa !404
  %6117 = insertelement <64 x i32> %6112, i32 %6116, i32 6
  %6118 = extractelement <64 x i32> %6082, i32 7
  %6119 = sext i32 %6118 to i64
  %6120 = getelementptr inbounds i32, i32* %4233, i64 %6119
  %6121 = load i32, i32* %6120, align 4, !tbaa !404
  %6122 = insertelement <64 x i32> %6117, i32 %6121, i32 7
  %6123 = extractelement <64 x i32> %6082, i32 8
  %6124 = sext i32 %6123 to i64
  %6125 = getelementptr inbounds i32, i32* %4233, i64 %6124
  %6126 = load i32, i32* %6125, align 4, !tbaa !404
  %6127 = insertelement <64 x i32> %6122, i32 %6126, i32 8
  %6128 = extractelement <64 x i32> %6082, i32 9
  %6129 = sext i32 %6128 to i64
  %6130 = getelementptr inbounds i32, i32* %4233, i64 %6129
  %6131 = load i32, i32* %6130, align 4, !tbaa !404
  %6132 = insertelement <64 x i32> %6127, i32 %6131, i32 9
  %6133 = extractelement <64 x i32> %6082, i32 10
  %6134 = sext i32 %6133 to i64
  %6135 = getelementptr inbounds i32, i32* %4233, i64 %6134
  %6136 = load i32, i32* %6135, align 4, !tbaa !404
  %6137 = insertelement <64 x i32> %6132, i32 %6136, i32 10
  %6138 = extractelement <64 x i32> %6082, i32 11
  %6139 = sext i32 %6138 to i64
  %6140 = getelementptr inbounds i32, i32* %4233, i64 %6139
  %6141 = load i32, i32* %6140, align 4, !tbaa !404
  %6142 = insertelement <64 x i32> %6137, i32 %6141, i32 11
  %6143 = extractelement <64 x i32> %6082, i32 12
  %6144 = sext i32 %6143 to i64
  %6145 = getelementptr inbounds i32, i32* %4233, i64 %6144
  %6146 = load i32, i32* %6145, align 4, !tbaa !404
  %6147 = insertelement <64 x i32> %6142, i32 %6146, i32 12
  %6148 = extractelement <64 x i32> %6082, i32 13
  %6149 = sext i32 %6148 to i64
  %6150 = getelementptr inbounds i32, i32* %4233, i64 %6149
  %6151 = load i32, i32* %6150, align 4, !tbaa !404
  %6152 = insertelement <64 x i32> %6147, i32 %6151, i32 13
  %6153 = extractelement <64 x i32> %6082, i32 14
  %6154 = sext i32 %6153 to i64
  %6155 = getelementptr inbounds i32, i32* %4233, i64 %6154
  %6156 = load i32, i32* %6155, align 4, !tbaa !404
  %6157 = insertelement <64 x i32> %6152, i32 %6156, i32 14
  %6158 = extractelement <64 x i32> %6082, i32 15
  %6159 = sext i32 %6158 to i64
  %6160 = getelementptr inbounds i32, i32* %4233, i64 %6159
  %6161 = load i32, i32* %6160, align 4, !tbaa !404
  %6162 = insertelement <64 x i32> %6157, i32 %6161, i32 15
  %6163 = extractelement <64 x i32> %6082, i32 16
  %6164 = sext i32 %6163 to i64
  %6165 = getelementptr inbounds i32, i32* %4233, i64 %6164
  %6166 = load i32, i32* %6165, align 4, !tbaa !404
  %6167 = insertelement <64 x i32> %6162, i32 %6166, i32 16
  %6168 = extractelement <64 x i32> %6082, i32 17
  %6169 = sext i32 %6168 to i64
  %6170 = getelementptr inbounds i32, i32* %4233, i64 %6169
  %6171 = load i32, i32* %6170, align 4, !tbaa !404
  %6172 = insertelement <64 x i32> %6167, i32 %6171, i32 17
  %6173 = extractelement <64 x i32> %6082, i32 18
  %6174 = sext i32 %6173 to i64
  %6175 = getelementptr inbounds i32, i32* %4233, i64 %6174
  %6176 = load i32, i32* %6175, align 4, !tbaa !404
  %6177 = insertelement <64 x i32> %6172, i32 %6176, i32 18
  %6178 = extractelement <64 x i32> %6082, i32 19
  %6179 = sext i32 %6178 to i64
  %6180 = getelementptr inbounds i32, i32* %4233, i64 %6179
  %6181 = load i32, i32* %6180, align 4, !tbaa !404
  %6182 = insertelement <64 x i32> %6177, i32 %6181, i32 19
  %6183 = extractelement <64 x i32> %6082, i32 20
  %6184 = sext i32 %6183 to i64
  %6185 = getelementptr inbounds i32, i32* %4233, i64 %6184
  %6186 = load i32, i32* %6185, align 4, !tbaa !404
  %6187 = insertelement <64 x i32> %6182, i32 %6186, i32 20
  %6188 = extractelement <64 x i32> %6082, i32 21
  %6189 = sext i32 %6188 to i64
  %6190 = getelementptr inbounds i32, i32* %4233, i64 %6189
  %6191 = load i32, i32* %6190, align 4, !tbaa !404
  %6192 = insertelement <64 x i32> %6187, i32 %6191, i32 21
  %6193 = extractelement <64 x i32> %6082, i32 22
  %6194 = sext i32 %6193 to i64
  %6195 = getelementptr inbounds i32, i32* %4233, i64 %6194
  %6196 = load i32, i32* %6195, align 4, !tbaa !404
  %6197 = insertelement <64 x i32> %6192, i32 %6196, i32 22
  %6198 = extractelement <64 x i32> %6082, i32 23
  %6199 = sext i32 %6198 to i64
  %6200 = getelementptr inbounds i32, i32* %4233, i64 %6199
  %6201 = load i32, i32* %6200, align 4, !tbaa !404
  %6202 = insertelement <64 x i32> %6197, i32 %6201, i32 23
  %6203 = extractelement <64 x i32> %6082, i32 24
  %6204 = sext i32 %6203 to i64
  %6205 = getelementptr inbounds i32, i32* %4233, i64 %6204
  %6206 = load i32, i32* %6205, align 4, !tbaa !404
  %6207 = insertelement <64 x i32> %6202, i32 %6206, i32 24
  %6208 = extractelement <64 x i32> %6082, i32 25
  %6209 = sext i32 %6208 to i64
  %6210 = getelementptr inbounds i32, i32* %4233, i64 %6209
  %6211 = load i32, i32* %6210, align 4, !tbaa !404
  %6212 = insertelement <64 x i32> %6207, i32 %6211, i32 25
  %6213 = extractelement <64 x i32> %6082, i32 26
  %6214 = sext i32 %6213 to i64
  %6215 = getelementptr inbounds i32, i32* %4233, i64 %6214
  %6216 = load i32, i32* %6215, align 4, !tbaa !404
  %6217 = insertelement <64 x i32> %6212, i32 %6216, i32 26
  %6218 = extractelement <64 x i32> %6082, i32 27
  %6219 = sext i32 %6218 to i64
  %6220 = getelementptr inbounds i32, i32* %4233, i64 %6219
  %6221 = load i32, i32* %6220, align 4, !tbaa !404
  %6222 = insertelement <64 x i32> %6217, i32 %6221, i32 27
  %6223 = extractelement <64 x i32> %6082, i32 28
  %6224 = sext i32 %6223 to i64
  %6225 = getelementptr inbounds i32, i32* %4233, i64 %6224
  %6226 = load i32, i32* %6225, align 4, !tbaa !404
  %6227 = insertelement <64 x i32> %6222, i32 %6226, i32 28
  %6228 = extractelement <64 x i32> %6082, i32 29
  %6229 = sext i32 %6228 to i64
  %6230 = getelementptr inbounds i32, i32* %4233, i64 %6229
  %6231 = load i32, i32* %6230, align 4, !tbaa !404
  %6232 = insertelement <64 x i32> %6227, i32 %6231, i32 29
  %6233 = extractelement <64 x i32> %6082, i32 30
  %6234 = sext i32 %6233 to i64
  %6235 = getelementptr inbounds i32, i32* %4233, i64 %6234
  %6236 = load i32, i32* %6235, align 4, !tbaa !404
  %6237 = insertelement <64 x i32> %6232, i32 %6236, i32 30
  %6238 = extractelement <64 x i32> %6082, i32 31
  %6239 = sext i32 %6238 to i64
  %6240 = getelementptr inbounds i32, i32* %4233, i64 %6239
  %6241 = load i32, i32* %6240, align 4, !tbaa !404
  %6242 = insertelement <64 x i32> %6237, i32 %6241, i32 31
  %6243 = extractelement <64 x i32> %6082, i32 32
  %6244 = sext i32 %6243 to i64
  %6245 = getelementptr inbounds i32, i32* %4233, i64 %6244
  %6246 = load i32, i32* %6245, align 4, !tbaa !404
  %6247 = insertelement <64 x i32> %6242, i32 %6246, i32 32
  %6248 = extractelement <64 x i32> %6082, i32 33
  %6249 = sext i32 %6248 to i64
  %6250 = getelementptr inbounds i32, i32* %4233, i64 %6249
  %6251 = load i32, i32* %6250, align 4, !tbaa !404
  %6252 = insertelement <64 x i32> %6247, i32 %6251, i32 33
  %6253 = extractelement <64 x i32> %6082, i32 34
  %6254 = sext i32 %6253 to i64
  %6255 = getelementptr inbounds i32, i32* %4233, i64 %6254
  %6256 = load i32, i32* %6255, align 4, !tbaa !404
  %6257 = insertelement <64 x i32> %6252, i32 %6256, i32 34
  %6258 = extractelement <64 x i32> %6082, i32 35
  %6259 = sext i32 %6258 to i64
  %6260 = getelementptr inbounds i32, i32* %4233, i64 %6259
  %6261 = load i32, i32* %6260, align 4, !tbaa !404
  %6262 = insertelement <64 x i32> %6257, i32 %6261, i32 35
  %6263 = extractelement <64 x i32> %6082, i32 36
  %6264 = sext i32 %6263 to i64
  %6265 = getelementptr inbounds i32, i32* %4233, i64 %6264
  %6266 = load i32, i32* %6265, align 4, !tbaa !404
  %6267 = insertelement <64 x i32> %6262, i32 %6266, i32 36
  %6268 = extractelement <64 x i32> %6082, i32 37
  %6269 = sext i32 %6268 to i64
  %6270 = getelementptr inbounds i32, i32* %4233, i64 %6269
  %6271 = load i32, i32* %6270, align 4, !tbaa !404
  %6272 = insertelement <64 x i32> %6267, i32 %6271, i32 37
  %6273 = extractelement <64 x i32> %6082, i32 38
  %6274 = sext i32 %6273 to i64
  %6275 = getelementptr inbounds i32, i32* %4233, i64 %6274
  %6276 = load i32, i32* %6275, align 4, !tbaa !404
  %6277 = insertelement <64 x i32> %6272, i32 %6276, i32 38
  %6278 = extractelement <64 x i32> %6082, i32 39
  %6279 = sext i32 %6278 to i64
  %6280 = getelementptr inbounds i32, i32* %4233, i64 %6279
  %6281 = load i32, i32* %6280, align 4, !tbaa !404
  %6282 = insertelement <64 x i32> %6277, i32 %6281, i32 39
  %6283 = extractelement <64 x i32> %6082, i32 40
  %6284 = sext i32 %6283 to i64
  %6285 = getelementptr inbounds i32, i32* %4233, i64 %6284
  %6286 = load i32, i32* %6285, align 4, !tbaa !404
  %6287 = insertelement <64 x i32> %6282, i32 %6286, i32 40
  %6288 = extractelement <64 x i32> %6082, i32 41
  %6289 = sext i32 %6288 to i64
  %6290 = getelementptr inbounds i32, i32* %4233, i64 %6289
  %6291 = load i32, i32* %6290, align 4, !tbaa !404
  %6292 = insertelement <64 x i32> %6287, i32 %6291, i32 41
  %6293 = extractelement <64 x i32> %6082, i32 42
  %6294 = sext i32 %6293 to i64
  %6295 = getelementptr inbounds i32, i32* %4233, i64 %6294
  %6296 = load i32, i32* %6295, align 4, !tbaa !404
  %6297 = insertelement <64 x i32> %6292, i32 %6296, i32 42
  %6298 = extractelement <64 x i32> %6082, i32 43
  %6299 = sext i32 %6298 to i64
  %6300 = getelementptr inbounds i32, i32* %4233, i64 %6299
  %6301 = load i32, i32* %6300, align 4, !tbaa !404
  %6302 = insertelement <64 x i32> %6297, i32 %6301, i32 43
  %6303 = extractelement <64 x i32> %6082, i32 44
  %6304 = sext i32 %6303 to i64
  %6305 = getelementptr inbounds i32, i32* %4233, i64 %6304
  %6306 = load i32, i32* %6305, align 4, !tbaa !404
  %6307 = insertelement <64 x i32> %6302, i32 %6306, i32 44
  %6308 = extractelement <64 x i32> %6082, i32 45
  %6309 = sext i32 %6308 to i64
  %6310 = getelementptr inbounds i32, i32* %4233, i64 %6309
  %6311 = load i32, i32* %6310, align 4, !tbaa !404
  %6312 = insertelement <64 x i32> %6307, i32 %6311, i32 45
  %6313 = extractelement <64 x i32> %6082, i32 46
  %6314 = sext i32 %6313 to i64
  %6315 = getelementptr inbounds i32, i32* %4233, i64 %6314
  %6316 = load i32, i32* %6315, align 4, !tbaa !404
  %6317 = insertelement <64 x i32> %6312, i32 %6316, i32 46
  %6318 = extractelement <64 x i32> %6082, i32 47
  %6319 = sext i32 %6318 to i64
  %6320 = getelementptr inbounds i32, i32* %4233, i64 %6319
  %6321 = load i32, i32* %6320, align 4, !tbaa !404
  %6322 = insertelement <64 x i32> %6317, i32 %6321, i32 47
  %6323 = extractelement <64 x i32> %6082, i32 48
  %6324 = sext i32 %6323 to i64
  %6325 = getelementptr inbounds i32, i32* %4233, i64 %6324
  %6326 = load i32, i32* %6325, align 4, !tbaa !404
  %6327 = insertelement <64 x i32> %6322, i32 %6326, i32 48
  %6328 = extractelement <64 x i32> %6082, i32 49
  %6329 = sext i32 %6328 to i64
  %6330 = getelementptr inbounds i32, i32* %4233, i64 %6329
  %6331 = load i32, i32* %6330, align 4, !tbaa !404
  %6332 = insertelement <64 x i32> %6327, i32 %6331, i32 49
  %6333 = extractelement <64 x i32> %6082, i32 50
  %6334 = sext i32 %6333 to i64
  %6335 = getelementptr inbounds i32, i32* %4233, i64 %6334
  %6336 = load i32, i32* %6335, align 4, !tbaa !404
  %6337 = insertelement <64 x i32> %6332, i32 %6336, i32 50
  %6338 = extractelement <64 x i32> %6082, i32 51
  %6339 = sext i32 %6338 to i64
  %6340 = getelementptr inbounds i32, i32* %4233, i64 %6339
  %6341 = load i32, i32* %6340, align 4, !tbaa !404
  %6342 = insertelement <64 x i32> %6337, i32 %6341, i32 51
  %6343 = extractelement <64 x i32> %6082, i32 52
  %6344 = sext i32 %6343 to i64
  %6345 = getelementptr inbounds i32, i32* %4233, i64 %6344
  %6346 = load i32, i32* %6345, align 4, !tbaa !404
  %6347 = insertelement <64 x i32> %6342, i32 %6346, i32 52
  %6348 = extractelement <64 x i32> %6082, i32 53
  %6349 = sext i32 %6348 to i64
  %6350 = getelementptr inbounds i32, i32* %4233, i64 %6349
  %6351 = load i32, i32* %6350, align 4, !tbaa !404
  %6352 = insertelement <64 x i32> %6347, i32 %6351, i32 53
  %6353 = extractelement <64 x i32> %6082, i32 54
  %6354 = sext i32 %6353 to i64
  %6355 = getelementptr inbounds i32, i32* %4233, i64 %6354
  %6356 = load i32, i32* %6355, align 4, !tbaa !404
  %6357 = insertelement <64 x i32> %6352, i32 %6356, i32 54
  %6358 = extractelement <64 x i32> %6082, i32 55
  %6359 = sext i32 %6358 to i64
  %6360 = getelementptr inbounds i32, i32* %4233, i64 %6359
  %6361 = load i32, i32* %6360, align 4, !tbaa !404
  %6362 = insertelement <64 x i32> %6357, i32 %6361, i32 55
  %6363 = extractelement <64 x i32> %6082, i32 56
  %6364 = sext i32 %6363 to i64
  %6365 = getelementptr inbounds i32, i32* %4233, i64 %6364
  %6366 = load i32, i32* %6365, align 4, !tbaa !404
  %6367 = insertelement <64 x i32> %6362, i32 %6366, i32 56
  %6368 = extractelement <64 x i32> %6082, i32 57
  %6369 = sext i32 %6368 to i64
  %6370 = getelementptr inbounds i32, i32* %4233, i64 %6369
  %6371 = load i32, i32* %6370, align 4, !tbaa !404
  %6372 = insertelement <64 x i32> %6367, i32 %6371, i32 57
  %6373 = extractelement <64 x i32> %6082, i32 58
  %6374 = sext i32 %6373 to i64
  %6375 = getelementptr inbounds i32, i32* %4233, i64 %6374
  %6376 = load i32, i32* %6375, align 4, !tbaa !404
  %6377 = insertelement <64 x i32> %6372, i32 %6376, i32 58
  %6378 = extractelement <64 x i32> %6082, i32 59
  %6379 = sext i32 %6378 to i64
  %6380 = getelementptr inbounds i32, i32* %4233, i64 %6379
  %6381 = load i32, i32* %6380, align 4, !tbaa !404
  %6382 = insertelement <64 x i32> %6377, i32 %6381, i32 59
  %6383 = extractelement <64 x i32> %6082, i32 60
  %6384 = sext i32 %6383 to i64
  %6385 = getelementptr inbounds i32, i32* %4233, i64 %6384
  %6386 = load i32, i32* %6385, align 4, !tbaa !404
  %6387 = insertelement <64 x i32> %6382, i32 %6386, i32 60
  %6388 = extractelement <64 x i32> %6082, i32 61
  %6389 = sext i32 %6388 to i64
  %6390 = getelementptr inbounds i32, i32* %4233, i64 %6389
  %6391 = load i32, i32* %6390, align 4, !tbaa !404
  %6392 = insertelement <64 x i32> %6387, i32 %6391, i32 61
  %6393 = extractelement <64 x i32> %6082, i32 62
  %6394 = sext i32 %6393 to i64
  %6395 = getelementptr inbounds i32, i32* %4233, i64 %6394
  %6396 = load i32, i32* %6395, align 4, !tbaa !404
  %6397 = insertelement <64 x i32> %6392, i32 %6396, i32 62
  %6398 = extractelement <64 x i32> %6082, i32 63
  %6399 = sext i32 %6398 to i64
  %6400 = getelementptr inbounds i32, i32* %4233, i64 %6399
  %6401 = load i32, i32* %6400, align 4, !tbaa !404
  %6402 = insertelement <64 x i32> %6397, i32 %6401, i32 63
  %6403 = mul nsw <64 x i32> %6402, %6054
  %6404 = add nsw <64 x i32> %6403, %5730
  %6405 = extractelement <64 x i32> %6404, i32 0
  store i32 %6405, i32* %5381, align 4, !tbaa !399
  %6406 = extractelement <64 x i32> %6404, i32 1
  store i32 %6406, i32* %5384, align 4, !tbaa !399
  %6407 = extractelement <64 x i32> %6404, i32 2
  store i32 %6407, i32* %5387, align 4, !tbaa !399
  %6408 = extractelement <64 x i32> %6404, i32 3
  store i32 %6408, i32* %5390, align 4, !tbaa !399
  %6409 = extractelement <64 x i32> %6404, i32 4
  store i32 %6409, i32* %5393, align 4, !tbaa !399
  %6410 = extractelement <64 x i32> %6404, i32 5
  store i32 %6410, i32* %5396, align 4, !tbaa !399
  %6411 = extractelement <64 x i32> %6404, i32 6
  store i32 %6411, i32* %5399, align 4, !tbaa !399
  %6412 = extractelement <64 x i32> %6404, i32 7
  store i32 %6412, i32* %5402, align 4, !tbaa !399
  %6413 = extractelement <64 x i32> %6404, i32 8
  store i32 %6413, i32* %5405, align 4, !tbaa !399
  %6414 = extractelement <64 x i32> %6404, i32 9
  store i32 %6414, i32* %5408, align 4, !tbaa !399
  %6415 = extractelement <64 x i32> %6404, i32 10
  store i32 %6415, i32* %5411, align 4, !tbaa !399
  %6416 = extractelement <64 x i32> %6404, i32 11
  store i32 %6416, i32* %5414, align 4, !tbaa !399
  %6417 = extractelement <64 x i32> %6404, i32 12
  store i32 %6417, i32* %5417, align 4, !tbaa !399
  %6418 = extractelement <64 x i32> %6404, i32 13
  store i32 %6418, i32* %5420, align 4, !tbaa !399
  %6419 = extractelement <64 x i32> %6404, i32 14
  store i32 %6419, i32* %5423, align 4, !tbaa !399
  %6420 = extractelement <64 x i32> %6404, i32 15
  store i32 %6420, i32* %5426, align 4, !tbaa !399
  %6421 = extractelement <64 x i32> %6404, i32 16
  store i32 %6421, i32* %5429, align 4, !tbaa !399
  %6422 = extractelement <64 x i32> %6404, i32 17
  store i32 %6422, i32* %5432, align 4, !tbaa !399
  %6423 = extractelement <64 x i32> %6404, i32 18
  store i32 %6423, i32* %5435, align 4, !tbaa !399
  %6424 = extractelement <64 x i32> %6404, i32 19
  store i32 %6424, i32* %5438, align 4, !tbaa !399
  %6425 = extractelement <64 x i32> %6404, i32 20
  store i32 %6425, i32* %5441, align 4, !tbaa !399
  %6426 = extractelement <64 x i32> %6404, i32 21
  store i32 %6426, i32* %5444, align 4, !tbaa !399
  %6427 = extractelement <64 x i32> %6404, i32 22
  store i32 %6427, i32* %5447, align 4, !tbaa !399
  %6428 = extractelement <64 x i32> %6404, i32 23
  store i32 %6428, i32* %5450, align 4, !tbaa !399
  %6429 = extractelement <64 x i32> %6404, i32 24
  store i32 %6429, i32* %5453, align 4, !tbaa !399
  %6430 = extractelement <64 x i32> %6404, i32 25
  store i32 %6430, i32* %5456, align 4, !tbaa !399
  %6431 = extractelement <64 x i32> %6404, i32 26
  store i32 %6431, i32* %5459, align 4, !tbaa !399
  %6432 = extractelement <64 x i32> %6404, i32 27
  store i32 %6432, i32* %5462, align 4, !tbaa !399
  %6433 = extractelement <64 x i32> %6404, i32 28
  store i32 %6433, i32* %5465, align 4, !tbaa !399
  %6434 = extractelement <64 x i32> %6404, i32 29
  store i32 %6434, i32* %5468, align 4, !tbaa !399
  %6435 = extractelement <64 x i32> %6404, i32 30
  store i32 %6435, i32* %5471, align 4, !tbaa !399
  %6436 = extractelement <64 x i32> %6404, i32 31
  store i32 %6436, i32* %5474, align 4, !tbaa !399
  %6437 = extractelement <64 x i32> %6404, i32 32
  store i32 %6437, i32* %5477, align 4, !tbaa !399
  %6438 = extractelement <64 x i32> %6404, i32 33
  store i32 %6438, i32* %5480, align 4, !tbaa !399
  %6439 = extractelement <64 x i32> %6404, i32 34
  store i32 %6439, i32* %5483, align 4, !tbaa !399
  %6440 = extractelement <64 x i32> %6404, i32 35
  store i32 %6440, i32* %5486, align 4, !tbaa !399
  %6441 = extractelement <64 x i32> %6404, i32 36
  store i32 %6441, i32* %5489, align 4, !tbaa !399
  %6442 = extractelement <64 x i32> %6404, i32 37
  store i32 %6442, i32* %5492, align 4, !tbaa !399
  %6443 = extractelement <64 x i32> %6404, i32 38
  store i32 %6443, i32* %5495, align 4, !tbaa !399
  %6444 = extractelement <64 x i32> %6404, i32 39
  store i32 %6444, i32* %5498, align 4, !tbaa !399
  %6445 = extractelement <64 x i32> %6404, i32 40
  store i32 %6445, i32* %5501, align 4, !tbaa !399
  %6446 = extractelement <64 x i32> %6404, i32 41
  store i32 %6446, i32* %5504, align 4, !tbaa !399
  %6447 = extractelement <64 x i32> %6404, i32 42
  store i32 %6447, i32* %5507, align 4, !tbaa !399
  %6448 = extractelement <64 x i32> %6404, i32 43
  store i32 %6448, i32* %5510, align 4, !tbaa !399
  %6449 = extractelement <64 x i32> %6404, i32 44
  store i32 %6449, i32* %5513, align 4, !tbaa !399
  %6450 = extractelement <64 x i32> %6404, i32 45
  store i32 %6450, i32* %5516, align 4, !tbaa !399
  %6451 = extractelement <64 x i32> %6404, i32 46
  store i32 %6451, i32* %5519, align 4, !tbaa !399
  %6452 = extractelement <64 x i32> %6404, i32 47
  store i32 %6452, i32* %5522, align 4, !tbaa !399
  %6453 = extractelement <64 x i32> %6404, i32 48
  store i32 %6453, i32* %5525, align 4, !tbaa !399
  %6454 = extractelement <64 x i32> %6404, i32 49
  store i32 %6454, i32* %5528, align 4, !tbaa !399
  %6455 = extractelement <64 x i32> %6404, i32 50
  store i32 %6455, i32* %5531, align 4, !tbaa !399
  %6456 = extractelement <64 x i32> %6404, i32 51
  store i32 %6456, i32* %5534, align 4, !tbaa !399
  %6457 = extractelement <64 x i32> %6404, i32 52
  store i32 %6457, i32* %5537, align 4, !tbaa !399
  %6458 = extractelement <64 x i32> %6404, i32 53
  store i32 %6458, i32* %5540, align 4, !tbaa !399
  %6459 = extractelement <64 x i32> %6404, i32 54
  store i32 %6459, i32* %5543, align 4, !tbaa !399
  %6460 = extractelement <64 x i32> %6404, i32 55
  store i32 %6460, i32* %5546, align 4, !tbaa !399
  %6461 = extractelement <64 x i32> %6404, i32 56
  store i32 %6461, i32* %5549, align 4, !tbaa !399
  %6462 = extractelement <64 x i32> %6404, i32 57
  store i32 %6462, i32* %5552, align 4, !tbaa !399
  %6463 = extractelement <64 x i32> %6404, i32 58
  store i32 %6463, i32* %5555, align 4, !tbaa !399
  %6464 = extractelement <64 x i32> %6404, i32 59
  store i32 %6464, i32* %5558, align 4, !tbaa !399
  %6465 = extractelement <64 x i32> %6404, i32 60
  store i32 %6465, i32* %5561, align 4, !tbaa !399
  %6466 = extractelement <64 x i32> %6404, i32 61
  store i32 %6466, i32* %5564, align 4, !tbaa !399
  %6467 = extractelement <64 x i32> %6404, i32 62
  store i32 %6467, i32* %5567, align 4, !tbaa !399
  %6468 = extractelement <64 x i32> %6404, i32 63
  store i32 %6468, i32* %5570, align 4, !tbaa !399
  %6469 = add nuw nsw i32 %"Output.s1.r10$x265.us.us.us", 1
  %.not349.us.us.us = icmp eq i32 %6469, %3806
  br i1 %.not349.us.us.us, label %"end for Output.s1.r10$x264.loopexit.us.us.us", label %"for Output.s1.r10$x263.us.us.us"

"end for Output.s1.r10$x264.loopexit.us.us.us":   ; preds = %"for Output.s1.r10$x263.us.us.us"
  %6470 = add nuw nsw i32 %"Output.s1.r10$y260.us.us.us", 1
  %.not344.us.us.us = icmp eq i32 %6470, %3809
  br i1 %.not344.us.us.us, label %"end for Output.s1.r10$y259.loopexit.split.us.us.us", label %"for Output.s1.r10$y258.us.us.us"

"end for Output.s1.r10$y259.loopexit.split.us.us.us": ; preds = %"end for Output.s1.r10$x264.loopexit.us.us.us"
  %6471 = add nuw nsw i32 %"Output.s1.r10$z.rebased256.us.us", 1
  %.not343.us.us = icmp eq i32 %6471, %t242253
  br i1 %.not343.us.us, label %"end for Output.s1.r10$z.rebased255", label %"for Output.s1.r10$z.rebased254.us.us"

"end for Output.s1.r10$z.rebased255":             ; preds = %"end for Output.s1.r10$y259.loopexit.split.us.us.us", %"for Output.s1.r10$z.rebased254.preheader", %"for Output.s1.r10$z234.preheader", %"end for Output.s1.r10$z235"
  br i1 %4235, label %"for Output.s1.r10$z.rebased274.preheader", label %"end for Output.s1.r10$z.rebased275", !prof !398

"for Output.s1.r10$z.rebased274.preheader":       ; preds = %"end for Output.s1.r10$z.rebased255"
  %6472 = insertelement <64 x i32> undef, i32 %t238233, i32 0
  %6473 = shufflevector <64 x i32> %6472, <64 x i32> undef, <64 x i32> zeroinitializer
  %6474 = or <64 x i32> %6473, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  br label %"for Output.s1.r10$z.rebased274"

"for Output.s1.r10$z.rebased274":                 ; preds = %"for Output.s1.r10$z.rebased274.preheader", %"end for Output.s1.r10$y279"
  %"Output.s1.r10$z.rebased276" = phi i32 [ %7591, %"end for Output.s1.r10$y279" ], [ 0, %"for Output.s1.r10$z.rebased274.preheader" ]
  %a121 = add nsw i32 %"Output.s1.r10$z.rebased276", %t250272
  %6475 = icmp sgt i32 %b113, %a121
  %a120 = select i1 %6475, i32 %a121, i32 %b113
  br i1 %4189, label %"for Output.s1.r10$y278.preheader", label %"end for Output.s1.r10$y279", !prof !398

"for Output.s1.r10$y278.preheader":               ; preds = %"for Output.s1.r10$z.rebased274"
  %6476 = icmp sgt i32 %a120, 0
  %6477 = select i1 %6476, i32 %a120, i32 0
  %6478 = mul nsw i32 %6477, %3829
  %t251277 = sub nsw i32 %6478, %t231226
  %6479 = insertelement <64 x i32> undef, i32 %t251277, i32 0
  %6480 = shufflevector <64 x i32> %6479, <64 x i32> undef, <64 x i32> zeroinitializer
  br i1 %4190, label %"for Output.s1.r10$y278.preheader.split.us", label %"end for Output.s1.r10$y279", !prof !398

"for Output.s1.r10$y278.preheader.split.us":      ; preds = %"for Output.s1.r10$y278.preheader"
  %6481 = sdiv <64 x i32> %6474, %4193
  %t189286.us = and <64 x i32> %6481, %4194
  %6482 = srem <64 x i32> %6474, %4195
  %t190287.us = and <64 x i32> %6482, %4194
  %6483 = shufflevector <64 x i32> %t190287.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6484 = shufflevector <64 x i32> %t190287.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6485 = shufflevector <64 x i32> %t190287.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %6486 = shufflevector <64 x i32> %t190287.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %.lobit.us = ashr <16 x i32> %6483, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit339.us = ashr <16 x i32> %6484, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit340.us = ashr <16 x i32> %6485, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %.lobit341.us = ashr <16 x i32> %6486, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %6487 = shufflevector <16 x i32> %.lobit.us, <16 x i32> %.lobit339.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6488 = shufflevector <16 x i32> %.lobit340.us, <16 x i32> %.lobit341.us, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %t379.us = shufflevector <32 x i32> %6487, <32 x i32> %6488, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %6489 = sub nsw <64 x i32> %t190287.us, %t379.us
  %6490 = sdiv <64 x i32> %6489, %4198
  %6491 = and <64 x i32> %t379.us, %4200
  %6492 = add nsw <64 x i32> %6491, %6490
  %t191288.us = and <64 x i32> %6492, %4201
  %6493 = srem <64 x i32> %6489, %4202
  %6494 = and <64 x i32> %t379.us, %4206
  %6495 = add nsw <64 x i32> %6494, %6493
  %t192289.us = and <64 x i32> %6495, %4201
  %6496 = add nsw <64 x i32> %t191288.us, %4208
  %6497 = mul nsw <64 x i32> %6496, %4210
  %6498 = add nsw <64 x i32> %t189286.us, %4212
  %6499 = mul nsw <64 x i32> %6498, %4214
  %6500 = add nsw <64 x i32> %6499, %4216
  %6501 = add <64 x i32> %6500, %t192289.us
  %t193290.us = add <64 x i32> %6501, %6497
  %6502 = extractelement <64 x i32> %t193290.us, i32 0
  %6503 = sext i32 %6502 to i64
  %6504 = getelementptr inbounds i32, i32* %4217, i64 %6503
  %6505 = extractelement <64 x i32> %t193290.us, i32 1
  %6506 = sext i32 %6505 to i64
  %6507 = getelementptr inbounds i32, i32* %4217, i64 %6506
  %6508 = extractelement <64 x i32> %t193290.us, i32 2
  %6509 = sext i32 %6508 to i64
  %6510 = getelementptr inbounds i32, i32* %4217, i64 %6509
  %6511 = extractelement <64 x i32> %t193290.us, i32 3
  %6512 = sext i32 %6511 to i64
  %6513 = getelementptr inbounds i32, i32* %4217, i64 %6512
  %6514 = extractelement <64 x i32> %t193290.us, i32 4
  %6515 = sext i32 %6514 to i64
  %6516 = getelementptr inbounds i32, i32* %4217, i64 %6515
  %6517 = extractelement <64 x i32> %t193290.us, i32 5
  %6518 = sext i32 %6517 to i64
  %6519 = getelementptr inbounds i32, i32* %4217, i64 %6518
  %6520 = extractelement <64 x i32> %t193290.us, i32 6
  %6521 = sext i32 %6520 to i64
  %6522 = getelementptr inbounds i32, i32* %4217, i64 %6521
  %6523 = extractelement <64 x i32> %t193290.us, i32 7
  %6524 = sext i32 %6523 to i64
  %6525 = getelementptr inbounds i32, i32* %4217, i64 %6524
  %6526 = extractelement <64 x i32> %t193290.us, i32 8
  %6527 = sext i32 %6526 to i64
  %6528 = getelementptr inbounds i32, i32* %4217, i64 %6527
  %6529 = extractelement <64 x i32> %t193290.us, i32 9
  %6530 = sext i32 %6529 to i64
  %6531 = getelementptr inbounds i32, i32* %4217, i64 %6530
  %6532 = extractelement <64 x i32> %t193290.us, i32 10
  %6533 = sext i32 %6532 to i64
  %6534 = getelementptr inbounds i32, i32* %4217, i64 %6533
  %6535 = extractelement <64 x i32> %t193290.us, i32 11
  %6536 = sext i32 %6535 to i64
  %6537 = getelementptr inbounds i32, i32* %4217, i64 %6536
  %6538 = extractelement <64 x i32> %t193290.us, i32 12
  %6539 = sext i32 %6538 to i64
  %6540 = getelementptr inbounds i32, i32* %4217, i64 %6539
  %6541 = extractelement <64 x i32> %t193290.us, i32 13
  %6542 = sext i32 %6541 to i64
  %6543 = getelementptr inbounds i32, i32* %4217, i64 %6542
  %6544 = extractelement <64 x i32> %t193290.us, i32 14
  %6545 = sext i32 %6544 to i64
  %6546 = getelementptr inbounds i32, i32* %4217, i64 %6545
  %6547 = extractelement <64 x i32> %t193290.us, i32 15
  %6548 = sext i32 %6547 to i64
  %6549 = getelementptr inbounds i32, i32* %4217, i64 %6548
  %6550 = extractelement <64 x i32> %t193290.us, i32 16
  %6551 = sext i32 %6550 to i64
  %6552 = getelementptr inbounds i32, i32* %4217, i64 %6551
  %6553 = extractelement <64 x i32> %t193290.us, i32 17
  %6554 = sext i32 %6553 to i64
  %6555 = getelementptr inbounds i32, i32* %4217, i64 %6554
  %6556 = extractelement <64 x i32> %t193290.us, i32 18
  %6557 = sext i32 %6556 to i64
  %6558 = getelementptr inbounds i32, i32* %4217, i64 %6557
  %6559 = extractelement <64 x i32> %t193290.us, i32 19
  %6560 = sext i32 %6559 to i64
  %6561 = getelementptr inbounds i32, i32* %4217, i64 %6560
  %6562 = extractelement <64 x i32> %t193290.us, i32 20
  %6563 = sext i32 %6562 to i64
  %6564 = getelementptr inbounds i32, i32* %4217, i64 %6563
  %6565 = extractelement <64 x i32> %t193290.us, i32 21
  %6566 = sext i32 %6565 to i64
  %6567 = getelementptr inbounds i32, i32* %4217, i64 %6566
  %6568 = extractelement <64 x i32> %t193290.us, i32 22
  %6569 = sext i32 %6568 to i64
  %6570 = getelementptr inbounds i32, i32* %4217, i64 %6569
  %6571 = extractelement <64 x i32> %t193290.us, i32 23
  %6572 = sext i32 %6571 to i64
  %6573 = getelementptr inbounds i32, i32* %4217, i64 %6572
  %6574 = extractelement <64 x i32> %t193290.us, i32 24
  %6575 = sext i32 %6574 to i64
  %6576 = getelementptr inbounds i32, i32* %4217, i64 %6575
  %6577 = extractelement <64 x i32> %t193290.us, i32 25
  %6578 = sext i32 %6577 to i64
  %6579 = getelementptr inbounds i32, i32* %4217, i64 %6578
  %6580 = extractelement <64 x i32> %t193290.us, i32 26
  %6581 = sext i32 %6580 to i64
  %6582 = getelementptr inbounds i32, i32* %4217, i64 %6581
  %6583 = extractelement <64 x i32> %t193290.us, i32 27
  %6584 = sext i32 %6583 to i64
  %6585 = getelementptr inbounds i32, i32* %4217, i64 %6584
  %6586 = extractelement <64 x i32> %t193290.us, i32 28
  %6587 = sext i32 %6586 to i64
  %6588 = getelementptr inbounds i32, i32* %4217, i64 %6587
  %6589 = extractelement <64 x i32> %t193290.us, i32 29
  %6590 = sext i32 %6589 to i64
  %6591 = getelementptr inbounds i32, i32* %4217, i64 %6590
  %6592 = extractelement <64 x i32> %t193290.us, i32 30
  %6593 = sext i32 %6592 to i64
  %6594 = getelementptr inbounds i32, i32* %4217, i64 %6593
  %6595 = extractelement <64 x i32> %t193290.us, i32 31
  %6596 = sext i32 %6595 to i64
  %6597 = getelementptr inbounds i32, i32* %4217, i64 %6596
  %6598 = extractelement <64 x i32> %t193290.us, i32 32
  %6599 = sext i32 %6598 to i64
  %6600 = getelementptr inbounds i32, i32* %4217, i64 %6599
  %6601 = extractelement <64 x i32> %t193290.us, i32 33
  %6602 = sext i32 %6601 to i64
  %6603 = getelementptr inbounds i32, i32* %4217, i64 %6602
  %6604 = extractelement <64 x i32> %t193290.us, i32 34
  %6605 = sext i32 %6604 to i64
  %6606 = getelementptr inbounds i32, i32* %4217, i64 %6605
  %6607 = extractelement <64 x i32> %t193290.us, i32 35
  %6608 = sext i32 %6607 to i64
  %6609 = getelementptr inbounds i32, i32* %4217, i64 %6608
  %6610 = extractelement <64 x i32> %t193290.us, i32 36
  %6611 = sext i32 %6610 to i64
  %6612 = getelementptr inbounds i32, i32* %4217, i64 %6611
  %6613 = extractelement <64 x i32> %t193290.us, i32 37
  %6614 = sext i32 %6613 to i64
  %6615 = getelementptr inbounds i32, i32* %4217, i64 %6614
  %6616 = extractelement <64 x i32> %t193290.us, i32 38
  %6617 = sext i32 %6616 to i64
  %6618 = getelementptr inbounds i32, i32* %4217, i64 %6617
  %6619 = extractelement <64 x i32> %t193290.us, i32 39
  %6620 = sext i32 %6619 to i64
  %6621 = getelementptr inbounds i32, i32* %4217, i64 %6620
  %6622 = extractelement <64 x i32> %t193290.us, i32 40
  %6623 = sext i32 %6622 to i64
  %6624 = getelementptr inbounds i32, i32* %4217, i64 %6623
  %6625 = extractelement <64 x i32> %t193290.us, i32 41
  %6626 = sext i32 %6625 to i64
  %6627 = getelementptr inbounds i32, i32* %4217, i64 %6626
  %6628 = extractelement <64 x i32> %t193290.us, i32 42
  %6629 = sext i32 %6628 to i64
  %6630 = getelementptr inbounds i32, i32* %4217, i64 %6629
  %6631 = extractelement <64 x i32> %t193290.us, i32 43
  %6632 = sext i32 %6631 to i64
  %6633 = getelementptr inbounds i32, i32* %4217, i64 %6632
  %6634 = extractelement <64 x i32> %t193290.us, i32 44
  %6635 = sext i32 %6634 to i64
  %6636 = getelementptr inbounds i32, i32* %4217, i64 %6635
  %6637 = extractelement <64 x i32> %t193290.us, i32 45
  %6638 = sext i32 %6637 to i64
  %6639 = getelementptr inbounds i32, i32* %4217, i64 %6638
  %6640 = extractelement <64 x i32> %t193290.us, i32 46
  %6641 = sext i32 %6640 to i64
  %6642 = getelementptr inbounds i32, i32* %4217, i64 %6641
  %6643 = extractelement <64 x i32> %t193290.us, i32 47
  %6644 = sext i32 %6643 to i64
  %6645 = getelementptr inbounds i32, i32* %4217, i64 %6644
  %6646 = extractelement <64 x i32> %t193290.us, i32 48
  %6647 = sext i32 %6646 to i64
  %6648 = getelementptr inbounds i32, i32* %4217, i64 %6647
  %6649 = extractelement <64 x i32> %t193290.us, i32 49
  %6650 = sext i32 %6649 to i64
  %6651 = getelementptr inbounds i32, i32* %4217, i64 %6650
  %6652 = extractelement <64 x i32> %t193290.us, i32 50
  %6653 = sext i32 %6652 to i64
  %6654 = getelementptr inbounds i32, i32* %4217, i64 %6653
  %6655 = extractelement <64 x i32> %t193290.us, i32 51
  %6656 = sext i32 %6655 to i64
  %6657 = getelementptr inbounds i32, i32* %4217, i64 %6656
  %6658 = extractelement <64 x i32> %t193290.us, i32 52
  %6659 = sext i32 %6658 to i64
  %6660 = getelementptr inbounds i32, i32* %4217, i64 %6659
  %6661 = extractelement <64 x i32> %t193290.us, i32 53
  %6662 = sext i32 %6661 to i64
  %6663 = getelementptr inbounds i32, i32* %4217, i64 %6662
  %6664 = extractelement <64 x i32> %t193290.us, i32 54
  %6665 = sext i32 %6664 to i64
  %6666 = getelementptr inbounds i32, i32* %4217, i64 %6665
  %6667 = extractelement <64 x i32> %t193290.us, i32 55
  %6668 = sext i32 %6667 to i64
  %6669 = getelementptr inbounds i32, i32* %4217, i64 %6668
  %6670 = extractelement <64 x i32> %t193290.us, i32 56
  %6671 = sext i32 %6670 to i64
  %6672 = getelementptr inbounds i32, i32* %4217, i64 %6671
  %6673 = extractelement <64 x i32> %t193290.us, i32 57
  %6674 = sext i32 %6673 to i64
  %6675 = getelementptr inbounds i32, i32* %4217, i64 %6674
  %6676 = extractelement <64 x i32> %t193290.us, i32 58
  %6677 = sext i32 %6676 to i64
  %6678 = getelementptr inbounds i32, i32* %4217, i64 %6677
  %6679 = extractelement <64 x i32> %t193290.us, i32 59
  %6680 = sext i32 %6679 to i64
  %6681 = getelementptr inbounds i32, i32* %4217, i64 %6680
  %6682 = extractelement <64 x i32> %t193290.us, i32 60
  %6683 = sext i32 %6682 to i64
  %6684 = getelementptr inbounds i32, i32* %4217, i64 %6683
  %6685 = extractelement <64 x i32> %t193290.us, i32 61
  %6686 = sext i32 %6685 to i64
  %6687 = getelementptr inbounds i32, i32* %4217, i64 %6686
  %6688 = extractelement <64 x i32> %t193290.us, i32 62
  %6689 = sext i32 %6688 to i64
  %6690 = getelementptr inbounds i32, i32* %4217, i64 %6689
  %6691 = extractelement <64 x i32> %t193290.us, i32 63
  %6692 = sext i32 %6691 to i64
  %6693 = getelementptr inbounds i32, i32* %4217, i64 %6692
  %6694 = add nsw <64 x i32> %t189286.us, %4219
  %6695 = mul nsw <64 x i32> %6694, %4221
  br label %"for Output.s1.r10$y278.us"

"for Output.s1.r10$y278.us":                      ; preds = %"end for Output.s1.r10$x284.loopexit.us", %"for Output.s1.r10$y278.preheader.split.us"
  %"Output.s1.r10$y280.us" = phi i32 [ %7589, %"end for Output.s1.r10$x284.loopexit.us" ], [ 0, %"for Output.s1.r10$y278.preheader.split.us" ]
  %t252281.us = mul nsw i32 %"Output.s1.r10$y280.us", %3810
  %t253282.us = sub nsw i32 %3886, %"Output.s1.r10$y280.us"
  %6696 = insertelement <64 x i32> undef, i32 %t253282.us, i32 0
  %6697 = shufflevector <64 x i32> %6696, <64 x i32> undef, <64 x i32> zeroinitializer
  %a125.us = add nsw <64 x i32> %t191288.us, %6697
  %6698 = shufflevector <64 x i32> %a125.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6699 = icmp sgt <16 x i32> %4228, %6698
  %6700 = shufflevector <64 x i32> %a125.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6701 = icmp sgt <16 x i32> %4228, %6700
  %6702 = shufflevector <64 x i32> %a125.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %6703 = icmp sgt <16 x i32> %4228, %6702
  %6704 = shufflevector <64 x i32> %a125.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %6705 = icmp sgt <16 x i32> %4228, %6704
  %6706 = select <16 x i1> %6699, <16 x i32> %6698, <16 x i32> %4228
  %6707 = select <16 x i1> %6701, <16 x i32> %6700, <16 x i32> %4228
  %6708 = select <16 x i1> %6703, <16 x i32> %6702, <16 x i32> %4228
  %6709 = select <16 x i1> %6705, <16 x i32> %6704, <16 x i32> %4228
  %6710 = icmp sgt <16 x i32> %6706, %4230
  %6711 = icmp sgt <16 x i32> %6707, %4230
  %6712 = icmp sgt <16 x i32> %6708, %4230
  %6713 = icmp sgt <16 x i32> %6709, %4230
  %6714 = select <16 x i1> %6710, <16 x i32> %6706, <16 x i32> %4230
  %6715 = select <16 x i1> %6711, <16 x i32> %6707, <16 x i32> %4230
  %6716 = select <16 x i1> %6712, <16 x i32> %6708, <16 x i32> %4230
  %6717 = select <16 x i1> %6713, <16 x i32> %6709, <16 x i32> %4230
  %6718 = shufflevector <16 x i32> %6714, <16 x i32> %6715, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6719 = shufflevector <16 x i32> %6716, <16 x i32> %6717, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6720 = shufflevector <32 x i32> %6718, <32 x i32> %6719, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %6721 = mul nsw <64 x i32> %6720, %4232
  br label %"for Output.s1.r10$x283.us"

"for Output.s1.r10$x283.us":                      ; preds = %"for Output.s1.r10$y278.us", %"for Output.s1.r10$x283.us"
  %"Output.s1.r10$x285.us" = phi i32 [ %7588, %"for Output.s1.r10$x283.us" ], [ 0, %"for Output.s1.r10$y278.us" ]
  %6722 = load i32, i32* %6504, align 4, !tbaa !399
  %6723 = insertelement <64 x i32> undef, i32 %6722, i32 0
  %6724 = load i32, i32* %6507, align 4, !tbaa !399
  %6725 = insertelement <64 x i32> %6723, i32 %6724, i32 1
  %6726 = load i32, i32* %6510, align 4, !tbaa !399
  %6727 = insertelement <64 x i32> %6725, i32 %6726, i32 2
  %6728 = load i32, i32* %6513, align 4, !tbaa !399
  %6729 = insertelement <64 x i32> %6727, i32 %6728, i32 3
  %6730 = load i32, i32* %6516, align 4, !tbaa !399
  %6731 = insertelement <64 x i32> %6729, i32 %6730, i32 4
  %6732 = load i32, i32* %6519, align 4, !tbaa !399
  %6733 = insertelement <64 x i32> %6731, i32 %6732, i32 5
  %6734 = load i32, i32* %6522, align 4, !tbaa !399
  %6735 = insertelement <64 x i32> %6733, i32 %6734, i32 6
  %6736 = load i32, i32* %6525, align 4, !tbaa !399
  %6737 = insertelement <64 x i32> %6735, i32 %6736, i32 7
  %6738 = load i32, i32* %6528, align 4, !tbaa !399
  %6739 = insertelement <64 x i32> %6737, i32 %6738, i32 8
  %6740 = load i32, i32* %6531, align 4, !tbaa !399
  %6741 = insertelement <64 x i32> %6739, i32 %6740, i32 9
  %6742 = load i32, i32* %6534, align 4, !tbaa !399
  %6743 = insertelement <64 x i32> %6741, i32 %6742, i32 10
  %6744 = load i32, i32* %6537, align 4, !tbaa !399
  %6745 = insertelement <64 x i32> %6743, i32 %6744, i32 11
  %6746 = load i32, i32* %6540, align 4, !tbaa !399
  %6747 = insertelement <64 x i32> %6745, i32 %6746, i32 12
  %6748 = load i32, i32* %6543, align 4, !tbaa !399
  %6749 = insertelement <64 x i32> %6747, i32 %6748, i32 13
  %6750 = load i32, i32* %6546, align 4, !tbaa !399
  %6751 = insertelement <64 x i32> %6749, i32 %6750, i32 14
  %6752 = load i32, i32* %6549, align 4, !tbaa !399
  %6753 = insertelement <64 x i32> %6751, i32 %6752, i32 15
  %6754 = load i32, i32* %6552, align 4, !tbaa !399
  %6755 = insertelement <64 x i32> %6753, i32 %6754, i32 16
  %6756 = load i32, i32* %6555, align 4, !tbaa !399
  %6757 = insertelement <64 x i32> %6755, i32 %6756, i32 17
  %6758 = load i32, i32* %6558, align 4, !tbaa !399
  %6759 = insertelement <64 x i32> %6757, i32 %6758, i32 18
  %6760 = load i32, i32* %6561, align 4, !tbaa !399
  %6761 = insertelement <64 x i32> %6759, i32 %6760, i32 19
  %6762 = load i32, i32* %6564, align 4, !tbaa !399
  %6763 = insertelement <64 x i32> %6761, i32 %6762, i32 20
  %6764 = load i32, i32* %6567, align 4, !tbaa !399
  %6765 = insertelement <64 x i32> %6763, i32 %6764, i32 21
  %6766 = load i32, i32* %6570, align 4, !tbaa !399
  %6767 = insertelement <64 x i32> %6765, i32 %6766, i32 22
  %6768 = load i32, i32* %6573, align 4, !tbaa !399
  %6769 = insertelement <64 x i32> %6767, i32 %6768, i32 23
  %6770 = load i32, i32* %6576, align 4, !tbaa !399
  %6771 = insertelement <64 x i32> %6769, i32 %6770, i32 24
  %6772 = load i32, i32* %6579, align 4, !tbaa !399
  %6773 = insertelement <64 x i32> %6771, i32 %6772, i32 25
  %6774 = load i32, i32* %6582, align 4, !tbaa !399
  %6775 = insertelement <64 x i32> %6773, i32 %6774, i32 26
  %6776 = load i32, i32* %6585, align 4, !tbaa !399
  %6777 = insertelement <64 x i32> %6775, i32 %6776, i32 27
  %6778 = load i32, i32* %6588, align 4, !tbaa !399
  %6779 = insertelement <64 x i32> %6777, i32 %6778, i32 28
  %6780 = load i32, i32* %6591, align 4, !tbaa !399
  %6781 = insertelement <64 x i32> %6779, i32 %6780, i32 29
  %6782 = load i32, i32* %6594, align 4, !tbaa !399
  %6783 = insertelement <64 x i32> %6781, i32 %6782, i32 30
  %6784 = load i32, i32* %6597, align 4, !tbaa !399
  %6785 = insertelement <64 x i32> %6783, i32 %6784, i32 31
  %6786 = load i32, i32* %6600, align 4, !tbaa !399
  %6787 = insertelement <64 x i32> %6785, i32 %6786, i32 32
  %6788 = load i32, i32* %6603, align 4, !tbaa !399
  %6789 = insertelement <64 x i32> %6787, i32 %6788, i32 33
  %6790 = load i32, i32* %6606, align 4, !tbaa !399
  %6791 = insertelement <64 x i32> %6789, i32 %6790, i32 34
  %6792 = load i32, i32* %6609, align 4, !tbaa !399
  %6793 = insertelement <64 x i32> %6791, i32 %6792, i32 35
  %6794 = load i32, i32* %6612, align 4, !tbaa !399
  %6795 = insertelement <64 x i32> %6793, i32 %6794, i32 36
  %6796 = load i32, i32* %6615, align 4, !tbaa !399
  %6797 = insertelement <64 x i32> %6795, i32 %6796, i32 37
  %6798 = load i32, i32* %6618, align 4, !tbaa !399
  %6799 = insertelement <64 x i32> %6797, i32 %6798, i32 38
  %6800 = load i32, i32* %6621, align 4, !tbaa !399
  %6801 = insertelement <64 x i32> %6799, i32 %6800, i32 39
  %6802 = load i32, i32* %6624, align 4, !tbaa !399
  %6803 = insertelement <64 x i32> %6801, i32 %6802, i32 40
  %6804 = load i32, i32* %6627, align 4, !tbaa !399
  %6805 = insertelement <64 x i32> %6803, i32 %6804, i32 41
  %6806 = load i32, i32* %6630, align 4, !tbaa !399
  %6807 = insertelement <64 x i32> %6805, i32 %6806, i32 42
  %6808 = load i32, i32* %6633, align 4, !tbaa !399
  %6809 = insertelement <64 x i32> %6807, i32 %6808, i32 43
  %6810 = load i32, i32* %6636, align 4, !tbaa !399
  %6811 = insertelement <64 x i32> %6809, i32 %6810, i32 44
  %6812 = load i32, i32* %6639, align 4, !tbaa !399
  %6813 = insertelement <64 x i32> %6811, i32 %6812, i32 45
  %6814 = load i32, i32* %6642, align 4, !tbaa !399
  %6815 = insertelement <64 x i32> %6813, i32 %6814, i32 46
  %6816 = load i32, i32* %6645, align 4, !tbaa !399
  %6817 = insertelement <64 x i32> %6815, i32 %6816, i32 47
  %6818 = load i32, i32* %6648, align 4, !tbaa !399
  %6819 = insertelement <64 x i32> %6817, i32 %6818, i32 48
  %6820 = load i32, i32* %6651, align 4, !tbaa !399
  %6821 = insertelement <64 x i32> %6819, i32 %6820, i32 49
  %6822 = load i32, i32* %6654, align 4, !tbaa !399
  %6823 = insertelement <64 x i32> %6821, i32 %6822, i32 50
  %6824 = load i32, i32* %6657, align 4, !tbaa !399
  %6825 = insertelement <64 x i32> %6823, i32 %6824, i32 51
  %6826 = load i32, i32* %6660, align 4, !tbaa !399
  %6827 = insertelement <64 x i32> %6825, i32 %6826, i32 52
  %6828 = load i32, i32* %6663, align 4, !tbaa !399
  %6829 = insertelement <64 x i32> %6827, i32 %6828, i32 53
  %6830 = load i32, i32* %6666, align 4, !tbaa !399
  %6831 = insertelement <64 x i32> %6829, i32 %6830, i32 54
  %6832 = load i32, i32* %6669, align 4, !tbaa !399
  %6833 = insertelement <64 x i32> %6831, i32 %6832, i32 55
  %6834 = load i32, i32* %6672, align 4, !tbaa !399
  %6835 = insertelement <64 x i32> %6833, i32 %6834, i32 56
  %6836 = load i32, i32* %6675, align 4, !tbaa !399
  %6837 = insertelement <64 x i32> %6835, i32 %6836, i32 57
  %6838 = load i32, i32* %6678, align 4, !tbaa !399
  %6839 = insertelement <64 x i32> %6837, i32 %6838, i32 58
  %6840 = load i32, i32* %6681, align 4, !tbaa !399
  %6841 = insertelement <64 x i32> %6839, i32 %6840, i32 59
  %6842 = load i32, i32* %6684, align 4, !tbaa !399
  %6843 = insertelement <64 x i32> %6841, i32 %6842, i32 60
  %6844 = load i32, i32* %6687, align 4, !tbaa !399
  %6845 = insertelement <64 x i32> %6843, i32 %6844, i32 61
  %6846 = load i32, i32* %6690, align 4, !tbaa !399
  %6847 = insertelement <64 x i32> %6845, i32 %6846, i32 62
  %6848 = load i32, i32* %6693, align 4, !tbaa !399
  %6849 = insertelement <64 x i32> %6847, i32 %6848, i32 63
  %6850 = add nsw i32 %"Output.s1.r10$x285.us", %t252281.us
  %6851 = insertelement <64 x i32> undef, i32 %6850, i32 0
  %6852 = shufflevector <64 x i32> %6851, <64 x i32> undef, <64 x i32> zeroinitializer
  %6853 = add nsw <64 x i32> %6695, %6852
  %6854 = extractelement <64 x i32> %6853, i32 0
  %6855 = sext i32 %6854 to i64
  %6856 = getelementptr inbounds i32, i32* %4222, i64 %6855
  %6857 = load i32, i32* %6856, align 4, !tbaa !402
  %6858 = insertelement <64 x i32> undef, i32 %6857, i32 0
  %6859 = extractelement <64 x i32> %6853, i32 1
  %6860 = sext i32 %6859 to i64
  %6861 = getelementptr inbounds i32, i32* %4222, i64 %6860
  %6862 = load i32, i32* %6861, align 4, !tbaa !402
  %6863 = insertelement <64 x i32> %6858, i32 %6862, i32 1
  %6864 = extractelement <64 x i32> %6853, i32 2
  %6865 = sext i32 %6864 to i64
  %6866 = getelementptr inbounds i32, i32* %4222, i64 %6865
  %6867 = load i32, i32* %6866, align 4, !tbaa !402
  %6868 = insertelement <64 x i32> %6863, i32 %6867, i32 2
  %6869 = extractelement <64 x i32> %6853, i32 3
  %6870 = sext i32 %6869 to i64
  %6871 = getelementptr inbounds i32, i32* %4222, i64 %6870
  %6872 = load i32, i32* %6871, align 4, !tbaa !402
  %6873 = insertelement <64 x i32> %6868, i32 %6872, i32 3
  %6874 = extractelement <64 x i32> %6853, i32 4
  %6875 = sext i32 %6874 to i64
  %6876 = getelementptr inbounds i32, i32* %4222, i64 %6875
  %6877 = load i32, i32* %6876, align 4, !tbaa !402
  %6878 = insertelement <64 x i32> %6873, i32 %6877, i32 4
  %6879 = extractelement <64 x i32> %6853, i32 5
  %6880 = sext i32 %6879 to i64
  %6881 = getelementptr inbounds i32, i32* %4222, i64 %6880
  %6882 = load i32, i32* %6881, align 4, !tbaa !402
  %6883 = insertelement <64 x i32> %6878, i32 %6882, i32 5
  %6884 = extractelement <64 x i32> %6853, i32 6
  %6885 = sext i32 %6884 to i64
  %6886 = getelementptr inbounds i32, i32* %4222, i64 %6885
  %6887 = load i32, i32* %6886, align 4, !tbaa !402
  %6888 = insertelement <64 x i32> %6883, i32 %6887, i32 6
  %6889 = extractelement <64 x i32> %6853, i32 7
  %6890 = sext i32 %6889 to i64
  %6891 = getelementptr inbounds i32, i32* %4222, i64 %6890
  %6892 = load i32, i32* %6891, align 4, !tbaa !402
  %6893 = insertelement <64 x i32> %6888, i32 %6892, i32 7
  %6894 = extractelement <64 x i32> %6853, i32 8
  %6895 = sext i32 %6894 to i64
  %6896 = getelementptr inbounds i32, i32* %4222, i64 %6895
  %6897 = load i32, i32* %6896, align 4, !tbaa !402
  %6898 = insertelement <64 x i32> %6893, i32 %6897, i32 8
  %6899 = extractelement <64 x i32> %6853, i32 9
  %6900 = sext i32 %6899 to i64
  %6901 = getelementptr inbounds i32, i32* %4222, i64 %6900
  %6902 = load i32, i32* %6901, align 4, !tbaa !402
  %6903 = insertelement <64 x i32> %6898, i32 %6902, i32 9
  %6904 = extractelement <64 x i32> %6853, i32 10
  %6905 = sext i32 %6904 to i64
  %6906 = getelementptr inbounds i32, i32* %4222, i64 %6905
  %6907 = load i32, i32* %6906, align 4, !tbaa !402
  %6908 = insertelement <64 x i32> %6903, i32 %6907, i32 10
  %6909 = extractelement <64 x i32> %6853, i32 11
  %6910 = sext i32 %6909 to i64
  %6911 = getelementptr inbounds i32, i32* %4222, i64 %6910
  %6912 = load i32, i32* %6911, align 4, !tbaa !402
  %6913 = insertelement <64 x i32> %6908, i32 %6912, i32 11
  %6914 = extractelement <64 x i32> %6853, i32 12
  %6915 = sext i32 %6914 to i64
  %6916 = getelementptr inbounds i32, i32* %4222, i64 %6915
  %6917 = load i32, i32* %6916, align 4, !tbaa !402
  %6918 = insertelement <64 x i32> %6913, i32 %6917, i32 12
  %6919 = extractelement <64 x i32> %6853, i32 13
  %6920 = sext i32 %6919 to i64
  %6921 = getelementptr inbounds i32, i32* %4222, i64 %6920
  %6922 = load i32, i32* %6921, align 4, !tbaa !402
  %6923 = insertelement <64 x i32> %6918, i32 %6922, i32 13
  %6924 = extractelement <64 x i32> %6853, i32 14
  %6925 = sext i32 %6924 to i64
  %6926 = getelementptr inbounds i32, i32* %4222, i64 %6925
  %6927 = load i32, i32* %6926, align 4, !tbaa !402
  %6928 = insertelement <64 x i32> %6923, i32 %6927, i32 14
  %6929 = extractelement <64 x i32> %6853, i32 15
  %6930 = sext i32 %6929 to i64
  %6931 = getelementptr inbounds i32, i32* %4222, i64 %6930
  %6932 = load i32, i32* %6931, align 4, !tbaa !402
  %6933 = insertelement <64 x i32> %6928, i32 %6932, i32 15
  %6934 = extractelement <64 x i32> %6853, i32 16
  %6935 = sext i32 %6934 to i64
  %6936 = getelementptr inbounds i32, i32* %4222, i64 %6935
  %6937 = load i32, i32* %6936, align 4, !tbaa !402
  %6938 = insertelement <64 x i32> %6933, i32 %6937, i32 16
  %6939 = extractelement <64 x i32> %6853, i32 17
  %6940 = sext i32 %6939 to i64
  %6941 = getelementptr inbounds i32, i32* %4222, i64 %6940
  %6942 = load i32, i32* %6941, align 4, !tbaa !402
  %6943 = insertelement <64 x i32> %6938, i32 %6942, i32 17
  %6944 = extractelement <64 x i32> %6853, i32 18
  %6945 = sext i32 %6944 to i64
  %6946 = getelementptr inbounds i32, i32* %4222, i64 %6945
  %6947 = load i32, i32* %6946, align 4, !tbaa !402
  %6948 = insertelement <64 x i32> %6943, i32 %6947, i32 18
  %6949 = extractelement <64 x i32> %6853, i32 19
  %6950 = sext i32 %6949 to i64
  %6951 = getelementptr inbounds i32, i32* %4222, i64 %6950
  %6952 = load i32, i32* %6951, align 4, !tbaa !402
  %6953 = insertelement <64 x i32> %6948, i32 %6952, i32 19
  %6954 = extractelement <64 x i32> %6853, i32 20
  %6955 = sext i32 %6954 to i64
  %6956 = getelementptr inbounds i32, i32* %4222, i64 %6955
  %6957 = load i32, i32* %6956, align 4, !tbaa !402
  %6958 = insertelement <64 x i32> %6953, i32 %6957, i32 20
  %6959 = extractelement <64 x i32> %6853, i32 21
  %6960 = sext i32 %6959 to i64
  %6961 = getelementptr inbounds i32, i32* %4222, i64 %6960
  %6962 = load i32, i32* %6961, align 4, !tbaa !402
  %6963 = insertelement <64 x i32> %6958, i32 %6962, i32 21
  %6964 = extractelement <64 x i32> %6853, i32 22
  %6965 = sext i32 %6964 to i64
  %6966 = getelementptr inbounds i32, i32* %4222, i64 %6965
  %6967 = load i32, i32* %6966, align 4, !tbaa !402
  %6968 = insertelement <64 x i32> %6963, i32 %6967, i32 22
  %6969 = extractelement <64 x i32> %6853, i32 23
  %6970 = sext i32 %6969 to i64
  %6971 = getelementptr inbounds i32, i32* %4222, i64 %6970
  %6972 = load i32, i32* %6971, align 4, !tbaa !402
  %6973 = insertelement <64 x i32> %6968, i32 %6972, i32 23
  %6974 = extractelement <64 x i32> %6853, i32 24
  %6975 = sext i32 %6974 to i64
  %6976 = getelementptr inbounds i32, i32* %4222, i64 %6975
  %6977 = load i32, i32* %6976, align 4, !tbaa !402
  %6978 = insertelement <64 x i32> %6973, i32 %6977, i32 24
  %6979 = extractelement <64 x i32> %6853, i32 25
  %6980 = sext i32 %6979 to i64
  %6981 = getelementptr inbounds i32, i32* %4222, i64 %6980
  %6982 = load i32, i32* %6981, align 4, !tbaa !402
  %6983 = insertelement <64 x i32> %6978, i32 %6982, i32 25
  %6984 = extractelement <64 x i32> %6853, i32 26
  %6985 = sext i32 %6984 to i64
  %6986 = getelementptr inbounds i32, i32* %4222, i64 %6985
  %6987 = load i32, i32* %6986, align 4, !tbaa !402
  %6988 = insertelement <64 x i32> %6983, i32 %6987, i32 26
  %6989 = extractelement <64 x i32> %6853, i32 27
  %6990 = sext i32 %6989 to i64
  %6991 = getelementptr inbounds i32, i32* %4222, i64 %6990
  %6992 = load i32, i32* %6991, align 4, !tbaa !402
  %6993 = insertelement <64 x i32> %6988, i32 %6992, i32 27
  %6994 = extractelement <64 x i32> %6853, i32 28
  %6995 = sext i32 %6994 to i64
  %6996 = getelementptr inbounds i32, i32* %4222, i64 %6995
  %6997 = load i32, i32* %6996, align 4, !tbaa !402
  %6998 = insertelement <64 x i32> %6993, i32 %6997, i32 28
  %6999 = extractelement <64 x i32> %6853, i32 29
  %7000 = sext i32 %6999 to i64
  %7001 = getelementptr inbounds i32, i32* %4222, i64 %7000
  %7002 = load i32, i32* %7001, align 4, !tbaa !402
  %7003 = insertelement <64 x i32> %6998, i32 %7002, i32 29
  %7004 = extractelement <64 x i32> %6853, i32 30
  %7005 = sext i32 %7004 to i64
  %7006 = getelementptr inbounds i32, i32* %4222, i64 %7005
  %7007 = load i32, i32* %7006, align 4, !tbaa !402
  %7008 = insertelement <64 x i32> %7003, i32 %7007, i32 30
  %7009 = extractelement <64 x i32> %6853, i32 31
  %7010 = sext i32 %7009 to i64
  %7011 = getelementptr inbounds i32, i32* %4222, i64 %7010
  %7012 = load i32, i32* %7011, align 4, !tbaa !402
  %7013 = insertelement <64 x i32> %7008, i32 %7012, i32 31
  %7014 = extractelement <64 x i32> %6853, i32 32
  %7015 = sext i32 %7014 to i64
  %7016 = getelementptr inbounds i32, i32* %4222, i64 %7015
  %7017 = load i32, i32* %7016, align 4, !tbaa !402
  %7018 = insertelement <64 x i32> %7013, i32 %7017, i32 32
  %7019 = extractelement <64 x i32> %6853, i32 33
  %7020 = sext i32 %7019 to i64
  %7021 = getelementptr inbounds i32, i32* %4222, i64 %7020
  %7022 = load i32, i32* %7021, align 4, !tbaa !402
  %7023 = insertelement <64 x i32> %7018, i32 %7022, i32 33
  %7024 = extractelement <64 x i32> %6853, i32 34
  %7025 = sext i32 %7024 to i64
  %7026 = getelementptr inbounds i32, i32* %4222, i64 %7025
  %7027 = load i32, i32* %7026, align 4, !tbaa !402
  %7028 = insertelement <64 x i32> %7023, i32 %7027, i32 34
  %7029 = extractelement <64 x i32> %6853, i32 35
  %7030 = sext i32 %7029 to i64
  %7031 = getelementptr inbounds i32, i32* %4222, i64 %7030
  %7032 = load i32, i32* %7031, align 4, !tbaa !402
  %7033 = insertelement <64 x i32> %7028, i32 %7032, i32 35
  %7034 = extractelement <64 x i32> %6853, i32 36
  %7035 = sext i32 %7034 to i64
  %7036 = getelementptr inbounds i32, i32* %4222, i64 %7035
  %7037 = load i32, i32* %7036, align 4, !tbaa !402
  %7038 = insertelement <64 x i32> %7033, i32 %7037, i32 36
  %7039 = extractelement <64 x i32> %6853, i32 37
  %7040 = sext i32 %7039 to i64
  %7041 = getelementptr inbounds i32, i32* %4222, i64 %7040
  %7042 = load i32, i32* %7041, align 4, !tbaa !402
  %7043 = insertelement <64 x i32> %7038, i32 %7042, i32 37
  %7044 = extractelement <64 x i32> %6853, i32 38
  %7045 = sext i32 %7044 to i64
  %7046 = getelementptr inbounds i32, i32* %4222, i64 %7045
  %7047 = load i32, i32* %7046, align 4, !tbaa !402
  %7048 = insertelement <64 x i32> %7043, i32 %7047, i32 38
  %7049 = extractelement <64 x i32> %6853, i32 39
  %7050 = sext i32 %7049 to i64
  %7051 = getelementptr inbounds i32, i32* %4222, i64 %7050
  %7052 = load i32, i32* %7051, align 4, !tbaa !402
  %7053 = insertelement <64 x i32> %7048, i32 %7052, i32 39
  %7054 = extractelement <64 x i32> %6853, i32 40
  %7055 = sext i32 %7054 to i64
  %7056 = getelementptr inbounds i32, i32* %4222, i64 %7055
  %7057 = load i32, i32* %7056, align 4, !tbaa !402
  %7058 = insertelement <64 x i32> %7053, i32 %7057, i32 40
  %7059 = extractelement <64 x i32> %6853, i32 41
  %7060 = sext i32 %7059 to i64
  %7061 = getelementptr inbounds i32, i32* %4222, i64 %7060
  %7062 = load i32, i32* %7061, align 4, !tbaa !402
  %7063 = insertelement <64 x i32> %7058, i32 %7062, i32 41
  %7064 = extractelement <64 x i32> %6853, i32 42
  %7065 = sext i32 %7064 to i64
  %7066 = getelementptr inbounds i32, i32* %4222, i64 %7065
  %7067 = load i32, i32* %7066, align 4, !tbaa !402
  %7068 = insertelement <64 x i32> %7063, i32 %7067, i32 42
  %7069 = extractelement <64 x i32> %6853, i32 43
  %7070 = sext i32 %7069 to i64
  %7071 = getelementptr inbounds i32, i32* %4222, i64 %7070
  %7072 = load i32, i32* %7071, align 4, !tbaa !402
  %7073 = insertelement <64 x i32> %7068, i32 %7072, i32 43
  %7074 = extractelement <64 x i32> %6853, i32 44
  %7075 = sext i32 %7074 to i64
  %7076 = getelementptr inbounds i32, i32* %4222, i64 %7075
  %7077 = load i32, i32* %7076, align 4, !tbaa !402
  %7078 = insertelement <64 x i32> %7073, i32 %7077, i32 44
  %7079 = extractelement <64 x i32> %6853, i32 45
  %7080 = sext i32 %7079 to i64
  %7081 = getelementptr inbounds i32, i32* %4222, i64 %7080
  %7082 = load i32, i32* %7081, align 4, !tbaa !402
  %7083 = insertelement <64 x i32> %7078, i32 %7082, i32 45
  %7084 = extractelement <64 x i32> %6853, i32 46
  %7085 = sext i32 %7084 to i64
  %7086 = getelementptr inbounds i32, i32* %4222, i64 %7085
  %7087 = load i32, i32* %7086, align 4, !tbaa !402
  %7088 = insertelement <64 x i32> %7083, i32 %7087, i32 46
  %7089 = extractelement <64 x i32> %6853, i32 47
  %7090 = sext i32 %7089 to i64
  %7091 = getelementptr inbounds i32, i32* %4222, i64 %7090
  %7092 = load i32, i32* %7091, align 4, !tbaa !402
  %7093 = insertelement <64 x i32> %7088, i32 %7092, i32 47
  %7094 = extractelement <64 x i32> %6853, i32 48
  %7095 = sext i32 %7094 to i64
  %7096 = getelementptr inbounds i32, i32* %4222, i64 %7095
  %7097 = load i32, i32* %7096, align 4, !tbaa !402
  %7098 = insertelement <64 x i32> %7093, i32 %7097, i32 48
  %7099 = extractelement <64 x i32> %6853, i32 49
  %7100 = sext i32 %7099 to i64
  %7101 = getelementptr inbounds i32, i32* %4222, i64 %7100
  %7102 = load i32, i32* %7101, align 4, !tbaa !402
  %7103 = insertelement <64 x i32> %7098, i32 %7102, i32 49
  %7104 = extractelement <64 x i32> %6853, i32 50
  %7105 = sext i32 %7104 to i64
  %7106 = getelementptr inbounds i32, i32* %4222, i64 %7105
  %7107 = load i32, i32* %7106, align 4, !tbaa !402
  %7108 = insertelement <64 x i32> %7103, i32 %7107, i32 50
  %7109 = extractelement <64 x i32> %6853, i32 51
  %7110 = sext i32 %7109 to i64
  %7111 = getelementptr inbounds i32, i32* %4222, i64 %7110
  %7112 = load i32, i32* %7111, align 4, !tbaa !402
  %7113 = insertelement <64 x i32> %7108, i32 %7112, i32 51
  %7114 = extractelement <64 x i32> %6853, i32 52
  %7115 = sext i32 %7114 to i64
  %7116 = getelementptr inbounds i32, i32* %4222, i64 %7115
  %7117 = load i32, i32* %7116, align 4, !tbaa !402
  %7118 = insertelement <64 x i32> %7113, i32 %7117, i32 52
  %7119 = extractelement <64 x i32> %6853, i32 53
  %7120 = sext i32 %7119 to i64
  %7121 = getelementptr inbounds i32, i32* %4222, i64 %7120
  %7122 = load i32, i32* %7121, align 4, !tbaa !402
  %7123 = insertelement <64 x i32> %7118, i32 %7122, i32 53
  %7124 = extractelement <64 x i32> %6853, i32 54
  %7125 = sext i32 %7124 to i64
  %7126 = getelementptr inbounds i32, i32* %4222, i64 %7125
  %7127 = load i32, i32* %7126, align 4, !tbaa !402
  %7128 = insertelement <64 x i32> %7123, i32 %7127, i32 54
  %7129 = extractelement <64 x i32> %6853, i32 55
  %7130 = sext i32 %7129 to i64
  %7131 = getelementptr inbounds i32, i32* %4222, i64 %7130
  %7132 = load i32, i32* %7131, align 4, !tbaa !402
  %7133 = insertelement <64 x i32> %7128, i32 %7132, i32 55
  %7134 = extractelement <64 x i32> %6853, i32 56
  %7135 = sext i32 %7134 to i64
  %7136 = getelementptr inbounds i32, i32* %4222, i64 %7135
  %7137 = load i32, i32* %7136, align 4, !tbaa !402
  %7138 = insertelement <64 x i32> %7133, i32 %7137, i32 56
  %7139 = extractelement <64 x i32> %6853, i32 57
  %7140 = sext i32 %7139 to i64
  %7141 = getelementptr inbounds i32, i32* %4222, i64 %7140
  %7142 = load i32, i32* %7141, align 4, !tbaa !402
  %7143 = insertelement <64 x i32> %7138, i32 %7142, i32 57
  %7144 = extractelement <64 x i32> %6853, i32 58
  %7145 = sext i32 %7144 to i64
  %7146 = getelementptr inbounds i32, i32* %4222, i64 %7145
  %7147 = load i32, i32* %7146, align 4, !tbaa !402
  %7148 = insertelement <64 x i32> %7143, i32 %7147, i32 58
  %7149 = extractelement <64 x i32> %6853, i32 59
  %7150 = sext i32 %7149 to i64
  %7151 = getelementptr inbounds i32, i32* %4222, i64 %7150
  %7152 = load i32, i32* %7151, align 4, !tbaa !402
  %7153 = insertelement <64 x i32> %7148, i32 %7152, i32 59
  %7154 = extractelement <64 x i32> %6853, i32 60
  %7155 = sext i32 %7154 to i64
  %7156 = getelementptr inbounds i32, i32* %4222, i64 %7155
  %7157 = load i32, i32* %7156, align 4, !tbaa !402
  %7158 = insertelement <64 x i32> %7153, i32 %7157, i32 60
  %7159 = extractelement <64 x i32> %6853, i32 61
  %7160 = sext i32 %7159 to i64
  %7161 = getelementptr inbounds i32, i32* %4222, i64 %7160
  %7162 = load i32, i32* %7161, align 4, !tbaa !402
  %7163 = insertelement <64 x i32> %7158, i32 %7162, i32 61
  %7164 = extractelement <64 x i32> %6853, i32 62
  %7165 = sext i32 %7164 to i64
  %7166 = getelementptr inbounds i32, i32* %4222, i64 %7165
  %7167 = load i32, i32* %7166, align 4, !tbaa !402
  %7168 = insertelement <64 x i32> %7163, i32 %7167, i32 62
  %7169 = extractelement <64 x i32> %6853, i32 63
  %7170 = sext i32 %7169 to i64
  %7171 = getelementptr inbounds i32, i32* %4222, i64 %7170
  %7172 = load i32, i32* %7171, align 4, !tbaa !402
  %7173 = insertelement <64 x i32> %7168, i32 %7172, i32 63
  %7174 = sub nsw i32 %3866, %"Output.s1.r10$x285.us"
  %7175 = insertelement <64 x i32> undef, i32 %7174, i32 0
  %7176 = shufflevector <64 x i32> %7175, <64 x i32> undef, <64 x i32> zeroinitializer
  %a123.us = add nsw <64 x i32> %t192289.us, %7176
  %7177 = shufflevector <64 x i32> %a123.us, <64 x i32> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7178 = icmp sgt <16 x i32> %4224, %7177
  %7179 = shufflevector <64 x i32> %a123.us, <64 x i32> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7180 = icmp sgt <16 x i32> %4224, %7179
  %7181 = shufflevector <64 x i32> %a123.us, <64 x i32> undef, <16 x i32> <i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47>
  %7182 = icmp sgt <16 x i32> %4224, %7181
  %7183 = shufflevector <64 x i32> %a123.us, <64 x i32> undef, <16 x i32> <i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %7184 = icmp sgt <16 x i32> %4224, %7183
  %7185 = select <16 x i1> %7178, <16 x i32> %7177, <16 x i32> %4224
  %7186 = select <16 x i1> %7180, <16 x i32> %7179, <16 x i32> %4224
  %7187 = select <16 x i1> %7182, <16 x i32> %7181, <16 x i32> %4224
  %7188 = select <16 x i1> %7184, <16 x i32> %7183, <16 x i32> %4224
  %7189 = icmp sgt <16 x i32> %7185, %4226
  %7190 = icmp sgt <16 x i32> %7186, %4226
  %7191 = icmp sgt <16 x i32> %7187, %4226
  %7192 = icmp sgt <16 x i32> %7188, %4226
  %7193 = select <16 x i1> %7189, <16 x i32> %7185, <16 x i32> %4226
  %7194 = select <16 x i1> %7190, <16 x i32> %7186, <16 x i32> %4226
  %7195 = select <16 x i1> %7191, <16 x i32> %7187, <16 x i32> %4226
  %7196 = select <16 x i1> %7192, <16 x i32> %7188, <16 x i32> %4226
  %7197 = shufflevector <16 x i32> %7193, <16 x i32> %7194, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7198 = shufflevector <16 x i32> %7195, <16 x i32> %7196, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7199 = shufflevector <32 x i32> %7197, <32 x i32> %7198, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %7200 = add <64 x i32> %7199, %6480
  %7201 = add <64 x i32> %7200, %6721
  %7202 = extractelement <64 x i32> %7201, i32 0
  %7203 = sext i32 %7202 to i64
  %7204 = getelementptr inbounds i32, i32* %4233, i64 %7203
  %7205 = load i32, i32* %7204, align 4, !tbaa !404
  %7206 = insertelement <64 x i32> undef, i32 %7205, i32 0
  %7207 = extractelement <64 x i32> %7201, i32 1
  %7208 = sext i32 %7207 to i64
  %7209 = getelementptr inbounds i32, i32* %4233, i64 %7208
  %7210 = load i32, i32* %7209, align 4, !tbaa !404
  %7211 = insertelement <64 x i32> %7206, i32 %7210, i32 1
  %7212 = extractelement <64 x i32> %7201, i32 2
  %7213 = sext i32 %7212 to i64
  %7214 = getelementptr inbounds i32, i32* %4233, i64 %7213
  %7215 = load i32, i32* %7214, align 4, !tbaa !404
  %7216 = insertelement <64 x i32> %7211, i32 %7215, i32 2
  %7217 = extractelement <64 x i32> %7201, i32 3
  %7218 = sext i32 %7217 to i64
  %7219 = getelementptr inbounds i32, i32* %4233, i64 %7218
  %7220 = load i32, i32* %7219, align 4, !tbaa !404
  %7221 = insertelement <64 x i32> %7216, i32 %7220, i32 3
  %7222 = extractelement <64 x i32> %7201, i32 4
  %7223 = sext i32 %7222 to i64
  %7224 = getelementptr inbounds i32, i32* %4233, i64 %7223
  %7225 = load i32, i32* %7224, align 4, !tbaa !404
  %7226 = insertelement <64 x i32> %7221, i32 %7225, i32 4
  %7227 = extractelement <64 x i32> %7201, i32 5
  %7228 = sext i32 %7227 to i64
  %7229 = getelementptr inbounds i32, i32* %4233, i64 %7228
  %7230 = load i32, i32* %7229, align 4, !tbaa !404
  %7231 = insertelement <64 x i32> %7226, i32 %7230, i32 5
  %7232 = extractelement <64 x i32> %7201, i32 6
  %7233 = sext i32 %7232 to i64
  %7234 = getelementptr inbounds i32, i32* %4233, i64 %7233
  %7235 = load i32, i32* %7234, align 4, !tbaa !404
  %7236 = insertelement <64 x i32> %7231, i32 %7235, i32 6
  %7237 = extractelement <64 x i32> %7201, i32 7
  %7238 = sext i32 %7237 to i64
  %7239 = getelementptr inbounds i32, i32* %4233, i64 %7238
  %7240 = load i32, i32* %7239, align 4, !tbaa !404
  %7241 = insertelement <64 x i32> %7236, i32 %7240, i32 7
  %7242 = extractelement <64 x i32> %7201, i32 8
  %7243 = sext i32 %7242 to i64
  %7244 = getelementptr inbounds i32, i32* %4233, i64 %7243
  %7245 = load i32, i32* %7244, align 4, !tbaa !404
  %7246 = insertelement <64 x i32> %7241, i32 %7245, i32 8
  %7247 = extractelement <64 x i32> %7201, i32 9
  %7248 = sext i32 %7247 to i64
  %7249 = getelementptr inbounds i32, i32* %4233, i64 %7248
  %7250 = load i32, i32* %7249, align 4, !tbaa !404
  %7251 = insertelement <64 x i32> %7246, i32 %7250, i32 9
  %7252 = extractelement <64 x i32> %7201, i32 10
  %7253 = sext i32 %7252 to i64
  %7254 = getelementptr inbounds i32, i32* %4233, i64 %7253
  %7255 = load i32, i32* %7254, align 4, !tbaa !404
  %7256 = insertelement <64 x i32> %7251, i32 %7255, i32 10
  %7257 = extractelement <64 x i32> %7201, i32 11
  %7258 = sext i32 %7257 to i64
  %7259 = getelementptr inbounds i32, i32* %4233, i64 %7258
  %7260 = load i32, i32* %7259, align 4, !tbaa !404
  %7261 = insertelement <64 x i32> %7256, i32 %7260, i32 11
  %7262 = extractelement <64 x i32> %7201, i32 12
  %7263 = sext i32 %7262 to i64
  %7264 = getelementptr inbounds i32, i32* %4233, i64 %7263
  %7265 = load i32, i32* %7264, align 4, !tbaa !404
  %7266 = insertelement <64 x i32> %7261, i32 %7265, i32 12
  %7267 = extractelement <64 x i32> %7201, i32 13
  %7268 = sext i32 %7267 to i64
  %7269 = getelementptr inbounds i32, i32* %4233, i64 %7268
  %7270 = load i32, i32* %7269, align 4, !tbaa !404
  %7271 = insertelement <64 x i32> %7266, i32 %7270, i32 13
  %7272 = extractelement <64 x i32> %7201, i32 14
  %7273 = sext i32 %7272 to i64
  %7274 = getelementptr inbounds i32, i32* %4233, i64 %7273
  %7275 = load i32, i32* %7274, align 4, !tbaa !404
  %7276 = insertelement <64 x i32> %7271, i32 %7275, i32 14
  %7277 = extractelement <64 x i32> %7201, i32 15
  %7278 = sext i32 %7277 to i64
  %7279 = getelementptr inbounds i32, i32* %4233, i64 %7278
  %7280 = load i32, i32* %7279, align 4, !tbaa !404
  %7281 = insertelement <64 x i32> %7276, i32 %7280, i32 15
  %7282 = extractelement <64 x i32> %7201, i32 16
  %7283 = sext i32 %7282 to i64
  %7284 = getelementptr inbounds i32, i32* %4233, i64 %7283
  %7285 = load i32, i32* %7284, align 4, !tbaa !404
  %7286 = insertelement <64 x i32> %7281, i32 %7285, i32 16
  %7287 = extractelement <64 x i32> %7201, i32 17
  %7288 = sext i32 %7287 to i64
  %7289 = getelementptr inbounds i32, i32* %4233, i64 %7288
  %7290 = load i32, i32* %7289, align 4, !tbaa !404
  %7291 = insertelement <64 x i32> %7286, i32 %7290, i32 17
  %7292 = extractelement <64 x i32> %7201, i32 18
  %7293 = sext i32 %7292 to i64
  %7294 = getelementptr inbounds i32, i32* %4233, i64 %7293
  %7295 = load i32, i32* %7294, align 4, !tbaa !404
  %7296 = insertelement <64 x i32> %7291, i32 %7295, i32 18
  %7297 = extractelement <64 x i32> %7201, i32 19
  %7298 = sext i32 %7297 to i64
  %7299 = getelementptr inbounds i32, i32* %4233, i64 %7298
  %7300 = load i32, i32* %7299, align 4, !tbaa !404
  %7301 = insertelement <64 x i32> %7296, i32 %7300, i32 19
  %7302 = extractelement <64 x i32> %7201, i32 20
  %7303 = sext i32 %7302 to i64
  %7304 = getelementptr inbounds i32, i32* %4233, i64 %7303
  %7305 = load i32, i32* %7304, align 4, !tbaa !404
  %7306 = insertelement <64 x i32> %7301, i32 %7305, i32 20
  %7307 = extractelement <64 x i32> %7201, i32 21
  %7308 = sext i32 %7307 to i64
  %7309 = getelementptr inbounds i32, i32* %4233, i64 %7308
  %7310 = load i32, i32* %7309, align 4, !tbaa !404
  %7311 = insertelement <64 x i32> %7306, i32 %7310, i32 21
  %7312 = extractelement <64 x i32> %7201, i32 22
  %7313 = sext i32 %7312 to i64
  %7314 = getelementptr inbounds i32, i32* %4233, i64 %7313
  %7315 = load i32, i32* %7314, align 4, !tbaa !404
  %7316 = insertelement <64 x i32> %7311, i32 %7315, i32 22
  %7317 = extractelement <64 x i32> %7201, i32 23
  %7318 = sext i32 %7317 to i64
  %7319 = getelementptr inbounds i32, i32* %4233, i64 %7318
  %7320 = load i32, i32* %7319, align 4, !tbaa !404
  %7321 = insertelement <64 x i32> %7316, i32 %7320, i32 23
  %7322 = extractelement <64 x i32> %7201, i32 24
  %7323 = sext i32 %7322 to i64
  %7324 = getelementptr inbounds i32, i32* %4233, i64 %7323
  %7325 = load i32, i32* %7324, align 4, !tbaa !404
  %7326 = insertelement <64 x i32> %7321, i32 %7325, i32 24
  %7327 = extractelement <64 x i32> %7201, i32 25
  %7328 = sext i32 %7327 to i64
  %7329 = getelementptr inbounds i32, i32* %4233, i64 %7328
  %7330 = load i32, i32* %7329, align 4, !tbaa !404
  %7331 = insertelement <64 x i32> %7326, i32 %7330, i32 25
  %7332 = extractelement <64 x i32> %7201, i32 26
  %7333 = sext i32 %7332 to i64
  %7334 = getelementptr inbounds i32, i32* %4233, i64 %7333
  %7335 = load i32, i32* %7334, align 4, !tbaa !404
  %7336 = insertelement <64 x i32> %7331, i32 %7335, i32 26
  %7337 = extractelement <64 x i32> %7201, i32 27
  %7338 = sext i32 %7337 to i64
  %7339 = getelementptr inbounds i32, i32* %4233, i64 %7338
  %7340 = load i32, i32* %7339, align 4, !tbaa !404
  %7341 = insertelement <64 x i32> %7336, i32 %7340, i32 27
  %7342 = extractelement <64 x i32> %7201, i32 28
  %7343 = sext i32 %7342 to i64
  %7344 = getelementptr inbounds i32, i32* %4233, i64 %7343
  %7345 = load i32, i32* %7344, align 4, !tbaa !404
  %7346 = insertelement <64 x i32> %7341, i32 %7345, i32 28
  %7347 = extractelement <64 x i32> %7201, i32 29
  %7348 = sext i32 %7347 to i64
  %7349 = getelementptr inbounds i32, i32* %4233, i64 %7348
  %7350 = load i32, i32* %7349, align 4, !tbaa !404
  %7351 = insertelement <64 x i32> %7346, i32 %7350, i32 29
  %7352 = extractelement <64 x i32> %7201, i32 30
  %7353 = sext i32 %7352 to i64
  %7354 = getelementptr inbounds i32, i32* %4233, i64 %7353
  %7355 = load i32, i32* %7354, align 4, !tbaa !404
  %7356 = insertelement <64 x i32> %7351, i32 %7355, i32 30
  %7357 = extractelement <64 x i32> %7201, i32 31
  %7358 = sext i32 %7357 to i64
  %7359 = getelementptr inbounds i32, i32* %4233, i64 %7358
  %7360 = load i32, i32* %7359, align 4, !tbaa !404
  %7361 = insertelement <64 x i32> %7356, i32 %7360, i32 31
  %7362 = extractelement <64 x i32> %7201, i32 32
  %7363 = sext i32 %7362 to i64
  %7364 = getelementptr inbounds i32, i32* %4233, i64 %7363
  %7365 = load i32, i32* %7364, align 4, !tbaa !404
  %7366 = insertelement <64 x i32> %7361, i32 %7365, i32 32
  %7367 = extractelement <64 x i32> %7201, i32 33
  %7368 = sext i32 %7367 to i64
  %7369 = getelementptr inbounds i32, i32* %4233, i64 %7368
  %7370 = load i32, i32* %7369, align 4, !tbaa !404
  %7371 = insertelement <64 x i32> %7366, i32 %7370, i32 33
  %7372 = extractelement <64 x i32> %7201, i32 34
  %7373 = sext i32 %7372 to i64
  %7374 = getelementptr inbounds i32, i32* %4233, i64 %7373
  %7375 = load i32, i32* %7374, align 4, !tbaa !404
  %7376 = insertelement <64 x i32> %7371, i32 %7375, i32 34
  %7377 = extractelement <64 x i32> %7201, i32 35
  %7378 = sext i32 %7377 to i64
  %7379 = getelementptr inbounds i32, i32* %4233, i64 %7378
  %7380 = load i32, i32* %7379, align 4, !tbaa !404
  %7381 = insertelement <64 x i32> %7376, i32 %7380, i32 35
  %7382 = extractelement <64 x i32> %7201, i32 36
  %7383 = sext i32 %7382 to i64
  %7384 = getelementptr inbounds i32, i32* %4233, i64 %7383
  %7385 = load i32, i32* %7384, align 4, !tbaa !404
  %7386 = insertelement <64 x i32> %7381, i32 %7385, i32 36
  %7387 = extractelement <64 x i32> %7201, i32 37
  %7388 = sext i32 %7387 to i64
  %7389 = getelementptr inbounds i32, i32* %4233, i64 %7388
  %7390 = load i32, i32* %7389, align 4, !tbaa !404
  %7391 = insertelement <64 x i32> %7386, i32 %7390, i32 37
  %7392 = extractelement <64 x i32> %7201, i32 38
  %7393 = sext i32 %7392 to i64
  %7394 = getelementptr inbounds i32, i32* %4233, i64 %7393
  %7395 = load i32, i32* %7394, align 4, !tbaa !404
  %7396 = insertelement <64 x i32> %7391, i32 %7395, i32 38
  %7397 = extractelement <64 x i32> %7201, i32 39
  %7398 = sext i32 %7397 to i64
  %7399 = getelementptr inbounds i32, i32* %4233, i64 %7398
  %7400 = load i32, i32* %7399, align 4, !tbaa !404
  %7401 = insertelement <64 x i32> %7396, i32 %7400, i32 39
  %7402 = extractelement <64 x i32> %7201, i32 40
  %7403 = sext i32 %7402 to i64
  %7404 = getelementptr inbounds i32, i32* %4233, i64 %7403
  %7405 = load i32, i32* %7404, align 4, !tbaa !404
  %7406 = insertelement <64 x i32> %7401, i32 %7405, i32 40
  %7407 = extractelement <64 x i32> %7201, i32 41
  %7408 = sext i32 %7407 to i64
  %7409 = getelementptr inbounds i32, i32* %4233, i64 %7408
  %7410 = load i32, i32* %7409, align 4, !tbaa !404
  %7411 = insertelement <64 x i32> %7406, i32 %7410, i32 41
  %7412 = extractelement <64 x i32> %7201, i32 42
  %7413 = sext i32 %7412 to i64
  %7414 = getelementptr inbounds i32, i32* %4233, i64 %7413
  %7415 = load i32, i32* %7414, align 4, !tbaa !404
  %7416 = insertelement <64 x i32> %7411, i32 %7415, i32 42
  %7417 = extractelement <64 x i32> %7201, i32 43
  %7418 = sext i32 %7417 to i64
  %7419 = getelementptr inbounds i32, i32* %4233, i64 %7418
  %7420 = load i32, i32* %7419, align 4, !tbaa !404
  %7421 = insertelement <64 x i32> %7416, i32 %7420, i32 43
  %7422 = extractelement <64 x i32> %7201, i32 44
  %7423 = sext i32 %7422 to i64
  %7424 = getelementptr inbounds i32, i32* %4233, i64 %7423
  %7425 = load i32, i32* %7424, align 4, !tbaa !404
  %7426 = insertelement <64 x i32> %7421, i32 %7425, i32 44
  %7427 = extractelement <64 x i32> %7201, i32 45
  %7428 = sext i32 %7427 to i64
  %7429 = getelementptr inbounds i32, i32* %4233, i64 %7428
  %7430 = load i32, i32* %7429, align 4, !tbaa !404
  %7431 = insertelement <64 x i32> %7426, i32 %7430, i32 45
  %7432 = extractelement <64 x i32> %7201, i32 46
  %7433 = sext i32 %7432 to i64
  %7434 = getelementptr inbounds i32, i32* %4233, i64 %7433
  %7435 = load i32, i32* %7434, align 4, !tbaa !404
  %7436 = insertelement <64 x i32> %7431, i32 %7435, i32 46
  %7437 = extractelement <64 x i32> %7201, i32 47
  %7438 = sext i32 %7437 to i64
  %7439 = getelementptr inbounds i32, i32* %4233, i64 %7438
  %7440 = load i32, i32* %7439, align 4, !tbaa !404
  %7441 = insertelement <64 x i32> %7436, i32 %7440, i32 47
  %7442 = extractelement <64 x i32> %7201, i32 48
  %7443 = sext i32 %7442 to i64
  %7444 = getelementptr inbounds i32, i32* %4233, i64 %7443
  %7445 = load i32, i32* %7444, align 4, !tbaa !404
  %7446 = insertelement <64 x i32> %7441, i32 %7445, i32 48
  %7447 = extractelement <64 x i32> %7201, i32 49
  %7448 = sext i32 %7447 to i64
  %7449 = getelementptr inbounds i32, i32* %4233, i64 %7448
  %7450 = load i32, i32* %7449, align 4, !tbaa !404
  %7451 = insertelement <64 x i32> %7446, i32 %7450, i32 49
  %7452 = extractelement <64 x i32> %7201, i32 50
  %7453 = sext i32 %7452 to i64
  %7454 = getelementptr inbounds i32, i32* %4233, i64 %7453
  %7455 = load i32, i32* %7454, align 4, !tbaa !404
  %7456 = insertelement <64 x i32> %7451, i32 %7455, i32 50
  %7457 = extractelement <64 x i32> %7201, i32 51
  %7458 = sext i32 %7457 to i64
  %7459 = getelementptr inbounds i32, i32* %4233, i64 %7458
  %7460 = load i32, i32* %7459, align 4, !tbaa !404
  %7461 = insertelement <64 x i32> %7456, i32 %7460, i32 51
  %7462 = extractelement <64 x i32> %7201, i32 52
  %7463 = sext i32 %7462 to i64
  %7464 = getelementptr inbounds i32, i32* %4233, i64 %7463
  %7465 = load i32, i32* %7464, align 4, !tbaa !404
  %7466 = insertelement <64 x i32> %7461, i32 %7465, i32 52
  %7467 = extractelement <64 x i32> %7201, i32 53
  %7468 = sext i32 %7467 to i64
  %7469 = getelementptr inbounds i32, i32* %4233, i64 %7468
  %7470 = load i32, i32* %7469, align 4, !tbaa !404
  %7471 = insertelement <64 x i32> %7466, i32 %7470, i32 53
  %7472 = extractelement <64 x i32> %7201, i32 54
  %7473 = sext i32 %7472 to i64
  %7474 = getelementptr inbounds i32, i32* %4233, i64 %7473
  %7475 = load i32, i32* %7474, align 4, !tbaa !404
  %7476 = insertelement <64 x i32> %7471, i32 %7475, i32 54
  %7477 = extractelement <64 x i32> %7201, i32 55
  %7478 = sext i32 %7477 to i64
  %7479 = getelementptr inbounds i32, i32* %4233, i64 %7478
  %7480 = load i32, i32* %7479, align 4, !tbaa !404
  %7481 = insertelement <64 x i32> %7476, i32 %7480, i32 55
  %7482 = extractelement <64 x i32> %7201, i32 56
  %7483 = sext i32 %7482 to i64
  %7484 = getelementptr inbounds i32, i32* %4233, i64 %7483
  %7485 = load i32, i32* %7484, align 4, !tbaa !404
  %7486 = insertelement <64 x i32> %7481, i32 %7485, i32 56
  %7487 = extractelement <64 x i32> %7201, i32 57
  %7488 = sext i32 %7487 to i64
  %7489 = getelementptr inbounds i32, i32* %4233, i64 %7488
  %7490 = load i32, i32* %7489, align 4, !tbaa !404
  %7491 = insertelement <64 x i32> %7486, i32 %7490, i32 57
  %7492 = extractelement <64 x i32> %7201, i32 58
  %7493 = sext i32 %7492 to i64
  %7494 = getelementptr inbounds i32, i32* %4233, i64 %7493
  %7495 = load i32, i32* %7494, align 4, !tbaa !404
  %7496 = insertelement <64 x i32> %7491, i32 %7495, i32 58
  %7497 = extractelement <64 x i32> %7201, i32 59
  %7498 = sext i32 %7497 to i64
  %7499 = getelementptr inbounds i32, i32* %4233, i64 %7498
  %7500 = load i32, i32* %7499, align 4, !tbaa !404
  %7501 = insertelement <64 x i32> %7496, i32 %7500, i32 59
  %7502 = extractelement <64 x i32> %7201, i32 60
  %7503 = sext i32 %7502 to i64
  %7504 = getelementptr inbounds i32, i32* %4233, i64 %7503
  %7505 = load i32, i32* %7504, align 4, !tbaa !404
  %7506 = insertelement <64 x i32> %7501, i32 %7505, i32 60
  %7507 = extractelement <64 x i32> %7201, i32 61
  %7508 = sext i32 %7507 to i64
  %7509 = getelementptr inbounds i32, i32* %4233, i64 %7508
  %7510 = load i32, i32* %7509, align 4, !tbaa !404
  %7511 = insertelement <64 x i32> %7506, i32 %7510, i32 61
  %7512 = extractelement <64 x i32> %7201, i32 62
  %7513 = sext i32 %7512 to i64
  %7514 = getelementptr inbounds i32, i32* %4233, i64 %7513
  %7515 = load i32, i32* %7514, align 4, !tbaa !404
  %7516 = insertelement <64 x i32> %7511, i32 %7515, i32 62
  %7517 = extractelement <64 x i32> %7201, i32 63
  %7518 = sext i32 %7517 to i64
  %7519 = getelementptr inbounds i32, i32* %4233, i64 %7518
  %7520 = load i32, i32* %7519, align 4, !tbaa !404
  %7521 = insertelement <64 x i32> %7516, i32 %7520, i32 63
  %7522 = mul nsw <64 x i32> %7521, %7173
  %7523 = add nsw <64 x i32> %7522, %6849
  %7524 = extractelement <64 x i32> %7523, i32 0
  store i32 %7524, i32* %6504, align 4, !tbaa !399
  %7525 = extractelement <64 x i32> %7523, i32 1
  store i32 %7525, i32* %6507, align 4, !tbaa !399
  %7526 = extractelement <64 x i32> %7523, i32 2
  store i32 %7526, i32* %6510, align 4, !tbaa !399
  %7527 = extractelement <64 x i32> %7523, i32 3
  store i32 %7527, i32* %6513, align 4, !tbaa !399
  %7528 = extractelement <64 x i32> %7523, i32 4
  store i32 %7528, i32* %6516, align 4, !tbaa !399
  %7529 = extractelement <64 x i32> %7523, i32 5
  store i32 %7529, i32* %6519, align 4, !tbaa !399
  %7530 = extractelement <64 x i32> %7523, i32 6
  store i32 %7530, i32* %6522, align 4, !tbaa !399
  %7531 = extractelement <64 x i32> %7523, i32 7
  store i32 %7531, i32* %6525, align 4, !tbaa !399
  %7532 = extractelement <64 x i32> %7523, i32 8
  store i32 %7532, i32* %6528, align 4, !tbaa !399
  %7533 = extractelement <64 x i32> %7523, i32 9
  store i32 %7533, i32* %6531, align 4, !tbaa !399
  %7534 = extractelement <64 x i32> %7523, i32 10
  store i32 %7534, i32* %6534, align 4, !tbaa !399
  %7535 = extractelement <64 x i32> %7523, i32 11
  store i32 %7535, i32* %6537, align 4, !tbaa !399
  %7536 = extractelement <64 x i32> %7523, i32 12
  store i32 %7536, i32* %6540, align 4, !tbaa !399
  %7537 = extractelement <64 x i32> %7523, i32 13
  store i32 %7537, i32* %6543, align 4, !tbaa !399
  %7538 = extractelement <64 x i32> %7523, i32 14
  store i32 %7538, i32* %6546, align 4, !tbaa !399
  %7539 = extractelement <64 x i32> %7523, i32 15
  store i32 %7539, i32* %6549, align 4, !tbaa !399
  %7540 = extractelement <64 x i32> %7523, i32 16
  store i32 %7540, i32* %6552, align 4, !tbaa !399
  %7541 = extractelement <64 x i32> %7523, i32 17
  store i32 %7541, i32* %6555, align 4, !tbaa !399
  %7542 = extractelement <64 x i32> %7523, i32 18
  store i32 %7542, i32* %6558, align 4, !tbaa !399
  %7543 = extractelement <64 x i32> %7523, i32 19
  store i32 %7543, i32* %6561, align 4, !tbaa !399
  %7544 = extractelement <64 x i32> %7523, i32 20
  store i32 %7544, i32* %6564, align 4, !tbaa !399
  %7545 = extractelement <64 x i32> %7523, i32 21
  store i32 %7545, i32* %6567, align 4, !tbaa !399
  %7546 = extractelement <64 x i32> %7523, i32 22
  store i32 %7546, i32* %6570, align 4, !tbaa !399
  %7547 = extractelement <64 x i32> %7523, i32 23
  store i32 %7547, i32* %6573, align 4, !tbaa !399
  %7548 = extractelement <64 x i32> %7523, i32 24
  store i32 %7548, i32* %6576, align 4, !tbaa !399
  %7549 = extractelement <64 x i32> %7523, i32 25
  store i32 %7549, i32* %6579, align 4, !tbaa !399
  %7550 = extractelement <64 x i32> %7523, i32 26
  store i32 %7550, i32* %6582, align 4, !tbaa !399
  %7551 = extractelement <64 x i32> %7523, i32 27
  store i32 %7551, i32* %6585, align 4, !tbaa !399
  %7552 = extractelement <64 x i32> %7523, i32 28
  store i32 %7552, i32* %6588, align 4, !tbaa !399
  %7553 = extractelement <64 x i32> %7523, i32 29
  store i32 %7553, i32* %6591, align 4, !tbaa !399
  %7554 = extractelement <64 x i32> %7523, i32 30
  store i32 %7554, i32* %6594, align 4, !tbaa !399
  %7555 = extractelement <64 x i32> %7523, i32 31
  store i32 %7555, i32* %6597, align 4, !tbaa !399
  %7556 = extractelement <64 x i32> %7523, i32 32
  store i32 %7556, i32* %6600, align 4, !tbaa !399
  %7557 = extractelement <64 x i32> %7523, i32 33
  store i32 %7557, i32* %6603, align 4, !tbaa !399
  %7558 = extractelement <64 x i32> %7523, i32 34
  store i32 %7558, i32* %6606, align 4, !tbaa !399
  %7559 = extractelement <64 x i32> %7523, i32 35
  store i32 %7559, i32* %6609, align 4, !tbaa !399
  %7560 = extractelement <64 x i32> %7523, i32 36
  store i32 %7560, i32* %6612, align 4, !tbaa !399
  %7561 = extractelement <64 x i32> %7523, i32 37
  store i32 %7561, i32* %6615, align 4, !tbaa !399
  %7562 = extractelement <64 x i32> %7523, i32 38
  store i32 %7562, i32* %6618, align 4, !tbaa !399
  %7563 = extractelement <64 x i32> %7523, i32 39
  store i32 %7563, i32* %6621, align 4, !tbaa !399
  %7564 = extractelement <64 x i32> %7523, i32 40
  store i32 %7564, i32* %6624, align 4, !tbaa !399
  %7565 = extractelement <64 x i32> %7523, i32 41
  store i32 %7565, i32* %6627, align 4, !tbaa !399
  %7566 = extractelement <64 x i32> %7523, i32 42
  store i32 %7566, i32* %6630, align 4, !tbaa !399
  %7567 = extractelement <64 x i32> %7523, i32 43
  store i32 %7567, i32* %6633, align 4, !tbaa !399
  %7568 = extractelement <64 x i32> %7523, i32 44
  store i32 %7568, i32* %6636, align 4, !tbaa !399
  %7569 = extractelement <64 x i32> %7523, i32 45
  store i32 %7569, i32* %6639, align 4, !tbaa !399
  %7570 = extractelement <64 x i32> %7523, i32 46
  store i32 %7570, i32* %6642, align 4, !tbaa !399
  %7571 = extractelement <64 x i32> %7523, i32 47
  store i32 %7571, i32* %6645, align 4, !tbaa !399
  %7572 = extractelement <64 x i32> %7523, i32 48
  store i32 %7572, i32* %6648, align 4, !tbaa !399
  %7573 = extractelement <64 x i32> %7523, i32 49
  store i32 %7573, i32* %6651, align 4, !tbaa !399
  %7574 = extractelement <64 x i32> %7523, i32 50
  store i32 %7574, i32* %6654, align 4, !tbaa !399
  %7575 = extractelement <64 x i32> %7523, i32 51
  store i32 %7575, i32* %6657, align 4, !tbaa !399
  %7576 = extractelement <64 x i32> %7523, i32 52
  store i32 %7576, i32* %6660, align 4, !tbaa !399
  %7577 = extractelement <64 x i32> %7523, i32 53
  store i32 %7577, i32* %6663, align 4, !tbaa !399
  %7578 = extractelement <64 x i32> %7523, i32 54
  store i32 %7578, i32* %6666, align 4, !tbaa !399
  %7579 = extractelement <64 x i32> %7523, i32 55
  store i32 %7579, i32* %6669, align 4, !tbaa !399
  %7580 = extractelement <64 x i32> %7523, i32 56
  store i32 %7580, i32* %6672, align 4, !tbaa !399
  %7581 = extractelement <64 x i32> %7523, i32 57
  store i32 %7581, i32* %6675, align 4, !tbaa !399
  %7582 = extractelement <64 x i32> %7523, i32 58
  store i32 %7582, i32* %6678, align 4, !tbaa !399
  %7583 = extractelement <64 x i32> %7523, i32 59
  store i32 %7583, i32* %6681, align 4, !tbaa !399
  %7584 = extractelement <64 x i32> %7523, i32 60
  store i32 %7584, i32* %6684, align 4, !tbaa !399
  %7585 = extractelement <64 x i32> %7523, i32 61
  store i32 %7585, i32* %6687, align 4, !tbaa !399
  %7586 = extractelement <64 x i32> %7523, i32 62
  store i32 %7586, i32* %6690, align 4, !tbaa !399
  %7587 = extractelement <64 x i32> %7523, i32 63
  store i32 %7587, i32* %6693, align 4, !tbaa !399
  %7588 = add nuw nsw i32 %"Output.s1.r10$x285.us", 1
  %.not342.us = icmp eq i32 %7588, %3806
  br i1 %.not342.us, label %"end for Output.s1.r10$x284.loopexit.us", label %"for Output.s1.r10$x283.us"

"end for Output.s1.r10$x284.loopexit.us":         ; preds = %"for Output.s1.r10$x283.us"
  %7589 = add nuw nsw i32 %"Output.s1.r10$y280.us", 1
  %.not338.us = icmp eq i32 %7589, %3809
  br i1 %.not338.us, label %"end for Output.s1.r10$y279", label %"for Output.s1.r10$y278.us"

"end for Output.s1.r10$z.rebased275":             ; preds = %"end for Output.s1.r10$y279", %"end for Output.s1.r10$z.rebased255"
  %7590 = add nuw nsw i32 %Output.s1.x.x.x.x232, 1
  %.not336 = icmp eq i32 %7590, %t225222
  br i1 %.not336, label %destructor_block, label %"for Output.s1.x.x.x.x230"

"end for Output.s1.r10$y279":                     ; preds = %"end for Output.s1.r10$x284.loopexit.us", %"for Output.s1.r10$y278.preheader", %"for Output.s1.r10$z.rebased274"
  %7591 = add nuw nsw i32 %"Output.s1.r10$z.rebased276", 1
  %.not337 = icmp eq i32 %7591, %t248273
  br i1 %.not337, label %"end for Output.s1.r10$z.rebased275", label %"for Output.s1.r10$z.rebased274"
}

; Function Attrs: nounwind
define i32 @convolution_argv(i8** nocapture readonly %0) local_unnamed_addr #10 {
entry:
  %1 = bitcast i8** %0 to %struct.halide_buffer_t**
  %2 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %1, align 8
  %3 = getelementptr i8*, i8** %0, i64 1
  %4 = bitcast i8** %3 to %struct.halide_buffer_t**
  %5 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %4, align 8
  %6 = getelementptr i8*, i8** %0, i64 2
  %7 = bitcast i8** %6 to %struct.halide_buffer_t**
  %8 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %7, align 8
  %9 = tail call i32 @convolution(%struct.halide_buffer_t* %2, %struct.halide_buffer_t* %5, %struct.halide_buffer_t* %8) #17
  ret i32 %9
}

; Function Attrs: norecurse nounwind readnone willreturn
define nonnull %struct.halide_filter_metadata_t* @convolution_metadata() local_unnamed_addr #11 {
entry:
  ret %struct.halide_filter_metadata_t* @convolution_metadata_storage
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.cttz.i64(i64, i1 immarg) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #7

; Function Attrs: nofree nosync nounwind willreturn writeonly
declare void @llvm.masked.scatter.v8i32.v8p0i32(<8 x i32>, <8 x i32*>, i32 immarg, <8 x i1>) #12

; Function Attrs: nofree nosync nounwind readonly willreturn
declare <4 x i32> @llvm.masked.gather.v4i32.v4p0i32(<4 x i32*>, i32 immarg, <4 x i1>, <4 x i32>) #13

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i64 @llvm.vector.reduce.add.v4i64(<4 x i64>) #14

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i64 @llvm.vector.reduce.or.v16i64(<16 x i64>) #14

attributes #0 = { nounwind mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-builtins" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind willreturn mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #6 = { alwaysinline nounwind willreturn mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "reciprocal-estimates"="none" }
attributes #10 = { nounwind }
attributes #11 = { norecurse nounwind readnone willreturn }
attributes #12 = { nofree nosync nounwind willreturn writeonly }
attributes #13 = { nofree nosync nounwind readonly willreturn }
attributes #14 = { nofree nosync nounwind readnone willreturn }
attributes #15 = { nobuiltin nounwind "no-builtins" }
attributes #16 = { nobuiltin "no-builtins" }
attributes #17 = { noinline }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8}
!llvm.ident = !{!9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9, !9}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, !"halide_use_soft_float_abi", i32 0}
!3 = !{i32 2, !"halide_mcpu", !"cascadelake"}
!4 = !{i32 2, !"halide_mattrs", !"+fma,+f16c,+avx512f,+avx512cd,+avx512vl,+avx512bw,+avx512dq"}
!5 = !{i32 2, !"halide_mabi", !""}
!6 = !{i32 2, !"halide_use_pic", i32 1}
!7 = !{i32 2, !"halide_use_large_code_model", i32 0}
!8 = !{i32 2, !"halide_per_instruction_fast_math_flags", i32 0}
!9 = !{!"clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)"}
!10 = !{!11, !11, i64 0}
!11 = !{!"any pointer", !12, i64 0}
!12 = !{!"omnipotent char", !13, i64 0}
!13 = !{!"Simple C++ TBAA"}
!14 = !{!12, !12, i64 0}
!15 = !{!16, !16, i64 0}
!16 = !{!"bool", !12, i64 0}
!17 = !{i8 0, i8 2}
!18 = !{!19, !19, i64 0}
!19 = !{!"long", !12, i64 0}
!20 = !{!21, !11, i64 0}
!21 = !{!"_ZTSN6Halide7Runtime8Internal4workE", !22, i64 0, !11, i64 56, !11, i64 64, !11, i64 72, !23, i64 80, !11, i64 88, !23, i64 96, !11, i64 104, !23, i64 112, !23, i64 116, !23, i64 120, !16, i64 124}
!22 = !{!"_ZTS22halide_parallel_task_t", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24, !23, i64 32, !23, i64 36, !23, i64 40, !23, i64 44, !16, i64 48}
!23 = !{!"int", !12, i64 0}
!24 = !{!21, !23, i64 36}
!25 = !{!21, !23, i64 40}
!26 = !{!21, !16, i64 48}
!27 = !{!21, !11, i64 24}
!28 = !{!21, !23, i64 32}
!29 = !{!21, !11, i64 8}
!30 = !{!21, !23, i64 44}
!31 = !{!21, !11, i64 16}
!32 = !{!21, !11, i64 56}
!33 = !{!21, !11, i64 104}
!34 = !{!21, !23, i64 116}
!35 = !{!21, !23, i64 112}
!36 = !{!21, !23, i64 120}
!37 = !{!21, !16, i64 124}
!38 = !{!21, !11, i64 72}
!39 = !{!21, !23, i64 80}
!40 = !{!21, !11, i64 88}
!41 = !{!42, !42, i64 0}
!42 = !{!"vtable pointer", !13, i64 0}
!43 = !{!44, !11, i64 8}
!44 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE", !11, i64 8}
!45 = !{!46, !16, i64 2121}
!46 = !{!"_ZTSN6Halide7Runtime8Internal12work_queue_tE", !47, i64 0, !23, i64 8, !23, i64 12, !11, i64 16, !23, i64 24, !23, i64 28, !23, i64 32, !48, i64 40, !48, i64 48, !48, i64 56, !23, i64 64, !23, i64 68, !12, i64 72, !16, i64 2120, !16, i64 2121, !23, i64 2124}
!47 = !{!"_ZTS12halide_mutex", !12, i64 0}
!48 = !{!"_ZTS11halide_cond", !12, i64 0}
!49 = distinct !{!49, !50}
!50 = !{!"llvm.loop.mustprogress"}
!51 = !{!46, !23, i64 8}
!52 = !{!46, !23, i64 24}
!53 = !{!46, !23, i64 2124}
!54 = !{!46, !23, i64 28}
!55 = distinct !{!55, !50}
!56 = !{!21, !23, i64 96}
!57 = !{!46, !11, i64 16}
!58 = !{!21, !11, i64 64}
!59 = !{!46, !23, i64 68}
!60 = !{!46, !23, i64 32}
!61 = distinct !{!61, !50}
!62 = distinct !{!62, !50}
!63 = !{!46, !16, i64 2120}
!64 = distinct !{!64, !50}
!65 = !{!66, !11, i64 0}
!66 = !{!"_ZTS26halide_semaphore_acquire_t", !11, i64 0, !23, i64 8}
!67 = !{!66, !23, i64 8}
!68 = distinct !{!68, !50}
!69 = !{!46, !23, i64 64}
!70 = distinct !{!70, !50}
!71 = distinct !{!71, !50}
!72 = !{i64 0, i64 8, !10, i64 8, i64 8, !10, i64 16, i64 8, !10, i64 24, i64 8, !10, i64 32, i64 4, !73, i64 36, i64 4, !73, i64 40, i64 4, !73, i64 44, i64 4, !73, i64 48, i64 1, !15, i64 56, i64 8, !10, i64 64, i64 8, !10, i64 72, i64 8, !10, i64 80, i64 4, !73, i64 88, i64 8, !10, i64 96, i64 4, !73, i64 104, i64 8, !10, i64 112, i64 4, !73, i64 116, i64 4, !73, i64 120, i64 4, !73, i64 124, i64 1, !15}
!73 = !{!23, !23, i64 0}
!74 = !{i64 0, i64 8, !10, i64 8, i64 8, !10, i64 16, i64 8, !10, i64 24, i64 4, !73, i64 28, i64 4, !73, i64 32, i64 4, !73, i64 36, i64 4, !73, i64 40, i64 1, !15, i64 48, i64 8, !10, i64 56, i64 8, !10, i64 64, i64 8, !10, i64 72, i64 4, !73, i64 80, i64 8, !10, i64 88, i64 4, !73, i64 96, i64 8, !10, i64 104, i64 4, !73, i64 108, i64 4, !73, i64 112, i64 4, !73, i64 116, i64 1, !15}
!75 = !{i64 0, i64 8, !10, i64 8, i64 8, !10, i64 16, i64 8, !10, i64 24, i64 4, !73, i64 32, i64 8, !10, i64 40, i64 4, !73, i64 48, i64 8, !10, i64 56, i64 4, !73, i64 60, i64 4, !73, i64 64, i64 4, !73, i64 68, i64 1, !15}
!76 = !{i64 0, i64 8, !10, i64 8, i64 4, !73, i64 12, i64 4, !73, i64 16, i64 4, !73, i64 20, i64 1, !15}
!77 = distinct !{!77, !50}
!78 = distinct !{!78, !50}
!79 = !{!80, !11, i64 144}
!80 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization10queue_dataE", !81, i64 0, !84, i64 136, !11, i64 144, !84, i64 152}
!81 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization13thread_parkerE", !82, i64 0, !83, i64 64, !16, i64 128}
!82 = !{!"_ZTS15pthread_mutex_t", !12, i64 0}
!83 = !{!"_ZTS14pthread_cond_t", !12, i64 0}
!84 = !{!"long long", !12, i64 0}
!85 = !{!86, !11, i64 16}
!86 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization11hash_bucketE", !87, i64 0, !11, i64 8, !11, i64 16}
!87 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization9word_lockE", !84, i64 0}
!88 = distinct !{!88, !50}
!89 = !{!80, !84, i64 152}
!90 = !{!81, !16, i64 128}
!91 = distinct !{!91, !50}
!92 = !{!93, !11, i64 152}
!93 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization20word_lock_queue_dataE", !81, i64 0, !11, i64 136, !11, i64 144, !11, i64 152}
!94 = !{!93, !11, i64 136}
!95 = !{!93, !11, i64 144}
!96 = distinct !{!96, !50}
!97 = distinct !{!97, !50}
!98 = distinct !{!98, !50}
!99 = !{!100, !11, i64 8}
!100 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization25broadcast_parking_controlE", !11, i64 8, !11, i64 16}
!101 = !{!100, !11, i64 16}
!102 = !{!103, !11, i64 8}
!103 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization20wait_parking_controlE", !11, i64 8, !11, i64 16}
!104 = !{!103, !11, i64 16}
!105 = !{!80, !84, i64 136}
!106 = !{!107, !16, i64 0}
!107 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization15validate_actionE", !16, i64 0, !84, i64 8}
!108 = !{!107, !84, i64 8}
!109 = !{!86, !11, i64 8}
!110 = !{!84, !84, i64 0}
!111 = !{!112, !11, i64 0}
!112 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization11bucket_pairE", !11, i64 0, !11, i64 8}
!113 = distinct !{!113, !50}
!114 = !{!112, !11, i64 8}
!115 = !{!116, !11, i64 0}
!116 = !{!"_ZTSN6Halide7Runtime8Internal14spawned_threadE", !11, i64 0, !11, i64 8, !19, i64 16}
!117 = !{!116, !11, i64 8}
!118 = !{!116, !19, i64 16}
!119 = !{!22, !23, i64 40}
!120 = !{i64 0, i64 8, !10, i64 8, i64 8, !10, i64 16, i64 8, !10, i64 24, i64 8, !10, i64 32, i64 4, !73, i64 36, i64 4, !73, i64 40, i64 4, !73, i64 44, i64 4, !73, i64 48, i64 1, !15}
!121 = distinct !{!121, !50}
!122 = distinct !{!122, !50}
!123 = distinct !{!123, !50}
!124 = !{!125, !11, i64 8}
!125 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization22signal_parking_controlE", !11, i64 8, !11, i64 16}
!126 = !{!125, !11, i64 16}
!127 = !{!128, !11, i64 0}
!128 = !{!"_ZTS18halide_mutex_array", !11, i64 0}
!129 = distinct !{!129, !50}
!130 = !{!131, !134, i64 34}
!131 = !{!"_ZTS20halide_trace_event_t", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24, !132, i64 32, !135, i64 36, !23, i64 40, !23, i64 44, !23, i64 48}
!132 = !{!"_ZTS13halide_type_t", !133, i64 0, !12, i64 1, !134, i64 2}
!133 = !{!"_ZTS18halide_type_code_t", !12, i64 0}
!134 = !{!"short", !12, i64 0}
!135 = !{!"_ZTS25halide_trace_event_code_t", !12, i64 0}
!136 = !{!132, !12, i64 1}
!137 = !{!131, !23, i64 48}
!138 = !{!131, !11, i64 0}
!139 = !{!131, !11, i64 24}
!140 = !{!141, !23, i64 0}
!141 = !{!"_ZTSN6Halide7Runtime8Internal23SharedExclusiveSpinLockE", !23, i64 0}
!142 = !{!143, !23, i64 4}
!143 = !{!"_ZTSN6Halide7Runtime8Internal11TraceBufferE", !141, i64 0, !23, i64 4, !23, i64 8, !12, i64 12}
!144 = !{!143, !23, i64 8}
!145 = distinct !{!145, !50}
!146 = !{!147, !23, i64 0}
!147 = !{!"_ZTS21halide_trace_packet_t", !23, i64 0, !23, i64 4, !132, i64 8, !135, i64 12, !23, i64 16, !23, i64 20, !23, i64 24}
!148 = !{!147, !23, i64 4}
!149 = !{!131, !11, i64 16}
!150 = !{!131, !11, i64 8}
!151 = !{!147, !23, i64 24}
!152 = !{!147, !134, i64 10}
!153 = distinct !{!153, !50}
!154 = !{!131, !135, i64 36}
!155 = !{!131, !12, i64 33}
!156 = distinct !{!156, !50}
!157 = !{!131, !23, i64 44}
!158 = distinct !{!158, !50, !159}
!159 = !{!"llvm.loop.peeled.count", i32 1}
!160 = !{!131, !133, i64 32}
!161 = !{!134, !134, i64 0}
!162 = !{!163, !163, i64 0}
!163 = !{!"float", !12, i64 0}
!164 = !{!165, !165, i64 0}
!165 = !{!"double", !12, i64 0}
!166 = distinct !{!166, !50, !159}
!167 = distinct !{!167, !50}
!168 = !{!131, !23, i64 40}
!169 = distinct !{!169, !50}
!170 = distinct !{!170, !50}
!171 = distinct !{!171, !50}
!172 = !{!173, !11, i64 16}
!173 = !{!"_ZTS15halide_buffer_t", !84, i64 0, !11, i64 8, !11, i64 16, !84, i64 24, !132, i64 32, !23, i64 36, !11, i64 40, !11, i64 48}
!174 = !{!173, !84, i64 0}
!175 = !{!173, !23, i64 36}
!176 = !{!173, !11, i64 40}
!177 = !{i64 0, i64 4, !73, i64 4, i64 4, !73, i64 8, i64 4, !73, i64 12, i64 4, !73}
!178 = !{!179, !23, i64 4}
!179 = !{!"_ZTS18halide_dimension_t", !23, i64 0, !23, i64 4, !23, i64 8, !23, i64 12}
!180 = distinct !{!180, !50}
!181 = !{!179, !23, i64 0}
!182 = !{!179, !23, i64 8}
!183 = distinct !{!183, !50, !184}
!184 = !{!"llvm.loop.isvectorized", i32 1}
!185 = distinct !{!185, !186}
!186 = !{!"llvm.loop.unroll.disable"}
!187 = distinct !{!187, !50, !188, !184}
!188 = !{!"llvm.loop.unroll.runtime.disable"}
!189 = !{!190, !134, i64 0}
!190 = !{!"_ZTSN6Halide7Runtime8Internal18halide_tiff_headerE", !134, i64 0, !134, i64 2, !23, i64 4, !134, i64 8, !12, i64 10, !23, i64 190, !12, i64 194, !12, i64 202}
!191 = !{!190, !134, i64 2}
!192 = !{!190, !23, i64 4}
!193 = !{!190, !134, i64 8}
!194 = !{!195, !134, i64 0}
!195 = !{!"_ZTSN6Halide7Runtime8Internal8tiff_tagE", !134, i64 0, !134, i64 2, !23, i64 4, !12, i64 8}
!196 = !{!195, !134, i64 2}
!197 = !{!195, !23, i64 4}
!198 = distinct !{!198, !50}
!199 = distinct !{!199, !50}
!200 = distinct !{!200, !50}
!201 = distinct !{!201, !50}
!202 = distinct !{!202, !50}
!203 = !{!204}
!204 = distinct !{!204, !205}
!205 = distinct !{!205, !"LVerDomain"}
!206 = !{!207}
!207 = distinct !{!207, !205}
!208 = distinct !{!208, !50, !184}
!209 = distinct !{!209, !186}
!210 = distinct !{!210, !186}
!211 = distinct !{!211, !50, !184}
!212 = distinct !{!212, !186}
!213 = distinct !{!213, !50, !184}
!214 = distinct !{!214, !50, !184}
!215 = distinct !{!215, !50, !188, !184}
!216 = distinct !{!216, !50, !184}
!217 = distinct !{!217, !50, !188, !184}
!218 = distinct !{!218, !50, !184}
!219 = distinct !{!219, !50, !188, !184}
!220 = distinct !{!220, !50}
!221 = distinct !{!221, !50, !184}
!222 = distinct !{!222, !50, !188, !184}
!223 = distinct !{!223, !50}
!224 = distinct !{!224, !50}
!225 = distinct !{!225, !50}
!226 = distinct !{!226, !50}
!227 = !{!228, !11, i64 0}
!228 = !{!"_ZTSN6Halide7Runtime8Internal10CacheEntryE", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24, !19, i64 32, !11, i64 40, !23, i64 48, !23, i64 52, !23, i64 56, !23, i64 60, !11, i64 64, !11, i64 72, !84, i64 80, !16, i64 88}
!229 = distinct !{!229, !50}
!230 = !{!228, !23, i64 56}
!231 = !{!228, !11, i64 24}
!232 = !{!228, !11, i64 72}
!233 = distinct !{!233, !50}
!234 = distinct !{!234, !50}
!235 = !{!236, !84, i64 0}
!236 = !{!"_ZTSN6Halide7Runtime8Internal11device_copyE", !84, i64 0, !84, i64 8, !84, i64 16, !12, i64 24, !12, i64 152, !12, i64 280, !84, i64 408}
!237 = !{!236, !84, i64 8}
!238 = !{!236, !84, i64 408}
!239 = distinct !{!239, !50}
!240 = !{!236, !84, i64 16}
!241 = distinct !{!241, !50, !184}
!242 = distinct !{!242, !50, !188, !184}
!243 = distinct !{!243, !50}
!244 = distinct !{!244, !186}
!245 = distinct !{!245, !50}
!246 = distinct !{!246, !50}
!247 = distinct !{!247, !50}
!248 = !{i64 0, i64 8, !110, i64 8, i64 8, !110, i64 16, i64 8, !110, i64 24, i64 128, !14, i64 152, i64 128, !14, i64 280, i64 128, !14, i64 408, i64 8, !110}
!249 = distinct !{!249, !50}
!250 = !{!179, !23, i64 12}
!251 = !{!228, !11, i64 16}
!252 = !{!228, !19, i64 32}
!253 = !{!228, !23, i64 48}
!254 = !{!228, !23, i64 52}
!255 = !{!228, !23, i64 60}
!256 = !{!228, !11, i64 64}
!257 = !{!228, !11, i64 40}
!258 = distinct !{!258, !50}
!259 = distinct !{!259, !50}
!260 = distinct !{!260, !50}
!261 = !{!228, !16, i64 88}
!262 = !{!228, !84, i64 80}
!263 = !{i64 0, i64 8, !110, i64 8, i64 8, !10, i64 16, i64 8, !10, i64 24, i64 8, !110, i64 32, i64 1, !264, i64 33, i64 1, !14, i64 34, i64 2, !161, i64 36, i64 4, !73, i64 40, i64 8, !10, i64 48, i64 8, !10}
!264 = !{!133, !133, i64 0}
!265 = distinct !{!265, !50}
!266 = distinct !{!266, !186}
!267 = distinct !{!267, !50}
!268 = !{!228, !11, i64 8}
!269 = distinct !{!269, !50}
!270 = distinct !{!270, !50, !184}
!271 = distinct !{!271, !50, !188, !184}
!272 = distinct !{!272, !50, !184}
!273 = distinct !{!273, !50, !188, !184}
!274 = distinct !{!274, !50}
!275 = distinct !{!275, !50}
!276 = distinct !{!276, !50}
!277 = distinct !{!277, !50}
!278 = distinct !{!278, !50}
!279 = distinct !{!279, !50, !184}
!280 = distinct !{!280, !50, !188, !184}
!281 = distinct !{!281, !50, !184}
!282 = distinct !{!282, !50, !188, !184}
!283 = distinct !{!283, !50}
!284 = !{!285, !23, i64 8}
!285 = !{!"_ZTSN6Halide7Runtime8Internal16CacheBlockHeaderE", !11, i64 0, !23, i64 8}
!286 = !{!285, !11, i64 0}
!287 = distinct !{!287, !50}
!288 = distinct !{!288, !186}
!289 = distinct !{!289, !50}
!290 = distinct !{!290, !50}
!291 = distinct !{!291, !50}
!292 = distinct !{!292, !50, !184}
!293 = distinct !{!293, !50, !188, !184}
!294 = distinct !{!294, !50, !184}
!295 = distinct !{!295, !50, !188, !184}
!296 = distinct !{!296, !50}
!297 = distinct !{!297, !50}
!298 = distinct !{!298, !50}
!299 = distinct !{!299, !50}
!300 = distinct !{!300, !50}
!301 = distinct !{!301, !50}
!302 = distinct !{!302, !50}
!303 = distinct !{!303, !50}
!304 = distinct !{!304, !50}
!305 = !{!132, !133, i64 0}
!306 = !{!132, !134, i64 2}
!307 = !{!173, !11, i64 8}
!308 = !{!173, !84, i64 24}
!309 = distinct !{!309, !50}
!310 = !{!311, !11, i64 0}
!311 = !{!"_ZTS29halide_device_allocation_pool", !11, i64 0, !11, i64 8}
!312 = distinct !{!312, !50}
!313 = !{!311, !11, i64 8}
!314 = !{!315, !11, i64 120}
!315 = !{!"_ZTS25halide_device_interface_t", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24, !11, i64 32, !11, i64 40, !11, i64 48, !11, i64 56, !11, i64 64, !11, i64 72, !11, i64 80, !11, i64 88, !11, i64 96, !11, i64 104, !11, i64 112, !11, i64 120}
!316 = !{!317, !11, i64 48}
!317 = !{!"_ZTS30halide_device_interface_impl_t", !11, i64 0, !11, i64 8, !11, i64 16, !11, i64 24, !11, i64 32, !11, i64 40, !11, i64 48, !11, i64 56, !11, i64 64, !11, i64 72, !11, i64 80, !11, i64 88, !11, i64 96, !11, i64 104, !11, i64 112, !11, i64 120}
!318 = !{!317, !11, i64 40}
!319 = !{!317, !11, i64 56}
!320 = !{!317, !11, i64 0}
!321 = !{!317, !11, i64 16}
!322 = !{!317, !11, i64 8}
!323 = !{!317, !11, i64 32}
!324 = !{!317, !11, i64 24}
!325 = !{!317, !11, i64 64}
!326 = !{!317, !11, i64 72}
!327 = distinct !{!327, !50, !184}
!328 = distinct !{!328, !50, !188, !184}
!329 = distinct !{!329, !50, !184}
!330 = distinct !{!330, !50, !188, !184}
!331 = !{!317, !11, i64 112}
!332 = !{!317, !11, i64 120}
!333 = !{!317, !11, i64 80}
!334 = !{!317, !11, i64 88}
!335 = !{!317, !11, i64 96}
!336 = !{!317, !11, i64 104}
!337 = !{i32 22, i32 33}
!338 = !{!339, !11, i64 40}
!339 = !{!"_ZTS21halide_profiler_state", !47, i64 0, !23, i64 8, !23, i64 12, !23, i64 16, !23, i64 20, !11, i64 24, !11, i64 32, !11, i64 40}
!340 = !{!339, !23, i64 16}
!341 = !{!342, !84, i64 0}
!342 = !{!"_ZTS30halide_profiler_pipeline_stats", !84, i64 0, !84, i64 8, !84, i64 16, !84, i64 24, !84, i64 32, !84, i64 40, !11, i64 48, !11, i64 56, !11, i64 64, !23, i64 72, !23, i64 76, !23, i64 80, !23, i64 84, !23, i64 88}
!343 = !{!342, !23, i64 80}
!344 = !{!342, !84, i64 32}
!345 = !{!342, !84, i64 40}
!346 = !{!342, !11, i64 48}
!347 = !{!342, !23, i64 84}
!348 = !{!342, !23, i64 88}
!349 = !{!342, !84, i64 16}
!350 = !{!342, !84, i64 24}
!351 = !{!342, !23, i64 72}
!352 = !{!342, !11, i64 56}
!353 = distinct !{!353, !50}
!354 = !{!355, !84, i64 32}
!355 = !{!"_ZTS26halide_profiler_func_stats", !84, i64 0, !84, i64 8, !84, i64 16, !84, i64 24, !84, i64 32, !84, i64 40, !84, i64 48, !11, i64 56, !23, i64 64}
!356 = !{!355, !84, i64 0}
!357 = !{!355, !11, i64 56}
!358 = distinct !{!358, !50}
!359 = distinct !{!359, !50}
!360 = distinct !{!360, !50}
!361 = !{!355, !84, i64 40}
!362 = !{!355, !84, i64 48}
!363 = distinct !{!363, !50}
!364 = !{!355, !84, i64 16}
!365 = distinct !{!365, !50}
!366 = !{!355, !23, i64 64}
!367 = distinct !{!367, !50}
!368 = !{!355, !84, i64 24}
!369 = distinct !{!369, !50}
!370 = distinct !{!370, !50}
!371 = !{!339, !11, i64 24}
!372 = !{!342, !11, i64 64}
!373 = distinct !{!373, !50}
!374 = !{!339, !23, i64 12}
!375 = distinct !{!375, !50}
!376 = !{!342, !23, i64 76}
!377 = distinct !{!377, !50}
!378 = distinct !{!378, !50}
!379 = !{!339, !11, i64 32}
!380 = !{!339, !23, i64 20}
!381 = !{!339, !23, i64 8}
!382 = distinct !{!382, !50}
!383 = distinct !{!383, !50}
!384 = distinct !{!384, !50}
!385 = distinct !{!385, !50}
!386 = !{!"branch_weights", i32 0, i32 1073741824}
!387 = !{!173, !133, i64 32}
!388 = !{!173, !12, i64 33}
!389 = !{!173, !134, i64 34}
!390 = !{i64 0, i64 4, !73, i64 4, i64 4, !73, i64 8, i64 4, !73}
!391 = !{i64 0, i64 4, !73, i64 4, i64 4, !73}
!392 = !{i64 0, i64 4, !73}
!393 = !{i64 0, i64 64}
!394 = !{!"branch_weights", i32 1073741824, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0}
!395 = !{!"branch_weights", i32 1073741824, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0}
!396 = !{!"branch_weights", i32 0, i32 -2147483648}
!397 = distinct !{!397, !186}
!398 = !{!"branch_weights", i32 1073741824, i32 0}
!399 = !{!400, !400, i64 0}
!400 = !{!"Output", !401, i64 0}
!401 = !{!"Halide buffer"}
!402 = !{!403, !403, i64 0}
!403 = !{!"Filter", !401, i64 0}
!404 = !{!405, !405, i64 0}
!405 = !{!"IMG", !401, i64 0}
!406 = !{!"branch_weights", i32 -2147483648, i32 0}
!407 = distinct !{!407, !186}
