; ModuleID = 'conv3x3a16'
source_filename = "/home/muchenx2/Hydride/frontends/halide/src/runtime/posix_allocator.cpp"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx"

%struct.mach_timebase_info = type { i32, i32 }
%"struct.Halide::Runtime::Internal::Synchronization::hash_table" = type { [1024 x %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"] }
%"struct.Halide::Runtime::Internal::Synchronization::hash_bucket" = type { %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* }
%"class.Halide::Runtime::Internal::Synchronization::word_lock" = type { i64 }
%"struct.Halide::Runtime::Internal::Synchronization::queue_data" = type { %"struct.Halide::Runtime::Internal::Synchronization::thread_parker", i64, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, i64 }
%"struct.Halide::Runtime::Internal::Synchronization::thread_parker" = type <{ %struct.pthread_mutex_t, %struct.pthread_mutex_t, i8, [7 x i8] }>
%struct.pthread_mutex_t = type { [8 x i64] }
%"struct.Halide::Runtime::Internal::work_queue_t" = type { %struct.halide_mutex, i32, i32, %"struct.Halide::Runtime::Internal::work"*, i32, i32, i32, [4 x i8], %struct.halide_mutex, %struct.halide_mutex, %struct.halide_mutex, i32, i32, [256 x %struct.halide_thread*], i8, i8, i32 }
%"struct.Halide::Runtime::Internal::work" = type { %struct.halide_parallel_task_t, i32 (i8*, i32, i8*)*, %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"*, i32, %"struct.Halide::Runtime::Internal::work"*, i32, i8*, i32, i32, i32, i8 }
%struct.halide_parallel_task_t = type { i32 (i8*, i32, i32, i8*, i8*)*, i8*, i8*, %struct.halide_semaphore_acquire_t*, i32, i32, i32, i32, i8, [7 x i8] }
%struct.halide_semaphore_acquire_t = type { %struct.halide_semaphore_t*, i32, [4 x i8] }
%struct.halide_semaphore_t = type { [2 x i64] }
%struct.halide_mutex = type { [1 x i64] }
%struct.halide_thread = type opaque
%"class.Halide::Runtime::Internal::TraceBuffer" = type { %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock", i32, i32, [1048576 x i8] }
%"class.Halide::Runtime::Internal::SharedExclusiveSpinLock" = type { i32 }
%struct.halide_trace_event_t = type <{ i8*, i8*, i32*, i8*, %struct.halide_type_t, i32, i32, i32, i32, [4 x i8] }>
%struct.halide_type_t = type { i8, i8, i16 }
%"struct.Halide::Runtime::Internal::CacheEntry" = type { %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"*, i8*, i64, i8*, i32, i32, i32, i32, %struct.halide_dimension_t*, %struct.halide_buffer_t*, i64, i8, [7 x i8] }
%struct.halide_dimension_t = type { i32, i32, i32, i32 }
%struct.halide_buffer_t = type { i64, %struct.halide_device_interface_t*, i8*, i64, %struct.halide_type_t, i32, %struct.halide_dimension_t*, i8* }
%struct.halide_device_interface_t = type { i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, void (i8*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i64, %struct.halide_device_interface_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, i32*, i32*)*, %struct.halide_device_interface_impl_t* }
%struct.halide_device_interface_impl_t = type { void ()*, void ()*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i64)*, i32 (i8*, %struct.halide_buffer_t*)* }
%struct.halide_device_allocation_pool = type { i32 (i8*)*, %struct.halide_device_allocation_pool* }
%struct.halide_profiler_state = type { %struct.halide_mutex, i32, i32, i32, i32, %struct.halide_profiler_pipeline_stats*, void (i32*, i32*)*, %struct.halide_thread* }
%struct.halide_profiler_pipeline_stats = type { i64, i64, i64, i64, i64, i64, i8*, %struct.halide_profiler_func_stats*, i8*, i32, i32, i32, i32, i32, [4 x i8] }
%struct.halide_profiler_func_stats = type { i64, i64, i64, i64, i64, i64, i64, i8*, i32, [4 x i8] }
%struct.halide_filter_argument_t = type { i8*, i32, i32, %struct.halide_type_t, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t*, %struct.halide_scalar_value_t*, i64** }
%struct.halide_scalar_value_t = type { %union.anon.28 }
%union.anon.28 = type { double }
%struct.halide_filter_metadata_t = type { i32, i32, %struct.halide_filter_argument_t*, i8*, i8* }
%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control" = type { %"struct.Halide::Runtime::Internal::Synchronization::parking_control", i64* }
%"struct.Halide::Runtime::Internal::Synchronization::parking_control" = type { i32 (...)** }
%"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data" = type { %"struct.Halide::Runtime::Internal::Synchronization::thread_parker", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* }
%"struct.Halide::Runtime::Internal::Synchronization::validate_action" = type { i8, [7 x i8], i64 }
%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control" = type { %"struct.Halide::Runtime::Internal::Synchronization::parking_control", i64*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"* }
%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair" = type { %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* }
%"struct.Halide::Runtime::Internal::spawned_thread" = type { void (i8*)*, i8*, i64 }
%struct.halide_mutex_array = type { %struct.halide_mutex* }
%"struct.Halide::Runtime::Internal::halide_tiff_header" = type <{ i16, i16, i32, i16, [15 x %"struct.Halide::Runtime::Internal::tiff_tag"], i32, [2 x i32], [2 x i32] }>
%"struct.Halide::Runtime::Internal::tiff_tag" = type { i16, i16, i32, %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock" }
%"struct.Halide::Runtime::Internal::CacheBlockHeader" = type { %"struct.Halide::Runtime::Internal::CacheEntry"*, i32, [4 x i8] }
%"struct.Halide::Runtime::Internal::device_copy" = type { i64, i64, i64, [16 x i64], [16 x i64], [16 x i64], i64 }
%"struct.Halide::Runtime::Internal::CpuFeatures" = type { [2 x i64], [2 x i64] }
%struct.halide_pseudostack_slot_t = type { i8*, i64, i64 }

@_ZN6Halide7Runtime8Internal13custom_mallocE = linkonce local_unnamed_addr global i8* (i8*, i64)* @halide_default_malloc, align 8
@_ZN6Halide7Runtime8Internal11custom_freeE = linkonce local_unnamed_addr global void (i8*, i8*)* @halide_default_free, align 8
@_ZN6Halide7Runtime8Internal13error_handlerE = linkonce local_unnamed_addr global void (i8*, i8*)* @halide_default_error, align 8
@.str = private unnamed_addr constant [8 x i8] c"Error: \00", align 1
@_ZN6Halide7Runtime8Internal12custom_printE = linkonce local_unnamed_addr global void (i8*, i8*)* @halide_default_print, align 8
@_ZN6Halide7Runtime8Internal29halide_reference_clock_initedE = linkonce local_unnamed_addr global i8 0, align 1
@_ZN6Halide7Runtime8Internal22halide_reference_clockE = linkonce local_unnamed_addr global i64 0, align 8
@_ZN6Halide7Runtime8Internal20halide_timebase_infoE = linkonce global %struct.mach_timebase_info zeroinitializer, align 4
@_ZN6Halide7Runtime8Internal15Synchronization5tableE = linkonce global %"struct.Halide::Runtime::Internal::Synchronization::hash_table" zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal10work_queueE = linkonce global %"struct.Halide::Runtime::Internal::work_queue_t" { %struct.halide_mutex zeroinitializer, i32 0, i32 0, %"struct.Halide::Runtime::Internal::work"* null, i32 0, i32 0, i32 0, [4 x i8] undef, %struct.halide_mutex zeroinitializer, %struct.halide_mutex zeroinitializer, %struct.halide_mutex zeroinitializer, i32 0, i32 0, [256 x %struct.halide_thread*] zeroinitializer, i8 0, i8 0, i32 0 }, align 8
@_ZN6Halide7Runtime8Internal14custom_do_taskE = linkonce local_unnamed_addr global i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* @halide_default_do_task, align 8
@_ZN6Halide7Runtime8Internal19custom_do_loop_taskE = linkonce local_unnamed_addr global i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* @halide_default_do_loop_task, align 8
@_ZN6Halide7Runtime8Internal17custom_do_par_forE = linkonce local_unnamed_addr global i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* @halide_default_do_par_for, align 8
@_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)* @_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control8validateERNS2_15validate_actionE to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv to i8*), i8* bitcast (i64 (%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"*, i32, i1)* @_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control6unparkEib to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [130 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/synchronization_common.h:386 halide_abort_if_false() failed: next != nullptr\0A\00", align 1
@_ZTVN6Halide7Runtime8Internal15Synchronization20wait_parking_controlE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)* @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control8validateERNS2_15validate_actionE to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*)* @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control12before_sleepEv to i8*), i8* bitcast (i64 (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, i32, i1)* @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control6unparkEib to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb to i8*)] }, align 8
@.str.5.6 = private unnamed_addr constant [124 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/synchronization_common.h:994 halide_abort_if_false() failed: val & 0x1\0A\00", align 1
@_ZTVN6Halide7Runtime8Internal15Synchronization25broadcast_parking_controlE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)* @_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control8validateERNS2_15validate_actionE to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv to i8*), i8* bitcast (i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control6unparkEib to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)* @_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control16requeue_callbackERKNS2_15validate_actionEbb to i8*)] }, align 8
@.str.6 = private unnamed_addr constant [186 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/thread_pool_common.h:155 halide_abort_if_false() failed: bytes == limit && \22Logic error in thread pool work queue initialization.\\n\22\0A\00", align 1
@.str.3 = private unnamed_addr constant [263 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/thread_pool_common.h:527 halide_abort_if_false() failed: (min_threads <= ((task_parent->task.min_threads * task_parent->active_workers) - task_parent->threads_reserved)) && \22Logic error: thread over commit.\\n\22\0A\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"HL_NUM_THREADS\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"HL_NUMTHREADS\00", align 1
@_ZN6Halide7Runtime8Internal24custom_do_parallel_tasksE = linkonce local_unnamed_addr global i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)* @halide_default_do_parallel_tasks, align 8
@_ZN6Halide7Runtime8Internal21custom_semaphore_initE = linkonce local_unnamed_addr global i32 (%struct.halide_semaphore_t*, i32)* @halide_default_semaphore_init, align 8
@_ZN6Halide7Runtime8Internal28custom_semaphore_try_acquireE = linkonce local_unnamed_addr global i1 (%struct.halide_semaphore_t*, i32)* @halide_default_semaphore_try_acquire, align 8
@_ZN6Halide7Runtime8Internal24custom_semaphore_releaseE = linkonce local_unnamed_addr global i32 (%struct.halide_semaphore_t*, i32)* @halide_default_semaphore_release, align 8
@llvm.global_dtors = appending global [4 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @halide_thread_pool_cleanup, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @halide_trace_cleanup, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @halide_cache_cleanup, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @halide_profiler_shutdown, i8* null }]
@_ZTVN6Halide7Runtime8Internal15Synchronization22signal_parking_controlE = linkonce_odr unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control8validateERNS2_15validate_actionE to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv to i8*), i8* bitcast (i64 (%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"*, i32, i1)* @_ZN6Halide7Runtime8Internal15Synchronization22signal_parking_control6unparkEib to i8*), i8* bitcast (void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)* @_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [38 x i8] c"halide_set_num_threads: must be >= 0.\00", align 1
@_ZN6Halide7Runtime8Internal17custom_get_symbolE = linkonce local_unnamed_addr global i8* (i8*)* @halide_default_get_symbol, align 8
@_ZN6Halide7Runtime8Internal19custom_load_libraryE = linkonce local_unnamed_addr global i8* (i8*)* @halide_default_load_library, align 8
@_ZN6Halide7Runtime8Internal25custom_get_library_symbolE = linkonce local_unnamed_addr global i8* (i8*, i8*)* @halide_default_get_library_symbol, align 8
@_ZN6Halide7Runtime8Internal17halide_gpu_deviceE = linkonce local_unnamed_addr global i32 0, align 4
@_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE = linkonce global i8 0, align 1
@_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE = linkonce local_unnamed_addr global i8 0, align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"HL_GPU_DEVICE\00", align 1
@_ZN6Halide7Runtime8Internal19halide_trace_bufferE = linkonce local_unnamed_addr global %"class.Halide::Runtime::Internal::TraceBuffer"* null, align 8
@_ZN6Halide7Runtime8Internal17halide_trace_fileE = linkonce local_unnamed_addr global i32 -1, align 4
@_ZN6Halide7Runtime8Internal22halide_trace_file_lockE = linkonce global i8 0, align 1
@_ZN6Halide7Runtime8Internal29halide_trace_file_initializedE = linkonce local_unnamed_addr global i8 0, align 1
@_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE = linkonce local_unnamed_addr global i8* null, align 8
@_ZN6Halide7Runtime8Internal19halide_custom_traceE = linkonce local_unnamed_addr global i32 (i8*, %struct.halide_trace_event_t*)* @halide_default_trace, align 8
@_ZZ20halide_default_traceE3ids = internal global i32 1, align 4
@.str.32 = private unnamed_addr constant [144 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/tracing.cpp:115 halide_abort_if_false() failed: success && \22Could not write to trace file\22\0A\00", align 1
@.str.31 = private unnamed_addr constant [120 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/tracing.cpp:87 halide_abort_if_false() failed: size <= buffer_size\0A\00", align 1
@.str.1.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.11 = private unnamed_addr constant [140 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/tracing.cpp:218 halide_abort_if_false() failed: print_bits <= 64 && \22Tracing bad type\22\0A\00", align 1
@__const.halide_default_trace.event_types = private unnamed_addr constant [11 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.12, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.13, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5.14, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.15, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.16, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.17, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0)], align 8
@.str.17 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c">)\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c">, <\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c" = <\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.24 = private unnamed_addr constant [142 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/tracing.cpp:287 halide_abort_if_false() failed: print_bits >= 16 && \22Tracing a bad type\22\0A\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c" tag = \22\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.3.12 = private unnamed_addr constant [5 x i8] c"Load\00", align 1
@.str.4.13 = private unnamed_addr constant [6 x i8] c"Store\00", align 1
@.str.5.14 = private unnamed_addr constant [18 x i8] c"Begin realization\00", align 1
@.str.6.15 = private unnamed_addr constant [16 x i8] c"End realization\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"Produce\00", align 1
@.str.8.16 = private unnamed_addr constant [12 x i8] c"End produce\00", align 1
@.str.9.17 = private unnamed_addr constant [8 x i8] c"Consume\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"End consume\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"Begin pipeline\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"End pipeline\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"Tag\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"HL_TRACE_FILE\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"ab\00", align 1
@.str.30 = private unnamed_addr constant [139 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/tracing.cpp:351 halide_abort_if_false() failed: file && \22Failed to open trace file\\n\22\0A\00", align 1
@_ZN6Halide7Runtime8Internal30pixel_type_to_tiff_sample_typeE = linkonce local_unnamed_addr global [10 x i16] [i16 3, i16 3, i16 1, i16 2, i16 1, i16 2, i16 1, i16 2, i16 1, i16 2], align 2
@_ZN6Halide7Runtime8Internal31pixel_type_to_matlab_class_codeE = linkonce local_unnamed_addr global [10 x i8] c"\07\06\09\08\0B\0A\0D\0C\0F\0E", align 1
@_ZN6Halide7Runtime8Internal30pixel_type_to_matlab_type_codeE = linkonce local_unnamed_addr global [10 x i8] c"\07\09\02\01\04\03\06\05\0D\0C", align 1
@.str.34 = private unnamed_addr constant [51 x i8] c"Bounds query buffer passed to halide_debug_to_file\00", align 1
@.str.1.35 = private unnamed_addr constant [59 x i8] c"Can't debug_to_file a Func with more than four dimensions\0A\00", align 1
@.str.2.36 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.3.37 = private unnamed_addr constant [6 x i8] c".tiff\00", align 1
@.str.4.38 = private unnamed_addr constant [5 x i8] c".tif\00", align 1
@.str.5.39 = private unnamed_addr constant [5 x i8] c".mat\00", align 1
@__const.halide_debug_to_file.header = private unnamed_addr constant [129 x i8] c"MATLAB 5.0 MAT-file, produced by Halide                                                                                     \00\01IM\00", align 1
@.str.6.40 = private unnamed_addr constant [53 x i8] c"Can't debug_to_file to a .mat file greater than 4GB\0A\00", align 1
@_ZN6Halide7Runtime8Internal16memoization_lockE = linkonce global %struct.halide_mutex zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal13cache_entriesE = linkonce global [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*] zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal18most_recently_usedE = linkonce local_unnamed_addr global %"struct.Halide::Runtime::Internal::CacheEntry"* null, align 8
@_ZN6Halide7Runtime8Internal19least_recently_usedE = linkonce local_unnamed_addr global %"struct.Halide::Runtime::Internal::CacheEntry"* null, align 8
@_ZN6Halide7Runtime8Internal14max_cache_sizeE = linkonce local_unnamed_addr global i64 1048576, align 8
@_ZN6Halide7Runtime8Internal18current_cache_sizeE = linkonce local_unnamed_addr global i64 0, align 8
@.str.2.42 = private unnamed_addr constant [126 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/cache.cpp:284 halide_abort_if_false() failed: prev_hash_entry != nullptr\0A\00", align 1
@.str.3.43 = private unnamed_addr constant [129 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/cache.cpp:373 halide_abort_if_false() failed: entry->more_recent != nullptr\0A\00", align 1
@.str.4.44 = private unnamed_addr constant [128 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/cache.cpp:377 halide_abort_if_false() failed: least_recently_used == entry\0A\00", align 1
@.str.5.45 = private unnamed_addr constant [129 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/cache.cpp:380 halide_abort_if_false() failed: entry->more_recent != nullptr\0A\00", align 1
@.str.9.46 = private unnamed_addr constant [122 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/cache.cpp:472 halide_abort_if_false() failed: no_host_pointers_equal\0A\00", align 1
@.str.12.47 = private unnamed_addr constant [123 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/cache.cpp:550 halide_abort_if_false() failed: entry->in_use_count > 0\0A\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"<nullptr>\00", align 1
@.str.1.57 = private unnamed_addr constant [5 x i8] c"-nan\00", align 1
@.str.2.58 = private unnamed_addr constant [4 x i8] c"nan\00", align 1
@.str.3.59 = private unnamed_addr constant [5 x i8] c"-inf\00", align 1
@.str.4.60 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.5.61 = private unnamed_addr constant [14 x i8] c"-0.000000e+00\00", align 1
@.str.6.62 = private unnamed_addr constant [13 x i8] c"0.000000e+00\00", align 1
@.str.7.63 = private unnamed_addr constant [10 x i8] c"-0.000000\00", align 1
@.str.8.64 = private unnamed_addr constant [9 x i8] c"0.000000\00", align 1
@.str.9.65 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.11.67 = private unnamed_addr constant [3 x i8] c"e+\00", align 1
@.str.12.68 = private unnamed_addr constant [3 x i8] c"e-\00", align 1
@.str.13.71 = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1
@.str.18.72 = private unnamed_addr constant [14 x i8] c"bad_type_code\00", align 1
@.str.17.73 = private unnamed_addr constant [7 x i8] c"handle\00", align 1
@.str.16.74 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.15.75 = private unnamed_addr constant [5 x i8] c"uint\00", align 1
@.str.14.76 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.19.77 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.20.78 = private unnamed_addr constant [8 x i8] c"nullptr\00", align 1
@.str.21.79 = private unnamed_addr constant [8 x i8] c"buffer(\00", align 1
@.str.23.82 = private unnamed_addr constant [4 x i8] c", {\00", align 1
@.str.24.83 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@_ZN6Halide7Runtime8Internal36halide_reuse_device_allocations_flagE = linkonce local_unnamed_addr global i8 1, align 1
@_ZN6Halide7Runtime8Internal21allocation_pools_lockE = linkonce global %struct.halide_mutex zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal23device_allocation_poolsE = linkonce local_unnamed_addr global %struct.halide_device_allocation_pool* null, align 8
@_ZN6Halide7Runtime8Internal17device_copy_mutexE = linkonce global %struct.halide_mutex zeroinitializer, align 8
@.str.6.88 = private unnamed_addr constant [20 x i8] c"halide_copy_to_host\00", align 1
@.str.7.89 = private unnamed_addr constant [22 x i8] c"halide_copy_to_device\00", align 1
@.str.9.90 = private unnamed_addr constant [61 x i8] c"halide_copy_to_device does not support switching interfaces\0A\00", align 1
@.str.17.91 = private unnamed_addr constant [21 x i8] c"halide_device_malloc\00", align 1
@.str.20.92 = private unnamed_addr constant [59 x i8] c"halide_device_malloc doesn't support switching interfaces\0A\00", align 1
@.str.16.93 = private unnamed_addr constant [19 x i8] c"halide_device_sync\00", align 1
@.str.21.96 = private unnamed_addr constant [19 x i8] c"halide_device_free\00", align 1
@.str.22.97 = private unnamed_addr constant [127 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/device_interface.cpp:252 halide_abort_if_false() failed: buf->device == 0\0A\00", align 1
@.str.23.98 = private unnamed_addr constant [30 x i8] c"halide_device_and_host_malloc\00", align 1
@.str.25.99 = private unnamed_addr constant [68 x i8] c"halide_device_and_host_malloc doesn't support switching interfaces\0A\00", align 1
@.str.26.100 = private unnamed_addr constant [42 x i8] c"allocating host and device memory failed\0A\00", align 1
@.str.27.101 = private unnamed_addr constant [28 x i8] c"halide_device_and_host_free\00", align 1
@.str.28.102 = private unnamed_addr constant [127 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/device_interface.cpp:317 halide_abort_if_false() failed: buf->device == 0\0A\00", align 1
@.str.29.103 = private unnamed_addr constant [38 x i8] c"halide_default_device_and_host_malloc\00", align 1
@.str.30.104 = private unnamed_addr constant [36 x i8] c"halide_default_device_and_host_free\00", align 1
@.str.31.105 = private unnamed_addr constant [26 x i8] c"halide_device_wrap_native\00", align 1
@.str.32.106 = private unnamed_addr constant [64 x i8] c"halide_device_wrap_native doesn't support switching interfaces\0A\00", align 1
@.str.33.107 = private unnamed_addr constant [28 x i8] c"halide_device_detach_native\00", align 1
@.str.34.108 = private unnamed_addr constant [127 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/device_interface.cpp:403 halide_abort_if_false() failed: buf->device == 0\0A\00", align 1
@.str.35 = private unnamed_addr constant [36 x i8] c"halide_default_device_detach_native\00", align 1
@.str.41 = private unnamed_addr constant [64 x i8] c"halide_buffer_copy does not support switching device interfaces\00", align 1
@.str.58 = private unnamed_addr constant [44 x i8] c"device_interface does not support cropping\0A\00", align 1
@.str.59 = private unnamed_addr constant [43 x i8] c"device_interface does not support slicing\0A\00", align 1
@.str.60 = private unnamed_addr constant [52 x i8] c"destination buffer already has a device allocation\0A\00", align 1
@.str.61 = private unnamed_addr constant [48 x i8] c"src and dst must have identical dimensionality\0A\00", align 1
@.str.64 = private unnamed_addr constant [52 x i8] c"dst must have exactly one fewer dimension than src\0A\00", align 1
@.str.111 = private unnamed_addr constant [41 x i8] c"Bounds inference call to external stage \00", align 1
@.str.1.112 = private unnamed_addr constant [27 x i8] c" returned non-zero value: \00", align 1
@.str.2.113 = private unnamed_addr constant [24 x i8] c"Call to external stage \00", align 1
@.str.3.114 = private unnamed_addr constant [18 x i8] c"Bounds given for \00", align 1
@.str.4.115 = private unnamed_addr constant [5 x i8] c" in \00", align 1
@.str.5.116 = private unnamed_addr constant [8 x i8] c" (from \00", align 1
@.str.6.117 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@.str.7.118 = private unnamed_addr constant [38 x i8] c") do not cover required region (from \00", align 1
@.str.8.119 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.9.120 = private unnamed_addr constant [11 x i8] c" has type \00", align 1
@.str.10.121 = private unnamed_addr constant [38 x i8] c" but type of the buffer passed in is \00", align 1
@.str.11.122 = private unnamed_addr constant [31 x i8] c" requires a buffer of exactly \00", align 1
@.str.12.123 = private unnamed_addr constant [43 x i8] c" dimensions, but the buffer passed in has \00", align 1
@.str.13.124 = private unnamed_addr constant [12 x i8] c" dimensions\00", align 1
@.str.14.125 = private unnamed_addr constant [17 x i8] c" is accessed at \00", align 1
@.str.15.126 = private unnamed_addr constant [28 x i8] c", which is before the min (\00", align 1
@.str.16.127 = private unnamed_addr constant [16 x i8] c") in dimension \00", align 1
@.str.17.128 = private unnamed_addr constant [28 x i8] c", which is beyond the max (\00", align 1
@.str.18.129 = private unnamed_addr constant [29 x i8] c"Total allocation for buffer \00", align 1
@.str.19.130 = private unnamed_addr constant [5 x i8] c" is \00", align 1
@.str.20.131 = private unnamed_addr constant [37 x i8] c", which exceeds the maximum size of \00", align 1
@.str.21.132 = private unnamed_addr constant [24 x i8] c"The extents for buffer \00", align 1
@.str.22.133 = private unnamed_addr constant [12 x i8] c" dimension \00", align 1
@.str.23.134 = private unnamed_addr constant [15 x i8] c" is negative (\00", align 1
@.str.24.135 = private unnamed_addr constant [31 x i8] c"Product of extents for buffer \00", align 1
@.str.25.136 = private unnamed_addr constant [29 x i8] c"Applying the constraints on \00", align 1
@.str.26.137 = private unnamed_addr constant [54 x i8] c" to the required region made it smaller in dimension \00", align 1
@.str.27.138 = private unnamed_addr constant [3 x i8] c". \00", align 1
@.str.28.139 = private unnamed_addr constant [16 x i8] c"Required size: \00", align 1
@.str.29.140 = private unnamed_addr constant [19 x i8] c"Constrained size: \00", align 1
@.str.30.141 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.31.142 = private unnamed_addr constant [22 x i8] c"Constraint violated: \00", align 1
@.str.32.143 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.33.144 = private unnamed_addr constant [6 x i8] c") == \00", align 1
@.str.34.145 = private unnamed_addr constant [11 x i8] c"Parameter \00", align 1
@.str.35.146 = private unnamed_addr constant [23 x i8] c" but must be at least \00", align 1
@.str.36 = private unnamed_addr constant [22 x i8] c" but must be at most \00", align 1
@.str.37 = private unnamed_addr constant [47 x i8] c"Out of memory (halide_malloc returned nullptr)\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"Buffer argument \00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c" is nullptr\00", align 1
@.str.40 = private unnamed_addr constant [25 x i8] c"Failed to dump function \00", align 1
@.str.41.147 = private unnamed_addr constant [10 x i8] c" to file \00", align 1
@.str.42 = private unnamed_addr constant [13 x i8] c" with error \00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"The host pointer of \00", align 1
@.str.44 = private unnamed_addr constant [22 x i8] c" is not aligned to a \00", align 1
@.str.45 = private unnamed_addr constant [17 x i8] c" bytes boundary.\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"The buffer \00", align 1
@.str.47 = private unnamed_addr constant [53 x i8] c" is dirty on device, but this pipeline was compiled \00", align 1
@.str.48 = private unnamed_addr constant [43 x i8] c"with no support for device to host copies.\00", align 1
@.str.49 = private unnamed_addr constant [55 x i8] c" is null, but the pipeline will access it on the host.\00", align 1
@.str.50.148 = private unnamed_addr constant [30 x i8] c"The folded storage dimension \00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c" of \00", align 1
@.str.52 = private unnamed_addr constant [36 x i8] c" was accessed out of order by loop \00", align 1
@.str.53 = private unnamed_addr constant [23 x i8] c"Cannot fold dimension \00", align 1
@.str.54 = private unnamed_addr constant [36 x i8] c" because an extern stage accesses [\00", align 1
@.str.55 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"],\00", align 1
@.str.57 = private unnamed_addr constant [47 x i8] c" which is outside the range currently valid: [\00", align 1
@.str.58.149 = private unnamed_addr constant [3 x i8] c"].\00", align 1
@.str.59.150 = private unnamed_addr constant [47 x i8] c" which wraps around the boundary of the fold, \00", align 1
@.str.60.151 = private unnamed_addr constant [30 x i8] c"which occurs at multiples of \00", align 1
@.str.61.152 = private unnamed_addr constant [18 x i8] c"The fold factor (\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c") of dimension \00", align 1
@.str.63 = private unnamed_addr constant [61 x i8] c" is too small to store the required region accessed by loop \00", align 1
@.str.64.153 = private unnamed_addr constant [3 x i8] c").\00", align 1
@.str.65 = private unnamed_addr constant [22 x i8] c"Requirement Failed: (\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.67 = private unnamed_addr constant [59 x i8] c"A schedule specialized with specialize_fail() was chosen: \00", align 1
@.str.68 = private unnamed_addr constant [55 x i8] c"Buffer has a non-zero device but no device interface.\0A\00", align 1
@.str.69 = private unnamed_addr constant [57 x i8] c"Buffer has a non-null device_interface but device is 0.\0A\00", align 1
@.str.70 = private unnamed_addr constant [49 x i8] c"Buffer has both host and device dirty bits set.\0A\00", align 1
@.str.71 = private unnamed_addr constant [26 x i8] c"Buffer pointer passed to \00", align 1
@.str.72 = private unnamed_addr constant [11 x i8] c" is null.\0A\00", align 1
@.str.73 = private unnamed_addr constant [32 x i8] c"The explicit allocation bound (\00", align 1
@.str.74 = private unnamed_addr constant [45 x i8] c" is too small to store the required region (\00", align 1
@.str.75 = private unnamed_addr constant [77 x i8] c"Buffer could not be cropped (runtime error or unimplemented device option).\0A\00", align 1
@.str.29.163 = private unnamed_addr constant [35 x i8] c"Printer buffer allocation failed.\0A\00", align 1
@.str.7.164 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.8.165 = private unnamed_addr constant [14 x i8] c" total time: \00", align 1
@.str.9.166 = private unnamed_addr constant [4 x i8] c" ms\00", align 1
@.str.10.167 = private unnamed_addr constant [12 x i8] c"  samples: \00", align 1
@.str.11.168 = private unnamed_addr constant [9 x i8] c"  runs: \00", align 1
@.str.12.169 = private unnamed_addr constant [13 x i8] c"  time/run: \00", align 1
@.str.13.170 = private unnamed_addr constant [5 x i8] c" ms\0A\00", align 1
@.str.14.171 = private unnamed_addr constant [24 x i8] c" average threads used: \00", align 1
@.str.15.172 = private unnamed_addr constant [20 x i8] c" heap allocations: \00", align 1
@.str.16.173 = private unnamed_addr constant [20 x i8] c"  peak heap usage: \00", align 1
@.str.17.174 = private unnamed_addr constant [8 x i8] c" bytes\0A\00", align 1
@.str.18.175 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.19.176 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.20.177 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.21.178 = private unnamed_addr constant [3 x i8] c"ms\00", align 1
@.str.22.179 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.23.180 = private unnamed_addr constant [3 x i8] c"%)\00", align 1
@.str.24.181 = private unnamed_addr constant [10 x i8] c"threads: \00", align 1
@.str.25.182 = private unnamed_addr constant [8 x i8] c" peak: \00", align 1
@.str.26.183 = private unnamed_addr constant [7 x i8] c" num: \00", align 1
@.str.27.184 = private unnamed_addr constant [7 x i8] c" avg: \00", align 1
@.str.28.185 = private unnamed_addr constant [9 x i8] c" stack: \00", align 1
@_ZZ25halide_profiler_get_stateE1s = internal global %struct.halide_profiler_state { %struct.halide_mutex zeroinitializer, i32 1, i32 0, i32 0, i32 0, %struct.halide_profiler_pipeline_stats* null, void (i32*, i32*)* null, %struct.halide_thread* null }, align 8
@.str.186 = private unnamed_addr constant [128 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/profiler_common.cpp:246 halide_abort_if_false() failed: p_stats != nullptr\0A\00", align 1
@.str.1.187 = private unnamed_addr constant [128 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/profiler_common.cpp:273 halide_abort_if_false() failed: p_stats != nullptr\0A\00", align 1
@.str.2.188 = private unnamed_addr constant [122 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/profiler_common.cpp:274 halide_abort_if_false() failed: func_id >= 0\0A\00", align 1
@.str.3.189 = private unnamed_addr constant [138 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/profiler_common.cpp:275 halide_abort_if_false() failed: func_id < p_stats->num_funcs\0A\00", align 1
@.str.4.190 = private unnamed_addr constant [128 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/profiler_common.cpp:309 halide_abort_if_false() failed: p_stats != nullptr\0A\00", align 1
@.str.5.191 = private unnamed_addr constant [122 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/profiler_common.cpp:310 halide_abort_if_false() failed: func_id >= 0\0A\00", align 1
@.str.6.192 = private unnamed_addr constant [138 x i8] c"/home/muchenx2/Hydride/frontends/halide/src/runtime/profiler_common.cpp:311 halide_abort_if_false() failed: func_id < p_stats->num_funcs\0A\00", align 1
@_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE = linkonce local_unnamed_addr global i32 (i32, i64*)* @halide_default_can_use_target_features, align 8
@_ZN6Halide7Runtime8Internal36halide_cpu_features_initialized_lockE = linkonce global %struct.halide_mutex zeroinitializer, align 8
@_ZN6Halide7Runtime8Internal31halide_cpu_features_initializedE = linkonce local_unnamed_addr global i8 0, align 1
@_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE = linkonce global [4 x i64] zeroinitializer, align 8
@.str.197 = private unnamed_addr constant [81 x i8] c"Internal error: wrong structure size passed to halide_can_use_target_features()\0A\00", align 1
@0 = private constant [4 x i64*] zeroinitializer
@str = private constant [6 x i8] c"input\00", align 32
@1 = private constant [4 x i64*] zeroinitializer
@str.200 = private constant [5 x i8] c"mask\00", align 32
@2 = private constant [4 x i64*] zeroinitializer
@str.201 = private constant [7 x i8] c"output\00", align 32
@3 = private constant [3 x %struct.halide_filter_argument_t] [%struct.halide_filter_argument_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str, i32 0, i32 0), i32 1, i32 2, %struct.halide_type_t { i8 1, i8 8, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** getelementptr inbounds ([4 x i64*], [4 x i64*]* @0, i32 0, i32 0) }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.200, i32 0, i32 0), i32 1, i32 2, %struct.halide_type_t { i8 0, i8 8, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** getelementptr inbounds ([4 x i64*], [4 x i64*]* @1, i32 0, i32 0) }, %struct.halide_filter_argument_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.201, i32 0, i32 0), i32 2, i32 2, %struct.halide_type_t { i8 1, i8 8, i16 1 }, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, %struct.halide_scalar_value_t* null, i64** getelementptr inbounds ([4 x i64*], [4 x i64*]* @2, i32 0, i32 0) }]
@str.202 = private constant [38 x i8] c"arm-64-osx-no_asserts-no_bounds_query\00", align 32
@str.203 = private constant [11 x i8] c"conv3x3a16\00", align 32
@conv3x3a16_metadata_storage = private constant %struct.halide_filter_metadata_t { i32 1, i32 3, %struct.halide_filter_argument_t* getelementptr inbounds ([3 x %struct.halide_filter_argument_t], [3 x %struct.halide_filter_argument_t]* @3, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.202, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.203, i32 0, i32 0) }
@switch.table.halide_type_to_string = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.76, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.75, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.74, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17.73, i64 0, i64 0)], align 8

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_malloc(i8* %user_context, i64 %x) #0 {
entry:
  %add = add i64 %x, 32
  %call1 = tail call i8* @malloc(i64 %add) #14
  %cmp = icmp eq i8* %call1, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %0 = ptrtoint i8* %call1 to i64
  %sub = add i64 %0, 39
  %and = and i64 %sub, -32
  %1 = inttoptr i64 %and to i8*
  %2 = inttoptr i64 %and to i8**
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 -1
  store i8* %call1, i8** %arrayidx, align 8, !tbaa !14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i8* [ %1, %if.end ], [ null, %entry ]
  ret i8* %retval.0
}

declare i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_default_free(i8* %user_context, i8* %ptr) #0 {
entry:
  %arrayidx = getelementptr inbounds i8, i8* %ptr, i64 -8
  %0 = bitcast i8* %arrayidx to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !14
  tail call void @free(i8* %1) #14
  ret void
}

declare void @free(i8*) local_unnamed_addr #1

; Function Attrs: nounwind willreturn mustprogress
define weak i8* (i8*, i64)* @halide_set_custom_malloc(i8* (i8*, i64)* %user_malloc) local_unnamed_addr #2 {
entry:
  %0 = load i8* (i8*, i64)*, i8* (i8*, i64)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 8, !tbaa !14
  store i8* (i8*, i64)* %user_malloc, i8* (i8*, i64)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 8, !tbaa !14
  ret i8* (i8*, i64)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak void (i8*, i8*)* @halide_set_custom_free(void (i8*, i8*)* %user_free) local_unnamed_addr #2 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 8, !tbaa !14
  store void (i8*, i8*)* %user_free, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 8, !tbaa !14
  ret void (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_malloc(i8* %user_context, i64 %x) local_unnamed_addr #0 {
entry:
  %0 = load i8* (i8*, i64)*, i8* (i8*, i64)** @_ZN6Halide7Runtime8Internal13custom_mallocE, align 8, !tbaa !14
  %call = tail call i8* %0(i8* %user_context, i64 %x) #14
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak void @halide_free(i8* %user_context, i8* %ptr) local_unnamed_addr #0 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal11custom_freeE, align 8, !tbaa !14
  tail call void %0(i8* %user_context, i8* %ptr) #14
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_default_error(i8* %user_context, i8* %msg) #0 {
entry:
  %buf = alloca [4096 x i8], align 1
  %0 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %0) #11
  %add.ptr = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 4094
  %call = call i8* @halide_string_to_string(i8* nonnull %0, i8* nonnull %add.ptr, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #14
  %add.ptr2 = getelementptr inbounds i8, i8* %call, i64 4094
  %call3 = call i8* @halide_string_to_string(i8* %call, i8* nonnull %add.ptr2, i8* %msg) #14
  %arrayidx = getelementptr inbounds i8, i8* %call3, i64 -1
  %1 = load i8, i8* %arrayidx, align 1, !tbaa !18
  %cmp.not = icmp eq i8 %1, 10
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8 10, i8* %call3, align 1, !tbaa !18
  %arrayidx5 = getelementptr inbounds i8, i8* %call3, i64 1
  store i8 0, i8* %arrayidx5, align 1, !tbaa !18
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %dst.0 = phi i8* [ %arrayidx5, %if.then ], [ %call3, %entry ]
  %sub.ptr.lhs.cast = ptrtoint i8* %dst.0 to i64
  %sub.ptr.rhs.cast = ptrtoint [4096 x i8]* %buf to i64
  %sub.ptr.sub = sub i64 1, %sub.ptr.rhs.cast
  %add = add i64 %sub.ptr.sub, %sub.ptr.lhs.cast
  %call9 = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %0, i64 %add) #14
  call void @halide_print(i8* %user_context, i8* nonnull %0) #14
  call void @abort() #14
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %0) #11
  ret void
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @abort() local_unnamed_addr #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind mustprogress
define weak void @halide_error(i8* %user_context, i8* %msg) local_unnamed_addr #0 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal13error_handlerE, align 8, !tbaa !14
  tail call void %0(i8* %user_context, i8* %msg) #14
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void (i8*, i8*)* @halide_set_error_handler(void (i8*, i8*)* %handler) local_unnamed_addr #2 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal13error_handlerE, align 8, !tbaa !14
  store void (i8*, i8*)* %handler, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal13error_handlerE, align 8, !tbaa !14
  ret void (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_print(i8* %user_context, i8* %msg) local_unnamed_addr #0 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal12custom_printE, align 8, !tbaa !14
  tail call void %0(i8* %user_context, i8* %msg) #14
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void (i8*, i8*)* @halide_set_custom_print(void (i8*, i8*)* %print) local_unnamed_addr #2 {
entry:
  %0 = load void (i8*, i8*)*, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal12custom_printE, align 8, !tbaa !14
  store void (i8*, i8*)* %print, void (i8*, i8*)** @_ZN6Halide7Runtime8Internal12custom_printE, align 8, !tbaa !14
  ret void (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_start_clock(i8* %user_context) local_unnamed_addr #0 {
entry:
  %0 = load i8, i8* @_ZN6Halide7Runtime8Internal29halide_reference_clock_initedE, align 1, !tbaa !19, !range !21
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i32 @mach_timebase_info(%struct.mach_timebase_info* nonnull @_ZN6Halide7Runtime8Internal20halide_timebase_infoE) #14
  %call1 = tail call i64 @mach_absolute_time() #14
  store i64 %call1, i64* @_ZN6Halide7Runtime8Internal22halide_reference_clockE, align 8, !tbaa !22
  store i8 1, i8* @_ZN6Halide7Runtime8Internal29halide_reference_clock_initedE, align 1, !tbaa !19
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 0
}

declare i32 @mach_timebase_info(%struct.mach_timebase_info*) local_unnamed_addr #1

declare i64 @mach_absolute_time() local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i64 @halide_current_time_ns(i8* %user_context) local_unnamed_addr #0 {
entry:
  %call = tail call i64 @mach_absolute_time() #14
  %0 = load i64, i64* @_ZN6Halide7Runtime8Internal22halide_reference_clockE, align 8, !tbaa !22
  %sub = sub i64 %call, %0
  %1 = load i32, i32* getelementptr inbounds (%struct.mach_timebase_info, %struct.mach_timebase_info* @_ZN6Halide7Runtime8Internal20halide_timebase_infoE, i64 0, i32 0), align 4, !tbaa !24
  %conv = zext i32 %1 to i64
  %mul = mul i64 %sub, %conv
  %2 = load i32, i32* getelementptr inbounds (%struct.mach_timebase_info, %struct.mach_timebase_info* @_ZN6Halide7Runtime8Internal20halide_timebase_infoE, i64 0, i32 1), align 4, !tbaa !27
  %conv1 = zext i32 %2 to i64
  %div = udiv i64 %mul, %conv1
  ret i64 %div
}

; Function Attrs: nounwind mustprogress
define weak void @halide_sleep_ms(i8* %user_context, i32 %ms) local_unnamed_addr #0 {
entry:
  %mul = mul nsw i32 %ms, 1000
  %call = tail call i32 @usleep(i32 %mul) #14
  ret void
}

declare i32 @usleep(i32) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_default_print(i8* %user_context, i8* %str) #0 {
entry:
  %call = tail call i64 @strlen(i8* %str) #14
  %call1 = tail call i64 @write(i32 1, i8* %str, i64 %call) #14
  ret void
}

declare i64 @strlen(i8*) local_unnamed_addr #1

declare i64 @write(i32, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i32 @halide_host_cpu_count() local_unnamed_addr #0 {
entry:
  %call = tail call i64 @sysconf(i32 58) #14
  %conv = trunc i64 %call to i32
  ret i32 %conv
}

declare i64 @sysconf(i32) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_thread_yield() local_unnamed_addr #0 {
entry:
  %call = tail call i32 @swtch_pri(i32 0) #14
  ret void
}

declare i32 @swtch_pri(i32) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_task(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) #0 {
entry:
  %call = tail call i32 %f(i8* %user_context, i32 %idx, i8* %closure) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_loop_task(i8* %user_context, i32 (i8*, i32, i32, i8*, i8*)* %f, i32 %min, i32 %extent, i8* %closure, i8* %task_parent) #0 {
entry:
  %call = tail call i32 %f(i8* %user_context, i32 %min, i32 %extent, i8* %closure, i8* %task_parent) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_par_for(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) #0 {
entry:
  %job = alloca %"struct.Halide::Runtime::Internal::work", align 8
  %cmp = icmp slt i32 %size, 1
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = bitcast %"struct.Halide::Runtime::Internal::work"* %job to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #11
  %fn = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 0
  store i32 (i8*, i32, i32, i8*, i8*)* null, i32 (i8*, i32, i32, i8*, i8*)** %fn, align 8, !tbaa !28
  %min2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 5
  store i32 %min, i32* %min2, align 4, !tbaa !31
  %extent = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 6
  store i32 %size, i32* %extent, align 8, !tbaa !32
  %serial = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 8
  store i8 0, i8* %serial, align 8, !tbaa !33
  %semaphores = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 3
  store %struct.halide_semaphore_acquire_t* null, %struct.halide_semaphore_acquire_t** %semaphores, align 8, !tbaa !34
  %num_semaphores = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 4
  store i32 0, i32* %num_semaphores, align 8, !tbaa !35
  %closure8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 1
  store i8* %closure, i8** %closure8, align 8, !tbaa !36
  %min_threads = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 7
  store i32 0, i32* %min_threads, align 4, !tbaa !37
  %name = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 0, i32 2
  store i8* null, i8** %name, align 8, !tbaa !38
  %task_fn = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 1
  store i32 (i8*, i32, i8*)* %f, i32 (i8*, i32, i8*)** %task_fn, align 8, !tbaa !39
  %user_context11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 7
  store i8* %user_context, i8** %user_context11, align 8, !tbaa !40
  %exit_status = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 9
  %active_workers = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 8
  %1 = bitcast i32* %active_workers to <2 x i32>*
  store <2 x i32> zeroinitializer, <2 x i32>* %1, align 8, !tbaa !41
  %next_semaphore = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 10
  store i32 0, i32* %next_semaphore, align 8, !tbaa !42
  %owner_is_sleeping = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 11
  store i8 0, i8* %owner_is_sleeping, align 4, !tbaa !43
  %siblings = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 3
  store %"struct.Halide::Runtime::Internal::work"* %job, %"struct.Halide::Runtime::Internal::work"** %siblings, align 8, !tbaa !44
  %sibling_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 4
  store i32 0, i32* %sibling_count, align 8, !tbaa !45
  %parent_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job, i64 0, i32 5
  store %"struct.Halide::Runtime::Internal::work"* null, %"struct.Halide::Runtime::Internal::work"** %parent_job, align 8, !tbaa !46
  call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  call void @_ZN6Halide7Runtime8Internal27enqueue_work_already_lockedEiPNS1_4workES3_(i32 1, %"struct.Halide::Runtime::Internal::work"* nonnull %job, %"struct.Halide::Runtime::Internal::work"* null) #15
  call void @_ZN6Halide7Runtime8Internal28worker_thread_already_lockedEPNS1_4workE(%"struct.Halide::Runtime::Internal::work"* nonnull %job) #15
  call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  %2 = load i32, i32* %exit_status, align 4, !tbaa !47
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #11
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %2, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
define weak void @halide_mutex_lock(%struct.halide_mutex* %mutex) local_unnamed_addr #4 {
entry:
  %control.i.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", align 8
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %mutex, i64 0, i32 0, i64 0
  %0 = cmpxchg weak i64* %state.i, i64 0, i64 1 acquire monotonic
  %1 = extractvalue { i64, i1 } %0, 1
  br i1 %1, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex4lockEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %2 = load atomic i64, i64* %state.i monotonic, align 8
  %3 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i to i8*
  %4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0, i32 0
  %lock_state2.i.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0
  %6 = ptrtoint %struct.halide_mutex* %mutex to i64
  br label %while.cond.outer.i.i

while.cond.outer.i.i:                             ; preds = %while.cond.outer.i.i.backedge, %if.then.i
  %expected.0.ph.i.i = phi i64 [ %2, %if.then.i ], [ %expected.0.ph.i.i.be, %while.cond.outer.i.i.backedge ]
  %spinner.sroa.0.0.ph.i.i = phi i32 [ 40, %if.then.i ], [ %spinner.sroa.0.0.ph.i.i.be, %while.cond.outer.i.i.backedge ]
  %and55.i.i = and i64 %expected.0.ph.i.i, 1
  %tobool.not56.i.i = icmp eq i64 %and55.i.i, 0
  br i1 %tobool.not56.i.i, label %if.then.i.i, label %if.end4.i.i

if.then.i.i:                                      ; preds = %while.cond.outer.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i
  %expected.057.i.i = phi i64 [ %9, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i ], [ %expected.0.ph.i.i, %while.cond.outer.i.i ]
  %or.i.i = or i64 %expected.057.i.i, 1
  %7 = cmpxchg weak i64* %state.i, i64 %expected.057.i.i, i64 %or.i.i acquire monotonic
  %8 = extractvalue { i64, i1 } %7, 1
  br i1 %8, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex4lockEv.exit, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i: ; preds = %if.then.i.i
  %9 = extractvalue { i64, i1 } %7, 0
  %and.i.i = and i64 %9, 1
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end4.i.i.loopexit

if.end4.i.i.loopexit:                             ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i
  %10 = extractvalue { i64, i1 } %7, 0
  br label %if.end4.i.i

if.end4.i.i:                                      ; preds = %if.end4.i.i.loopexit, %while.cond.outer.i.i
  %expected.0.lcssa.i.i = phi i64 [ %expected.0.ph.i.i, %while.cond.outer.i.i ], [ %10, %if.end4.i.i.loopexit ]
  %cmp.i.i.i = icmp sgt i32 %spinner.sroa.0.0.ph.i.i, 0
  br i1 %cmp.i.i.i, label %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i, label %if.end8.i.i

_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i: ; preds = %if.end4.i.i
  %cmp4.i.not.i.i = icmp eq i32 %spinner.sroa.0.0.ph.i.i, 1
  br i1 %cmp4.i.not.i.i, label %if.end8.i.i, label %if.then6.i.i

if.then6.i.i:                                     ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i
  %dec.i.i.i = add nsw i32 %spinner.sroa.0.0.ph.i.i, -1
  call void @halide_thread_yield() #14
  %11 = load atomic i64, i64* %state.i monotonic, align 8
  br label %while.cond.outer.i.i.backedge

if.end8.i.i:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i, %if.end4.i.i
  %spinner.sroa.0.152.i.i = phi i32 [ 0, %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i ], [ %spinner.sroa.0.0.ph.i.i, %if.end4.i.i ]
  %and9.i.i = and i64 %expected.0.lcssa.i.i, 2
  %cmp.i.i = icmp eq i64 %and9.i.i, 0
  br i1 %cmp.i.i, label %if.then10.i.i, label %if.end19.i.i

if.then10.i.i:                                    ; preds = %if.end8.i.i
  %or12.i.i = or i64 %expected.0.lcssa.i.i, 2
  %12 = cmpxchg weak i64* %state.i, i64 %expected.0.lcssa.i.i, i64 %or12.i.i monotonic monotonic
  %13 = extractvalue { i64, i1 } %12, 1
  br i1 %13, label %if.end19.i.i, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i: ; preds = %if.then10.i.i
  %14 = extractvalue { i64, i1 } %12, 0
  br label %while.cond.outer.i.i.backedge

if.end19.i.i:                                     ; preds = %if.then10.i.i, %if.end8.i.i
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !48
  store i64* %state.i, i64** %lock_state2.i.i.i, align 8, !tbaa !50
  %call21.i.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control4parkEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %5, i64 %6) #14
  %cmp22.i.i = icmp eq i64 %call21.i.i, %6
  br i1 %cmp22.i.i, label %cleanup30.critedge.i.i, label %if.end24.i.i

if.end24.i.i:                                     ; preds = %if.end19.i.i
  %15 = load atomic i64, i64* %state.i monotonic, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #11
  br label %while.cond.outer.i.i.backedge

while.cond.outer.i.i.backedge:                    ; preds = %if.end24.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i, %if.then6.i.i
  %expected.0.ph.i.i.be = phi i64 [ %14, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i ], [ %15, %if.end24.i.i ], [ %11, %if.then6.i.i ]
  %spinner.sroa.0.0.ph.i.i.be = phi i32 [ %spinner.sroa.0.152.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i ], [ 40, %if.end24.i.i ], [ %dec.i.i.i, %if.then6.i.i ]
  br label %while.cond.outer.i.i

cleanup30.critedge.i.i:                           ; preds = %if.end19.i.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #11
  br label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex4lockEv.exit

_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex4lockEv.exit: ; preds = %if.then.i.i, %cleanup30.critedge.i.i, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal27enqueue_work_already_lockedEiPNS1_4workES3_(i32 %num_jobs, %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"* %task_parent) local_unnamed_addr #0 {
entry:
  %0 = load i8, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 15), align 1, !tbaa !52, !range !21
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %land.rhs.i, label %if.end4

land.rhs.i:                                       ; preds = %entry, %while.body.i
  %bytes.011.i = phi i8* [ %incdec.ptr.i, %while.body.i ], [ bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), %entry ]
  %1 = load i8, i8* %bytes.011.i, align 1, !tbaa !18
  %cmp2.i = icmp eq i8 %1, 0
  br i1 %cmp2.i, label %while.body.i, label %do.body.i

while.body.i:                                     ; preds = %land.rhs.i
  %incdec.ptr.i = getelementptr inbounds i8, i8* %bytes.011.i, i64 1
  %exitcond.not.i = icmp eq i8* %incdec.ptr.i, bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* select (i1 icmp ugt (i8* bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1) to i8*), i8* getelementptr (i8, i8* bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i64 1)), %"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1), %"struct.Halide::Runtime::Internal::work_queue_t"* bitcast (i8* getelementptr (i8, i8* bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i64 1) to %"struct.Halide::Runtime::Internal::work_queue_t"*)) to i8*)
  br i1 %exitcond.not.i, label %do.body.i, label %land.rhs.i, !llvm.loop !56

do.body.i:                                        ; preds = %while.body.i, %land.rhs.i
  %bytes.0.lcssa.i = phi i8* [ %bytes.011.i, %land.rhs.i ], [ bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* select (i1 icmp ugt (i8* bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1) to i8*), i8* getelementptr (i8, i8* bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i64 1)), %"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1), %"struct.Halide::Runtime::Internal::work_queue_t"* bitcast (i8* getelementptr (i8, i8* bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i64 1) to %"struct.Halide::Runtime::Internal::work_queue_t"*)) to i8*), %while.body.i ]
  %cmp3.i = icmp eq i8* %bytes.0.lcssa.i, bitcast (%"struct.Halide::Runtime::Internal::work_queue_t"* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 1) to i8*)
  br i1 %cmp3.i, label %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit, label %if.then.i

if.then.i:                                        ; preds = %do.body.i
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([186 x i8], [186 x i8]* @.str.6, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit

_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit: ; preds = %if.then.i, %do.body.i
  %2 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !58
  %tobool1.not = icmp eq i32 %2, 0
  br i1 %tobool1.not, label %if.then2, label %if.end

if.then2:                                         ; preds = %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit
  %call = tail call i32 @_ZN6Halide7Runtime8Internal27default_desired_num_threadsEv() #15
  br label %if.end

if.end:                                           ; preds = %if.then2, %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit
  %3 = phi i32 [ %call, %if.then2 ], [ %2, %_ZNK6Halide7Runtime8Internal12work_queue_t13assert_zeroedEv.exit ]
  %4 = icmp sgt i32 %3, 1
  %spec.select.i = select i1 %4, i32 %3, i32 1
  %5 = icmp slt i32 %spec.select.i, 256
  %call3176 = select i1 %5, i32 %spec.select.i, i32 256
  store i32 %call3176, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !58
  store i8 1, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 15), align 1, !tbaa !52
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry
  %cmp181 = icmp sgt i32 %num_jobs, 0
  br i1 %cmp181, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %if.end4
  %wide.trip.count = zext i32 %num_jobs to i64
  br label %for.body

for.cond.cleanup.loopexit:                        ; preds = %for.inc
  %phi.bo = and i8 %stealable_jobs.1, 1
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %if.end4
  %workers_to_wake.0.lcssa = phi i32 [ -1, %if.end4 ], [ %workers_to_wake.1, %for.cond.cleanup.loopexit ]
  %stealable_jobs.0.lcssa = phi i8 [ 0, %if.end4 ], [ %phi.bo, %for.cond.cleanup.loopexit ]
  %job_has_acquires.0.lcssa = phi i8 [ 0, %if.end4 ], [ %spec.select, %for.cond.cleanup.loopexit ]
  %job_may_block.0.lcssa = phi i8 [ 0, %if.end4 ], [ %job_may_block.1, %for.cond.cleanup.loopexit ]
  %min_threads.0.lcssa = phi i32 [ 0, %if.end4 ], [ %add, %for.cond.cleanup.loopexit ]
  %cmp31 = icmp eq %"struct.Halide::Runtime::Internal::work"* %task_parent, null
  br i1 %cmp31, label %if.then32, label %do.body61

for.body:                                         ; preds = %for.inc, %for.body.preheader
  %indvars.iv193 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next194, %for.inc ]
  %min_threads.0187 = phi i32 [ 0, %for.body.preheader ], [ %add, %for.inc ]
  %job_may_block.0185 = phi i8 [ 0, %for.body.preheader ], [ %job_may_block.1, %for.inc ]
  %job_has_acquires.0184 = phi i8 [ 0, %for.body.preheader ], [ %spec.select, %for.inc ]
  %stealable_jobs.0183 = phi i8 [ 0, %for.body.preheader ], [ %stealable_jobs.1, %for.inc ]
  %workers_to_wake.0182 = phi i32 [ -1, %for.body.preheader ], [ %workers_to_wake.1, %for.inc ]
  %min_threads5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193, i32 0, i32 7
  %6 = load i32, i32* %min_threads5, align 4, !tbaa !37
  %cmp6 = icmp eq i32 %6, 0
  %add = add i32 %6, %min_threads.0187
  %stealable_jobs.1 = select i1 %cmp6, i8 1, i8 %stealable_jobs.0183
  %job_may_block.1 = select i1 %cmp6, i8 %job_may_block.0185, i8 1
  %num_semaphores = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193, i32 0, i32 4
  %7 = load i32, i32* %num_semaphores, align 8, !tbaa !35
  %cmp16.not = icmp eq i32 %7, 0
  %spec.select = select i1 %cmp16.not, i8 %job_has_acquires.0184, i8 1
  %serial = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193, i32 0, i32 8
  %8 = load i8, i8* %serial, align 8, !tbaa !33, !range !21
  %tobool22.not = icmp eq i8 %8, 0
  br i1 %tobool22.not, label %if.else24, label %if.then23

if.then23:                                        ; preds = %for.body
  %inc = add nsw i32 %workers_to_wake.0182, 1
  br label %for.inc

if.else24:                                        ; preds = %for.body
  %extent = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv193, i32 0, i32 6
  %9 = load i32, i32* %extent, align 8, !tbaa !32
  %add28 = add nsw i32 %9, %workers_to_wake.0182
  br label %for.inc

for.inc:                                          ; preds = %if.else24, %if.then23
  %workers_to_wake.1 = phi i32 [ %inc, %if.then23 ], [ %add28, %if.else24 ]
  %indvars.iv.next194 = add nuw nsw i64 %indvars.iv193, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next194, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup.loopexit, label %for.body, !llvm.loop !59

if.then32:                                        ; preds = %for.cond.cleanup
  %10 = or i8 %job_may_block.0.lcssa, %job_has_acquires.0.lcssa
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  %not. = xor i1 %12, true
  %add36 = zext i1 %not. to i32
  %min_threads.2 = add nsw i32 %min_threads.0.lcssa, %add36
  %13 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !60
  %cmp38180 = icmp slt i32 %13, 256
  br i1 %cmp38180, label %land.rhs, label %do.end50

land.rhs:                                         ; preds = %if.then32, %while.body
  %14 = phi i32 [ %inc45, %while.body ], [ %13, %if.then32 ]
  %15 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !58
  %sub = add nsw i32 %15, -1
  %cmp39 = icmp slt i32 %14, %sub
  br i1 %cmp39, label %while.body, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %add40 = add nsw i32 %14, 1
  %16 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !61
  %sub41 = sub i32 %add40, %16
  %cmp42 = icmp slt i32 %sub41, %min_threads.2
  br i1 %cmp42, label %while.body, label %do.end50

while.body:                                       ; preds = %lor.rhs, %land.rhs
  %17 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !62
  %inc43 = add nsw i32 %17, 1
  store i32 %inc43, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !62
  %call44 = tail call %struct.halide_thread* @halide_spawn_thread(void (i8*)* nonnull @_ZN6Halide7Runtime8Internal13worker_threadEPv, i8* null) #15
  %18 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !60
  %inc45 = add nsw i32 %18, 1
  store i32 %inc45, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !60
  %idxprom46 = sext i32 %18 to i64
  %arrayidx47 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 13, i64 %idxprom46
  store %struct.halide_thread* %call44, %struct.halide_thread** %arrayidx47, align 8, !tbaa !14
  %cmp38 = icmp slt i32 %18, 255
  br i1 %cmp38, label %land.rhs, label %do.end50, !llvm.loop !63

do.end50:                                         ; preds = %while.body, %lor.rhs, %if.then32
  br i1 %12, label %if.end77, label %if.then54

if.then54:                                        ; preds = %do.end50
  %19 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !61
  %inc55 = add nsw i32 %19, 1
  store i32 %inc55, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !61
  br label %if.end77

do.body61:                                        ; preds = %for.cond.cleanup
  %min_threads63 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %task_parent, i64 0, i32 0, i32 7
  %20 = load i32, i32* %min_threads63, align 4, !tbaa !37
  %active_workers = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %task_parent, i64 0, i32 8
  %21 = load i32, i32* %active_workers, align 8, !tbaa !64
  %mul = mul nsw i32 %21, %20
  %threads_reserved = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %task_parent, i64 0, i32 6
  %22 = load i32, i32* %threads_reserved, align 8, !tbaa !65
  %sub64 = sub nsw i32 %mul, %22
  %cmp65.not = icmp sgt i32 %min_threads.0.lcssa, %sub64
  br i1 %cmp65.not, label %if.then66, label %do.end69

if.then66:                                        ; preds = %do.body61
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([263 x i8], [263 x i8]* @.str.3, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.end69

do.end69:                                         ; preds = %if.then66, %do.body61
  %23 = or i8 %job_may_block.0.lcssa, %job_has_acquires.0.lcssa
  %24 = and i8 %23, 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %if.end77, label %if.then73

if.then73:                                        ; preds = %do.end69
  %26 = load i32, i32* %threads_reserved, align 8, !tbaa !65
  %inc75 = add nsw i32 %26, 1
  store i32 %inc75, i32* %threads_reserved, align 8, !tbaa !65
  br label %if.end77

if.end77:                                         ; preds = %if.then73, %do.end69, %if.then54, %do.end50
  br i1 %cmp181, label %for.body83.lr.ph, label %for.cond.cleanup82

for.body83.lr.ph:                                 ; preds = %if.end77
  %.promoted = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !66
  %27 = zext i32 %num_jobs to i64
  %min.iters.check = icmp eq i32 %num_jobs, 1
  br i1 %min.iters.check, label %for.body83.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body83.lr.ph
  %n.vec = and i64 %27, 4294967294
  %ind.end = and i64 %27, 1
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vector.recur = phi %"struct.Halide::Runtime::Internal::work"* [ %.promoted, %vector.ph ], [ %31, %vector.body ]
  %offset.idx = sub i64 %27, %index
  %28 = add nsw i64 %offset.idx, -1
  %29 = add i64 %offset.idx, -2
  %30 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %28
  %31 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %29
  %32 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %28, i32 2
  %33 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %29, i32 2
  store %"struct.Halide::Runtime::Internal::work"* %vector.recur, %"struct.Halide::Runtime::Internal::work"** %32, align 8, !tbaa !67
  store %"struct.Halide::Runtime::Internal::work"* %30, %"struct.Halide::Runtime::Internal::work"** %33, align 8, !tbaa !67
  %34 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %28, i32 3
  %35 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %29, i32 3
  store %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"** %34, align 8, !tbaa !44
  store %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"** %35, align 8, !tbaa !44
  %36 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %28, i32 4
  %37 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %29, i32 4
  store i32 %num_jobs, i32* %36, align 8, !tbaa !45
  store i32 %num_jobs, i32* %37, align 8, !tbaa !45
  %38 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %28, i32 6
  %39 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %29, i32 6
  store i32 0, i32* %38, align 8, !tbaa !65
  store i32 0, i32* %39, align 8, !tbaa !65
  %index.next = add i64 %index, 2
  %40 = icmp eq i64 %index.next, %n.vec
  br i1 %40, label %middle.block, label %vector.body, !llvm.loop !68

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %27
  br i1 %cmp.n, label %for.cond80.for.cond.cleanup82_crit_edge, label %for.body83.preheader

for.body83.preheader:                             ; preds = %for.body83.lr.ph, %middle.block
  %indvars.iv.ph = phi i64 [ %ind.end, %middle.block ], [ %27, %for.body83.lr.ph ]
  %scalar.recur.ph = phi %"struct.Halide::Runtime::Internal::work"* [ %31, %middle.block ], [ %.promoted, %for.body83.lr.ph ]
  br label %for.body83

for.cond80.for.cond.cleanup82_crit_edge:          ; preds = %for.body83, %middle.block
  store %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !66
  br label %for.cond.cleanup82

for.cond.cleanup82:                               ; preds = %for.cond80.for.cond.cleanup82_crit_edge, %if.end77
  %41 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !70
  %tobool96 = icmp ne i32 %41, 0
  %42 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8
  %43 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8
  %cmp98 = icmp slt i32 %42, %43
  %44 = or i1 %tobool96, %cmp98
  %cmp102 = icmp sgt i32 %workers_to_wake.0.lcssa, %42
  %or.cond174 = or i1 %cmp102, %44
  %storemerge = select i1 %or.cond174, i32 %43, i32 %workers_to_wake.0.lcssa
  store i32 %storemerge, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 6), align 8, !tbaa !71
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 8)) #15
  %45 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 6), align 8, !tbaa !71
  %46 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !62
  %cmp106 = icmp sgt i32 %45, %46
  br i1 %cmp106, label %if.then107, label %if.end111

for.body83:                                       ; preds = %for.body83.preheader, %for.body83
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body83 ], [ %indvars.iv.ph, %for.body83.preheader ]
  %scalar.recur = phi %"struct.Halide::Runtime::Internal::work"* [ %arrayidx85, %for.body83 ], [ %scalar.recur.ph, %for.body83.preheader ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx85 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next
  %next_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next, i32 2
  store %"struct.Halide::Runtime::Internal::work"* %scalar.recur, %"struct.Halide::Runtime::Internal::work"** %next_job, align 8, !tbaa !67
  %siblings = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next, i32 3
  store %"struct.Halide::Runtime::Internal::work"* %jobs, %"struct.Halide::Runtime::Internal::work"** %siblings, align 8, !tbaa !44
  %sibling_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next, i32 4
  store i32 %num_jobs, i32* %sibling_count, align 8, !tbaa !45
  %threads_reserved93 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %jobs, i64 %indvars.iv.next, i32 6
  store i32 0, i32* %threads_reserved93, align 8, !tbaa !65
  %cmp81 = icmp sgt i64 %indvars.iv, 1
  br i1 %cmp81, label %for.body83, label %for.cond80.for.cond.cleanup82_crit_edge, !llvm.loop !72

if.then107:                                       ; preds = %for.cond.cleanup82
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 9)) #15
  %tobool108.not = icmp eq i8 %stealable_jobs.0.lcssa, 0
  br i1 %tobool108.not, label %if.end111, label %if.then109

if.then109:                                       ; preds = %if.then107
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #15
  br label %if.end111

if.end111:                                        ; preds = %if.then109, %if.then107, %for.cond.cleanup82
  %47 = or i8 %job_may_block.0.lcssa, %job_has_acquires.0.lcssa
  %48 = and i8 %47, 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %if.end123, label %if.then115

if.then115:                                       ; preds = %if.end111
  br i1 %cmp31, label %if.else120, label %if.then117

if.then117:                                       ; preds = %if.then115
  %threads_reserved118 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %task_parent, i64 0, i32 6
  %50 = load i32, i32* %threads_reserved118, align 8, !tbaa !65
  %dec119 = add nsw i32 %50, -1
  store i32 %dec119, i32* %threads_reserved118, align 8, !tbaa !65
  br label %if.end123

if.else120:                                       ; preds = %if.then115
  %51 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !61
  %dec121 = add nsw i32 %51, -1
  store i32 %dec121, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !61
  br label %if.end123

if.end123:                                        ; preds = %if.else120, %if.then117, %if.end111
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal28worker_thread_already_lockedEPNS1_4workE(%"struct.Halide::Runtime::Internal::work"* %owned_job) local_unnamed_addr #0 {
entry:
  %active_workers.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 8
  %tobool.not = icmp eq %"struct.Halide::Runtime::Internal::work"* %owned_job, null
  %extent.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 0, i32 6
  %exit_status = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 9
  %parent_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 5
  %siblings56 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 3
  %owner_is_sleeping = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 11
  %next_job10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %owned_job, i64 0, i32 2
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %entry
  %spin_count.0 = phi i32 [ 0, %entry ], [ %spin_count.0.be, %while.cond.backedge ]
  br i1 %tobool.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %while.cond
  %0 = load i32, i32* %extent.i, align 8, !tbaa !32
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %cond.end, label %if.then

cond.false:                                       ; preds = %while.cond
  %1 = load i8, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 14), align 8, !tbaa !73, !range !21
  %tobool1.not = icmp eq i8 %1, 0
  br i1 %tobool1.not, label %do.end.thread, label %while.end316

cond.end:                                         ; preds = %cond.true
  %2 = load i32, i32* %active_workers.i, align 8, !tbaa !64
  %tobool2.i.not = icmp eq i32 %2, 0
  br i1 %tobool2.i.not, label %while.end316, label %if.then

if.then:                                          ; preds = %cond.end, %cond.true
  %3 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !66
  %4 = load i32, i32* %exit_status, align 4, !tbaa !47
  %cmp.not = icmp eq i32 %4, 0
  br i1 %cmp.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.then
  %5 = load i32, i32* %active_workers.i, align 8, !tbaa !64
  %cmp4 = icmp eq i32 %5, 0
  br i1 %cmp4, label %while.cond6.preheader, label %do.end

while.cond6.preheader:                            ; preds = %if.then3
  %cmp7.not524 = icmp eq %"struct.Halide::Runtime::Internal::work"* %3, %owned_job
  br i1 %cmp7.not524, label %while.end, label %while.body8

while.body8:                                      ; preds = %while.cond6.preheader, %while.body8
  %job.0525 = phi %"struct.Halide::Runtime::Internal::work"* [ %6, %while.body8 ], [ %3, %while.cond6.preheader ]
  %next_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.0525, i64 0, i32 2
  %6 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job, align 8, !tbaa !67
  %cmp7.not = icmp eq %"struct.Halide::Runtime::Internal::work"* %6, %owned_job
  br i1 %cmp7.not, label %while.end.loopexit, label %while.body8, !llvm.loop !74

while.end.loopexit:                               ; preds = %while.body8
  %next_job.le = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.0525, i64 0, i32 2
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %while.cond6.preheader
  %prev_ptr.0.lcssa = phi %"struct.Halide::Runtime::Internal::work"** [ getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), %while.cond6.preheader ], [ %next_job.le, %while.end.loopexit ]
  %7 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job10, align 8, !tbaa !67
  store %"struct.Halide::Runtime::Internal::work"* %7, %"struct.Halide::Runtime::Internal::work"** %prev_ptr.0.lcssa, align 8, !tbaa !14
  store i32 0, i32* %extent.i, align 8, !tbaa !32
  br label %while.cond.backedge

if.else:                                          ; preds = %if.then
  %8 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job, align 8, !tbaa !46
  %tobool11.not = icmp eq %"struct.Halide::Runtime::Internal::work"* %8, null
  br i1 %tobool11.not, label %do.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else
  %exit_status13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %8, i64 0, i32 9
  %9 = load i32, i32* %exit_status13, align 4, !tbaa !47
  %cmp14.not = icmp eq i32 %9, 0
  br i1 %cmp14.not, label %do.end, label %if.then15

if.then15:                                        ; preds = %land.lhs.true
  store i32 %9, i32* %exit_status, align 4, !tbaa !47
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #15
  br label %while.cond.backedge

do.end:                                           ; preds = %land.lhs.true, %if.else, %if.then3
  %tobool23.not527 = icmp eq %"struct.Halide::Runtime::Internal::work"* %3, null
  br i1 %tobool23.not527, label %if.then105, label %do.end27

do.end.thread:                                    ; preds = %cond.false
  %10 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !66
  %tobool23.not527563 = icmp eq %"struct.Halide::Runtime::Internal::work"* %10, null
  br i1 %tobool23.not527563, label %if.else112, label %do.end27.us

do.end27.us:                                      ; preds = %do.end.thread, %cleanup.us
  %job.1529.us = phi %"struct.Halide::Runtime::Internal::work"* [ %29, %cleanup.us ], [ %10, %do.end.thread ]
  %prev_ptr.1528.us = phi %"struct.Halide::Runtime::Internal::work"** [ %next_job95.us, %cleanup.us ], [ getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), %do.end.thread ]
  %parent_job29.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 5
  %11 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job29.us, align 8, !tbaa !46
  %cmp30.us = icmp eq %"struct.Halide::Runtime::Internal::work"* %11, null
  br i1 %cmp30.us, label %if.then31.us, label %if.else32.us

if.else32.us:                                     ; preds = %do.end27.us
  %active_workers33.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %11, i64 0, i32 8
  %12 = load i32, i32* %active_workers33.us, align 8, !tbaa !64
  %cmp34.us = icmp eq i32 %12, 0
  %min_threads.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %11, i64 0, i32 0, i32 7
  %13 = load i32, i32* %min_threads.us, align 4, !tbaa !37
  br i1 %cmp34.us, label %if.then35.us, label %if.else38.us

if.else38.us:                                     ; preds = %if.else32.us
  %mul.us = mul nsw i32 %13, %12
  %threads_reserved42.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %11, i64 0, i32 6
  %14 = load i32, i32* %threads_reserved42.us, align 8, !tbaa !65
  %sub43.us = sub nsw i32 %mul.us, %14
  br label %if.end45.us

if.then35.us:                                     ; preds = %if.else32.us
  %threads_reserved.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %11, i64 0, i32 6
  %15 = load i32, i32* %threads_reserved.us, align 8, !tbaa !65
  %sub37.us = sub nsw i32 %13, %15
  br label %if.end45.us

if.then31.us:                                     ; preds = %do.end27.us
  %16 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !60
  %add.us = add nsw i32 %16, 1
  %17 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !61
  %sub.us = sub i32 %add.us, %17
  br label %if.end45.us

if.end45.us:                                      ; preds = %if.then31.us, %if.then35.us, %if.else38.us
  %threads_available.0.us = phi i32 [ %sub.us, %if.then31.us ], [ %sub37.us, %if.then35.us ], [ %sub43.us, %if.else38.us ]
  %min_threads47.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 0, i32 7
  %18 = load i32, i32* %min_threads47.us, align 4, !tbaa !37
  %cmp48.not.us = icmp sge i32 %threads_available.0.us, %18
  %serial.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 0, i32 8
  %19 = load i8, i8* %serial.us, align 8, !tbaa !33, !range !21
  %tobool69.not.us = icmp eq i8 %19, 0
  br i1 %tobool69.not.us, label %if.end45.us.lor.end73.us_crit_edge, label %lor.rhs70.us

if.end45.us.lor.end73.us_crit_edge:               ; preds = %if.end45.us
  %.0 = and i1 %cmp48.not.us, true
  br label %lor.end73.us

lor.rhs70.us:                                     ; preds = %if.end45.us
  %active_workers71.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 8
  %20 = load i32, i32* %active_workers71.us, align 8, !tbaa !64
  %cmp72.us = icmp eq i32 %20, 0
  %.1 = and i1 %cmp48.not.us, %cmp72.us
  br label %lor.end73.us

lor.end73.us:                                     ; preds = %if.end45.us.lor.end73.us_crit_edge, %lor.rhs70.us
  %.phi = phi i1 [ %.0, %if.end45.us.lor.end73.us_crit_edge ], [ %.1, %lor.rhs70.us ]
  br i1 %.phi, label %if.then86.us, label %cleanup.us

if.then86.us:                                     ; preds = %lor.end73.us
  %next_semaphore.i.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 10
  %21 = load i32, i32* %next_semaphore.i.us, align 8, !tbaa !42
  %num_semaphores.i.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 0, i32 4
  %22 = load i32, i32* %num_semaphores.i.us, align 8, !tbaa !35
  %cmp14.i.us = icmp slt i32 %21, %22
  br i1 %cmp14.i.us, label %for.body.lr.ph.i.us, label %if.else127

for.body.lr.ph.i.us:                              ; preds = %if.then86.us
  %semaphores.i.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 0, i32 3
  br label %for.body.i.us

for.body.i.us:                                    ; preds = %for.inc.i.us, %for.body.lr.ph.i.us
  %23 = phi i32 [ %21, %for.body.lr.ph.i.us ], [ %inc.i.us, %for.inc.i.us ]
  %24 = load %struct.halide_semaphore_acquire_t*, %struct.halide_semaphore_acquire_t** %semaphores.i.us, align 8, !tbaa !34
  %idxprom.i.us = sext i32 %23 to i64
  %semaphore.i.us = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %24, i64 %idxprom.i.us, i32 0
  %25 = load %struct.halide_semaphore_t*, %struct.halide_semaphore_t** %semaphore.i.us, align 8, !tbaa !75
  %count.i.us = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %24, i64 %idxprom.i.us, i32 1
  %26 = load i32, i32* %count.i.us, align 8, !tbaa !77
  %call.i.us = tail call zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %25, i32 %26) #14
  br i1 %call.i.us, label %for.inc.i.us, label %cleanup.us

for.inc.i.us:                                     ; preds = %for.body.i.us
  %27 = load i32, i32* %next_semaphore.i.us, align 8, !tbaa !42
  %inc.i.us = add nsw i32 %27, 1
  store i32 %inc.i.us, i32* %next_semaphore.i.us, align 8, !tbaa !42
  %28 = load i32, i32* %num_semaphores.i.us, align 8, !tbaa !35
  %cmp.i.us = icmp slt i32 %inc.i.us, %28
  br i1 %cmp.i.us, label %for.body.i.us, label %if.else127, !llvm.loop !78

cleanup.us:                                       ; preds = %for.body.i.us, %lor.end73.us
  %next_job95.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529.us, i64 0, i32 2
  %29 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job95.us, align 8, !tbaa !67
  %tobool23.not.us = icmp eq %"struct.Halide::Runtime::Internal::work"* %29, null
  br i1 %tobool23.not.us, label %if.then103, label %do.end27.us

do.end27:                                         ; preds = %do.end, %cleanup
  %job.1529 = phi %"struct.Halide::Runtime::Internal::work"* [ %50, %cleanup ], [ %3, %do.end ]
  %prev_ptr.1528 = phi %"struct.Halide::Runtime::Internal::work"** [ %next_job95, %cleanup ], [ getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), %do.end ]
  %parent_job29 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 5
  %30 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job29, align 8, !tbaa !46
  %cmp30 = icmp eq %"struct.Halide::Runtime::Internal::work"* %30, null
  br i1 %cmp30, label %if.then31, label %if.else32

if.then31:                                        ; preds = %do.end27
  %31 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !60
  %add = add nsw i32 %31, 1
  %32 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !61
  %sub = sub i32 %add, %32
  br label %if.end45

if.else32:                                        ; preds = %do.end27
  %active_workers33 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %30, i64 0, i32 8
  %33 = load i32, i32* %active_workers33, align 8, !tbaa !64
  %cmp34 = icmp eq i32 %33, 0
  %min_threads = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %30, i64 0, i32 0, i32 7
  %34 = load i32, i32* %min_threads, align 4, !tbaa !37
  br i1 %cmp34, label %if.then35, label %if.else38

if.then35:                                        ; preds = %if.else32
  %threads_reserved = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %30, i64 0, i32 6
  %35 = load i32, i32* %threads_reserved, align 8, !tbaa !65
  %sub37 = sub nsw i32 %34, %35
  br label %if.end45

if.else38:                                        ; preds = %if.else32
  %mul = mul nsw i32 %34, %33
  %threads_reserved42 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %30, i64 0, i32 6
  %36 = load i32, i32* %threads_reserved42, align 8, !tbaa !65
  %sub43 = sub nsw i32 %mul, %36
  br label %if.end45

if.end45:                                         ; preds = %if.else38, %if.then35, %if.then31
  %threads_available.0 = phi i32 [ %sub, %if.then31 ], [ %sub37, %if.then35 ], [ %sub43, %if.else38 ]
  %min_threads47 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 0, i32 7
  %37 = load i32, i32* %min_threads47, align 4, !tbaa !37
  %cmp48.not = icmp slt i32 %threads_available.0, %37
  %siblings = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 3
  %38 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %siblings, align 8, !tbaa !44
  %39 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %siblings56, align 8, !tbaa !44
  %cmp57 = icmp ne %"struct.Halide::Runtime::Internal::work"* %38, %39
  %cmp60 = icmp ne i32 %37, 0
  %serial = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 0, i32 8
  %40 = load i8, i8* %serial, align 8, !tbaa !33, !range !21
  %tobool69.not = icmp eq i8 %40, 0
  br i1 %tobool69.not, label %if.end45.lor.end73_crit_edge, label %lor.rhs70

if.end45.lor.end73_crit_edge:                     ; preds = %if.end45
  %.not472.0 = xor i1 true, true
  br label %lor.end73

lor.rhs70:                                        ; preds = %if.end45
  %active_workers71 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 8
  %41 = load i32, i32* %active_workers71, align 8, !tbaa !64
  %cmp72 = icmp eq i32 %41, 0
  %.not472.1 = xor i1 %cmp72, true
  br label %lor.end73

lor.end73:                                        ; preds = %if.end45.lor.end73_crit_edge, %lor.rhs70
  %.not472.phi = phi i1 [ %.not472.0, %if.end45.lor.end73_crit_edge ], [ %.not472.1, %lor.rhs70 ]
  %.not = and i1 %cmp60, %cmp57
  %brmerge = or i1 %cmp48.not, %.not
  %brmerge473 = or i1 %brmerge, %.not472.phi
  br i1 %brmerge473, label %cleanup, label %if.then86

if.then86:                                        ; preds = %lor.end73
  %next_semaphore.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 10
  %42 = load i32, i32* %next_semaphore.i, align 8, !tbaa !42
  %num_semaphores.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 0, i32 4
  %43 = load i32, i32* %num_semaphores.i, align 8, !tbaa !35
  %cmp14.i = icmp slt i32 %42, %43
  br i1 %cmp14.i, label %for.body.lr.ph.i, label %if.else127

for.body.lr.ph.i:                                 ; preds = %if.then86
  %semaphores.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 0, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %44 = phi i32 [ %42, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i ]
  %45 = load %struct.halide_semaphore_acquire_t*, %struct.halide_semaphore_acquire_t** %semaphores.i, align 8, !tbaa !34
  %idxprom.i = sext i32 %44 to i64
  %semaphore.i = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %45, i64 %idxprom.i, i32 0
  %46 = load %struct.halide_semaphore_t*, %struct.halide_semaphore_t** %semaphore.i, align 8, !tbaa !75
  %count.i = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %45, i64 %idxprom.i, i32 1
  %47 = load i32, i32* %count.i, align 8, !tbaa !77
  %call.i = tail call zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %46, i32 %47) #14
  br i1 %call.i, label %for.inc.i, label %cleanup

for.inc.i:                                        ; preds = %for.body.i
  %48 = load i32, i32* %next_semaphore.i, align 8, !tbaa !42
  %inc.i = add nsw i32 %48, 1
  store i32 %inc.i, i32* %next_semaphore.i, align 8, !tbaa !42
  %49 = load i32, i32* %num_semaphores.i, align 8, !tbaa !35
  %cmp.i = icmp slt i32 %inc.i, %49
  br i1 %cmp.i, label %for.body.i, label %if.else127, !llvm.loop !78

cleanup:                                          ; preds = %for.body.i, %lor.end73
  %next_job95 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1529, i64 0, i32 2
  %50 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job95, align 8, !tbaa !67
  %tobool23.not = icmp eq %"struct.Halide::Runtime::Internal::work"* %50, null
  br i1 %tobool23.not, label %if.then103, label %do.end27

if.then103:                                       ; preds = %cleanup, %cleanup.us
  br i1 %tobool.not, label %if.else112, label %if.then105

if.then105:                                       ; preds = %do.end, %if.then103
  %inc = add nsw i32 %spin_count.0, 1
  %cmp106 = icmp slt i32 %spin_count.0, 40
  br i1 %cmp106, label %if.then107, label %if.else108

if.then107:                                       ; preds = %if.then105
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  tail call void @halide_thread_yield() #14
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  br label %while.cond.backedge

if.else108:                                       ; preds = %if.then105
  %51 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !70
  %inc109 = add nsw i32 %51, 1
  store i32 %inc109, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !70
  store i8 1, i8* %owner_is_sleeping, align 4, !tbaa !43
  tail call void @halide_cond_wait(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10), %struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  store i8 0, i8* %owner_is_sleeping, align 4, !tbaa !43
  %52 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !70
  %dec = add nsw i32 %52, -1
  store i32 %dec, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 12), align 4, !tbaa !70
  br label %while.cond.backedge

if.else112:                                       ; preds = %if.then103, %do.end.thread
  %53 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8, !tbaa !79
  %inc113 = add nsw i32 %53, 1
  store i32 %inc113, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8, !tbaa !79
  %54 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !62
  %55 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 6), align 8, !tbaa !71
  %cmp114 = icmp sgt i32 %54, %55
  br i1 %cmp114, label %if.then115, label %if.else118

if.then115:                                       ; preds = %if.else112
  %dec116 = add nsw i32 %54, -1
  store i32 %dec116, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !62
  tail call void @halide_cond_wait(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 9), %struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  %56 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !62
  %inc117 = add nsw i32 %56, 1
  store i32 %inc117, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 5), align 4, !tbaa !62
  br label %if.end124

if.else118:                                       ; preds = %if.else112
  %inc119 = add nsw i32 %spin_count.0, 1
  %cmp120 = icmp slt i32 %spin_count.0, 40
  br i1 %cmp120, label %if.then121, label %if.else122

if.then121:                                       ; preds = %if.else118
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  tail call void @halide_thread_yield() #14
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  br label %if.end124

if.else122:                                       ; preds = %if.else118
  tail call void @halide_cond_wait(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 8), %struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  br label %if.end124

if.end124:                                        ; preds = %if.else122, %if.then121, %if.then115
  %spin_count.1 = phi i32 [ %spin_count.0, %if.then115 ], [ %inc119, %if.then121 ], [ %inc119, %if.else122 ]
  %57 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8, !tbaa !79
  %dec125 = add nsw i32 %57, -1
  store i32 %dec125, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 11), align 8, !tbaa !79
  br label %while.cond.backedge

if.else127:                                       ; preds = %if.then86, %if.then86.us, %for.inc.i, %for.inc.i.us
  %next_semaphore.i521 = phi i32* [ %next_semaphore.i.us, %for.inc.i.us ], [ %next_semaphore.i, %for.inc.i ], [ %next_semaphore.i.us, %if.then86.us ], [ %next_semaphore.i, %if.then86 ]
  %prev_ptr.1519 = phi %"struct.Halide::Runtime::Internal::work"** [ %prev_ptr.1528.us, %for.inc.i.us ], [ %prev_ptr.1528, %for.inc.i ], [ %prev_ptr.1528.us, %if.then86.us ], [ %prev_ptr.1528, %if.then86 ]
  %job.1515 = phi %"struct.Halide::Runtime::Internal::work"* [ %job.1529.us, %for.inc.i.us ], [ %job.1529, %for.inc.i ], [ %job.1529.us, %if.then86.us ], [ %job.1529, %if.then86 ]
  store i32 0, i32* %next_semaphore.i521, align 8, !tbaa !42
  %active_workers132 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 8
  %58 = load i32, i32* %active_workers132, align 8, !tbaa !64
  %inc133 = add nsw i32 %58, 1
  store i32 %inc133, i32* %active_workers132, align 8, !tbaa !64
  %parent_job134 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 5
  %59 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job134, align 8, !tbaa !46
  %cmp135 = icmp eq %"struct.Halide::Runtime::Internal::work"* %59, null
  %min_threads138 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 7
  %60 = load i32, i32* %min_threads138, align 4, !tbaa !37
  br i1 %cmp135, label %if.then136, label %if.else143

if.then136:                                       ; preds = %if.else127
  %61 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !61
  %add139 = add nsw i32 %61, %60
  store i32 %add139, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !61
  br label %if.end152

if.else143:                                       ; preds = %if.else127
  %threads_reserved147 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %59, i64 0, i32 6
  %62 = load i32, i32* %threads_reserved147, align 8, !tbaa !65
  %add148 = add nsw i32 %62, %60
  store i32 %add148, i32* %threads_reserved147, align 8, !tbaa !65
  br label %if.end152

if.end152:                                        ; preds = %if.else143, %if.then136
  %serial154 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 8
  %63 = load i8, i8* %serial154, align 8, !tbaa !33, !range !21
  %tobool155.not = icmp eq i8 %63, 0
  br i1 %tobool155.not, label %if.else198, label %if.then156

if.then156:                                       ; preds = %if.end152
  %next_job157 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 2
  %64 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job157, align 8, !tbaa !67
  store %"struct.Halide::Runtime::Internal::work"* %64, %"struct.Halide::Runtime::Internal::work"** %prev_ptr.1519, align 8, !tbaa !14
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  %extent163 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 6
  %next_semaphore.i474 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 10
  %num_semaphores.i475 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 4
  %semaphores.i477 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 3
  %user_context = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 7
  %fn = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 0
  %min = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 5
  %closure = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 1
  %65 = bitcast %"struct.Halide::Runtime::Internal::work"* %job.1515 to i8*
  br label %while.cond161.preheader

while.cond161.preheader:                          ; preds = %if.end172, %if.then156
  %iters.0538 = phi i32 [ 1, %if.then156 ], [ 0, %if.end172 ]
  %total_iters.0537 = phi i32 [ 0, %if.then156 ], [ %add178, %if.end172 ]
  %66 = load i32, i32* %extent163, align 8, !tbaa !32
  %sub164531 = sub nsw i32 %66, %total_iters.0537
  %cmp165532 = icmp sgt i32 %sub164531, %iters.0538
  br i1 %cmp165532, label %land.rhs.preheader, label %while.end169

land.rhs.preheader:                               ; preds = %while.cond161.preheader
  %.pre = load i32, i32* %next_semaphore.i474, align 8, !tbaa !42
  %.pre560 = load i32, i32* %num_semaphores.i475, align 8, !tbaa !35
  br label %land.rhs

land.rhs:                                         ; preds = %while.body167, %land.rhs.preheader
  %67 = phi i32 [ %76, %while.body167 ], [ %66, %land.rhs.preheader ]
  %68 = phi i32 [ %77, %while.body167 ], [ %.pre560, %land.rhs.preheader ]
  %69 = phi i32 [ 0, %while.body167 ], [ %.pre, %land.rhs.preheader ]
  %iters.1533 = phi i32 [ %inc168, %while.body167 ], [ %iters.0538, %land.rhs.preheader ]
  %cmp14.i476 = icmp slt i32 %69, %68
  br i1 %cmp14.i476, label %for.body.i483, label %while.body167

for.body.i483:                                    ; preds = %land.rhs, %for.inc.i486
  %70 = phi i32 [ %inc.i484, %for.inc.i486 ], [ %69, %land.rhs ]
  %71 = load %struct.halide_semaphore_acquire_t*, %struct.halide_semaphore_acquire_t** %semaphores.i477, align 8, !tbaa !34
  %idxprom.i479 = sext i32 %70 to i64
  %semaphore.i480 = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %71, i64 %idxprom.i479, i32 0
  %72 = load %struct.halide_semaphore_t*, %struct.halide_semaphore_t** %semaphore.i480, align 8, !tbaa !75
  %count.i481 = getelementptr inbounds %struct.halide_semaphore_acquire_t, %struct.halide_semaphore_acquire_t* %71, i64 %idxprom.i479, i32 1
  %73 = load i32, i32* %count.i481, align 8, !tbaa !77
  %call.i482 = tail call zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %72, i32 %73) #14
  br i1 %call.i482, label %for.inc.i486, label %while.end169

for.inc.i486:                                     ; preds = %for.body.i483
  %74 = load i32, i32* %next_semaphore.i474, align 8, !tbaa !42
  %inc.i484 = add nsw i32 %74, 1
  store i32 %inc.i484, i32* %next_semaphore.i474, align 8, !tbaa !42
  %75 = load i32, i32* %num_semaphores.i475, align 8, !tbaa !35
  %cmp.i485 = icmp slt i32 %inc.i484, %75
  br i1 %cmp.i485, label %for.body.i483, label %while.body167.loopexit, !llvm.loop !78

while.body167.loopexit:                           ; preds = %for.inc.i486
  %.pre561 = load i32, i32* %extent163, align 8, !tbaa !32
  br label %while.body167

while.body167:                                    ; preds = %while.body167.loopexit, %land.rhs
  %76 = phi i32 [ %.pre561, %while.body167.loopexit ], [ %67, %land.rhs ]
  %77 = phi i32 [ %75, %while.body167.loopexit ], [ %68, %land.rhs ]
  store i32 0, i32* %next_semaphore.i474, align 8, !tbaa !42
  %inc168 = add nuw nsw i32 %iters.1533, 1
  %sub164 = sub nsw i32 %76, %total_iters.0537
  %cmp165 = icmp sgt i32 %sub164, %inc168
  br i1 %cmp165, label %land.rhs, label %if.end172, !llvm.loop !80

while.end169:                                     ; preds = %for.body.i483, %while.cond161.preheader
  %iters.1523 = phi i32 [ %iters.0538, %while.cond161.preheader ], [ %iters.1533, %for.body.i483 ]
  %cmp170 = icmp eq i32 %iters.1523, 0
  br i1 %cmp170, label %while.end179, label %if.end172

if.end172:                                        ; preds = %while.body167, %while.end169
  %iters.1523566 = phi i32 [ %iters.1523, %while.end169 ], [ %inc168, %while.body167 ]
  %78 = load i8*, i8** %user_context, align 8, !tbaa !40
  %79 = load i32 (i8*, i32, i32, i8*, i8*)*, i32 (i8*, i32, i32, i8*, i8*)** %fn, align 8, !tbaa !28
  %80 = load i32, i32* %min, align 4, !tbaa !31
  %add175 = add nsw i32 %80, %total_iters.0537
  %81 = load i8*, i8** %closure, align 8, !tbaa !36
  %call177 = tail call i32 @halide_do_loop_task(i8* %78, i32 (i8*, i32, i32, i8*, i8*)* %79, i32 %add175, i32 %iters.1523566, i8* %81, i8* nonnull %65) #15
  %add178 = add nuw nsw i32 %iters.1523566, %total_iters.0537
  %cmp159 = icmp eq i32 %call177, 0
  br i1 %cmp159, label %while.cond161.preheader, label %while.end179, !llvm.loop !81

while.end179:                                     ; preds = %if.end172, %while.end169
  %cmp170568 = phi i1 [ true, %while.end169 ], [ false, %if.end172 ]
  %result.0.lcssa = phi i32 [ 0, %while.end169 ], [ %call177, %if.end172 ]
  %total_iters.0.lcssa = phi i32 [ %total_iters.0537, %while.end169 ], [ %add178, %if.end172 ]
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  %82 = load i32, i32* %min, align 4, !tbaa !31
  %add182 = add nsw i32 %82, %total_iters.0.lcssa
  store i32 %add182, i32* %min, align 4, !tbaa !31
  %83 = load i32, i32* %extent163, align 8, !tbaa !32
  %sub185 = sub nsw i32 %83, %total_iters.0.lcssa
  store i32 %sub185, i32* %extent163, align 8, !tbaa !32
  br i1 %cmp170568, label %if.else190, label %if.end230.thread505

if.end230.thread505:                              ; preds = %while.end179
  store i32 0, i32* %extent163, align 8, !tbaa !32
  br label %if.then238

if.else190:                                       ; preds = %while.end179
  %cmp193 = icmp sgt i32 %sub185, 0
  br i1 %cmp193, label %if.then194, label %if.end271

if.then194:                                       ; preds = %if.else190
  %84 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !66
  store %"struct.Halide::Runtime::Internal::work"* %84, %"struct.Halide::Runtime::Internal::work"** %next_job157, align 8, !tbaa !67
  store %"struct.Halide::Runtime::Internal::work"* %job.1515, %"struct.Halide::Runtime::Internal::work"** getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 3), align 8, !tbaa !66
  br label %if.end271

if.else198:                                       ; preds = %if.end152
  %myjob.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 0
  %myjob.sroa.0.0.copyload = load i32 (i8*, i32, i32, i8*, i8*)*, i32 (i8*, i32, i32, i8*, i8*)** %myjob.sroa.0.0..sroa_idx, align 8, !tbaa.struct !82
  %myjob.sroa.4.0..sroa_idx327 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 1
  %myjob.sroa.4.0.copyload = load i8*, i8** %myjob.sroa.4.0..sroa_idx327, align 8, !tbaa.struct !83
  %myjob.sroa.6333.0..sroa_idx334 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 5
  %myjob.sroa.6333.0.copyload = load i32, i32* %myjob.sroa.6333.0..sroa_idx334, align 4
  %myjob.sroa.8340.0..sroa_idx341 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 1
  %myjob.sroa.8340.0.copyload = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %myjob.sroa.8340.0..sroa_idx341, align 8, !tbaa.struct !84
  %myjob.sroa.10347.0..sroa_idx348 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 7
  %myjob.sroa.10347.0.copyload = load i8*, i8** %myjob.sroa.10347.0..sroa_idx348, align 8, !tbaa.struct !85
  %inc201 = add nsw i32 %myjob.sroa.6333.0.copyload, 1
  store i32 %inc201, i32* %myjob.sroa.6333.0..sroa_idx334, align 4, !tbaa !31
  %extent203 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 6
  %85 = load i32, i32* %extent203, align 8, !tbaa !32
  %dec204 = add nsw i32 %85, -1
  store i32 %dec204, i32* %extent203, align 8, !tbaa !32
  %cmp207 = icmp eq i32 %dec204, 0
  br i1 %cmp207, label %if.then208, label %if.end210

if.then208:                                       ; preds = %if.else198
  %next_job209 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 2
  %86 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %next_job209, align 8, !tbaa !67
  store %"struct.Halide::Runtime::Internal::work"* %86, %"struct.Halide::Runtime::Internal::work"** %prev_ptr.1519, align 8, !tbaa !14
  br label %if.end210

if.end210:                                        ; preds = %if.then208, %if.else198
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  %tobool211.not = icmp eq i32 (i8*, i32, i8*)* %myjob.sroa.8340.0.copyload, null
  br i1 %tobool211.not, label %if.else220, label %if.then212

if.then212:                                       ; preds = %if.end210
  %call219 = tail call i32 @halide_do_task(i8* %myjob.sroa.10347.0.copyload, i32 (i8*, i32, i8*)* nonnull %myjob.sroa.8340.0.copyload, i32 %myjob.sroa.6333.0.copyload, i8* %myjob.sroa.4.0.copyload) #15
  br label %if.end230

if.else220:                                       ; preds = %if.end210
  %87 = bitcast %"struct.Halide::Runtime::Internal::work"* %job.1515 to i8*
  %call228 = tail call i32 @halide_do_loop_task(i8* %myjob.sroa.10347.0.copyload, i32 (i8*, i32, i32, i8*, i8*)* %myjob.sroa.0.0.copyload, i32 %myjob.sroa.6333.0.copyload, i32 1, i8* %myjob.sroa.4.0.copyload, i8* %87) #15
  br label %if.end230

if.end230:                                        ; preds = %if.else220, %if.then212
  %result.1 = phi i32 [ %call219, %if.then212 ], [ %call228, %if.else220 ]
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  %cmp237.not = icmp eq i32 %result.1, 0
  br i1 %cmp237.not, label %if.end271, label %if.then238

if.then238:                                       ; preds = %if.end230, %if.end230.thread505
  %result.2510 = phi i32 [ %result.0.lcssa, %if.end230.thread505 ], [ %result.1, %if.end230 ]
  %exit_status239 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 9
  store i32 %result.2510, i32* %exit_status239, align 4, !tbaa !47
  %sibling_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 4
  %88 = load i32, i32* %sibling_count, align 8, !tbaa !45
  %cmp240540 = icmp sgt i32 %88, 0
  br i1 %cmp240540, label %do.end243.lr.ph, label %if.end271

do.end243.lr.ph:                                  ; preds = %if.then238
  %siblings244 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 3
  %89 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %siblings244, align 8, !tbaa !44
  %wide.trip.count = zext i32 %88 to i64
  br label %do.end243

do.end243:                                        ; preds = %for.inc, %do.end243.lr.ph
  %indvars.iv = phi i64 [ 0, %do.end243.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %wake_owners.0541 = phi i8 [ 0, %do.end243.lr.ph ], [ %wake_owners.1, %for.inc ]
  %exit_status245 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %89, i64 %indvars.iv, i32 9
  %90 = load i32, i32* %exit_status245, align 4, !tbaa !47
  %cmp246 = icmp eq i32 %90, 0
  br i1 %cmp246, label %if.then247, label %for.inc

if.then247:                                       ; preds = %do.end243
  store i32 %result.2510, i32* %exit_status245, align 4, !tbaa !47
  %91 = load i32, i32* %active_workers132, align 8, !tbaa !64
  %cmp253 = icmp eq i32 %91, 0
  br i1 %cmp253, label %land.rhs254, label %land.end260

land.rhs254:                                      ; preds = %if.then247
  %owner_is_sleeping258 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %89, i64 %indvars.iv, i32 11
  %92 = load i8, i8* %owner_is_sleeping258, align 4, !tbaa !43, !range !21
  br label %land.end260

land.end260:                                      ; preds = %land.rhs254, %if.then247
  %93 = phi i8 [ 0, %if.then247 ], [ %92, %land.rhs254 ]
  %94 = and i8 %wake_owners.0541, 1
  %or = or i8 %93, %94
  br label %for.inc

for.inc:                                          ; preds = %land.end260, %do.end243
  %wake_owners.1 = phi i8 [ %or, %land.end260 ], [ %wake_owners.0541, %do.end243 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end271, label %do.end243, !llvm.loop !86

if.end271:                                        ; preds = %for.inc, %if.then238, %if.end230, %if.then194, %if.else190
  %wake_owners.2 = phi i8 [ 0, %if.end230 ], [ 0, %if.else190 ], [ 0, %if.then194 ], [ 0, %if.then238 ], [ %wake_owners.1, %for.inc ]
  %95 = load %"struct.Halide::Runtime::Internal::work"*, %"struct.Halide::Runtime::Internal::work"** %parent_job134, align 8, !tbaa !46
  %cmp273 = icmp eq %"struct.Halide::Runtime::Internal::work"* %95, null
  %96 = load i32, i32* %min_threads138, align 4, !tbaa !37
  br i1 %cmp273, label %if.then274, label %if.else281

if.then274:                                       ; preds = %if.end271
  %97 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !61
  %sub277 = sub nsw i32 %97, %96
  store i32 %sub277, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 16), align 4, !tbaa !61
  br label %if.end290

if.else281:                                       ; preds = %if.end271
  %threads_reserved285 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %95, i64 0, i32 6
  %98 = load i32, i32* %threads_reserved285, align 8, !tbaa !65
  %sub286 = sub nsw i32 %98, %96
  store i32 %sub286, i32* %threads_reserved285, align 8, !tbaa !65
  br label %if.end290

if.end290:                                        ; preds = %if.else281, %if.then274
  %99 = load i32, i32* %active_workers132, align 8, !tbaa !64
  %dec292 = add nsw i32 %99, -1
  store i32 %dec292, i32* %active_workers132, align 8, !tbaa !64
  %100 = and i8 %wake_owners.2, 1
  %tobool296.not = icmp eq i8 %100, 0
  br i1 %tobool296.not, label %lor.lhs.false297, label %if.then310

lor.lhs.false297:                                 ; preds = %if.end290
  %cmp299 = icmp eq i32 %dec292, 0
  br i1 %cmp299, label %land.lhs.true300, label %while.cond.backedge

land.lhs.true300:                                 ; preds = %lor.lhs.false297
  %extent302 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 0, i32 6
  %101 = load i32, i32* %extent302, align 8, !tbaa !32
  %cmp303 = icmp eq i32 %101, 0
  br i1 %cmp303, label %land.lhs.true307, label %lor.lhs.false304

lor.lhs.false304:                                 ; preds = %land.lhs.true300
  %exit_status305 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 9
  %102 = load i32, i32* %exit_status305, align 4, !tbaa !47
  %cmp306.not = icmp eq i32 %102, 0
  br i1 %cmp306.not, label %while.cond.backedge, label %land.lhs.true307

land.lhs.true307:                                 ; preds = %lor.lhs.false304, %land.lhs.true300
  %owner_is_sleeping308 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %job.1515, i64 0, i32 11
  %103 = load i8, i8* %owner_is_sleeping308, align 4, !tbaa !43, !range !21
  %tobool309.not = icmp eq i8 %103, 0
  br i1 %tobool309.not, label %while.cond.backedge, label %if.then310

if.then310:                                       ; preds = %land.lhs.true307, %if.end290
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #15
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then310, %land.lhs.true307, %lor.lhs.false304, %lor.lhs.false297, %if.end124, %if.else108, %if.then107, %if.then15, %while.end
  %spin_count.0.be = phi i32 [ %spin_count.0, %while.end ], [ %spin_count.0, %if.then15 ], [ %inc, %if.then107 ], [ %inc, %if.else108 ], [ %spin_count.1, %if.end124 ], [ 0, %if.then310 ], [ 0, %land.lhs.true307 ], [ 0, %lor.lhs.false304 ], [ 0, %lor.lhs.false297 ]
  br label %while.cond, !llvm.loop !87

while.end316:                                     ; preds = %cond.end, %cond.false
  ret void
}

; Function Attrs: nounwind
define weak void @halide_mutex_unlock(%struct.halide_mutex* %mutex) local_unnamed_addr #4 {
entry:
  %control.i.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", align 8
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %mutex, i64 0, i32 0, i64 0
  %0 = cmpxchg weak i64* %state.i, i64 1, i64 0 release monotonic
  %1 = extractvalue { i64, i1 } %0, 1
  br i1 %1, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %2 = cmpxchg i64* %state.i, i64 1, i64 0 release monotonic
  %3 = extractvalue { i64, i1 } %2, 1
  br i1 %3, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i
  %4 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !48
  %lock_state2.i.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 1
  store i64* %state.i, i64** %lock_state2.i.i.i, align 8, !tbaa !50
  %6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0
  %7 = ptrtoint %struct.halide_mutex* %mutex to i64
  %call3.i.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control10unpark_oneEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %6, i64 %7) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  br label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit

_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit: ; preds = %if.end.i.i, %if.then.i, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control10unpark_oneEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i64 %addr) local_unnamed_addr #0 align 2 {
entry:
  %call = tail call nonnull align 8 dereferenceable(24) %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* @_ZN6Halide7Runtime8Internal15Synchronization11lock_bucketEy(i64 %addr) #15
  %head = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 1
  %0 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head, align 8, !tbaa !14
  %tail = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 2
  %1 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)***
  %state.i60 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0, i32 0
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0
  br label %while.cond

while.cond:                                       ; preds = %cleanup, %entry
  %data_location.0 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %head, %entry ], [ %data_location.1, %cleanup ]
  %prev.0 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ null, %entry ], [ %prev.1, %cleanup ]
  %data.0 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %0, %entry ], [ %data.1, %cleanup ]
  %retval.0 = phi i64 [ undef, %entry ], [ %retval.1, %cleanup ]
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, null
  br i1 %cmp.not, label %while.end22, label %while.body

while.body:                                       ; preds = %while.cond
  %sleep_address = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 1
  %2 = load atomic i64, i64* %sleep_address monotonic, align 8
  %cmp2 = icmp eq i64 %2, %addr
  %next3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 2
  %3 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next3, align 8, !tbaa !88
  br i1 %cmp2, label %if.then, label %cleanup

if.then:                                          ; preds = %while.body
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %3, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %data_location.0, align 8, !tbaa !14
  %4 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !93
  %cmp4 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %4, %data.0
  br i1 %cmp4, label %if.then5, label %while.cond7.preheader

while.cond7.preheader:                            ; preds = %if.then
  %cmp872.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %3, null
  br i1 %cmp872.not, label %if.end, label %while.body9

if.then5:                                         ; preds = %if.then
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %prev.0, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !93
  br label %if.end

while.body9:                                      ; preds = %while.cond7.preheader, %while.body9
  %data2.073 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %6, %while.body9 ], [ %3, %while.cond7.preheader ]
  %sleep_address10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data2.073, i64 0, i32 1
  %5 = load atomic i64, i64* %sleep_address10 monotonic, align 8
  %cmp11 = icmp eq i64 %5, %addr
  %next12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data2.073, i64 0, i32 2
  %6 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next12, align 8, !tbaa !88
  %cmp8 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %6, null
  %7 = or i1 %cmp11, %cmp8
  br i1 %7, label %if.end.loopexit, label %while.body9, !llvm.loop !96

if.end.loopexit:                                  ; preds = %while.body9
  %frombool = zext i1 %cmp11 to i8
  br label %if.end

if.end:                                           ; preds = %if.end.loopexit, %if.then5, %while.cond7.preheader
  %more_waiters.1 = phi i8 [ 0, %if.then5 ], [ 0, %while.cond7.preheader ], [ %frombool, %if.end.loopexit ]
  %tobool13 = icmp ne i8 %more_waiters.1, 0
  %vtable = load i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)**, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*** %1, align 8, !tbaa !48
  %vfn = getelementptr inbounds i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)** %vtable, i64 2
  %8 = load i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)** %vfn, align 8
  %call14 = tail call i64 %8(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i32 1, i1 zeroext %tobool13) #14
  %unpark_info = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 3
  store i64 %call14, i64* %unpark_info, align 8, !tbaa !97
  %mutex.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 0, i32 0
  %call.i = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex.i) #14
  %9 = atomicrmw and i64* %state.i60, i64 -2 release
  %and.i61 = and i64 %9, 2
  %cmp.i62 = icmp ne i64 %and.i61, 0
  %cmp3.not.i63 = icmp ult i64 %9, 4
  %or.cond.i64 = or i1 %cmp3.not.i63, %cmp.i62
  br i1 %or.cond.i64, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66, label %if.then.i65

if.then.i65:                                      ; preds = %if.end
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #14
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66

_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66: ; preds = %if.then.i65, %if.end
  %should_park.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 0, i32 2
  store i8 0, i8* %should_park.i, align 8, !tbaa !98
  %condvar.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.0, i64 0, i32 0, i32 1
  %call.i67 = tail call i32 @pthread_cond_signal(%struct.pthread_mutex_t* nonnull %condvar.i) #14
  %call.i69 = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex.i) #14
  %10 = zext i8 %more_waiters.1 to i64
  br label %cleanup

cleanup:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66, %while.body
  %data_location.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %data_location.0, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66 ], [ %next3, %while.body ]
  %prev.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %prev.0, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66 ], [ %data.0, %while.body ]
  %data.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %data.0, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66 ], [ %3, %while.body ]
  %retval.1 = phi i64 [ %10, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit66 ], [ %retval.0, %while.body ]
  br i1 %cmp2, label %cleanup27, label %while.cond, !llvm.loop !99

while.end22:                                      ; preds = %while.cond
  %vtable23 = load i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)**, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*** %1, align 8, !tbaa !48
  %vfn24 = getelementptr inbounds i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)** %vtable23, i64 2
  %11 = load i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)*, i64 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, i32, i1)** %vfn24, align 8
  %call25 = tail call i64 %11(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i32 0, i1 zeroext false) #14
  %12 = atomicrmw and i64* %state.i60, i64 -2 release
  %and.i = and i64 %12, 2
  %cmp.i = icmp ne i64 %and.i, 0
  %cmp3.not.i = icmp ult i64 %12, 4
  %or.cond.i = or i1 %cmp3.not.i, %cmp.i
  br i1 %or.cond.i, label %cleanup27, label %if.then.i

if.then.i:                                        ; preds = %while.end22
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #14
  br label %cleanup27

cleanup27:                                        ; preds = %cleanup, %if.then.i, %while.end22
  %retval.2 = phi i64 [ 0, %while.end22 ], [ 0, %if.then.i ], [ %retval.1, %cleanup ]
  ret i64 %retval.2
}

; Function Attrs: nounwind mustprogress
define linkonce nonnull align 8 dereferenceable(24) %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* @_ZN6Halide7Runtime8Internal15Synchronization11lock_bucketEy(i64 %addr) local_unnamed_addr #0 {
entry:
  %mul.i = mul i64 %addr, -7046029254386353131
  %shr.i = lshr i64 %mul.i, 54
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i
  %state.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx, i64 0, i32 0, i32 0
  %0 = cmpxchg weak i64* %state.i, i64 0, i64 1 acquire monotonic
  %1 = extractvalue { i64, i1 } %0, 1
  br i1 %1, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #14
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit

_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit: ; preds = %if.then.i, %entry
  ret %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx
}

declare i32 @pthread_mutex_lock(%struct.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %this) local_unnamed_addr #4 align 2 {
entry:
  %state = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %this, i64 0, i32 0
  %0 = load atomic i64, i64* %state monotonic, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %expected.0 = phi i64 [ %0, %entry ], [ %3, %if.end ]
  %and = and i64 %expected.0, 2
  %tobool.not = icmp ne i64 %and, 0
  %cmp = icmp ult i64 %expected.0, 4
  %or.cond = or i1 %cmp, %tobool.not
  br i1 %or.cond, label %cleanup75, label %if.end

if.end:                                           ; preds = %while.cond
  %or = or i64 %expected.0, 2
  %1 = cmpxchg weak i64* %state, i64 %expected.0, i64 %or acquire monotonic
  %2 = extractvalue { i64, i1 } %1, 1
  %3 = extractvalue { i64, i1 } %1, 0
  br i1 %2, label %while.cond11, label %while.cond

while.cond11:                                     ; preds = %if.end, %cleanup70
  %.pn.pn = phi { i64, i1 } [ %.pn, %cleanup70 ], [ %1, %if.end ]
  %expected.3 = extractvalue { i64, i1 } %.pn.pn, 0
  %and13 = and i64 %expected.3, -4
  %4 = inttoptr i64 %and13 to %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*
  %tail14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %4, i64 0, i32 3
  %tail.0143 = load %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail14, align 8, !tbaa !100
  %cmp16144 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0143, null
  br i1 %cmp16144, label %while.body17, label %while.end23

while.body17:                                     ; preds = %while.cond11, %do.end
  %current.0145 = phi %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* [ %5, %do.end ], [ %4, %while.cond11 ]
  %next18 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %current.0145, i64 0, i32 1
  %5 = load %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %next18, align 8, !tbaa !102
  %cmp19.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %5, null
  br i1 %cmp19.not, label %if.then20, label %do.end

if.then20:                                        ; preds = %while.body17
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.5, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.end

do.end:                                           ; preds = %if.then20, %while.body17
  %prev = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %5, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %current.0145, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %prev, align 8, !tbaa !103
  %tail22 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %5, i64 0, i32 3
  %tail.0 = load %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail22, align 8, !tbaa !100
  %cmp16 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0, null
  br i1 %cmp16, label %while.body17, label %while.end23, !llvm.loop !104

while.end23:                                      ; preds = %do.end, %while.cond11
  %tail.0.lcssa = phi %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* [ %tail.0143, %while.cond11 ], [ %tail.0, %do.end ]
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail14, align 8, !tbaa !100
  %and25 = and i64 %expected.3, 1
  %tobool26.not = icmp eq i64 %and25, 0
  br i1 %tobool26.not, label %if.end35, label %if.then27

if.then27:                                        ; preds = %while.end23
  %and29 = and i64 %expected.3, -3
  %6 = cmpxchg weak i64* %state, i64 %expected.3, i64 %and29 acq_rel monotonic
  %7 = extractvalue { i64, i1 } %6, 1
  br i1 %7, label %cleanup75, label %cleanup70

if.end35:                                         ; preds = %while.end23
  %prev36 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, i64 0, i32 2
  %8 = load %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %prev36, align 8, !tbaa !103
  %cmp37 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %8, null
  br i1 %cmp37, label %while.body41, label %if.else62

while.body41:                                     ; preds = %if.end35, %if.end47
  %expected.5146 = phi i64 [ %11, %if.end47 ], [ %expected.3, %if.end35 ]
  %and43 = and i64 %expected.5146, 1
  %9 = cmpxchg weak i64* %state, i64 %expected.5146, i64 %and43 acq_rel monotonic
  %10 = extractvalue { i64, i1 } %9, 1
  br i1 %10, label %if.end66, label %if.end47

if.end47:                                         ; preds = %while.body41
  %11 = extractvalue { i64, i1 } %9, 0
  %cmp49 = icmp ult i64 %11, 4
  br i1 %cmp49, label %while.body41, label %cleanup70, !llvm.loop !105

if.else62:                                        ; preds = %if.end35
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %8, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail14, align 8, !tbaa !100
  %12 = atomicrmw and i64* %state, i64 -3 release
  br label %if.end66

if.end66:                                         ; preds = %while.body41, %if.else62
  %mutex.i103 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, i64 0, i32 0, i32 0
  %call.i104 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex.i103) #14
  %should_park.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, i64 0, i32 0, i32 2
  store i8 0, i8* %should_park.i, align 8, !tbaa !98
  %condvar.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %tail.0.lcssa, i64 0, i32 0, i32 1
  %call.i101 = tail call i32 @pthread_cond_signal(%struct.pthread_mutex_t* nonnull %condvar.i) #14
  %call.i = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex.i103) #14
  br label %cleanup75

cleanup70:                                        ; preds = %if.end47, %if.then27
  %.pn = phi { i64, i1 } [ %6, %if.then27 ], [ %9, %if.end47 ]
  fence acquire
  br label %while.cond11

cleanup75:                                        ; preds = %while.cond, %if.then27, %if.end66
  ret void
}

declare i32 @pthread_cond_signal(%struct.pthread_mutex_t*) local_unnamed_addr #1

declare i32 @pthread_mutex_unlock(%struct.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %this) local_unnamed_addr #4 align 2 {
entry:
  %node = alloca %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", align 8
  %state = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %this, i64 0, i32 0
  %0 = load atomic i64, i64* %state monotonic, align 8
  %1 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node to i8*
  %should_park.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 0, i32 2
  %mutex2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 0, i32 0
  %condvar3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 0, i32 1
  %next.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 1
  %tail.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data", %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, i64 0, i32 3
  %2 = ptrtoint %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node to i64
  %3 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %next.i to <2 x %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*>*
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %while.cond.outer.backedge, %entry
  %expected.0.ph = phi i64 [ %0, %entry ], [ %expected.0.ph.be, %while.cond.outer.backedge ]
  %spinner.sroa.0.0.ph = phi i32 [ 40, %entry ], [ %spinner.sroa.0.0.ph.be, %while.cond.outer.backedge ]
  %and46 = and i64 %expected.0.ph, 1
  %tobool.not47 = icmp eq i64 %and46, 0
  br i1 %tobool.not47, label %if.then, label %if.end4

if.then:                                          ; preds = %while.cond.outer, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit
  %expected.048 = phi i64 [ %6, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit ], [ %expected.0.ph, %while.cond.outer ]
  %or = or i64 %expected.048, 1
  %4 = cmpxchg weak i64* %state, i64 %expected.048, i64 %or acquire monotonic
  %5 = extractvalue { i64, i1 } %4, 1
  br i1 %5, label %cleanup23, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit: ; preds = %if.then
  %6 = extractvalue { i64, i1 } %4, 0
  %and = and i64 %6, 1
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.then, label %if.end4.loopexit

if.end4.loopexit:                                 ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit
  %7 = extractvalue { i64, i1 } %4, 0
  br label %if.end4

if.end4:                                          ; preds = %if.end4.loopexit, %while.cond.outer
  %expected.0.lcssa = phi i64 [ %expected.0.ph, %while.cond.outer ], [ %7, %if.end4.loopexit ]
  %cmp.not = icmp ugt i64 %expected.0.lcssa, 3
  %cmp.i = icmp sgt i32 %spinner.sroa.0.0.ph, 0
  %or.cond = and i1 %cmp.i, %cmp.not
  br i1 %or.cond, label %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit, label %if.end9

_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit: ; preds = %if.end4
  %cmp4.i = icmp sgt i32 %spinner.sroa.0.0.ph, 1
  br i1 %cmp4.i, label %if.then7, label %if.end9

if.then7:                                         ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit
  %dec.i = add nsw i32 %spinner.sroa.0.0.ph, -1
  call void @halide_thread_yield() #14
  %8 = load atomic i64, i64* %state monotonic, align 8
  br label %while.cond.outer.backedge

if.end9:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit, %if.end4
  %spinner.sroa.0.2 = phi i32 [ %spinner.sroa.0.0.ph, %if.end4 ], [ 0, %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit ]
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1) #11
  store i8 0, i8* %should_park.i.i, align 8, !tbaa !98
  %call.i.i29 = call i32 @pthread_mutex_init(%struct.pthread_mutex_t* nonnull %mutex2.i.i, i8* null) #14
  %call4.i.i = call i32 @pthread_cond_init(%struct.pthread_mutex_t* nonnull %condvar3.i.i, i8* null) #14
  store <2 x %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*> zeroinitializer, <2 x %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*>* %3, align 8, !tbaa !14
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail.i, align 8, !tbaa !100
  store i8 1, i8* %should_park.i.i, align 8, !tbaa !98
  %and10 = and i64 %expected.0.lcssa, -4
  %cmp11 = icmp eq i64 %and10, 0
  br i1 %cmp11, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.end9
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %node, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %tail.i, align 8, !tbaa !100
  br label %if.end13

if.else:                                          ; preds = %if.end9
  %9 = inttoptr i64 %and10 to %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"*
  store %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"* %9, %"struct.Halide::Runtime::Internal::Synchronization::word_lock_queue_data"** %next.i, align 8, !tbaa !102
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then12
  %and15 = and i64 %expected.0.lcssa, 3
  %or16 = or i64 %and15, %2
  %10 = cmpxchg weak i64* %state, i64 %expected.0.lcssa, i64 %or16 release monotonic
  %11 = extractvalue { i64, i1 } %10, 1
  br i1 %11, label %if.then19, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit: ; preds = %if.end13
  %12 = extractvalue { i64, i1 } %10, 0
  br label %if.end22

if.then19:                                        ; preds = %if.end13
  %call.i = call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #14
  %13 = load i8, i8* %should_park.i.i, align 8, !tbaa !98, !range !21
  %tobool.not6.i = icmp eq i8 %13, 0
  br i1 %tobool.not6.i, label %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, label %while.body.i

while.body.i:                                     ; preds = %if.then19, %while.body.i
  %call3.i = call i32 @pthread_cond_wait(%struct.pthread_mutex_t* nonnull %condvar3.i.i, %struct.pthread_mutex_t* nonnull %mutex2.i.i) #14
  %14 = load i8, i8* %should_park.i.i, align 8, !tbaa !98, !range !21
  %tobool.not.i = icmp eq i8 %14, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, label %while.body.i, !llvm.loop !106

_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit: ; preds = %while.body.i, %if.then19
  %call5.i = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #14
  %15 = load atomic i64, i64* %state monotonic, align 8
  br label %if.end22

if.end22:                                         ; preds = %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit
  %expected.3 = phi i64 [ %15, %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit ], [ %12, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit ]
  %spinner.sroa.0.3 = phi i32 [ 40, %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit ], [ %spinner.sroa.0.2, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_release_relaxedEPyS4_S4_.exit ]
  %call.i.i = call i32 @pthread_cond_destroy(%struct.pthread_mutex_t* nonnull %condvar3.i.i) #14
  %call2.i.i = call i32 @pthread_mutex_destroy(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #14
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1) #11
  br label %while.cond.outer.backedge

while.cond.outer.backedge:                        ; preds = %if.end22, %if.then7
  %expected.0.ph.be = phi i64 [ %8, %if.then7 ], [ %expected.3, %if.end22 ]
  %spinner.sroa.0.0.ph.be = phi i32 [ %dec.i, %if.then7 ], [ %spinner.sroa.0.3, %if.end22 ]
  br label %while.cond.outer

cleanup23:                                        ; preds = %if.then
  ret void
}

declare i32 @pthread_mutex_init(%struct.pthread_mutex_t*, i8*) local_unnamed_addr #1

declare i32 @pthread_cond_init(%struct.pthread_mutex_t*, i8*) local_unnamed_addr #1

declare i32 @pthread_cond_wait(%struct.pthread_mutex_t*, %struct.pthread_mutex_t*) local_unnamed_addr #1

declare i32 @pthread_cond_destroy(%struct.pthread_mutex_t*) local_unnamed_addr #1

declare i32 @pthread_mutex_destroy(%struct.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control8validateERNS2_15validate_actionE(%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* nonnull dereferenceable(16) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) unnamed_addr #2 align 2 {
entry:
  %lock_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %lock_state, align 8, !tbaa !50
  %1 = load atomic i64, i64* %0 monotonic, align 8
  %cmp = icmp eq i64 %1, 3
  ret i1 %cmp
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr void @_ZN6Halide7Runtime8Internal15Synchronization15parking_control12before_sleepEv(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this) unnamed_addr #2 align 2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr i64 @_ZN6Halide7Runtime8Internal15Synchronization21mutex_parking_control6unparkEib(%"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* nonnull dereferenceable(16) %this, i32 %unparked, i1 zeroext %more_waiters) unnamed_addr #2 align 2 {
entry:
  %0 = select i1 %more_waiters, i64 2, i64 0
  %lock_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %this, i64 0, i32 1
  %1 = load i64*, i64** %lock_state, align 8, !tbaa !50
  store atomic i64 %0, i64* %1 release, align 8
  ret i64 0
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr void @_ZN6Halide7Runtime8Internal15Synchronization15parking_control16requeue_callbackERKNS2_15validate_actionEbb(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action, i1 zeroext %one_to_wake, i1 zeroext %some_requeued) unnamed_addr #2 align 2 {
entry:
  ret void
}

; Function Attrs: nounwind
define weak void @halide_cond_broadcast(%struct.halide_mutex* %cond) local_unnamed_addr #4 {
entry:
  %control.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", align 8
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %cond, i64 0, i32 0, i64 0
  %0 = load atomic i64, i64* %state.i monotonic, align 8
  %cmp.i = icmp eq i64 %0, 0
  br i1 %cmp.i, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond9broadcastEv.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #11
  %2 = inttoptr i64 %0 to %"class.Halide::Runtime::Internal::Synchronization::word_lock"*
  %3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization25broadcast_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !48
  %cond_state2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 1
  store i64* %state.i, i64** %cond_state2.i.i, align 8, !tbaa !107
  %mutex3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 2
  store %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex3.i.i, align 8, !tbaa !109
  %4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0
  %5 = ptrtoint %struct.halide_mutex* %cond to i64
  %call.i = call i32 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control14unpark_requeueEyyy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %4, i64 %5, i64 %0, i64 0) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #11
  br label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond9broadcastEv.exit

_ZN6Halide7Runtime8Internal15Synchronization9fast_cond9broadcastEv.exit: ; preds = %if.end.i, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define weak zeroext i1 @halide_default_semaphore_try_acquire(%struct.halide_semaphore_t* %s, i32 %n) #0 {
entry:
  %cmp = icmp eq i32 %n, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %value = bitcast %struct.halide_semaphore_t* %s to i32*
  %0 = load atomic i32, i32* %value acquire, align 4
  %sub12 = sub nsw i32 %0, %n
  %cmp113 = icmp sgt i32 %sub12, -1
  br i1 %cmp113, label %land.rhs, label %return

land.rhs:                                         ; preds = %if.end, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit
  %sub15 = phi i32 [ %sub, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit ], [ %sub12, %if.end ]
  %expected.014 = phi i32 [ %3, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit ], [ %0, %if.end ]
  %1 = cmpxchg weak i32* %value, i32 %expected.014, i32 %sub15 acq_rel monotonic
  %2 = extractvalue { i32, i1 } %1, 1
  br i1 %2, label %return.loopexit, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit: ; preds = %land.rhs
  %3 = extractvalue { i32, i1 } %1, 0
  %sub = sub nsw i32 %3, %n
  %cmp1 = icmp sgt i32 %sub, -1
  br i1 %cmp1, label %land.rhs, label %return.loopexit

return.loopexit:                                  ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_130atomic_cas_weak_relacq_relaxedIiEEbPT_S6_S6_.exit, %land.rhs
  %4 = extractvalue { i32, i1 } %1, 1
  br label %return

return:                                           ; preds = %return.loopexit, %if.end, %entry
  %retval.0 = phi i1 [ true, %entry ], [ false, %if.end ], [ %4, %return.loopexit ]
  ret i1 %retval.0
}

; Function Attrs: nounwind
define weak void @halide_cond_wait(%struct.halide_mutex* %cond, %struct.halide_mutex* %mutex) local_unnamed_addr #4 {
entry:
  %control.i.i.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", align 8
  %control.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #11
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %cond, i64 0, i32 0, i64 0
  %1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization20wait_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !48
  %cond_state2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 1
  store i64* %state.i, i64** %cond_state2.i.i, align 8, !tbaa !110
  %mutex3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 2
  %2 = bitcast %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex3.i.i to %struct.halide_mutex**
  store %struct.halide_mutex* %mutex, %struct.halide_mutex** %2, align 8, !tbaa !112
  %3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0
  %4 = ptrtoint %struct.halide_mutex* %cond to i64
  %call.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control4parkEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %3, i64 %4) #14
  %5 = ptrtoint %struct.halide_mutex* %mutex to i64
  %cmp.not.i = icmp eq i64 %call.i, %5
  %6 = getelementptr %struct.halide_mutex, %struct.halide_mutex* %mutex, i64 0, i32 0, i64 0
  br i1 %cmp.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %7 = cmpxchg weak i64* %6, i64 0, i64 1 acquire monotonic
  %8 = extractvalue { i64, i1 } %7, 1
  br i1 %8, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %9 = load atomic i64, i64* %6 monotonic, align 8
  %10 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i.i to i8*
  %11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i.i, i64 0, i32 0, i32 0
  %lock_state2.i.i.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i.i, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i.i, i64 0, i32 0
  br label %while.cond.outer.i.i.i

while.cond.outer.i.i.i:                           ; preds = %while.cond.outer.i.i.i.backedge, %if.then.i.i
  %expected.0.ph.i.i.i = phi i64 [ %9, %if.then.i.i ], [ %expected.0.ph.i.i.i.be, %while.cond.outer.i.i.i.backedge ]
  %spinner.sroa.0.0.ph.i.i.i = phi i32 [ 40, %if.then.i.i ], [ %spinner.sroa.0.0.ph.i.i.i.be, %while.cond.outer.i.i.i.backedge ]
  %and55.i.i.i = and i64 %expected.0.ph.i.i.i, 1
  %tobool.not56.i.i.i = icmp eq i64 %and55.i.i.i, 0
  br i1 %tobool.not56.i.i.i, label %if.then.i.i.i, label %if.end4.i.i.i

if.then.i.i.i:                                    ; preds = %while.cond.outer.i.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i
  %expected.057.i.i.i = phi i64 [ %15, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i ], [ %expected.0.ph.i.i.i, %while.cond.outer.i.i.i ]
  %or.i.i.i = or i64 %expected.057.i.i.i, 1
  %13 = cmpxchg weak i64* %6, i64 %expected.057.i.i.i, i64 %or.i.i.i acquire monotonic
  %14 = extractvalue { i64, i1 } %13, 1
  br i1 %14, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i: ; preds = %if.then.i.i.i
  %15 = extractvalue { i64, i1 } %13, 0
  %and.i.i.i = and i64 %15, 1
  %tobool.not.i.i.i = icmp eq i64 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end4.i.i.i.loopexit

if.end4.i.i.i.loopexit:                           ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_acquire_relaxedEPyS4_S4_.exit.i.i.i
  %16 = extractvalue { i64, i1 } %13, 0
  br label %if.end4.i.i.i

if.end4.i.i.i:                                    ; preds = %if.end4.i.i.i.loopexit, %while.cond.outer.i.i.i
  %expected.0.lcssa.i.i.i = phi i64 [ %expected.0.ph.i.i.i, %while.cond.outer.i.i.i ], [ %16, %if.end4.i.i.i.loopexit ]
  %cmp.i.i.i.i = icmp sgt i32 %spinner.sroa.0.0.ph.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i, label %if.end8.i.i.i

_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i: ; preds = %if.end4.i.i.i
  %cmp4.i.not.i.i.i = icmp eq i32 %spinner.sroa.0.0.ph.i.i.i, 1
  br i1 %cmp4.i.not.i.i.i, label %if.end8.i.i.i, label %if.then6.i.i.i

if.then6.i.i.i:                                   ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i
  %dec.i.i.i.i = add nsw i32 %spinner.sroa.0.0.ph.i.i.i, -1
  call void @halide_thread_yield() #14
  %17 = load atomic i64, i64* %6 monotonic, align 8
  br label %while.cond.outer.i.i.i.backedge

if.end8.i.i.i:                                    ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i, %if.end4.i.i.i
  %spinner.sroa.0.152.i.i.i = phi i32 [ 0, %_ZN6Halide7Runtime8Internal15Synchronization12spin_control11should_spinEv.exit.i.i.i ], [ %spinner.sroa.0.0.ph.i.i.i, %if.end4.i.i.i ]
  %and9.i.i.i = and i64 %expected.0.lcssa.i.i.i, 2
  %cmp.i.i.i = icmp eq i64 %and9.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then10.i.i.i, label %if.end19.i.i.i

if.then10.i.i.i:                                  ; preds = %if.end8.i.i.i
  %or12.i.i.i = or i64 %expected.0.lcssa.i.i.i, 2
  %18 = cmpxchg weak i64* %6, i64 %expected.0.lcssa.i.i.i, i64 %or12.i.i.i monotonic monotonic
  %19 = extractvalue { i64, i1 } %18, 1
  br i1 %19, label %if.end19.i.i.i, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i: ; preds = %if.then10.i.i.i
  %20 = extractvalue { i64, i1 } %18, 0
  br label %while.cond.outer.i.i.i.backedge

if.end19.i.i.i:                                   ; preds = %if.then10.i.i.i, %if.end8.i.i.i
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !48
  store i64* %6, i64** %lock_state2.i.i.i.i, align 8, !tbaa !50
  %call21.i.i.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control4parkEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %12, i64 %5) #14
  %cmp22.i.i.i = icmp eq i64 %call21.i.i.i, %5
  br i1 %cmp22.i.i.i, label %cleanup30.critedge.i.i.i, label %if.end24.i.i.i

if.end24.i.i.i:                                   ; preds = %if.end19.i.i.i
  %21 = load atomic i64, i64* %6 monotonic, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  br label %while.cond.outer.i.i.i.backedge

while.cond.outer.i.i.i.backedge:                  ; preds = %if.end24.i.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i, %if.then6.i.i.i
  %expected.0.ph.i.i.i.be = phi i64 [ %20, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i ], [ %21, %if.end24.i.i.i ], [ %17, %if.then6.i.i.i ]
  %spinner.sroa.0.0.ph.i.i.i.be = phi i32 [ %spinner.sroa.0.152.i.i.i, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i.i.i ], [ 40, %if.end24.i.i.i ], [ %dec.i.i.i.i, %if.then6.i.i.i ]
  br label %while.cond.outer.i.i.i

cleanup30.critedge.i.i.i:                         ; preds = %if.end19.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  br label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit

if.else.i:                                        ; preds = %entry
  %22 = load atomic i64, i64* %6 monotonic, align 8
  %and.i = and i64 %22, 1
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %if.then2.i, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit

if.then2.i:                                       ; preds = %if.else.i
  call void @halide_print(i8* null, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @.str.5.6, i64 0, i64 0)) #14
  call void @abort() #14
  br label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit

_ZN6Halide7Runtime8Internal15Synchronization9fast_cond4waitEPNS2_10fast_mutexE.exit: ; preds = %if.then.i.i.i, %if.then2.i, %if.else.i, %cleanup30.critedge.i.i.i, %if.then.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #11
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_loop_task(i8* %user_context, i32 (i8*, i32, i32, i8*, i8*)* %f, i32 %min, i32 %size, i8* %closure, i8* %task_parent) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)*, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 8, !tbaa !14
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i32, i8*, i8*)* %f, i32 %min, i32 %size, i8* %closure, i8* %task_parent) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_task(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 8, !tbaa !14
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %idx, i8* %closure) #14
  ret i32 %call
}

; Function Attrs: nounwind
define linkonce i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control4parkEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i64 %addr) local_unnamed_addr #4 align 2 {
entry:
  %queue_data = alloca %"struct.Halide::Runtime::Internal::Synchronization::queue_data", align 8
  %action = alloca %"struct.Halide::Runtime::Internal::Synchronization::validate_action", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %0) #11
  %should_park.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 0, i32 2
  store i8 0, i8* %should_park.i.i, align 8, !tbaa !98
  %mutex2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 0, i32 0
  %call.i.i = call i32 @pthread_mutex_init(%struct.pthread_mutex_t* nonnull %mutex2.i.i, i8* null) #14
  %condvar3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 0, i32 1
  %call4.i.i = call i32 @pthread_cond_init(%struct.pthread_mutex_t* nonnull %condvar3.i.i, i8* null) #14
  %sleep_address.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 1
  store i64 0, i64* %sleep_address.i, align 8, !tbaa !113
  %next.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next.i, align 8, !tbaa !88
  %unpark_info.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, i64 0, i32 3
  store i64 0, i64* %unpark_info.i, align 8, !tbaa !97
  %call = call nonnull align 8 dereferenceable(24) %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* @_ZN6Halide7Runtime8Internal15Synchronization11lock_bucketEy(i64 %addr) #15
  %1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #11
  store i8 0, i8* %1, align 8, !tbaa !114
  %invalid_unpark_info.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 2
  store i64 0, i64* %invalid_unpark_info.i, align 8, !tbaa !116
  %2 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)***
  %vtable = load i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)**, i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)*** %2, align 8, !tbaa !48
  %3 = load i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)*, i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)** %vtable, align 8
  %call2 = call zeroext i1 %3(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) #14
  br i1 %call2, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %state.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0, i32 0
  %4 = atomicrmw and i64* %state.i, i64 -2 release
  %and.i = and i64 %4, 2
  %cmp.i = icmp ne i64 %and.i, 0
  %cmp3.not.i = icmp ult i64 %4, 4
  %or.cond.i = or i1 %cmp3.not.i, %cmp.i
  br i1 %or.cond.i, label %cleanup, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0
  call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #14
  br label %cleanup

if.end:                                           ; preds = %entry
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next.i, align 8, !tbaa !88
  store i64 %addr, i64* %sleep_address.i, align 8, !tbaa !113
  store i8 1, i8* %should_park.i.i, align 8, !tbaa !98
  %head = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 1
  %5 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head, align 8, !tbaa !117
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %5, null
  %tail = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 2
  %6 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8
  %next4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %6, i64 0, i32 2
  %head.sink = select i1 %cmp.not, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next4
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head.sink, align 8, !tbaa !14
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %queue_data, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !93
  %state.i23 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0, i32 0
  %7 = atomicrmw and i64* %state.i23, i64 -2 release
  %and.i24 = and i64 %7, 2
  %cmp.i25 = icmp ne i64 %and.i24, 0
  %cmp3.not.i26 = icmp ult i64 %7, 4
  %or.cond.i27 = or i1 %cmp3.not.i26, %cmp.i25
  br i1 %or.cond.i27, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29, label %if.then.i28

if.then.i28:                                      ; preds = %if.end
  %mutex8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %call, i64 0, i32 0
  call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex8) #14
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29

_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29: ; preds = %if.then.i28, %if.end
  %8 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)***
  %vtable9 = load void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)**, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)*** %8, align 8, !tbaa !48
  %vfn10 = getelementptr inbounds void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)*, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)** %vtable9, i64 1
  %9 = load void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)*, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*)** %vfn10, align 8
  call void %9(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this) #14
  %call.i = call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #14
  %10 = load i8, i8* %should_park.i.i, align 8, !tbaa !98, !range !21
  %tobool.not6.i = icmp eq i8 %10, 0
  br i1 %tobool.not6.i, label %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, label %while.body.i

while.body.i:                                     ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29, %while.body.i
  %call3.i = call i32 @pthread_cond_wait(%struct.pthread_mutex_t* nonnull %condvar3.i.i, %struct.pthread_mutex_t* nonnull %mutex2.i.i) #14
  %11 = load i8, i8* %should_park.i.i, align 8, !tbaa !98, !range !21
  %tobool.not.i = icmp eq i8 %11, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, label %while.body.i, !llvm.loop !106

_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit: ; preds = %while.body.i, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit29
  %call5.i = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #14
  br label %cleanup

cleanup:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit, %if.then.i, %if.then
  %unpark_info.i.sink = phi i64* [ %unpark_info.i, %_ZN6Halide7Runtime8Internal15Synchronization13thread_parker4parkEv.exit ], [ %invalid_unpark_info.i, %if.then ], [ %invalid_unpark_info.i, %if.then.i ]
  %12 = load i64, i64* %unpark_info.i.sink, align 8, !tbaa !22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #11
  %call.i.i22 = call i32 @pthread_cond_destroy(%struct.pthread_mutex_t* nonnull %condvar3.i.i) #14
  %call2.i.i = call i32 @pthread_mutex_destroy(%struct.pthread_mutex_t* nonnull %mutex2.i.i) #14
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %0) #11
  ret i64 %12
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control8validateERNS2_15validate_actionE(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) unnamed_addr #2 align 2 {
entry:
  %cond_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %cond_state, align 8, !tbaa !110
  %1 = load atomic i64, i64* %0 monotonic, align 8
  %cmp = icmp eq i64 %1, 0
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 2
  %2 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !112
  %3 = ptrtoint %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2 to i64
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store atomic i64 %3, i64* %0 monotonic, align 8
  br label %cleanup

if.else:                                          ; preds = %entry
  %cmp4.not = icmp eq i64 %1, %3
  br i1 %cmp4.not, label %cleanup, label %if.then5

if.then5:                                         ; preds = %if.else
  %invalid_unpark_info = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 2
  store i64 %3, i64* %invalid_unpark_info, align 8, !tbaa !116
  br label %cleanup

cleanup:                                          ; preds = %if.then5, %if.else, %if.then
  %retval.0 = phi i1 [ false, %if.then5 ], [ true, %if.else ], [ true, %if.then ]
  ret i1 %retval.0
}

; Function Attrs: nounwind
define linkonce_odr void @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control12before_sleepEv(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this) unnamed_addr #4 align 2 {
entry:
  %control.i.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", align 8
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 2
  %0 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !112
  %state.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %0, i64 0, i32 0
  %1 = cmpxchg weak i64* %state.i, i64 1, i64 0 release monotonic
  %2 = extractvalue { i64, i1 } %1, 1
  br i1 %2, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %3 = cmpxchg i64* %state.i, i64 1, i64 0 release monotonic
  %4 = extractvalue { i64, i1 } %3, 1
  br i1 %4, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i
  %5 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !48
  %lock_state2.i.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 1
  store i64* %state.i, i64** %lock_state2.i.i.i, align 8, !tbaa !50
  %7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::mutex_parking_control"* %control.i.i, i64 0, i32 0
  %8 = ptrtoint %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %0 to i64
  %call3.i.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control10unpark_oneEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %7, i64 %8) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  br label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit

_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex6unlockEv.exit: ; preds = %if.end.i.i, %if.then.i, %entry
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr i64 @_ZN6Halide7Runtime8Internal15Synchronization20wait_parking_control6unparkEib(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, i32 %unparked, i1 zeroext %more_waiters) unnamed_addr #2 align 2 {
entry:
  br i1 %more_waiters, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %cond_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %cond_state, align 8, !tbaa !110
  store atomic i64 0, i64* %0 monotonic, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i64 0
}

; Function Attrs: nounwind
define linkonce i32 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control14unpark_requeueEyyy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i64 %addr_from, i64 %addr_to, i64 %unpark_info) local_unnamed_addr #4 align 2 {
entry:
  %buckets = alloca %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", align 8
  %action = alloca %"struct.Halide::Runtime::Internal::Synchronization::validate_action", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #11
  call void @_ZN6Halide7Runtime8Internal15Synchronization16lock_bucket_pairEyy(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull sret(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair") align 8 %buckets, i64 %addr_from, i64 %addr_to) #15
  %1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #11
  store i8 0, i8* %1, align 8, !tbaa !114
  %invalid_unpark_info.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 2
  store i64 0, i64* %invalid_unpark_info.i, align 8, !tbaa !116
  %2 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)***
  %vtable = load i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)**, i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)*** %2, align 8, !tbaa !48
  %3 = load i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)*, i1 (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*)** %vtable, align 8
  %call = call zeroext i1 %3(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) #14
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @_ZN6Halide7Runtime8Internal15Synchronization18unlock_bucket_pairERNS2_11bucket_pairE(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull align 8 dereferenceable(16) %buckets) #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %from = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets, i64 0, i32 0
  %4 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from, align 8, !tbaa !118
  %head = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %4, i64 0, i32 1
  %5 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head, align 8, !tbaa !14
  %cmp.not92 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %5, null
  br i1 %cmp.not92, label %if.end38, label %while.body

while.body:                                       ; preds = %if.end, %if.end22
  %wakeup.098 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %wakeup.2, %if.end22 ], [ null, %if.end ]
  %requeue_tail.097 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue_tail.2, %if.end22 ], [ null, %if.end ]
  %requeue.096 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue.3, %if.end22 ], [ null, %if.end ]
  %data.095 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %7, %if.end22 ], [ %5, %if.end ]
  %prev.094 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %prev.1, %if.end22 ], [ null, %if.end ]
  %data_location.093 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %data_location.1, %if.end22 ], [ %head, %if.end ]
  %sleep_address = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.095, i64 0, i32 1
  %6 = load atomic i64, i64* %sleep_address monotonic, align 8
  %next2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.095, i64 0, i32 2
  %7 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next2, align 8, !tbaa !88
  %cmp3 = icmp eq i64 %6, %addr_from
  br i1 %cmp3, label %if.then4, label %if.end22

if.then4:                                         ; preds = %while.body
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %7, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %data_location.093, align 8, !tbaa !14
  %8 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from, align 8, !tbaa !118
  %tail = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %8, i64 0, i32 2
  %9 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !93
  %cmp6 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %9, %data.095
  br i1 %cmp6, label %if.then7, label %if.end10

if.then7:                                         ; preds = %if.then4
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %prev.094, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail, align 8, !tbaa !93
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %if.then4
  %10 = load i8, i8* %1, align 8, !tbaa !114, !range !21
  %tobool = icmp ne i8 %10, 0
  %cmp11 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.098, null
  %or.cond = and i1 %cmp11, %tobool
  br i1 %or.cond, label %if.end22, label %if.else

if.else:                                          ; preds = %if.end10
  %cmp13 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue.096, null
  br i1 %cmp13, label %if.end17, label %if.else15

if.else15:                                        ; preds = %if.else
  %next16 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue_tail.097, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %data.095, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next16, align 8, !tbaa !88
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.else
  %requeue.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue.096, %if.else15 ], [ %data.095, %if.else ]
  store atomic i64 %addr_to, i64* %sleep_address monotonic, align 8
  br label %if.end22

if.end22:                                         ; preds = %if.end17, %if.end10, %while.body
  %data_location.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %data_location.093, %if.end10 ], [ %data_location.093, %if.end17 ], [ %next2, %while.body ]
  %prev.1 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %prev.094, %if.end10 ], [ %prev.094, %if.end17 ], [ %data.095, %while.body ]
  %requeue.3 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue.096, %if.end10 ], [ %requeue.1, %if.end17 ], [ %requeue.096, %while.body ]
  %requeue_tail.2 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %requeue_tail.097, %if.end10 ], [ %data.095, %if.end17 ], [ %requeue_tail.097, %while.body ]
  %wakeup.2 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %data.095, %if.end10 ], [ %wakeup.098, %if.end17 ], [ %wakeup.098, %while.body ]
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %7, null
  br i1 %cmp.not, label %while.end, label %while.body, !llvm.loop !120

while.end:                                        ; preds = %if.end22
  %cmp23.not = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue.3, null
  br i1 %cmp23.not, label %if.end38, label %if.then24

if.then24:                                        ; preds = %while.end
  %next25 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue_tail.2, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* null, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next25, align 8, !tbaa !88
  %to = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets, i64 0, i32 1
  %11 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %to, align 8, !tbaa !121
  %head26 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %11, i64 0, i32 1
  %12 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %head26, align 8, !tbaa !117
  %cmp27 = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %12, null
  br i1 %cmp27, label %if.end35, label %if.else31

if.else31:                                        ; preds = %if.then24
  %tail33 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %11, i64 0, i32 2
  %13 = load %"struct.Halide::Runtime::Internal::Synchronization::queue_data"*, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail33, align 8, !tbaa !93
  %next34 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %13, i64 0, i32 2
  br label %if.end35

if.end35:                                         ; preds = %if.else31, %if.then24
  %next34.sink = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** [ %next34, %if.else31 ], [ %head26, %if.then24 ]
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue.3, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %next34.sink, align 8, !tbaa !14
  %tail37 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %11, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %requeue_tail.2, %"struct.Halide::Runtime::Internal::Synchronization::queue_data"** %tail37, align 8, !tbaa !93
  br label %if.end38

if.end38:                                         ; preds = %if.end35, %while.end, %if.end
  %cmp23106 = phi i1 [ true, %if.end35 ], [ false, %while.end ], [ false, %if.end ]
  %wakeup.0.lcssa105 = phi %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* [ %wakeup.2, %if.end35 ], [ %wakeup.2, %while.end ], [ null, %if.end ]
  %cmp39 = icmp ne %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, null
  %14 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::parking_control"* %this to void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)***
  %vtable41 = load void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)**, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)*** %14, align 8, !tbaa !48
  %vfn42 = getelementptr inbounds void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)*, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)** %vtable41, i64 3
  %15 = load void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)*, void (%"struct.Halide::Runtime::Internal::Synchronization::parking_control"*, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"*, i1, i1)** %vfn42, align 8
  call void %15(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action, i1 zeroext %cmp39, i1 zeroext %cmp23106) #14
  br i1 %cmp39, label %if.then44, label %if.else48

if.then44:                                        ; preds = %if.end38
  %unpark_info45 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, i64 0, i32 3
  store i64 %unpark_info, i64* %unpark_info45, align 8, !tbaa !97
  %mutex.i89 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, i64 0, i32 0, i32 0
  %call.i90 = call i32 @pthread_mutex_lock(%struct.pthread_mutex_t* nonnull %mutex.i89) #14
  call void @_ZN6Halide7Runtime8Internal15Synchronization18unlock_bucket_pairERNS2_11bucket_pairE(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull align 8 dereferenceable(16) %buckets) #15
  %should_park.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, i64 0, i32 0, i32 2
  store i8 0, i8* %should_park.i, align 8, !tbaa !98
  %condvar.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::queue_data", %"struct.Halide::Runtime::Internal::Synchronization::queue_data"* %wakeup.0.lcssa105, i64 0, i32 0, i32 1
  %call.i88 = call i32 @pthread_cond_signal(%struct.pthread_mutex_t* nonnull %condvar.i) #14
  %call.i = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t* nonnull %mutex.i89) #14
  br label %if.end49

if.else48:                                        ; preds = %if.end38
  call void @_ZN6Halide7Runtime8Internal15Synchronization18unlock_bucket_pairERNS2_11bucket_pairE(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull align 8 dereferenceable(16) %buckets) #15
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then44
  %16 = load i8, i8* %1, align 8
  %17 = and i8 %16, 1
  %tobool52 = icmp ne i8 %17, 0
  %18 = and i1 %cmp39, %tobool52
  %conv = zext i1 %18 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end49, %if.then
  %retval.0 = phi i32 [ %conv, %if.end49 ], [ 0, %if.then ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #11
  ret i32 %retval.0
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal15Synchronization16lock_bucket_pairEyy(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* noalias sret(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair") align 8 %agg.result, i64 %addr_from, i64 %addr_to) local_unnamed_addr #4 {
entry:
  %mul.i = mul i64 %addr_from, -7046029254386353131
  %shr.i = lshr i64 %mul.i, 54
  %mul.i37 = mul i64 %addr_to, -7046029254386353131
  %shr.i38 = lshr i64 %mul.i37, 54
  %cmp = icmp eq i64 %shr.i, %shr.i38
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i
  %state.i42 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx, i64 0, i32 0, i32 0
  %0 = cmpxchg weak i64* %state.i42, i64 0, i64 1 acquire monotonic
  %1 = extractvalue { i64, i1 } %0, 1
  br i1 %1, label %cleanup, label %if.then.i43

if.then.i43:                                      ; preds = %if.then
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #14
  br label %cleanup

if.else:                                          ; preds = %entry
  %cmp2 = icmp ult i64 %shr.i, %shr.i38
  br i1 %cmp2, label %if.then3, label %if.else9

if.then3:                                         ; preds = %if.else
  %arrayidx5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i
  %arrayidx6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i38
  %state.i52 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx5, i64 0, i32 0, i32 0
  %2 = cmpxchg weak i64* %state.i52, i64 0, i64 1 acquire monotonic
  %3 = extractvalue { i64, i1 } %2, 1
  br i1 %3, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54, label %if.then.i53

if.then.i53:                                      ; preds = %if.then3
  %mutex7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx5, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex7) #14
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54

_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54: ; preds = %if.then.i53, %if.then3
  %state.i49 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx6, i64 0, i32 0, i32 0
  %4 = cmpxchg weak i64* %state.i49, i64 0, i64 1 acquire monotonic
  %5 = extractvalue { i64, i1 } %4, 1
  br i1 %5, label %cleanup, label %if.then.i50

if.then.i50:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54
  %mutex8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx6, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex8) #14
  br label %cleanup

if.else9:                                         ; preds = %if.else
  %arrayidx11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i38
  %arrayidx13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_table", %"struct.Halide::Runtime::Internal::Synchronization::hash_table"* @_ZN6Halide7Runtime8Internal15Synchronization5tableE, i64 0, i32 0, i64 %shr.i
  %state.i39 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx11, i64 0, i32 0, i32 0
  %6 = cmpxchg weak i64* %state.i39, i64 0, i64 1 acquire monotonic
  %7 = extractvalue { i64, i1 } %6, 1
  br i1 %7, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41, label %if.then.i40

if.then.i40:                                      ; preds = %if.else9
  %mutex14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx11, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex14) #14
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41

_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41: ; preds = %if.then.i40, %if.else9
  %state.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx13, i64 0, i32 0, i32 0
  %8 = cmpxchg weak i64* %state.i, i64 0, i64 1 acquire monotonic
  %9 = extractvalue { i64, i1 } %8, 1
  br i1 %9, label %cleanup, label %if.then.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41
  %mutex15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx13, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock9lock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex15) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41, %if.then.i50, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54, %if.then.i43, %if.then
  %arrayidx13.sink = phi %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* [ %arrayidx, %if.then ], [ %arrayidx, %if.then.i43 ], [ %arrayidx5, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54 ], [ %arrayidx5, %if.then.i50 ], [ %arrayidx13, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41 ], [ %arrayidx13, %if.then.i ]
  %arrayidx11.sink = phi %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* [ %arrayidx, %if.then ], [ %arrayidx, %if.then.i43 ], [ %arrayidx6, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit54 ], [ %arrayidx6, %if.then.i50 ], [ %arrayidx11, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock4lockEv.exit41 ], [ %arrayidx11, %if.then.i ]
  %from2.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %agg.result, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx13.sink, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from2.i, align 8, !tbaa !14
  %to3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %agg.result, i64 0, i32 1
  store %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %arrayidx11.sink, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %to3.i, align 8, !tbaa !14
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal15Synchronization18unlock_bucket_pairERNS2_11bucket_pairE(%"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* nonnull align 8 dereferenceable(16) %buckets) local_unnamed_addr #0 {
entry:
  %from = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets, i64 0, i32 0
  %0 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from, align 8, !tbaa !118
  %to = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair", %"struct.Halide::Runtime::Internal::Synchronization::bucket_pair"* %buckets, i64 0, i32 1
  %1 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %to, align 8, !tbaa !121
  %cmp = icmp eq %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, %1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %state.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, i64 0, i32 0, i32 0
  %2 = atomicrmw and i64* %state.i, i64 -2 release
  %and.i = and i64 %2, 2
  %cmp.i = icmp ne i64 %and.i, 0
  %cmp3.not.i = icmp ult i64 %2, 4
  %or.cond.i = or i1 %cmp3.not.i, %cmp.i
  br i1 %or.cond.i, label %if.end15, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex) #14
  br label %if.end15

if.else:                                          ; preds = %entry
  %cmp4 = icmp ugt %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, %1
  br i1 %cmp4, label %if.then5, label %if.else10

if.then5:                                         ; preds = %if.else
  %state.i25 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, i64 0, i32 0, i32 0
  %3 = atomicrmw and i64* %state.i25, i64 -2 release
  %and.i26 = and i64 %3, 2
  %cmp.i27 = icmp ne i64 %and.i26, 0
  %cmp3.not.i28 = icmp ult i64 %3, 4
  %or.cond.i29 = or i1 %cmp3.not.i28, %cmp.i27
  br i1 %or.cond.i29, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31, label %if.then.i30

if.then.i30:                                      ; preds = %if.then5
  %mutex7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %0, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex7) #14
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31

_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31: ; preds = %if.then.i30, %if.then5
  %4 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %to, align 8, !tbaa !121
  %state.i32 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %4, i64 0, i32 0, i32 0
  %5 = atomicrmw and i64* %state.i32, i64 -2 release
  %and.i33 = and i64 %5, 2
  %cmp.i34 = icmp ne i64 %and.i33, 0
  %cmp3.not.i35 = icmp ult i64 %5, 4
  %or.cond.i36 = or i1 %cmp3.not.i35, %cmp.i34
  br i1 %or.cond.i36, label %if.end15, label %if.then.i37

if.then.i37:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31
  %mutex9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %4, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex9) #14
  br label %if.end15

if.else10:                                        ; preds = %if.else
  %state.i39 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %1, i64 0, i32 0, i32 0
  %6 = atomicrmw and i64* %state.i39, i64 -2 release
  %and.i40 = and i64 %6, 2
  %cmp.i41 = icmp ne i64 %and.i40, 0
  %cmp3.not.i42 = icmp ult i64 %6, 4
  %or.cond.i43 = or i1 %cmp3.not.i42, %cmp.i41
  br i1 %or.cond.i43, label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45, label %if.then.i44

if.then.i44:                                      ; preds = %if.else10
  %mutex12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %1, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex12) #14
  br label %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45

_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45: ; preds = %if.then.i44, %if.else10
  %7 = load %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"*, %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"** %from, align 8, !tbaa !118
  %state.i46 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %7, i64 0, i32 0, i32 0
  %8 = atomicrmw and i64* %state.i46, i64 -2 release
  %and.i47 = and i64 %8, 2
  %cmp.i48 = icmp ne i64 %and.i47, 0
  %cmp3.not.i49 = icmp ult i64 %8, 4
  %or.cond.i50 = or i1 %cmp3.not.i49, %cmp.i48
  br i1 %or.cond.i50, label %if.end15, label %if.then.i51

if.then.i51:                                      ; preds = %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45
  %mutex14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket", %"struct.Halide::Runtime::Internal::Synchronization::hash_bucket"* %7, i64 0, i32 0
  tail call void @_ZN6Halide7Runtime8Internal15Synchronization9word_lock11unlock_fullEv(%"class.Halide::Runtime::Internal::Synchronization::word_lock"* nonnull dereferenceable(8) %mutex14) #14
  br label %if.end15

if.end15:                                         ; preds = %if.then.i51, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit45, %if.then.i37, %_ZN6Halide7Runtime8Internal15Synchronization9word_lock6unlockEv.exit31, %if.then.i, %if.then
  ret void
}

; Function Attrs: nounwind
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control8validateERNS2_15validate_actionE(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) unnamed_addr #4 align 2 {
entry:
  %cond_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %cond_state, align 8, !tbaa !107
  %1 = load atomic i64, i64* %0 monotonic, align 8
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 2
  %2 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !109
  %3 = ptrtoint %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2 to i64
  %cmp.not = icmp eq i64 %1, %3
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  store atomic i64 0, i64* %0 monotonic, align 8
  %4 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !109
  %state.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %4, i64 0, i32 0
  %5 = load atomic i64, i64* %state.i monotonic, align 8
  %and11.i = and i64 %5, 1
  %tobool.not12.i = icmp eq i64 %and11.i, 0
  br i1 %tobool.not12.i, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit, label %if.end.i

if.end.i:                                         ; preds = %if.end, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i
  %val.013.i = phi i64 [ %8, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i ], [ %5, %if.end ]
  %or.i = or i64 %val.013.i, 2
  %6 = cmpxchg weak i64* %state.i, i64 %val.013.i, i64 %or.i monotonic monotonic
  %7 = extractvalue { i64, i1 } %6, 1
  br i1 %7, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit, label %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i

_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i: ; preds = %if.end.i
  %8 = extractvalue { i64, i1 } %6, 0
  %and.i = and i64 %8, 1
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit, label %if.end.i

_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit: ; preds = %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i, %if.end.i, %if.end
  %tobool.not.lcssa.i = phi i8 [ 1, %if.end ], [ 1, %_ZN6Halide7Runtime8Internal15Synchronization12_GLOBAL__N_131atomic_cas_weak_relaxed_relaxedEPyS4_S4_.exit.i ], [ 0, %if.end.i ]
  %unpark_one = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 0
  store i8 %tobool.not.lcssa.i, i8* %unpark_one, align 8, !tbaa !114
  br label %cleanup

cleanup:                                          ; preds = %_ZN6Halide7Runtime8Internal15Synchronization10fast_mutex21make_parked_if_lockedEv.exit, %entry
  ret i1 %cmp.not
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control6unparkEib(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, i32 %unparked, i1 zeroext %more_waiters) unnamed_addr #2 align 2 {
entry:
  ret i64 0
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr void @_ZN6Halide7Runtime8Internal15Synchronization25broadcast_parking_control16requeue_callbackERKNS2_15validate_actionEbb(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action, i1 zeroext %one_to_wake, i1 zeroext %some_requeued) unnamed_addr #2 align 2 {
entry:
  %unpark_one = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::validate_action", %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* %action, i64 0, i32 0
  %0 = load i8, i8* %unpark_one, align 8, !tbaa !114, !range !21
  %tobool.not = icmp ne i8 %0, 0
  %1 = and i1 %tobool.not, %some_requeued
  br i1 %1, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %mutex = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 2
  %2 = load %"class.Halide::Runtime::Internal::Synchronization::word_lock"*, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex, align 8, !tbaa !109
  %state.i = getelementptr inbounds %"class.Halide::Runtime::Internal::Synchronization::word_lock", %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2, i64 0, i32 0
  %3 = atomicrmw or i64* %state.i, i64 2 monotonic
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @_ZN6Halide7Runtime8Internal27default_desired_num_threadsEv() local_unnamed_addr #0 {
entry:
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #14
  %tobool.not = icmp eq i8* %call, null
  br i1 %tobool.not, label %if.end, label %cond.true

if.end:                                           ; preds = %entry
  %call1 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #14
  %tobool2.not = icmp eq i8* %call1, null
  br i1 %tobool2.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end, %entry
  %threads_str.010 = phi i8* [ %call1, %if.end ], [ %call, %entry ]
  %call3 = tail call i32 @atoi(i8* nonnull %threads_str.010) #14
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call4 = tail call i32 @halide_host_cpu_count() #14
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call3, %cond.true ], [ %call4, %cond.false ]
  ret i32 %cond
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal13worker_threadEPv(i8* %arg) #0 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  %0 = bitcast i8* %arg to %"struct.Halide::Runtime::Internal::work"*
  tail call void @_ZN6Halide7Runtime8Internal28worker_thread_already_lockedEPNS1_4workE(%"struct.Halide::Runtime::Internal::work"* %0) #15
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  ret void
}

; Function Attrs: nounwind mustprogress
define weak %struct.halide_thread* @halide_spawn_thread(void (i8*)* %f, i8* %closure) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @malloc(i64 24) #14
  %f1 = bitcast i8* %call to void (i8*)**
  store void (i8*)* %f, void (i8*)** %f1, align 8, !tbaa !122
  %closure2 = getelementptr inbounds i8, i8* %call, i64 8
  %0 = bitcast i8* %closure2 to i8**
  store i8* %closure, i8** %0, align 8, !tbaa !125
  %handle = getelementptr inbounds i8, i8* %call, i64 16
  %1 = bitcast i8* %handle to i64*
  store i64 0, i64* %1, align 8, !tbaa !126
  %call4 = tail call i32 @pthread_create(i64* nonnull %1, i8* null, i8* (i8*)* nonnull @_ZN6Halide7Runtime8Internal19spawn_thread_helperEPv, i8* %call) #14
  %2 = bitcast i8* %call to %struct.halide_thread*
  ret %struct.halide_thread* %2
}

; Function Attrs: nounwind mustprogress
define linkonce i8* @_ZN6Halide7Runtime8Internal19spawn_thread_helperEPv(i8* %arg) #0 {
entry:
  %f = bitcast i8* %arg to void (i8*)**
  %0 = load void (i8*)*, void (i8*)** %f, align 8, !tbaa !122
  %closure = getelementptr inbounds i8, i8* %arg, i64 8
  %1 = bitcast i8* %closure to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !125
  tail call void %0(i8* %2) #14
  ret i8* null
}

declare i32 @pthread_create(i64*, i8*, i8* (i8*)*, i8*) local_unnamed_addr #1

declare i8* @getenv(i8*) local_unnamed_addr #1

declare i32 @atoi(i8*) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_do_parallel_tasks(i8* %user_context, i32 %num_tasks, %struct.halide_parallel_task_t* %tasks, i8* %task_parent) #0 {
entry:
  %conv = sext i32 %num_tasks to i64
  %0 = alloca %"struct.Halide::Runtime::Internal::work", i64 %conv, align 8
  %cmp76 = icmp sgt i32 %num_tasks, 0
  br i1 %cmp76, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.inc, %entry
  %num_tasks.addr.0.lcssa = phi i32 [ %num_tasks, %entry ], [ %num_tasks.addr.1, %for.inc ]
  %cmp17 = icmp eq i32 %num_tasks.addr.0.lcssa, 0
  br i1 %cmp17, label %cleanup, label %if.end19

for.body:                                         ; preds = %entry, %for.inc
  %indvars.iv82 = phi i64 [ %indvars.iv.next83, %for.inc ], [ 0, %entry ]
  %num_tasks.addr.078 = phi i32 [ %num_tasks.addr.1, %for.inc ], [ %num_tasks, %entry ]
  %tasks.addr.077 = phi %struct.halide_parallel_task_t* [ %tasks.addr.1, %for.inc ], [ %tasks, %entry ]
  %extent = getelementptr inbounds %struct.halide_parallel_task_t, %struct.halide_parallel_task_t* %tasks.addr.077, i64 0, i32 6
  %1 = load i32, i32* %extent, align 8, !tbaa !127
  %cmp1 = icmp slt i32 %1, 1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %dec = add nsw i32 %num_tasks.addr.078, -1
  br label %for.inc

if.end:                                           ; preds = %for.body
  %incdec.ptr = getelementptr inbounds %struct.halide_parallel_task_t, %struct.halide_parallel_task_t* %tasks.addr.077, i64 1
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82
  %2 = bitcast %"struct.Halide::Runtime::Internal::work"* %arrayidx to i8*
  %3 = bitcast %struct.halide_parallel_task_t* %tasks.addr.077 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %2, i8* nonnull align 8 dereferenceable(56) %3, i64 56, i1 false), !tbaa.struct !128
  %task_fn = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 1
  store i32 (i8*, i32, i8*)* null, i32 (i8*, i32, i8*)** %task_fn, align 8, !tbaa !39
  %user_context6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 7
  store i8* %user_context, i8** %user_context6, align 8, !tbaa !40
  %active_workers = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 8
  %4 = bitcast i32* %active_workers to <2 x i32>*
  store <2 x i32> zeroinitializer, <2 x i32>* %4, align 8, !tbaa !41
  %next_semaphore = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 10
  store i32 0, i32* %next_semaphore, align 8, !tbaa !42
  %owner_is_sleeping = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 11
  store i8 0, i8* %owner_is_sleeping, align 4, !tbaa !43
  %parent_job = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv82, i32 5
  %5 = bitcast %"struct.Halide::Runtime::Internal::work"** %parent_job to i8**
  store i8* %task_parent, i8** %5, align 8, !tbaa !46
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.then
  %tasks.addr.1 = phi %struct.halide_parallel_task_t* [ %tasks.addr.077, %if.then ], [ %incdec.ptr, %if.end ]
  %num_tasks.addr.1 = phi i32 [ %dec, %if.then ], [ %num_tasks.addr.078, %if.end ]
  %indvars.iv.next83 = add nuw nsw i64 %indvars.iv82, 1
  %6 = sext i32 %num_tasks.addr.1 to i64
  %cmp = icmp slt i64 %indvars.iv.next83, %6
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !129

if.end19:                                         ; preds = %for.cond.cleanup
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  %7 = bitcast i8* %task_parent to %"struct.Halide::Runtime::Internal::work"*
  call void @_ZN6Halide7Runtime8Internal27enqueue_work_already_lockedEiPNS1_4workES3_(i32 %num_tasks.addr.0.lcssa, %"struct.Halide::Runtime::Internal::work"* nonnull %0, %"struct.Halide::Runtime::Internal::work"* %7) #15
  %cmp2373 = icmp sgt i32 %num_tasks.addr.0.lcssa, 0
  br i1 %cmp2373, label %for.body25.preheader, label %for.cond.cleanup24

for.body25.preheader:                             ; preds = %if.end19
  %wide.trip.count = zext i32 %num_tasks.addr.0.lcssa to i64
  br label %for.body25

for.cond.cleanup24:                               ; preds = %for.body25, %if.end19
  %exit_status20.0.lcssa = phi i32 [ 0, %if.end19 ], [ %spec.select, %for.body25 ]
  call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  br label %cleanup

for.body25:                                       ; preds = %for.body25, %for.body25.preheader
  %indvars.iv = phi i64 [ 0, %for.body25.preheader ], [ %indvars.iv.next, %for.body25 ]
  %exit_status20.074 = phi i32 [ 0, %for.body25.preheader ], [ %spec.select, %for.body25 ]
  %add.ptr = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv
  call void @_ZN6Halide7Runtime8Internal28worker_thread_already_lockedEPNS1_4workE(%"struct.Halide::Runtime::Internal::work"* nonnull %add.ptr) #15
  %exit_status28 = getelementptr inbounds %"struct.Halide::Runtime::Internal::work", %"struct.Halide::Runtime::Internal::work"* %0, i64 %indvars.iv, i32 9
  %8 = load i32, i32* %exit_status28, align 4, !tbaa !47
  %cmp29.not = icmp eq i32 %8, 0
  %spec.select = select i1 %cmp29.not, i32 %exit_status20.074, i32 %8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup24, label %for.body25, !llvm.loop !130

cleanup:                                          ; preds = %for.cond.cleanup24, %for.cond.cleanup
  %retval.0 = phi i32 [ %exit_status20.0.lcssa, %for.cond.cleanup24 ], [ 0, %for.cond.cleanup ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_default_semaphore_init(%struct.halide_semaphore_t* %s, i32 %n) #2 {
entry:
  %value = bitcast %struct.halide_semaphore_t* %s to i32*
  store atomic i32 %n, i32* %value release, align 4
  ret i32 %n
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_semaphore_release(%struct.halide_semaphore_t* %s, i32 %n) #0 {
entry:
  %value = bitcast %struct.halide_semaphore_t* %s to i32*
  %0 = atomicrmw add i32* %value, i32 %n acq_rel
  %cmp = icmp eq i32 %0, 0
  %cmp1 = icmp ne i32 %n, 0
  %or.cond = and i1 %cmp1, %cmp
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 8)) #15
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #15
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %add = add nsw i32 %0, %n
  ret i32 %add
}

; Function Attrs: nounwind mustprogress
define weak void @halide_thread_pool_cleanup() #0 {
entry:
  tail call void @halide_shutdown_thread_pool() #15
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_shutdown_thread_pool() local_unnamed_addr #0 {
entry:
  %0 = load i8, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 15), align 1, !tbaa !52, !range !21
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  store i8 1, i8* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 14), align 8, !tbaa !73
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 10)) #15
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 8)) #15
  tail call void @halide_cond_broadcast(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 9)) #15
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  %1 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !60
  %cmp4 = icmp sgt i32 %1, 0
  br i1 %cmp4, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body, %if.then
  %call.i = tail call i8* @memset(i8* nonnull bitcast (i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 2) to i8*), i32 0, i64 2116) #14
  br label %if.end

for.body:                                         ; preds = %if.then, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.then ]
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 13, i64 %indvars.iv
  %2 = load %struct.halide_thread*, %struct.halide_thread** %arrayidx, align 8, !tbaa !14
  tail call void @halide_join_thread(%struct.halide_thread* %2) #15
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %3 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 4), align 8, !tbaa !60
  %4 = sext i32 %3 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %4
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !131

if.end:                                           ; preds = %for.cond.cleanup, %entry
  ret void
}

declare i8* @memset(i8*, i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_join_thread(%struct.halide_thread* %thread_arg) local_unnamed_addr #0 {
entry:
  %ret = alloca i8*, align 8
  %0 = bitcast %struct.halide_thread* %thread_arg to %"struct.Halide::Runtime::Internal::spawned_thread"*
  %1 = bitcast i8** %ret to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #11
  store i8* null, i8** %ret, align 8, !tbaa !14
  %handle = getelementptr inbounds %"struct.Halide::Runtime::Internal::spawned_thread", %"struct.Halide::Runtime::Internal::spawned_thread"* %0, i64 0, i32 2
  %2 = load i64, i64* %handle, align 8, !tbaa !126
  %call = call i32 @pthread_join(i64 %2, i8** nonnull %ret) #14
  %3 = bitcast %struct.halide_thread* %thread_arg to i8*
  call void @free(i8* %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #11
  ret void
}

declare i32 @pthread_join(i64, i8**) local_unnamed_addr #1

; Function Attrs: nounwind
define weak void @halide_cond_signal(%struct.halide_mutex* %cond) local_unnamed_addr #4 {
entry:
  %control.i = alloca %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", align 8
  %state.i = getelementptr %struct.halide_mutex, %struct.halide_mutex* %cond, i64 0, i32 0, i64 0
  %0 = load atomic i64, i64* %state.i monotonic, align 8
  %cmp.i = icmp eq i64 %0, 0
  br i1 %cmp.i, label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond6signalEv.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #11
  %2 = inttoptr i64 %0 to %"class.Halide::Runtime::Internal::Synchronization::word_lock"*
  %3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6Halide7Runtime8Internal15Synchronization22signal_parking_controlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !48
  %cond_state2.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 1
  store i64* %state.i, i64** %cond_state2.i.i, align 8, !tbaa !132
  %mutex3.i.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 2
  store %"class.Halide::Runtime::Internal::Synchronization::word_lock"* %2, %"class.Halide::Runtime::Internal::Synchronization::word_lock"** %mutex3.i.i, align 8, !tbaa !134
  %4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %control.i, i64 0, i32 0
  %5 = ptrtoint %struct.halide_mutex* %cond to i64
  %call.i = call i64 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control10unpark_oneEy(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %4, i64 %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #11
  br label %_ZN6Halide7Runtime8Internal15Synchronization9fast_cond6signalEv.exit

_ZN6Halide7Runtime8Internal15Synchronization9fast_cond6signalEv.exit: ; preds = %if.end.i, %entry
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr zeroext i1 @_ZN6Halide7Runtime8Internal15Synchronization15parking_control8validateERNS2_15validate_actionE(%"struct.Halide::Runtime::Internal::Synchronization::parking_control"* nonnull dereferenceable(8) %this, %"struct.Halide::Runtime::Internal::Synchronization::validate_action"* nonnull align 8 dereferenceable(16) %action) unnamed_addr #2 align 2 {
entry:
  ret i1 true
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce_odr i64 @_ZN6Halide7Runtime8Internal15Synchronization22signal_parking_control6unparkEib(%"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* nonnull dereferenceable(24) %this, i32 %unparked, i1 zeroext %more_waiters) unnamed_addr #2 align 2 {
entry:
  br i1 %more_waiters, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %cond_state = getelementptr inbounds %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control", %"struct.Halide::Runtime::Internal::Synchronization::wait_parking_control"* %this, i64 0, i32 1
  %0 = load i64*, i64** %cond_state, align 8, !tbaa !132
  store atomic i64 0, i64* %0 monotonic, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i64 0
}

; Function Attrs: nounwind mustprogress
define weak %struct.halide_mutex_array* @halide_mutex_array_create(i32 %sz) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @halide_malloc(i8* null, i64 8) #14
  %0 = bitcast i8* %call to %struct.halide_mutex_array*
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv = sext i32 %sz to i64
  %mul = shl nsw i64 %conv, 3
  %call1 = tail call i8* @halide_malloc(i8* null, i64 %mul) #14
  %1 = bitcast i8* %call to i8**
  store i8* %call1, i8** %1, align 8, !tbaa !135
  %cmp4 = icmp eq i8* %call1, null
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  tail call void @halide_free(i8* null, i8* nonnull %call) #14
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %call10 = tail call i8* @memset(i8* nonnull %call1, i32 0, i64 %mul) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.then5, %entry
  %retval.0 = phi %struct.halide_mutex_array* [ null, %if.then5 ], [ %0, %if.end6 ], [ null, %entry ]
  ret %struct.halide_mutex_array* %retval.0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_mutex_array_destroy(i8* %user_context, i8* %array) local_unnamed_addr #0 {
entry:
  %0 = bitcast i8* %array to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !135
  tail call void @halide_free(i8* %user_context, i8* %1) #14
  tail call void @halide_free(i8* %user_context, i8* %array) #14
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_mutex_array_lock(%struct.halide_mutex_array* %array, i32 %entry1) local_unnamed_addr #0 {
entry:
  %array2 = getelementptr inbounds %struct.halide_mutex_array, %struct.halide_mutex_array* %array, i64 0, i32 0
  %0 = load %struct.halide_mutex*, %struct.halide_mutex** %array2, align 8, !tbaa !135
  %idxprom = sext i32 %entry1 to i64
  %arrayidx = getelementptr inbounds %struct.halide_mutex, %struct.halide_mutex* %0, i64 %idxprom
  tail call void @halide_mutex_lock(%struct.halide_mutex* %arrayidx) #15
  ret i32 0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_mutex_array_unlock(%struct.halide_mutex_array* %array, i32 %entry1) local_unnamed_addr #0 {
entry:
  %array2 = getelementptr inbounds %struct.halide_mutex_array, %struct.halide_mutex_array* %array, i64 0, i32 0
  %0 = load %struct.halide_mutex*, %struct.halide_mutex** %array2, align 8, !tbaa !135
  %idxprom = sext i32 %entry1 to i64
  %arrayidx = getelementptr inbounds %struct.halide_mutex, %struct.halide_mutex* %0, i64 %idxprom
  tail call void @halide_mutex_unlock(%struct.halide_mutex* %arrayidx) #15
  ret i32 0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_set_num_threads(i32 %n) local_unnamed_addr #0 {
entry:
  %cmp = icmp slt i32 %n, 0
  br i1 %cmp, label %if.end3.thread, label %if.end

if.end3.thread:                                   ; preds = %entry
  tail call void @halide_error(i8* null, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #14
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  %0 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !58
  br label %if.else.i

if.end:                                           ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  %cmp1 = icmp eq i32 %n, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %call = tail call i32 @_ZN6Halide7Runtime8Internal27default_desired_num_threadsEv() #15
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %n.addr.0 = phi i32 [ %call, %if.then2 ], [ %n, %if.end ]
  %1 = load i32, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !58
  %cmp.i = icmp sgt i32 %n.addr.0, 256
  br i1 %cmp.i, label %_ZN6Halide7Runtime8Internal17clamp_num_threadsEi.exit, label %if.else.i

if.else.i:                                        ; preds = %if.end3, %if.end3.thread
  %2 = phi i32 [ %0, %if.end3.thread ], [ %1, %if.end3 ]
  %n.addr.012 = phi i32 [ %n, %if.end3.thread ], [ %n.addr.0, %if.end3 ]
  %3 = icmp sgt i32 %n.addr.012, 1
  %spec.select.i = select i1 %3, i32 %n.addr.012, i32 1
  br label %_ZN6Halide7Runtime8Internal17clamp_num_threadsEi.exit

_ZN6Halide7Runtime8Internal17clamp_num_threadsEi.exit: ; preds = %if.else.i, %if.end3
  %4 = phi i32 [ %2, %if.else.i ], [ %1, %if.end3 ]
  %call48 = phi i32 [ %spec.select.i, %if.else.i ], [ 256, %if.end3 ]
  store i32 %call48, i32* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 1), align 8, !tbaa !58
  tail call void @halide_mutex_unlock(%struct.halide_mutex* getelementptr inbounds (%"struct.Halide::Runtime::Internal::work_queue_t", %"struct.Halide::Runtime::Internal::work_queue_t"* @_ZN6Halide7Runtime8Internal10work_queueE, i64 0, i32 0)) #15
  ret i32 %4
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* @halide_set_custom_do_task(i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 8, !tbaa !14
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %f, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 8, !tbaa !14
  ret i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* @halide_set_custom_do_loop_task(i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)*, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 8, !tbaa !14
  store i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %f, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 8, !tbaa !14
  ret i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* @halide_set_custom_do_par_for(i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 8, !tbaa !14
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %f, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 8, !tbaa !14
  ret i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_set_custom_parallel_runtime(i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %do_par_for, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %do_task, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %do_loop_task, i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)* %do_parallel_tasks, i32 (%struct.halide_semaphore_t*, i32)* %semaphore_init, i1 (%struct.halide_semaphore_t*, i32)* %semaphore_try_acquire, i32 (%struct.halide_semaphore_t*, i32)* %semaphore_release) local_unnamed_addr #2 {
entry:
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)* %do_par_for, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 8, !tbaa !14
  store i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)* %do_task, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i8*)** @_ZN6Halide7Runtime8Internal14custom_do_taskE, align 8, !tbaa !14
  store i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)* %do_loop_task, i32 (i8*, i32 (i8*, i32, i32, i8*, i8*)*, i32, i32, i8*, i8*)** @_ZN6Halide7Runtime8Internal19custom_do_loop_taskE, align 8, !tbaa !14
  store i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)* %do_parallel_tasks, i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)** @_ZN6Halide7Runtime8Internal24custom_do_parallel_tasksE, align 8, !tbaa !14
  store i32 (%struct.halide_semaphore_t*, i32)* %semaphore_init, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal21custom_semaphore_initE, align 8, !tbaa !14
  store i1 (%struct.halide_semaphore_t*, i32)* %semaphore_try_acquire, i1 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal28custom_semaphore_try_acquireE, align 8, !tbaa !14
  store i32 (%struct.halide_semaphore_t*, i32)* %semaphore_release, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal24custom_semaphore_releaseE, align 8, !tbaa !14
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_par_for(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)*, i32 (i8*, i32 (i8*, i32, i8*)*, i32, i32, i8*)** @_ZN6Halide7Runtime8Internal17custom_do_par_forE, align 8, !tbaa !14
  %call = tail call i32 %0(i8* %user_context, i32 (i8*, i32, i8*)* %f, i32 %min, i32 %size, i8* %closure) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_do_parallel_tasks(i8* %user_context, i32 %num_tasks, %struct.halide_parallel_task_t* %tasks, i8* %task_parent) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)*, i32 (i8*, i32, %struct.halide_parallel_task_t*, i8*)** @_ZN6Halide7Runtime8Internal24custom_do_parallel_tasksE, align 8, !tbaa !14
  %call = tail call i32 %0(i8* %user_context, i32 %num_tasks, %struct.halide_parallel_task_t* %tasks, i8* %task_parent) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_semaphore_init(%struct.halide_semaphore_t* %sema, i32 %count) local_unnamed_addr #0 {
entry:
  %0 = load i32 (%struct.halide_semaphore_t*, i32)*, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal21custom_semaphore_initE, align 8, !tbaa !14
  %call = tail call i32 %0(%struct.halide_semaphore_t* %sema, i32 %count) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_semaphore_release(%struct.halide_semaphore_t* %sema, i32 %count) local_unnamed_addr #0 {
entry:
  %0 = load i32 (%struct.halide_semaphore_t*, i32)*, i32 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal24custom_semaphore_releaseE, align 8, !tbaa !14
  %call = tail call i32 %0(%struct.halide_semaphore_t* %sema, i32 %count) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak zeroext i1 @halide_semaphore_try_acquire(%struct.halide_semaphore_t* %sema, i32 %count) local_unnamed_addr #0 {
entry:
  %0 = load i1 (%struct.halide_semaphore_t*, i32)*, i1 (%struct.halide_semaphore_t*, i32)** @_ZN6Halide7Runtime8Internal28custom_semaphore_try_acquireE, align 8, !tbaa !14
  %call = tail call zeroext i1 %0(%struct.halide_semaphore_t* %sema, i32 %count) #14
  ret i1 %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_get_symbol(i8* %name) #0 {
entry:
  %call = tail call i8* @dlsym(i8* nonnull inttoptr (i64 -2 to i8*), i8* %name) #14
  ret i8* %call
}

declare i8* @dlsym(i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_load_library(i8* %name) #0 {
entry:
  %call = tail call i8* @dlopen(i8* %name, i32 5) #14
  ret i8* %call
}

declare i8* @dlopen(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak i8* @halide_default_get_library_symbol(i8* %lib, i8* %name) #0 {
entry:
  %cmp = icmp eq i8* %lib, null
  %spec.select = select i1 %cmp, i8* inttoptr (i64 -2 to i8*), i8* %lib
  %call = tail call i8* @dlsym(i8* %spec.select, i8* %name) #14
  ret i8* %call
}

; Function Attrs: nounwind willreturn mustprogress
define weak i8* (i8*)* @halide_set_custom_get_symbol(i8* (i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i8* (i8*)*, i8* (i8*)** @_ZN6Halide7Runtime8Internal17custom_get_symbolE, align 8, !tbaa !14
  store i8* (i8*)* %f, i8* (i8*)** @_ZN6Halide7Runtime8Internal17custom_get_symbolE, align 8, !tbaa !14
  ret i8* (i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i8* (i8*)* @halide_set_custom_load_library(i8* (i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i8* (i8*)*, i8* (i8*)** @_ZN6Halide7Runtime8Internal19custom_load_libraryE, align 8, !tbaa !14
  store i8* (i8*)* %f, i8* (i8*)** @_ZN6Halide7Runtime8Internal19custom_load_libraryE, align 8, !tbaa !14
  ret i8* (i8*)* %0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i8* (i8*, i8*)* @halide_set_custom_get_library_symbol(i8* (i8*, i8*)* %f) local_unnamed_addr #2 {
entry:
  %0 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** @_ZN6Halide7Runtime8Internal25custom_get_library_symbolE, align 8, !tbaa !14
  store i8* (i8*, i8*)* %f, i8* (i8*, i8*)** @_ZN6Halide7Runtime8Internal25custom_get_library_symbolE, align 8, !tbaa !14
  ret i8* (i8*, i8*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_get_symbol(i8* %name) local_unnamed_addr #0 {
entry:
  %0 = load i8* (i8*)*, i8* (i8*)** @_ZN6Halide7Runtime8Internal17custom_get_symbolE, align 8, !tbaa !14
  %call = tail call i8* %0(i8* %name) #14
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_load_library(i8* %name) local_unnamed_addr #0 {
entry:
  %0 = load i8* (i8*)*, i8* (i8*)** @_ZN6Halide7Runtime8Internal19custom_load_libraryE, align 8, !tbaa !14
  %call = tail call i8* %0(i8* %name) #14
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_get_library_symbol(i8* %lib, i8* %name) local_unnamed_addr #0 {
entry:
  %0 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** @_ZN6Halide7Runtime8Internal25custom_get_library_symbolE, align 8, !tbaa !14
  %call = tail call i8* %0(i8* %lib, i8* %name) #14
  ret i8* %call
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_set_gpu_device(i32 %d) local_unnamed_addr #2 {
entry:
  store i32 %d, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !tbaa !41
  store i8 1, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !tbaa !19
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_get_gpu_device(i8* %user_context) local_unnamed_addr #4 {
entry:
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i, %entry
  %0 = atomicrmw volatile xchg i8* @_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE, i8 1 acquire
  %tobool.not.i = icmp eq i8 %0, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit, label %while.cond.i, !llvm.loop !137

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit: ; preds = %while.cond.i
  %1 = load i8, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !tbaa !19, !range !21
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.then, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge: ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %.pre = load i32, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !tbaa !41
  br label %if.end4

if.then:                                          ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0)) #14
  %tobool1.not = icmp eq i8* %call, null
  br i1 %tobool1.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %call3 = tail call i32 @atoi(i8* nonnull %call) #14
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %storemerge = phi i32 [ %call3, %if.then2 ], [ -1, %if.then ]
  store i32 %storemerge, i32* @_ZN6Halide7Runtime8Internal17halide_gpu_deviceE, align 4, !tbaa !41
  store i8 1, i8* @_ZN6Halide7Runtime8Internal29halide_gpu_device_initializedE, align 1, !tbaa !19
  br label %if.end4

if.end4:                                          ; preds = %if.end, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge
  %2 = phi i32 [ %.pre, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit.if.end4_crit_edge ], [ %storemerge, %if.end ]
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_gpu_device_lockE release, align 1
  ret i32 %2
}

; Function Attrs: nounwind
define weak i32 @halide_default_trace(i8* %user_context, %struct.halide_trace_event_t* %e) #4 {
entry:
  %0 = atomicrmw add i32* @_ZZ20halide_default_traceE3ids, i32 1 seq_cst
  %call = tail call i32 @halide_get_trace_file(i8* %user_context) #15
  %cmp = icmp sgt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %type = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4
  %lanes = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 2
  %1 = load i16, i16* %lanes, align 2, !tbaa !138
  %conv = zext i16 %1 to i32
  %bits.i = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 1
  %2 = load i8, i8* %bits.i, align 1, !tbaa !144
  %conv.i = zext i8 %2 to i32
  %add.i = add nuw nsw i32 %conv.i, 7
  %div.i = lshr i32 %add.i, 3
  %mul = mul nuw nsw i32 %div.i, %conv
  %dimensions = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 8
  %3 = load i32, i32* %dimensions, align 8, !tbaa !145
  %mul3 = shl i32 %3, 2
  %func = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 0
  %4 = load i8*, i8** %func, align 8, !tbaa !146
  %call4 = tail call i64 @strlen(i8* %4) #14
  %5 = trunc i64 %call4 to i32
  %conv5 = add i32 %5, 1
  %trace_tag = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 3
  %6 = load i8*, i8** %trace_tag, align 8, !tbaa !147
  %tobool.not = icmp eq i8* %6, null
  br i1 %tobool.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.then
  %call7 = tail call i64 @strlen(i8* nonnull %6) #14
  %7 = trunc i64 %call7 to i32
  %phi.cast = add i32 %7, 1
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.then
  %cond = phi i32 [ %phi.cast, %cond.true ], [ 1, %if.then ]
  %add11 = add i32 %mul3, 31
  %add12 = add i32 %add11, %mul
  %add13 = add i32 %add12, %conv5
  %add14 = add i32 %add13, %cond
  %and = and i32 %add14, -4
  %8 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !14
  %lock.i.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 0, i32 0
  %cmp.i.i = icmp ult i32 %and, 1048577
  %cursor.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 1
  %overage.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 2
  %arraydecay.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 3, i64 0
  br i1 %cmp.i.i, label %while.body.i.i.us.i.preheader, label %while.body.i.i.i.preheader

while.body.i.i.i.preheader:                       ; preds = %cond.end
  %9 = bitcast i32* %cursor.i.i to <2 x i32>*
  br label %while.body.i.i.i

while.body.i.i.us.i.preheader:                    ; preds = %cond.end
  %10 = bitcast i32* %cursor.i.i to <2 x i32>*
  br label %while.body.i.i.us.i

while.body.i.i.us.i:                              ; preds = %while.body.i.i.us.i.backedge, %while.body.i.i.us.i.preheader
  %11 = load volatile i32, i32* %lock.i.i.i, align 4, !tbaa !148
  %and.i.i.us.i = and i32 %11, 1073741823
  %add.i.i.us.i = add nuw nsw i32 %and.i.i.us.i, 1
  %12 = cmpxchg i32* %lock.i.i.i, i32 %and.i.i.us.i, i32 %add.i.i.us.i seq_cst seq_cst
  %13 = extractvalue { i32, i1 } %12, 1
  br i1 %13, label %do.end.i.us.i, label %while.body.i.i.us.i.backedge

do.end.i.us.i:                                    ; preds = %while.body.i.i.us.i
  %14 = atomicrmw add i32* %cursor.i.i, i32 %and seq_cst
  %add.i.us.i = add i32 %14, %and
  %cmp2.i.us.i = icmp ugt i32 %add.i.us.i, 1048576
  br i1 %cmp2.i.us.i, label %while.body.us.i, label %_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit

while.body.us.i:                                  ; preds = %do.end.i.us.i
  %15 = atomicrmw add i32* %overage.i.i, i32 %and seq_cst
  %16 = atomicrmw sub i32* %lock.i.i.i, i32 1 seq_cst
  br label %while.body.i.i5.us.i

while.body.i.i5.us.i:                             ; preds = %while.body.i.i5.us.i, %while.body.us.i
  %17 = atomicrmw or i32* %lock.i.i.i, i32 1073741824 seq_cst
  %18 = cmpxchg i32* %lock.i.i.i, i32 1073741824, i32 -2147483648 seq_cst seq_cst
  %19 = extractvalue { i32, i1 } %18, 1
  br i1 %19, label %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.us.i, label %while.body.i.i5.us.i

_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.us.i: ; preds = %while.body.i.i5.us.i
  %20 = load i32, i32* %cursor.i.i, align 4, !tbaa !150
  %tobool.not.i.us.i = icmp eq i32 %20, 0
  br i1 %tobool.not.i.us.i, label %do.end.critedge.i.us.i, label %if.then.i9.us.i

if.then.i9.us.i:                                  ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.us.i
  %21 = load i32, i32* %overage.i.i, align 4, !tbaa !152
  %sub.i.us.i = sub i32 %20, %21
  store i32 %sub.i.us.i, i32* %cursor.i.i, align 4, !tbaa !150
  %conv.i.us.i = zext i32 %sub.i.us.i to i64
  %call.i.us.i = tail call i64 @write(i32 %call, i8* nonnull %arraydecay.i.i, i64 %conv.i.us.i) #14
  %conv5.i.us.i = trunc i64 %call.i.us.i to i32
  %cmp.i8.us.i = icmp eq i32 %sub.i.us.i, %conv5.i.us.i
  store <2 x i32> zeroinitializer, <2 x i32>* %10, align 4, !tbaa !41
  %22 = atomicrmw and i32* %lock.i.i.i, i32 2147483647 seq_cst
  br i1 %cmp.i8.us.i, label %while.body.i.i.us.i.backedge, label %if.then10.i.us.i

if.then10.i.us.i:                                 ; preds = %if.then.i9.us.i
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([144 x i8], [144 x i8]* @.str.32, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %while.body.i.i.us.i.backedge

do.end.critedge.i.us.i:                           ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.us.i
  %23 = atomicrmw and i32* %lock.i.i.i, i32 2147483647 seq_cst
  br label %while.body.i.i.us.i.backedge

while.body.i.i.us.i.backedge:                     ; preds = %do.end.critedge.i.us.i, %if.then10.i.us.i, %if.then.i9.us.i, %while.body.i.i.us.i
  br label %while.body.i.i.us.i, !llvm.loop !153

while.body.i.i.i:                                 ; preds = %while.body.i.i.i.backedge, %while.body.i.i.i.preheader
  %24 = load volatile i32, i32* %lock.i.i.i, align 4, !tbaa !148
  %and.i.i.i = and i32 %24, 1073741823
  %add.i.i.i = add nuw nsw i32 %and.i.i.i, 1
  %25 = cmpxchg i32* %lock.i.i.i, i32 %and.i.i.i, i32 %add.i.i.i seq_cst seq_cst
  %26 = extractvalue { i32, i1 } %25, 1
  br i1 %26, label %if.then.i.i, label %while.body.i.i.i.backedge

if.then.i.i:                                      ; preds = %while.body.i.i.i
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.31, i64 0, i64 0)) #14
  tail call void @abort() #14
  %27 = atomicrmw add i32* %cursor.i.i, i32 %and seq_cst
  %add.i.i400 = add i32 %27, %and
  %cmp2.i.i = icmp ugt i32 %add.i.i400, 1048576
  br i1 %cmp2.i.i, label %while.body.i, label %_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit

while.body.i:                                     ; preds = %if.then.i.i
  %28 = atomicrmw add i32* %overage.i.i, i32 %and seq_cst
  %29 = atomicrmw sub i32* %lock.i.i.i, i32 1 seq_cst
  br label %while.body.i.i5.i

while.body.i.i5.i:                                ; preds = %while.body.i.i5.i, %while.body.i
  %30 = atomicrmw or i32* %lock.i.i.i, i32 1073741824 seq_cst
  %31 = cmpxchg i32* %lock.i.i.i, i32 1073741824, i32 -2147483648 seq_cst seq_cst
  %32 = extractvalue { i32, i1 } %31, 1
  br i1 %32, label %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.i, label %while.body.i.i5.i

_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.i: ; preds = %while.body.i.i5.i
  %33 = load i32, i32* %cursor.i.i, align 4, !tbaa !150
  %tobool.not.i.i = icmp eq i32 %33, 0
  br i1 %tobool.not.i.i, label %do.end.critedge.i.i, label %if.then.i9.i

if.then.i9.i:                                     ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.i
  %34 = load i32, i32* %overage.i.i, align 4, !tbaa !152
  %sub.i.i = sub i32 %33, %34
  store i32 %sub.i.i, i32* %cursor.i.i, align 4, !tbaa !150
  %conv.i.i = zext i32 %sub.i.i to i64
  %call.i.i401 = tail call i64 @write(i32 %call, i8* nonnull %arraydecay.i.i, i64 %conv.i.i) #14
  %conv5.i.i = trunc i64 %call.i.i401 to i32
  %cmp.i8.i = icmp eq i32 %sub.i.i, %conv5.i.i
  store <2 x i32> zeroinitializer, <2 x i32>* %9, align 4, !tbaa !41
  %35 = atomicrmw and i32* %lock.i.i.i, i32 2147483647 seq_cst
  br i1 %cmp.i8.i, label %while.body.i.i.i.backedge, label %if.then10.i.i

if.then10.i.i:                                    ; preds = %if.then.i9.i
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([144 x i8], [144 x i8]* @.str.32, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %while.body.i.i.i.backedge

do.end.critedge.i.i:                              ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i.i
  %36 = atomicrmw and i32* %lock.i.i.i, i32 2147483647 seq_cst
  br label %while.body.i.i.i.backedge

while.body.i.i.i.backedge:                        ; preds = %do.end.critedge.i.i, %if.then10.i.i, %if.then.i9.i, %while.body.i.i.i
  br label %while.body.i.i.i, !llvm.loop !153

_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit: ; preds = %if.then.i.i, %do.end.i.us.i
  %.lcssa.i = phi i32 [ %14, %do.end.i.us.i ], [ %27, %if.then.i.i ]
  %idx.ext.i.i = zext i32 %.lcssa.i to i64
  %add.ptr.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %8, i64 0, i32 3, i64 %idx.ext.i.i
  %cmp16 = icmp ugt i32 %and, 4096
  br i1 %cmp16, label %if.then17, label %if.end

if.then17:                                        ; preds = %_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i404 = icmp eq i8* %call.i, null
  br i1 %tobool.not.i404, label %if.then.i415, label %if.else.i421

if.then.i415:                                     ; preds = %if.then17
  %conv.i4071 = zext i32 %and to i64
  %call.i4082 = tail call i8* @halide_uint64_to_string(i8* null, i8* null, i64 %conv.i4071, i32 1) #14
  %call.i41117 = tail call i8* @halide_string_to_string(i8* %call.i4082, i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #14
  tail call void @halide_error(i8* null, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EED2Ev.exit

if.else.i421:                                     ; preds = %if.then17
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %conv.i4073 = zext i32 %and to i64
  %call.i4084 = tail call i8* @halide_uint64_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i64 %conv.i4073, i32 1) #14
  %call.i411 = tail call i8* @halide_string_to_string(i8* %call.i4084, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #14
  %sub.ptr.lhs.cast.i.i416 = ptrtoint i8* %call.i411 to i64
  %sub.ptr.rhs.cast.i.i417 = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i418 = sub i64 1, %sub.ptr.rhs.cast.i.i417
  %add.i.i419 = add i64 %sub.ptr.sub.i.i418, %sub.ptr.lhs.cast.i.i416
  %call.i.i420 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* null, i8* nonnull %call.i, i64 %add.i.i419) #14
  tail call void @halide_print(i8* null, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EED2Ev.exit: ; preds = %if.else.i421, %if.then.i415
  tail call void @free(i8* %call.i) #14
  br label %if.end

if.end:                                           ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE0ELy1024EED2Ev.exit, %_ZN6Halide7Runtime8Internal11TraceBuffer14acquire_packetEPvij.exit
  %size = bitcast i8* %add.ptr.i.i to i32*
  store i32 %and, i32* %size, align 4, !tbaa !154
  %id = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 4
  %37 = bitcast i8* %id to i32*
  store i32 %0, i32* %37, align 4, !tbaa !156
  %38 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 8
  %39 = bitcast %struct.halide_type_t* %type to i32*
  %40 = bitcast i8* %38 to i32*
  %41 = load i32, i32* %39, align 8
  store i32 %41, i32* %40, align 4
  %event = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 5
  %event22 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 12
  %42 = bitcast i32* %event to <4 x i32>*
  %43 = load <4 x i32>, <4 x i32>* %42, align 4, !tbaa !18
  %dimensions26 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 24
  %44 = bitcast i8* %dimensions26 to i32*
  %45 = bitcast i8* %event22 to <4 x i32>*
  store <4 x i32> %43, <4 x i32>* %45, align 4, !tbaa !18
  %coordinates = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 2
  %46 = load i32*, i32** %coordinates, align 8, !tbaa !157
  %tobool27.not = icmp eq i32* %46, null
  br i1 %tobool27.not, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end
  %47 = bitcast i32* %46 to i8*
  %48 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 28
  %conv31 = zext i32 %mul3 to i64
  %call32 = tail call i8* @memcpy(i8* nonnull %48, i8* nonnull %47, i64 %conv31) #14
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end
  %value = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 1
  %49 = load i8*, i8** %value, align 8, !tbaa !158
  %tobool34.not = icmp eq i8* %49, null
  br i1 %tobool34.not, label %if.end40, label %if.then35

if.then35:                                        ; preds = %if.end33
  %50 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 28
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %44, align 4, !tbaa !159
  %idx.ext.i = sext i32 %52 to i64
  %add.ptr.i424 = getelementptr inbounds i32, i32* %51, i64 %idx.ext.i
  %53 = bitcast i32* %add.ptr.i424 to i8*
  %conv38 = zext i32 %mul to i64
  %call39 = tail call i8* @memcpy(i8* nonnull %53, i8* nonnull %49, i64 %conv38) #14
  br label %if.end40

if.end40:                                         ; preds = %if.end33, %if.then35
  %54 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 28
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %44, align 4, !tbaa !159
  %idx.ext.i.i425 = sext i32 %56 to i64
  %add.ptr.i.i426 = getelementptr inbounds i32, i32* %55, i64 %idx.ext.i.i425
  %57 = bitcast i32* %add.ptr.i.i426 to i8*
  %lanes.i = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 10
  %58 = bitcast i8* %lanes.i to i16*
  %59 = load i16, i16* %58, align 2, !tbaa !160
  %conv.i427 = zext i16 %59 to i32
  %60 = getelementptr inbounds i8, i8* %add.ptr.i.i, i64 9
  %61 = load i8, i8* %60, align 1, !tbaa !144
  %conv.i.i428 = zext i8 %61 to i32
  %add.i.i429 = add nuw nsw i32 %conv.i.i428, 7
  %div.i.i = lshr i32 %add.i.i429, 3
  %mul.i = mul nuw nsw i32 %div.i.i, %conv.i427
  %idx.ext.i430 = zext i32 %mul.i to i64
  %add.ptr.i431 = getelementptr inbounds i8, i8* %57, i64 %idx.ext.i430
  %62 = load i8*, i8** %func, align 8, !tbaa !146
  %conv43 = zext i32 %conv5 to i64
  %call44 = tail call i8* @memcpy(i8* nonnull %add.ptr.i431, i8* %62, i64 %conv43) #14
  %63 = load i32, i32* %44, align 4, !tbaa !159
  %idx.ext.i.i.i = sext i32 %63 to i64
  %add.ptr.i.i.i = getelementptr inbounds i32, i32* %55, i64 %idx.ext.i.i.i
  %64 = bitcast i32* %add.ptr.i.i.i to i8*
  %65 = load i16, i16* %58, align 2, !tbaa !160
  %conv.i.i432 = zext i16 %65 to i32
  %66 = load i8, i8* %60, align 1, !tbaa !144
  %conv.i.i.i = zext i8 %66 to i32
  %add.i.i.i433 = add nuw nsw i32 %conv.i.i.i, 7
  %div.i.i.i = lshr i32 %add.i.i.i433, 3
  %mul.i.i = mul nuw nsw i32 %div.i.i.i, %conv.i.i432
  %idx.ext.i.i434 = zext i32 %mul.i.i to i64
  %add.ptr.i.i435 = getelementptr inbounds i8, i8* %64, i64 %idx.ext.i.i434
  br label %while.cond.i437

while.cond.i437:                                  ; preds = %while.cond.i437, %if.end40
  %f.0.i = phi i8* [ %add.ptr.i.i435, %if.end40 ], [ %incdec.ptr.i, %while.cond.i437 ]
  %incdec.ptr.i = getelementptr inbounds i8, i8* %f.0.i, i64 1
  %67 = load i8, i8* %f.0.i, align 1, !tbaa !18
  %tobool.not.i436 = icmp eq i8 %67, 0
  br i1 %tobool.not.i436, label %_ZN21halide_trace_packet_t9trace_tagEv.exit, label %while.cond.i437, !llvm.loop !161

_ZN21halide_trace_packet_t9trace_tagEv.exit:      ; preds = %while.cond.i437
  %68 = load i8*, i8** %trace_tag, align 8, !tbaa !147
  %tobool47.not = icmp eq i8* %68, null
  %spec.select = select i1 %tobool47.not, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.10, i64 0, i64 0), i8* %68
  %conv53 = zext i32 %cond to i64
  %call54 = tail call i8* @memcpy(i8* nonnull %incdec.ptr.i, i8* %spec.select, i64 %conv53) #14
  %69 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !14
  fence seq_cst
  %lock.i.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %69, i64 0, i32 0, i32 0
  %70 = atomicrmw sub i32* %lock.i.i, i32 1 seq_cst
  %71 = load i32, i32* %event, align 4, !tbaa !162
  %cmp56 = icmp eq i32 %71, 9
  br i1 %cmp56, label %if.then57, label %if.end277

if.then57:                                        ; preds = %_ZN21halide_trace_packet_t9trace_tagEv.exit
  %72 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !14
  %lock.i.i438 = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %72, i64 0, i32 0, i32 0
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i, %if.then57
  %73 = atomicrmw or i32* %lock.i.i438, i32 1073741824 seq_cst
  %74 = cmpxchg i32* %lock.i.i438, i32 1073741824, i32 -2147483648 seq_cst seq_cst
  %75 = extractvalue { i32, i1 } %74, 1
  br i1 %75, label %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i, label %while.body.i.i

_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i: ; preds = %while.body.i.i
  %cursor.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %72, i64 0, i32 1
  %76 = load i32, i32* %cursor.i, align 4, !tbaa !150
  %tobool.not.i439 = icmp eq i32 %76, 0
  br i1 %tobool.not.i439, label %do.end.critedge.i, label %if.then.i442

if.then.i442:                                     ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i
  %overage.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %72, i64 0, i32 2
  %77 = load i32, i32* %overage.i, align 4, !tbaa !152
  %sub.i = sub i32 %76, %77
  store i32 %sub.i, i32* %cursor.i, align 4, !tbaa !150
  %arraydecay.i = getelementptr inbounds %"class.Halide::Runtime::Internal::TraceBuffer", %"class.Halide::Runtime::Internal::TraceBuffer"* %72, i64 0, i32 3, i64 0
  %conv.i440 = zext i32 %sub.i to i64
  %call.i441 = tail call i64 @write(i32 %call, i8* nonnull %arraydecay.i, i64 %conv.i440) #14
  %conv5.i = trunc i64 %call.i441 to i32
  %cmp.i = icmp eq i32 %sub.i, %conv5.i
  %78 = bitcast i32* %cursor.i to <2 x i32>*
  store <2 x i32> zeroinitializer, <2 x i32>* %78, align 4, !tbaa !41
  %79 = atomicrmw and i32* %lock.i.i438, i32 2147483647 seq_cst
  br i1 %cmp.i, label %if.end277, label %if.then10.i

if.then10.i:                                      ; preds = %if.then.i442
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([144 x i8], [144 x i8]* @.str.32, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %if.end277

do.end.critedge.i:                                ; preds = %_ZN6Halide7Runtime8Internal23SharedExclusiveSpinLock17acquire_exclusiveEv.exit.i
  %80 = atomicrmw and i32* %lock.i.i438, i32 2147483647 seq_cst
  br label %if.end277

if.else:                                          ; preds = %entry
  %call.i445 = tail call i8* @malloc(i64 4096) #14
  %tobool.not.i448 = icmp eq i8* %call.i445, null
  br i1 %tobool.not.i448, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit, label %if.then6.i451

if.then6.i451:                                    ; preds = %if.else
  %add.ptr.i449 = getelementptr inbounds i8, i8* %call.i445, i64 4095
  store i8 0, i8* %add.ptr.i449, align 1, !tbaa !18
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit: ; preds = %if.then6.i451, %if.else
  %ss.sroa.74.0 = phi i8* [ %add.ptr.i449, %if.then6.i451 ], [ null, %if.else ]
  %bits = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 1
  %81 = load i8, i8* %bits, align 1, !tbaa !163
  %conv60 = zext i8 %81 to i32
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit
  %print_bits.0 = phi i32 [ 8, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EEC2EPvPc.exit ], [ %shl, %while.cond ]
  %cmp61 = icmp slt i32 %print_bits.0, %conv60
  %shl = shl i32 %print_bits.0, 1
  br i1 %cmp61, label %while.cond, label %do.body, !llvm.loop !164

do.body:                                          ; preds = %while.cond
  %cmp62 = icmp slt i32 %print_bits.0, 65
  br i1 %cmp62, label %do.end, label %if.then63

if.then63:                                        ; preds = %do.body
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @.str.2.11, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.end

do.end:                                           ; preds = %if.then63, %do.body
  %event65 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 5
  %82 = load i32, i32* %event65, align 4, !tbaa !162
  %cmp66 = icmp slt i32 %82, 2
  %idxprom = zext i32 %82 to i64
  %arrayidx = getelementptr inbounds [11 x i8*], [11 x i8*]* @__const.halide_default_trace.event_types, i64 0, i64 %idxprom
  %83 = load i8*, i8** %arrayidx, align 8, !tbaa !14
  %call.i456 = tail call i8* @halide_string_to_string(i8* %call.i445, i8* %ss.sroa.74.0, i8* %83) #14
  %call.i459 = tail call i8* @halide_string_to_string(i8* %call.i456, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #14
  %func70 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 0
  %84 = load i8*, i8** %func70, align 8, !tbaa !146
  %call.i462 = tail call i8* @halide_string_to_string(i8* %call.i459, i8* %ss.sroa.74.0, i8* %84) #14
  %call.i465 = tail call i8* @halide_string_to_string(i8* %call.i462, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #14
  %value_index73 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 7
  %85 = load i32, i32* %value_index73, align 4, !tbaa !165
  %conv.i468 = sext i32 %85 to i64
  %call.i469 = tail call i8* @halide_int64_to_string(i8* %call.i465, i8* %ss.sroa.74.0, i64 %conv.i468, i32 1) #14
  %call.i472 = tail call i8* @halide_string_to_string(i8* %call.i469, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22.179, i64 0, i64 0)) #14
  %lanes77 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 2
  %86 = load i16, i16* %lanes77, align 2, !tbaa !138
  %cmp79 = icmp ugt i16 %86, 1
  br i1 %cmp79, label %if.then80, label %if.end82

if.then80:                                        ; preds = %do.end
  %call.i475 = tail call i8* @halide_string_to_string(i8* %call.i472, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #14
  br label %if.end82

if.end82:                                         ; preds = %if.then80, %do.end
  %ss.sroa.7.0 = phi i8* [ %call.i475, %if.then80 ], [ %call.i472, %do.end ]
  %dimensions83 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 8
  %87 = load i32, i32* %dimensions83, align 8, !tbaa !145
  %cmp84660 = icmp sgt i32 %87, 0
  br i1 %cmp84660, label %if.end100.peel, label %for.cond.cleanup

if.end100.peel:                                   ; preds = %if.end82
  %coordinates101 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 2
  %.pre = load i32*, i32** %coordinates101, align 8, !tbaa !157
  %.pre673 = load i32, i32* %.pre, align 4, !tbaa !41
  %conv.i484.peel = sext i32 %.pre673 to i64
  %call.i485.peel = tail call i8* @halide_int64_to_string(i8* %ss.sroa.7.0, i8* %ss.sroa.74.0, i64 %conv.i484.peel, i32 1) #14
  %88 = load i32, i32* %dimensions83, align 8, !tbaa !145
  %cmp84.peel = icmp sgt i32 %88, 1
  br i1 %cmp84.peel, label %if.then86, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %if.end100, %if.end100.peel, %if.end82
  %ss.sroa.7.1.lcssa = phi i8* [ %ss.sroa.7.0, %if.end82 ], [ %call.i485.peel, %if.end100.peel ], [ %call.i485, %if.end100 ]
  %89 = load i16, i16* %lanes77, align 2, !tbaa !138
  %cmp108 = icmp ugt i16 %89, 1
  %.sink684 = select i1 %cmp108, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)
  %call.i491 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.1.lcssa, i8* %ss.sroa.74.0, i8* %.sink684) #14
  br i1 %cmp66, label %if.then115, label %if.end263

if.then86:                                        ; preds = %if.end100.peel, %if.end100
  %indvars.iv670 = phi i64 [ %indvars.iv.next671, %if.end100 ], [ 1, %if.end100.peel ]
  %ss.sroa.7.1661 = phi i8* [ %call.i485, %if.end100 ], [ %call.i485.peel, %if.end100.peel ]
  %90 = load i16, i16* %lanes77, align 2, !tbaa !138
  %cmp90 = icmp ugt i16 %90, 1
  br i1 %cmp90, label %land.lhs.true, label %if.else97.split

land.lhs.true:                                    ; preds = %if.then86
  %conv89 = zext i16 %90 to i32
  %91 = trunc i64 %indvars.iv670 to i32
  %rem = urem i32 %91, %conv89
  %cmp94 = icmp eq i32 %rem, 0
  br i1 %cmp94, label %if.end100, label %if.else97.split

if.else97.split:                                  ; preds = %if.then86, %land.lhs.true
  br label %if.end100

if.end100:                                        ; preds = %land.lhs.true, %if.else97.split
  %.sink = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0), %if.else97.split ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), %land.lhs.true ]
  %call.i4786 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.1661, i8* %ss.sroa.74.0, i8* %.sink) #14
  %92 = load i32*, i32** %coordinates101, align 8, !tbaa !157
  %arrayidx103 = getelementptr inbounds i32, i32* %92, i64 %indvars.iv670
  %93 = load i32, i32* %arrayidx103, align 4, !tbaa !41
  %conv.i484 = sext i32 %93 to i64
  %call.i485 = tail call i8* @halide_int64_to_string(i8* %call.i4786, i8* %ss.sroa.74.0, i64 %conv.i484, i32 1) #14
  %indvars.iv.next671 = add nuw nsw i64 %indvars.iv670, 1
  %94 = load i32, i32* %dimensions83, align 8, !tbaa !145
  %95 = sext i32 %94 to i64
  %cmp84 = icmp slt i64 %indvars.iv.next671, %95
  br i1 %cmp84, label %if.then86, label %for.cond.cleanup, !llvm.loop !166

if.then115:                                       ; preds = %for.cond.cleanup
  %96 = load i16, i16* %lanes77, align 2, !tbaa !138
  %cmp119 = icmp ugt i16 %96, 1
  %.sink685 = select i1 %cmp119, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0)
  %call.i497 = tail call i8* @halide_string_to_string(i8* %call.i491, i8* %ss.sroa.74.0, i8* %.sink685) #14
  %97 = load i16, i16* %lanes77, align 2, !tbaa !138
  %cmp130655.not = icmp eq i16 %97, 0
  br i1 %cmp130655.not, label %if.end263, label %if.end136.peel

if.end136.peel:                                   ; preds = %if.then115
  %code = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 4, i32 0
  %value245 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 1
  %98 = bitcast i8** %value245 to i8***
  %cmp214 = icmp sgt i32 %print_bits.0, 15
  %99 = bitcast i8** %value245 to i16**
  %100 = bitcast i8** %value245 to float**
  %101 = bitcast i8** %value245 to double**
  %102 = bitcast i8** %value245 to i32**
  %103 = bitcast i8** %value245 to i64**
  %.pre674 = load i8, i8* %code, align 8, !tbaa !168
  switch i8 %.pre674, label %for.inc253.peel [
    i8 0, label %if.then140.peel
    i8 1, label %if.then176.peel
    i8 2, label %do.body213.peel
    i8 3, label %if.then244.peel
  ]

if.then244.peel:                                  ; preds = %if.end136.peel
  %104 = load i8**, i8*** %98, align 8, !tbaa !158
  %105 = load i8*, i8** %104, align 8, !tbaa !14
  %call.i543.peel = tail call i8* @halide_pointer_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i8* %105) #14
  br label %for.inc253.peel

do.body213.peel:                                  ; preds = %if.end136.peel
  br i1 %cmp214, label %do.end218.peel, label %if.then215.peel

if.then215.peel:                                  ; preds = %do.body213.peel
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([142 x i8], [142 x i8]* @.str.24, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.end218.peel

do.end218.peel:                                   ; preds = %if.then215.peel, %do.body213.peel
  switch i32 %print_bits.0, label %if.else232.peel [
    i32 32, label %if.then220.peel
    i32 16, label %if.then227.peel
  ]

if.then227.peel:                                  ; preds = %do.end218.peel
  %106 = load i16*, i16** %99, align 8, !tbaa !158
  %107 = load i16, i16* %106, align 2, !tbaa !169
  %call.i535.peel = tail call double @halide_float16_bits_to_double(i16 zeroext %107) #14
  %call2.i.peel = tail call i8* @halide_double_to_string(i8* %call.i497, i8* %ss.sroa.74.0, double %call.i535.peel, i32 1) #14
  br label %for.inc253.peel

if.then220.peel:                                  ; preds = %do.end218.peel
  %108 = load float*, float** %100, align 8, !tbaa !158
  %109 = load float, float* %108, align 4, !tbaa !170
  %conv.i533.peel = fpext float %109 to double
  %call.i534.peel = tail call i8* @halide_double_to_string(i8* %call.i497, i8* %ss.sroa.74.0, double %conv.i533.peel, i32 0) #14
  br label %for.inc253.peel

if.else232.peel:                                  ; preds = %do.end218.peel
  %110 = load double*, double** %101, align 8, !tbaa !158
  %111 = load double, double* %110, align 8, !tbaa !172
  %call.i540.peel = tail call i8* @halide_double_to_string(i8* %call.i497, i8* %ss.sroa.74.0, double %111, i32 1) #14
  br label %for.inc253.peel

if.then176.peel:                                  ; preds = %if.end136.peel
  switch i32 %print_bits.0, label %if.else199.peel [
    i32 8, label %if.then178.peel
    i32 16, label %if.then186.peel
    i32 32, label %if.then194.peel
  ]

if.then194.peel:                                  ; preds = %if.then176.peel
  %112 = load i32*, i32** %102, align 8, !tbaa !158
  %113 = load i32, i32* %112, align 4, !tbaa !41
  %conv.i526.peel = zext i32 %113 to i64
  %call.i527.peel = tail call i8* @halide_uint64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i526.peel, i32 1) #14
  br label %for.inc253.peel

if.then186.peel:                                  ; preds = %if.then176.peel
  %114 = load i16*, i16** %99, align 8, !tbaa !158
  %115 = load i16, i16* %114, align 2, !tbaa !169
  %conv.i522.peel = zext i16 %115 to i64
  %call.i523.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i522.peel, i32 1) #14
  br label %for.inc253.peel

if.then178.peel:                                  ; preds = %if.then176.peel
  %116 = load i8*, i8** %value245, align 8, !tbaa !158
  %117 = load i8, i8* %116, align 1, !tbaa !18
  %conv.i518.peel = zext i8 %117 to i64
  %call.i519.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i518.peel, i32 1) #14
  br label %for.inc253.peel

if.else199.peel:                                  ; preds = %if.then176.peel
  %118 = load i64*, i64** %103, align 8, !tbaa !158
  %119 = load i64, i64* %118, align 8, !tbaa !22
  %call.i530.peel = tail call i8* @halide_uint64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %119, i32 1) #14
  br label %for.inc253.peel

if.then140.peel:                                  ; preds = %if.end136.peel
  switch i32 %print_bits.0, label %if.else163.peel [
    i32 8, label %if.then142.peel
    i32 16, label %if.then150.peel
    i32 32, label %if.then158.peel
  ]

if.then158.peel:                                  ; preds = %if.then140.peel
  %120 = load i32*, i32** %102, align 8, !tbaa !158
  %121 = load i32, i32* %120, align 4, !tbaa !41
  %conv.i511.peel = sext i32 %121 to i64
  %call.i512.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i511.peel, i32 1) #14
  br label %for.inc253.peel

if.then150.peel:                                  ; preds = %if.then140.peel
  %122 = load i16*, i16** %99, align 8, !tbaa !158
  %123 = load i16, i16* %122, align 2, !tbaa !169
  %conv.i507.peel = sext i16 %123 to i64
  %call.i508.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i507.peel, i32 1) #14
  br label %for.inc253.peel

if.then142.peel:                                  ; preds = %if.then140.peel
  %124 = load i8*, i8** %value245, align 8, !tbaa !158
  %125 = load i8, i8* %124, align 1, !tbaa !18
  %conv.i503.peel = sext i8 %125 to i64
  %call.i504.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %conv.i503.peel, i32 1) #14
  br label %for.inc253.peel

if.else163.peel:                                  ; preds = %if.then140.peel
  %126 = load i64*, i64** %103, align 8, !tbaa !158
  %127 = load i64, i64* %126, align 8, !tbaa !22
  %call.i515.peel = tail call i8* @halide_int64_to_string(i8* %call.i497, i8* %ss.sroa.74.0, i64 %127, i32 1) #14
  br label %for.inc253.peel

for.inc253.peel:                                  ; preds = %if.else163.peel, %if.then142.peel, %if.then150.peel, %if.then158.peel, %if.else199.peel, %if.then178.peel, %if.then186.peel, %if.then194.peel, %if.else232.peel, %if.then220.peel, %if.then227.peel, %if.then244.peel, %if.end136.peel
  %ss.sroa.7.7.peel = phi i8* [ %call.i497, %if.end136.peel ], [ %call.i543.peel, %if.then244.peel ], [ %call.i540.peel, %if.else232.peel ], [ %call2.i.peel, %if.then227.peel ], [ %call.i534.peel, %if.then220.peel ], [ %call.i530.peel, %if.else199.peel ], [ %call.i527.peel, %if.then194.peel ], [ %call.i523.peel, %if.then186.peel ], [ %call.i519.peel, %if.then178.peel ], [ %call.i515.peel, %if.else163.peel ], [ %call.i512.peel, %if.then158.peel ], [ %call.i508.peel, %if.then150.peel ], [ %call.i504.peel, %if.then142.peel ]
  %128 = load i16, i16* %lanes77, align 2, !tbaa !138
  %cmp130.peel = icmp ugt i16 %128, 1
  br i1 %cmp130.peel, label %if.end136, label %if.end263

for.cond.cleanup131:                              ; preds = %for.inc253
  %cmp259 = icmp ugt i16 %154, 1
  br i1 %cmp259, label %if.then260, label %if.end263

if.end136:                                        ; preds = %for.inc253.peel, %for.inc253
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc253 ], [ 1, %for.inc253.peel ]
  %ss.sroa.7.5656 = phi i8* [ %ss.sroa.7.7, %for.inc253 ], [ %ss.sroa.7.7.peel, %for.inc253.peel ]
  %call.i500 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.5656, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #14
  %129 = load i8, i8* %code, align 8, !tbaa !168
  switch i8 %129, label %for.inc253 [
    i8 0, label %if.then140
    i8 1, label %if.then176
    i8 2, label %do.body213
    i8 3, label %if.then244
  ]

if.then140:                                       ; preds = %if.end136
  switch i32 %print_bits.0, label %if.else163 [
    i32 8, label %if.then142
    i32 16, label %if.then150
    i32 32, label %if.then158
  ]

if.then142:                                       ; preds = %if.then140
  %130 = load i8*, i8** %value245, align 8, !tbaa !158
  %arrayidx145 = getelementptr inbounds i8, i8* %130, i64 %indvars.iv
  %131 = load i8, i8* %arrayidx145, align 1, !tbaa !18
  %conv.i503 = sext i8 %131 to i64
  %call.i504 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i503, i32 1) #14
  br label %for.inc253

if.then150:                                       ; preds = %if.then140
  %132 = load i16*, i16** %99, align 8, !tbaa !158
  %arrayidx153 = getelementptr inbounds i16, i16* %132, i64 %indvars.iv
  %133 = load i16, i16* %arrayidx153, align 2, !tbaa !169
  %conv.i507 = sext i16 %133 to i64
  %call.i508 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i507, i32 1) #14
  br label %for.inc253

if.then158:                                       ; preds = %if.then140
  %134 = load i32*, i32** %102, align 8, !tbaa !158
  %arrayidx161 = getelementptr inbounds i32, i32* %134, i64 %indvars.iv
  %135 = load i32, i32* %arrayidx161, align 4, !tbaa !41
  %conv.i511 = sext i32 %135 to i64
  %call.i512 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i511, i32 1) #14
  br label %for.inc253

if.else163:                                       ; preds = %if.then140
  %136 = load i64*, i64** %103, align 8, !tbaa !158
  %arrayidx166 = getelementptr inbounds i64, i64* %136, i64 %indvars.iv
  %137 = load i64, i64* %arrayidx166, align 8, !tbaa !22
  %call.i515 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %137, i32 1) #14
  br label %for.inc253

if.then176:                                       ; preds = %if.end136
  switch i32 %print_bits.0, label %if.else199 [
    i32 8, label %if.then178
    i32 16, label %if.then186
    i32 32, label %if.then194
  ]

if.then178:                                       ; preds = %if.then176
  %138 = load i8*, i8** %value245, align 8, !tbaa !158
  %arrayidx181 = getelementptr inbounds i8, i8* %138, i64 %indvars.iv
  %139 = load i8, i8* %arrayidx181, align 1, !tbaa !18
  %conv.i518 = zext i8 %139 to i64
  %call.i519 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i518, i32 1) #14
  br label %for.inc253

if.then186:                                       ; preds = %if.then176
  %140 = load i16*, i16** %99, align 8, !tbaa !158
  %arrayidx189 = getelementptr inbounds i16, i16* %140, i64 %indvars.iv
  %141 = load i16, i16* %arrayidx189, align 2, !tbaa !169
  %conv.i522 = zext i16 %141 to i64
  %call.i523 = tail call i8* @halide_int64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i522, i32 1) #14
  br label %for.inc253

if.then194:                                       ; preds = %if.then176
  %142 = load i32*, i32** %102, align 8, !tbaa !158
  %arrayidx197 = getelementptr inbounds i32, i32* %142, i64 %indvars.iv
  %143 = load i32, i32* %arrayidx197, align 4, !tbaa !41
  %conv.i526 = zext i32 %143 to i64
  %call.i527 = tail call i8* @halide_uint64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %conv.i526, i32 1) #14
  br label %for.inc253

if.else199:                                       ; preds = %if.then176
  %144 = load i64*, i64** %103, align 8, !tbaa !158
  %arrayidx202 = getelementptr inbounds i64, i64* %144, i64 %indvars.iv
  %145 = load i64, i64* %arrayidx202, align 8, !tbaa !22
  %call.i530 = tail call i8* @halide_uint64_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i64 %145, i32 1) #14
  br label %for.inc253

do.body213:                                       ; preds = %if.end136
  br i1 %cmp214, label %do.end218, label %if.then215

if.then215:                                       ; preds = %do.body213
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([142 x i8], [142 x i8]* @.str.24, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.end218

do.end218:                                        ; preds = %if.then215, %do.body213
  switch i32 %print_bits.0, label %if.else232 [
    i32 32, label %if.then220
    i32 16, label %if.then227
  ]

if.then220:                                       ; preds = %do.end218
  %146 = load float*, float** %100, align 8, !tbaa !158
  %arrayidx223 = getelementptr inbounds float, float* %146, i64 %indvars.iv
  %147 = load float, float* %arrayidx223, align 4, !tbaa !170
  %conv.i533 = fpext float %147 to double
  %call.i534 = tail call i8* @halide_double_to_string(i8* %call.i500, i8* %ss.sroa.74.0, double %conv.i533, i32 0) #14
  br label %for.inc253

if.then227:                                       ; preds = %do.end218
  %148 = load i16*, i16** %99, align 8, !tbaa !158
  %arrayidx230 = getelementptr inbounds i16, i16* %148, i64 %indvars.iv
  %149 = load i16, i16* %arrayidx230, align 2, !tbaa !169
  %call.i535 = tail call double @halide_float16_bits_to_double(i16 zeroext %149) #14
  %call2.i = tail call i8* @halide_double_to_string(i8* %call.i500, i8* %ss.sroa.74.0, double %call.i535, i32 1) #14
  br label %for.inc253

if.else232:                                       ; preds = %do.end218
  %150 = load double*, double** %101, align 8, !tbaa !158
  %arrayidx235 = getelementptr inbounds double, double* %150, i64 %indvars.iv
  %151 = load double, double* %arrayidx235, align 8, !tbaa !172
  %call.i540 = tail call i8* @halide_double_to_string(i8* %call.i500, i8* %ss.sroa.74.0, double %151, i32 1) #14
  br label %for.inc253

if.then244:                                       ; preds = %if.end136
  %152 = load i8**, i8*** %98, align 8, !tbaa !158
  %arrayidx247 = getelementptr inbounds i8*, i8** %152, i64 %indvars.iv
  %153 = load i8*, i8** %arrayidx247, align 8, !tbaa !14
  %call.i543 = tail call i8* @halide_pointer_to_string(i8* %call.i500, i8* %ss.sroa.74.0, i8* %153) #14
  br label %for.inc253

for.inc253:                                       ; preds = %if.then244, %if.else232, %if.then227, %if.then220, %if.else199, %if.then194, %if.then186, %if.then178, %if.else163, %if.then158, %if.then150, %if.then142, %if.end136
  %ss.sroa.7.7 = phi i8* [ %call.i500, %if.end136 ], [ %call.i543, %if.then244 ], [ %call.i540, %if.else232 ], [ %call2.i, %if.then227 ], [ %call.i534, %if.then220 ], [ %call.i530, %if.else199 ], [ %call.i527, %if.then194 ], [ %call.i523, %if.then186 ], [ %call.i519, %if.then178 ], [ %call.i515, %if.else163 ], [ %call.i512, %if.then158 ], [ %call.i508, %if.then150 ], [ %call.i504, %if.then142 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %154 = load i16, i16* %lanes77, align 2, !tbaa !138
  %155 = zext i16 %154 to i64
  %cmp130 = icmp ult i64 %indvars.iv.next, %155
  br i1 %cmp130, label %if.end136, label %for.cond.cleanup131, !llvm.loop !174

if.then260:                                       ; preds = %for.cond.cleanup131
  %call.i546 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.7, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0)) #14
  br label %if.end263

if.end263:                                        ; preds = %if.then260, %for.cond.cleanup131, %for.inc253.peel, %if.then115, %for.cond.cleanup
  %ss.sroa.7.8 = phi i8* [ %call.i546, %if.then260 ], [ %ss.sroa.7.7, %for.cond.cleanup131 ], [ %call.i491, %for.cond.cleanup ], [ %ss.sroa.7.7.peel, %for.inc253.peel ], [ %call.i497, %if.then115 ]
  %trace_tag264 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %e, i64 0, i32 3
  %156 = load i8*, i8** %trace_tag264, align 8, !tbaa !147
  %tobool265.not = icmp eq i8* %156, null
  br i1 %tobool265.not, label %if.end274, label %land.lhs.true266

land.lhs.true266:                                 ; preds = %if.end263
  %157 = load i8, i8* %156, align 1, !tbaa !18
  %tobool268.not = icmp eq i8 %157, 0
  br i1 %tobool268.not, label %if.end274, label %if.then269

if.then269:                                       ; preds = %land.lhs.true266
  %call.i549 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.8, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0)) #14
  %158 = load i8*, i8** %trace_tag264, align 8, !tbaa !147
  %call.i552 = tail call i8* @halide_string_to_string(i8* %call.i549, i8* %ss.sroa.74.0, i8* %158) #14
  %call.i555 = tail call i8* @halide_string_to_string(i8* %call.i552, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0)) #14
  br label %if.end274

if.end274:                                        ; preds = %if.then269, %land.lhs.true266, %if.end263
  %ss.sroa.7.9 = phi i8* [ %ss.sroa.7.8, %if.end263 ], [ %ss.sroa.7.8, %land.lhs.true266 ], [ %call.i555, %if.then269 ]
  %call.i558 = tail call i8* @halide_string_to_string(i8* %ss.sroa.7.9, i8* %ss.sroa.74.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #14
  br label %while.cond.i560

while.cond.i560:                                  ; preds = %while.cond.i560, %if.end274
  %159 = atomicrmw volatile xchg i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE, i8 1 acquire
  %tobool.not.i559 = icmp eq i8 %159, 0
  br i1 %tobool.not.i559, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit, label %while.cond.i560, !llvm.loop !175

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit: ; preds = %while.cond.i560
  br i1 %tobool.not.i448, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE release, align 1
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %sub.ptr.lhs.cast.i.i563 = ptrtoint i8* %call.i558 to i64
  %sub.ptr.rhs.cast.i.i564 = ptrtoint i8* %call.i445 to i64
  %sub.ptr.sub.i.i565 = sub i64 1, %sub.ptr.rhs.cast.i.i564
  %add.i.i566 = add i64 %sub.ptr.sub.i.i565, %sub.ptr.lhs.cast.i.i563
  %call.i.i567 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i445, i64 %add.i.i566) #14
  tail call void @halide_print(i8* %user_context, i8* nonnull %call.i445) #14
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE release, align 1
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i445, i64 %add.i.i566) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i445) #14
  br label %if.end277

if.end277:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy4096EED2Ev.exit, %do.end.critedge.i, %if.then10.i, %if.then.i442, %_ZN21halide_trace_packet_t9trace_tagEv.exit
  ret i32 %0
}

; Function Attrs: nounwind
define weak i32 @halide_get_trace_file(i8* %user_context) local_unnamed_addr #4 {
entry:
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i, %entry
  %0 = atomicrmw volatile xchg i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE, i8 1 acquire
  %tobool.not.i = icmp eq i8 %0, 0
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit, label %while.cond.i, !llvm.loop !175

_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit: ; preds = %while.cond.i
  %1 = load i32, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !tbaa !41
  %cmp = icmp slt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end11

if.then:                                          ; preds = %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0)) #14
  %tobool.not = icmp eq i8* %call, null
  br i1 %tobool.not, label %if.else, label %if.then1

if.then1:                                         ; preds = %if.then
  %call2 = tail call i8* @fopen(i8* nonnull %call, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0)) #14
  %tobool3.not = icmp eq i8* %call2, null
  br i1 %tobool3.not, label %if.then4, label %do.end

if.then4:                                         ; preds = %if.then1
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @.str.30, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.end

do.end:                                           ; preds = %if.then4, %if.then1
  %call5 = tail call i32 @fileno(i8* %call2) #14
  tail call void @halide_set_trace_file(i32 %call5) #15
  store i8* %call2, i8** @_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE, align 8, !tbaa !14
  %2 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !14
  %tobool6.not = icmp eq %"class.Halide::Runtime::Internal::TraceBuffer"* %2, null
  br i1 %tobool6.not, label %if.then7, label %if.end11

if.then7:                                         ; preds = %do.end
  %call8 = tail call i8* @malloc(i64 1048588) #14
  store i8* %call8, i8** bitcast (%"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE to i8**), align 8, !tbaa !14
  %cursor.i = getelementptr inbounds i8, i8* %call8, i64 4
  %3 = bitcast i8* %cursor.i to <2 x i32>*
  store <2 x i32> zeroinitializer, <2 x i32>* %3, align 4, !tbaa !41
  %lock.i.i = bitcast i8* %call8 to i32*
  store volatile i32 0, i32* %lock.i.i, align 4, !tbaa !148
  br label %if.end11

if.else:                                          ; preds = %if.then
  tail call void @halide_set_trace_file(i32 0) #15
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then7, %do.end, %_ZN6Halide7Runtime8Internal14ScopedSpinLockC2EPVc.exit
  %4 = load i32, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !tbaa !41
  store atomic volatile i8 0, i8* @_ZN6Halide7Runtime8Internal22halide_trace_file_lockE release, align 1
  ret i32 %4
}

declare i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #1

declare i8* @fopen(i8*, i8*) local_unnamed_addr #1

declare i32 @fileno(i8*) local_unnamed_addr #1

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_set_trace_file(i32 %fd) local_unnamed_addr #2 {
entry:
  store i32 %fd, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !tbaa !41
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_trace_cleanup() #0 {
entry:
  %call = tail call i32 @halide_shutdown_trace() #15
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_shutdown_trace() local_unnamed_addr #0 {
entry:
  %0 = load i8*, i8** @_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE, align 8, !tbaa !14
  %tobool.not = icmp eq i8* %0, null
  br i1 %tobool.not, label %return, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 @fclose(i8* nonnull %0) #14
  store i32 0, i32* @_ZN6Halide7Runtime8Internal17halide_trace_fileE, align 4, !tbaa !41
  store i8 0, i8* @_ZN6Halide7Runtime8Internal29halide_trace_file_initializedE, align 1, !tbaa !19
  store i8* null, i8** @_ZN6Halide7Runtime8Internal35halide_trace_file_internally_openedE, align 8, !tbaa !14
  %1 = load %"class.Halide::Runtime::Internal::TraceBuffer"*, %"class.Halide::Runtime::Internal::TraceBuffer"** @_ZN6Halide7Runtime8Internal19halide_trace_bufferE, align 8, !tbaa !14
  %tobool1.not = icmp eq %"class.Halide::Runtime::Internal::TraceBuffer"* %1, null
  br i1 %tobool1.not, label %return, label %if.then2

if.then2:                                         ; preds = %if.then
  %2 = bitcast %"class.Halide::Runtime::Internal::TraceBuffer"* %1 to i8*
  tail call void @free(i8* nonnull %2) #14
  br label %return

return:                                           ; preds = %if.then2, %if.then, %entry
  %retval.0 = phi i32 [ %call, %if.then2 ], [ %call, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

declare i32 @fclose(i8*) local_unnamed_addr #1

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i8*, %struct.halide_trace_event_t*)* @halide_set_custom_trace(i32 (i8*, %struct.halide_trace_event_t*)* %t) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i8*, %struct.halide_trace_event_t*)*, i32 (i8*, %struct.halide_trace_event_t*)** @_ZN6Halide7Runtime8Internal19halide_custom_traceE, align 8, !tbaa !14
  store i32 (i8*, %struct.halide_trace_event_t*)* %t, i32 (i8*, %struct.halide_trace_event_t*)** @_ZN6Halide7Runtime8Internal19halide_custom_traceE, align 8, !tbaa !14
  ret i32 (i8*, %struct.halide_trace_event_t*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_trace(i8* %user_context, %struct.halide_trace_event_t* %e) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i8*, %struct.halide_trace_event_t*)*, i32 (i8*, %struct.halide_trace_event_t*)** @_ZN6Halide7Runtime8Internal19halide_custom_traceE, align 8, !tbaa !14
  %call = tail call i32 %0(i8* %user_context, %struct.halide_trace_event_t* %e) #14
  ret i32 %call
}

; Function Attrs: nounwind
define weak i32 @halide_trace_helper(i8* %user_context, i8* %func, i8* %value, i32* %coords, i32 %type_code, i32 %type_bits, i32 %type_lanes, i32 %code, i32 %parent_id, i32 %value_index, i32 %dimensions, i8* %trace_tag) local_unnamed_addr #4 {
entry:
  %event = alloca %struct.halide_trace_event_t, align 8
  %0 = bitcast %struct.halide_trace_event_t* %event to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #11
  %code.i.i = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 4, i32 0
  %bits.i.i = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 4, i32 1
  %lanes.i.i = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 4, i32 2
  %func1 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 0
  store i8* %func, i8** %func1, align 8, !tbaa !146
  %value2 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 1
  store i8* %value, i8** %value2, align 8, !tbaa !158
  %coordinates = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 2
  store i32* %coords, i32** %coordinates, align 8, !tbaa !157
  %trace_tag3 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 3
  store i8* %trace_tag, i8** %trace_tag3, align 8, !tbaa !147
  %conv = trunc i32 %type_code to i8
  store i8 %conv, i8* %code.i.i, align 8, !tbaa !168
  %conv5 = trunc i32 %type_bits to i8
  store i8 %conv5, i8* %bits.i.i, align 1, !tbaa !163
  %conv7 = trunc i32 %type_lanes to i16
  store i16 %conv7, i16* %lanes.i.i, align 2, !tbaa !138
  %event9 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 5
  store i32 %code, i32* %event9, align 4, !tbaa !162
  %parent_id10 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 6
  store i32 %parent_id, i32* %parent_id10, align 8, !tbaa !176
  %value_index11 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 7
  store i32 %value_index, i32* %value_index11, align 4, !tbaa !165
  %dimensions12 = getelementptr inbounds %struct.halide_trace_event_t, %struct.halide_trace_event_t* %event, i64 0, i32 8
  store i32 %dimensions, i32* %dimensions12, align 8, !tbaa !145
  %call = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %0, i64 56) #14
  %add = add nsw i32 %type_bits, 7
  %div = sdiv i32 %add, 8
  %mul = mul nsw i32 %div, %type_lanes
  %conv13 = sext i32 %mul to i64
  %call14 = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* %value, i64 %conv13) #14
  %1 = bitcast i32* %coords to i8*
  %conv15 = sext i32 %dimensions to i64
  %mul16 = shl nsw i64 %conv15, 2
  %call17 = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* %1, i64 %mul16) #14
  %call18 = call i32 @halide_trace(i8* %user_context, %struct.halide_trace_event_t* nonnull %event) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #11
  ret i32 %call18
}

; Function Attrs: nounwind mustprogress
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal9ends_withEPKcS3_(i8* %filename, i8* %suffix) local_unnamed_addr #0 {
entry:
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %entry
  %f.0 = phi i8* [ %filename, %entry ], [ %incdec.ptr, %while.cond ]
  %0 = load i8, i8* %f.0, align 1, !tbaa !18
  %tobool.not = icmp eq i8 %0, 0
  %incdec.ptr = getelementptr inbounds i8, i8* %f.0, i64 1
  br i1 %tobool.not, label %while.cond1, label %while.cond, !llvm.loop !177

while.cond1:                                      ; preds = %while.cond, %while.cond1
  %s.0 = phi i8* [ %incdec.ptr4, %while.cond1 ], [ %suffix, %while.cond ]
  %1 = load i8, i8* %s.0, align 1, !tbaa !18
  %tobool2.not = icmp eq i8 %1, 0
  %incdec.ptr4 = getelementptr inbounds i8, i8* %s.0, i64 1
  br i1 %tobool2.not, label %while.cond6.preheader, label %while.cond1, !llvm.loop !178

while.cond6.preheader:                            ; preds = %while.cond1
  %cmp34 = icmp ne i8* %s.0, %suffix
  %cmp735 = icmp ne i8* %f.0, %filename
  %2 = and i1 %cmp735, %cmp34
  br i1 %2, label %if.end, label %while.cond6.preheader.while.end13_crit_edge

while.cond6.preheader.while.end13_crit_edge:      ; preds = %while.cond6.preheader
  %cmp16.0 = icmp eq i8 0, 0
  br label %while.end13

if.end:                                           ; preds = %while.cond6.preheader, %if.end.while.body8_crit_edge
  %f.13649 = phi i8* [ %incdec.ptr11, %if.end.while.body8_crit_edge ], [ %f.0, %while.cond6.preheader ]
  %s.13748 = phi i8* [ %incdec.ptr12, %if.end.while.body8_crit_edge ], [ %s.0, %while.cond6.preheader ]
  %incdec.ptr11 = getelementptr inbounds i8, i8* %f.13649, i64 -1
  %incdec.ptr12 = getelementptr inbounds i8, i8* %s.13748, i64 -1
  %cmp = icmp ne i8* %incdec.ptr12, %suffix
  %cmp7 = icmp ne i8* %incdec.ptr11, %filename
  %3 = and i1 %cmp7, %cmp
  %.pre = load i8, i8* %incdec.ptr11, align 1, !tbaa !18
  %.pre45 = load i8, i8* %incdec.ptr12, align 1, !tbaa !18
  br i1 %3, label %if.end.while.body8_crit_edge, label %if.end.while.end13_crit_edge, !llvm.loop !179

if.end.while.end13_crit_edge:                     ; preds = %if.end
  %cmp16.1 = icmp eq i8 %.pre, %.pre45
  br label %while.end13

if.end.while.body8_crit_edge:                     ; preds = %if.end
  %cmp10.not = icmp eq i8 %.pre, %.pre45
  br i1 %cmp10.not, label %if.end, label %cleanup

while.end13:                                      ; preds = %if.end.while.end13_crit_edge, %while.cond6.preheader.while.end13_crit_edge
  %cmp16.phi = phi i1 [ %cmp16.0, %while.cond6.preheader.while.end13_crit_edge ], [ %cmp16.1, %if.end.while.end13_crit_edge ]
  br label %cleanup

cleanup:                                          ; preds = %if.end.while.body8_crit_edge, %while.end13
  %retval.0 = phi i1 [ %cmp16.phi, %while.end13 ], [ false, %if.end.while.body8_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind
define weak i32 @halide_debug_to_file(i8* %user_context, i8* %filename, i32 %type_code, %struct.halide_buffer_t* %buf) local_unnamed_addr #4 {
entry:
  %shape = alloca [4 x %struct.halide_dimension_t], align 16
  %header = alloca %"struct.Halide::Runtime::Internal::halide_tiff_header", align 2
  %offset = alloca i32, align 4
  %count = alloca i32, align 4
  %array_name = alloca [256 x i8], align 1
  %array_name43 = getelementptr inbounds [256 x i8], [256 x i8]* %array_name, i64 0, i64 0
  %header198 = alloca [129 x i8], align 1
  %tags = alloca [8 x i32], align 4
  %extents = alloca [4 x i32], align 4
  %name_header = alloca [2 x i32], align 4
  %payload_header = alloca [2 x i32], align 4
  %header289 = alloca [5 x i32], align 4
  %temp = alloca [4096 x i8], align 1
  %idx = alloca [4 x i32], align 4
  %zero = alloca i64, align 8
  %host.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %0 = load i8*, i8** %host.i, align 8, !tbaa !180
  %cmp.i = icmp eq i8* %0, null
  br i1 %cmp.i, label %_ZNK15halide_buffer_t15is_bounds_queryEv.exit, label %if.end

_ZNK15halide_buffer_t15is_bounds_queryEv.exit:    ; preds = %entry
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !182
  %cmp2.i = icmp eq i64 %1, 0
  br i1 %cmp2.i, label %if.then, label %if.end

if.then:                                          ; preds = %_ZNK15halide_buffer_t15is_bounds_queryEv.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.34, i64 0, i64 0)) #14
  br label %return

if.end:                                           ; preds = %_ZNK15halide_buffer_t15is_bounds_queryEv.exit, %entry
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %2 = load i32, i32* %dimensions, align 4, !tbaa !183
  %cmp = icmp sgt i32 %2, 4
  br i1 %cmp, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1.35, i64 0, i64 0)) #14
  br label %return

if.end2:                                          ; preds = %if.end
  %call3 = tail call i32 @halide_copy_to_host(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %cmp4.not = icmp eq i32 %call3, 0
  br i1 %cmp4.not, label %if.end6, label %return

if.end6:                                          ; preds = %if.end2
  %call.i598 = tail call i8* @fopen(i8* %filename, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.36, i64 0, i64 0)) #14
  %cmp.i601.not = icmp eq i8* %call.i598, null
  br i1 %cmp.i601.not, label %return, label %if.end9

if.end9:                                          ; preds = %if.end6
  %3 = bitcast [4 x %struct.halide_dimension_t]* %shape to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #11
  %min.i = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 0
  %extent.i = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 0, i32 1
  %4 = bitcast [4 x %struct.halide_dimension_t]* %shape to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %4, align 16, !tbaa !41
  %min.i.1 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 0
  %extent.i.1 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 1, i32 1
  %5 = bitcast i32* %min.i.1 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %5, align 16, !tbaa !41
  %min.i.2 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 0
  %extent.i.2 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 2, i32 1
  %6 = bitcast i32* %min.i.2 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %6, align 16, !tbaa !41
  %min.i.3 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 0
  %extent.i.3 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 3, i32 1
  %7 = bitcast i32* %min.i.3 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %7, align 16, !tbaa !41
  %8 = load i32, i32* %dimensions, align 4, !tbaa !183
  %cmp11875 = icmp sgt i32 %8, 0
  br i1 %cmp11875, label %for.body.lr.ph, label %for.body22.preheader

for.body.lr.ph:                                   ; preds = %if.end9
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %9 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !184
  %10 = zext i32 %8 to i64
  %11 = add nsw i64 %10, -1
  %12 = icmp ult i64 %11, 3
  %13 = select i1 %12, i64 %10, i64 4
  br label %for.body

for.cond19.preheader:                             ; preds = %for.body
  %cmp20873 = icmp slt i32 %8, 4
  br i1 %cmp20873, label %for.body22.preheader, label %for.cond.cleanup21

for.body22.preheader:                             ; preds = %for.cond19.preheader, %if.end9
  %elts.0.lcssa907 = phi i64 [ %mul, %for.cond19.preheader ], [ 1, %if.end9 ]
  %14 = sext i32 %8 to i64
  %15 = sub i32 3, %8
  %16 = zext i32 %15 to i64
  %17 = add nuw nsw i64 %16, 1
  %min.iters.check = icmp eq i32 %15, 0
  br i1 %min.iters.check, label %for.body22.preheader162, label %vector.ph

vector.ph:                                        ; preds = %for.body22.preheader
  %n.vec = and i64 %17, 8589934590
  %ind.end = add nsw i64 %n.vec, %14
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %index, %14
  %induction36 = add i64 %offset.idx, 1
  %18 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %offset.idx, i32 0
  %19 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %induction36, i32 0
  %20 = bitcast i32* %18 to <2 x i32>*
  store <2 x i32> <i32 0, i32 1>, <2 x i32>* %20, align 16, !tbaa !41
  %21 = bitcast i32* %19 to <2 x i32>*
  store <2 x i32> <i32 0, i32 1>, <2 x i32>* %21, align 16, !tbaa !41
  %22 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %offset.idx, i32 2
  %23 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %induction36, i32 2
  store i32 0, i32* %22, align 8, !tbaa !185
  store i32 0, i32* %23, align 8, !tbaa !185
  %index.next = add i64 %index, 2
  %24 = icmp eq i64 %index.next, %n.vec
  br i1 %24, label %middle.block, label %vector.body, !llvm.loop !187

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %17, %n.vec
  br i1 %cmp.n, label %for.cond.cleanup21, label %for.body22.preheader162

for.body22.preheader162:                          ; preds = %for.body22.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ %14, %for.body22.preheader ], [ %ind.end, %middle.block ]
  br label %for.body22

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv887 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next888, %for.body ]
  %elts.0877 = phi i64 [ 1, %for.body.lr.ph ], [ %mul, %for.body ]
  %arrayidx = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %9, i64 %indvars.iv887
  %arrayidx14 = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %indvars.iv887
  %25 = bitcast %struct.halide_dimension_t* %arrayidx14 to i8*
  %26 = bitcast %struct.halide_dimension_t* %arrayidx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %25, i8* nonnull align 4 dereferenceable(16) %26, i64 16, i1 false), !tbaa.struct !188
  %extent = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %indvars.iv887, i32 1
  %27 = load i32, i32* %extent, align 4, !tbaa !189
  %conv903 = zext i32 %27 to i64
  %mul = mul i64 %elts.0877, %conv903
  %indvars.iv.next888 = add nuw nsw i64 %indvars.iv887, 1
  %exitcond.not17 = icmp eq i64 %indvars.iv.next888, %13
  br i1 %exitcond.not17, label %for.cond19.preheader, label %for.body, !llvm.loop !190

for.cond.cleanup21:                               ; preds = %for.body22, %middle.block, %for.cond19.preheader
  %elts.0.lcssa906 = phi i64 [ %mul, %for.cond19.preheader ], [ %elts.0.lcssa907, %middle.block ], [ %elts.0.lcssa907, %for.body22 ]
  %bits.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 4, i32 1
  %28 = load i8, i8* %bits.i, align 1, !tbaa !144
  %conv.i = zext i8 %28 to i32
  %add.i = add nuw nsw i32 %conv.i, 7
  %div.i = lshr i32 %add.i, 3
  %call34 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal9ends_withEPKcS3_(i8* %filename, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.37, i64 0, i64 0)) #15
  br i1 %call34, label %if.then36, label %lor.lhs.false

for.body22:                                       ; preds = %for.body22.preheader162, %for.body22
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body22 ], [ %indvars.iv.ph, %for.body22.preheader162 ]
  %min = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %indvars.iv, i32 0
  %29 = bitcast i32* %min to <2 x i32>*
  store <2 x i32> <i32 0, i32 1>, <2 x i32>* %29, align 16, !tbaa !41
  %stride = getelementptr inbounds [4 x %struct.halide_dimension_t], [4 x %struct.halide_dimension_t]* %shape, i64 0, i64 %indvars.iv, i32 2
  store i32 0, i32* %stride, align 8, !tbaa !185
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond886.not = icmp eq i32 %lftr.wideiv, 4
  br i1 %exitcond886.not, label %for.cond.cleanup21, label %for.body22, !llvm.loop !191

lor.lhs.false:                                    ; preds = %for.cond.cleanup21
  %call35 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal9ends_withEPKcS3_(i8* %filename, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.38, i64 0, i64 0)) #15
  br i1 %call35, label %if.then36, label %if.else164

if.then36:                                        ; preds = %lor.lhs.false, %for.cond.cleanup21
  %30 = load i32, i32* %extent.i, align 4, !tbaa !189
  %31 = load i32, i32* %extent.i.1, align 4, !tbaa !189
  %32 = load i32, i32* %extent.i.3, align 4, !tbaa !189
  %switch = icmp ult i32 %32, 2
  %33 = load i32, i32* %extent.i.2, align 4, !tbaa !189
  %cmp50 = icmp slt i32 %33, 5
  %or.cond = and i1 %switch, %cmp50
  %depth.0 = select i1 %or.cond, i32 1, i32 %33
  %channels.0 = select i1 %or.cond, i32 %33, i32 %32
  %34 = bitcast %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header to i8*
  call void @llvm.lifetime.start.p0i8(i64 210, i8* nonnull %34) #11
  %byte_order_marker = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 0
  store i16 18761, i16* %byte_order_marker, align 2, !tbaa !192
  %version = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 1
  store i16 42, i16* %version, align 2, !tbaa !194
  %ifd0_offset = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 2
  store i32 8, i32* %ifd0_offset, align 2, !tbaa !195
  %entry_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 3
  store i16 15, i16* %entry_count, align 2, !tbaa !196
  %tag_code2.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 0, i32 0
  store i16 256, i16* %tag_code2.i, align 2, !tbaa !197
  %type_code.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 0, i32 1
  store i16 4, i16* %type_code.i, align 2, !tbaa !199
  %count3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 0, i32 2
  store i32 1, i32* %count3.i, align 2, !tbaa !200
  %i32.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 0, i32 3, i32 0
  store i32 %30, i32* %i32.i, align 2, !tbaa !18
  %tag_code2.i632 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 1, i32 0
  store i16 257, i16* %tag_code2.i632, align 2, !tbaa !197
  %type_code.i633 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 1, i32 1
  store i16 4, i16* %type_code.i633, align 2, !tbaa !199
  %count3.i634 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 1, i32 2
  store i32 1, i32* %count3.i634, align 2, !tbaa !200
  %i32.i635 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 1, i32 3, i32 0
  store i32 %31, i32* %i32.i635, align 2, !tbaa !18
  %35 = trunc i32 %add.i to i16
  %conv68 = and i16 %35, 504
  %tag_code2.i643 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 2, i32 0
  store i16 258, i16* %tag_code2.i643, align 2, !tbaa !197
  %type_code.i644 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 2, i32 1
  store i16 3, i16* %type_code.i644, align 2, !tbaa !199
  %count3.i645 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 2, i32 2
  store i32 1, i32* %count3.i645, align 2, !tbaa !200
  %value4.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 2, i32 3
  %i16.i = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i to i16*
  store i16 %conv68, i16* %i16.i, align 2, !tbaa !18
  %tag_code2.i653 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 3, i32 0
  store i16 259, i16* %tag_code2.i653, align 2, !tbaa !197
  %type_code.i654 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 3, i32 1
  store i16 3, i16* %type_code.i654, align 2, !tbaa !199
  %count3.i655 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 3, i32 2
  store i32 1, i32* %count3.i655, align 2, !tbaa !200
  %value4.i656 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 3, i32 3
  %i16.i657 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i656 to i16*
  store i16 1, i16* %i16.i657, align 2, !tbaa !18
  %cmp71 = icmp sgt i32 %channels.0, 2
  %conv72 = select i1 %cmp71, i16 2, i16 1
  %tag_code2.i665 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 4, i32 0
  store i16 262, i16* %tag_code2.i665, align 2, !tbaa !197
  %type_code.i666 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 4, i32 1
  store i16 3, i16* %type_code.i666, align 2, !tbaa !199
  %count3.i667 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 4, i32 2
  store i32 1, i32* %count3.i667, align 2, !tbaa !200
  %value4.i668 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 4, i32 3
  %i16.i669 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i668 to i16*
  store i16 %conv72, i16* %i16.i669, align 2, !tbaa !18
  %tag_code2.i677 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 5, i32 0
  store i16 273, i16* %tag_code2.i677, align 2, !tbaa !197
  %type_code.i678 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 5, i32 1
  store i16 4, i16* %type_code.i678, align 2, !tbaa !199
  %count3.i679 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 5, i32 2
  store i32 %channels.0, i32* %count3.i679, align 2, !tbaa !200
  %i32.i680 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 5, i32 3, i32 0
  store i32 210, i32* %i32.i680, align 2, !tbaa !18
  %conv75 = trunc i32 %channels.0 to i16
  %tag_code2.i688 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 6, i32 0
  store i16 277, i16* %tag_code2.i688, align 2, !tbaa !197
  %type_code.i689 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 6, i32 1
  store i16 3, i16* %type_code.i689, align 2, !tbaa !199
  %count3.i690 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 6, i32 2
  store i32 1, i32* %count3.i690, align 2, !tbaa !200
  %value4.i691 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 6, i32 3
  %i16.i692 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i691 to i16*
  store i16 %conv75, i16* %i16.i692, align 2, !tbaa !18
  %tag_code2.i706 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 7, i32 0
  store i16 278, i16* %tag_code2.i706, align 2, !tbaa !197
  %type_code.i707 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 7, i32 1
  store i16 4, i16* %type_code.i707, align 2, !tbaa !199
  %count3.i708 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 7, i32 2
  store i32 1, i32* %count3.i708, align 2, !tbaa !200
  %i32.i709 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 7, i32 3, i32 0
  store i32 %31, i32* %i32.i709, align 2, !tbaa !18
  %cmp80 = icmp eq i32 %channels.0, 1
  %36 = trunc i64 %elts.0.lcssa906 to i32
  %conv86595 = mul i32 %div.i, %36
  %mul84 = shl i32 %channels.0, 2
  %add = add i32 %mul84, 210
  %add.sink = select i1 %cmp80, i32 %conv86595, i32 %add
  %37 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 8, i32 0
  store i16 279, i16* %37, align 2
  %38 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 8, i32 1
  store i16 4, i16* %38, align 2
  %39 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 8, i32 2
  store i32 %channels.0, i32* %39, align 2
  %40 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 8, i32 3, i32 0
  store i32 %add.sink, i32* %40, align 2
  %tag_code2.i732 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 9, i32 0
  store i16 282, i16* %tag_code2.i732, align 2, !tbaa !197
  %type_code3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 9, i32 1
  store i16 5, i16* %type_code3.i, align 2, !tbaa !199
  %count4.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 9, i32 2
  %41 = bitcast i32* %count4.i to <2 x i32>*
  store <2 x i32> <i32 1, i32 194>, <2 x i32>* %41, align 2, !tbaa !18
  %tag_code2.i741 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 10, i32 0
  store i16 283, i16* %tag_code2.i741, align 2, !tbaa !197
  %type_code3.i742 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 10, i32 1
  store i16 5, i16* %type_code3.i742, align 2, !tbaa !199
  %count4.i743 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 10, i32 2
  %42 = bitcast i32* %count4.i743 to <2 x i32>*
  store <2 x i32> <i32 1, i32 202>, <2 x i32>* %42, align 2, !tbaa !18
  %tag_code2.i759 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 11, i32 0
  store i16 284, i16* %tag_code2.i759, align 2, !tbaa !197
  %type_code.i760 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 11, i32 1
  store i16 3, i16* %type_code.i760, align 2, !tbaa !199
  %count3.i761 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 11, i32 2
  store i32 1, i32* %count3.i761, align 2, !tbaa !200
  %value4.i762 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 11, i32 3
  %i16.i763 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i762 to i16*
  store i16 2, i16* %i16.i763, align 2, !tbaa !18
  %tag_code2.i754 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 12, i32 0
  store i16 296, i16* %tag_code2.i754, align 2, !tbaa !197
  %type_code.i755 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 12, i32 1
  store i16 3, i16* %type_code.i755, align 2, !tbaa !199
  %count3.i756 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 12, i32 2
  store i32 1, i32* %count3.i756, align 2, !tbaa !200
  %value4.i757 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 12, i32 3
  %i16.i758 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i757 to i16*
  store i16 1, i16* %i16.i758, align 2, !tbaa !18
  %idxprom92 = sext i32 %type_code to i64
  %arrayidx93 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZN6Halide7Runtime8Internal30pixel_type_to_tiff_sample_typeE, i64 0, i64 %idxprom92
  %43 = load i16, i16* %arrayidx93, align 2, !tbaa !169
  %tag_code2.i749 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 13, i32 0
  store i16 339, i16* %tag_code2.i749, align 2, !tbaa !197
  %type_code.i750 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 13, i32 1
  store i16 3, i16* %type_code.i750, align 2, !tbaa !199
  %count3.i751 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 13, i32 2
  store i32 1, i32* %count3.i751, align 2, !tbaa !200
  %value4.i752 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 13, i32 3
  %i16.i753 = bitcast %"class.Halide::Runtime::Internal::SharedExclusiveSpinLock"* %value4.i752 to i16*
  store i16 %43, i16* %i16.i753, align 2, !tbaa !18
  %tag_code2.i745 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 14, i32 0
  store i16 -32539, i16* %tag_code2.i745, align 2, !tbaa !197
  %type_code.i746 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 14, i32 1
  store i16 4, i16* %type_code.i746, align 2, !tbaa !199
  %count3.i747 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 14, i32 2
  store i32 1, i32* %count3.i747, align 2, !tbaa !200
  %i32.i748 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 4, i64 14, i32 3, i32 0
  store i32 %depth.0, i32* %i32.i748, align 2, !tbaa !18
  %ifd0_end = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 5
  %44 = bitcast i32* %ifd0_end to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 2, !tbaa !41
  %arrayidx100 = getelementptr inbounds %"struct.Halide::Runtime::Internal::halide_tiff_header", %"struct.Halide::Runtime::Internal::halide_tiff_header"* %header, i64 0, i32 7, i64 1
  store i32 1, i32* %arrayidx100, align 2, !tbaa !41
  %call.i736 = call i64 @fwrite(i8* nonnull %34, i64 210, i64 1, i8* nonnull %call.i598) #14
  %cmp.i737.not = icmp eq i64 %call.i736, 0
  br i1 %cmp.i737.not, label %cleanup154, label %if.end103

if.end103:                                        ; preds = %if.then36
  %cmp104 = icmp sgt i32 %channels.0, 1
  br i1 %cmp104, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731.lr.ph, label %cleanup154.thread

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731.lr.ph: ; preds = %if.end103
  %45 = bitcast i32* %offset to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #11
  %mul108 = shl i32 %channels.0, 3
  %add109 = add i32 %mul108, 210
  store i32 %add109, i32* %offset, align 4, !tbaa !41
  %mul123 = mul i32 %depth.0, %div.i
  %46 = load i32, i32* %extent.i, align 4
  %47 = load i32, i32* %extent.i.1, align 4
  %mul124 = mul i32 %mul123, %46
  %mul125 = mul i32 %mul124, %47
  br label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731: ; preds = %if.end118, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731.lr.ph
  %i111.0865 = phi i32 [ 0, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731.lr.ph ], [ %inc128, %if.end118 ]
  %call.i727 = call i64 @fwrite(i8* nonnull %45, i64 4, i64 1, i8* nonnull %call.i598) #14
  %cmp.i728.not = icmp eq i64 %call.i727, 0
  br i1 %cmp.i728.not, label %cleanup151.thread, label %if.end118

if.end118:                                        ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731
  %48 = load i32, i32* %offset, align 4, !tbaa !41
  %add126 = add nsw i32 %mul125, %48
  store i32 %add126, i32* %offset, align 4, !tbaa !41
  %inc128 = add nuw nsw i32 %i111.0865, 1
  %exitcond881.not = icmp eq i32 %inc128, %channels.0
  br i1 %exitcond881.not, label %for.end129, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731, !llvm.loop !201

for.end129:                                       ; preds = %if.end118
  %49 = bitcast i32* %count to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #11
  store i32 %mul125, i32* %count, align 4, !tbaa !41
  %inc146.1 = add nuw nsw i32 0, 1
  br label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720

for.cond138:                                      ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720
  %exitcond.not = icmp eq i32 %inc146.phi, %channels.0
  br i1 %exitcond.not, label %cleanup151, label %for.cond138._ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720_crit_edge, !llvm.loop !202

for.cond138._ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720_crit_edge: ; preds = %for.cond138
  %inc146.0 = add nuw nsw i32 %inc146.phi, 1
  br label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720: ; preds = %for.cond138._ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720_crit_edge, %for.end129
  %inc146.phi = phi i32 [ %inc146.0, %for.cond138._ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720_crit_edge ], [ %inc146.1, %for.end129 ]
  %call.i716 = call i64 @fwrite(i8* nonnull %49, i64 4, i64 1, i8* nonnull %call.i598) #14
  %cmp.i717.not = icmp eq i64 %call.i716, 0
  br i1 %cmp.i717.not, label %select.unfold, label %for.cond138

select.unfold:                                    ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit720
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #11
  br label %cleanup151.thread

cleanup151.thread:                                ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731, %select.unfold
  %retval.2.ph = phi i32 [ -5, %select.unfold ], [ -4, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit731 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #11
  br label %cleanup154

cleanup151:                                       ; preds = %for.cond138
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #11
  br label %cleanup154.thread

cleanup154.thread:                                ; preds = %cleanup151, %if.end103
  call void @llvm.lifetime.end.p0i8(i64 210, i8* nonnull %34) #11
  br label %if.end311

cleanup154:                                       ; preds = %cleanup151.thread, %if.then36
  %retval.4 = phi i32 [ -3, %if.then36 ], [ %retval.2.ph, %cleanup151.thread ]
  call void @llvm.lifetime.end.p0i8(i64 210, i8* nonnull %34) #11
  br label %cleanup433

if.else164:                                       ; preds = %lor.lhs.false
  %call165 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal9ends_withEPKcS3_(i8* %filename, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.39, i64 0, i64 0)) #15
  br i1 %call165, label %while.cond, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631

while.cond:                                       ; preds = %if.else164, %while.cond
  %end.0 = phi i8* [ %incdec.ptr167, %while.cond ], [ %filename, %if.else164 ]
  %50 = load i8, i8* %end.0, align 1, !tbaa !18
  %tobool.not = icmp eq i8 %50, 0
  %incdec.ptr167 = getelementptr inbounds i8, i8* %end.0, i64 1
  br i1 %tobool.not, label %while.body171, label %while.cond, !llvm.loop !203

while.cond174.preheader:                          ; preds = %while.body171
  %end.1872.lcssa883 = ptrtoint i8* %end.1872 to i64
  %51 = ptrtoint i8* %filename to i64
  %52 = sub i64 %51, %end.1872.lcssa883
  br label %while.cond174

while.body171:                                    ; preds = %while.cond, %while.body171
  %end.1872 = phi i8* [ %incdec.ptr172.ptr, %while.body171 ], [ %end.0, %while.cond ]
  %incdec.ptr172.ptr = getelementptr inbounds i8, i8* %end.1872, i64 -1
  %.pr = load i8, i8* %incdec.ptr172.ptr, align 1, !tbaa !18
  %cmp170.not = icmp eq i8 %.pr, 46
  br i1 %cmp170.not, label %while.cond174.preheader, label %while.body171, !llvm.loop !204

while.cond174:                                    ; preds = %land.rhs176, %while.cond174.preheader
  %start.0.idx = phi i64 [ %start.0.add, %land.rhs176 ], [ -1, %while.cond174.preheader ]
  %start.0.ptr.ptr = getelementptr inbounds i8, i8* %end.1872, i64 %start.0.idx
  %cmp175.not = icmp eq i8* %start.0.ptr.ptr, %filename
  br i1 %cmp175.not, label %while.end183, label %land.rhs176

land.rhs176:                                      ; preds = %while.cond174
  %start.0.add = add nsw i64 %start.0.idx, -1
  %arrayidx177.ptr = getelementptr inbounds i8, i8* %end.1872, i64 %start.0.add
  %53 = load i8, i8* %arrayidx177.ptr, align 1, !tbaa !18
  %cmp179.not = icmp eq i8 %53, 47
  br i1 %cmp179.not, label %while.end183, label %while.cond174, !llvm.loop !205

while.end183:                                     ; preds = %land.rhs176, %while.cond174
  %start.0.idx.lcssa = phi i64 [ %52, %while.cond174 ], [ %start.0.idx, %land.rhs176 ]
  %54 = trunc i64 %start.0.idx.lcssa to i32
  %conv184 = xor i32 %54, -1
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* %array_name, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %55) #11
  %cmp186.not868 = icmp eq i64 %start.0.idx.lcssa, -1
  br i1 %cmp186.not868, label %iter.check, label %while.body187.preheader

while.body187.preheader:                          ; preds = %while.end183
  %56 = xor i64 %start.0.idx.lcssa, -1
  %min.iters.check40 = icmp ugt i64 %start.0.idx.lcssa, -33
  br i1 %min.iters.check40, label %while.body187.preheader160, label %vector.memcheck

vector.memcheck:                                  ; preds = %while.body187.preheader
  %57 = xor i64 %start.0.idx.lcssa, -1
  %scevgep44 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %57
  %scevgep45 = getelementptr i8, i8* %end.1872, i64 %start.0.idx.lcssa
  %scevgep46 = getelementptr i8, i8* %end.1872, i64 -1
  %bound0 = icmp ult i8* %array_name43, %scevgep46
  %bound1 = icmp ult i8* %scevgep45, %scevgep44
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %while.body187.preheader160, label %vector.ph42

vector.ph42:                                      ; preds = %vector.memcheck
  %n.vec48 = and i64 %56, -32
  %ind.end52 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %n.vec48
  %ind.end54 = add i64 %start.0.idx.lcssa, %n.vec48
  br label %vector.body39

vector.body39:                                    ; preds = %vector.body39, %vector.ph42
  %index49 = phi i64 [ 0, %vector.ph42 ], [ %index.next50, %vector.body39 ]
  %next.gep = getelementptr [256 x i8], [256 x i8]* %array_name, i64 0, i64 %index49
  %offset.idx57 = add i64 %start.0.idx.lcssa, %index49
  %58 = getelementptr inbounds i8, i8* %end.1872, i64 %offset.idx57
  %59 = bitcast i8* %58 to <16 x i8>*
  %wide.load = load <16 x i8>, <16 x i8>* %59, align 1, !tbaa !18, !alias.scope !206
  %60 = getelementptr inbounds i8, i8* %58, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %wide.load58 = load <16 x i8>, <16 x i8>* %61, align 1, !tbaa !18, !alias.scope !206
  %62 = bitcast i8* %next.gep to <16 x i8>*
  store <16 x i8> %wide.load, <16 x i8>* %62, align 1, !tbaa !18, !alias.scope !209, !noalias !206
  %63 = getelementptr i8, i8* %next.gep, i64 16
  %64 = bitcast i8* %63 to <16 x i8>*
  store <16 x i8> %wide.load58, <16 x i8>* %64, align 1, !tbaa !18, !alias.scope !209, !noalias !206
  %index.next50 = add i64 %index49, 32
  %65 = icmp eq i64 %index.next50, %n.vec48
  br i1 %65, label %middle.block37, label %vector.body39, !llvm.loop !211

middle.block37:                                   ; preds = %vector.body39
  %cmp.n55 = icmp eq i64 %n.vec48, %56
  br i1 %cmp.n55, label %while.cond191.preheader, label %while.body187.preheader160

while.body187.preheader160:                       ; preds = %vector.memcheck, %while.body187.preheader, %middle.block37
  %dst.0870.ph = phi i8* [ %55, %vector.memcheck ], [ %55, %while.body187.preheader ], [ %ind.end52, %middle.block37 ]
  %start.1869.idx.ph = phi i64 [ %start.0.idx.lcssa, %vector.memcheck ], [ %start.0.idx.lcssa, %while.body187.preheader ], [ %ind.end54, %middle.block37 ]
  br label %while.body187

while.cond191.preheader:                          ; preds = %while.body187, %middle.block37
  %incdec.ptr189.lcssa = phi i8* [ %ind.end52, %middle.block37 ], [ %incdec.ptr189, %while.body187 ]
  %add.ptr = getelementptr inbounds [256 x i8], [256 x i8]* %array_name, i64 0, i64 256
  %cmp193866 = icmp ult i8* %incdec.ptr189.lcssa, %add.ptr
  br i1 %cmp193866, label %iter.check, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705

iter.check:                                       ; preds = %while.cond191.preheader, %while.end183
  %dst.0.lcssa911 = phi i8* [ %incdec.ptr189.lcssa, %while.cond191.preheader ], [ %55, %while.end183 ]
  %dst.0.lcssa91162 = ptrtoint i8* %dst.0.lcssa911 to i64
  %scevgep = getelementptr inbounds [256 x i8], [256 x i8]* %array_name, i64 1, i64 0
  %66 = sub i64 0, %dst.0.lcssa91162
  %scevgep63 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 1, i64 %66
  %exitcount.ptrcnt.to.int = ptrtoint i8* %scevgep63 to i64
  %min.iters.check65 = icmp ult i8* %scevgep63, inttoptr (i64 4 to i8*)
  br i1 %min.iters.check65, label %while.body194.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %iter.check
  %min.iters.check67 = icmp ult i8* %scevgep63, inttoptr (i64 32 to i8*)
  br i1 %min.iters.check67, label %vec.epilog.ph, label %vector.ph68

vector.ph68:                                      ; preds = %vector.main.loop.iter.check
  %n.vec70 = and i64 %exitcount.ptrcnt.to.int, -32
  %next.gep74.0 = getelementptr i8, i8* %dst.0.lcssa911, i64 0
  %index.next72.0 = add i64 0, 32
  br label %vector.body61

vector.body61:                                    ; preds = %vector.body61.vector.body61_crit_edge, %vector.ph68
  %index.next72.phi = phi i64 [ %index.next72.0, %vector.ph68 ], [ %index.next72.1, %vector.body61.vector.body61_crit_edge ]
  %next.gep74.phi = phi i8* [ %next.gep74.0, %vector.ph68 ], [ %next.gep74.1, %vector.body61.vector.body61_crit_edge ]
  %67 = bitcast i8* %next.gep74.phi to <16 x i8>*
  store <16 x i8> zeroinitializer, <16 x i8>* %67, align 1, !tbaa !18
  %68 = getelementptr i8, i8* %next.gep74.phi, i64 16
  %69 = bitcast i8* %68 to <16 x i8>*
  store <16 x i8> zeroinitializer, <16 x i8>* %69, align 1, !tbaa !18
  %70 = icmp eq i64 %index.next72.phi, %n.vec70
  br i1 %70, label %middle.block59, label %vector.body61.vector.body61_crit_edge, !llvm.loop !212

vector.body61.vector.body61_crit_edge:            ; preds = %vector.body61
  %next.gep74.1 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index.next72.phi
  %index.next72.1 = add i64 %index.next72.phi, 32
  br label %vector.body61

middle.block59:                                   ; preds = %vector.body61
  %cmp.n73 = icmp eq i64 %n.vec70, %exitcount.ptrcnt.to.int
  br i1 %cmp.n73, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block59
  %ind.end85 = getelementptr i8, i8* %dst.0.lcssa911, i64 %n.vec70
  %n.vec.remaining = and i64 %exitcount.ptrcnt.to.int, 28
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %while.body194.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vector.main.loop.iter.check, %vec.epilog.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec70, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %71 = sub i64 0, %dst.0.lcssa91162
  %scevgep76 = getelementptr [256 x i8], [256 x i8]* %array_name, i64 1, i64 %71
  %exitcount.ptrcnt.to.int78 = ptrtoint i8* %scevgep76 to i64
  %n.vec80 = and i64 %exitcount.ptrcnt.to.int78, -4
  %ind.end84 = getelementptr i8, i8* %dst.0.lcssa911, i64 %n.vec80
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %index81 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next82, %vec.epilog.vector.body ]
  %next.gep87 = getelementptr i8, i8* %dst.0.lcssa911, i64 %index81
  %72 = bitcast i8* %next.gep87 to <4 x i8>*
  store <4 x i8> zeroinitializer, <4 x i8>* %72, align 1, !tbaa !18
  %index.next82 = add i64 %index81, 4
  %73 = icmp eq i64 %index.next82, %n.vec80
  br i1 %73, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !213

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n86 = icmp eq i64 %n.vec80, %exitcount.ptrcnt.to.int78
  br i1 %cmp.n86, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705, label %while.body194.preheader

while.body194.preheader:                          ; preds = %iter.check, %vec.epilog.iter.check, %vec.epilog.middle.block
  %dst.1867.ph = phi i8* [ %dst.0.lcssa911, %iter.check ], [ %ind.end85, %vec.epilog.iter.check ], [ %ind.end84, %vec.epilog.middle.block ]
  br label %while.body194

while.body187:                                    ; preds = %while.body187.preheader160, %while.body187
  %dst.0870 = phi i8* [ %incdec.ptr189, %while.body187 ], [ %dst.0870.ph, %while.body187.preheader160 ]
  %start.1869.idx = phi i64 [ %start.1869.add, %while.body187 ], [ %start.1869.idx.ph, %while.body187.preheader160 ]
  %start.1869.ptr = getelementptr inbounds i8, i8* %end.1872, i64 %start.1869.idx
  %start.1869.add = add nuw nsw i64 %start.1869.idx, 1
  %74 = load i8, i8* %start.1869.ptr, align 1, !tbaa !18
  %incdec.ptr189 = getelementptr inbounds i8, i8* %dst.0870, i64 1
  store i8 %74, i8* %dst.0870, align 1, !tbaa !18
  %cmp186.not = icmp eq i64 %start.1869.add, -1
  br i1 %cmp186.not, label %while.cond191.preheader, label %while.body187, !llvm.loop !214

while.body194:                                    ; preds = %while.body194.preheader, %while.body194
  %dst.1867 = phi i8* [ %incdec.ptr195, %while.body194 ], [ %dst.1867.ph, %while.body194.preheader ]
  %incdec.ptr195 = getelementptr inbounds i8, i8* %dst.1867, i64 1
  store i8 0, i8* %dst.1867, align 1, !tbaa !18
  %exitcond882.not = icmp eq i8* %incdec.ptr195, %scevgep
  br i1 %exitcond882.not, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705, label %while.body194, !llvm.loop !215

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705: ; preds = %while.body194, %middle.block59, %vec.epilog.middle.block, %while.cond191.preheader
  %add197 = sub i32 6, %54
  %and = and i32 %add197, -8
  %75 = getelementptr inbounds [129 x i8], [129 x i8]* %header198, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 129, i8* nonnull %75) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(129) %75, i8* nonnull align 1 dereferenceable(129) getelementptr inbounds ([129 x i8], [129 x i8]* @__const.halide_debug_to_file.header, i64 0, i64 0), i64 129, i1 false)
  %call.i701 = call i64 @fwrite(i8* nonnull %75, i64 128, i64 1, i8* nonnull %call.i598) #14
  %76 = load i32, i32* %dimensions, align 4, !tbaa !183
  %cmp19.i.i = icmp sgt i32 %76, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705
  %sub.i694.0 = sub nsw i64 1, 0
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %77 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !184
  %wide.trip.count.i.i = zext i32 %76 to i64
  %min.iters.check91 = icmp ult i32 %76, 3
  br i1 %min.iters.check91, label %for.body.i.i.preheader, label %vector.ph92

vector.ph92:                                      ; preds = %for.body.lr.ph.i.i
  %n.vec94 = and i64 %wide.trip.count.i.i, 4294967294
  br label %vector.body90

vector.body90:                                    ; preds = %pred.load.continue103, %vector.ph92
  %index95 = phi i64 [ 0, %vector.ph92 ], [ %index.next96, %pred.load.continue103 ]
  %vec.phi = phi i64 [ 0, %vector.ph92 ], [ %predphi, %pred.load.continue103 ]
  %vec.phi101 = phi i64 [ 0, %vector.ph92 ], [ %predphi104, %pred.load.continue103 ]
  %induction100 = or i64 %index95, 1
  %78 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %77, i64 %index95, i32 2
  %79 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %77, i64 %induction100, i32 2
  %80 = load i32, i32* %78, align 4, !tbaa !185
  %81 = load i32, i32* %79, align 4, !tbaa !185
  %82 = icmp sgt i32 %80, 0
  %83 = icmp sgt i32 %81, 0
  %84 = zext i32 %80 to i64
  %85 = zext i32 %81 to i64
  br i1 %82, label %pred.load.if, label %pred.load.continue

pred.load.if:                                     ; preds = %vector.body90
  %86 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %77, i64 %index95, i32 1
  %87 = load i32, i32* %86, align 4, !tbaa !189
  br label %pred.load.continue

pred.load.continue:                               ; preds = %pred.load.if, %vector.body90
  %88 = phi i32 [ poison, %vector.body90 ], [ %87, %pred.load.if ]
  br i1 %83, label %pred.load.if102, label %pred.load.continue103

pred.load.if102:                                  ; preds = %pred.load.continue
  %89 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %77, i64 %induction100, i32 1
  %90 = load i32, i32* %89, align 4, !tbaa !189
  br label %pred.load.continue103

pred.load.continue103:                            ; preds = %pred.load.if102, %pred.load.continue
  %91 = phi i32 [ poison, %pred.load.continue ], [ %90, %pred.load.if102 ]
  %92 = add nsw i32 %88, -1
  %93 = add nsw i32 %91, -1
  %94 = sext i32 %92 to i64
  %95 = sext i32 %93 to i64
  %96 = mul nsw i64 %94, %84
  %97 = mul nsw i64 %95, %85
  %98 = select i1 %82, i64 %96, i64 0
  %predphi = add i64 %vec.phi, %98
  %99 = select i1 %83, i64 %97, i64 0
  %predphi104 = add i64 %vec.phi101, %99
  %index.next96 = add i64 %index95, 2
  %100 = icmp eq i64 %index.next96, %n.vec94
  br i1 %100, label %middle.block88, label %vector.body90, !llvm.loop !217

middle.block88:                                   ; preds = %pred.load.continue103
  %bin.rdx = add i64 %predphi104, %predphi
  %cmp.n98 = icmp eq i64 %n.vec94, %wide.trip.count.i.i
  br i1 %cmp.n98, label %for.body.i13.i.preheader, label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %for.body.lr.ph.i.i, %middle.block88
  %indvars.iv.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %n.vec94, %middle.block88 ]
  %index.021.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %bin.rdx, %middle.block88 ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %if.end.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %index.021.i.i = phi i64 [ %index.1.i.i, %if.end.i.i ], [ %index.021.i.i.ph, %for.body.i.i.preheader ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %77, i64 %indvars.iv.i.i, i32 2
  %101 = load i32, i32* %stride2.i.i, align 4, !tbaa !185
  %cmp3.i.i = icmp sgt i32 %101, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %101 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %77, i64 %indvars.iv.i.i, i32 1
  %102 = load i32, i32* %extent.i.i, align 4, !tbaa !189
  %sub.i.i = add nsw i32 %102, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i693 = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i693, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i.preheader, label %for.body.i.i, !llvm.loop !218

for.body.i13.i.preheader:                         ; preds = %if.end.i.i, %middle.block88
  %index.1.i.i.lcssa = phi i64 [ %bin.rdx, %middle.block88 ], [ %index.1.i.i, %if.end.i.i ]
  %min.iters.check108 = icmp ult i32 %76, 3
  br i1 %min.iters.check108, label %for.body.i13.i.preheader157, label %vector.ph109

vector.ph109:                                     ; preds = %for.body.i13.i.preheader
  %n.vec111 = and i64 %wide.trip.count.i.i, 4294967294
  br label %vector.body107

vector.body107:                                   ; preds = %pred.load.continue123, %vector.ph109
  %index112 = phi i64 [ 0, %vector.ph109 ], [ %index.next113, %pred.load.continue123 ]
  %vec.phi118 = phi i64 [ 0, %vector.ph109 ], [ %predphi124, %pred.load.continue123 ]
  %vec.phi119 = phi i64 [ 0, %vector.ph109 ], [ %predphi125, %pred.load.continue123 ]
  %induction117 = or i64 %index112, 1
  %103 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %77, i64 %index112, i32 2
  %104 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %77, i64 %induction117, i32 2
  %105 = load i32, i32* %103, align 4, !tbaa !185
  %106 = load i32, i32* %104, align 4, !tbaa !185
  %107 = icmp slt i32 %105, 0
  %108 = icmp slt i32 %106, 0
  %109 = sext i32 %105 to i64
  %110 = sext i32 %106 to i64
  br i1 %107, label %pred.load.if120, label %pred.load.continue121

pred.load.if120:                                  ; preds = %vector.body107
  %111 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %77, i64 %index112, i32 1
  %112 = load i32, i32* %111, align 4, !tbaa !189
  br label %pred.load.continue121

pred.load.continue121:                            ; preds = %pred.load.if120, %vector.body107
  %113 = phi i32 [ poison, %vector.body107 ], [ %112, %pred.load.if120 ]
  br i1 %108, label %pred.load.if122, label %pred.load.continue123

pred.load.if122:                                  ; preds = %pred.load.continue121
  %114 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %77, i64 %induction117, i32 1
  %115 = load i32, i32* %114, align 4, !tbaa !189
  br label %pred.load.continue123

pred.load.continue123:                            ; preds = %pred.load.if122, %pred.load.continue121
  %116 = phi i32 [ poison, %pred.load.continue121 ], [ %115, %pred.load.if122 ]
  %117 = add nsw i32 %113, -1
  %118 = add nsw i32 %116, -1
  %119 = sext i32 %117 to i64
  %120 = sext i32 %118 to i64
  %121 = mul nsw i64 %119, %109
  %122 = mul nsw i64 %120, %110
  %123 = select i1 %107, i64 %121, i64 0
  %predphi124 = add i64 %vec.phi118, %123
  %124 = select i1 %108, i64 %122, i64 0
  %predphi125 = add i64 %vec.phi119, %124
  %index.next113 = add i64 %index112, 2
  %125 = icmp eq i64 %index.next113, %n.vec111
  br i1 %125, label %middle.block105, label %vector.body107, !llvm.loop !219

middle.block105:                                  ; preds = %pred.load.continue123
  %bin.rdx126 = add i64 %predphi125, %predphi124
  %cmp.n115 = icmp eq i64 %n.vec111, %wide.trip.count.i.i
  br i1 %cmp.n115, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i.preheader157

for.body.i13.i.preheader157:                      ; preds = %for.body.i13.i.preheader, %middle.block105
  %indvars.iv.i10.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %n.vec111, %middle.block105 ]
  %index.018.i.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %bin.rdx126, %middle.block105 ]
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %for.body.i13.i.preheader157, %if.end.i24.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ %indvars.iv.i10.i.ph, %for.body.i13.i.preheader157 ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ %index.018.i.i.ph, %for.body.i13.i.preheader157 ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %77, i64 %indvars.iv.i10.i, i32 2
  %126 = load i32, i32* %stride2.i11.i, align 4, !tbaa !185
  %cmp3.i12.i = icmp slt i32 %126, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %126 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %77, i64 %indvars.iv.i10.i, i32 1
  %127 = load i32, i32* %extent.i15.i, align 4, !tbaa !189
  %sub.i16.i = add nsw i32 %127, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !220

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i, %middle.block105
  %index.1.i21.i.lcssa = phi i64 [ %bin.rdx126, %middle.block105 ], [ %index.1.i21.i, %if.end.i24.i ]
  %add8.i.i = add nsw i64 %index.1.i.i.lcssa, 1
  %sub.i694.1 = sub nsw i64 %add8.i.i, %index.1.i21.i.lcssa
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit
  %add8.i27.i = phi i64 [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge ], [ %add8.i.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i694.phi = phi i64 [ %sub.i694.0, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit705._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge ], [ %sub.i694.1, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %128 = load i8, i8* %bits.i, align 1, !tbaa !144
  %conv.i.i696 = zext i8 %128 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i696, 7
  %div.i.i697 = lshr i64 %add.i4.i, 3
  %mul.i698 = mul i64 %div.i.i697, %sub.i694.phi
  %129 = trunc i64 %mul.i698 to i32
  %130 = add i32 %129, 7
  %131 = and i32 %130, 7
  %conv204 = xor i32 %131, 7
  %conv205 = zext i32 %conv204 to i64
  %add206 = add i64 %mul.i698, %conv205
  %tobool207.not = icmp ult i64 %add206, 4294967296
  br i1 %tobool207.not, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687, label %cleanup278.thread

cleanup278.thread:                                ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6.40, i64 0, i64 0)) #14
  call void @llvm.lifetime.end.p0i8(i64 129, i8* nonnull %75) #11
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %55) #11
  br label %cleanup433

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687: ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %132 = icmp sgt i32 %76, 2
  %spec.store.select = select i1 %132, i32 %76, i32 2
  %133 = bitcast [8 x i32]* %tags to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %133) #11
  %arrayinit.begin = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 0
  store i32 14, i32* %arrayinit.begin, align 4, !tbaa !41
  %arrayinit.element = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 1
  %add214 = shl i32 %spec.store.select, 2
  %and215 = add i32 %add214, 4
  %mul216 = and i32 %and215, -8
  %add217 = add i32 %and, 40
  %add218 = add i32 %add217, %mul216
  %add220 = add i32 %add218, %129
  %add221 = add i32 %add220, %conv204
  store i32 %add221, i32* %arrayinit.element, align 4, !tbaa !41
  %arrayinit.element222 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 2
  %134 = bitcast i32* %arrayinit.element222 to <2 x i32>*
  store <2 x i32> <i32 6, i32 8>, <2 x i32>* %134, align 4, !tbaa !41
  %arrayinit.element224 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 4
  %idxprom225 = sext i32 %type_code to i64
  %arrayidx226 = getelementptr inbounds [10 x i8], [10 x i8]* @_ZN6Halide7Runtime8Internal31pixel_type_to_matlab_class_codeE, i64 0, i64 %idxprom225
  %135 = load i8, i8* %arrayidx226, align 1, !tbaa !18
  %conv227 = zext i8 %135 to i32
  store i32 %conv227, i32* %arrayinit.element224, align 4, !tbaa !41
  %arrayinit.element228 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 5
  %136 = bitcast i32* %arrayinit.element228 to <2 x i32>*
  store <2 x i32> <i32 1, i32 5>, <2 x i32>* %136, align 4, !tbaa !41
  %arrayinit.element230 = getelementptr inbounds [8 x i32], [8 x i32]* %tags, i64 0, i64 7
  store i32 %add214, i32* %arrayinit.element230, align 4, !tbaa !41
  %call.i683 = call i64 @fwrite(i8* nonnull %133, i64 32, i64 1, i8* nonnull %call.i598) #14
  %cmp.i684.not = icmp eq i64 %call.i683, 0
  br i1 %cmp.i684.not, label %cleanup278, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687
  %137 = bitcast [4 x i32]* %extents to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137) #11
  %arrayinit.begin235 = getelementptr inbounds [4 x i32], [4 x i32]* %extents, i64 0, i64 0
  %138 = load i32, i32* %extent.i, align 4, !tbaa !189
  store i32 %138, i32* %arrayinit.begin235, align 4, !tbaa !41
  %arrayinit.element238 = getelementptr inbounds [4 x i32], [4 x i32]* %extents, i64 0, i64 1
  %139 = load i32, i32* %extent.i.1, align 4, !tbaa !189
  store i32 %139, i32* %arrayinit.element238, align 4, !tbaa !41
  %arrayinit.element241 = getelementptr inbounds [4 x i32], [4 x i32]* %extents, i64 0, i64 2
  %140 = load i32, i32* %extent.i.2, align 4, !tbaa !189
  store i32 %140, i32* %arrayinit.element241, align 4, !tbaa !41
  %arrayinit.element244 = getelementptr inbounds [4 x i32], [4 x i32]* %extents, i64 0, i64 3
  %141 = load i32, i32* %extent.i.3, align 4, !tbaa !189
  store i32 %141, i32* %arrayinit.element244, align 4, !tbaa !41
  %conv248 = sext i32 %mul216 to i64
  %call.i672 = call i64 @fwrite(i8* nonnull %137, i64 %conv248, i64 1, i8* nonnull %call.i598) #14
  %cmp.i673.not = icmp eq i64 %call.i672, 0
  br i1 %cmp.i673.not, label %cleanup274, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676
  %142 = bitcast [2 x i32]* %name_header to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #11
  %arrayinit.begin252 = getelementptr inbounds [2 x i32], [2 x i32]* %name_header, i64 0, i64 0
  store i32 1, i32* %arrayinit.begin252, align 4, !tbaa !41
  %arrayinit.element253 = getelementptr inbounds [2 x i32], [2 x i32]* %name_header, i64 0, i64 1
  store i32 %conv184, i32* %arrayinit.element253, align 4, !tbaa !41
  %call.i660 = call i64 @fwrite(i8* nonnull %142, i64 8, i64 1, i8* nonnull %call.i598) #14
  %cmp.i661.not = icmp eq i64 %call.i660, 0
  br i1 %cmp.i661.not, label %cleanup273, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664
  %conv258 = zext i32 %and to i64
  %call.i648 = call i64 @fwrite(i8* nonnull %55, i64 %conv258, i64 1, i8* nonnull %call.i598) #14
  %cmp.i649.not = icmp eq i64 %call.i648, 0
  br i1 %cmp.i649.not, label %cleanup273, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642: ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652
  %143 = bitcast [2 x i32]* %payload_header to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #11
  %arrayinit.begin262 = getelementptr inbounds [2 x i32], [2 x i32]* %payload_header, i64 0, i64 0
  %arrayidx264 = getelementptr inbounds [10 x i8], [10 x i8]* @_ZN6Halide7Runtime8Internal30pixel_type_to_matlab_type_codeE, i64 0, i64 %idxprom225
  %144 = load i8, i8* %arrayidx264, align 1, !tbaa !18
  %conv265 = zext i8 %144 to i32
  store i32 %conv265, i32* %arrayinit.begin262, align 4, !tbaa !41
  %arrayinit.element266 = getelementptr inbounds [2 x i32], [2 x i32]* %payload_header, i64 0, i64 1
  store i32 %129, i32* %arrayinit.element266, align 4, !tbaa !41
  %call.i638 = call i64 @fwrite(i8* nonnull %143, i64 8, i64 1, i8* nonnull %call.i598) #14
  %cmp.i639.not = icmp eq i64 %call.i638, 0
  %cleanup.dest.slot.5 = zext i1 %cmp.i639.not to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #11
  br label %cleanup273

cleanup273:                                       ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664
  %cleanup.dest.slot.6 = phi i32 [ %cleanup.dest.slot.5, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642 ], [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664 ], [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652 ]
  %retval.6 = phi i32 [ -11, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit642 ], [ -9, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit664 ], [ -10, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit652 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #11
  br label %cleanup274

cleanup274:                                       ; preds = %cleanup273, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676
  %cleanup.dest.slot.7 = phi i32 [ %cleanup.dest.slot.6, %cleanup273 ], [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676 ]
  %retval.7 = phi i32 [ %retval.6, %cleanup273 ], [ -8, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit676 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137) #11
  br label %cleanup278

cleanup278:                                       ; preds = %cleanup274, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687
  %cleanup.dest.slot.8 = phi i32 [ %cleanup.dest.slot.7, %cleanup274 ], [ 1, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687 ]
  %retval.8 = phi i32 [ %retval.7, %cleanup274 ], [ -7, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit687 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %133) #11
  call void @llvm.lifetime.end.p0i8(i64 129, i8* nonnull %75) #11
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %55) #11
  %cond442 = icmp eq i32 %cleanup.dest.slot.8, 0
  br i1 %cond442, label %if.end311, label %cleanup433

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631: ; preds = %if.else164
  %145 = bitcast [5 x i32]* %header289 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %145) #11
  %arrayinit.begin290 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 0
  %146 = load i32, i32* %extent.i, align 4, !tbaa !189
  store i32 %146, i32* %arrayinit.begin290, align 4, !tbaa !41
  %arrayinit.element293 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 1
  %147 = load i32, i32* %extent.i.1, align 4, !tbaa !189
  store i32 %147, i32* %arrayinit.element293, align 4, !tbaa !41
  %arrayinit.element296 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 2
  %148 = load i32, i32* %extent.i.2, align 4, !tbaa !189
  store i32 %148, i32* %arrayinit.element296, align 4, !tbaa !41
  %arrayinit.element299 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 3
  %149 = load i32, i32* %extent.i.3, align 4, !tbaa !189
  store i32 %149, i32* %arrayinit.element299, align 4, !tbaa !41
  %arrayinit.element302 = getelementptr inbounds [5 x i32], [5 x i32]* %header289, i64 0, i64 4
  store i32 %type_code, i32* %arrayinit.element302, align 4, !tbaa !41
  %call.i627 = call i64 @fwrite(i8* nonnull %145, i64 20, i64 1, i8* nonnull %call.i598) #14
  %cmp.i628.not = icmp eq i64 %call.i627, 0
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %145) #11
  br i1 %cmp.i628.not, label %cleanup433, label %if.end311

if.end311:                                        ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631, %cleanup278, %cleanup154.thread
  %final_padding_bytes.0 = phi i32 [ %conv204, %cleanup278 ], [ 0, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631 ], [ 0, %cleanup154.thread ]
  %150 = getelementptr inbounds [4096 x i8], [4096 x i8]* %temp, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %150) #11
  %div = udiv i32 4096, %div.i
  %151 = load i32, i32* %extent.i.3, align 4, !tbaa !189
  %cmp320856 = icmp sgt i32 %151, 0
  br i1 %cmp320856, label %for.body322.lr.ph, label %if.end412

for.body322.lr.ph:                                ; preds = %if.end311
  %152 = load i32, i32* %min.i.3, align 16, !tbaa !221
  %153 = bitcast [4 x i32]* %idx to i8*
  %arrayinit.begin357 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 0
  %arrayinit.element358 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 1
  %arrayinit.element359 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 2
  %arrayinit.element360 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 3
  %dim.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %conv368 = zext i32 %div.i to i64
  %mul373 = mul nuw nsw i32 %div, %div.i
  %conv374 = zext i32 %mul373 to i64
  %.pre891 = load i32, i32* %min.i.2, align 16, !tbaa !221
  %.pre892 = load i32, i32* %extent.i.2, align 4, !tbaa !189
  %.pre893 = load i32, i32* %min.i.1, align 16
  %.pre894 = load i32, i32* %extent.i.1, align 4
  %.pre = load i32, i32* %extent.i, align 4
  %154 = load i32, i32* %min.i, align 16
  %155 = load i32, i32* %extent.i, align 4
  %156 = load i32, i32* %min.i, align 16
  %add352 = add nsw i32 %156, %155
  %.pre15 = load i32, i32* %extent.i.1, align 4
  %.pre16 = load i32, i32* %min.i.1, align 16
  %.pre896 = load i32, i32* %extent.i.2, align 4
  %.pre897 = load i32, i32* %min.i.2, align 16
  %.pre898 = load i32, i32* %extent.i.3, align 4
  %.pre899 = load i32, i32* %min.i.3, align 16
  br label %for.body322

for.body322:                                      ; preds = %for.inc399, %for.body322.lr.ph
  %157 = phi i32 [ %152, %for.body322.lr.ph ], [ %218, %for.inc399 ]
  %158 = phi i32 [ %151, %for.body322.lr.ph ], [ %219, %for.inc399 ]
  %159 = phi i32 [ %.pre891, %for.body322.lr.ph ], [ %220, %for.inc399 ]
  %160 = phi i32 [ %.pre892, %for.body322.lr.ph ], [ %221, %for.inc399 ]
  %161 = phi i32 [ %.pre892, %for.body322.lr.ph ], [ %222, %for.inc399 ]
  %162 = phi i32 [ %.pre891, %for.body322.lr.ph ], [ %223, %for.inc399 ]
  %dim3.0858 = phi i32 [ %152, %for.body322.lr.ph ], [ %inc400, %for.inc399 ]
  %counter.0857 = phi i32 [ 0, %for.body322.lr.ph ], [ %counter.1.lcssa, %for.inc399 ]
  %cmp331848 = icmp sgt i32 %161, 0
  br i1 %cmp331848, label %for.body333, label %for.inc399

for.body333:                                      ; preds = %for.body322, %for.inc394
  %163 = phi i32 [ %212, %for.inc394 ], [ %.pre893, %for.body322 ]
  %164 = phi i32 [ %213, %for.inc394 ], [ %.pre894, %for.body322 ]
  %165 = phi i32 [ %214, %for.inc394 ], [ %159, %for.body322 ]
  %166 = phi i32 [ %215, %for.inc394 ], [ %160, %for.body322 ]
  %167 = phi i32 [ %216, %for.inc394 ], [ %.pre894, %for.body322 ]
  %168 = phi i32 [ %217, %for.inc394 ], [ %.pre893, %for.body322 ]
  %dim2.0850 = phi i32 [ %inc395, %for.inc394 ], [ %162, %for.body322 ]
  %counter.1849 = phi i32 [ %counter.2.lcssa, %for.inc394 ], [ %counter.0857, %for.body322 ]
  %cmp342839 = icmp sgt i32 %167, 0
  br i1 %cmp342839, label %for.body344, label %for.inc394

for.body344:                                      ; preds = %for.body333, %for.inc389
  %169 = phi i32 [ %209, %for.inc389 ], [ %163, %for.body333 ]
  %170 = phi i32 [ %210, %for.inc389 ], [ %164, %for.body333 ]
  %171 = phi i32 [ %211, %for.inc389 ], [ %.pre, %for.body333 ]
  %dim1.0841 = phi i32 [ %inc390, %for.inc389 ], [ %168, %for.body333 ]
  %counter.2840 = phi i32 [ %counter.6797, %for.inc389 ], [ %counter.1849, %for.body333 ]
  %cmp353834 = icmp sgt i32 %171, 0
  br i1 %cmp353834, label %for.body355, label %for.inc389

for.body355:                                      ; preds = %for.body344, %for.inc384
  %dim0.0836 = phi i32 [ %inc385, %for.inc384 ], [ %154, %for.body344 ]
  %counter.3835 = phi i32 [ %counter.4, %for.inc384 ], [ %counter.2840, %for.body344 ]
  %inc356 = add nsw i32 %counter.3835, 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %153) #11
  store i32 %dim0.0836, i32* %arrayinit.begin357, align 4, !tbaa !41
  store i32 %dim1.0841, i32* %arrayinit.element358, align 4, !tbaa !41
  store i32 %dim2.0850, i32* %arrayinit.element359, align 4, !tbaa !41
  store i32 %dim3.0858, i32* %arrayinit.element360, align 4, !tbaa !41
  %172 = load i32, i32* %dimensions, align 4, !tbaa !183
  %cmp17.i = icmp sgt i32 %172, 0
  br i1 %cmp17.i, label %for.body.lr.ph.i, label %_ZNK15halide_buffer_t10address_ofEPKi.exit

for.body.lr.ph.i:                                 ; preds = %for.body355
  %173 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !184
  %wide.trip.count.i = zext i32 %172 to i64
  %stride.i621920 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %173, i64 0, i32 2
  %174 = load i32, i32* %stride.i621920, align 4, !tbaa !185
  %conv.i622921 = sext i32 %174 to i64
  %min.i623922 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %173, i64 0, i32 0
  %175 = load i32, i32* %min.i623922, align 4, !tbaa !221
  %sub.i923 = sub nsw i32 %dim0.0836, %175
  %conv7.i924 = sext i32 %sub.i923 to i64
  %mul.i925 = mul nsw i64 %conv7.i924, %conv.i622921
  %exitcond.not.i927 = icmp eq i32 %172, 1
  br i1 %exitcond.not.i927, label %_ZNK15halide_buffer_t10address_ofEPKi.exit, label %for.body.i.for.body.i_crit_edge.preheader, !llvm.loop !222

for.body.i.for.body.i_crit_edge.preheader:        ; preds = %for.body.lr.ph.i
  %stride.i62126 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %173, i64 1, i32 2
  %176 = load i32, i32* %stride.i62126, align 4, !tbaa !185
  %conv.i62227 = sext i32 %176 to i64
  %min.i62328 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %173, i64 1, i32 0
  %177 = load i32, i32* %min.i62328, align 4, !tbaa !221
  %sub.i29 = sub nsw i32 %dim1.0841, %177
  %conv7.i30 = sext i32 %sub.i29 to i64
  %mul.i31 = mul nsw i64 %conv7.i30, %conv.i62227
  %add.i62432 = add nsw i64 %mul.i31, %mul.i925
  %exitcond.not.i33 = icmp eq i32 %172, 2
  br i1 %exitcond.not.i33, label %_ZNK15halide_buffer_t10address_ofEPKi.exit, label %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph, !llvm.loop !222

for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph: ; preds = %for.body.i.for.body.i_crit_edge.preheader
  %178 = add nsw i64 %wide.trip.count.i, -2
  %min.iters.check131 = icmp ult i64 %178, 5
  br i1 %min.iters.check131, label %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader, label %vector.ph132

vector.ph132:                                     ; preds = %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph
  %n.mod.vf133 = and i64 %178, 3
  %179 = icmp eq i64 %n.mod.vf133, 0
  %180 = select i1 %179, i64 4, i64 %n.mod.vf133
  %n.vec134 = sub nsw i64 %178, %180
  %ind.end138 = add nsw i64 %n.vec134, 2
  %181 = insertelement <2 x i64> <i64 poison, i64 0>, i64 %add.i62432, i32 0
  br label %vector.body130

vector.body130:                                   ; preds = %vector.body130, %vector.ph132
  %index135 = phi i64 [ 0, %vector.ph132 ], [ %index.next136, %vector.body130 ]
  %vec.phi141 = phi <2 x i64> [ %181, %vector.ph132 ], [ %201, %vector.body130 ]
  %vec.phi142 = phi <2 x i64> [ zeroinitializer, %vector.ph132 ], [ %202, %vector.body130 ]
  %offset.idx140 = or i64 %index135, 2
  %182 = add i64 %offset.idx140, 2
  %183 = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 %offset.idx140
  %184 = bitcast i32* %183 to <2 x i32>*
  %wide.load143 = load <2 x i32>, <2 x i32>* %184, align 4, !tbaa !41
  %185 = getelementptr inbounds i32, i32* %183, i64 2
  %186 = bitcast i32* %185 to <2 x i32>*
  %wide.load144 = load <2 x i32>, <2 x i32>* %186, align 4, !tbaa !41
  %187 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %173, i64 %offset.idx140, i32 2
  %188 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %173, i64 %182, i32 2
  %189 = getelementptr inbounds i32, i32* %187, i64 -2
  %190 = bitcast i32* %189 to <8 x i32>*
  %191 = getelementptr inbounds i32, i32* %188, i64 -2
  %192 = bitcast i32* %191 to <8 x i32>*
  %wide.vec = load <8 x i32>, <8 x i32>* %190, align 4, !tbaa !41
  %wide.vec145 = load <8 x i32>, <8 x i32>* %192, align 4, !tbaa !41
  %strided.vec = shufflevector <8 x i32> %wide.vec, <8 x i32> poison, <2 x i32> <i32 0, i32 4>
  %strided.vec146 = shufflevector <8 x i32> %wide.vec145, <8 x i32> poison, <2 x i32> <i32 0, i32 4>
  %strided.vec147 = shufflevector <8 x i32> %wide.vec, <8 x i32> poison, <2 x i32> <i32 2, i32 6>
  %strided.vec148 = shufflevector <8 x i32> %wide.vec145, <8 x i32> poison, <2 x i32> <i32 2, i32 6>
  %193 = sext <2 x i32> %strided.vec147 to <2 x i64>
  %194 = sext <2 x i32> %strided.vec148 to <2 x i64>
  %195 = sub nsw <2 x i32> %wide.load143, %strided.vec
  %196 = sub nsw <2 x i32> %wide.load144, %strided.vec146
  %197 = sext <2 x i32> %195 to <2 x i64>
  %198 = sext <2 x i32> %196 to <2 x i64>
  %199 = mul nsw <2 x i64> %197, %193
  %200 = mul nsw <2 x i64> %198, %194
  %201 = add <2 x i64> %199, %vec.phi141
  %202 = add <2 x i64> %200, %vec.phi142
  %index.next136 = add i64 %index135, 4
  %203 = icmp eq i64 %index.next136, %n.vec134
  br i1 %203, label %middle.block128, label %vector.body130, !llvm.loop !223

middle.block128:                                  ; preds = %vector.body130
  %bin.rdx149 = add <2 x i64> %202, %201
  %204 = call i64 @llvm.vector.reduce.add.v2i64(<2 x i64> %bin.rdx149)
  br label %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader

for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader: ; preds = %middle.block128, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph
  %indvars.iv.next.i35.ph = phi i64 [ 2, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph ], [ %ind.end138, %middle.block128 ]
  %add.i62434.ph = phi i64 [ %add.i62432, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.lr.ph ], [ %204, %middle.block128 ]
  br label %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge

for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge: ; preds = %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge
  %indvars.iv.next.i35 = phi i64 [ %indvars.iv.next.i, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge ], [ %indvars.iv.next.i35.ph, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader ]
  %add.i62434 = phi i64 [ %add.i624, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge ], [ %add.i62434.ph, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge.preheader ]
  %arrayidx3.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds [4 x i32], [4 x i32]* %idx, i64 0, i64 %indvars.iv.next.i35
  %.pre895.pre = load i32, i32* %arrayidx3.i.phi.trans.insert.phi.trans.insert, align 4, !tbaa !41
  %stride.i621 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %173, i64 %indvars.iv.next.i35, i32 2
  %205 = load i32, i32* %stride.i621, align 4, !tbaa !185
  %conv.i622 = sext i32 %205 to i64
  %min.i623 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %173, i64 %indvars.iv.next.i35, i32 0
  %206 = load i32, i32* %min.i623, align 4, !tbaa !221
  %sub.i = sub nsw i32 %.pre895.pre, %206
  %conv7.i = sext i32 %sub.i to i64
  %mul.i = mul nsw i64 %conv7.i, %conv.i622
  %add.i624 = add nsw i64 %mul.i, %add.i62434
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.next.i35, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %_ZNK15halide_buffer_t10address_ofEPKi.exit, label %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge, !llvm.loop !224

_ZNK15halide_buffer_t10address_ofEPKi.exit:       ; preds = %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge, %for.body.i.for.body.i_crit_edge.preheader, %for.body.lr.ph.i, %for.body355
  %index.0.lcssa.i = phi i64 [ 0, %for.body355 ], [ %mul.i925, %for.body.lr.ph.i ], [ %add.i62432, %for.body.i.for.body.i_crit_edge.preheader ], [ %add.i624, %for.body.i.for.body.i_crit_edge.for.body.i.for.body.i_crit_edge_crit_edge ]
  %207 = load i8*, i8** %host.i, align 8, !tbaa !180
  %208 = load i8, i8* %bits.i, align 1, !tbaa !144
  %conv.i.i = zext i8 %208 to i64
  %add.i.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i.i, 3
  %mul9.i = mul nsw i64 %div.i.i, %index.0.lcssa.i
  %add.ptr.i = getelementptr inbounds i8, i8* %207, i64 %mul9.i
  %mul366 = mul nsw i32 %counter.3835, %div.i
  %idx.ext = sext i32 %mul366 to i64
  %add.ptr367 = getelementptr inbounds [4096 x i8], [4096 x i8]* %temp, i64 0, i64 %idx.ext
  %call369 = call i8* @memcpy(i8* nonnull %add.ptr367, i8* %add.ptr.i, i64 %conv368) #14
  %cmp370 = icmp eq i32 %inc356, %div
  br i1 %cmp370, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619, label %for.inc384

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619: ; preds = %_ZNK15halide_buffer_t10address_ofEPKi.exit
  %call.i615 = call i64 @fwrite(i8* nonnull %150, i64 %conv374, i64 1, i8* nonnull %call.i598) #14
  %cmp.i616.not = icmp eq i64 %call.i615, 0
  br i1 %cmp.i616.not, label %cleanup425.loopexit, label %for.inc384

for.inc384:                                       ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619, %_ZNK15halide_buffer_t10address_ofEPKi.exit
  %counter.4 = phi i32 [ 0, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619 ], [ %inc356, %_ZNK15halide_buffer_t10address_ofEPKi.exit ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %153) #11
  %inc385 = add nsw i32 %dim0.0836, 1
  %cmp353 = icmp slt i32 %inc385, %add352
  br i1 %cmp353, label %for.body355, label %for.inc389, !llvm.loop !225

for.inc389:                                       ; preds = %for.inc384, %for.body344
  %209 = phi i32 [ %169, %for.body344 ], [ %.pre16, %for.inc384 ]
  %210 = phi i32 [ %170, %for.body344 ], [ %.pre15, %for.inc384 ]
  %211 = phi i32 [ %171, %for.body344 ], [ %155, %for.inc384 ]
  %counter.6797 = phi i32 [ %counter.2840, %for.body344 ], [ %counter.4, %for.inc384 ]
  %inc390 = add nsw i32 %dim1.0841, 1
  %add341 = add nsw i32 %209, %210
  %cmp342 = icmp slt i32 %inc390, %add341
  br i1 %cmp342, label %for.body344, label %for.inc394, !llvm.loop !226

for.inc394:                                       ; preds = %for.inc389, %for.body333
  %212 = phi i32 [ %163, %for.body333 ], [ %209, %for.inc389 ]
  %213 = phi i32 [ %164, %for.body333 ], [ %210, %for.inc389 ]
  %214 = phi i32 [ %165, %for.body333 ], [ %.pre897, %for.inc389 ]
  %215 = phi i32 [ %166, %for.body333 ], [ %.pre896, %for.inc389 ]
  %216 = phi i32 [ %167, %for.body333 ], [ %210, %for.inc389 ]
  %217 = phi i32 [ %168, %for.body333 ], [ %209, %for.inc389 ]
  %counter.2.lcssa = phi i32 [ %counter.1849, %for.body333 ], [ %counter.6797, %for.inc389 ]
  %inc395 = add nsw i32 %dim2.0850, 1
  %add330 = add nsw i32 %215, %214
  %cmp331 = icmp slt i32 %inc395, %add330
  br i1 %cmp331, label %for.body333, label %for.inc399, !llvm.loop !227

for.inc399:                                       ; preds = %for.inc394, %for.body322
  %218 = phi i32 [ %157, %for.body322 ], [ %.pre899, %for.inc394 ]
  %219 = phi i32 [ %158, %for.body322 ], [ %.pre898, %for.inc394 ]
  %220 = phi i32 [ %159, %for.body322 ], [ %214, %for.inc394 ]
  %221 = phi i32 [ %160, %for.body322 ], [ %215, %for.inc394 ]
  %222 = phi i32 [ %161, %for.body322 ], [ %215, %for.inc394 ]
  %223 = phi i32 [ %162, %for.body322 ], [ %214, %for.inc394 ]
  %counter.1.lcssa = phi i32 [ %counter.0857, %for.body322 ], [ %counter.2.lcssa, %for.inc394 ]
  %inc400 = add nsw i32 %dim3.0858, 1
  %add319 = add nsw i32 %219, %218
  %cmp320 = icmp slt i32 %inc400, %add319
  br i1 %cmp320, label %for.body322, label %for.end403, !llvm.loop !228

for.end403:                                       ; preds = %for.inc399
  %cmp404 = icmp sgt i32 %counter.1.lcssa, 0
  br i1 %cmp404, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612, label %if.end412

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612: ; preds = %for.end403
  %mul407 = mul nsw i32 %counter.1.lcssa, %div.i
  %conv408 = sext i32 %mul407 to i64
  %call.i608 = call i64 @fwrite(i8* nonnull %150, i64 %conv408, i64 1, i8* nonnull %call.i598) #14
  %cmp.i609.not = icmp eq i64 %call.i608, 0
  br i1 %cmp.i609.not, label %cleanup425, label %if.end412

if.end412:                                        ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612, %for.end403, %if.end311
  %224 = bitcast i64* %zero to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #11
  store i64 0, i64* %zero, align 8, !tbaa !22
  %tobool413.not = icmp eq i32 %final_padding_bytes.0, 0
  br i1 %tobool413.not, label %if.end423, label %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit

_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit: ; preds = %if.end412
  %conv415 = zext i32 %final_padding_bytes.0 to i64
  %call.i604 = call i64 @fwrite(i8* nonnull %224, i64 %conv415, i64 1, i8* nonnull %call.i598) #14
  %cmp.i605.not = icmp eq i64 %call.i604, 0
  br i1 %cmp.i605.not, label %cleanup424, label %if.end423

if.end423:                                        ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit, %if.end412
  br label %cleanup424

cleanup424:                                       ; preds = %if.end423, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit
  %retval.21 = phi i32 [ 0, %if.end423 ], [ -16, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #11
  br label %cleanup425

cleanup425.loopexit:                              ; preds = %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit619
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %153) #11
  br label %cleanup425

cleanup425:                                       ; preds = %cleanup425.loopexit, %cleanup424, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612
  %retval.22 = phi i32 [ %retval.21, %cleanup424 ], [ -14, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit612 ], [ -13, %cleanup425.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %150) #11
  br label %cleanup433

cleanup433:                                       ; preds = %cleanup425, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631, %cleanup278, %cleanup278.thread, %cleanup154
  %retval.23 = phi i32 [ %retval.22, %cleanup425 ], [ %retval.4, %cleanup154 ], [ %retval.8, %cleanup278 ], [ -12, %_ZN6Halide7Runtime8Internal10ScopedFile5writeEPKvm.exit631 ], [ -6, %cleanup278.thread ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #11
  %call.i = call i32 @fclose(i8* nonnull %call.i598) #14
  br label %return

return:                                           ; preds = %cleanup433, %if.end6, %if.end2, %if.then1, %if.then
  %retval.26 = phi i32 [ -1, %if.then ], [ -1, %if.then1 ], [ %call3, %if.end2 ], [ %retval.23, %cleanup433 ], [ -2, %if.end6 ]
  ret i32 %retval.26
}

declare i64 @fwrite(i8*, i64, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define weak void @halide_cache_cleanup() #0 {
entry:
  tail call void @halide_memoization_cache_cleanup() #15
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_memoization_cache_cleanup() local_unnamed_addr #0 {
entry:
  br label %for.body

for.cond.cleanup:                                 ; preds = %while.end
  store i64 0, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !22
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !14
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !14
  ret void

for.body:                                         ; preds = %while.end, %entry
  %__begin1.018 = phi %"struct.Halide::Runtime::Internal::CacheEntry"** [ getelementptr inbounds ([256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 0), %entry ], [ %incdec.ptr, %while.end ]
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.018, align 8, !tbaa !14
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.018, align 8, !tbaa !14
  %cmp2.not16 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null
  br i1 %cmp2.not16, label %while.end, label %while.body

while.body:                                       ; preds = %for.body, %while.body
  %entry1.017 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %1, %while.body ], [ %0, %for.body ]
  %next3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.017, i64 0, i32 0
  %1 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next3, align 8, !tbaa !229
  tail call void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %entry1.017) #15
  %2 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.017 to i8*
  tail call void @halide_free(i8* null, i8* nonnull %2) #14
  %cmp2.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %1, null
  br i1 %cmp2.not, label %while.end, label %while.body, !llvm.loop !231

while.end:                                        ; preds = %while.body, %for.body
  %incdec.ptr = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.018, i64 1
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"** %incdec.ptr, getelementptr inbounds ([256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 1, i64 0)
  br i1 %cmp.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %this) local_unnamed_addr #0 align 2 {
entry:
  %tuple_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 8
  %0 = load i32, i32* %tuple_count, align 8, !tbaa !232
  %cmp11.not = icmp eq i32 %0, 0
  br i1 %cmp11.not, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %buf = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 11
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %metadata_storage = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 3
  %1 = load i8*, i8** %metadata_storage, align 8, !tbaa !233
  tail call void @halide_free(i8* null, i8* %1) #14
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %2 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !234
  %arrayidx = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %2, i64 %indvars.iv
  %call = tail call i32 @halide_device_free(i8* null, %struct.halide_buffer_t* %arrayidx) #14
  %3 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !234
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %3, i64 %indvars.iv, i32 2
  %4 = load i8*, i8** %host, align 8, !tbaa !180
  %call6 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %4) #15
  %5 = bitcast %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call6 to i8*
  tail call void @halide_free(i8* null, i8* %5) #14
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %6 = load i32, i32* %tuple_count, align 8, !tbaa !232
  %7 = zext i32 %6 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %7
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !235
}

; Function Attrs: nounwind willreturn mustprogress
define linkonce %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %host) local_unnamed_addr #2 {
entry:
  %add.ptr = getelementptr inbounds i8, i8* %host, i64 -32
  %0 = bitcast i8* %add.ptr to %"struct.Halide::Runtime::Internal::CacheBlockHeader"*
  ret %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %0
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal18copy_memory_helperERKNS1_11device_copyEixx(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i32 %d, i64 %src_off, i64 %dst_off) local_unnamed_addr #0 {
entry:
  %cmp41 = icmp sgt i32 %d, -1
  br i1 %cmp41, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %entry, %while.body
  %d.addr.042 = phi i32 [ %dec, %while.body ], [ %d, %entry ]
  %idxprom36 = zext i32 %d.addr.042 to i64
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 3, i64 %idxprom36
  %0 = load i64, i64* %arrayidx, align 8, !tbaa !22
  %cmp1 = icmp eq i64 %0, 1
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %dec = add nsw i32 %d.addr.042, -1
  %cmp = icmp sgt i32 %d.addr.042, 0
  br i1 %cmp, label %land.rhs, label %if.then, !llvm.loop !236

while.end:                                        ; preds = %land.rhs, %entry
  %d.addr.0.lcssa = phi i32 [ %d, %entry ], [ %d.addr.042, %land.rhs ]
  %cmp2 = icmp eq i32 %d.addr.0.lcssa, -1
  br i1 %cmp2, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %while.end
  %idxprom5 = sext i32 %d.addr.0.lcssa to i64
  %arrayidx6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 3, i64 %idxprom5
  %1 = load i64, i64* %arrayidx6, align 8, !tbaa !22
  %cmp737.not = icmp eq i64 %1, 0
  br i1 %cmp737.not, label %if.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %sub = add nsw i32 %d.addr.0.lcssa, -1
  %arrayidx9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 4, i64 %idxprom5
  %arrayidx12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 5, i64 %idxprom5
  %inc.0 = add nuw i64 0, 1
  br label %for.body

if.then:                                          ; preds = %while.body, %while.end
  %src = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 0
  %2 = load i64, i64* %src, align 8, !tbaa !237
  %add = add i64 %2, %src_off
  %3 = inttoptr i64 %add to i8*
  %dst = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 1
  %4 = load i64, i64* %dst, align 8, !tbaa !239
  %add3 = add i64 %4, %dst_off
  %5 = inttoptr i64 %add3 to i8*
  %chunk_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 6
  %6 = load i64, i64* %chunk_size, align 8, !tbaa !240
  %call = tail call i8* @memcpy(i8* %5, i8* %3, i64 %6) #14
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %inc.phi = phi i64 [ %inc.0, %for.body.lr.ph ], [ %inc.1, %for.body.for.body_crit_edge ]
  %src_off.addr.039 = phi i64 [ %src_off, %for.body.lr.ph ], [ %add10, %for.body.for.body_crit_edge ]
  %dst_off.addr.038 = phi i64 [ %dst_off, %for.body.lr.ph ], [ %add13, %for.body.for.body_crit_edge ]
  tail call void @_ZN6Halide7Runtime8Internal18copy_memory_helperERKNS1_11device_copyEixx(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i32 %sub, i64 %src_off.addr.039, i64 %dst_off.addr.038) #15
  %7 = load i64, i64* %arrayidx9, align 8, !tbaa !22
  %add10 = add i64 %7, %src_off.addr.039
  %8 = load i64, i64* %arrayidx12, align 8, !tbaa !22
  %add13 = add i64 %8, %dst_off.addr.038
  %9 = load i64, i64* %arrayidx6, align 8, !tbaa !22
  %cmp7 = icmp ult i64 %inc.phi, %9
  br i1 %cmp7, label %for.body.for.body_crit_edge, label %if.end, !llvm.loop !241

for.body.for.body_crit_edge:                      ; preds = %for.body
  %inc.1 = add nuw i64 %inc.phi, 1
  br label %for.body

if.end:                                           ; preds = %for.body, %if.then, %for.cond.preheader
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal11copy_memoryERKNS1_11device_copyEPv(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i8* %user_context) local_unnamed_addr #0 {
entry:
  %src = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 0
  %0 = load i64, i64* %src, align 8, !tbaa !237
  %dst = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 1
  %1 = load i64, i64* %dst, align 8, !tbaa !239
  %cmp.not = icmp eq i64 %0, %1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %src_begin = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %copy, i64 0, i32 2
  %2 = load i64, i64* %src_begin, align 8, !tbaa !242
  tail call void @_ZN6Halide7Runtime8Internal18copy_memory_helperERKNS1_11device_copyEixx(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %copy, i32 15, i64 %2, i64 0) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal16make_buffer_copyEPK15halide_buffer_tbS4_b(%"struct.Halide::Runtime::Internal::device_copy"* noalias sret(%"struct.Halide::Runtime::Internal::device_copy") align 8 %agg.result, %struct.halide_buffer_t* %src, i1 zeroext %src_host, %struct.halide_buffer_t* %dst, i1 zeroext %dst_host) local_unnamed_addr #0 {
entry:
  %c = alloca %"struct.Halide::Runtime::Internal::device_copy", align 8
  %0 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %c to i8*
  call void @llvm.lifetime.start.p0i8(i64 416, i8* nonnull %0) #11
  br i1 %src_host, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 2
  %1 = load i8*, i8** %host, align 8, !tbaa !180
  %2 = ptrtoint i8* %1 to i64
  br label %cond.end

cond.false:                                       ; preds = %entry
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %3 = load i64, i64* %device, align 8, !tbaa !182
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ]
  %src2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 0
  store i64 %cond, i64* %src2, align 8, !tbaa !237
  br i1 %dst_host, label %cond.true4, label %cond.false6

cond.true4:                                       ; preds = %cond.end
  %host5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 2
  %4 = load i8*, i8** %host5, align 8, !tbaa !180
  %5 = ptrtoint i8* %4 to i64
  br label %cond.end8

cond.false6:                                      ; preds = %cond.end
  %device7 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  %6 = load i64, i64* %device7, align 8, !tbaa !182
  br label %cond.end8

cond.end8:                                        ; preds = %cond.false6, %cond.true4
  %cond9 = phi i64 [ %5, %cond.true4 ], [ %6, %cond.false6 ]
  %dst10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 1
  store i64 %cond9, i64* %dst10, align 8, !tbaa !239
  %bits.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 4, i32 1
  %7 = load i8, i8* %bits.i, align 1, !tbaa !144
  %conv.i = zext i8 %7 to i32
  %add.i = add nuw nsw i32 %conv.i, 7
  %div.i = lshr i32 %add.i, 3
  %conv = zext i32 %div.i to i64
  %chunk_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 6
  store i64 %conv, i64* %chunk_size, align 8, !tbaa !240
  %arrayidx = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 0
  %arrayidx12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 0
  %arrayidx14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 0
  %arrayidx.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 1
  %8 = bitcast i64* %arrayidx to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %8, align 8, !tbaa !22
  %arrayidx12.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 1
  %9 = bitcast i64* %arrayidx12 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %9, align 8, !tbaa !22
  %arrayidx14.1 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 1
  %10 = bitcast i64* %arrayidx14 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %10, align 8, !tbaa !22
  %arrayidx.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 2
  %arrayidx12.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 2
  %arrayidx14.2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 2
  %arrayidx.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 3
  %11 = bitcast i64* %arrayidx.2 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %11, align 8, !tbaa !22
  %arrayidx12.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 3
  %12 = bitcast i64* %arrayidx12.2 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %12, align 8, !tbaa !22
  %arrayidx14.3 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 3
  %13 = bitcast i64* %arrayidx14.2 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %13, align 8, !tbaa !22
  %arrayidx.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 4
  %arrayidx12.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 4
  %arrayidx14.4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 4
  %arrayidx.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 5
  %14 = bitcast i64* %arrayidx.4 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %14, align 8, !tbaa !22
  %arrayidx12.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 5
  %15 = bitcast i64* %arrayidx12.4 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %15, align 8, !tbaa !22
  %arrayidx14.5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 5
  %16 = bitcast i64* %arrayidx14.4 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %16, align 8, !tbaa !22
  %arrayidx.6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 6
  %arrayidx12.6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 6
  %arrayidx14.6 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 6
  %arrayidx.7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 7
  %17 = bitcast i64* %arrayidx.6 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %17, align 8, !tbaa !22
  %arrayidx12.7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 7
  %18 = bitcast i64* %arrayidx12.6 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %18, align 8, !tbaa !22
  %arrayidx14.7 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 7
  %19 = bitcast i64* %arrayidx14.6 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %19, align 8, !tbaa !22
  %arrayidx.8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 8
  %arrayidx12.8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 8
  %arrayidx14.8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 8
  %arrayidx.9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 9
  %20 = bitcast i64* %arrayidx.8 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %20, align 8, !tbaa !22
  %arrayidx12.9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 9
  %21 = bitcast i64* %arrayidx12.8 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %21, align 8, !tbaa !22
  %arrayidx14.9 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 9
  %22 = bitcast i64* %arrayidx14.8 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %22, align 8, !tbaa !22
  %arrayidx.10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 10
  %arrayidx12.10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 10
  %arrayidx14.10 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 10
  %arrayidx.11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 11
  %23 = bitcast i64* %arrayidx.10 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %23, align 8, !tbaa !22
  %arrayidx12.11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 11
  %24 = bitcast i64* %arrayidx12.10 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %24, align 8, !tbaa !22
  %arrayidx14.11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 11
  %25 = bitcast i64* %arrayidx14.10 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %25, align 8, !tbaa !22
  %arrayidx.12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 12
  %arrayidx12.12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 12
  %arrayidx14.12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 12
  %arrayidx.13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 13
  %26 = bitcast i64* %arrayidx.12 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %26, align 8, !tbaa !22
  %arrayidx12.13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 13
  %27 = bitcast i64* %arrayidx12.12 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %27, align 8, !tbaa !22
  %arrayidx14.13 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 13
  %28 = bitcast i64* %arrayidx14.12 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %28, align 8, !tbaa !22
  %arrayidx.14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 14
  %arrayidx12.14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 14
  %arrayidx14.14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 14
  %arrayidx.15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 15
  %29 = bitcast i64* %arrayidx.14 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %29, align 8, !tbaa !22
  %arrayidx12.15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 15
  %30 = bitcast i64* %arrayidx12.14 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %30, align 8, !tbaa !22
  %arrayidx14.15 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 15
  %31 = bitcast i64* %arrayidx14.14 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %31, align 8, !tbaa !22
  %src_begin = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 2
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 5
  %32 = load i32, i32* %dimensions, align 4, !tbaa !183
  %cmp17272 = icmp sgt i32 %32, 0
  br i1 %cmp17272, label %for.body19.lr.ph, label %cond.end8.for.cond.cleanup18_crit_edge

cond.end8.for.cond.cleanup18_crit_edge:           ; preds = %cond.end8
  %mul37.0 = mul i64 %conv, 0
  br label %for.cond.cleanup18

for.body19.lr.ph:                                 ; preds = %cond.end8
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 6
  %33 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !184
  %dim23 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 6
  %34 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim23, align 8, !tbaa !184
  %wide.trip.count = zext i32 %32 to i64
  %min.iters.check = icmp ult i32 %32, 5
  br i1 %min.iters.check, label %for.body19.preheader, label %vector.ph

for.body19.preheader:                             ; preds = %middle.block, %for.body19.lr.ph
  %indvars.iv284.ph = phi i64 [ 0, %for.body19.lr.ph ], [ %n.vec, %middle.block ]
  %.ph = phi i64 [ 0, %for.body19.lr.ph ], [ %61, %middle.block ]
  br label %for.body19

vector.ph:                                        ; preds = %for.body19.lr.ph
  %n.mod.vf = and i64 %wide.trip.count, 3
  %35 = icmp eq i64 %n.mod.vf, 0
  %36 = select i1 %35, i64 4, i64 %n.mod.vf
  %n.vec = sub nsw i64 %wide.trip.count, %36
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <2 x i64> [ zeroinitializer, %vector.ph ], [ %58, %vector.body ]
  %vec.phi2 = phi <2 x i64> [ zeroinitializer, %vector.ph ], [ %59, %vector.body ]
  %37 = or i64 %index, 2
  %38 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %33, i64 %index, i32 2
  %39 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %33, i64 %37, i32 2
  %40 = getelementptr inbounds i32, i32* %38, i64 -2
  %41 = bitcast i32* %40 to <8 x i32>*
  %42 = getelementptr inbounds i32, i32* %39, i64 -2
  %43 = bitcast i32* %42 to <8 x i32>*
  %wide.vec = load <8 x i32>, <8 x i32>* %41, align 4, !tbaa !41
  %wide.vec3 = load <8 x i32>, <8 x i32>* %43, align 4, !tbaa !41
  %strided.vec5 = shufflevector <8 x i32> %wide.vec, <8 x i32> poison, <2 x i32> <i32 2, i32 6>
  %strided.vec6 = shufflevector <8 x i32> %wide.vec3, <8 x i32> poison, <2 x i32> <i32 2, i32 6>
  %44 = sext <2 x i32> %strided.vec5 to <2 x i64>
  %45 = sext <2 x i32> %strided.vec6 to <2 x i64>
  %46 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %34, i64 %index, i32 0
  %47 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %34, i64 %37, i32 0
  %48 = bitcast i32* %46 to <8 x i32>*
  %49 = bitcast i32* %47 to <8 x i32>*
  %wide.vec7 = load <8 x i32>, <8 x i32>* %48, align 4, !tbaa !221
  %wide.vec8 = load <8 x i32>, <8 x i32>* %49, align 4, !tbaa !221
  %50 = sub nsw <8 x i32> %wide.vec7, %wide.vec
  %51 = shufflevector <8 x i32> %50, <8 x i32> undef, <2 x i32> <i32 0, i32 4>
  %52 = sub nsw <8 x i32> %wide.vec8, %wide.vec3
  %53 = shufflevector <8 x i32> %52, <8 x i32> undef, <2 x i32> <i32 0, i32 4>
  %54 = sext <2 x i32> %51 to <2 x i64>
  %55 = sext <2 x i32> %53 to <2 x i64>
  %56 = mul nsw <2 x i64> %54, %44
  %57 = mul nsw <2 x i64> %55, %45
  %58 = add <2 x i64> %56, %vec.phi
  %59 = add <2 x i64> %57, %vec.phi2
  %index.next = add i64 %index, 4
  %60 = icmp eq i64 %index.next, %n.vec
  br i1 %60, label %middle.block, label %vector.body, !llvm.loop !243

middle.block:                                     ; preds = %vector.body
  %bin.rdx = add <2 x i64> %59, %58
  %61 = call i64 @llvm.vector.reduce.add.v2i64(<2 x i64> %bin.rdx)
  br label %for.body19.preheader

for.cond.cleanup18:                               ; preds = %for.body19.for.cond.cleanup18_crit_edge, %cond.end8.for.cond.cleanup18_crit_edge
  %mul37.phi = phi i64 [ %mul37.0, %cond.end8.for.cond.cleanup18_crit_edge ], [ %mul37.1, %for.body19.for.cond.cleanup18_crit_edge ]
  store i64 %mul37.phi, i64* %src_begin, align 8, !tbaa !242
  %dimensions39 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 5
  %62 = load i32, i32* %dimensions39, align 4, !tbaa !183
  %cmp40.not = icmp eq i32 %32, %62
  br i1 %cmp40.not, label %lor.lhs.false, label %if.then

for.body19:                                       ; preds = %for.body19.preheader, %for.body19
  %indvars.iv284 = phi i64 [ %indvars.iv.next285, %for.body19 ], [ %indvars.iv284.ph, %for.body19.preheader ]
  %63 = phi i64 [ %add, %for.body19 ], [ %.ph, %for.body19.preheader ]
  %stride = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %33, i64 %indvars.iv284, i32 2
  %64 = load i32, i32* %stride, align 4, !tbaa !185
  %conv22 = sext i32 %64 to i64
  %min = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %34, i64 %indvars.iv284, i32 0
  %65 = load i32, i32* %min, align 4, !tbaa !221
  %min29 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %33, i64 %indvars.iv284, i32 0
  %66 = load i32, i32* %min29, align 4, !tbaa !221
  %sub = sub nsw i32 %65, %66
  %conv30 = sext i32 %sub to i64
  %mul = mul nsw i64 %conv30, %conv22
  %add = add i64 %mul, %63
  %indvars.iv.next285 = add nuw nsw i64 %indvars.iv284, 1
  %exitcond286.not = icmp eq i64 %indvars.iv.next285, %wide.trip.count
  br i1 %exitcond286.not, label %for.body19.for.cond.cleanup18_crit_edge, label %for.body19, !llvm.loop !244

for.body19.for.cond.cleanup18_crit_edge:          ; preds = %for.body19
  %mul37.1 = mul i64 %add, %conv
  br label %for.cond.cleanup18

lor.lhs.false:                                    ; preds = %for.cond.cleanup18
  %bits.i253 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 4, i32 1
  %67 = load i8, i8* %bits.i253, align 1, !tbaa !144
  %conv.i254 = zext i8 %67 to i32
  %add.i255 = add nuw nsw i32 %conv.i254, 7
  %div.i256 = lshr i32 %add.i255, 3
  %cmp45.not = icmp ne i32 %div.i, %div.i256
  %cmp48 = icmp sgt i32 %32, 16
  %or.cond261 = or i1 %cmp48, %cmp45.not
  br i1 %or.cond261, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.cond.cleanup18
  %68 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %agg.result to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(416) %68, i8 0, i64 416, i1 false)
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %cmp50 = icmp eq i32 %div.i, 0
  br i1 %cmp50, label %if.then51, label %for.cond54.preheader

for.cond54.preheader:                             ; preds = %if.end
  br i1 %cmp17272, label %for.body58.lr.ph, label %while.end

for.body58.lr.ph:                                 ; preds = %for.cond54.preheader
  %dim60 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 6
  %69 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim60, align 8, !tbaa !184
  %dim70 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 6
  %70 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim70, align 8, !tbaa !184
  %wide.trip.count282 = zext i32 %32 to i64
  br label %for.body58

if.then51:                                        ; preds = %if.end
  %71 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %agg.result to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(416) %71, i8 0, i64 416, i1 false)
  br label %cleanup

while.cond.preheader:                             ; preds = %for.cond.cleanup94
  %.pre = load i64, i64* %chunk_size, align 8, !tbaa !240
  %.pre290 = load i64, i64* %arrayidx12, align 8, !tbaa !22
  %cmp139263 = icmp eq i64 %.pre, %.pre290
  br i1 %cmp139263, label %land.rhs.lr.ph, label %while.end

land.rhs.lr.ph:                                   ; preds = %while.cond.preheader
  %.pre291 = load i64, i64* %arrayidx14, align 8, !tbaa !22
  %72 = bitcast i64* %arrayidx.1 to <2 x i64>*
  %73 = bitcast i64* %arrayidx to <2 x i64>*
  %74 = bitcast i64* %arrayidx12.1 to <2 x i64>*
  %75 = bitcast i64* %arrayidx12 to <2 x i64>*
  %76 = bitcast i64* %arrayidx14.1 to <2 x i64>*
  %77 = bitcast i64* %arrayidx14 to <2 x i64>*
  %78 = bitcast i64* %arrayidx.3 to <2 x i64>*
  %79 = bitcast i64* %arrayidx.2 to <2 x i64>*
  %80 = bitcast i64* %arrayidx12.3 to <2 x i64>*
  %81 = bitcast i64* %arrayidx12.2 to <2 x i64>*
  %82 = bitcast i64* %arrayidx14.3 to <2 x i64>*
  %83 = bitcast i64* %arrayidx14.2 to <2 x i64>*
  %84 = bitcast i64* %arrayidx.5 to <2 x i64>*
  %85 = bitcast i64* %arrayidx.4 to <2 x i64>*
  %86 = bitcast i64* %arrayidx12.5 to <2 x i64>*
  %87 = bitcast i64* %arrayidx12.4 to <2 x i64>*
  %88 = bitcast i64* %arrayidx14.5 to <2 x i64>*
  %89 = bitcast i64* %arrayidx14.4 to <2 x i64>*
  %90 = bitcast i64* %arrayidx.7 to <2 x i64>*
  %91 = bitcast i64* %arrayidx.6 to <2 x i64>*
  %92 = bitcast i64* %arrayidx12.7 to <2 x i64>*
  %93 = bitcast i64* %arrayidx12.6 to <2 x i64>*
  %94 = bitcast i64* %arrayidx14.7 to <2 x i64>*
  %95 = bitcast i64* %arrayidx14.6 to <2 x i64>*
  %96 = bitcast i64* %arrayidx.9 to <2 x i64>*
  %97 = bitcast i64* %arrayidx.8 to <2 x i64>*
  %98 = bitcast i64* %arrayidx12.9 to <2 x i64>*
  %99 = bitcast i64* %arrayidx12.8 to <2 x i64>*
  %100 = bitcast i64* %arrayidx14.9 to <2 x i64>*
  %101 = bitcast i64* %arrayidx14.8 to <2 x i64>*
  %102 = bitcast i64* %arrayidx.11 to <2 x i64>*
  %103 = bitcast i64* %arrayidx.10 to <2 x i64>*
  %104 = bitcast i64* %arrayidx12.11 to <2 x i64>*
  %105 = bitcast i64* %arrayidx12.10 to <2 x i64>*
  %106 = bitcast i64* %arrayidx14.11 to <2 x i64>*
  %107 = bitcast i64* %arrayidx14.10 to <2 x i64>*
  %108 = bitcast i64* %arrayidx.13 to <2 x i64>*
  %109 = bitcast i64* %arrayidx.12 to <2 x i64>*
  %110 = bitcast i64* %arrayidx12.13 to <2 x i64>*
  %111 = bitcast i64* %arrayidx12.12 to <2 x i64>*
  %112 = bitcast i64* %arrayidx14.13 to <2 x i64>*
  %113 = bitcast i64* %arrayidx14.12 to <2 x i64>*
  br label %land.rhs

for.body58:                                       ; preds = %for.cond.cleanup94, %for.body58.lr.ph
  %indvars.iv278 = phi i64 [ 0, %for.body58.lr.ph ], [ %indvars.iv.next279, %for.cond.cleanup94 ]
  %stride63 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %69, i64 %indvars.iv278, i32 2
  %114 = load i32, i32* %stride63, align 4, !tbaa !185
  %conv64 = sext i32 %114 to i64
  %mul68 = mul nsw i64 %conv64, %conv
  %stride73 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %70, i64 %indvars.iv278, i32 2
  %115 = load i32, i32* %stride73, align 4, !tbaa !185
  %conv74 = sext i32 %115 to i64
  %mul78 = mul nsw i64 %conv74, %conv
  %cmp80264.not = icmp eq i64 %indvars.iv278, 0
  br i1 %cmp80264.not, label %for.end91, label %for.body81.lr.ph

for.body81.lr.ph:                                 ; preds = %for.body58
  %cmp86.not = icmp eq i64 %mul68, 0
  br i1 %cmp86.not, label %for.body81.preheader, label %for.body81.us

for.body81.preheader:                             ; preds = %for.body81.lr.ph
  %116 = trunc i64 %indvars.iv278 to i32
  br label %for.end91

for.body81.us:                                    ; preds = %for.body81.lr.ph, %for.inc89.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc89.us ], [ 0, %for.body81.lr.ph ]
  %arrayidx84.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv
  %117 = load i64, i64* %arrayidx84.us, align 8, !tbaa !22
  %cmp85.us = icmp ult i64 %mul68, %117
  br i1 %cmp85.us, label %for.end91.loopexit, label %for.inc89.us

for.inc89.us:                                     ; preds = %for.body81.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %indvars.iv278
  br i1 %exitcond.not, label %for.end91.loopexit, label %for.body81.us, !llvm.loop !245

for.end91.loopexit:                               ; preds = %for.inc89.us, %for.body81.us
  %insert.0.lcssa.ph.in = phi i64 [ %indvars.iv278, %for.inc89.us ], [ %indvars.iv, %for.body81.us ]
  %insert.0.lcssa.ph = trunc i64 %insert.0.lcssa.ph.in to i32
  br label %for.end91

for.end91:                                        ; preds = %for.end91.loopexit, %for.body81.preheader, %for.body58
  %insert.0.lcssa = phi i32 [ 0, %for.body58 ], [ %insert.0.lcssa.ph, %for.end91.loopexit ], [ %116, %for.body81.preheader ]
  %118 = zext i32 %insert.0.lcssa to i64
  %cmp93267 = icmp ugt i64 %indvars.iv278, %118
  br i1 %cmp93267, label %for.body95.preheader, label %for.cond.cleanup94

for.body95.preheader:                             ; preds = %for.end91
  %119 = sext i32 %insert.0.lcssa to i64
  br label %for.body95

for.cond.cleanup94:                               ; preds = %for.body95, %for.end91
  %extent122 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %69, i64 %indvars.iv278, i32 1
  %120 = load i32, i32* %extent122, align 4, !tbaa !189
  %conv123 = sext i32 %120 to i64
  %arrayidx126 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %118
  store i64 %conv123, i64* %arrayidx126, align 8, !tbaa !22
  %arrayidx129 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %118
  store i64 %mul68, i64* %arrayidx129, align 8, !tbaa !22
  %arrayidx132 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %118
  store i64 %mul78, i64* %arrayidx132, align 8, !tbaa !22
  %indvars.iv.next279 = add nuw nsw i64 %indvars.iv278, 1
  %exitcond283.not = icmp eq i64 %indvars.iv.next279, %wide.trip.count282
  br i1 %exitcond283.not, label %while.cond.preheader, label %for.body58, !llvm.loop !246

for.body95:                                       ; preds = %for.body95, %for.body95.preheader
  %indvars.iv280 = phi i64 [ %indvars.iv278, %for.body95.preheader ], [ %indvars.iv.next281, %for.body95 ]
  %indvars.iv.next281 = add nsw i64 %indvars.iv280, -1
  %arrayidx99 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv.next281
  %121 = load i64, i64* %arrayidx99, align 8, !tbaa !22
  %arrayidx102 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 3, i64 %indvars.iv280
  store i64 %121, i64* %arrayidx102, align 8, !tbaa !22
  %arrayidx106 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv.next281
  %122 = load i64, i64* %arrayidx106, align 8, !tbaa !22
  %arrayidx109 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 5, i64 %indvars.iv280
  store i64 %122, i64* %arrayidx109, align 8, !tbaa !22
  %arrayidx113 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv.next281
  %123 = load i64, i64* %arrayidx113, align 8, !tbaa !22
  %arrayidx116 = getelementptr inbounds %"struct.Halide::Runtime::Internal::device_copy", %"struct.Halide::Runtime::Internal::device_copy"* %c, i64 0, i32 4, i64 %indvars.iv280
  store i64 %123, i64* %arrayidx116, align 8, !tbaa !22
  %cmp93 = icmp sgt i64 %indvars.iv.next281, %119
  br i1 %cmp93, label %for.body95, label %for.cond.cleanup94, !llvm.loop !247

land.rhs:                                         ; preds = %while.body, %land.rhs.lr.ph
  %124 = phi i64 [ %.pre291, %land.rhs.lr.ph ], [ %152, %while.body ]
  %125 = phi i64 [ %.pre, %land.rhs.lr.ph ], [ %mul147, %while.body ]
  %cmp143 = icmp eq i64 %125, %124
  br i1 %cmp143, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %126 = load i64, i64* %arrayidx, align 8, !tbaa !22
  %mul147 = mul i64 %126, %124
  store i64 %mul147, i64* %chunk_size, align 8, !tbaa !240
  %127 = load <2 x i64>, <2 x i64>* %72, align 8, !tbaa !22
  store <2 x i64> %127, <2 x i64>* %73, align 8, !tbaa !22
  %128 = load <2 x i64>, <2 x i64>* %74, align 8, !tbaa !22
  store <2 x i64> %128, <2 x i64>* %75, align 8, !tbaa !22
  %129 = load <2 x i64>, <2 x i64>* %76, align 8, !tbaa !22
  store <2 x i64> %129, <2 x i64>* %77, align 8, !tbaa !22
  %130 = load <2 x i64>, <2 x i64>* %78, align 8, !tbaa !22
  store <2 x i64> %130, <2 x i64>* %79, align 8, !tbaa !22
  %131 = load <2 x i64>, <2 x i64>* %80, align 8, !tbaa !22
  store <2 x i64> %131, <2 x i64>* %81, align 8, !tbaa !22
  %132 = load <2 x i64>, <2 x i64>* %82, align 8, !tbaa !22
  store <2 x i64> %132, <2 x i64>* %83, align 8, !tbaa !22
  %133 = load <2 x i64>, <2 x i64>* %84, align 8, !tbaa !22
  store <2 x i64> %133, <2 x i64>* %85, align 8, !tbaa !22
  %134 = load <2 x i64>, <2 x i64>* %86, align 8, !tbaa !22
  store <2 x i64> %134, <2 x i64>* %87, align 8, !tbaa !22
  %135 = load <2 x i64>, <2 x i64>* %88, align 8, !tbaa !22
  store <2 x i64> %135, <2 x i64>* %89, align 8, !tbaa !22
  %136 = load <2 x i64>, <2 x i64>* %90, align 8, !tbaa !22
  store <2 x i64> %136, <2 x i64>* %91, align 8, !tbaa !22
  %137 = load <2 x i64>, <2 x i64>* %92, align 8, !tbaa !22
  store <2 x i64> %137, <2 x i64>* %93, align 8, !tbaa !22
  %138 = load <2 x i64>, <2 x i64>* %94, align 8, !tbaa !22
  store <2 x i64> %138, <2 x i64>* %95, align 8, !tbaa !22
  %139 = load <2 x i64>, <2 x i64>* %96, align 8, !tbaa !22
  store <2 x i64> %139, <2 x i64>* %97, align 8, !tbaa !22
  %140 = load <2 x i64>, <2 x i64>* %98, align 8, !tbaa !22
  store <2 x i64> %140, <2 x i64>* %99, align 8, !tbaa !22
  %141 = load <2 x i64>, <2 x i64>* %100, align 8, !tbaa !22
  store <2 x i64> %141, <2 x i64>* %101, align 8, !tbaa !22
  %142 = load <2 x i64>, <2 x i64>* %102, align 8, !tbaa !22
  store <2 x i64> %142, <2 x i64>* %103, align 8, !tbaa !22
  %143 = load <2 x i64>, <2 x i64>* %104, align 8, !tbaa !22
  store <2 x i64> %143, <2 x i64>* %105, align 8, !tbaa !22
  %144 = load <2 x i64>, <2 x i64>* %106, align 8, !tbaa !22
  store <2 x i64> %144, <2 x i64>* %107, align 8, !tbaa !22
  %145 = load <2 x i64>, <2 x i64>* %108, align 8, !tbaa !22
  store <2 x i64> %145, <2 x i64>* %109, align 8, !tbaa !22
  %146 = load <2 x i64>, <2 x i64>* %110, align 8, !tbaa !22
  store <2 x i64> %146, <2 x i64>* %111, align 8, !tbaa !22
  %147 = load <2 x i64>, <2 x i64>* %112, align 8, !tbaa !22
  store <2 x i64> %147, <2 x i64>* %113, align 8, !tbaa !22
  %148 = load i64, i64* %arrayidx.15, align 8, !tbaa !22
  store i64 %148, i64* %arrayidx.14, align 8, !tbaa !22
  %149 = load i64, i64* %arrayidx12.15, align 8, !tbaa !22
  store i64 %149, i64* %arrayidx12.14, align 8, !tbaa !22
  %150 = load i64, i64* %arrayidx14.15, align 8, !tbaa !22
  store i64 %150, i64* %arrayidx14.14, align 8, !tbaa !22
  store i64 1, i64* %arrayidx.15, align 8, !tbaa !22
  store i64 0, i64* %arrayidx12.15, align 8, !tbaa !22
  store i64 0, i64* %arrayidx14.15, align 8, !tbaa !22
  %151 = extractelement <2 x i64> %128, i32 0
  %cmp139 = icmp eq i64 %mul147, %151
  %152 = extractelement <2 x i64> %129, i32 0
  br i1 %cmp139, label %land.rhs, label %while.end, !llvm.loop !248

while.end:                                        ; preds = %while.body, %land.rhs, %while.cond.preheader, %for.cond54.preheader
  %153 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(416) %153, i8* nonnull align 8 dereferenceable(416) %0, i64 416, i1 false), !tbaa.struct !249
  br label %cleanup

cleanup:                                          ; preds = %while.end, %if.then51, %if.then
  call void @llvm.lifetime.end.p0i8(i64 416, i8* nonnull %0) #11
  ret void
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind mustprogress
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %key1, i8* %key2, i64 %key_size) local_unnamed_addr #0 {
entry:
  %call = tail call i32 @memcmp(i8* %key1, i8* %key2, i64 %key_size) #14
  %cmp = icmp eq i32 %call, 0
  ret i1 %cmp
}

declare i32 @memcmp(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind mustprogress
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %buf, %struct.halide_dimension_t* %shape) local_unnamed_addr #0 {
entry:
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %0 = load i32, i32* %dimensions, align 4, !tbaa !183
  %cmp9 = icmp sgt i32 %0, 0
  br i1 %cmp9, label %for.body.lr.ph, label %return

for.body.lr.ph:                                   ; preds = %entry
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %1 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !184
  %2 = zext i32 %0 to i64
  br label %for.body

for.cond:                                         ; preds = %_ZNK18halide_dimension_tneERKS_.exit
  %exitcond.not = icmp eq i64 %indvars.iv.next, %2
  br i1 %exitcond.not, label %return, label %for.body, !llvm.loop !250

for.body:                                         ; preds = %for.cond, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %min.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %1, i64 %indvars.iv, i32 0
  %3 = load i32, i32* %min.i.i, align 4, !tbaa !221
  %min2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv, i32 0
  %4 = load i32, i32* %min2.i.i, align 4, !tbaa !221
  %cmp.i.i = icmp eq i32 %3, %4
  br i1 %cmp.i.i, label %land.lhs.true.i.i, label %return

land.lhs.true.i.i:                                ; preds = %for.body
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %1, i64 %indvars.iv, i32 1
  %5 = load i32, i32* %extent.i.i, align 4, !tbaa !189
  %extent3.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv, i32 1
  %6 = load i32, i32* %extent3.i.i, align 4, !tbaa !189
  %cmp4.i.i = icmp eq i32 %5, %6
  br i1 %cmp4.i.i, label %land.lhs.true5.i.i, label %return

land.lhs.true5.i.i:                               ; preds = %land.lhs.true.i.i
  %stride.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %1, i64 %indvars.iv, i32 2
  %7 = load i32, i32* %stride.i.i, align 4, !tbaa !185
  %stride6.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv, i32 2
  %8 = load i32, i32* %stride6.i.i, align 4, !tbaa !185
  %cmp7.i.i = icmp eq i32 %7, %8
  br i1 %cmp7.i.i, label %_ZNK18halide_dimension_tneERKS_.exit, label %return

_ZNK18halide_dimension_tneERKS_.exit:             ; preds = %land.lhs.true5.i.i
  %flags.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %1, i64 %indvars.iv, i32 3
  %9 = load i32, i32* %flags.i.i, align 4, !tbaa !251
  %flags8.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %shape, i64 %indvars.iv, i32 3
  %10 = load i32, i32* %flags8.i.i, align 4, !tbaa !251
  %cmp9.i.i.not = icmp eq i32 %9, %10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp9.i.i.not, label %for.cond, label %return

return:                                           ; preds = %_ZNK18halide_dimension_tneERKS_.exit, %land.lhs.true5.i.i, %land.lhs.true.i.i, %for.body, %for.cond, %entry
  %cmp.lcssa = phi i1 [ true, %entry ], [ false, %_ZNK18halide_dimension_tneERKS_.exit ], [ true, %for.cond ], [ false, %land.lhs.true5.i.i ], [ false, %land.lhs.true.i.i ], [ false, %for.body ]
  ret i1 %cmp.lcssa
}

; Function Attrs: nounwind mustprogress
define linkonce zeroext i1 @_ZN6Halide7Runtime8Internal10CacheEntry4initEPKhmjPK15halide_buffer_tiPPS5_by(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %this, i8* %cache_key, i64 %cache_key_size, i32 %key_hash, %struct.halide_buffer_t* %computed_bounds_buf, i32 %tuples, %struct.halide_buffer_t** %tuple_buffers, i1 zeroext %has_eviction_key_arg, i64 %eviction_key_arg) local_unnamed_addr #0 align 2 {
entry:
  %frombool = zext i1 %has_eviction_key_arg to i8
  %0 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %this to <2 x %"struct.Halide::Runtime::Internal::CacheEntry"*>*
  store <2 x %"struct.Halide::Runtime::Internal::CacheEntry"*> zeroinitializer, <2 x %"struct.Halide::Runtime::Internal::CacheEntry"*>* %0, align 8, !tbaa !14
  %less_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !252
  %key_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 4
  store i64 %cache_key_size, i64* %key_size, align 8, !tbaa !253
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 6
  store i32 %key_hash, i32* %hash, align 8, !tbaa !254
  %in_use_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 7
  store i32 0, i32* %in_use_count, align 4, !tbaa !255
  %tuple_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 8
  store i32 %tuples, i32* %tuple_count, align 8, !tbaa !232
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %computed_bounds_buf, i64 0, i32 5
  %1 = load i32, i32* %dimensions, align 4, !tbaa !183
  %dimensions2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 9
  store i32 %1, i32* %dimensions2, align 4, !tbaa !256
  %conv = zext i32 %tuples to i64
  %mul = mul nuw nsw i64 %conv, 56
  %conv5 = sext i32 %1 to i64
  %add8 = add i32 %tuples, 1
  %conv9 = zext i32 %add8 to i64
  %mul6 = shl nuw nsw i64 %conv9, 4
  %mul10 = mul i64 %mul6, %conv5
  %add11 = add i64 %mul10, %mul
  %add13 = add i64 %add11, %cache_key_size
  %call = tail call i8* @halide_malloc(i8* null, i64 %add13) #14
  %metadata_storage = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 3
  store i8* %call, i8** %metadata_storage, align 8, !tbaa !233
  %tobool.not = icmp eq i8* %call, null
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %buf = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 11
  %2 = bitcast %struct.halide_buffer_t** %buf to i8**
  store i8* %call, i8** %2, align 8, !tbaa !234
  %add.ptr = getelementptr inbounds i8, i8* %call, i64 %mul
  %computed_bounds = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 10
  %3 = bitcast %struct.halide_dimension_t** %computed_bounds to i8**
  store i8* %add.ptr, i8** %3, align 8, !tbaa !257
  %add.ptr18 = getelementptr inbounds i8, i8* %call, i64 %add11
  %key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 5
  store i8* %add.ptr18, i8** %key, align 8, !tbaa !258
  %4 = load i64, i64* %key_size, align 8, !tbaa !253
  %cmp117.not = icmp eq i64 %4, 0
  br i1 %cmp117.not, label %for.cond23.preheader, label %for.body.preheader

for.body.preheader:                               ; preds = %if.end
  %5 = load i8, i8* %cache_key, align 1, !tbaa !18
  store i8 %5, i8* %add.ptr18, align 1, !tbaa !18
  %6 = load i64, i64* %key_size, align 8, !tbaa !253
  %cmp130 = icmp ugt i64 %6, 1
  br i1 %cmp130, label %for.body.for.body_crit_edge, label %for.cond23.preheader, !llvm.loop !259

for.cond23.preheader:                             ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %if.end
  %7 = load i32, i32* %dimensions2, align 4, !tbaa !256
  %cmp25115 = icmp sgt i32 %7, 0
  br i1 %cmp25115, label %for.body27.lr.ph, label %for.cond36.preheader

for.body27.lr.ph:                                 ; preds = %for.cond23.preheader
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %computed_bounds_buf, i64 0, i32 6
  br label %for.body27

for.body.for.body_crit_edge:                      ; preds = %for.body.preheader, %for.body.for.body_crit_edge
  %inc131 = phi i64 [ %inc, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.pre = load i8*, i8** %key, align 8, !tbaa !258
  %arrayidx = getelementptr inbounds i8, i8* %cache_key, i64 %inc131
  %8 = load i8, i8* %arrayidx, align 1, !tbaa !18
  %arrayidx21 = getelementptr inbounds i8, i8* %.pre, i64 %inc131
  store i8 %8, i8* %arrayidx21, align 1, !tbaa !18
  %inc = add nuw i64 %inc131, 1
  %9 = load i64, i64* %key_size, align 8, !tbaa !253
  %cmp = icmp ult i64 %inc, %9
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.cond23.preheader, !llvm.loop !259

for.cond36.preheader:                             ; preds = %for.body27, %for.cond23.preheader
  %10 = load i32, i32* %tuple_count, align 8, !tbaa !232
  %cmp38113.not = icmp eq i32 %10, 0
  br i1 %cmp38113.not, label %for.cond.cleanup39, label %for.body40

for.body27:                                       ; preds = %for.body27, %for.body27.lr.ph
  %indvars.iv121 = phi i64 [ 0, %for.body27.lr.ph ], [ %indvars.iv.next122, %for.body27 ]
  %11 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !184
  %arrayidx28 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %11, i64 %indvars.iv121
  %12 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds, align 8, !tbaa !257
  %arrayidx31 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %12, i64 %indvars.iv121
  %13 = bitcast %struct.halide_dimension_t* %arrayidx31 to i8*
  %14 = bitcast %struct.halide_dimension_t* %arrayidx28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %13, i8* nonnull align 4 dereferenceable(16) %14, i64 16, i1 false), !tbaa.struct !188
  %indvars.iv.next122 = add nuw nsw i64 %indvars.iv121, 1
  %15 = load i32, i32* %dimensions2, align 4, !tbaa !256
  %16 = sext i32 %15 to i64
  %cmp25 = icmp slt i64 %indvars.iv.next122, %16
  br i1 %cmp25, label %for.body27, label %for.cond36.preheader, !llvm.loop !260

for.cond36.loopexit:                              ; preds = %for.body59.for.body59_crit_edge, %for.body59.preheader, %for.body40
  %17 = load i32, i32* %tuple_count, align 8, !tbaa !232
  %18 = zext i32 %17 to i64
  %cmp38 = icmp ult i64 %indvars.iv.next120, %18
  br i1 %cmp38, label %for.body40, label %for.cond.cleanup39, !llvm.loop !261

for.cond.cleanup39:                               ; preds = %for.cond36.loopexit, %for.cond36.preheader
  %has_eviction_key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 13
  store i8 %frombool, i8* %has_eviction_key, align 8, !tbaa !262
  %eviction_key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %this, i64 0, i32 12
  store i64 %eviction_key_arg, i64* %eviction_key, align 8, !tbaa !263
  br label %cleanup

for.body40:                                       ; preds = %for.cond36.preheader, %for.cond36.loopexit
  %indvars.iv119 = phi i64 [ %indvars.iv.next120, %for.cond36.loopexit ], [ 0, %for.cond36.preheader ]
  %arrayidx42 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv119
  %19 = bitcast %struct.halide_buffer_t** %arrayidx42 to i8**
  %20 = load i8*, i8** %19, align 8, !tbaa !14
  %21 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !234
  %arrayidx45 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %21, i64 %indvars.iv119
  %22 = bitcast %struct.halide_buffer_t* %arrayidx45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %22, i8* nonnull align 8 dereferenceable(56) %20, i64 56, i1 false), !tbaa.struct !264
  %23 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds, align 8, !tbaa !257
  %indvars.iv.next120 = add nuw nsw i64 %indvars.iv119, 1
  %24 = load i32, i32* %dimensions2, align 4, !tbaa !256
  %25 = trunc i64 %indvars.iv.next120 to i32
  %mul49 = mul i32 %24, %25
  %idx.ext = zext i32 %mul49 to i64
  %add.ptr50 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %23, i64 %idx.ext
  %26 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !234
  %dim54 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %26, i64 %indvars.iv119, i32 6
  store %struct.halide_dimension_t* %add.ptr50, %struct.halide_dimension_t** %dim54, align 8, !tbaa !184
  %cmp57111 = icmp sgt i32 %24, 0
  br i1 %cmp57111, label %for.body59.preheader, label %for.cond36.loopexit

for.body59.preheader:                             ; preds = %for.body40
  %27 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx42, align 8, !tbaa !14
  %dim62125 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %27, i64 0, i32 6
  %28 = bitcast %struct.halide_dimension_t** %dim62125 to i8**
  %29 = load i8*, i8** %28, align 8, !tbaa !184
  %30 = bitcast %struct.halide_dimension_t* %add.ptr50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %30, i8* nonnull align 4 dereferenceable(16) %29, i64 16, i1 false), !tbaa.struct !188
  %31 = load i32, i32* %dimensions2, align 4, !tbaa !256
  %cmp57128 = icmp sgt i32 %31, 1
  br i1 %cmp57128, label %for.body59.for.body59_crit_edge, label %for.cond36.loopexit, !llvm.loop !266

for.body59.for.body59_crit_edge:                  ; preds = %for.body59.preheader, %for.body59.for.body59_crit_edge
  %indvars.iv.next129 = phi i64 [ %indvars.iv.next, %for.body59.for.body59_crit_edge ], [ 1, %for.body59.preheader ]
  %.pre123 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !234
  %dim68.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %.pre123, i64 %indvars.iv119, i32 6
  %.pre124 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim68.phi.trans.insert, align 8, !tbaa !184
  %32 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx42, align 8, !tbaa !14
  %dim62 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %32, i64 0, i32 6
  %33 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim62, align 8, !tbaa !184
  %arrayidx64 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %33, i64 %indvars.iv.next129
  %arrayidx70 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre124, i64 %indvars.iv.next129
  %34 = bitcast %struct.halide_dimension_t* %arrayidx70 to i8*
  %35 = bitcast %struct.halide_dimension_t* %arrayidx64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %34, i8* nonnull align 4 dereferenceable(16) %35, i64 16, i1 false), !tbaa.struct !188
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next129, 1
  %36 = load i32, i32* %dimensions2, align 4, !tbaa !256
  %37 = sext i32 %36 to i64
  %cmp57 = icmp slt i64 %indvars.iv.next, %37
  br i1 %cmp57, label %for.body59.for.body59_crit_edge, label %for.cond36.loopexit, !llvm.loop !266

cleanup:                                          ; preds = %for.cond.cleanup39, %entry
  %38 = xor i1 %tobool.not, true
  ret i1 %38
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @_ZN6Halide7Runtime8Internal8djb_hashEPKhm(i8* %key, i64 %key_size) local_unnamed_addr #0 {
entry:
  %cmp8.not = icmp eq i64 %key_size, 0
  br i1 %cmp8.not, label %for.cond.cleanup, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  %inc.1 = add nuw i64 0, 1
  %arrayidx.1 = getelementptr inbounds i8, i8* %key, i64 0
  %add.1 = mul i32 5381, 33
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %h.0.lcssa = phi i32 [ 5381, %entry ], [ %add1, %for.body ]
  ret i32 %h.0.lcssa

for.body:                                         ; preds = %entry.for.body_crit_edge, %for.body.for.body_crit_edge
  %add.phi = phi i32 [ %add.0, %for.body.for.body_crit_edge ], [ %add.1, %entry.for.body_crit_edge ]
  %arrayidx.phi = phi i8* [ %arrayidx.0, %for.body.for.body_crit_edge ], [ %arrayidx.1, %entry.for.body_crit_edge ]
  %inc.phi = phi i64 [ %inc.0, %for.body.for.body_crit_edge ], [ %inc.1, %entry.for.body_crit_edge ]
  %0 = load i8, i8* %arrayidx.phi, align 1, !tbaa !18
  %conv = zext i8 %0 to i32
  %add1 = add i32 %add.phi, %conv
  %exitcond.not = icmp eq i64 %inc.phi, %key_size
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body.for.body_crit_edge, !llvm.loop !267

for.body.for.body_crit_edge:                      ; preds = %for.body
  %inc.0 = add nuw i64 %inc.phi, 1
  %arrayidx.0 = getelementptr inbounds i8, i8* %key, i64 %inc.phi
  %add.0 = mul i32 %add1, 33
  br label %for.body
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal11prune_cacheEv() local_unnamed_addr #0 {
entry:
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !14
  %1 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !22
  %2 = load i64, i64* @_ZN6Halide7Runtime8Internal14max_cache_sizeE, align 8, !tbaa !22
  %cmp84 = icmp sgt i64 %1, %2
  %cmp185 = icmp ne %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null
  %3 = and i1 %cmp185, %cmp84
  br i1 %3, label %while.body, label %while.end42

while.body:                                       ; preds = %entry, %if.end41
  %4 = phi i64 [ %74, %if.end41 ], [ %2, %entry ]
  %5 = phi i64 [ %75, %if.end41 ], [ %1, %entry ]
  %prune_candidate.086 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %6, %if.end41 ], [ %0, %entry ]
  %more_recent2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 1
  %6 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent2, align 8, !tbaa !268
  %in_use_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 7
  %7 = load i32, i32* %in_use_count, align 4, !tbaa !255
  %cmp3 = icmp eq i32 %7, 0
  br i1 %cmp3, label %if.then, label %if.end41

if.then:                                          ; preds = %while.body
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 6
  %8 = load i32, i32* %hash, align 8, !tbaa !254
  %9 = and i32 %8, 255
  %idxprom = zext i32 %9 to i64
  %arrayidx = getelementptr inbounds [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 %idxprom
  %10 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 8, !tbaa !14
  %cmp5 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %10, %prune_candidate.086
  br i1 %cmp5, label %if.then6, label %while.cond9

if.then6:                                         ; preds = %if.then
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 0
  %11 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next, align 8, !tbaa !229
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %11, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 8, !tbaa !14
  br label %if.end21

while.cond9:                                      ; preds = %if.then, %land.rhs11
  %prev_hash_entry.0 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %12, %land.rhs11 ], [ %10, %if.then ]
  %cmp10.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %prev_hash_entry.0, null
  br i1 %cmp10.not, label %if.then18, label %land.rhs11

land.rhs11:                                       ; preds = %while.cond9
  %next12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prev_hash_entry.0, i64 0, i32 0
  %12 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next12, align 8, !tbaa !229
  %cmp13.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %12, %prune_candidate.086
  br i1 %cmp13.not, label %do.end, label %while.cond9, !llvm.loop !269

if.then18:                                        ; preds = %while.cond9
  tail call void @halide_print(i8* null, i8* getelementptr inbounds ([126 x i8], [126 x i8]* @.str.2.42, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.end

do.end:                                           ; preds = %land.rhs11, %if.then18
  %next19 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 0
  %13 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next19, align 8, !tbaa !229
  %next20 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prev_hash_entry.0, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %13, %"struct.Halide::Runtime::Internal::CacheEntry"** %next20, align 8, !tbaa !229
  br label %if.end21

if.end21:                                         ; preds = %do.end, %if.then6
  %14 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !14
  %cmp22 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %14, %prune_candidate.086
  br i1 %cmp22, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end21
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %6, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !14
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.end21
  %cmp25.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %6, null
  br i1 %cmp25.not, label %if.end28, label %if.then26

if.then26:                                        ; preds = %if.end24
  %less_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 2
  %15 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !252
  %less_recent27 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %6, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %15, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent27, align 8, !tbaa !252
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.end24
  %16 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !14
  %cmp29 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %16, %prune_candidate.086
  %less_recent31 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 2
  %17 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent31, align 8, !tbaa !252
  br i1 %cmp29, label %if.then30, label %if.end32

if.then30:                                        ; preds = %if.end28
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %17, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !14
  br label %if.end32

if.end32:                                         ; preds = %if.then30, %if.end28
  %cmp34.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %17, null
  br i1 %cmp34.not, label %if.end37, label %if.then35

if.then35:                                        ; preds = %if.end32
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %6, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent31, align 8, !tbaa !252
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.end32
  %tuple_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 8
  %18 = load i32, i32* %tuple_count, align 8, !tbaa !232
  %cmp3882.not = icmp eq i32 %18, 0
  br i1 %cmp3882.not, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end37
  %buf = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086, i64 0, i32 11
  %19 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf, align 8, !tbaa !234
  %_ZN6Halide7Runtime8Internal18current_cache_sizeE.promoted = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !22
  %wide.trip.count = zext i32 %18 to i64
  br label %for.body

for.cond.for.cond.cleanup_crit_edge:              ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  store i64 %sub, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !22
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.for.cond.cleanup_crit_edge, %if.end37
  tail call void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %prune_candidate.086) #15
  %20 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %prune_candidate.086 to i8*
  tail call void @halide_free(i8* null, i8* nonnull %20) #14
  %.pre92 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !22
  %.pre93 = load i64, i64* @_ZN6Halide7Runtime8Internal14max_cache_sizeE, align 8, !tbaa !22
  br label %if.end41

for.body:                                         ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %sub89 = phi i64 [ %_ZN6Halide7Runtime8Internal18current_cache_sizeE.promoted, %for.body.lr.ph ], [ %sub, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %19, i64 %indvars.iv, i32 5
  %21 = load i32, i32* %dimensions.i.i, align 4, !tbaa !183
  %cmp19.i.i = icmp sgt i32 %21, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %for.body._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge

for.body._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge: ; preds = %for.body
  %sub.i.neg.0 = add i64 0, -1
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %for.body
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %19, i64 %indvars.iv, i32 6
  %22 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !184
  %wide.trip.count.i.i = zext i32 %21 to i64
  %min.iters.check28 = icmp ult i32 %21, 3
  br i1 %min.iters.check28, label %for.body.i.i.preheader, label %vector.ph29

vector.ph29:                                      ; preds = %for.body.lr.ph.i.i
  %n.vec31 = and i64 %wide.trip.count.i.i, 4294967294
  br label %vector.body27

vector.body27:                                    ; preds = %pred.load.continue43, %vector.ph29
  %index32 = phi i64 [ 0, %vector.ph29 ], [ %index.next33, %pred.load.continue43 ]
  %vec.phi38 = phi i64 [ 0, %vector.ph29 ], [ %predphi44, %pred.load.continue43 ]
  %vec.phi39 = phi i64 [ 0, %vector.ph29 ], [ %predphi45, %pred.load.continue43 ]
  %induction37 = or i64 %index32, 1
  %23 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %index32, i32 2
  %24 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %induction37, i32 2
  %25 = load i32, i32* %23, align 4, !tbaa !185
  %26 = load i32, i32* %24, align 4, !tbaa !185
  %27 = icmp sgt i32 %25, 0
  %28 = icmp sgt i32 %26, 0
  %29 = zext i32 %25 to i64
  %30 = zext i32 %26 to i64
  br i1 %27, label %pred.load.if40, label %pred.load.continue41

pred.load.if40:                                   ; preds = %vector.body27
  %31 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %index32, i32 1
  %32 = load i32, i32* %31, align 4, !tbaa !189
  br label %pred.load.continue41

pred.load.continue41:                             ; preds = %pred.load.if40, %vector.body27
  %33 = phi i32 [ poison, %vector.body27 ], [ %32, %pred.load.if40 ]
  br i1 %28, label %pred.load.if42, label %pred.load.continue43

pred.load.if42:                                   ; preds = %pred.load.continue41
  %34 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %induction37, i32 1
  %35 = load i32, i32* %34, align 4, !tbaa !189
  br label %pred.load.continue43

pred.load.continue43:                             ; preds = %pred.load.if42, %pred.load.continue41
  %36 = phi i32 [ poison, %pred.load.continue41 ], [ %35, %pred.load.if42 ]
  %37 = add nsw i32 %33, -1
  %38 = add nsw i32 %36, -1
  %39 = sext i32 %37 to i64
  %40 = sext i32 %38 to i64
  %41 = mul nsw i64 %39, %29
  %42 = mul nsw i64 %40, %30
  %43 = select i1 %27, i64 %41, i64 0
  %predphi44 = add i64 %vec.phi38, %43
  %44 = select i1 %28, i64 %42, i64 0
  %predphi45 = add i64 %vec.phi39, %44
  %index.next33 = add i64 %index32, 2
  %45 = icmp eq i64 %index.next33, %n.vec31
  br i1 %45, label %middle.block25, label %vector.body27, !llvm.loop !270

middle.block25:                                   ; preds = %pred.load.continue43
  %bin.rdx46 = add i64 %predphi45, %predphi44
  %cmp.n35 = icmp eq i64 %n.vec31, %wide.trip.count.i.i
  br i1 %cmp.n35, label %for.body.i13.i.preheader, label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %for.body.lr.ph.i.i, %middle.block25
  %indvars.iv.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %n.vec31, %middle.block25 ]
  %index.021.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %bin.rdx46, %middle.block25 ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %if.end.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %index.021.i.i = phi i64 [ %index.1.i.i, %if.end.i.i ], [ %index.021.i.i.ph, %for.body.i.i.preheader ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv.i.i, i32 2
  %46 = load i32, i32* %stride2.i.i, align 4, !tbaa !185
  %cmp3.i.i = icmp sgt i32 %46, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %46 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv.i.i, i32 1
  %47 = load i32, i32* %extent.i.i, align 4, !tbaa !189
  %sub.i.i = add nsw i32 %47, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i.preheader, label %for.body.i.i, !llvm.loop !271

for.body.i13.i.preheader:                         ; preds = %if.end.i.i, %middle.block25
  %index.1.i.i.lcssa = phi i64 [ %bin.rdx46, %middle.block25 ], [ %index.1.i.i, %if.end.i.i ]
  %min.iters.check = icmp ult i32 %21, 3
  br i1 %min.iters.check, label %for.body.i13.i.preheader48, label %vector.ph

vector.ph:                                        ; preds = %for.body.i13.i.preheader
  %n.vec = and i64 %wide.trip.count.i.i, 4294967294
  br label %vector.body

vector.body:                                      ; preds = %pred.load.continue23, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %pred.load.continue23 ]
  %vec.phi = phi i64 [ 0, %vector.ph ], [ %predphi, %pred.load.continue23 ]
  %vec.phi21 = phi i64 [ 0, %vector.ph ], [ %predphi24, %pred.load.continue23 ]
  %induction20 = or i64 %index, 1
  %48 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %index, i32 2
  %49 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %induction20, i32 2
  %50 = load i32, i32* %48, align 4, !tbaa !185
  %51 = load i32, i32* %49, align 4, !tbaa !185
  %52 = icmp slt i32 %50, 0
  %53 = icmp slt i32 %51, 0
  %54 = sext i32 %50 to i64
  %55 = sext i32 %51 to i64
  br i1 %52, label %pred.load.if, label %pred.load.continue

pred.load.if:                                     ; preds = %vector.body
  %56 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %index, i32 1
  %57 = load i32, i32* %56, align 4, !tbaa !189
  br label %pred.load.continue

pred.load.continue:                               ; preds = %pred.load.if, %vector.body
  %58 = phi i32 [ poison, %vector.body ], [ %57, %pred.load.if ]
  br i1 %53, label %pred.load.if22, label %pred.load.continue23

pred.load.if22:                                   ; preds = %pred.load.continue
  %59 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %induction20, i32 1
  %60 = load i32, i32* %59, align 4, !tbaa !189
  br label %pred.load.continue23

pred.load.continue23:                             ; preds = %pred.load.if22, %pred.load.continue
  %61 = phi i32 [ poison, %pred.load.continue ], [ %60, %pred.load.if22 ]
  %62 = add nsw i32 %58, -1
  %63 = add nsw i32 %61, -1
  %64 = sext i32 %62 to i64
  %65 = sext i32 %63 to i64
  %66 = mul nsw i64 %64, %54
  %67 = mul nsw i64 %65, %55
  %68 = select i1 %52, i64 %66, i64 0
  %predphi = add i64 %vec.phi, %68
  %69 = select i1 %53, i64 %67, i64 0
  %predphi24 = add i64 %vec.phi21, %69
  %index.next = add i64 %index, 2
  %70 = icmp eq i64 %index.next, %n.vec
  br i1 %70, label %middle.block, label %vector.body, !llvm.loop !272

middle.block:                                     ; preds = %pred.load.continue23
  %bin.rdx = add i64 %predphi24, %predphi
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i
  br i1 %cmp.n, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i.preheader48

for.body.i13.i.preheader48:                       ; preds = %for.body.i13.i.preheader, %middle.block
  %indvars.iv.i10.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %n.vec, %middle.block ]
  %index.018.i.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %bin.rdx, %middle.block ]
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %for.body.i13.i.preheader48, %if.end.i24.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ %indvars.iv.i10.i.ph, %for.body.i13.i.preheader48 ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ %index.018.i.i.ph, %for.body.i13.i.preheader48 ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv.i10.i, i32 2
  %71 = load i32, i32* %stride2.i11.i, align 4, !tbaa !185
  %cmp3.i12.i = icmp slt i32 %71, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %71 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %22, i64 %indvars.iv.i10.i, i32 1
  %72 = load i32, i32* %extent.i15.i, align 4, !tbaa !189
  %sub.i16.i = add nsw i32 %72, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !273

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i, %middle.block
  %index.1.i21.i.lcssa = phi i64 [ %bin.rdx, %middle.block ], [ %index.1.i21.i, %if.end.i24.i ]
  %add8.i.i.neg = xor i64 %index.1.i.i.lcssa, -1
  %sub.i.neg.1 = add i64 %index.1.i21.i.lcssa, %add8.i.i.neg
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %for.body._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit
  %sub.i.neg.phi = phi i64 [ %sub.i.neg.0, %for.body._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge ], [ %sub.i.neg.1, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %19, i64 %indvars.iv, i32 4, i32 1
  %73 = load i8, i8* %bits.i.i, align 1, !tbaa !144
  %conv.i.i = zext i8 %73 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i4.i, 3
  %mul.i.neg = mul i64 %div.i.i, %sub.i.neg.phi
  %sub = add i64 %mul.i.neg, %sub89
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.for.cond.cleanup_crit_edge, label %for.body, !llvm.loop !274

if.end41:                                         ; preds = %for.cond.cleanup, %while.body
  %74 = phi i64 [ %.pre93, %for.cond.cleanup ], [ %4, %while.body ]
  %75 = phi i64 [ %.pre92, %for.cond.cleanup ], [ %5, %while.body ]
  %cmp = icmp sgt i64 %75, %74
  %cmp1 = icmp ne %"struct.Halide::Runtime::Internal::CacheEntry"* %6, null
  %76 = and i1 %cmp1, %cmp
  br i1 %76, label %while.body, label %while.end42, !llvm.loop !275

while.end42:                                      ; preds = %if.end41, %entry
  ret void
}

; Function Attrs: nounwind
define weak void @halide_memoization_cache_set_size(i64 %size) local_unnamed_addr #4 {
entry:
  %cmp = icmp eq i64 %size, 0
  %spec.store.select = select i1 %cmp, i64 1048576, i64 %size
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #14
  store i64 %spec.store.select, i64* @_ZN6Halide7Runtime8Internal14max_cache_sizeE, align 8, !tbaa !22
  tail call void @_ZN6Halide7Runtime8Internal11prune_cacheEv() #15
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #14
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_memoization_cache_lookup(i8* %user_context, i8* %cache_key, i32 %size, %struct.halide_buffer_t* %computed_bounds, i32 %tuple_count, %struct.halide_buffer_t** %tuple_buffers) local_unnamed_addr #4 {
entry:
  %conv = sext i32 %size to i64
  %call = tail call i32 @_ZN6Halide7Runtime8Internal8djb_hashEPKhm(i8* %cache_key, i64 %conv) #15
  %0 = and i32 %call, 255
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #14
  %idxprom = zext i32 %0 to i64
  %arrayidx = getelementptr inbounds [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 %idxprom
  %entry3.0220 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx, align 8, !tbaa !14
  %cmp.not221 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0220, null
  br i1 %cmp.not221, label %for.cond75.preheader, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %cmp16215 = icmp sgt i32 %tuple_count, 0
  %1 = sext i32 %tuple_count to i64
  br i1 %cmp16215, label %while.body.us, label %while.body

while.body.us:                                    ; preds = %while.body.lr.ph, %if.end73.us
  %entry3.0222.us = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry3.0.us, %if.end73.us ], [ %entry3.0220, %while.body.lr.ph ]
  %hash.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 6
  %2 = load i32, i32* %hash.us, align 8, !tbaa !254
  %cmp4.us = icmp eq i32 %2, %call
  br i1 %cmp4.us, label %land.lhs.true.us, label %if.end73.us

land.lhs.true.us:                                 ; preds = %while.body.us
  %key_size.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 4
  %3 = load i64, i64* %key_size.us, align 8, !tbaa !253
  %cmp6.us = icmp eq i64 %3, %conv
  br i1 %cmp6.us, label %land.lhs.true7.us, label %if.end73.us

land.lhs.true7.us:                                ; preds = %land.lhs.true.us
  %key.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 5
  %4 = load i8*, i8** %key.us, align 8, !tbaa !258
  %call9.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %4, i8* %cache_key, i64 %conv) #15
  br i1 %call9.us, label %land.lhs.true10.us, label %if.end73.us

land.lhs.true10.us:                               ; preds = %land.lhs.true7.us
  %computed_bounds11.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 10
  %5 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds11.us, align 8, !tbaa !257
  %call12.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %computed_bounds, %struct.halide_dimension_t* %5) #15
  br i1 %call12.us, label %land.lhs.true13.us, label %if.end73.us

land.lhs.true13.us:                               ; preds = %land.lhs.true10.us
  %tuple_count14.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 8
  %6 = load i32, i32* %tuple_count14.us, align 8, !tbaa !232
  %cmp15.us = icmp eq i32 %6, %tuple_count
  br i1 %cmp15.us, label %for.cond.preheader.us, label %if.end73.us

for.cond.preheader.us:                            ; preds = %land.lhs.true13.us
  %buf.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 11
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us, %for.cond.preheader.us
  %indvars.iv226.us = phi i64 [ 0, %for.cond.preheader.us ], [ %indvars.iv.next227.us, %for.body.us ]
  %arrayidx18.us = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv226.us
  %7 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx18.us, align 8, !tbaa !14
  %8 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf.us, align 8, !tbaa !234
  %dim.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %8, i64 %indvars.iv226.us, i32 6
  %9 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.us, align 8, !tbaa !184
  %call21.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %7, %struct.halide_dimension_t* %9) #15
  %indvars.iv.next227.us = add nuw nsw i64 %indvars.iv226.us, 1
  %cmp16.us = icmp slt i64 %indvars.iv.next227.us, %1
  %10 = and i1 %cmp16.us, %call21.us
  br i1 %10, label %for.body.us, label %for.cond.cleanup.us, !llvm.loop !276

for.cond.cleanup.us:                              ; preds = %for.body.us
  br i1 %call21.us, label %if.then23, label %if.end73.us

if.end73.us:                                      ; preds = %for.cond.cleanup.us, %land.lhs.true13.us, %land.lhs.true10.us, %land.lhs.true7.us, %land.lhs.true.us, %while.body.us
  %next.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222.us, i64 0, i32 0
  %entry3.0.us = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next.us, align 8, !tbaa !14
  %cmp.not.us = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0.us, null
  br i1 %cmp.not.us, label %for.cond75.preheader, label %while.body.us, !llvm.loop !277

for.cond75.preheader:                             ; preds = %if.end73, %if.end73.us, %entry
  %cmp76210 = icmp sgt i32 %tuple_count, 0
  br i1 %cmp76210, label %for.body78.preheader, label %cleanup119

for.body78.preheader:                             ; preds = %for.cond75.preheader
  %wide.trip.count = zext i32 %tuple_count to i64
  br label %for.body78

while.body:                                       ; preds = %while.body.lr.ph, %if.end73
  %entry3.0222 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry3.0, %if.end73 ], [ %entry3.0220, %while.body.lr.ph ]
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 6
  %11 = load i32, i32* %hash, align 8, !tbaa !254
  %cmp4 = icmp eq i32 %11, %call
  br i1 %cmp4, label %land.lhs.true, label %if.end73

land.lhs.true:                                    ; preds = %while.body
  %key_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 4
  %12 = load i64, i64* %key_size, align 8, !tbaa !253
  %cmp6 = icmp eq i64 %12, %conv
  br i1 %cmp6, label %land.lhs.true7, label %if.end73

land.lhs.true7:                                   ; preds = %land.lhs.true
  %key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 5
  %13 = load i8*, i8** %key, align 8, !tbaa !258
  %call9 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %13, i8* %cache_key, i64 %conv) #15
  br i1 %call9, label %land.lhs.true10, label %if.end73

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %computed_bounds11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 10
  %14 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds11, align 8, !tbaa !257
  %call12 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %computed_bounds, %struct.halide_dimension_t* %14) #15
  br i1 %call12, label %land.lhs.true13, label %if.end73

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %tuple_count14 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 8
  %15 = load i32, i32* %tuple_count14, align 8, !tbaa !232
  %cmp15 = icmp eq i32 %15, %tuple_count
  br i1 %cmp15, label %if.then23, label %if.end73

if.then23:                                        ; preds = %land.lhs.true13, %for.cond.cleanup.us
  %.us-phi = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry3.0222.us, %for.cond.cleanup.us ], [ %entry3.0222, %land.lhs.true13 ]
  %16 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !14
  %cmp24.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, %16
  br i1 %cmp24.not, label %if.end57, label %do.body

do.body:                                          ; preds = %if.then23
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, i64 0, i32 1
  %17 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  %cmp26.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %17, null
  br i1 %cmp26.not, label %if.then27, label %do.end

if.then27:                                        ; preds = %do.body
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.3.43, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.end

do.end:                                           ; preds = %if.then27, %do.body
  %less_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, i64 0, i32 2
  %18 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !252
  %cmp28.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %18, null
  br i1 %cmp28.not, label %do.body33, label %if.then29

if.then29:                                        ; preds = %do.end
  %19 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  %more_recent32 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %18, i64 0, i32 1
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %19, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent32, align 8, !tbaa !268
  %.pr = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  br label %do.body41

do.body33:                                        ; preds = %do.end
  %20 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !14
  %cmp34 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %20, %.us-phi
  br i1 %cmp34, label %do.end38, label %if.then35

if.then35:                                        ; preds = %do.body33
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.4.44, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.end38

do.end38:                                         ; preds = %if.then35, %do.body33
  %21 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %21, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !14
  br label %do.body41

do.body41:                                        ; preds = %do.end38, %if.then29
  %22 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %.pr, %if.then29 ], [ %21, %do.end38 ]
  %cmp43.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %22, null
  br i1 %cmp43.not, label %if.then44, label %do.end47

if.then44:                                        ; preds = %do.body41
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.5.45, i64 0, i64 0)) #14
  tail call void @abort() #14
  %.pre = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  br label %do.end47

do.end47:                                         ; preds = %if.then44, %do.body41
  %23 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %.pre, %if.then44 ], [ %22, %do.body41 ]
  %24 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !252
  %less_recent50 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %23, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %24, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent50, align 8, !tbaa !252
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  %25 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !14
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %25, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent, align 8, !tbaa !252
  %cmp53.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %25, null
  br i1 %cmp53.not, label %if.end56, label %if.then54

if.then54:                                        ; preds = %do.end47
  %more_recent55 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %25, i64 0, i32 1
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent55, align 8, !tbaa !268
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %do.end47
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !14
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then23
  br i1 %cmp16215, label %for.body62.lr.ph, label %cleanup119.loopexit223

for.body62.lr.ph:                                 ; preds = %if.end57
  %buf66 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, i64 0, i32 11
  %wide.trip.count230 = zext i32 %tuple_count to i64
  br label %for.body62

for.body62:                                       ; preds = %for.body62, %for.body62.lr.ph
  %indvars.iv228 = phi i64 [ 0, %for.body62.lr.ph ], [ %indvars.iv.next229, %for.body62 ]
  %arrayidx65 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv228
  %26 = bitcast %struct.halide_buffer_t** %arrayidx65 to i8**
  %27 = load i8*, i8** %26, align 8, !tbaa !14
  %28 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf66, align 8, !tbaa !234
  %arrayidx68 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %28, i64 %indvars.iv228
  %29 = bitcast %struct.halide_buffer_t* %arrayidx68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(56) %27, i8* nonnull align 8 dereferenceable(56) %29, i64 56, i1 false), !tbaa.struct !264
  %indvars.iv.next229 = add nuw nsw i64 %indvars.iv228, 1
  %exitcond231.not = icmp eq i64 %indvars.iv.next229, %wide.trip.count230
  br i1 %exitcond231.not, label %cleanup119.loopexit223, label %for.body62, !llvm.loop !278

if.end73:                                         ; preds = %land.lhs.true13, %land.lhs.true10, %land.lhs.true7, %land.lhs.true, %while.body
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0222, i64 0, i32 0
  %entry3.0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next, align 8, !tbaa !14
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry3.0, null
  br i1 %cmp.not, label %for.cond75.preheader, label %while.body, !llvm.loop !277

for.body78:                                       ; preds = %for.inc114, %for.body78.preheader
  %indvars.iv = phi i64 [ 0, %for.body78.preheader ], [ %indvars.iv.next, %for.inc114 ]
  %arrayidx81 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv
  %30 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx81, align 8, !tbaa !14
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %30, i64 0, i32 5
  %31 = load i32, i32* %dimensions.i.i, align 4, !tbaa !183
  %cmp19.i.i = icmp sgt i32 %31, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %for.body78._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge

for.body78._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge: ; preds = %for.body78
  %sub.i.0 = sub nsw i64 1, 0
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %for.body78
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %30, i64 0, i32 6
  %32 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !184
  %wide.trip.count.i.i = zext i32 %31 to i64
  %min.iters.check38 = icmp ult i32 %31, 3
  br i1 %min.iters.check38, label %for.body.i.i.preheader, label %vector.ph39

vector.ph39:                                      ; preds = %for.body.lr.ph.i.i
  %n.vec41 = and i64 %wide.trip.count.i.i, 4294967294
  br label %vector.body37

vector.body37:                                    ; preds = %pred.load.continue53, %vector.ph39
  %index42 = phi i64 [ 0, %vector.ph39 ], [ %index.next43, %pred.load.continue53 ]
  %vec.phi48 = phi i64 [ 0, %vector.ph39 ], [ %predphi54, %pred.load.continue53 ]
  %vec.phi49 = phi i64 [ 0, %vector.ph39 ], [ %predphi55, %pred.load.continue53 ]
  %induction47 = or i64 %index42, 1
  %33 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %32, i64 %index42, i32 2
  %34 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %32, i64 %induction47, i32 2
  %35 = load i32, i32* %33, align 4, !tbaa !185
  %36 = load i32, i32* %34, align 4, !tbaa !185
  %37 = icmp sgt i32 %35, 0
  %38 = icmp sgt i32 %36, 0
  %39 = zext i32 %35 to i64
  %40 = zext i32 %36 to i64
  br i1 %37, label %pred.load.if50, label %pred.load.continue51

pred.load.if50:                                   ; preds = %vector.body37
  %41 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %32, i64 %index42, i32 1
  %42 = load i32, i32* %41, align 4, !tbaa !189
  br label %pred.load.continue51

pred.load.continue51:                             ; preds = %pred.load.if50, %vector.body37
  %43 = phi i32 [ poison, %vector.body37 ], [ %42, %pred.load.if50 ]
  br i1 %38, label %pred.load.if52, label %pred.load.continue53

pred.load.if52:                                   ; preds = %pred.load.continue51
  %44 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %32, i64 %induction47, i32 1
  %45 = load i32, i32* %44, align 4, !tbaa !189
  br label %pred.load.continue53

pred.load.continue53:                             ; preds = %pred.load.if52, %pred.load.continue51
  %46 = phi i32 [ poison, %pred.load.continue51 ], [ %45, %pred.load.if52 ]
  %47 = add nsw i32 %43, -1
  %48 = add nsw i32 %46, -1
  %49 = sext i32 %47 to i64
  %50 = sext i32 %48 to i64
  %51 = mul nsw i64 %49, %39
  %52 = mul nsw i64 %50, %40
  %53 = select i1 %37, i64 %51, i64 0
  %predphi54 = add i64 %vec.phi48, %53
  %54 = select i1 %38, i64 %52, i64 0
  %predphi55 = add i64 %vec.phi49, %54
  %index.next43 = add i64 %index42, 2
  %55 = icmp eq i64 %index.next43, %n.vec41
  br i1 %55, label %middle.block35, label %vector.body37, !llvm.loop !279

middle.block35:                                   ; preds = %pred.load.continue53
  %bin.rdx56 = add i64 %predphi55, %predphi54
  %cmp.n45 = icmp eq i64 %n.vec41, %wide.trip.count.i.i
  br i1 %cmp.n45, label %for.body.i13.i.preheader, label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %for.body.lr.ph.i.i, %middle.block35
  %indvars.iv.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %n.vec41, %middle.block35 ]
  %index.021.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %bin.rdx56, %middle.block35 ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %if.end.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %index.021.i.i = phi i64 [ %index.1.i.i, %if.end.i.i ], [ %index.021.i.i.ph, %for.body.i.i.preheader ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %32, i64 %indvars.iv.i.i, i32 2
  %56 = load i32, i32* %stride2.i.i, align 4, !tbaa !185
  %cmp3.i.i = icmp sgt i32 %56, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %56 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %32, i64 %indvars.iv.i.i, i32 1
  %57 = load i32, i32* %extent.i.i, align 4, !tbaa !189
  %sub.i.i = add nsw i32 %57, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i.preheader, label %for.body.i.i, !llvm.loop !280

for.body.i13.i.preheader:                         ; preds = %if.end.i.i, %middle.block35
  %index.1.i.i.lcssa = phi i64 [ %bin.rdx56, %middle.block35 ], [ %index.1.i.i, %if.end.i.i ]
  %min.iters.check = icmp ult i32 %31, 3
  br i1 %min.iters.check, label %for.body.i13.i.preheader58, label %vector.ph

vector.ph:                                        ; preds = %for.body.i13.i.preheader
  %n.vec = and i64 %wide.trip.count.i.i, 4294967294
  br label %vector.body

vector.body:                                      ; preds = %pred.load.continue33, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %pred.load.continue33 ]
  %vec.phi = phi i64 [ 0, %vector.ph ], [ %predphi, %pred.load.continue33 ]
  %vec.phi31 = phi i64 [ 0, %vector.ph ], [ %predphi34, %pred.load.continue33 ]
  %induction30 = or i64 %index, 1
  %58 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %32, i64 %index, i32 2
  %59 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %32, i64 %induction30, i32 2
  %60 = load i32, i32* %58, align 4, !tbaa !185
  %61 = load i32, i32* %59, align 4, !tbaa !185
  %62 = icmp slt i32 %60, 0
  %63 = icmp slt i32 %61, 0
  %64 = sext i32 %60 to i64
  %65 = sext i32 %61 to i64
  br i1 %62, label %pred.load.if, label %pred.load.continue

pred.load.if:                                     ; preds = %vector.body
  %66 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %32, i64 %index, i32 1
  %67 = load i32, i32* %66, align 4, !tbaa !189
  br label %pred.load.continue

pred.load.continue:                               ; preds = %pred.load.if, %vector.body
  %68 = phi i32 [ poison, %vector.body ], [ %67, %pred.load.if ]
  br i1 %63, label %pred.load.if32, label %pred.load.continue33

pred.load.if32:                                   ; preds = %pred.load.continue
  %69 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %32, i64 %induction30, i32 1
  %70 = load i32, i32* %69, align 4, !tbaa !189
  br label %pred.load.continue33

pred.load.continue33:                             ; preds = %pred.load.if32, %pred.load.continue
  %71 = phi i32 [ poison, %pred.load.continue ], [ %70, %pred.load.if32 ]
  %72 = add nsw i32 %68, -1
  %73 = add nsw i32 %71, -1
  %74 = sext i32 %72 to i64
  %75 = sext i32 %73 to i64
  %76 = mul nsw i64 %74, %64
  %77 = mul nsw i64 %75, %65
  %78 = select i1 %62, i64 %76, i64 0
  %predphi = add i64 %vec.phi, %78
  %79 = select i1 %63, i64 %77, i64 0
  %predphi34 = add i64 %vec.phi31, %79
  %index.next = add i64 %index, 2
  %80 = icmp eq i64 %index.next, %n.vec
  br i1 %80, label %middle.block, label %vector.body, !llvm.loop !281

middle.block:                                     ; preds = %pred.load.continue33
  %bin.rdx = add i64 %predphi34, %predphi
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i
  br i1 %cmp.n, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i.preheader58

for.body.i13.i.preheader58:                       ; preds = %for.body.i13.i.preheader, %middle.block
  %indvars.iv.i10.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %n.vec, %middle.block ]
  %index.018.i.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %bin.rdx, %middle.block ]
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %for.body.i13.i.preheader58, %if.end.i24.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ %indvars.iv.i10.i.ph, %for.body.i13.i.preheader58 ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ %index.018.i.i.ph, %for.body.i13.i.preheader58 ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %32, i64 %indvars.iv.i10.i, i32 2
  %81 = load i32, i32* %stride2.i11.i, align 4, !tbaa !185
  %cmp3.i12.i = icmp slt i32 %81, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %81 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %32, i64 %indvars.iv.i10.i, i32 1
  %82 = load i32, i32* %extent.i15.i, align 4, !tbaa !189
  %sub.i16.i = add nsw i32 %82, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !282

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i, %middle.block
  %index.1.i21.i.lcssa = phi i64 [ %bin.rdx, %middle.block ], [ %index.1.i21.i, %if.end.i24.i ]
  %add8.i.i = add nsw i64 %index.1.i.i.lcssa, 1
  %sub.i.1 = sub nsw i64 %add8.i.i, %index.1.i21.i.lcssa
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %for.body78._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit
  %add8.i27.i = phi i64 [ 1, %for.body78._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge ], [ %add8.i.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i.phi = phi i64 [ %sub.i.0, %for.body78._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge ], [ %sub.i.1, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %30, i64 0, i32 4, i32 1
  %83 = load i8, i8* %bits.i.i, align 1, !tbaa !144
  %conv.i.i = zext i8 %83 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i4.i, 3
  %mul.i = mul i64 %div.i.i, %sub.i.phi
  %add84 = add i64 %mul.i, 32
  %call85 = tail call i8* @halide_malloc(i8* %user_context, i64 %add84) #14
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %30, i64 0, i32 2
  store i8* %call85, i8** %host, align 8, !tbaa !180
  %cmp87 = icmp eq i8* %call85, null
  br i1 %cmp87, label %for.cond89.preheader, label %for.inc114

for.cond89.preheader:                             ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %cmp90208.not = icmp eq i64 %indvars.iv, 0
  br i1 %cmp90208.not, label %cleanup119, label %for.body92

for.body92:                                       ; preds = %for.cond89.preheader, %for.body92
  %indvars.iv224 = phi i64 [ %indvars.iv.next225, %for.body92 ], [ %indvars.iv, %for.cond89.preheader ]
  %sub = add nuw nsw i64 %indvars.iv224, 4294967295
  %84 = and i64 %sub, 4294967295
  %arrayidx94 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %84
  %85 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx94, align 8, !tbaa !14
  %host95 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %85, i64 0, i32 2
  %86 = load i8*, i8** %host95, align 8, !tbaa !180
  %call96 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %86) #15
  %87 = bitcast %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call96 to i8*
  tail call void @halide_free(i8* %user_context, i8* %87) #14
  %88 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx94, align 8, !tbaa !14
  %host100 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %88, i64 0, i32 2
  store i8* null, i8** %host100, align 8, !tbaa !180
  %89 = icmp sgt i64 %indvars.iv224, 1
  %indvars.iv.next225 = add nsw i64 %indvars.iv224, -1
  br i1 %89, label %for.body92, label %cleanup119, !llvm.loop !283

for.inc114:                                       ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %add.ptr = getelementptr inbounds i8, i8* %call85, i64 32
  store i8* %add.ptr, i8** %host, align 8, !tbaa !180
  %call108 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* nonnull %add.ptr) #15
  %hash109 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call108, i64 0, i32 1
  store i32 %call, i32* %hash109, align 8, !tbaa !284
  %entry110 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call108, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %entry110, align 8, !tbaa !286
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup119, label %for.body78, !llvm.loop !287

cleanup119.loopexit223:                           ; preds = %for.body62, %if.end57
  %in_use_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %.us-phi, i64 0, i32 7
  %90 = load i32, i32* %in_use_count, align 4, !tbaa !255
  %add = add i32 %90, %tuple_count
  store i32 %add, i32* %in_use_count, align 4, !tbaa !255
  br label %cleanup119

cleanup119:                                       ; preds = %for.inc114, %for.body92, %cleanup119.loopexit223, %for.cond89.preheader, %for.cond75.preheader
  %retval.6 = phi i32 [ 1, %for.cond75.preheader ], [ 0, %cleanup119.loopexit223 ], [ -1, %for.cond89.preheader ], [ -1, %for.body92 ], [ 1, %for.inc114 ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #14
  ret i32 %retval.6
}

; Function Attrs: nounwind
define weak i32 @halide_memoization_cache_store(i8* %user_context, i8* %cache_key, i32 %size, %struct.halide_buffer_t* %computed_bounds, i32 %tuple_count, %struct.halide_buffer_t** %tuple_buffers, i1 zeroext %has_eviction_key, i64 %eviction_key) local_unnamed_addr #4 {
entry:
  %0 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, align 8, !tbaa !14
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %0, i64 0, i32 2
  %1 = load i8*, i8** %host, align 8, !tbaa !180
  %call = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %1) #15
  %hash = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call, i64 0, i32 1
  %2 = load i32, i32* %hash, align 8, !tbaa !284
  %3 = and i32 %2, 255
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #14
  %idxprom = zext i32 %3 to i64
  %arrayidx7 = getelementptr inbounds [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 %idxprom
  %entry6.0228 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx7, align 8, !tbaa !14
  %cmp.not229 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0228, null
  br i1 %cmp.not229, label %for.cond61.preheader, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %conv10 = sext i32 %size to i64
  %cmp22221 = icmp sgt i32 %tuple_count, 0
  br i1 %cmp22221, label %while.body.us.preheader, label %while.body

while.body.us.preheader:                          ; preds = %while.body.lr.ph
  %4 = zext i32 %tuple_count to i64
  br label %while.body.us

while.body.us:                                    ; preds = %if.end59.us, %while.body.us.preheader
  %entry6.0230.us = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry6.0.us, %if.end59.us ], [ %entry6.0228, %while.body.us.preheader ]
  %hash8.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 6
  %5 = load i32, i32* %hash8.us, align 8, !tbaa !254
  %cmp9.us = icmp eq i32 %5, %2
  br i1 %cmp9.us, label %land.lhs.true.us, label %if.end59.us

land.lhs.true.us:                                 ; preds = %while.body.us
  %key_size.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 4
  %6 = load i64, i64* %key_size.us, align 8, !tbaa !253
  %cmp11.us = icmp eq i64 %6, %conv10
  br i1 %cmp11.us, label %land.lhs.true12.us, label %if.end59.us

land.lhs.true12.us:                               ; preds = %land.lhs.true.us
  %key.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 5
  %7 = load i8*, i8** %key.us, align 8, !tbaa !258
  %call14.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %7, i8* %cache_key, i64 %conv10) #15
  br i1 %call14.us, label %land.lhs.true15.us, label %if.end59.us

land.lhs.true15.us:                               ; preds = %land.lhs.true12.us
  %computed_bounds16.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 10
  %8 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds16.us, align 8, !tbaa !257
  %call17.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %computed_bounds, %struct.halide_dimension_t* %8) #15
  br i1 %call17.us, label %land.lhs.true18.us, label %if.end59.us

land.lhs.true18.us:                               ; preds = %land.lhs.true15.us
  %tuple_count19.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 8
  %9 = load i32, i32* %tuple_count19.us, align 8, !tbaa !232
  %cmp20.us = icmp eq i32 %9, %tuple_count
  br i1 %cmp20.us, label %for.body.lr.ph.us, label %if.end59.us

for.cond.cleanup.us:                              ; preds = %for.body.us
  br i1 %call30.us, label %do.body.us, label %if.end59.us

do.body.us:                                       ; preds = %for.cond.cleanup.us
  %10 = and i8 %spec.select.us, 1
  %tobool41.not.us = icmp eq i8 %10, 0
  br i1 %tobool41.not.us, label %if.then42.us, label %for.body48.us.preheader

for.body48.us.preheader:                          ; preds = %if.then42.us, %do.body.us
  %indvars.iv.next245.1 = add nuw nsw i64 0, 1
  %arrayidx50.us.1 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 0
  br label %for.body48.us

if.then42.us:                                     ; preds = %do.body.us
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.9.46, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %for.body48.us.preheader

if.end59.us:                                      ; preds = %for.cond.cleanup.us, %land.lhs.true18.us, %land.lhs.true15.us, %land.lhs.true12.us, %land.lhs.true.us, %while.body.us
  %next.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 0
  %entry6.0.us = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next.us, align 8, !tbaa !14
  %cmp.not.us = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0.us, null
  br i1 %cmp.not.us, label %for.cond61.preheader, label %while.body.us, !llvm.loop !288

for.body48.us:                                    ; preds = %for.body48.us.for.body48.us_crit_edge, %for.body48.us.preheader
  %arrayidx50.us.phi = phi %struct.halide_buffer_t** [ %arrayidx50.us.0, %for.body48.us.for.body48.us_crit_edge ], [ %arrayidx50.us.1, %for.body48.us.preheader ]
  %indvars.iv.next245.phi = phi i64 [ %indvars.iv.next245.0, %for.body48.us.for.body48.us_crit_edge ], [ %indvars.iv.next245.1, %for.body48.us.preheader ]
  %11 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx50.us.phi, align 8, !tbaa !14
  %host51.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %11, i64 0, i32 2
  %12 = load i8*, i8** %host51.us, align 8, !tbaa !180
  %call52.us = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %12) #15
  %entry53.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call52.us, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %entry53.us, align 8, !tbaa !286
  %exitcond247.not = icmp eq i64 %indvars.iv.next245.phi, %4
  br i1 %exitcond247.not, label %cleanup132, label %for.body48.us.for.body48.us_crit_edge, !llvm.loop !289

for.body48.us.for.body48.us_crit_edge:            ; preds = %for.body48.us
  %indvars.iv.next245.0 = add nuw nsw i64 %indvars.iv.next245.phi, 1
  %arrayidx50.us.0 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv.next245.phi
  br label %for.body48.us

for.body.us:                                      ; preds = %for.body.lr.ph.us, %for.body.us
  %13 = phi %struct.halide_buffer_t* [ %.pre, %for.body.lr.ph.us ], [ %16, %for.body.us ]
  %indvars.iv242 = phi i64 [ 0, %for.body.lr.ph.us ], [ %indvars.iv.next243, %for.body.us ]
  %no_host_pointers_equal.0222.us = phi i8 [ 1, %for.body.lr.ph.us ], [ %spec.select.us, %for.body.us ]
  %arrayidx24.us = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv242
  %14 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx24.us, align 8, !tbaa !14
  %dim.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %13, i64 %indvars.iv242, i32 6
  %15 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.us, align 8, !tbaa !184
  %call30.us = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %14, %struct.halide_dimension_t* %15) #15
  %16 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf27.us, align 8, !tbaa !234
  %host35.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %16, i64 %indvars.iv242, i32 2
  %17 = load i8*, i8** %host35.us, align 8, !tbaa !180
  %host36.us = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %14, i64 0, i32 2
  %18 = load i8*, i8** %host36.us, align 8, !tbaa !180
  %cmp37.us = icmp eq i8* %17, %18
  %spec.select.us = select i1 %cmp37.us, i8 0, i8 %no_host_pointers_equal.0222.us
  %indvars.iv.next243 = add nuw nsw i64 %indvars.iv242, 1
  %cmp22.us = icmp ult i64 %indvars.iv.next243, %4
  %19 = and i1 %cmp22.us, %call30.us
  br i1 %19, label %for.body.us, label %for.cond.cleanup.us, !llvm.loop !290

for.body.lr.ph.us:                                ; preds = %land.lhs.true18.us
  %buf27.us = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230.us, i64 0, i32 11
  %.pre = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %buf27.us, align 8, !tbaa !234
  br label %for.body.us

for.cond61.preheader:                             ; preds = %if.end59, %if.end59.us, %entry
  %cmp62218 = icmp sgt i32 %tuple_count, 0
  br i1 %cmp62218, label %for.body64.preheader, label %for.cond.cleanup63

for.body64.preheader:                             ; preds = %for.cond61.preheader
  %wide.trip.count240 = zext i32 %tuple_count to i64
  br label %for.body64

while.body:                                       ; preds = %while.body.lr.ph, %if.end59
  %entry6.0230 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %entry6.0, %if.end59 ], [ %entry6.0228, %while.body.lr.ph ]
  %hash8 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 6
  %20 = load i32, i32* %hash8, align 8, !tbaa !254
  %cmp9 = icmp eq i32 %20, %2
  br i1 %cmp9, label %land.lhs.true, label %if.end59

land.lhs.true:                                    ; preds = %while.body
  %key_size = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 4
  %21 = load i64, i64* %key_size, align 8, !tbaa !253
  %cmp11 = icmp eq i64 %21, %conv10
  br i1 %cmp11, label %land.lhs.true12, label %if.end59

land.lhs.true12:                                  ; preds = %land.lhs.true
  %key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 5
  %22 = load i8*, i8** %key, align 8, !tbaa !258
  %call14 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10keys_equalEPKhS3_m(i8* %22, i8* %cache_key, i64 %conv10) #15
  br i1 %call14, label %land.lhs.true15, label %if.end59

land.lhs.true15:                                  ; preds = %land.lhs.true12
  %computed_bounds16 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 10
  %23 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %computed_bounds16, align 8, !tbaa !257
  %call17 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal16buffer_has_shapeEPK15halide_buffer_tPK18halide_dimension_t(%struct.halide_buffer_t* %computed_bounds, %struct.halide_dimension_t* %23) #15
  br i1 %call17, label %land.lhs.true18, label %if.end59

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %tuple_count19 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 8
  %24 = load i32, i32* %tuple_count19, align 8, !tbaa !232
  %cmp20 = icmp eq i32 %24, %tuple_count
  br i1 %cmp20, label %cleanup132, label %if.end59

if.end59:                                         ; preds = %land.lhs.true18, %land.lhs.true15, %land.lhs.true12, %land.lhs.true, %while.body
  %next = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0230, i64 0, i32 0
  %entry6.0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next, align 8, !tbaa !14
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %entry6.0, null
  br i1 %cmp.not, label %for.cond61.preheader, label %while.body, !llvm.loop !288

for.cond.cleanup63:                               ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %for.cond61.preheader
  %added_size.0.lcssa = phi i64 [ 0, %for.cond61.preheader ], [ %add, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %25 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !22
  %add73 = add i64 %25, %added_size.0.lcssa
  store i64 %add73, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !22
  tail call void @_ZN6Halide7Runtime8Internal11prune_cacheEv() #15
  %call74 = tail call i8* @halide_malloc(i8* null, i64 96) #14
  %tobool75.not = icmp eq i8* %call74, null
  br i1 %tobool75.not, label %if.then83, label %if.then76

for.body64:                                       ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %for.body64.preheader
  %indvars.iv238 = phi i64 [ 0, %for.body64.preheader ], [ %indvars.iv.next239, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %added_size.0219 = phi i64 [ 0, %for.body64.preheader ], [ %add, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ]
  %arrayidx67 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv238
  %26 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx67, align 8, !tbaa !14
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %26, i64 0, i32 5
  %27 = load i32, i32* %dimensions.i.i, align 4, !tbaa !183
  %cmp19.i.i = icmp sgt i32 %27, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %for.body64._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge

for.body64._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge: ; preds = %for.body64
  %sub.i.0 = sub nsw i64 1, 0
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %for.body64
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %26, i64 0, i32 6
  %28 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !184
  %wide.trip.count.i.i = zext i32 %27 to i64
  %min.iters.check24 = icmp ult i32 %27, 3
  br i1 %min.iters.check24, label %for.body.i.i.preheader, label %vector.ph25

vector.ph25:                                      ; preds = %for.body.lr.ph.i.i
  %n.vec27 = and i64 %wide.trip.count.i.i, 4294967294
  br label %vector.body23

vector.body23:                                    ; preds = %pred.load.continue39, %vector.ph25
  %index28 = phi i64 [ 0, %vector.ph25 ], [ %index.next29, %pred.load.continue39 ]
  %vec.phi34 = phi i64 [ 0, %vector.ph25 ], [ %predphi40, %pred.load.continue39 ]
  %vec.phi35 = phi i64 [ 0, %vector.ph25 ], [ %predphi41, %pred.load.continue39 ]
  %induction33 = or i64 %index28, 1
  %29 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %index28, i32 2
  %30 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %induction33, i32 2
  %31 = load i32, i32* %29, align 4, !tbaa !185
  %32 = load i32, i32* %30, align 4, !tbaa !185
  %33 = icmp sgt i32 %31, 0
  %34 = icmp sgt i32 %32, 0
  %35 = zext i32 %31 to i64
  %36 = zext i32 %32 to i64
  br i1 %33, label %pred.load.if36, label %pred.load.continue37

pred.load.if36:                                   ; preds = %vector.body23
  %37 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %index28, i32 1
  %38 = load i32, i32* %37, align 4, !tbaa !189
  br label %pred.load.continue37

pred.load.continue37:                             ; preds = %pred.load.if36, %vector.body23
  %39 = phi i32 [ poison, %vector.body23 ], [ %38, %pred.load.if36 ]
  br i1 %34, label %pred.load.if38, label %pred.load.continue39

pred.load.if38:                                   ; preds = %pred.load.continue37
  %40 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %induction33, i32 1
  %41 = load i32, i32* %40, align 4, !tbaa !189
  br label %pred.load.continue39

pred.load.continue39:                             ; preds = %pred.load.if38, %pred.load.continue37
  %42 = phi i32 [ poison, %pred.load.continue37 ], [ %41, %pred.load.if38 ]
  %43 = add nsw i32 %39, -1
  %44 = add nsw i32 %42, -1
  %45 = sext i32 %43 to i64
  %46 = sext i32 %44 to i64
  %47 = mul nsw i64 %45, %35
  %48 = mul nsw i64 %46, %36
  %49 = select i1 %33, i64 %47, i64 0
  %predphi40 = add i64 %vec.phi34, %49
  %50 = select i1 %34, i64 %48, i64 0
  %predphi41 = add i64 %vec.phi35, %50
  %index.next29 = add i64 %index28, 2
  %51 = icmp eq i64 %index.next29, %n.vec27
  br i1 %51, label %middle.block21, label %vector.body23, !llvm.loop !291

middle.block21:                                   ; preds = %pred.load.continue39
  %bin.rdx42 = add i64 %predphi41, %predphi40
  %cmp.n31 = icmp eq i64 %n.vec27, %wide.trip.count.i.i
  br i1 %cmp.n31, label %for.body.i13.i.preheader, label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %for.body.lr.ph.i.i, %middle.block21
  %indvars.iv.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %n.vec27, %middle.block21 ]
  %index.021.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %bin.rdx42, %middle.block21 ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %if.end.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %index.021.i.i = phi i64 [ %index.1.i.i, %if.end.i.i ], [ %index.021.i.i.ph, %for.body.i.i.preheader ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %indvars.iv.i.i, i32 2
  %52 = load i32, i32* %stride2.i.i, align 4, !tbaa !185
  %cmp3.i.i = icmp sgt i32 %52, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %52 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %indvars.iv.i.i, i32 1
  %53 = load i32, i32* %extent.i.i, align 4, !tbaa !189
  %sub.i.i = add nsw i32 %53, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i.preheader, label %for.body.i.i, !llvm.loop !292

for.body.i13.i.preheader:                         ; preds = %if.end.i.i, %middle.block21
  %index.1.i.i.lcssa = phi i64 [ %bin.rdx42, %middle.block21 ], [ %index.1.i.i, %if.end.i.i ]
  %min.iters.check = icmp ult i32 %27, 3
  br i1 %min.iters.check, label %for.body.i13.i.preheader44, label %vector.ph

vector.ph:                                        ; preds = %for.body.i13.i.preheader
  %n.vec = and i64 %wide.trip.count.i.i, 4294967294
  br label %vector.body

vector.body:                                      ; preds = %pred.load.continue19, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %pred.load.continue19 ]
  %vec.phi = phi i64 [ 0, %vector.ph ], [ %predphi, %pred.load.continue19 ]
  %vec.phi17 = phi i64 [ 0, %vector.ph ], [ %predphi20, %pred.load.continue19 ]
  %induction16 = or i64 %index, 1
  %54 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %index, i32 2
  %55 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %induction16, i32 2
  %56 = load i32, i32* %54, align 4, !tbaa !185
  %57 = load i32, i32* %55, align 4, !tbaa !185
  %58 = icmp slt i32 %56, 0
  %59 = icmp slt i32 %57, 0
  %60 = sext i32 %56 to i64
  %61 = sext i32 %57 to i64
  br i1 %58, label %pred.load.if, label %pred.load.continue

pred.load.if:                                     ; preds = %vector.body
  %62 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %index, i32 1
  %63 = load i32, i32* %62, align 4, !tbaa !189
  br label %pred.load.continue

pred.load.continue:                               ; preds = %pred.load.if, %vector.body
  %64 = phi i32 [ poison, %vector.body ], [ %63, %pred.load.if ]
  br i1 %59, label %pred.load.if18, label %pred.load.continue19

pred.load.if18:                                   ; preds = %pred.load.continue
  %65 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %induction16, i32 1
  %66 = load i32, i32* %65, align 4, !tbaa !189
  br label %pred.load.continue19

pred.load.continue19:                             ; preds = %pred.load.if18, %pred.load.continue
  %67 = phi i32 [ poison, %pred.load.continue ], [ %66, %pred.load.if18 ]
  %68 = add nsw i32 %64, -1
  %69 = add nsw i32 %67, -1
  %70 = sext i32 %68 to i64
  %71 = sext i32 %69 to i64
  %72 = mul nsw i64 %70, %60
  %73 = mul nsw i64 %71, %61
  %74 = select i1 %58, i64 %72, i64 0
  %predphi = add i64 %vec.phi, %74
  %75 = select i1 %59, i64 %73, i64 0
  %predphi20 = add i64 %vec.phi17, %75
  %index.next = add i64 %index, 2
  %76 = icmp eq i64 %index.next, %n.vec
  br i1 %76, label %middle.block, label %vector.body, !llvm.loop !293

middle.block:                                     ; preds = %pred.load.continue19
  %bin.rdx = add i64 %predphi20, %predphi
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i
  br i1 %cmp.n, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i.preheader44

for.body.i13.i.preheader44:                       ; preds = %for.body.i13.i.preheader, %middle.block
  %indvars.iv.i10.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %n.vec, %middle.block ]
  %index.018.i.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %bin.rdx, %middle.block ]
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %for.body.i13.i.preheader44, %if.end.i24.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ %indvars.iv.i10.i.ph, %for.body.i13.i.preheader44 ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ %index.018.i.i.ph, %for.body.i13.i.preheader44 ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %indvars.iv.i10.i, i32 2
  %77 = load i32, i32* %stride2.i11.i, align 4, !tbaa !185
  %cmp3.i12.i = icmp slt i32 %77, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %77 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %28, i64 %indvars.iv.i10.i, i32 1
  %78 = load i32, i32* %extent.i15.i, align 4, !tbaa !189
  %sub.i16.i = add nsw i32 %78, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !294

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i, %middle.block
  %index.1.i21.i.lcssa = phi i64 [ %bin.rdx, %middle.block ], [ %index.1.i21.i, %if.end.i24.i ]
  %add8.i.i = add nsw i64 %index.1.i.i.lcssa, 1
  %sub.i.1 = sub nsw i64 %add8.i.i, %index.1.i21.i.lcssa
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %for.body64._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit
  %add8.i27.i = phi i64 [ 1, %for.body64._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge ], [ %add8.i.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i.phi = phi i64 [ %sub.i.0, %for.body64._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge ], [ %sub.i.1, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %26, i64 0, i32 4, i32 1
  %79 = load i8, i8* %bits.i.i, align 1, !tbaa !144
  %conv.i.i = zext i8 %79 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i4.i, 3
  %mul.i = mul i64 %div.i.i, %sub.i.phi
  %add = add i64 %mul.i, %added_size.0219
  %indvars.iv.next239 = add nuw nsw i64 %indvars.iv238, 1
  %exitcond241.not = icmp eq i64 %indvars.iv.next239, %wide.trip.count240
  br i1 %exitcond241.not, label %for.cond.cleanup63, label %for.body64, !llvm.loop !295

if.then76:                                        ; preds = %for.cond.cleanup63
  %80 = bitcast i8* %call74 to %"struct.Halide::Runtime::Internal::CacheEntry"*
  %conv77 = sext i32 %size to i64
  %call79 = tail call zeroext i1 @_ZN6Halide7Runtime8Internal10CacheEntry4initEPKhmjPK15halide_buffer_tiPPS5_by(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %80, i8* %cache_key, i64 %conv77, i32 %2, %struct.halide_buffer_t* %computed_bounds, i32 %tuple_count, %struct.halide_buffer_t** nonnull %tuple_buffers, i1 zeroext %has_eviction_key, i64 %eviction_key) #15
  br i1 %call79, label %if.end101, label %if.then83

if.then83:                                        ; preds = %if.then76, %for.cond.cleanup63
  %81 = load i64, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !22
  %sub = sub i64 %81, %added_size.0.lcssa
  store i64 %sub, i64* @_ZN6Halide7Runtime8Internal18current_cache_sizeE, align 8, !tbaa !22
  br i1 %cmp62218, label %for.body88.preheader, label %for.cond.cleanup87

for.body88.preheader:                             ; preds = %if.then83
  %wide.trip.count = zext i32 %tuple_count to i64
  %indvars.iv.next.0 = add nuw nsw i64 0, 1
  %arrayidx90.0 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 0
  br label %for.body88

for.cond.cleanup87:                               ; preds = %for.body88, %if.then83
  br i1 %tobool75.not, label %cleanup132, label %if.then99

for.body88:                                       ; preds = %for.body88.for.body88_crit_edge, %for.body88.preheader
  %arrayidx90.phi = phi %struct.halide_buffer_t** [ %arrayidx90.0, %for.body88.preheader ], [ %arrayidx90.1, %for.body88.for.body88_crit_edge ]
  %indvars.iv.next.phi = phi i64 [ %indvars.iv.next.0, %for.body88.preheader ], [ %indvars.iv.next.1, %for.body88.for.body88_crit_edge ]
  %82 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx90.phi, align 8, !tbaa !14
  %host91 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %82, i64 0, i32 2
  %83 = load i8*, i8** %host91, align 8, !tbaa !180
  %call92 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %83) #15
  %entry93 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call92, i64 0, i32 0
  store %"struct.Halide::Runtime::Internal::CacheEntry"* null, %"struct.Halide::Runtime::Internal::CacheEntry"** %entry93, align 8, !tbaa !286
  %exitcond.not = icmp eq i64 %indvars.iv.next.phi, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup87, label %for.body88.for.body88_crit_edge, !llvm.loop !296

for.body88.for.body88_crit_edge:                  ; preds = %for.body88
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.next.phi, 1
  %arrayidx90.1 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv.next.phi
  br label %for.body88

if.then99:                                        ; preds = %for.cond.cleanup87
  tail call void @halide_free(i8* %user_context, i8* nonnull %call74) #14
  br label %cleanup132

if.end101:                                        ; preds = %if.then76
  %84 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx7, align 8, !tbaa !14
  %next104 = bitcast i8* %call74 to %"struct.Halide::Runtime::Internal::CacheEntry"**
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %84, %"struct.Halide::Runtime::Internal::CacheEntry"** %next104, align 8, !tbaa !229
  %85 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !14
  %less_recent = getelementptr inbounds i8, i8* %call74, i64 16
  %86 = bitcast i8* %less_recent to %"struct.Halide::Runtime::Internal::CacheEntry"**
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %85, %"struct.Halide::Runtime::Internal::CacheEntry"** %86, align 8, !tbaa !252
  %cmp105.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %85, null
  br i1 %cmp105.not, label %if.end107, label %if.then106

if.then106:                                       ; preds = %if.end101
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %85, i64 0, i32 1
  %87 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent to i8**
  store i8* %call74, i8** %87, align 8, !tbaa !268
  br label %if.end107

if.end107:                                        ; preds = %if.then106, %if.end101
  store i8* %call74, i8** bitcast (%"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE to i8**), align 8, !tbaa !14
  %88 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, align 8, !tbaa !14
  %cmp108 = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %88, null
  br i1 %cmp108, label %if.then109, label %if.end110

if.then109:                                       ; preds = %if.end107
  store i8* %call74, i8** bitcast (%"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE to i8**), align 8, !tbaa !14
  br label %if.end110

if.end110:                                        ; preds = %if.then109, %if.end107
  %89 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"** %arrayidx7 to i8**
  store i8* %call74, i8** %89, align 8, !tbaa !14
  %in_use_count = getelementptr inbounds i8, i8* %call74, i64 52
  %90 = bitcast i8* %in_use_count to i32*
  store i32 %tuple_count, i32* %90, align 4, !tbaa !255
  br i1 %cmp62218, label %for.body117.preheader, label %cleanup132

for.body117.preheader:                            ; preds = %if.end110
  %wide.trip.count236 = zext i32 %tuple_count to i64
  %indvars.iv.next235.0 = add nuw nsw i64 0, 1
  %arrayidx119.0 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 0
  br label %for.body117

for.body117:                                      ; preds = %for.body117.for.body117_crit_edge, %for.body117.preheader
  %arrayidx119.phi = phi %struct.halide_buffer_t** [ %arrayidx119.0, %for.body117.preheader ], [ %arrayidx119.1, %for.body117.for.body117_crit_edge ]
  %indvars.iv.next235.phi = phi i64 [ %indvars.iv.next235.0, %for.body117.preheader ], [ %indvars.iv.next235.1, %for.body117.for.body117_crit_edge ]
  %91 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %arrayidx119.phi, align 8, !tbaa !14
  %host120 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %91, i64 0, i32 2
  %92 = load i8*, i8** %host120, align 8, !tbaa !180
  %call121 = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %92) #15
  %93 = bitcast %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call121 to i8**
  store i8* %call74, i8** %93, align 8, !tbaa !286
  %exitcond237.not = icmp eq i64 %indvars.iv.next235.phi, %wide.trip.count236
  br i1 %exitcond237.not, label %cleanup132, label %for.body117.for.body117_crit_edge, !llvm.loop !297

for.body117.for.body117_crit_edge:                ; preds = %for.body117
  %indvars.iv.next235.1 = add nuw nsw i64 %indvars.iv.next235.phi, 1
  %arrayidx119.1 = getelementptr inbounds %struct.halide_buffer_t*, %struct.halide_buffer_t** %tuple_buffers, i64 %indvars.iv.next235.phi
  br label %for.body117

cleanup132:                                       ; preds = %land.lhs.true18, %for.body48.us, %for.body117, %if.end110, %if.then99, %for.cond.cleanup87
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #14
  ret i32 0
}

; Function Attrs: nounwind
define weak void @halide_memoization_cache_release(i8* %user_context, i8* %host) local_unnamed_addr #4 {
entry:
  %call = tail call %"struct.Halide::Runtime::Internal::CacheBlockHeader"* @_ZN6Halide7Runtime8Internal21get_pointer_to_headerEPh(i8* %host) #15
  %entry2 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheBlockHeader", %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call, i64 0, i32 0
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %entry2, align 8, !tbaa !286
  %cmp = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::CacheBlockHeader"* %call to i8*
  tail call void @halide_free(i8* %user_context, i8* %1) #14
  br label %if.end6

if.else:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #14
  %in_use_count = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %0, i64 0, i32 7
  %2 = load i32, i32* %in_use_count, align 4, !tbaa !255
  %cmp3.not = icmp eq i32 %2, 0
  br i1 %cmp3.not, label %if.then4, label %do.end

if.then4:                                         ; preds = %if.else
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([123 x i8], [123 x i8]* @.str.12.47, i64 0, i64 0)) #14
  tail call void @abort() #14
  %.pre = load i32, i32* %in_use_count, align 4, !tbaa !255
  br label %do.end

do.end:                                           ; preds = %if.then4, %if.else
  %3 = phi i32 [ %.pre, %if.then4 ], [ %2, %if.else ]
  %dec = add i32 %3, -1
  store i32 %dec, i32* %in_use_count, align 4, !tbaa !255
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #14
  br label %if.end6

if.end6:                                          ; preds = %do.end, %if.then
  ret void
}

; Function Attrs: nounwind
define weak void @halide_memoization_cache_evict(i8* %user_context, i64 %eviction_key) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #14
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end25
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal16memoization_lockE) #14
  ret void

for.body:                                         ; preds = %if.end25, %entry
  %__begin1.059 = phi %"struct.Halide::Runtime::Internal::CacheEntry"** [ getelementptr inbounds ([256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 0, i64 0), %entry ], [ %incdec.ptr, %if.end25 ]
  %0 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.059, align 8, !tbaa !14
  %cmp2.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %0, null
  br i1 %cmp2.not, label %if.end25, label %while.body

while.body:                                       ; preds = %for.body, %if.end24
  %prev.058 = phi %"struct.Halide::Runtime::Internal::CacheEntry"** [ %prev.1, %if.end24 ], [ %__begin1.059, %for.body ]
  %entry1.056 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %1, %if.end24 ], [ %0, %for.body ]
  %next4 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 0
  %1 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %next4, align 8, !tbaa !229
  %has_eviction_key = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 13
  %2 = load i8, i8* %has_eviction_key, align 8, !tbaa !262, !range !21
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %if.end24, label %land.lhs.true

land.lhs.true:                                    ; preds = %while.body
  %eviction_key5 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 12
  %3 = load i64, i64* %eviction_key5, align 8, !tbaa !263
  %cmp6 = icmp eq i64 %3, %eviction_key
  br i1 %cmp6, label %if.then7, label %if.end24

if.then7:                                         ; preds = %land.lhs.true
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %1, %"struct.Halide::Runtime::Internal::CacheEntry"** %prev.058, align 8, !tbaa !14
  %more_recent = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 1
  %4 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent, align 8, !tbaa !268
  %cmp8.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %4, null
  %less_recent12 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056, i64 0, i32 2
  %5 = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent12, align 8, !tbaa !252
  br i1 %cmp8.not, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.then7
  %less_recent11 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %4, i64 0, i32 2
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %5, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent11, align 8, !tbaa !252
  %.pre = load %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %less_recent12, align 8, !tbaa !252
  br label %if.end

if.else:                                          ; preds = %if.then7
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %5, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal18most_recently_usedE, align 8, !tbaa !14
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %6 = phi %"struct.Halide::Runtime::Internal::CacheEntry"* [ %5, %if.else ], [ %.pre, %if.then9 ]
  %cmp14.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %6, null
  %more_recent18 = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry", %"struct.Halide::Runtime::Internal::CacheEntry"* %6, i64 0, i32 1
  %_ZN6Halide7Runtime8Internal19least_recently_usedE.sink = select i1 %cmp14.not, %"struct.Halide::Runtime::Internal::CacheEntry"** @_ZN6Halide7Runtime8Internal19least_recently_usedE, %"struct.Halide::Runtime::Internal::CacheEntry"** %more_recent18
  store %"struct.Halide::Runtime::Internal::CacheEntry"* %4, %"struct.Halide::Runtime::Internal::CacheEntry"** %_ZN6Halide7Runtime8Internal19least_recently_usedE.sink, align 8, !tbaa !14
  tail call void @_ZN6Halide7Runtime8Internal10CacheEntry7destroyEv(%"struct.Halide::Runtime::Internal::CacheEntry"* nonnull dereferenceable(96) %entry1.056) #15
  %7 = bitcast %"struct.Halide::Runtime::Internal::CacheEntry"* %entry1.056 to i8*
  tail call void @halide_free(i8* %user_context, i8* nonnull %7) #14
  br label %if.end24

if.end24:                                         ; preds = %if.end, %land.lhs.true, %while.body
  %prev.1 = phi %"struct.Halide::Runtime::Internal::CacheEntry"** [ %prev.058, %if.end ], [ %next4, %land.lhs.true ], [ %next4, %while.body ]
  %cmp3.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"* %1, null
  br i1 %cmp3.not, label %if.end25, label %while.body, !llvm.loop !298

if.end25:                                         ; preds = %if.end24, %for.body
  %incdec.ptr = getelementptr inbounds %"struct.Halide::Runtime::Internal::CacheEntry"*, %"struct.Halide::Runtime::Internal::CacheEntry"** %__begin1.059, i64 1
  %cmp.not = icmp eq %"struct.Halide::Runtime::Internal::CacheEntry"** %incdec.ptr, getelementptr inbounds ([256 x %"struct.Halide::Runtime::Internal::CacheEntry"*], [256 x %"struct.Halide::Runtime::Internal::CacheEntry"*]* @_ZN6Halide7Runtime8Internal13cache_entriesE, i64 1, i64 0)
  br i1 %cmp.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nounwind
define weak i8* @halide_string_to_string(i8* %dst, i8* %end, i8* %arg) local_unnamed_addr #4 {
entry:
  %cmp.not = icmp ult i8* %dst, %end
  br i1 %cmp.not, label %if.end, label %return

if.end:                                           ; preds = %entry
  %tobool.not = icmp eq i8* %arg, null
  %spec.select = select i1 %tobool.not, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i64 0, i64 0), i8* %arg
  br label %if.end5

if.then4:                                         ; preds = %if.end8
  store i8 0, i8* %dst.addr.023, align 1, !tbaa !18
  br label %return

if.end5:                                          ; preds = %if.end8, %if.end
  %arg.addr.124 = phi i8* [ %spec.select, %if.end ], [ %incdec.ptr9, %if.end8 ]
  %dst.addr.023 = phi i8* [ %dst, %if.end ], [ %incdec.ptr, %if.end8 ]
  %0 = load i8, i8* %arg.addr.124, align 1, !tbaa !18
  store i8 %0, i8* %dst.addr.023, align 1, !tbaa !18
  %cmp6 = icmp eq i8 %0, 0
  br i1 %cmp6, label %return, label %if.end8

if.end8:                                          ; preds = %if.end5
  %incdec.ptr = getelementptr inbounds i8, i8* %dst.addr.023, i64 1
  %incdec.ptr9 = getelementptr inbounds i8, i8* %arg.addr.124, i64 1
  %cmp3 = icmp eq i8* %incdec.ptr, %end
  br i1 %cmp3, label %if.then4, label %if.end5

return:                                           ; preds = %if.end5, %if.then4, %entry
  %retval.0 = phi i8* [ %end, %if.then4 ], [ %dst, %entry ], [ %dst.addr.023, %if.end5 ]
  ret i8* %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_uint64_to_string(i8* %dst, i8* %end, i64 %arg, i32 %min_digits) local_unnamed_addr #0 {
entry:
  %buf = alloca [32 x i8], align 1
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #11
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 31
  store i8 0, i8* %arrayidx, align 1, !tbaa !18
  %add.ptr = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 30
  %cmp13 = icmp sgt i32 %min_digits, 0
  %tobool14 = icmp ne i64 %arg, 0
  %1 = or i1 %tobool14, %cmp13
  br i1 %1, label %entry.for.body_crit_edge, label %for.cond.cleanup

entry.for.body_crit_edge:                         ; preds = %entry
  %inc.1 = add nuw nsw i32 0, 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %digits.0.lcssa = phi i8* [ %add.ptr, %entry ], [ %incdec.ptr, %for.body ]
  %incdec.ptr1 = getelementptr inbounds i8, i8* %digits.0.lcssa, i64 1
  %call = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* nonnull %incdec.ptr1) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #11
  ret i8* %call

for.body:                                         ; preds = %entry.for.body_crit_edge, %for.body.for.body_crit_edge
  %arg.addr.017 = phi i64 [ %div, %for.body.for.body_crit_edge ], [ %arg, %entry.for.body_crit_edge ]
  %digits.016 = phi i8* [ %incdec.ptr, %for.body.for.body_crit_edge ], [ %add.ptr, %entry.for.body_crit_edge ]
  %inc.phi = phi i32 [ %inc.0, %for.body.for.body_crit_edge ], [ %inc.1, %entry.for.body_crit_edge ]
  %div = udiv i64 %arg.addr.017, 10
  %mul.neg = mul i64 %div, -10
  %sub = add i64 %mul.neg, %arg.addr.017
  %2 = trunc i64 %sub to i8
  %conv = add i8 %2, 48
  store i8 %conv, i8* %digits.016, align 1, !tbaa !18
  %incdec.ptr = getelementptr inbounds i8, i8* %digits.016, i64 -1
  %cmp = icmp slt i32 %inc.phi, %min_digits
  %3 = icmp ugt i64 %arg.addr.017, 9
  %4 = or i1 %3, %cmp
  br i1 %4, label %for.body.for.body_crit_edge, label %for.cond.cleanup, !llvm.loop !299

for.body.for.body_crit_edge:                      ; preds = %for.body
  %inc.0 = add nuw nsw i32 %inc.phi, 1
  br label %for.body
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_int64_to_string(i8* %dst, i8* %end, i64 %arg, i32 %min_digits) local_unnamed_addr #0 {
entry:
  %cmp = icmp slt i64 %arg, 0
  %cmp1 = icmp ult i8* %dst, %end
  %or.cond = and i1 %cmp1, %cmp
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %dst, i64 1
  store i8 45, i8* %dst, align 1, !tbaa !18
  %sub = sub nsw i64 0, %arg
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %arg.addr.0 = phi i64 [ %sub, %if.then ], [ %arg, %entry ]
  %dst.addr.0 = phi i8* [ %incdec.ptr, %if.then ], [ %dst, %entry ]
  %call = tail call i8* @halide_uint64_to_string(i8* %dst.addr.0, i8* %end, i64 %arg.addr.0, i32 %min_digits) #15
  ret i8* %call
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_double_to_string(i8* %dst, i8* %end, double %arg, i32 %scientific) local_unnamed_addr #0 {
entry:
  %arg.addr = alloca double, align 8
  %bits = alloca i64, align 8
  %buf = alloca [512 x i8], align 1
  store double %arg, double* %arg.addr, align 8, !tbaa !172
  %0 = bitcast i64* %bits to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #11
  store i64 0, i64* %bits, align 8, !tbaa !22
  %1 = bitcast double* %arg.addr to i8*
  %call = call i8* @memcpy(i8* nonnull %0, i8* nonnull %1, i64 8) #14
  %2 = load i64, i64* %bits, align 8, !tbaa !22
  %and = and i64 %2, 4503599627370495
  %shr = lshr i64 %2, 52
  %3 = trunc i64 %shr to i32
  %conv = and i32 %3, 2047
  %cmp = icmp eq i32 %conv, 2047
  br i1 %cmp, label %if.then, label %if.else15

if.then:                                          ; preds = %entry
  %tobool.not = icmp eq i64 %and, 0
  %tobool10.not = icmp sgt i64 %2, -1
  br i1 %tobool.not, label %if.else9, label %if.then4

if.then4:                                         ; preds = %if.then
  br i1 %tobool10.not, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.then4
  %call7 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.57, i64 0, i64 0)) #15
  br label %cleanup147

if.else:                                          ; preds = %if.then4
  %call8 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.58, i64 0, i64 0)) #15
  br label %cleanup147

if.else9:                                         ; preds = %if.then
  br i1 %tobool10.not, label %if.else13, label %if.then11

if.then11:                                        ; preds = %if.else9
  %call12 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.59, i64 0, i64 0)) #15
  br label %cleanup147

if.else13:                                        ; preds = %if.else9
  %call14 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.60, i64 0, i64 0)) #15
  br label %cleanup147

if.else15:                                        ; preds = %entry
  %cmp16 = icmp eq i32 %conv, 0
  %cmp17 = icmp eq i64 %and, 0
  %or.cond = and i1 %cmp17, %cmp16
  br i1 %or.cond, label %if.then18, label %if.end32

if.then18:                                        ; preds = %if.else15
  %tobool19.not = icmp eq i32 %scientific, 0
  %tobool27.not = icmp sgt i64 %2, -1
  br i1 %tobool19.not, label %if.else26, label %if.then20

if.then20:                                        ; preds = %if.then18
  br i1 %tobool27.not, label %if.else24, label %if.then22

if.then22:                                        ; preds = %if.then20
  %call23 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.61, i64 0, i64 0)) #15
  br label %cleanup147

if.else24:                                        ; preds = %if.then20
  %call25 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6.62, i64 0, i64 0)) #15
  br label %cleanup147

if.else26:                                        ; preds = %if.then18
  br i1 %tobool27.not, label %if.else30, label %if.then28

if.then28:                                        ; preds = %if.else26
  %call29 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.63, i64 0, i64 0)) #15
  br label %cleanup147

if.else30:                                        ; preds = %if.else26
  %call31 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.64, i64 0, i64 0)) #15
  br label %cleanup147

if.end32:                                         ; preds = %if.else15
  %tobool33.not = icmp sgt i64 %2, -1
  br i1 %tobool33.not, label %if.end36, label %if.then34

if.then34:                                        ; preds = %if.end32
  %call35 = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.65, i64 0, i64 0)) #15
  %4 = load double, double* %arg.addr, align 8, !tbaa !172
  %fneg = fneg double %4
  store double %fneg, double* %arg.addr, align 8, !tbaa !172
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %if.end32
  %dst.addr.0 = phi i8* [ %call35, %if.then34 ], [ %dst, %if.end32 ]
  %tobool37.not = icmp eq i32 %scientific, 0
  br i1 %tobool37.not, label %if.else61, label %while.condthread-pre-split

while.condthread-pre-split:                       ; preds = %if.end36
  %.pr = load double, double* %arg.addr, align 8, !tbaa !172
  %cmp39276 = fcmp olt double %.pr, 1.000000e+00
  br i1 %cmp39276, label %while.condthread-pre-split.while.body_crit_edge, label %while.cond40thread-pre-split

while.condthread-pre-split.while.body_crit_edge:  ; preds = %while.condthread-pre-split
  %dec.1 = add nsw i32 0, -1
  br label %while.body

while.body:                                       ; preds = %while.condthread-pre-split.while.body_crit_edge, %while.body.while.body_crit_edge
  %dec.phi = phi i32 [ %dec.0, %while.body.while.body_crit_edge ], [ %dec.1, %while.condthread-pre-split.while.body_crit_edge ]
  %5 = phi double [ %mul, %while.body.while.body_crit_edge ], [ %.pr, %while.condthread-pre-split.while.body_crit_edge ]
  %mul = fmul double %5, 1.000000e+01
  %cmp39 = fcmp olt double %mul, 1.000000e+00
  br i1 %cmp39, label %while.body.while.body_crit_edge, label %while.cond.while.cond40thread-pre-split_crit_edge, !llvm.loop !300

while.body.while.body_crit_edge:                  ; preds = %while.body
  %dec.0 = add nsw i32 %dec.phi, -1
  br label %while.body

while.cond.while.cond40thread-pre-split_crit_edge: ; preds = %while.body
  store double %mul, double* %arg.addr, align 8, !tbaa !172
  br label %while.cond40thread-pre-split

while.cond40thread-pre-split:                     ; preds = %while.cond.while.cond40thread-pre-split_crit_edge, %while.condthread-pre-split
  %.pr261 = phi double [ %mul, %while.cond.while.cond40thread-pre-split_crit_edge ], [ %.pr, %while.condthread-pre-split ]
  %exponent_base_10.0.lcssa = phi i32 [ %dec.phi, %while.cond.while.cond40thread-pre-split_crit_edge ], [ 0, %while.condthread-pre-split ]
  %cmp41272 = fcmp ult double %.pr261, 1.000000e+01
  br i1 %cmp41272, label %while.end43, label %while.body42

while.body42:                                     ; preds = %while.cond40thread-pre-split, %while.body42
  %exponent_base_10.1273 = phi i32 [ %inc, %while.body42 ], [ %exponent_base_10.0.lcssa, %while.cond40thread-pre-split ]
  %6 = phi double [ %div, %while.body42 ], [ %.pr261, %while.cond40thread-pre-split ]
  %div = fdiv double %6, 1.000000e+01
  %inc = add nsw i32 %exponent_base_10.1273, 1
  %cmp41 = fcmp ult double %div, 1.000000e+01
  br i1 %cmp41, label %while.cond40.while.end43_crit_edge, label %while.body42, !llvm.loop !301

while.cond40.while.end43_crit_edge:               ; preds = %while.body42
  store double %div, double* %arg.addr, align 8, !tbaa !172
  br label %while.end43

while.end43:                                      ; preds = %while.cond40.while.end43_crit_edge, %while.cond40thread-pre-split
  %.lcssa = phi double [ %div, %while.cond40.while.end43_crit_edge ], [ %.pr261, %while.cond40thread-pre-split ]
  %exponent_base_10.1.lcssa = phi i32 [ %inc, %while.cond40.while.end43_crit_edge ], [ %exponent_base_10.0.lcssa, %while.cond40thread-pre-split ]
  %mul44 = fmul double %.lcssa, 1.000000e+06
  %add = fadd double %mul44, 5.000000e-01
  %conv45 = fptoui double %add to i64
  %div46 = udiv i64 %conv45, 1000000
  %mul47.neg = mul i64 %div46, -1000000
  %sub48 = add i64 %mul47.neg, %conv45
  %call49 = call i8* @halide_int64_to_string(i8* %dst.addr.0, i8* %end, i64 %div46, i32 1) #15
  %call50 = call i8* @halide_string_to_string(i8* %call49, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #15
  %call51 = call i8* @halide_int64_to_string(i8* %call50, i8* %end, i64 %sub48, i32 6) #15
  %cmp52 = icmp sgt i32 %exponent_base_10.1.lcssa, -1
  br i1 %cmp52, label %if.then53, label %if.else55

if.then53:                                        ; preds = %while.end43
  %call54 = call i8* @halide_string_to_string(i8* %call51, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.67, i64 0, i64 0)) #15
  br label %if.end58

if.else55:                                        ; preds = %while.end43
  %call56 = call i8* @halide_string_to_string(i8* %call51, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.68, i64 0, i64 0)) #15
  %sub57 = sub nsw i32 0, %exponent_base_10.1.lcssa
  br label %if.end58

if.end58:                                         ; preds = %if.else55, %if.then53
  %exponent_base_10.2 = phi i32 [ %exponent_base_10.1.lcssa, %if.then53 ], [ %sub57, %if.else55 ]
  %dst.addr.1 = phi i8* [ %call54, %if.then53 ], [ %call56, %if.else55 ]
  %conv59262 = zext i32 %exponent_base_10.2 to i64
  %call60 = call i8* @halide_int64_to_string(i8* %dst.addr.1, i8* %end, i64 %conv59262, i32 2) #15
  br label %cleanup147

if.else61:                                        ; preds = %if.end36
  br i1 %cmp16, label %if.then63, label %if.end65

if.then63:                                        ; preds = %if.else61
  %call64 = call i8* @halide_double_to_string(i8* %dst.addr.0, i8* %end, double 0.000000e+00, i32 0) #15
  br label %cleanup147

if.end65:                                         ; preds = %if.else61
  %add67 = or i64 %and, 4503599627370496
  %sub69 = add nsw i32 %conv, -1075
  %cmp70 = icmp ult i32 %conv, 1075
  br i1 %cmp70, label %if.then71, label %if.end104

if.then71:                                        ; preds = %if.end65
  %cmp72 = icmp ult i32 %conv, 1023
  %sub76 = sub nuw nsw i32 1075, %conv
  %sh_prom = zext i32 %sub76 to i64
  %shr77 = lshr i64 %add67, %sh_prom
  %shl80 = shl i64 %shr77, %sh_prom
  %integer_part.0 = select i1 %cmp72, i64 0, i64 %shr77
  %sub81 = select i1 %cmp72, i64 0, i64 %shl80
  %f.0.in = sub i64 %add67, %sub81
  %f.0 = uitofp i64 %f.0.in to double
  %conv84258 = zext i32 %sub69 to i64
  %shl85 = shl i64 %conv84258, 52
  %add87 = add i64 %shl85, 4696837146684686336
  %7 = bitcast i64 %add87 to double
  %mul89 = fmul double %7, %f.0
  %add90 = fadd double %mul89, 5.000000e-01
  %conv91 = fptoui double %add90 to i64
  %conv92 = uitofp i64 %conv91 to double
  %cmp93 = fcmp oeq double %add90, %conv92
  %and95 = and i64 %conv91, 1
  %tobool96.not = icmp ne i64 %and95, 0
  %not.or.cond259 = and i1 %cmp93, %tobool96.not
  %dec98 = sext i1 %not.or.cond259 to i64
  %fractional_part.0 = add i64 %dec98, %conv91
  %cmp100 = icmp eq i64 %fractional_part.0, 1000000
  %inc102 = zext i1 %cmp100 to i64
  %spec.select = add nuw i64 %integer_part.0, %inc102
  %spec.select260 = select i1 %cmp100, i64 0, i64 %fractional_part.0
  br label %if.end104

if.end104:                                        ; preds = %if.then71, %if.end65
  %integer_part.2 = phi i64 [ %spec.select, %if.then71 ], [ %add67, %if.end65 ]
  %integer_exponent.0 = phi i32 [ 0, %if.then71 ], [ %sub69, %if.end65 ]
  %fractional_part.2 = phi i64 [ %spec.select260, %if.then71 ], [ 0, %if.end65 ]
  %8 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %8) #11
  %add.ptr = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 512
  %add.ptr105 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 480
  %call108 = call i8* @halide_int64_to_string(i8* nonnull %add.ptr105, i8* nonnull %add.ptr, i64 %integer_part.2, i32 1) #15
  %cmp109267 = icmp sgt i32 %integer_exponent.0, 0
  br i1 %cmp109267, label %for.cond111.preheader, label %for.cond.cleanup

for.cond111.preheader:                            ; preds = %if.end104, %if.end137
  %i.0270 = phi i32 [ %inc139, %if.end137 ], [ 0, %if.end104 ]
  %int_part_ptr.0268 = phi i8* [ %int_part_ptr.1, %if.end137 ], [ %add.ptr105, %if.end104 ]
  %cmp113.not264 = icmp eq i8* %call108, %int_part_ptr.0268
  br i1 %cmp113.not264, label %if.end137, label %for.body115

for.cond.cleanup:                                 ; preds = %if.end137, %if.end104
  %int_part_ptr.0.lcssa = phi i8* [ %add.ptr105, %if.end104 ], [ %int_part_ptr.1, %if.end137 ]
  %call141 = call i8* @halide_string_to_string(i8* %dst.addr.0, i8* %end, i8* %int_part_ptr.0.lcssa) #15
  %call142 = call i8* @halide_string_to_string(i8* %call141, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #15
  %call143 = call i8* @halide_int64_to_string(i8* %call142, i8* %end, i64 %fractional_part.2, i32 6) #15
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %8) #11
  br label %cleanup147

for.cond.cleanup114:                              ; preds = %for.body115
  br i1 %cmp124, label %if.then135, label %if.end137

for.body115:                                      ; preds = %for.cond111.preheader, %for.body115
  %p.0266.pn = phi i8* [ %p.0266, %for.body115 ], [ %call108, %for.cond111.preheader ]
  %carry.0265 = phi i32 [ %carry.1, %for.body115 ], [ 0, %for.cond111.preheader ]
  %p.0266 = getelementptr inbounds i8, i8* %p.0266.pn, i64 -1
  %9 = load i8, i8* %p.0266, align 1, !tbaa !18
  %sub117 = add i8 %9, -48
  %conv119 = sext i8 %sub117 to i32
  %mul120 = shl nsw i32 %conv119, 1
  %add121 = or i32 %mul120, %carry.0265
  %10 = trunc i32 %add121 to i8
  %cmp124 = icmp sgt i8 %10, 9
  %sub127 = add nsw i32 %add121, 246
  %carry.1 = zext i1 %cmp124 to i32
  %new_digit.0.in = select i1 %cmp124, i32 %sub127, i32 %add121
  %11 = trunc i32 %new_digit.0.in to i8
  %conv133 = add i8 %11, 48
  store i8 %conv133, i8* %p.0266, align 1, !tbaa !18
  %cmp113.not = icmp eq i8* %p.0266, %int_part_ptr.0268
  br i1 %cmp113.not, label %for.cond.cleanup114, label %for.body115, !llvm.loop !302

if.then135:                                       ; preds = %for.cond.cleanup114
  %incdec.ptr136 = getelementptr inbounds i8, i8* %int_part_ptr.0268, i64 -1
  store i8 49, i8* %incdec.ptr136, align 1, !tbaa !18
  br label %if.end137

if.end137:                                        ; preds = %if.then135, %for.cond.cleanup114, %for.cond111.preheader
  %int_part_ptr.1 = phi i8* [ %incdec.ptr136, %if.then135 ], [ %int_part_ptr.0268, %for.cond.cleanup114 ], [ %call108, %for.cond111.preheader ]
  %inc139 = add nuw nsw i32 %i.0270, 1
  %exitcond.not = icmp eq i32 %inc139, %integer_exponent.0
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond111.preheader, !llvm.loop !303

cleanup147:                                       ; preds = %for.cond.cleanup, %if.then63, %if.end58, %if.else30, %if.then28, %if.else24, %if.then22, %if.else13, %if.then11, %if.else, %if.then6
  %retval.1 = phi i8* [ %call7, %if.then6 ], [ %call8, %if.else ], [ %call12, %if.then11 ], [ %call14, %if.else13 ], [ %call23, %if.then22 ], [ %call25, %if.else24 ], [ %call29, %if.then28 ], [ %call31, %if.else30 ], [ %call64, %if.then63 ], [ %call60, %if.end58 ], [ %call143, %for.cond.cleanup ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #11
  ret i8* %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_pointer_to_string(i8* %dst, i8* %end, i8* %arg) local_unnamed_addr #0 {
entry:
  %buf = alloca [20 x i8], align 1
  %0 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %0) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 dereferenceable(20) %0, i8 0, i64 20, i1 false)
  %add.ptr = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 18
  %1 = ptrtoint i8* %arg to i64
  %and = and i64 %1, 15
  %arrayidx = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !18
  %incdec.ptr = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 17
  store i8 %2, i8* %add.ptr, align 1, !tbaa !18
  %shr = lshr i64 %1, 4
  %tobool.not = icmp eq i64 %shr, 0
  br i1 %tobool.not, label %cleanup, label %for.cond

for.cond:                                         ; preds = %entry
  %and.1 = and i64 %shr, 15
  %arrayidx.1 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.1
  %3 = load i8, i8* %arrayidx.1, align 1, !tbaa !18
  %incdec.ptr.1 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 16
  store i8 %3, i8* %incdec.ptr, align 1, !tbaa !18
  %shr.1 = lshr i64 %1, 8
  %tobool.not.1 = icmp eq i64 %shr.1, 0
  br i1 %tobool.not.1, label %cleanup, label %for.cond.1

cleanup:                                          ; preds = %for.cond.14, %for.cond.13, %for.cond.12, %for.cond.11, %for.cond.10, %for.cond.9, %for.cond.8, %for.cond.7, %for.cond.6, %for.cond.5, %for.cond.4, %for.cond.3, %for.cond.2, %for.cond.1, %for.cond, %entry
  %buf_ptr.016.lcssa = phi i8* [ %add.ptr, %entry ], [ %incdec.ptr, %for.cond ], [ %incdec.ptr.1, %for.cond.1 ], [ %incdec.ptr.2, %for.cond.2 ], [ %incdec.ptr.3, %for.cond.3 ], [ %incdec.ptr.4, %for.cond.4 ], [ %incdec.ptr.5, %for.cond.5 ], [ %incdec.ptr.6, %for.cond.6 ], [ %incdec.ptr.7, %for.cond.7 ], [ %incdec.ptr.8, %for.cond.8 ], [ %incdec.ptr.9, %for.cond.9 ], [ %incdec.ptr.10, %for.cond.10 ], [ %incdec.ptr.11, %for.cond.11 ], [ %incdec.ptr.12, %for.cond.12 ], [ %incdec.ptr.13, %for.cond.13 ], [ %incdec.ptr.14, %for.cond.14 ]
  %incdec.ptr.lcssa = phi i8* [ %incdec.ptr, %entry ], [ %incdec.ptr.1, %for.cond ], [ %incdec.ptr.2, %for.cond.1 ], [ %incdec.ptr.3, %for.cond.2 ], [ %incdec.ptr.4, %for.cond.3 ], [ %incdec.ptr.5, %for.cond.4 ], [ %incdec.ptr.6, %for.cond.5 ], [ %incdec.ptr.7, %for.cond.6 ], [ %incdec.ptr.8, %for.cond.7 ], [ %incdec.ptr.9, %for.cond.8 ], [ %incdec.ptr.10, %for.cond.9 ], [ %incdec.ptr.11, %for.cond.10 ], [ %incdec.ptr.12, %for.cond.11 ], [ %incdec.ptr.13, %for.cond.12 ], [ %incdec.ptr.14, %for.cond.13 ], [ %incdec.ptr.15, %for.cond.14 ]
  %incdec.ptr1 = getelementptr inbounds i8, i8* %buf_ptr.016.lcssa, i64 -2
  store i8 120, i8* %incdec.ptr.lcssa, align 1, !tbaa !18
  store i8 48, i8* %incdec.ptr1, align 1, !tbaa !18
  %call = call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* nonnull %incdec.ptr1) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %0) #11
  ret i8* %call

for.cond.1:                                       ; preds = %for.cond
  %and.2 = and i64 %shr.1, 15
  %arrayidx.2 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.2
  %4 = load i8, i8* %arrayidx.2, align 1, !tbaa !18
  %incdec.ptr.2 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 15
  store i8 %4, i8* %incdec.ptr.1, align 1, !tbaa !18
  %shr.2 = lshr i64 %1, 12
  %tobool.not.2 = icmp eq i64 %shr.2, 0
  br i1 %tobool.not.2, label %cleanup, label %for.cond.2

for.cond.2:                                       ; preds = %for.cond.1
  %and.3 = and i64 %shr.2, 15
  %arrayidx.3 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.3
  %5 = load i8, i8* %arrayidx.3, align 1, !tbaa !18
  %incdec.ptr.3 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 14
  store i8 %5, i8* %incdec.ptr.2, align 1, !tbaa !18
  %shr.3 = lshr i64 %1, 16
  %tobool.not.3 = icmp eq i64 %shr.3, 0
  br i1 %tobool.not.3, label %cleanup, label %for.cond.3

for.cond.3:                                       ; preds = %for.cond.2
  %and.4 = and i64 %shr.3, 15
  %arrayidx.4 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.4
  %6 = load i8, i8* %arrayidx.4, align 1, !tbaa !18
  %incdec.ptr.4 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 13
  store i8 %6, i8* %incdec.ptr.3, align 1, !tbaa !18
  %shr.4 = lshr i64 %1, 20
  %tobool.not.4 = icmp eq i64 %shr.4, 0
  br i1 %tobool.not.4, label %cleanup, label %for.cond.4

for.cond.4:                                       ; preds = %for.cond.3
  %and.5 = and i64 %shr.4, 15
  %arrayidx.5 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.5
  %7 = load i8, i8* %arrayidx.5, align 1, !tbaa !18
  %incdec.ptr.5 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 12
  store i8 %7, i8* %incdec.ptr.4, align 1, !tbaa !18
  %shr.5 = lshr i64 %1, 24
  %tobool.not.5 = icmp eq i64 %shr.5, 0
  br i1 %tobool.not.5, label %cleanup, label %for.cond.5

for.cond.5:                                       ; preds = %for.cond.4
  %and.6 = and i64 %shr.5, 15
  %arrayidx.6 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.6
  %8 = load i8, i8* %arrayidx.6, align 1, !tbaa !18
  %incdec.ptr.6 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 11
  store i8 %8, i8* %incdec.ptr.5, align 1, !tbaa !18
  %shr.6 = lshr i64 %1, 28
  %tobool.not.6 = icmp eq i64 %shr.6, 0
  br i1 %tobool.not.6, label %cleanup, label %for.cond.6

for.cond.6:                                       ; preds = %for.cond.5
  %and.7 = and i64 %shr.6, 15
  %arrayidx.7 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.7
  %9 = load i8, i8* %arrayidx.7, align 1, !tbaa !18
  %incdec.ptr.7 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 10
  store i8 %9, i8* %incdec.ptr.6, align 1, !tbaa !18
  %shr.7 = lshr i64 %1, 32
  %tobool.not.7 = icmp eq i64 %shr.7, 0
  br i1 %tobool.not.7, label %cleanup, label %for.cond.7

for.cond.7:                                       ; preds = %for.cond.6
  %and.8 = and i64 %shr.7, 15
  %arrayidx.8 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.8
  %10 = load i8, i8* %arrayidx.8, align 1, !tbaa !18
  %incdec.ptr.8 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 9
  store i8 %10, i8* %incdec.ptr.7, align 1, !tbaa !18
  %shr.8 = lshr i64 %1, 36
  %tobool.not.8 = icmp eq i64 %shr.8, 0
  br i1 %tobool.not.8, label %cleanup, label %for.cond.8

for.cond.8:                                       ; preds = %for.cond.7
  %and.9 = and i64 %shr.8, 15
  %arrayidx.9 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.9
  %11 = load i8, i8* %arrayidx.9, align 1, !tbaa !18
  %incdec.ptr.9 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 8
  store i8 %11, i8* %incdec.ptr.8, align 1, !tbaa !18
  %shr.9 = lshr i64 %1, 40
  %tobool.not.9 = icmp eq i64 %shr.9, 0
  br i1 %tobool.not.9, label %cleanup, label %for.cond.9

for.cond.9:                                       ; preds = %for.cond.8
  %and.10 = and i64 %shr.9, 15
  %arrayidx.10 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.10
  %12 = load i8, i8* %arrayidx.10, align 1, !tbaa !18
  %incdec.ptr.10 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 7
  store i8 %12, i8* %incdec.ptr.9, align 1, !tbaa !18
  %shr.10 = lshr i64 %1, 44
  %tobool.not.10 = icmp eq i64 %shr.10, 0
  br i1 %tobool.not.10, label %cleanup, label %for.cond.10

for.cond.10:                                      ; preds = %for.cond.9
  %and.11 = and i64 %shr.10, 15
  %arrayidx.11 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.11
  %13 = load i8, i8* %arrayidx.11, align 1, !tbaa !18
  %incdec.ptr.11 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 6
  store i8 %13, i8* %incdec.ptr.10, align 1, !tbaa !18
  %shr.11 = lshr i64 %1, 48
  %tobool.not.11 = icmp eq i64 %shr.11, 0
  br i1 %tobool.not.11, label %cleanup, label %for.cond.11

for.cond.11:                                      ; preds = %for.cond.10
  %and.12 = and i64 %shr.11, 15
  %arrayidx.12 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.12
  %14 = load i8, i8* %arrayidx.12, align 1, !tbaa !18
  %incdec.ptr.12 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 5
  store i8 %14, i8* %incdec.ptr.11, align 1, !tbaa !18
  %shr.12 = lshr i64 %1, 52
  %tobool.not.12 = icmp eq i64 %shr.12, 0
  br i1 %tobool.not.12, label %cleanup, label %for.cond.12

for.cond.12:                                      ; preds = %for.cond.11
  %and.13 = and i64 %shr.12, 15
  %arrayidx.13 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.13
  %15 = load i8, i8* %arrayidx.13, align 1, !tbaa !18
  %incdec.ptr.13 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 4
  store i8 %15, i8* %incdec.ptr.12, align 1, !tbaa !18
  %shr.13 = lshr i64 %1, 56
  %tobool.not.13 = icmp eq i64 %shr.13, 0
  br i1 %tobool.not.13, label %cleanup, label %for.cond.13

for.cond.13:                                      ; preds = %for.cond.12
  %and.14 = and i64 %shr.13, 15
  %arrayidx.14 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %and.14
  %16 = load i8, i8* %arrayidx.14, align 1, !tbaa !18
  %incdec.ptr.14 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 3
  store i8 %16, i8* %incdec.ptr.13, align 1, !tbaa !18
  %shr.14 = lshr i64 %1, 60
  %tobool.not.14 = icmp eq i64 %shr.14, 0
  br i1 %tobool.not.14, label %cleanup, label %for.cond.14

for.cond.14:                                      ; preds = %for.cond.13
  %arrayidx.15 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.13.71, i64 0, i64 %shr.14
  %17 = load i8, i8* %arrayidx.15, align 1, !tbaa !18
  %incdec.ptr.15 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 2
  store i8 %17, i8* %incdec.ptr.14, align 1, !tbaa !18
  br label %cleanup
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_type_to_string(i8* %dst, i8* %end, %struct.halide_type_t* %t) local_unnamed_addr #0 {
entry:
  %code = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %t, i64 0, i32 0
  %0 = load i8, i8* %code, align 2, !tbaa !304
  %1 = icmp ult i8 %0, 4
  br i1 %1, label %switch.lookup, label %sw.epilog

switch.lookup:                                    ; preds = %entry
  %2 = sext i8 %0 to i64
  %switch.gep = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table.halide_type_to_string, i64 0, i64 %2
  %switch.load = load i8*, i8** %switch.gep, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %switch.lookup
  %code_name.0 = phi i8* [ %switch.load, %switch.lookup ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18.72, i64 0, i64 0), %entry ]
  %call = tail call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* nonnull %code_name.0) #15
  %bits = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %t, i64 0, i32 1
  %3 = load i8, i8* %bits, align 1, !tbaa !144
  %conv4 = zext i8 %3 to i64
  %call5 = tail call i8* @halide_uint64_to_string(i8* %call, i8* %end, i64 %conv4, i32 1) #15
  %lanes = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %t, i64 0, i32 2
  %4 = load i16, i16* %lanes, align 2, !tbaa !305
  %cmp.not = icmp eq i16 %4, 1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %sw.epilog
  %call7 = tail call i8* @halide_string_to_string(i8* %call5, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19.77, i64 0, i64 0)) #15
  %5 = load i16, i16* %lanes, align 2, !tbaa !305
  %conv9 = zext i16 %5 to i64
  %call10 = tail call i8* @halide_uint64_to_string(i8* %call7, i8* %end, i64 %conv9, i32 1) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.epilog
  %dst.addr.0 = phi i8* [ %call10, %if.then ], [ %call5, %sw.epilog ]
  ret i8* %dst.addr.0
}

; Function Attrs: nounwind mustprogress
define weak i8* @halide_buffer_to_string(i8* %dst, i8* %end, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20.78, i64 0, i64 0)) #15
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call i8* @halide_string_to_string(i8* %dst, i8* %end, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21.79, i64 0, i64 0)) #15
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !182
  %call2 = tail call i8* @halide_uint64_to_string(i8* %call1, i8* %end, i64 %0, i32 1) #15
  %call3 = tail call i8* @halide_string_to_string(i8* %call2, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #15
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %1 = bitcast %struct.halide_device_interface_t** %device_interface to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !306
  %call4 = tail call i8* @halide_pointer_to_string(i8* %call3, i8* %end, i8* %2) #15
  %call5 = tail call i8* @halide_string_to_string(i8* %call4, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #15
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %3 = load i8*, i8** %host, align 8, !tbaa !180
  %call6 = tail call i8* @halide_pointer_to_string(i8* %call5, i8* %end, i8* %3) #15
  %call7 = tail call i8* @halide_string_to_string(i8* %call6, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #15
  %flags = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %4 = load i64, i64* %flags, align 8, !tbaa !307
  %call8 = tail call i8* @halide_uint64_to_string(i8* %call7, i8* %end, i64 %4, i32 1) #15
  %call9 = tail call i8* @halide_string_to_string(i8* %call8, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #15
  %type = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 4
  %call10 = tail call i8* @halide_type_to_string(i8* %call9, i8* %end, %struct.halide_type_t* nonnull %type) #15
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %5 = load i32, i32* %dimensions, align 4, !tbaa !183
  %cmp1179 = icmp sgt i32 %5, 0
  br i1 %cmp1179, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %dim = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.end
  %dst.addr.0.lcssa = phi i8* [ %call10, %if.end ], [ %call26, %for.body ]
  %call27 = tail call i8* @halide_string_to_string(i8* %dst.addr.0.lcssa, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)) #15
  br label %return

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %dst.addr.080 = phi i8* [ %call10, %for.body.lr.ph ], [ %call26, %for.body ]
  %call12 = tail call i8* @halide_string_to_string(i8* %dst.addr.080, i8* %end, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23.82, i64 0, i64 0)) #15
  %6 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !184
  %min = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %6, i64 %indvars.iv, i32 0
  %7 = load i32, i32* %min, align 4, !tbaa !221
  %conv = sext i32 %7 to i64
  %call13 = tail call i8* @halide_int64_to_string(i8* %call12, i8* %end, i64 %conv, i32 1) #15
  %call14 = tail call i8* @halide_string_to_string(i8* %call13, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #15
  %8 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !184
  %extent = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %8, i64 %indvars.iv, i32 1
  %9 = load i32, i32* %extent, align 4, !tbaa !189
  %conv18 = sext i32 %9 to i64
  %call19 = tail call i8* @halide_int64_to_string(i8* %call14, i8* %end, i64 %conv18, i32 1) #15
  %call20 = tail call i8* @halide_string_to_string(i8* %call19, i8* %end, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #15
  %10 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim, align 8, !tbaa !184
  %stride = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %10, i64 %indvars.iv, i32 2
  %11 = load i32, i32* %stride, align 4, !tbaa !185
  %conv24 = sext i32 %11 to i64
  %call25 = tail call i8* @halide_int64_to_string(i8* %call20, i8* %end, i64 %conv24, i32 1) #15
  %call26 = tail call i8* @halide_string_to_string(i8* %call25, i8* %end, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.83, i64 0, i64 0)) #15
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %12 = load i32, i32* %dimensions, align 4, !tbaa !183
  %13 = sext i32 %12 to i64
  %cmp11 = icmp slt i64 %indvars.iv.next, %13
  br i1 %cmp11, label %for.body, label %for.cond.cleanup, !llvm.loop !308

return:                                           ; preds = %for.cond.cleanup, %if.then
  %retval.0 = phi i8* [ %call, %if.then ], [ %call27, %for.cond.cleanup ]
  ret i8* %retval.0
}

; Function Attrs: alwaysinline nounwind willreturn mustprogress
define weak i32 @halide_malloc_alignment() local_unnamed_addr #6 {
entry:
  ret i32 32
}

; Function Attrs: nounwind
define weak i32 @halide_reuse_device_allocations(i8* %user_context, i1 zeroext %flag) local_unnamed_addr #4 {
entry:
  %frombool = zext i1 %flag to i8
  store i8 %frombool, i8* @_ZN6Halide7Runtime8Internal36halide_reuse_device_allocations_flagE, align 1, !tbaa !19
  br i1 %flag, label %if.end5, label %if.then

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #14
  %p.014 = load %struct.halide_device_allocation_pool*, %struct.halide_device_allocation_pool** @_ZN6Halide7Runtime8Internal23device_allocation_poolsE, align 8, !tbaa !14
  %cmp.not15 = icmp eq %struct.halide_device_allocation_pool* %p.014, null
  br i1 %cmp.not15, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.then
  %err.0.lcssa = phi i32 [ 0, %if.then ], [ %spec.select, %for.body ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #14
  br label %if.end5

for.body:                                         ; preds = %if.then, %for.body
  %p.017 = phi %struct.halide_device_allocation_pool* [ %p.0, %for.body ], [ %p.014, %if.then ]
  %err.016 = phi i32 [ %spec.select, %for.body ], [ 0, %if.then ]
  %release_unused = getelementptr inbounds %struct.halide_device_allocation_pool, %struct.halide_device_allocation_pool* %p.017, i64 0, i32 0
  %0 = load i32 (i8*)*, i32 (i8*)** %release_unused, align 8, !tbaa !309
  %call = tail call i32 %0(i8* %user_context) #14
  %tobool3.not = icmp eq i32 %call, 0
  %spec.select = select i1 %tobool3.not, i32 %err.016, i32 %call
  %next = getelementptr inbounds %struct.halide_device_allocation_pool, %struct.halide_device_allocation_pool* %p.017, i64 0, i32 1
  %p.0 = load %struct.halide_device_allocation_pool*, %struct.halide_device_allocation_pool** %next, align 8, !tbaa !14
  %cmp.not = icmp eq %struct.halide_device_allocation_pool* %p.0, null
  br i1 %cmp.not, label %for.cond.cleanup, label %for.body, !llvm.loop !311

if.end5:                                          ; preds = %for.cond.cleanup, %entry
  %err.2 = phi i32 [ 0, %entry ], [ %err.0.lcssa, %for.cond.cleanup ]
  ret i32 %err.2
}

; Function Attrs: nounwind willreturn mustprogress
define weak zeroext i1 @halide_can_reuse_device_allocations(i8* %user_context) local_unnamed_addr #2 {
entry:
  %0 = load i8, i8* @_ZN6Halide7Runtime8Internal36halide_reuse_device_allocations_flagE, align 1, !tbaa !19, !range !21
  %tobool = icmp ne i8 %0, 0
  ret i1 %tobool
}

; Function Attrs: nounwind
define weak void @halide_register_device_allocation_pool(%struct.halide_device_allocation_pool* %pool) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #14
  %0 = load %struct.halide_device_allocation_pool*, %struct.halide_device_allocation_pool** @_ZN6Halide7Runtime8Internal23device_allocation_poolsE, align 8, !tbaa !14
  %next = getelementptr inbounds %struct.halide_device_allocation_pool, %struct.halide_device_allocation_pool* %pool, i64 0, i32 1
  store %struct.halide_device_allocation_pool* %0, %struct.halide_device_allocation_pool** %next, align 8, !tbaa !312
  store %struct.halide_device_allocation_pool* %pool, %struct.halide_device_allocation_pool** @_ZN6Halide7Runtime8Internal23device_allocation_poolsE, align 8, !tbaa !14
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal21allocation_pools_lockE) #14
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %flags.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %0 = load i64, i64* %flags.i.i, align 8, !tbaa !307
  %and.i.i = and i64 %0, 2
  %cmp.i.i.not = icmp eq i64 %and.i.i, 0
  br i1 %cmp.i.i.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %1 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !306
  %and.i.i46 = and i64 %0, 1
  %cmp.i.i47.not = icmp eq i64 %and.i.i46, 0
  br i1 %cmp.i.i47.not, label %if.end9, label %return

if.end9:                                          ; preds = %if.end
  %cmp = icmp eq %struct.halide_device_interface_t* %1, null
  br i1 %cmp, label %return, label %if.end15

if.end15:                                         ; preds = %if.end9
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %1, i64 0, i32 15
  %2 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %copy_to_host = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %2, i64 0, i32 6
  %3 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %copy_to_host, align 8, !tbaa !315
  %call16 = tail call i32 %3(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %cmp17.not = icmp eq i32 %call16, 0
  br i1 %cmp17.not, label %if.end23, label %return

if.end23:                                         ; preds = %if.end15
  %4 = load i64, i64* %flags.i.i, align 8, !tbaa !307
  %and.i.i44 = and i64 %4, -3
  store i64 %and.i.i44, i64* %flags.i.i, align 8, !tbaa !307
  %call24 = tail call i32 @halide_msan_annotate_buffer_is_initialized(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  br label %return

return:                                           ; preds = %if.end23, %if.end15, %if.end9, %if.end, %entry
  %retval.2 = phi i32 [ 0, %entry ], [ 0, %if.end23 ], [ -14, %if.end ], [ -19, %if.end9 ], [ -14, %if.end15 ]
  ret i32 %retval.2
}

; Function Attrs: nounwind mustprogress
define weak void @halide_device_release(i8* %user_context, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i64 0, i32 15
  %0 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %device_release = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %0, i64 0, i32 5
  %1 = load i32 (i8*)*, i32 (i8*)** %device_release, align 8, !tbaa !317
  %call = tail call i32 %1(i8* %user_context) #14
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_copy_to_host(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.88, i64 0, i64 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !306
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !182
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !307
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end16.i.split

if.end16.i.split:                                 ; preds = %if.end16.i
  %call11 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  br label %cleanup

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %call12 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* %buf) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end16.i.split, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ %call11, %if.end16.i.split ], [ %call12, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define linkonce i32 @copy_to_device_already_locked(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.89, i64 0, i64 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !306
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !182
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !307
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %if.end, label %cleanup

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit, %if.end16.i
  %cmp1 = icmp eq %struct.halide_device_interface_t* %device_interface, null
  br i1 %cmp1, label %if.then2, label %if.end11

if.then2:                                         ; preds = %if.end
  %device_interface5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %4 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface5, align 8, !tbaa !306
  %cmp6 = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp6, label %if.then7, label %if.end11

if.then7:                                         ; preds = %if.then2
  %call8 = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %cleanup

if.end11:                                         ; preds = %if.then2, %if.end
  %device_interface.addr.0 = phi %struct.halide_device_interface_t* [ %device_interface, %if.end ], [ %4, %if.then2 ]
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %5 = load i64, i64* %device, align 8, !tbaa !182
  %tobool.not = icmp eq i64 %5, 0
  br i1 %tobool.not, label %if.then18, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end11
  %device_interface12 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %6 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface12, align 8, !tbaa !306
  %cmp13.not = icmp eq %struct.halide_device_interface_t* %6, %device_interface.addr.0
  br i1 %cmp13.not, label %if.end27, label %if.then14

if.then14:                                        ; preds = %land.lhs.true
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.9.90, i64 0, i64 0)) #14
  br label %cleanup

if.then18:                                        ; preds = %if.end11
  %call19 = tail call i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* nonnull %buf, %struct.halide_device_interface_t* nonnull %device_interface.addr.0) #15
  %cmp20.not = icmp eq i32 %call19, 0
  br i1 %cmp20.not, label %if.end27, label %cleanup

if.end27:                                         ; preds = %if.then18, %land.lhs.true
  %flags.i.i97 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %7 = load i64, i64* %flags.i.i97, align 8, !tbaa !307
  %and.i.i98 = and i64 %7, 1
  %cmp.i.i99.not = icmp eq i64 %and.i.i98, 0
  br i1 %cmp.i.i99.not, label %cleanup, label %if.then29

if.then29:                                        ; preds = %if.end27
  %and.i.i96 = and i64 %7, 2
  %cmp.i.i.not = icmp eq i64 %and.i.i96, 0
  br i1 %cmp.i.i.not, label %if.else, label %cleanup

if.else:                                          ; preds = %if.then29
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface.addr.0, i64 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %copy_to_device = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i64 0, i32 7
  %9 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %copy_to_device, align 8, !tbaa !318
  %call44 = tail call i32 %9(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %cmp45 = icmp eq i32 %call44, 0
  br i1 %cmp45, label %if.then46, label %cleanup

if.then46:                                        ; preds = %if.else
  %10 = load i64, i64* %flags.i.i97, align 8, !tbaa !307
  %and.i.i = and i64 %10, -2
  store i64 %and.i.i, i64* %flags.i.i97, align 8, !tbaa !307
  br label %cleanup

cleanup:                                          ; preds = %if.then46, %if.else, %if.then29, %if.end27, %if.then18, %if.then14, %if.then7, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %call8, %if.then7 ], [ -42, %if.then14 ], [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.then46 ], [ %call19, %if.then18 ], [ -15, %if.then29 ], [ -15, %if.else ], [ 0, %if.end27 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17.91, i64 0, i64 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !306
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !182
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !307
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup12

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface3.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface3.phi.trans.insert, align 8, !tbaa !306
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp4.not = icmp eq %struct.halide_device_interface_t* %4, null
  %cmp5.not = icmp eq %struct.halide_device_interface_t* %4, %device_interface
  %or.cond = or i1 %cmp4.not, %cmp5.not
  br i1 %or.cond, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20.92, i64 0, i64 0)) #14
  br label %cleanup12

if.end7:                                          ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !319
  tail call void %6() #14
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %device_malloc = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 2
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_malloc, align 8, !tbaa !320
  %call9 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !321
  tail call void %10() #14
  %tobool.not = icmp eq i32 %call9, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -16
  ret i32 %spec.select

cleanup12:                                        ; preds = %if.then6, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -42, %if.then6 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind
define weak i32 @halide_copy_to_device(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  %call = tail call i32 @copy_to_device_already_locked(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) #15
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_sync(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16.93, i64 0, i64 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !306
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !182
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !307
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup8

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !306
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2 = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %call4 = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %cleanup8

if.end5:                                          ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %device_sync = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 4
  %6 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_sync, align 8, !tbaa !322
  %call6 = tail call i32 %6(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %tobool.not = icmp eq i32 %call6, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -17
  ret i32 %spec.select

cleanup8:                                         ; preds = %if.then3, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ %call4, %if.then3 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21.96, i64 0, i64 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !306
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !182
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !307
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup12

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !306
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2.not, label %if.end11, label %if.then3

if.then3:                                         ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !319
  tail call void %6() #14
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %device_free = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 3
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_free, align 8, !tbaa !323
  %call5 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !321
  tail call void %10() #14
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %11 = load i64, i64* %device, align 8, !tbaa !182
  %cmp7 = icmp eq i64 %11, 0
  br i1 %cmp7, label %do.end, label %if.then8

if.then8:                                         ; preds = %if.then3
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.22.97, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.end

do.end:                                           ; preds = %if.then8, %if.then3
  %tobool.not = icmp eq i32 %call5, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -18
  ret i32 %spec.select

if.end11:                                         ; preds = %if.end
  %flags3.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %12 = load i64, i64* %flags3.i.i, align 8, !tbaa !307
  %and.i.i = and i64 %12, -3
  store i64 %and.i.i, i64* %flags3.i.i, align 8, !tbaa !307
  br label %cleanup12

cleanup12:                                        ; preds = %if.end11, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end11 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak void @halide_device_free_as_destructor(i8* %user_context, i8* %obj) local_unnamed_addr #0 {
entry:
  %0 = bitcast i8* %obj to %struct.halide_buffer_t*
  %call = tail call i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* %0) #15
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_and_host_malloc(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23.98, i64 0, i64 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !306
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !182
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !307
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup14

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface3.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface3.phi.trans.insert, align 8, !tbaa !306
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp4.not = icmp eq %struct.halide_device_interface_t* %4, null
  %cmp5.not = icmp eq %struct.halide_device_interface_t* %4, %device_interface
  %or.cond = or i1 %cmp4.not, %cmp5.not
  br i1 %or.cond, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.25.99, i64 0, i64 0)) #14
  br label %cleanup14

if.end7:                                          ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !319
  tail call void %6() #14
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %device_and_host_malloc = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 8
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_and_host_malloc, align 8, !tbaa !324
  %call9 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !321
  tail call void %10() #14
  %cmp11.not = icmp eq i32 %call9, 0
  br i1 %cmp11.not, label %cleanup14, label %if.then12

if.then12:                                        ; preds = %if.end7
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.26.100, i64 0, i64 0)) #14
  br label %cleanup14

cleanup14:                                        ; preds = %if.then12, %if.end7, %if.then6, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -42, %if.then6 ], [ -16, %if.then12 ], [ 0, %if.end7 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_and_host_free(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.27.101, i64 0, i64 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !306
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !182
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !307
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup18

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !306
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2.not, label %if.else11, label %if.then3

if.then3:                                         ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !319
  tail call void %6() #14
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %device_and_host_free = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 9
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_and_host_free, align 8, !tbaa !325
  %call5 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !321
  tail call void %10() #14
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %11 = load i64, i64* %device, align 8, !tbaa !182
  %cmp7 = icmp eq i64 %11, 0
  br i1 %cmp7, label %do.end, label %if.then8

if.then8:                                         ; preds = %if.then3
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.28.102, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.end

do.end:                                           ; preds = %if.then8, %if.then3
  %tobool.not = icmp eq i32 %call5, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -18
  ret i32 %spec.select

if.else11:                                        ; preds = %if.end
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %12 = load i8*, i8** %host, align 8, !tbaa !180
  %tobool12.not = icmp eq i8* %12, null
  br i1 %tobool12.not, label %if.end17, label %if.then13

if.then13:                                        ; preds = %if.else11
  tail call void @halide_free(i8* %user_context, i8* nonnull %12) #14
  store i8* null, i8** %host, align 8, !tbaa !180
  br label %if.end17

if.end17:                                         ; preds = %if.then13, %if.else11
  %flags3.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %13 = load i64, i64* %flags3.i.i, align 8, !tbaa !307
  %and.i.i = and i64 %13, -3
  store i64 %and.i.i, i64* %flags3.i.i, align 8, !tbaa !307
  br label %cleanup18

cleanup18:                                        ; preds = %if.end17, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end17 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_and_host_malloc(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.103, i64 0, i64 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !306
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !182
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !307
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %if.end, label %cleanup13

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit, %if.end16.i
  %dimensions.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 5
  %4 = load i32, i32* %dimensions.i.i, align 4, !tbaa !183
  %cmp19.i.i = icmp sgt i32 %4, 0
  br i1 %cmp19.i.i, label %for.body.lr.ph.i.i, label %if.end._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge

if.end._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge: ; preds = %if.end
  %sub.i.0 = sub nsw i64 1, 0
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

for.body.lr.ph.i.i:                               ; preds = %if.end
  %dim.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 6
  %5 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i.i, align 8, !tbaa !184
  %wide.trip.count.i.i = zext i32 %4 to i64
  %min.iters.check = icmp ult i32 %4, 3
  br i1 %min.iters.check, label %for.body.i.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i
  %n.vec = and i64 %wide.trip.count.i.i, 4294967294
  br label %vector.body

vector.body:                                      ; preds = %pred.load.continue6, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %pred.load.continue6 ]
  %vec.phi = phi i64 [ 0, %vector.ph ], [ %predphi, %pred.load.continue6 ]
  %vec.phi4 = phi i64 [ 0, %vector.ph ], [ %predphi7, %pred.load.continue6 ]
  %induction3 = or i64 %index, 1
  %6 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %index, i32 2
  %7 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %induction3, i32 2
  %8 = load i32, i32* %6, align 4, !tbaa !185
  %9 = load i32, i32* %7, align 4, !tbaa !185
  %10 = icmp sgt i32 %8, 0
  %11 = icmp sgt i32 %9, 0
  %12 = zext i32 %8 to i64
  %13 = zext i32 %9 to i64
  br i1 %10, label %pred.load.if, label %pred.load.continue

pred.load.if:                                     ; preds = %vector.body
  %14 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %index, i32 1
  %15 = load i32, i32* %14, align 4, !tbaa !189
  br label %pred.load.continue

pred.load.continue:                               ; preds = %pred.load.if, %vector.body
  %16 = phi i32 [ poison, %vector.body ], [ %15, %pred.load.if ]
  br i1 %11, label %pred.load.if5, label %pred.load.continue6

pred.load.if5:                                    ; preds = %pred.load.continue
  %17 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %induction3, i32 1
  %18 = load i32, i32* %17, align 4, !tbaa !189
  br label %pred.load.continue6

pred.load.continue6:                              ; preds = %pred.load.if5, %pred.load.continue
  %19 = phi i32 [ poison, %pred.load.continue ], [ %18, %pred.load.if5 ]
  %20 = add nsw i32 %16, -1
  %21 = add nsw i32 %19, -1
  %22 = sext i32 %20 to i64
  %23 = sext i32 %21 to i64
  %24 = mul nsw i64 %22, %12
  %25 = mul nsw i64 %23, %13
  %26 = select i1 %10, i64 %24, i64 0
  %predphi = add i64 %vec.phi, %26
  %27 = select i1 %11, i64 %25, i64 0
  %predphi7 = add i64 %vec.phi4, %27
  %index.next = add i64 %index, 2
  %28 = icmp eq i64 %index.next, %n.vec
  br i1 %28, label %middle.block, label %vector.body, !llvm.loop !326

middle.block:                                     ; preds = %pred.load.continue6
  %bin.rdx = add i64 %predphi7, %predphi
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i
  br i1 %cmp.n, label %for.body.i13.i.preheader, label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %for.body.lr.ph.i.i, %middle.block
  %indvars.iv.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %n.vec, %middle.block ]
  %index.021.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %bin.rdx, %middle.block ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %if.end.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %index.021.i.i = phi i64 [ %index.1.i.i, %if.end.i.i ], [ %index.021.i.i.ph, %for.body.i.i.preheader ]
  %stride2.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv.i.i, i32 2
  %29 = load i32, i32* %stride2.i.i, align 4, !tbaa !185
  %cmp3.i.i = icmp sgt i32 %29, 0
  br i1 %cmp3.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv18.i.i = zext i32 %29 to i64
  %extent.i.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv.i.i, i32 1
  %30 = load i32, i32* %extent.i.i, align 4, !tbaa !189
  %sub.i.i = add nsw i32 %30, -1
  %conv7.i.i = sext i32 %sub.i.i to i64
  %mul.i.i = mul nsw i64 %conv7.i.i, %conv18.i.i
  %add.i.i = add nsw i64 %mul.i.i, %index.021.i.i
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body.i.i
  %index.1.i.i = phi i64 [ %add.i.i, %if.then.i.i ], [ %index.021.i.i, %for.body.i.i ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.body.i13.i.preheader, label %for.body.i.i, !llvm.loop !327

for.body.i13.i.preheader:                         ; preds = %if.end.i.i, %middle.block
  %index.1.i.i.lcssa = phi i64 [ %bin.rdx, %middle.block ], [ %index.1.i.i, %if.end.i.i ]
  %min.iters.check11 = icmp ult i32 %4, 3
  br i1 %min.iters.check11, label %for.body.i13.i.preheader31, label %vector.ph12

vector.ph12:                                      ; preds = %for.body.i13.i.preheader
  %n.vec14 = and i64 %wide.trip.count.i.i, 4294967294
  br label %vector.body10

vector.body10:                                    ; preds = %pred.load.continue26, %vector.ph12
  %index15 = phi i64 [ 0, %vector.ph12 ], [ %index.next16, %pred.load.continue26 ]
  %vec.phi21 = phi i64 [ 0, %vector.ph12 ], [ %predphi27, %pred.load.continue26 ]
  %vec.phi22 = phi i64 [ 0, %vector.ph12 ], [ %predphi28, %pred.load.continue26 ]
  %induction20 = or i64 %index15, 1
  %31 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %index15, i32 2
  %32 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %induction20, i32 2
  %33 = load i32, i32* %31, align 4, !tbaa !185
  %34 = load i32, i32* %32, align 4, !tbaa !185
  %35 = icmp slt i32 %33, 0
  %36 = icmp slt i32 %34, 0
  %37 = sext i32 %33 to i64
  %38 = sext i32 %34 to i64
  br i1 %35, label %pred.load.if23, label %pred.load.continue24

pred.load.if23:                                   ; preds = %vector.body10
  %39 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %index15, i32 1
  %40 = load i32, i32* %39, align 4, !tbaa !189
  br label %pred.load.continue24

pred.load.continue24:                             ; preds = %pred.load.if23, %vector.body10
  %41 = phi i32 [ poison, %vector.body10 ], [ %40, %pred.load.if23 ]
  br i1 %36, label %pred.load.if25, label %pred.load.continue26

pred.load.if25:                                   ; preds = %pred.load.continue24
  %42 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %induction20, i32 1
  %43 = load i32, i32* %42, align 4, !tbaa !189
  br label %pred.load.continue26

pred.load.continue26:                             ; preds = %pred.load.if25, %pred.load.continue24
  %44 = phi i32 [ poison, %pred.load.continue24 ], [ %43, %pred.load.if25 ]
  %45 = add nsw i32 %41, -1
  %46 = add nsw i32 %44, -1
  %47 = sext i32 %45 to i64
  %48 = sext i32 %46 to i64
  %49 = mul nsw i64 %47, %37
  %50 = mul nsw i64 %48, %38
  %51 = select i1 %35, i64 %49, i64 0
  %predphi27 = add i64 %vec.phi21, %51
  %52 = select i1 %36, i64 %50, i64 0
  %predphi28 = add i64 %vec.phi22, %52
  %index.next16 = add i64 %index15, 2
  %53 = icmp eq i64 %index.next16, %n.vec14
  br i1 %53, label %middle.block8, label %vector.body10, !llvm.loop !328

middle.block8:                                    ; preds = %pred.load.continue26
  %bin.rdx29 = add i64 %predphi28, %predphi27
  %cmp.n18 = icmp eq i64 %n.vec14, %wide.trip.count.i.i
  br i1 %cmp.n18, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i.preheader31

for.body.i13.i.preheader31:                       ; preds = %for.body.i13.i.preheader, %middle.block8
  %indvars.iv.i10.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %n.vec14, %middle.block8 ]
  %index.018.i.i.ph = phi i64 [ 0, %for.body.i13.i.preheader ], [ %bin.rdx29, %middle.block8 ]
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %for.body.i13.i.preheader31, %if.end.i24.i
  %indvars.iv.i10.i = phi i64 [ %indvars.iv.next.i22.i, %if.end.i24.i ], [ %indvars.iv.i10.i.ph, %for.body.i13.i.preheader31 ]
  %index.018.i.i = phi i64 [ %index.1.i21.i, %if.end.i24.i ], [ %index.018.i.i.ph, %for.body.i13.i.preheader31 ]
  %stride2.i11.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv.i10.i, i32 2
  %54 = load i32, i32* %stride2.i11.i, align 4, !tbaa !185
  %cmp3.i12.i = icmp slt i32 %54, 0
  br i1 %cmp3.i12.i, label %if.then.i20.i, label %if.end.i24.i

if.then.i20.i:                                    ; preds = %for.body.i13.i
  %conv.i14.i = sext i32 %54 to i64
  %extent.i15.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %5, i64 %indvars.iv.i10.i, i32 1
  %55 = load i32, i32* %extent.i15.i, align 4, !tbaa !189
  %sub.i16.i = add nsw i32 %55, -1
  %conv7.i17.i = sext i32 %sub.i16.i to i64
  %mul.i18.i = mul nsw i64 %conv7.i17.i, %conv.i14.i
  %add.i19.i = add nsw i64 %mul.i18.i, %index.018.i.i
  br label %if.end.i24.i

if.end.i24.i:                                     ; preds = %if.then.i20.i, %for.body.i13.i
  %index.1.i21.i = phi i64 [ %add.i19.i, %if.then.i20.i ], [ %index.018.i.i, %for.body.i13.i ]
  %indvars.iv.next.i22.i = add nuw nsw i64 %indvars.iv.i10.i, 1
  %exitcond.not.i23.i = icmp eq i64 %indvars.iv.next.i22.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i23.i, label %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit, label %for.body.i13.i, !llvm.loop !329

_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit: ; preds = %if.end.i24.i, %middle.block8
  %index.1.i21.i.lcssa = phi i64 [ %bin.rdx29, %middle.block8 ], [ %index.1.i21.i, %if.end.i24.i ]
  %add8.i.i = add nsw i64 %index.1.i.i.lcssa, 1
  %sub.i.1 = sub nsw i64 %add8.i.i, %index.1.i21.i.lcssa
  br label %_ZNK15halide_buffer_t13size_in_bytesEv.exit

_ZNK15halide_buffer_t13size_in_bytesEv.exit:      ; preds = %if.end._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit
  %add8.i27.i = phi i64 [ 1, %if.end._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge ], [ %add8.i.i, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %sub.i.phi = phi i64 [ %sub.i.0, %if.end._ZNK15halide_buffer_t13size_in_bytesEv.exit_crit_edge ], [ %sub.i.1, %_ZNK15halide_buffer_t13size_in_bytesEv.exit.loopexit ]
  %bits.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 4, i32 1
  %56 = load i8, i8* %bits.i.i, align 1, !tbaa !144
  %conv.i.i = zext i8 %56 to i64
  %add.i4.i = add nuw nsw i64 %conv.i.i, 7
  %div.i.i = lshr i64 %add.i4.i, 3
  %mul.i = mul i64 %div.i.i, %sub.i.phi
  %call2 = tail call i8* @halide_malloc(i8* %user_context, i64 %mul.i) #14
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  store i8* %call2, i8** %host, align 8, !tbaa !180
  %cmp4 = icmp eq i8* %call2, null
  br i1 %cmp4, label %cleanup13, label %if.end6

if.end6:                                          ; preds = %_ZNK15halide_buffer_t13size_in_bytesEv.exit
  %call7 = tail call i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* nonnull %buf, %struct.halide_device_interface_t* %device_interface) #15
  %cmp8.not = icmp eq i32 %call7, 0
  br i1 %cmp8.not, label %cleanup13, label %if.then9

if.then9:                                         ; preds = %if.end6
  %57 = load i8*, i8** %host, align 8, !tbaa !180
  tail call void @halide_free(i8* %user_context, i8* %57) #14
  store i8* null, i8** %host, align 8, !tbaa !180
  br label %cleanup13

cleanup13:                                        ; preds = %if.then9, %if.end6, %_ZNK15halide_buffer_t13size_in_bytesEv.exit, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -1, %_ZNK15halide_buffer_t13size_in_bytesEv.exit ], [ %call7, %if.then9 ], [ 0, %if.end6 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_and_host_free(i8* %user_context, %struct.halide_buffer_t* %buf, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.30.104, i64 0, i64 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !306
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !182
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !307
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end16.i.split

if.end16.i.split:                                 ; preds = %if.end16.i
  %call11 = tail call i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #15
  br label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %call12 = tail call i32 @halide_device_free(i8* %user_context, %struct.halide_buffer_t* %buf) #15
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split, %if.end16.i.split
  %phi.call = phi i32 [ %call11, %if.end16.i.split ], [ %call12, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.split ]
  %host = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 2
  %4 = load i8*, i8** %host, align 8, !tbaa !180
  %tobool.not = icmp eq i8* %4, null
  br i1 %tobool.not, label %if.end5, label %if.then2

if.then2:                                         ; preds = %if.end
  tail call void @halide_free(i8* %user_context, i8* nonnull %4) #14
  store i8* null, i8** %host, align 8, !tbaa !180
  br label %if.end5

if.end5:                                          ; preds = %if.then2, %if.end
  %flags3.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %5 = load i64, i64* %flags3.i.i, align 8, !tbaa !307
  %and.i.i18 = and i64 %5, -4
  store i64 %and.i.i18, i64* %flags3.i.i, align 8, !tbaa !307
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %phi.call, %if.end5 ], [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_wrap_native(i8* %user_context, %struct.halide_buffer_t* %buf, i64 %handle, %struct.halide_device_interface_t* %device_interface) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31.105, i64 0, i64 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !306
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !182
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !307
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup12

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !306
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  %cmp3.not = icmp eq %struct.halide_device_interface_t* %4, %device_interface
  %or.cond = or i1 %cmp2.not, %cmp3.not
  br i1 %or.cond, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.32.106, i64 0, i64 0)) #14
  br label %cleanup12

if.end5:                                          ; preds = %if.end
  %device_interface1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %device_interface, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !319
  tail call void %6() #14
  store %struct.halide_device_interface_t* %device_interface, %struct.halide_device_interface_t** %device_interface1, align 8, !tbaa !306
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %wrap_native = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 14
  %8 = load i32 (i8*, %struct.halide_buffer_t*, i64)*, i32 (i8*, %struct.halide_buffer_t*, i64)** %wrap_native, align 8, !tbaa !330
  %call8 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf, i64 %handle) #14
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !321
  tail call void %10() #14
  %tobool.not = icmp eq i32 %call8, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -16
  ret i32 %spec.select

cleanup12:                                        ; preds = %if.then4, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.1 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ -42, %if.then4 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_device_detach_native(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33.107, i64 0, i64 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !306
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !182
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !307
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device_interface1.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %.pre = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface1.phi.trans.insert, align 8, !tbaa !306
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi %struct.halide_device_interface_t* [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %0, %if.end16.i ]
  %cmp2.not = icmp eq %struct.halide_device_interface_t* %4, null
  br i1 %cmp2.not, label %cleanup, label %if.then3

if.then3:                                         ; preds = %if.end
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !319
  tail call void %6() #14
  %7 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %detach_native = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %7, i64 0, i32 15
  %8 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %detach_native, align 8, !tbaa !331
  %call5 = tail call i32 %8(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  %9 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %9, i64 0, i32 1
  %10 = load void ()*, void ()** %release_module, align 8, !tbaa !321
  tail call void %10() #14
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %11 = load i64, i64* %device, align 8, !tbaa !182
  %cmp7 = icmp eq i64 %11, 0
  br i1 %cmp7, label %do.end, label %if.then8

if.then8:                                         ; preds = %if.then3
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.34.108, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.end

do.end:                                           ; preds = %if.then8, %if.then3
  %tobool.not = icmp eq i32 %call5, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -33
  ret i32 %spec.select

cleanup:                                          ; preds = %if.end, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_wrap_native(i8* %user_context, %struct.halide_buffer_t* %buf, i64 %handle) local_unnamed_addr #0 {
entry:
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !182
  %cmp.not = icmp eq i64 %0, 0
  br i1 %cmp.not, label %if.end, label %return

if.end:                                           ; preds = %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %1 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !306
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %1, i64 0, i32 15
  %2 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %2, i64 0, i32 0
  %3 = load void ()*, void ()** %use_module, align 8, !tbaa !319
  tail call void %3() #14
  store i64 %handle, i64* %device, align 8, !tbaa !182
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -32, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_detach_native(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %cmp.i = icmp eq %struct.halide_buffer_t* %buf, null
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call i32 @halide_error_buffer_is_null(i8* %user_context, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35, i64 0, i64 0)) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end.i:                                         ; preds = %entry
  %device_interface.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface.i, align 8, !tbaa !306
  %cmp4.not.i = icmp eq %struct.halide_device_interface_t* %0, null
  %device.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %1 = load i64, i64* %device.i, align 8, !tbaa !182
  %cmp5.not.i = icmp eq i64 %1, 0
  %cmp4.not.not.i = xor i1 %cmp4.not.i, true
  %brmerge.i = or i1 %cmp5.not.i, %cmp4.not.not.i
  br i1 %brmerge.i, label %if.end10.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %call9.i = tail call i32 @halide_error_no_device_interface(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end10.i:                                       ; preds = %if.end.i
  %cmp5.not.not.i = xor i1 %cmp5.not.i, true
  %brmerge44.i = or i1 %cmp4.not.i, %cmp5.not.not.i
  br i1 %brmerge44.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end10.i
  %call15.i = tail call i32 @halide_error_device_interface_no_device(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

if.end16.i:                                       ; preds = %if.end10.i
  %flags.i.i46.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 3
  %2 = load i64, i64* %flags.i.i46.i, align 8, !tbaa !307
  %3 = and i64 %2, 3
  %.not.i = icmp eq i64 %3, 3
  br i1 %.not.i, label %if.then24.i, label %if.end

if.then24.i:                                      ; preds = %if.end16.i
  %call25.i = tail call i32 @halide_error_host_and_device_dirty(i8* %user_context) #14
  br label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit: ; preds = %if.then24.i, %if.then14.i, %if.then8.i, %if.then.i
  %retval.2.i = phi i32 [ %call.i, %if.then.i ], [ %call15.i, %if.then14.i ], [ %call9.i, %if.then8.i ], [ %call25.i, %if.then24.i ]
  %cmp.not = icmp eq i32 %retval.2.i, 0
  br i1 %cmp.not, label %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, label %cleanup

_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge: ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %device.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %.pre = load i64, i64* %device.phi.trans.insert, align 8, !tbaa !182
  br label %if.end

if.end:                                           ; preds = %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge, %if.end16.i
  %4 = phi i64 [ %.pre, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit.if.end_crit_edge ], [ %1, %if.end16.i ]
  %cmp1 = icmp eq i64 %4, 0
  br i1 %cmp1, label %cleanup, label %if.end3

if.end3:                                          ; preds = %if.end
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %5 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !306
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %5, i64 0, i32 15
  %6 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %6, i64 0, i32 1
  %7 = load void ()*, void ()** %release_module, align 8, !tbaa !321
  tail call void %7() #14
  store i64 0, i64* %device, align 8, !tbaa !182
  store %struct.halide_device_interface_t* null, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !306
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %if.end, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit
  %retval.0 = phi i32 [ 0, %if.end3 ], [ %retval.2.i, %_ZN12_GLOBAL__N_126debug_log_and_validate_bufEPvPK15halide_buffer_tPKc.exit ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_device_and_host_free_as_destructor(i8* %user_context, i8* %obj) local_unnamed_addr #0 {
entry:
  %0 = bitcast i8* %obj to %struct.halide_buffer_t*
  %call = tail call i32 @halide_device_and_host_free(i8* %user_context, %struct.halide_buffer_t* %0) #15
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_device_host_nop_free(i8* %user_context, i8* %obj) local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_default_buffer_copy(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) local_unnamed_addr #2 {
entry:
  ret i32 -39
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_buffer_copy_already_locked(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) local_unnamed_addr #0 {
entry:
  %c = alloca %"struct.Halide::Runtime::Internal::device_copy", align 8
  %tobool.not = icmp eq %struct.halide_device_interface_t* %dst_device_interface, null
  br i1 %tobool.not, label %if.end13, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 1
  %0 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !306
  %tobool1.not = icmp eq %struct.halide_device_interface_t* %0, null
  %cmp.not = icmp eq %struct.halide_device_interface_t* %0, %dst_device_interface
  %or.cond = or i1 %tobool1.not, %cmp.not
  br i1 %or.cond, label %land.lhs.true5, label %if.then

if.then:                                          ; preds = %land.lhs.true
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.41, i64 0, i64 0)) #14
  br label %cleanup143

land.lhs.true5:                                   ; preds = %land.lhs.true
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  %1 = load i64, i64* %device, align 8, !tbaa !182
  %tobool6.not = icmp eq i64 %1, 0
  br i1 %tobool6.not, label %if.then7, label %if.end13

if.then7:                                         ; preds = %land.lhs.true5
  %call = tail call i32 @halide_device_malloc(i8* %user_context, %struct.halide_buffer_t* nonnull %dst, %struct.halide_device_interface_t* nonnull %dst_device_interface) #15
  %tobool10.not = icmp eq i32 %call, 0
  br i1 %tobool10.not, label %if.end13, label %cleanup143

if.end13:                                         ; preds = %if.then7, %land.lhs.true5, %entry
  %device14 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %2 = load i64, i64* %device14, align 8, !tbaa !182
  %cmp15.not = icmp eq i64 %2, 0
  %host22.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 2
  %.pre = load i8*, i8** %host22.phi.trans.insert, align 8, !tbaa !180
  %cmp23.not = icmp eq i8* %.pre, null
  br i1 %cmp15.not, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end13
  br i1 %cmp23.not, label %land.end32, label %land.end.thread264

land.end.thread264:                               ; preds = %land.rhs
  %flags.i.i243 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 3
  %3 = load i64, i64* %flags.i.i243, align 8, !tbaa !307
  %and.i.i244 = and i64 %3, 1
  %cmp.i.i.not = icmp ne i64 %and.i.i244, 0
  br label %land.rhs26

land.end:                                         ; preds = %if.end13
  br i1 %cmp23.not, label %land.end32, label %land.end.land.rhs26_crit_edge

land.end.land.rhs26_crit_edge:                    ; preds = %land.end
  %flags.i.i247.phi.trans.insert = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 3
  %.pre1 = load i64, i64* %flags.i.i247.phi.trans.insert, align 8, !tbaa !307
  br label %land.rhs26

land.rhs26:                                       ; preds = %land.end.land.rhs26_crit_edge, %land.end.thread264
  %4 = phi i64 [ %3, %land.end.thread264 ], [ %.pre1, %land.end.land.rhs26_crit_edge ]
  %5 = phi i1 [ %cmp.i.i.not, %land.end.thread264 ], [ true, %land.end.land.rhs26_crit_edge ]
  %and.i.i248 = and i64 %4, 2
  %cmp.i.i249.not = icmp eq i64 %and.i.i248, 0
  br i1 %cmp.i.i249.not, label %land.end32, label %lor.rhs28

lor.rhs28:                                        ; preds = %land.rhs26
  %device_interface29 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %6 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface29, align 8, !tbaa !306
  %cmp30 = icmp ne %struct.halide_device_interface_t* %6, null
  br label %land.end32

land.end32:                                       ; preds = %lor.rhs28, %land.rhs26, %land.end, %land.rhs
  %cmp23.not263 = phi i1 [ true, %land.end ], [ false, %land.rhs26 ], [ false, %lor.rhs28 ], [ true, %land.rhs ]
  %7 = phi i1 [ true, %land.end ], [ %5, %land.rhs26 ], [ %5, %lor.rhs28 ], [ false, %land.rhs ]
  %8 = phi i1 [ true, %land.end ], [ false, %land.rhs26 ], [ %cmp30, %lor.rhs28 ], [ true, %land.rhs ]
  %host34 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 2
  %9 = load i8*, i8** %host34, align 8, !tbaa !180
  %cmp35.not = icmp eq i8* %9, null
  %cmp20.not = xor i1 %tobool.not, true
  %10 = and i1 %tobool.not, %cmp35.not
  br i1 %10, label %cleanup143, label %if.end41

if.end41:                                         ; preds = %land.end32
  %brmerge229 = or i1 %tobool.not, %7
  br i1 %brmerge229, label %if.then51, label %if.end49

if.end49:                                         ; preds = %if.end41
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i64 0, i32 15
  %11 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %buffer_copy = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %11, i64 0, i32 10
  %12 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy, align 8, !tbaa !332
  %call48 = tail call i32 %12(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* nonnull %dst_device_interface, %struct.halide_buffer_t* nonnull %dst) #14
  %cmp50 = icmp eq i32 %call48, -42
  br i1 %cmp50, label %if.then51, label %if.end117

if.then51:                                        ; preds = %if.end49, %if.end41
  %brmerge231.demorgan = and i1 %cmp23.not263, %cmp35.not
  br i1 %brmerge231.demorgan, label %cleanup143, label %if.end58

if.end58:                                         ; preds = %if.then51
  %brmerge234 = or i1 %8, %cmp20.not
  br i1 %brmerge234, label %if.else, label %if.end117.thread258

if.end117.thread258:                              ; preds = %if.end58
  %13 = bitcast %"struct.Halide::Runtime::Internal::device_copy"* %c to i8*
  call void @llvm.lifetime.start.p0i8(i64 416, i8* nonnull %13) #11
  call void @_ZN6Halide7Runtime8Internal16make_buffer_copyEPK15halide_buffer_tbS4_b(%"struct.Halide::Runtime::Internal::device_copy"* nonnull sret(%"struct.Halide::Runtime::Internal::device_copy") align 8 %c, %struct.halide_buffer_t* nonnull %src, i1 zeroext true, %struct.halide_buffer_t* nonnull %dst, i1 zeroext true) #15
  call void @_ZN6Halide7Runtime8Internal11copy_memoryERKNS1_11device_copyEPv(%"struct.Halide::Runtime::Internal::device_copy"* nonnull align 8 dereferenceable(416) %c, i8* %user_context) #15
  call void @llvm.lifetime.end.p0i8(i64 416, i8* nonnull %13) #11
  br label %land.lhs.true126

if.else:                                          ; preds = %if.end58
  %brmerge237 = or i1 %7, %cmp20.not
  br i1 %brmerge237, label %if.else81, label %if.then66

if.then66:                                        ; preds = %if.else
  %device_interface69 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %14 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface69, align 8, !tbaa !306
  %impl70 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %14, i64 0, i32 15
  %15 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl70, align 8, !tbaa !313
  %buffer_copy71 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %15, i64 0, i32 10
  %16 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy71, align 8, !tbaa !332
  %call72 = tail call i32 %16(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* null, %struct.halide_buffer_t* nonnull %dst) #14
  %cmp73 = icmp eq i32 %call72, -42
  br i1 %cmp73, label %if.then74, label %if.end117

if.then74:                                        ; preds = %if.then66
  %call75 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* nonnull %src) #15
  %tobool76.not = icmp eq i32 %call75, 0
  br i1 %tobool76.not, label %if.then77, label %cleanup143

if.then77:                                        ; preds = %if.then74
  %call78 = tail call i32 @halide_buffer_copy_already_locked(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* null, %struct.halide_buffer_t* nonnull %dst) #15
  br label %if.end117

if.else81:                                        ; preds = %if.else
  %brmerge239 = or i1 %7, %cmp35.not
  br i1 %brmerge239, label %if.else98, label %if.then85

if.then85:                                        ; preds = %if.else81
  %device_interface90 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %17 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface90, align 8, !tbaa !306
  %impl91 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %17, i64 0, i32 15
  %18 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl91, align 8, !tbaa !313
  %buffer_copy92 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %18, i64 0, i32 10
  %19 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy92, align 8, !tbaa !332
  %call93 = tail call i32 %19(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* null, %struct.halide_buffer_t* nonnull %dst) #14
  %cmp94 = icmp eq i32 %call93, 0
  br i1 %cmp94, label %if.then95, label %cleanup143

if.then95:                                        ; preds = %if.then85
  %flags.i.i245 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 3
  %20 = load i64, i64* %flags.i.i245, align 8, !tbaa !307
  %or.i.i246 = or i64 %20, 1
  store i64 %or.i.i246, i64* %flags.i.i245, align 8, !tbaa !307
  %call96 = tail call i32 @copy_to_device_already_locked(i8* %user_context, %struct.halide_buffer_t* nonnull %dst, %struct.halide_device_interface_t* %dst_device_interface) #15
  br label %if.end117

if.else98:                                        ; preds = %if.else81
  br i1 %tobool.not, label %cleanup143, label %if.then100

if.then100:                                       ; preds = %if.else98
  %call103 = tail call i32 @_ZN6Halide7Runtime8Internal27copy_to_host_already_lockedEPvP15halide_buffer_t(i8* %user_context, %struct.halide_buffer_t* nonnull %src) #15
  %cmp104 = icmp eq i32 %call103, 0
  br i1 %cmp104, label %if.then105, label %cleanup143

if.then105:                                       ; preds = %if.then100
  %impl106 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i64 0, i32 15
  %21 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl106, align 8, !tbaa !313
  %buffer_copy107 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %21, i64 0, i32 10
  %22 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_device_interface_t*, %struct.halide_buffer_t*)** %buffer_copy107, align 8, !tbaa !332
  %call108 = tail call i32 %22(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* nonnull %dst_device_interface, %struct.halide_buffer_t* nonnull %dst) #14
  br label %if.end117

if.end117:                                        ; preds = %if.then105, %if.then95, %if.then77, %if.then66, %if.end49
  %err.1 = phi i32 [ %call78, %if.then77 ], [ %call72, %if.then66 ], [ %call96, %if.then95 ], [ %call108, %if.then105 ], [ %call48, %if.end49 ]
  %cond = icmp eq i32 %err.1, 0
  br i1 %cond, label %land.lhs.true126, label %cleanup143

land.lhs.true126:                                 ; preds = %if.end117, %if.end117.thread258
  %cmp127.not.old = icmp eq %struct.halide_buffer_t* %dst, %src
  br i1 %cmp127.not.old, label %cleanup143, label %if.then128

if.then128:                                       ; preds = %land.lhs.true126
  %flags.i.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 3
  %23 = load i64, i64* %flags.i.i, align 8, !tbaa !307
  %or.i.i = and i64 %23, -4
  br i1 %tobool.not, label %if.else133, label %if.then130

if.then130:                                       ; preds = %if.then128
  %or.i.i242 = or i64 %or.i.i, 2
  store i64 %or.i.i242, i64* %flags.i.i, align 8, !tbaa !307
  br label %cleanup143

if.else133:                                       ; preds = %if.then128
  %and.i.i251 = or i64 %or.i.i, 1
  store i64 %and.i.i251, i64* %flags.i.i, align 8, !tbaa !307
  br label %cleanup143

cleanup143:                                       ; preds = %if.else133, %if.then130, %land.lhs.true126, %if.end117, %if.then100, %if.else98, %if.then85, %if.then74, %if.then51, %land.end32, %if.then7, %if.then
  %retval.1 = phi i32 [ -42, %if.then ], [ %call, %if.then7 ], [ -34, %land.end32 ], [ 0, %if.then130 ], [ 0, %if.else133 ], [ 0, %land.lhs.true126 ], [ -42, %if.then51 ], [ %err.1, %if.end117 ], [ -42, %if.else98 ], [ %call103, %if.then100 ], [ %call93, %if.then85 ], [ %call75, %if.then74 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind
define weak i32 @halide_buffer_copy(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  %tobool.not = icmp eq %struct.halide_device_interface_t* %dst_device_interface, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i64 0, i32 15
  %0 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %0, i64 0, i32 0
  %1 = load void ()*, void ()** %use_module, align 8, !tbaa !319
  tail call void %1() #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %2 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !306
  %tobool11.not = icmp eq %struct.halide_device_interface_t* %2, null
  br i1 %tobool11.not, label %if.end16, label %if.then12

if.then12:                                        ; preds = %if.end
  %impl14 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %2, i64 0, i32 15
  %3 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl14, align 8, !tbaa !313
  %use_module15 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %3, i64 0, i32 0
  %4 = load void ()*, void ()** %use_module15, align 8, !tbaa !319
  tail call void %4() #14
  br label %if.end16

if.end16:                                         ; preds = %if.then12, %if.end
  %call = tail call i32 @halide_buffer_copy_already_locked(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_device_interface_t* %dst_device_interface, %struct.halide_buffer_t* %dst) #15
  br i1 %tobool.not, label %if.end20, label %if.then18

if.then18:                                        ; preds = %if.end16
  %impl19 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %dst_device_interface, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl19, align 8, !tbaa !313
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 1
  %6 = load void ()*, void ()** %release_module, align 8, !tbaa !321
  tail call void %6() #14
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end16
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !306
  %tobool22.not = icmp eq %struct.halide_device_interface_t* %7, null
  br i1 %tobool22.not, label %if.end27, label %if.then23

if.then23:                                        ; preds = %if.end20
  %impl25 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i64 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl25, align 8, !tbaa !313
  %release_module26 = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i64 0, i32 1
  %9 = load void ()*, void ()** %release_module26, align 8, !tbaa !321
  tail call void %9() #14
  br label %if.end27

if.end27:                                         ; preds = %if.then23, %if.end20
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  ret i32 %call
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_crop(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_buffer_t* %dst) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.58, i64 0, i64 0)) #14
  ret i32 -40
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_slice(i8* %user_context, %struct.halide_buffer_t* %src, i32 %slice_dim, i32 %slice_pos, %struct.halide_buffer_t* %dst) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.59, i64 0, i64 0)) #14
  ret i32 -40
}

; Function Attrs: nounwind
define weak i32 @halide_device_crop(i8* %user_context, %struct.halide_buffer_t* %src, %struct.halide_buffer_t* %dst) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !182
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %device1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  %1 = load i64, i64* %device1, align 8, !tbaa !182
  %tobool2.not = icmp eq i64 %1, 0
  br i1 %tobool2.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.60, i64 0, i64 0)) #14
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 5
  %2 = load i32, i32* %dimensions, align 4, !tbaa !183
  %dimensions5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 5
  %3 = load i32, i32* %dimensions5, align 4, !tbaa !183
  %cmp.not = icmp eq i32 %2, %3
  br i1 %cmp.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end4
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.61, i64 0, i64 0)) #14
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %4 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !306
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !319
  tail call void %6() #14
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !306
  %impl9 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i64 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl9, align 8, !tbaa !313
  %device_crop = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i64 0, i32 11
  %9 = load i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, %struct.halide_buffer_t*)** %device_crop, align 8, !tbaa !333
  %call = tail call i32 %9(i8* %user_context, %struct.halide_buffer_t* nonnull %src, %struct.halide_buffer_t* nonnull %dst) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.then6, %if.then3, %entry
  %retval.0 = phi i32 [ -41, %if.then3 ], [ -41, %if.then6 ], [ %call, %if.end7 ], [ 0, %entry ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind
define weak i32 @halide_device_slice(i8* %user_context, %struct.halide_buffer_t* %src, i32 %slice_dim, i32 %slice_pos, %struct.halide_buffer_t* %dst) local_unnamed_addr #4 {
entry:
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !182
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %device1 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 0
  %1 = load i64, i64* %device1, align 8, !tbaa !182
  %tobool2.not = icmp eq i64 %1, 0
  br i1 %tobool2.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.60, i64 0, i64 0)) #14
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %dimensions = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 5
  %2 = load i32, i32* %dimensions, align 4, !tbaa !183
  %dimensions5 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %dst, i64 0, i32 5
  %3 = load i32, i32* %dimensions5, align 4, !tbaa !183
  %add = add nsw i32 %3, 1
  %cmp.not = icmp eq i32 %2, %add
  br i1 %cmp.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end4
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.64, i64 0, i64 0)) #14
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %src, i64 0, i32 1
  %4 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !306
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %4, i64 0, i32 15
  %5 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %use_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %5, i64 0, i32 0
  %6 = load void ()*, void ()** %use_module, align 8, !tbaa !319
  tail call void %6() #14
  %7 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !306
  %impl9 = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %7, i64 0, i32 15
  %8 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl9, align 8, !tbaa !313
  %device_slice = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %8, i64 0, i32 12
  %9 = load i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*, i32, i32, %struct.halide_buffer_t*)** %device_slice, align 8, !tbaa !334
  %call = tail call i32 %9(i8* %user_context, %struct.halide_buffer_t* nonnull %src, i32 %slice_dim, i32 %slice_pos, %struct.halide_buffer_t* nonnull %dst) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.then6, %if.then3, %entry
  %retval.0 = phi i32 [ -41, %if.then3 ], [ -41, %if.then6 ], [ %call, %if.end7 ], [ 0, %entry ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_default_device_release_crop(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #0 {
entry:
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !182
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.58, i64 0, i64 0)) #14
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ -40, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
define weak i32 @halide_device_release_crop(i8* %user_context, %struct.halide_buffer_t* %buf) local_unnamed_addr #4 {
entry:
  %device = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 0
  %0 = load i64, i64* %device, align 8, !tbaa !182
  %tobool.not = icmp eq i64 %0, 0
  br i1 %tobool.not, label %return, label %if.then

if.then:                                          ; preds = %entry
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  %device_interface = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %buf, i64 0, i32 1
  %1 = load %struct.halide_device_interface_t*, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !306
  %impl = getelementptr inbounds %struct.halide_device_interface_t, %struct.halide_device_interface_t* %1, i64 0, i32 15
  %2 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %device_release_crop = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %2, i64 0, i32 13
  %3 = load i32 (i8*, %struct.halide_buffer_t*)*, i32 (i8*, %struct.halide_buffer_t*)** %device_release_crop, align 8, !tbaa !335
  %call = tail call i32 %3(i8* %user_context, %struct.halide_buffer_t* nonnull %buf) #14
  store i64 0, i64* %device, align 8, !tbaa !182
  %4 = load %struct.halide_device_interface_impl_t*, %struct.halide_device_interface_impl_t** %impl, align 8, !tbaa !313
  %release_module = getelementptr inbounds %struct.halide_device_interface_impl_t, %struct.halide_device_interface_impl_t* %4, i64 0, i32 1
  %5 = load void ()*, void ()** %release_module, align 8, !tbaa !321
  tail call void %5() #14
  store %struct.halide_device_interface_t* null, %struct.halide_device_interface_t** %device_interface, align 8, !tbaa !306
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal17device_copy_mutexE) #14
  br label %return

return:                                           ; preds = %if.then, %entry
  %retval.0 = phi i32 [ %call, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind willreturn mustprogress
define weak float @halide_float16_bits_to_float(i16 zeroext %bits) local_unnamed_addr #2 {
entry:
  %conv = zext i16 %bits to i32
  %and2 = and i32 %conv, 1023
  %and4 = lshr i32 %conv, 10
  %0 = and i32 %and4, 31
  %cmp = icmp eq i32 %0, 0
  %cmp5 = icmp ne i32 %and2, 0
  %or.cond = and i1 %cmp5, %cmp
  br i1 %or.cond, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = tail call i32 @llvm.ctlz.i32(i32 %and2, i1 true), !range !336
  %sub6 = xor i32 %1, 31
  %shl7 = shl nuw i32 1, %sub6
  %neg = xor i32 %shl7, -1
  %and8 = and i32 %and2, %neg
  %sub9 = sub nsw i32 23, %sub6
  %shl10 = shl i32 %and8, %sub9
  %add11.neg = mul nsw i32 %1, -8388608
  %shl12 = add i32 %add11.neg, 1124073472
  br label %if.end28

if.else:                                          ; preds = %entry
  %shl14 = shl nuw nsw i32 %and2, 13
  br i1 %cmp, label %if.end28, label %if.else18

if.else18:                                        ; preds = %if.else
  %cmp19 = icmp eq i32 %0, 31
  br i1 %cmp19, label %if.end28, label %if.else21

if.else21:                                        ; preds = %if.else18
  %add22 = shl nuw nsw i32 %0, 23
  %phi.bo = add nuw nsw i32 %add22, 939524096
  br label %if.end28

if.end28:                                         ; preds = %if.else21, %if.else18, %if.else, %if.then
  %shl14.sink = phi i32 [ %shl12, %if.then ], [ %shl14, %if.else18 ], [ %shl14, %if.else ], [ %shl14, %if.else21 ]
  %reEncodedExponent15.0.sink = phi i32 [ %shl10, %if.then ], [ 2139095040, %if.else18 ], [ 0, %if.else ], [ %phi.bo, %if.else21 ]
  %bits.signext = sext i16 %bits to i32
  %shl = and i32 %bits.signext, -2147483648
  %or25 = or i32 %shl14.sink, %shl
  %or26 = or i32 %or25, %reEncodedExponent15.0.sink
  %result.sroa.0.0 = bitcast i32 %or26 to float
  ret float %result.sroa.0.0
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

; Function Attrs: nounwind willreturn mustprogress
define weak double @halide_float16_bits_to_double(i16 zeroext %bits) local_unnamed_addr #2 {
entry:
  %call = tail call float @halide_float16_bits_to_float(i16 zeroext %bits) #15
  %conv = fpext float %call to double
  ret double %conv
}

; Function Attrs: nounwind
define weak i32 @halide_error_bounds_inference_call_failed(i8* %user_context, i8* %extern_stage_name, i32 %result) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i71 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.111, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i72 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.111, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i71, %entry.split ], [ %call.i72, %if.then6.i ]
  %ref.tmp.sroa.16.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i10 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.16.0, i8* %extern_stage_name) #14
  %call.i13 = tail call i8* @halide_string_to_string(i8* %call.i10, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.112, i64 0, i64 0)) #14
  %conv.i = sext i32 %result to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %call.i13, i8* %ref.tmp.sroa.16.0, i64 %conv.i, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i16 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 %result
}

; Function Attrs: nounwind
define weak i32 @halide_error_extern_stage_failed(i8* %user_context, i8* %extern_stage_name, i32 %result) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i71 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.113, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i72 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.113, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i71, %entry.split ], [ %call.i72, %if.then6.i ]
  %ref.tmp.sroa.16.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i10 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.16.0, i8* %extern_stage_name) #14
  %call.i13 = tail call i8* @halide_string_to_string(i8* %call.i10, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.112, i64 0, i64 0)) #14
  %conv.i = sext i32 %result to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %call.i13, i8* %ref.tmp.sroa.16.0, i64 %conv.i, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i16 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 %result
}

; Function Attrs: nounwind
define weak i32 @halide_error_explicit_bounds_too_small(i8* %user_context, i8* %func_name, i8* %var_name, i32 %min_bound, i32 %max_bound, i32 %min_required, i32 %max_required) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i151 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.114, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i152 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.114, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i151, %entry.split ], [ %call.i152, %if.then6.i ]
  %ref.tmp.sroa.34.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i18 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.34.0, i8* %var_name) #14
  %call.i21 = tail call i8* @halide_string_to_string(i8* %call.i18, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.115, i64 0, i64 0)) #14
  %call.i24 = tail call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.34.0, i8* %func_name) #14
  %call.i27 = tail call i8* @halide_string_to_string(i8* %call.i24, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.116, i64 0, i64 0)) #14
  %conv.i = sext i32 %min_bound to i64
  %call.i30 = tail call i8* @halide_int64_to_string(i8* %call.i27, i8* %ref.tmp.sroa.34.0, i64 %conv.i, i32 1) #14
  %call.i33 = tail call i8* @halide_string_to_string(i8* %call.i30, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.117, i64 0, i64 0)) #14
  %conv.i36 = sext i32 %max_bound to i64
  %call.i37 = tail call i8* @halide_int64_to_string(i8* %call.i33, i8* %ref.tmp.sroa.34.0, i64 %conv.i36, i32 1) #14
  %call.i40 = tail call i8* @halide_string_to_string(i8* %call.i37, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.118, i64 0, i64 0)) #14
  %conv.i43 = sext i32 %min_required to i64
  %call.i44 = tail call i8* @halide_int64_to_string(i8* %call.i40, i8* %ref.tmp.sroa.34.0, i64 %conv.i43, i32 1) #14
  %call.i47 = tail call i8* @halide_string_to_string(i8* %call.i44, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.117, i64 0, i64 0)) #14
  %conv.i50 = sext i32 %max_required to i64
  %call.i51 = tail call i8* @halide_int64_to_string(i8* %call.i47, i8* %ref.tmp.sroa.34.0, i64 %conv.i50, i32 1) #14
  %call.i54 = tail call i8* @halide_string_to_string(i8* %call.i51, i8* %ref.tmp.sroa.34.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i54 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -2
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_type(i8* %user_context, i8* %func_name, i32 %type_given_bits, i32 %correct_type_bits) local_unnamed_addr #4 {
entry:
  %type_given_bits.addr = alloca i32, align 4
  %correct_type_bits.addr = alloca i32, align 4
  %correct_type = alloca %struct.halide_type_t, align 2
  %type_given = alloca %struct.halide_type_t, align 2
  store i32 %type_given_bits, i32* %type_given_bits.addr, align 4, !tbaa !41
  store i32 %correct_type_bits, i32* %correct_type_bits.addr, align 4, !tbaa !41
  %0 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %correct_type, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #11
  store i8 0, i8* %0, align 2, !tbaa !304
  %bits.i = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %correct_type, i64 0, i32 1
  store i8 0, i8* %bits.i, align 1, !tbaa !144
  %lanes.i = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %correct_type, i64 0, i32 2
  store i16 0, i16* %lanes.i, align 2, !tbaa !305
  %1 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %type_given, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #11
  store i8 0, i8* %1, align 2, !tbaa !304
  %bits.i8 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %type_given, i64 0, i32 1
  store i8 0, i8* %bits.i8, align 1, !tbaa !144
  %lanes.i9 = getelementptr inbounds %struct.halide_type_t, %struct.halide_type_t* %type_given, i64 0, i32 2
  store i16 0, i16* %lanes.i9, align 2, !tbaa !305
  %2 = bitcast i32* %correct_type_bits.addr to i8*
  %call = call i8* @memcpy(i8* nonnull %0, i8* nonnull %2, i64 4) #14
  %3 = bitcast i32* %type_given_bits.addr to i8*
  %call1 = call i8* @memcpy(i8* nonnull %1, i8* nonnull %3, i64 4) #14
  %call.i = call i8* @malloc(i64 1024) #14
  %tobool.not.i12 = icmp eq i8* %call.i, null
  br i1 %tobool.not.i12, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i151 = call i8* @halide_string_to_string(i8* null, i8* null, i8* %func_name) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i152 = call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* %func_name) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i151, %entry.split ], [ %call.i152, %if.then6.i ]
  %ref.tmp.sroa.18.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i18 = call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9.120, i64 0, i64 0)) #14
  %call.i21 = call i8* @halide_type_to_string(i8* %call.i18, i8* %ref.tmp.sroa.18.0, %struct.halide_type_t* nonnull %correct_type) #14
  %call.i24 = call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10.121, i64 0, i64 0)) #14
  %call.i27 = call i8* @halide_type_to_string(i8* %call.i24, i8* %ref.tmp.sroa.18.0, %struct.halide_type_t* nonnull %type_given) #14
  br i1 %tobool.not.i12, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i27 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  call void @free(i8* %call.i) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #11
  ret i32 -3
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_dimensions(i8* %user_context, i8* %func_name, i32 %dimensions_given, i32 %correct_dimensions) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* %func_name) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* %func_name) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.122, i64 0, i64 0)) #14
  %conv.i = sext i32 %correct_dimensions to i64
  %call.i14 = tail call i8* @halide_int64_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i64 %conv.i, i32 1) #14
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.12.123, i64 0, i64 0)) #14
  %conv.i20 = sext i32 %dimensions_given to i64
  %call.i21 = tail call i8* @halide_int64_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i64 %conv.i20, i32 1) #14
  %call.i24 = tail call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13.124, i64 0, i64 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i24 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -43
}

; Function Attrs: nounwind
define weak i32 @halide_error_access_out_of_bounds(i8* %user_context, i8* %func_name, i32 %dimension, i32 %min_touched, i32 %max_touched, i32 %min_valid, i32 %max_valid) local_unnamed_addr #4 {
entry:
  %cmp = icmp slt i32 %min_touched, %min_valid
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.split, label %if.then6.i

if.then.split:                                    ; preds = %if.then
  %call.i271 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* %func_name) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %if.then
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i272 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* %func_name) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then.split, %if.then6.i
  %phi.call = phi i8* [ %call.i271, %if.then.split ], [ %call.i272, %if.then6.i ]
  %ref.tmp.sroa.22.0 = phi i8* [ null, %if.then.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i30 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14.125, i64 0, i64 0)) #14
  %conv.i = sext i32 %min_touched to i64
  %call.i33 = tail call i8* @halide_int64_to_string(i8* %call.i30, i8* %ref.tmp.sroa.22.0, i64 %conv.i, i32 1) #14
  %call.i36 = tail call i8* @halide_string_to_string(i8* %call.i33, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15.126, i64 0, i64 0)) #14
  %conv.i39 = sext i32 %min_valid to i64
  %call.i40 = tail call i8* @halide_int64_to_string(i8* %call.i36, i8* %ref.tmp.sroa.22.0, i64 %conv.i39, i32 1) #14
  %call.i43 = tail call i8* @halide_string_to_string(i8* %call.i40, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16.127, i64 0, i64 0)) #14
  %conv.i46 = sext i32 %dimension to i64
  %call.i47 = tail call i8* @halide_int64_to_string(i8* %call.i43, i8* %ref.tmp.sroa.22.0, i64 %conv.i46, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %if.end17.sink.split

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i47 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %if.end17.sink.split

if.else:                                          ; preds = %entry
  %cmp7 = icmp sgt i32 %max_touched, %max_valid
  br i1 %cmp7, label %if.then8, label %if.end17

if.then8:                                         ; preds = %if.else
  %call.i53 = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i56 = icmp eq i8* %call.i53, null
  br i1 %tobool.not.i56, label %if.then8.split, label %if.then6.i59

if.then8.split:                                   ; preds = %if.then8
  %call.i653 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* %func_name) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62

if.then6.i59:                                     ; preds = %if.then8
  %add.ptr.i57 = getelementptr inbounds i8, i8* %call.i53, i64 1023
  store i8 0, i8* %add.ptr.i57, align 1, !tbaa !18
  %call.i654 = tail call i8* @halide_string_to_string(i8* nonnull %call.i53, i8* nonnull %add.ptr.i57, i8* %func_name) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62: ; preds = %if.then8.split, %if.then6.i59
  %phi.call5 = phi i8* [ %call.i653, %if.then8.split ], [ %call.i654, %if.then6.i59 ]
  %ref.tmp9.sroa.22.0 = phi i8* [ null, %if.then8.split ], [ %add.ptr.i57, %if.then6.i59 ]
  %call.i68 = tail call i8* @halide_string_to_string(i8* %phi.call5, i8* %ref.tmp9.sroa.22.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14.125, i64 0, i64 0)) #14
  %conv.i71 = sext i32 %max_touched to i64
  %call.i72 = tail call i8* @halide_int64_to_string(i8* %call.i68, i8* %ref.tmp9.sroa.22.0, i64 %conv.i71, i32 1) #14
  %call.i75 = tail call i8* @halide_string_to_string(i8* %call.i72, i8* %ref.tmp9.sroa.22.0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17.128, i64 0, i64 0)) #14
  %conv.i78 = sext i32 %max_valid to i64
  %call.i79 = tail call i8* @halide_int64_to_string(i8* %call.i75, i8* %ref.tmp9.sroa.22.0, i64 %conv.i78, i32 1) #14
  %call.i82 = tail call i8* @halide_string_to_string(i8* %call.i79, i8* %ref.tmp9.sroa.22.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16.127, i64 0, i64 0)) #14
  %conv.i85 = sext i32 %dimension to i64
  %call.i86 = tail call i8* @halide_int64_to_string(i8* %call.i82, i8* %ref.tmp9.sroa.22.0, i64 %conv.i85, i32 1) #14
  br i1 %tobool.not.i56, label %if.then.i90, label %if.else.i100

if.then.i90:                                      ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %if.end17.sink.split

if.else.i100:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit62
  %sub.ptr.lhs.cast.i.i95 = ptrtoint i8* %call.i86 to i64
  %sub.ptr.rhs.cast.i.i96 = ptrtoint i8* %call.i53 to i64
  %sub.ptr.sub.i.i97 = sub i64 1, %sub.ptr.rhs.cast.i.i96
  %add.i.i98 = add i64 %sub.ptr.sub.i.i97, %sub.ptr.lhs.cast.i.i95
  %call.i.i99 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i53, i64 %add.i.i98) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i53) #14
  br label %if.end17.sink.split

if.end17.sink.split:                              ; preds = %if.else.i100, %if.then.i90, %if.else.i, %if.then.i
  %call.i53.sink = phi i8* [ %call.i, %if.else.i ], [ null, %if.then.i ], [ %call.i53, %if.else.i100 ], [ null, %if.then.i90 ]
  tail call void @free(i8* %call.i53.sink) #14
  br label %if.end17

if.end17:                                         ; preds = %if.end17.sink.split, %if.else
  ret i32 -4
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_allocation_too_large(i8* %user_context, i8* %buffer_name, i64 %allocation_size, i64 %max_size) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.129, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.129, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %buffer_name) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #14
  %call.i17 = tail call i8* @halide_uint64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %allocation_size, i32 1) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20.131, i64 0, i64 0)) #14
  %call.i23 = tail call i8* @halide_uint64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_size, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -5
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_extents_negative(i8* %user_context, i8* %buffer_name, i32 %dimension, i32 %extent) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i91 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21.132, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i92 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21.132, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i91, %entry.split ], [ %call.i92, %if.then6.i ]
  %ref.tmp.sroa.22.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i12 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.22.0, i8* %buffer_name) #14
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22.133, i64 0, i64 0)) #14
  %conv.i = sext i32 %dimension to i64
  %call.i18 = tail call i8* @halide_int64_to_string(i8* %call.i15, i8* %ref.tmp.sroa.22.0, i64 %conv.i, i32 1) #14
  %call.i21 = tail call i8* @halide_string_to_string(i8* %call.i18, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.134, i64 0, i64 0)) #14
  %conv.i24 = sext i32 %extent to i64
  %call.i25 = tail call i8* @halide_int64_to_string(i8* %call.i21, i8* %ref.tmp.sroa.22.0, i64 %conv.i24, i32 1) #14
  %call.i28 = tail call i8* @halide_string_to_string(i8* %call.i25, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i28 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -28
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_extents_too_large(i8* %user_context, i8* %buffer_name, i64 %actual_size, i64 %max_size) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.135, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.135, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %buffer_name) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #14
  %call.i17 = tail call i8* @halide_int64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %actual_size, i32 1) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20.131, i64 0, i64 0)) #14
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_size, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -6
}

; Function Attrs: nounwind
define weak i32 @halide_error_constraints_make_required_region_smaller(i8* %user_context, i8* %buffer_name, i32 %dimension, i32 %constrained_min, i32 %constrained_extent, i32 %required_min, i32 %required_extent) local_unnamed_addr #4 {
entry:
  %add = add i32 %required_min, -1
  %sub = add i32 %add, %required_extent
  %add1 = add i32 %constrained_min, -1
  %sub2 = add i32 %add1, %constrained_extent
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i231 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25.136, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i232 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25.136, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i231, %entry.split ], [ %call.i232, %if.then6.i ]
  %ref.tmp.sroa.38.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i26 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.38.0, i8* %buffer_name) #14
  %call.i29 = tail call i8* @halide_string_to_string(i8* %call.i26, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.26.137, i64 0, i64 0)) #14
  %conv.i = sext i32 %dimension to i64
  %call.i32 = tail call i8* @halide_int64_to_string(i8* %call.i29, i8* %ref.tmp.sroa.38.0, i64 %conv.i, i32 1) #14
  %call.i35 = tail call i8* @halide_string_to_string(i8* %call.i32, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.138, i64 0, i64 0)) #14
  %call.i38 = tail call i8* @halide_string_to_string(i8* %call.i35, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28.139, i64 0, i64 0)) #14
  %conv.i41 = sext i32 %required_min to i64
  %call.i42 = tail call i8* @halide_int64_to_string(i8* %call.i38, i8* %ref.tmp.sroa.38.0, i64 %conv.i41, i32 1) #14
  %call.i45 = tail call i8* @halide_string_to_string(i8* %call.i42, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.117, i64 0, i64 0)) #14
  %conv.i48 = sext i32 %sub to i64
  %call.i49 = tail call i8* @halide_int64_to_string(i8* %call.i45, i8* %ref.tmp.sroa.38.0, i64 %conv.i48, i32 1) #14
  %call.i52 = tail call i8* @halide_string_to_string(i8* %call.i49, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.138, i64 0, i64 0)) #14
  %call.i55 = tail call i8* @halide_string_to_string(i8* %call.i52, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29.140, i64 0, i64 0)) #14
  %conv.i58 = sext i32 %constrained_min to i64
  %call.i59 = tail call i8* @halide_int64_to_string(i8* %call.i55, i8* %ref.tmp.sroa.38.0, i64 %conv.i58, i32 1) #14
  %call.i62 = tail call i8* @halide_string_to_string(i8* %call.i59, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.117, i64 0, i64 0)) #14
  %conv.i65 = sext i32 %sub2 to i64
  %call.i66 = tail call i8* @halide_int64_to_string(i8* %call.i62, i8* %ref.tmp.sroa.38.0, i64 %conv.i65, i32 1) #14
  %call.i69 = tail call i8* @halide_string_to_string(i8* %call.i66, i8* %ref.tmp.sroa.38.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i69 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -7
}

; Function Attrs: nounwind
define weak i32 @halide_error_constraint_violated(i8* %user_context, i8* %var, i32 %val, i8* %constrained_var, i32 %constrained_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i111 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31.142, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i112 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31.142, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i111, %entry.split ], [ %call.i112, %if.then6.i ]
  %ref.tmp.sroa.26.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i14 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.26.0, i8* %var) #14
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.143, i64 0, i64 0)) #14
  %conv.i = sext i32 %val to i64
  %call.i20 = tail call i8* @halide_int64_to_string(i8* %call.i17, i8* %ref.tmp.sroa.26.0, i64 %conv.i, i32 1) #14
  %call.i23 = tail call i8* @halide_string_to_string(i8* %call.i20, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33.144, i64 0, i64 0)) #14
  %call.i26 = tail call i8* @halide_string_to_string(i8* %call.i23, i8* %ref.tmp.sroa.26.0, i8* %constrained_var) #14
  %call.i29 = tail call i8* @halide_string_to_string(i8* %call.i26, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.143, i64 0, i64 0)) #14
  %conv.i32 = sext i32 %constrained_val to i64
  %call.i33 = tail call i8* @halide_int64_to_string(i8* %call.i29, i8* %ref.tmp.sroa.26.0, i64 %conv.i32, i32 1) #14
  %call.i36 = tail call i8* @halide_string_to_string(i8* %call.i33, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.119, i64 0, i64 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i36 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -8
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_i64(i8* %user_context, i8* %param_name, i64 %val, i64 %min_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #14
  %call.i17 = tail call i8* @halide_int64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35.146, i64 0, i64 0)) #14
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %min_val, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -9
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_u64(i8* %user_context, i8* %param_name, i64 %val, i64 %min_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #14
  %call.i17 = tail call i8* @halide_uint64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35.146, i64 0, i64 0)) #14
  %call.i23 = tail call i8* @halide_uint64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %min_val, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -9
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_small_f64(i8* %user_context, i8* %param_name, double %val, double %min_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #14
  %call.i17 = tail call i8* @halide_double_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, double %val, i32 1) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35.146, i64 0, i64 0)) #14
  %call.i23 = tail call i8* @halide_double_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, double %min_val, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -9
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_i64(i8* %user_context, i8* %param_name, i64 %val, i64 %max_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #14
  %call.i17 = tail call i8* @halide_int64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0)) #14
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_val, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -10
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_u64(i8* %user_context, i8* %param_name, i64 %val, i64 %max_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #14
  %call.i17 = tail call i8* @halide_uint64_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i64 %val, i32 1) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0)) #14
  %call.i23 = tail call i8* @halide_uint64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %max_val, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -10
}

; Function Attrs: nounwind
define weak i32 @halide_error_param_too_large_f64(i8* %user_context, i8* %param_name, double %val, double %max_val) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34.145, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %param_name) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.130, i64 0, i64 0)) #14
  %call.i17 = tail call i8* @halide_double_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, double %val, i32 1) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0)) #14
  %call.i23 = tail call i8* @halide_double_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, double %max_val, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -10
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_error_out_of_memory(i8* %user_context) local_unnamed_addr #0 {
entry:
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.37, i64 0, i64 0)) #14
  ret i32 -11
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_argument_is_null(i8* %user_context, i8* %buffer_name) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i51 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i52 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i51, %entry.split ], [ %call.i52, %if.then6.i ]
  %ref.tmp.sroa.14.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.14.0, i8* %buffer_name) #14
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i11 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -12
}

; Function Attrs: nounwind
define weak i32 @halide_error_debug_to_file_failed(i8* %user_context, i8* %func, i8* %filename, i32 %error_code) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i81 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.40, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i82 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.40, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i81, %entry.split ], [ %call.i82, %if.then6.i ]
  %ref.tmp.sroa.20.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i11 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.20.0, i8* %func) #14
  %call.i14 = tail call i8* @halide_string_to_string(i8* %call.i11, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41.147, i64 0, i64 0)) #14
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.20.0, i8* %filename) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.20.0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0)) #14
  %conv.i = sext i32 %error_code to i64
  %call.i23 = tail call i8* @halide_int64_to_string(i8* %call.i20, i8* %ref.tmp.sroa.20.0, i64 %conv.i, i32 1) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i23 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -13
}

; Function Attrs: nounwind
define weak i32 @halide_error_unaligned_host_ptr(i8* %user_context, i8* %func, i32 %alignment) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i71 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i72 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i71, %entry.split ], [ %call.i72, %if.then6.i ]
  %ref.tmp.sroa.18.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i10 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.18.0, i8* %func) #14
  %call.i13 = tail call i8* @halide_string_to_string(i8* %call.i10, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44, i64 0, i64 0)) #14
  %conv.i = sext i32 %alignment to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %call.i13, i8* %ref.tmp.sroa.18.0, i64 %conv.i, i32 1) #14
  %call.i19 = tail call i8* @halide_string_to_string(i8* %call.i16, i8* %ref.tmp.sroa.18.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.45, i64 0, i64 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i19 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -24
}

; Function Attrs: nounwind
define weak i32 @halide_error_device_dirty_with_no_device_support(i8* %user_context, i8* %func) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i61 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i62 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i61, %entry.split ], [ %call.i62, %if.then6.i ]
  %ref.tmp.sroa.16.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i9 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.16.0, i8* %func) #14
  %call.i12 = tail call i8* @halide_string_to_string(i8* %call.i9, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.47, i64 0, i64 0)) #14
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.48, i64 0, i64 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i15 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -44
}

; Function Attrs: nounwind
define weak i32 @halide_error_host_is_null(i8* %user_context, i8* %func) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i51 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i52 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i51, %entry.split ], [ %call.i52, %if.then6.i ]
  %ref.tmp.sroa.14.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.14.0, i8* %func) #14
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.49, i64 0, i64 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i11 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -34
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_fold(i8* %user_context, i8* %func_name, i8* %var_name, i8* %loop_name) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i91 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50.148, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i92 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50.148, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i91, %entry.split ], [ %call.i92, %if.then6.i ]
  %ref.tmp.sroa.22.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i12 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.22.0, i8* %var_name) #14
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #14
  %call.i18 = tail call i8* @halide_string_to_string(i8* %call.i15, i8* %ref.tmp.sroa.22.0, i8* %func_name) #14
  %call.i21 = tail call i8* @halide_string_to_string(i8* %call.i18, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.52, i64 0, i64 0)) #14
  %call.i24 = tail call i8* @halide_string_to_string(i8* %call.i21, i8* %ref.tmp.sroa.22.0, i8* %loop_name) #14
  %call.i27 = tail call i8* @halide_string_to_string(i8* %call.i24, i8* %ref.tmp.sroa.22.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i27 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -25
}

; Function Attrs: nounwind
define weak i32 @halide_error_bad_extern_fold(i8* %user_context, i8* %func_name, i32 %dim, i32 %min, i32 %extent, i32 %valid_min, i32 %fold_factor) local_unnamed_addr #4 {
entry:
  %cmp = icmp slt i32 %min, %valid_min
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %add = add nsw i32 %extent, %min
  %add1 = add nsw i32 %fold_factor, %valid_min
  %cmp2 = icmp sgt i32 %add, %add1
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.split, label %if.then6.i

if.then.split:                                    ; preds = %if.then
  %call.i521 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %if.then
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i522 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %if.then.split, %if.then6.i
  %phi.call = phi i8* [ %call.i521, %if.then.split ], [ %call.i522, %if.then6.i ]
  %ref.tmp.sroa.36.0 = phi i8* [ null, %if.then.split ], [ %add.ptr.i, %if.then6.i ]
  %conv.i = sext i32 %dim to i64
  %call.i55 = tail call i8* @halide_int64_to_string(i8* %phi.call, i8* %ref.tmp.sroa.36.0, i64 %conv.i, i32 1) #14
  %call.i58 = tail call i8* @halide_string_to_string(i8* %call.i55, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #14
  %call.i61 = tail call i8* @halide_string_to_string(i8* %call.i58, i8* %ref.tmp.sroa.36.0, i8* %func_name) #14
  %call.i64 = tail call i8* @halide_string_to_string(i8* %call.i61, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.54, i64 0, i64 0)) #14
  %conv.i67 = sext i32 %min to i64
  %call.i68 = tail call i8* @halide_int64_to_string(i8* %call.i64, i8* %ref.tmp.sroa.36.0, i64 %conv.i67, i32 1) #14
  %call.i71 = tail call i8* @halide_string_to_string(i8* %call.i68, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #14
  %add9 = add nsw i32 %extent, %min
  %sub = add nsw i32 %add9, -1
  %conv.i74 = sext i32 %sub to i64
  %call.i75 = tail call i8* @halide_int64_to_string(i8* %call.i71, i8* %ref.tmp.sroa.36.0, i64 %conv.i74, i32 1) #14
  %call.i78 = tail call i8* @halide_string_to_string(i8* %call.i75, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0)) #14
  %call.i81 = tail call i8* @halide_string_to_string(i8* %call.i78, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.57, i64 0, i64 0)) #14
  %conv.i84 = sext i32 %valid_min to i64
  %call.i85 = tail call i8* @halide_int64_to_string(i8* %call.i81, i8* %ref.tmp.sroa.36.0, i64 %conv.i84, i32 1) #14
  %call.i88 = tail call i8* @halide_string_to_string(i8* %call.i85, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #14
  %add15 = add nsw i32 %fold_factor, %valid_min
  %sub16 = add nsw i32 %add15, -1
  %conv.i91 = sext i32 %sub16 to i64
  %call.i92 = tail call i8* @halide_int64_to_string(i8* %call.i88, i8* %ref.tmp.sroa.36.0, i64 %conv.i91, i32 1) #14
  %call.i95 = tail call i8* @halide_string_to_string(i8* %call.i92, i8* %ref.tmp.sroa.36.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58.149, i64 0, i64 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %if.end

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i95 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false
  %call.i101 = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i104 = icmp eq i8* %call.i101, null
  br i1 %tobool.not.i104, label %if.else.split, label %if.then6.i107

if.else.split:                                    ; preds = %if.else
  %call.i1133 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110

if.then6.i107:                                    ; preds = %if.else
  %add.ptr.i105 = getelementptr inbounds i8, i8* %call.i101, i64 1023
  store i8 0, i8* %add.ptr.i105, align 1, !tbaa !18
  %call.i1134 = tail call i8* @halide_string_to_string(i8* nonnull %call.i101, i8* nonnull %add.ptr.i105, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110: ; preds = %if.else.split, %if.then6.i107
  %phi.call5 = phi i8* [ %call.i1133, %if.else.split ], [ %call.i1134, %if.then6.i107 ]
  %ref.tmp19.sroa.34.0 = phi i8* [ null, %if.else.split ], [ %add.ptr.i105, %if.then6.i107 ]
  %conv.i116 = sext i32 %dim to i64
  %call.i117 = tail call i8* @halide_int64_to_string(i8* %phi.call5, i8* %ref.tmp19.sroa.34.0, i64 %conv.i116, i32 1) #14
  %call.i120 = tail call i8* @halide_string_to_string(i8* %call.i117, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #14
  %call.i123 = tail call i8* @halide_string_to_string(i8* %call.i120, i8* %ref.tmp19.sroa.34.0, i8* %func_name) #14
  %call.i126 = tail call i8* @halide_string_to_string(i8* %call.i123, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.54, i64 0, i64 0)) #14
  %conv.i129 = sext i32 %min to i64
  %call.i130 = tail call i8* @halide_int64_to_string(i8* %call.i126, i8* %ref.tmp19.sroa.34.0, i64 %conv.i129, i32 1) #14
  %call.i133 = tail call i8* @halide_string_to_string(i8* %call.i130, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)) #14
  %sub28 = add nsw i32 %add, -1
  %conv.i136 = sext i32 %sub28 to i64
  %call.i137 = tail call i8* @halide_int64_to_string(i8* %call.i133, i8* %ref.tmp19.sroa.34.0, i64 %conv.i136, i32 1) #14
  %call.i140 = tail call i8* @halide_string_to_string(i8* %call.i137, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0)) #14
  %call.i143 = tail call i8* @halide_string_to_string(i8* %call.i140, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.59.150, i64 0, i64 0)) #14
  %call.i146 = tail call i8* @halide_string_to_string(i8* %call.i143, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.60.151, i64 0, i64 0)) #14
  %conv.i149 = sext i32 %fold_factor to i64
  %call.i150 = tail call i8* @halide_int64_to_string(i8* %call.i146, i8* %ref.tmp19.sroa.34.0, i64 %conv.i149, i32 1) #14
  %call.i153 = tail call i8* @halide_string_to_string(i8* %call.i150, i8* %ref.tmp19.sroa.34.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.141, i64 0, i64 0)) #14
  br i1 %tobool.not.i104, label %if.then.i157, label %if.else.i167

if.then.i157:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %if.end

if.else.i167:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit110
  %sub.ptr.lhs.cast.i.i162 = ptrtoint i8* %call.i153 to i64
  %sub.ptr.rhs.cast.i.i163 = ptrtoint i8* %call.i101 to i64
  %sub.ptr.sub.i.i164 = sub i64 1, %sub.ptr.rhs.cast.i.i163
  %add.i.i165 = add i64 %sub.ptr.sub.i.i164, %sub.ptr.lhs.cast.i.i162
  %call.i.i166 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i101, i64 %add.i.i165) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i101) #14
  br label %if.end

if.end:                                           ; preds = %if.else.i167, %if.then.i157, %if.else.i, %if.then.i
  %call.i101.sink = phi i8* [ %call.i, %if.else.i ], [ null, %if.then.i ], [ %call.i101, %if.else.i167 ], [ null, %if.then.i157 ]
  tail call void @free(i8* %call.i101.sink) #14
  ret i32 -35
}

; Function Attrs: nounwind
define weak i32 @halide_error_fold_factor_too_small(i8* %user_context, i8* %func_name, i8* %var_name, i32 %fold_factor, i8* %loop_name, i32 %required_extent) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i131 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.61.152, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i132 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.61.152, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i131, %entry.split ], [ %call.i132, %if.then6.i ]
  %ref.tmp.sroa.30.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %conv.i = sext i32 %fold_factor to i64
  %call.i16 = tail call i8* @halide_int64_to_string(i8* %phi.call, i8* %ref.tmp.sroa.30.0, i64 %conv.i, i32 1) #14
  %call.i19 = tail call i8* @halide_string_to_string(i8* %call.i16, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0)) #14
  %call.i22 = tail call i8* @halide_string_to_string(i8* %call.i19, i8* %ref.tmp.sroa.30.0, i8* %var_name) #14
  %call.i25 = tail call i8* @halide_string_to_string(i8* %call.i22, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #14
  %call.i28 = tail call i8* @halide_string_to_string(i8* %call.i25, i8* %ref.tmp.sroa.30.0, i8* %func_name) #14
  %call.i31 = tail call i8* @halide_string_to_string(i8* %call.i28, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.63, i64 0, i64 0)) #14
  %call.i34 = tail call i8* @halide_string_to_string(i8* %call.i31, i8* %ref.tmp.sroa.30.0, i8* %loop_name) #14
  %call.i37 = tail call i8* @halide_string_to_string(i8* %call.i34, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.143, i64 0, i64 0)) #14
  %conv.i40 = sext i32 %required_extent to i64
  %call.i41 = tail call i8* @halide_int64_to_string(i8* %call.i37, i8* %ref.tmp.sroa.30.0, i64 %conv.i40, i32 1) #14
  %call.i44 = tail call i8* @halide_string_to_string(i8* %call.i41, i8* %ref.tmp.sroa.30.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64.153, i64 0, i64 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i44 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -26
}

; Function Attrs: nounwind
define weak i32 @halide_error_requirement_failed(i8* %user_context, i8* %condition, i8* %message) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i61 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.65, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i62 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.65, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i61, %entry.split ], [ %call.i62, %if.then6.i ]
  %ref.tmp.sroa.16.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i9 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.16.0, i8* %condition) #14
  %call.i12 = tail call i8* @halide_string_to_string(i8* %call.i9, i8* %ref.tmp.sroa.16.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i64 0, i64 0)) #14
  %call.i15 = tail call i8* @halide_string_to_string(i8* %call.i12, i8* %ref.tmp.sroa.16.0, i8* %message) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i15 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -27
}

; Function Attrs: nounwind
define weak i32 @halide_error_specialize_fail(i8* %user_context, i8* %message) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i41 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0)) #14
  %call.i75 = tail call i8* @halide_string_to_string(i8* %call.i41, i8* null, i8* %message) #14
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i42 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.67, i64 0, i64 0)) #14
  %call.i7 = tail call i8* @halide_string_to_string(i8* %call.i42, i8* nonnull %add.ptr.i, i8* %message) #14
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i7 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -31
}

; Function Attrs: nounwind
define weak i32 @halide_error_no_device_interface(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.68, i64 0, i64 0)) #14
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.68, i64 0, i64 0)) #14
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -19
}

; Function Attrs: nounwind
define weak i32 @halide_error_device_interface_no_device(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.69, i64 0, i64 0)) #14
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.69, i64 0, i64 0)) #14
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -36
}

; Function Attrs: nounwind
define weak i32 @halide_error_host_and_device_dirty(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.70, i64 0, i64 0)) #14
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.70, i64 0, i64 0)) #14
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -37
}

; Function Attrs: nounwind
define weak i32 @halide_error_buffer_is_null(i8* %user_context, i8* %routine) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i51 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i52 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i51, %entry.split ], [ %call.i52, %if.then6.i ]
  %ref.tmp.sroa.14.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %call.i8 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %ref.tmp.sroa.14.0, i8* %routine) #14
  %call.i11 = tail call i8* @halide_string_to_string(i8* %call.i8, i8* %ref.tmp.sroa.14.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.72, i64 0, i64 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i11 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -38
}

; Function Attrs: nounwind
define weak i32 @halide_error_storage_bound_too_small(i8* %user_context, i8* %func_name, i8* %var_name, i32 %provided_size, i32 %required_size) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %entry.split, label %if.then6.i

entry.split:                                      ; preds = %entry
  %call.i111 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.73, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i112 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.73, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit: ; preds = %entry.split, %if.then6.i
  %phi.call = phi i8* [ %call.i111, %entry.split ], [ %call.i112, %if.then6.i ]
  %ref.tmp.sroa.26.0 = phi i8* [ null, %entry.split ], [ %add.ptr.i, %if.then6.i ]
  %conv.i = sext i32 %provided_size to i64
  %call.i14 = tail call i8* @halide_int64_to_string(i8* %phi.call, i8* %ref.tmp.sroa.26.0, i64 %conv.i, i32 1) #14
  %call.i17 = tail call i8* @halide_string_to_string(i8* %call.i14, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0)) #14
  %call.i20 = tail call i8* @halide_string_to_string(i8* %call.i17, i8* %ref.tmp.sroa.26.0, i8* %var_name) #14
  %call.i23 = tail call i8* @halide_string_to_string(i8* %call.i20, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #14
  %call.i26 = tail call i8* @halide_string_to_string(i8* %call.i23, i8* %ref.tmp.sroa.26.0, i8* %func_name) #14
  %call.i29 = tail call i8* @halide_string_to_string(i8* %call.i26, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.74, i64 0, i64 0)) #14
  %conv.i32 = sext i32 %required_size to i64
  %call.i33 = tail call i8* @halide_int64_to_string(i8* %call.i29, i8* %ref.tmp.sroa.26.0, i64 %conv.i32, i32 1) #14
  %call.i36 = tail call i8* @halide_string_to_string(i8* %call.i33, i8* %ref.tmp.sroa.26.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64.153, i64 0, i64 0)) #14
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EEC2EPvPc.exit
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i36 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -45
}

; Function Attrs: nounwind
define weak i32 @halide_error_device_crop_failed(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %call.i316 = tail call i8* @halide_string_to_string(i8* null, i8* null, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.75, i64 0, i64 0)) #14
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  %call.i3 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* nonnull %add.ptr.i, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.75, i64 0, i64 0)) #14
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %call.i3 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  tail call void @halide_error(i8* %user_context, i8* nonnull %call.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE1ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret i32 -41
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_shutdown() #0 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #15
  %sampling_thread = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 7
  %0 = load %struct.halide_thread*, %struct.halide_thread** %sampling_thread, align 8, !tbaa !337
  %tobool.not = icmp eq %struct.halide_thread* %0, null
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %current_func = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 3
  store i32 -2, i32* %current_func, align 8, !tbaa !339
  tail call void @halide_join_thread(%struct.halide_thread* nonnull %0) #14
  store %struct.halide_thread* null, %struct.halide_thread** %sampling_thread, align 8, !tbaa !337
  store i32 -1, i32* %current_func, align 8, !tbaa !339
  tail call void @halide_profiler_report_unlocked(i8* null, %struct.halide_profiler_state* nonnull %call) #15
  tail call void @halide_profiler_reset_unlocked(%struct.halide_profiler_state* nonnull %call) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak %struct.halide_profiler_state* @halide_profiler_get_state() local_unnamed_addr #2 {
entry:
  ret %struct.halide_profiler_state* @_ZZ25halide_profiler_get_stateE1s
}

; Function Attrs: nounwind
define weak void @halide_profiler_report_unlocked(i8* %user_context, %struct.halide_profiler_state* %s) local_unnamed_addr #4 {
entry:
  %call.i = tail call i8* @malloc(i64 1024) #14
  %tobool.not.i = icmp eq i8* %call.i, null
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit, label %if.then6.i

if.then6.i:                                       ; preds = %entry
  %add.ptr.i = getelementptr inbounds i8, i8* %call.i, i64 1023
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !18
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit: ; preds = %if.then6.i, %entry
  %sstr.sroa.125.0 = phi i8* [ %add.ptr.i, %if.then6.i ], [ null, %entry ]
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 5
  %p.0624 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !14
  %tobool.not625 = icmp eq %struct.halide_profiler_pipeline_stats* %p.0624, null
  br i1 %tobool.not625, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit
  %sub.ptr.rhs.cast.i.i348 = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i349 = sub i64 1, %sub.ptr.rhs.cast.i.i348
  br label %for.body

for.cond.cleanup:                                 ; preds = %cleanup181, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit
  %sstr.sroa.19.0.lcssa = phi i8* [ %call.i, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EEC2EPvPc.exit ], [ %sstr.sroa.19.15, %cleanup181 ]
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %for.cond.cleanup
  tail call void @halide_error(i8* %user_context, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0)) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EED2Ev.exit

if.else.i:                                        ; preds = %for.cond.cleanup
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %sstr.sroa.19.0.lcssa to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %call.i to i64
  %sub.ptr.sub.i.i = sub i64 1, %sub.ptr.rhs.cast.i.i
  %add.i.i = add i64 %sub.ptr.sub.i.i, %sub.ptr.lhs.cast.i.i
  %call.i.i = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EED2Ev.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EED2Ev.exit: ; preds = %if.else.i, %if.then.i
  tail call void @free(i8* %call.i) #14
  ret void

for.body:                                         ; preds = %cleanup181, %for.body.lr.ph
  %p.0627 = phi %struct.halide_profiler_pipeline_stats* [ %p.0624, %for.body.lr.ph ], [ %p.0, %cleanup181 ]
  %sstr.sroa.19.0626 = phi i8* [ %call.i, %for.body.lr.ph ], [ %sstr.sroa.19.15, %cleanup181 ]
  %time = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 0
  %0 = load i64, i64* %time, align 8, !tbaa !340
  %conv = uitofp i64 %0 to float
  %div = fdiv float %conv, 1.000000e+06
  %runs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 11
  %1 = load i32, i32* %runs, align 8, !tbaa !342
  %tobool1.not = icmp eq i32 %1, 0
  br i1 %tobool1.not, label %cleanup181, label %if.end

if.end:                                           ; preds = %for.body
  br i1 %tobool.not.i, label %if.end.split, label %if.then.i278

if.end.split:                                     ; preds = %if.end
  %active_threads_numerator1 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 4
  %2 = load i64, i64* %active_threads_numerator1, align 8, !tbaa !343
  %active_threads_denominator2 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 5
  %3 = load i64, i64* %active_threads_denominator2, align 8, !tbaa !344
  %cmp3 = icmp eq i64 %2, %3
  %name4 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 6
  %4 = load i8*, i8** %name4, align 8, !tbaa !345
  %call.i2825 = tail call i8* @halide_string_to_string(i8* null, i8* %sstr.sroa.125.0, i8* %4) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit

if.then.i278:                                     ; preds = %if.end
  store i8 0, i8* %call.i, align 1, !tbaa !18
  %active_threads_numerator6 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 4
  %5 = load i64, i64* %active_threads_numerator6, align 8, !tbaa !343
  %active_threads_denominator7 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 5
  %6 = load i64, i64* %active_threads_denominator7, align 8, !tbaa !344
  %cmp8 = icmp eq i64 %5, %6
  %name9 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 6
  %7 = load i8*, i8** %name9, align 8, !tbaa !345
  %call.i28210 = tail call i8* @halide_string_to_string(i8* nonnull %call.i, i8* %sstr.sroa.125.0, i8* %7) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit: ; preds = %if.end.split, %if.then.i278
  %8 = phi i64 [ %2, %if.end.split ], [ %5, %if.then.i278 ]
  %9 = phi i64 [ %3, %if.end.split ], [ %6, %if.then.i278 ]
  %10 = phi i1 [ %cmp3, %if.end.split ], [ %cmp8, %if.then.i278 ]
  %phi.call = phi i8* [ %call.i2825, %if.end.split ], [ %call.i28210, %if.then.i278 ]
  %call.i285 = tail call i8* @halide_string_to_string(i8* %phi.call, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #14
  %call.i288 = tail call i8* @halide_string_to_string(i8* %call.i285, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.165, i64 0, i64 0)) #14
  %conv.i = fpext float %div to double
  %call.i291 = tail call i8* @halide_double_to_string(i8* %call.i288, i8* %sstr.sroa.125.0, double %conv.i, i32 0) #14
  %call.i294 = tail call i8* @halide_string_to_string(i8* %call.i291, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.166, i64 0, i64 0)) #14
  %call.i297 = tail call i8* @halide_string_to_string(i8* %call.i294, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10.167, i64 0, i64 0)) #14
  %samples = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 12
  %11 = load i32, i32* %samples, align 4, !tbaa !346
  %conv.i300 = sext i32 %11 to i64
  %call.i301 = tail call i8* @halide_int64_to_string(i8* %call.i297, i8* %sstr.sroa.125.0, i64 %conv.i300, i32 1) #14
  %call.i304 = tail call i8* @halide_string_to_string(i8* %call.i301, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.168, i64 0, i64 0)) #14
  %12 = load i32, i32* %runs, align 8, !tbaa !342
  %conv.i307 = sext i32 %12 to i64
  %call.i308 = tail call i8* @halide_int64_to_string(i8* %call.i304, i8* %sstr.sroa.125.0, i64 %conv.i307, i32 1) #14
  %call.i311 = tail call i8* @halide_string_to_string(i8* %call.i308, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.169, i64 0, i64 0)) #14
  %13 = load i32, i32* %runs, align 8, !tbaa !342
  %conv19 = sitofp i32 %13 to float
  %div20 = fdiv float %div, %conv19
  %conv.i314 = fpext float %div20 to double
  %call.i315 = tail call i8* @halide_double_to_string(i8* %call.i311, i8* %sstr.sroa.125.0, double %conv.i314, i32 0) #14
  %call.i318 = tail call i8* @halide_string_to_string(i8* %call.i315, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.170, i64 0, i64 0)) #14
  br i1 %10, label %if.end28, label %if.then24

if.then24:                                        ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit
  %conv3 = uitofp i64 %8 to double
  %conv5 = uitofp i64 %9 to double
  %add = fadd double %conv5, 1.000000e-10
  %div6 = fdiv double %conv3, %add
  %conv7 = fptrunc double %div6 to float
  %call.i321 = tail call i8* @halide_string_to_string(i8* %call.i318, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.171, i64 0, i64 0)) #14
  %conv.i324 = fpext float %conv7 to double
  %call.i325 = tail call i8* @halide_double_to_string(i8* %call.i321, i8* %sstr.sroa.125.0, double %conv.i324, i32 0) #14
  %call.i328 = tail call i8* @halide_string_to_string(i8* %call.i325, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #14
  br label %if.end28

if.end28:                                         ; preds = %if.then24, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit
  %sstr.sroa.19.1 = phi i8* [ %call.i318, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit ], [ %call.i328, %if.then24 ]
  %call.i331 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.1, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15.172, i64 0, i64 0)) #14
  %num_allocs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 13
  %14 = load i32, i32* %num_allocs, align 8, !tbaa !347
  %conv.i334 = sext i32 %14 to i64
  %call.i335 = tail call i8* @halide_int64_to_string(i8* %call.i331, i8* %sstr.sroa.125.0, i64 %conv.i334, i32 1) #14
  %call.i338 = tail call i8* @halide_string_to_string(i8* %call.i335, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.173, i64 0, i64 0)) #14
  %memory_peak = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 2
  %15 = load i64, i64* %memory_peak, align 8, !tbaa !348
  %call.i341 = tail call i8* @halide_uint64_to_string(i8* %call.i338, i8* %sstr.sroa.125.0, i64 %15, i32 1) #14
  %call.i344 = tail call i8* @halide_string_to_string(i8* %call.i341, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17.174, i64 0, i64 0)) #14
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit, label %if.then.i352

if.then.i352:                                     ; preds = %if.end28
  %sub.ptr.lhs.cast.i.i347 = ptrtoint i8* %call.i344 to i64
  %add.i.i350 = add i64 %sub.ptr.sub.i.i349, %sub.ptr.lhs.cast.i.i347
  %call.i.i351 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i350) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit: ; preds = %if.then.i352, %if.end28
  %retval.0.i = phi i8* [ %call.i, %if.then.i352 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0), %if.end28 ]
  tail call void @halide_print(i8* %user_context, i8* nonnull %retval.0.i) #14
  %16 = load i64, i64* %time, align 8, !tbaa !340
  %tobool36.not = icmp eq i64 %16, 0
  br i1 %tobool36.not, label %lor.end, label %for.cond53.preheader

lor.end:                                          ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit
  %memory_total = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 3
  %17 = load i64, i64* %memory_total, align 8, !tbaa !349
  %tobool37.not = icmp eq i64 %17, 0
  br i1 %tobool37.not, label %for.cond41.preheader, label %for.cond53.preheader

for.cond41.preheader:                             ; preds = %lor.end
  %num_funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 9
  %18 = load i32, i32* %num_funcs, align 8, !tbaa !350
  %cmp42589 = icmp sgt i32 %18, 0
  br i1 %cmp42589, label %for.body44.lr.ph, label %cleanup181

for.body44.lr.ph:                                 ; preds = %for.cond41.preheader
  %funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 7
  %19 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %funcs, align 8, !tbaa !351
  %20 = zext i32 %18 to i64
  br label %for.body44

for.cond41:                                       ; preds = %for.body44
  %exitcond.not = icmp eq i64 %indvars.iv.next, %20
  br i1 %exitcond.not, label %cleanup181, label %for.body44, !llvm.loop !352

for.body44:                                       ; preds = %for.cond41, %for.body44.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body44.lr.ph ], [ %indvars.iv.next, %for.cond41 ]
  %stack_peak = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %19, i64 %indvars.iv, i32 4
  %21 = load i64, i64* %stack_peak, align 8, !tbaa !353
  %tobool45.not = icmp eq i64 %21, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool45.not, label %for.cond41, label %for.cond53.preheader

for.cond53.preheader:                             ; preds = %for.body44, %lor.end, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit
  %num_funcs54 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 9
  %22 = load i32, i32* %num_funcs54, align 8, !tbaa !350
  %cmp55621 = icmp sgt i32 %22, 0
  br i1 %cmp55621, label %for.body57.lr.ph, label %cleanup181

for.body57.lr.ph:                                 ; preds = %for.cond53.preheader
  %funcs59 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 7
  br label %for.body57

for.body57:                                       ; preds = %cleanup172, %for.body57.lr.ph
  %indvars.iv630 = phi i64 [ 0, %for.body57.lr.ph ], [ %indvars.iv.next631, %cleanup172 ]
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358, label %if.then.i356

if.then.i356:                                     ; preds = %for.body57
  store i8 0, i8* %call.i, align 1, !tbaa !18
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358: ; preds = %if.then.i356, %for.body57
  %23 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %funcs59, align 8, !tbaa !351
  %add.ptr61 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630
  %cmp62 = icmp eq i64 %indvars.iv630, 0
  br i1 %cmp62, label %land.lhs.true, label %if.end66

land.lhs.true:                                    ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358
  %time63 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr61, i64 0, i32 0
  %24 = load i64, i64* %time63, align 8, !tbaa !355
  %cmp64 = icmp eq i64 %24, 0
  br i1 %cmp64, label %cleanup172, label %if.end66

if.end66:                                         ; preds = %land.lhs.true, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5clearEv.exit358
  %call.i361 = tail call i8* @halide_string_to_string(i8* %call.i, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.175, i64 0, i64 0)) #14
  %name68 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 7
  %25 = load i8*, i8** %name68, align 8, !tbaa !356
  %call.i364 = tail call i8* @halide_string_to_string(i8* %call.i361, i8* %sstr.sroa.125.0, i8* %25) #14
  %call.i367 = tail call i8* @halide_string_to_string(i8* %call.i364, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.176, i64 0, i64 0)) #14
  %sub.ptr.lhs.cast.i591 = ptrtoint i8* %call.i367 to i64
  %sub.ptr.sub.i592 = sub i64 %sub.ptr.lhs.cast.i591, %sub.ptr.rhs.cast.i.i348
  %cmp73593 = icmp ult i64 %sub.ptr.sub.i592, 25
  br i1 %cmp73593, label %while.body, label %while.end

while.body:                                       ; preds = %if.end66, %while.body
  %sstr.sroa.19.3594 = phi i8* [ %call.i384, %while.body ], [ %call.i367, %if.end66 ]
  %call.i384 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.3594, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #14
  %sub.ptr.lhs.cast.i = ptrtoint i8* %call.i384 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i.i348
  %cmp73 = icmp ult i64 %sub.ptr.sub.i, 25
  br i1 %cmp73, label %while.body, label %while.end, !llvm.loop !357

while.end:                                        ; preds = %while.body, %if.end66
  %sstr.sroa.19.3.lcssa = phi i8* [ %call.i367, %if.end66 ], [ %call.i384, %while.body ]
  %time75 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr61, i64 0, i32 0
  %26 = load i64, i64* %time75, align 8, !tbaa !355
  %conv76 = uitofp i64 %26 to float
  %27 = load i32, i32* %runs, align 8, !tbaa !342
  %conv78 = sitofp i32 %27 to float
  %mul = fmul float %conv78, 1.000000e+06
  %div79 = fdiv float %conv76, %mul
  %conv.i387 = fpext float %div79 to double
  %call.i388 = tail call i8* @halide_double_to_string(i8* %sstr.sroa.19.3.lcssa, i8* %sstr.sroa.125.0, double %conv.i387, i32 0) #14
  %tobool.not.i390 = icmp eq i8* %call.i388, null
  br i1 %tobool.not.i390, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit, label %if.then.i393

if.then.i393:                                     ; preds = %while.end
  %add.ptr.i391 = getelementptr inbounds i8, i8* %call.i388, i64 -3
  %cmp.i = icmp ult i8* %add.ptr.i391, %call.i
  %spec.store.select.i = select i1 %cmp.i, i8* %call.i, i8* %add.ptr.i391
  store i8 0, i8* %spec.store.select.i, align 1, !tbaa !18
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit: ; preds = %if.then.i393, %while.end
  %sstr.sroa.19.4 = phi i8* [ null, %while.end ], [ %spec.store.select.i, %if.then.i393 ]
  %call.i399 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.4, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21.178, i64 0, i64 0)) #14
  %sub.ptr.lhs.cast.i400596 = ptrtoint i8* %call.i399 to i64
  %sub.ptr.sub.i402597 = sub i64 %sub.ptr.lhs.cast.i400596, %sub.ptr.rhs.cast.i.i348
  %cmp85598 = icmp ult i64 %sub.ptr.sub.i402597, 35
  br i1 %cmp85598, label %while.body86, label %while.end88

while.body86:                                     ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit, %while.body86
  %sstr.sroa.19.5599 = phi i8* [ %call.i408, %while.body86 ], [ %call.i399, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit ]
  %call.i408 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.5599, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #14
  %sub.ptr.lhs.cast.i400 = ptrtoint i8* %call.i408 to i64
  %sub.ptr.sub.i402 = sub i64 %sub.ptr.lhs.cast.i400, %sub.ptr.rhs.cast.i.i348
  %cmp85 = icmp ult i64 %sub.ptr.sub.i402, 35
  br i1 %cmp85, label %while.body86, label %while.end88, !llvm.loop !358

while.end88:                                      ; preds = %while.body86, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit
  %sstr.sroa.19.5.lcssa = phi i8* [ %call.i399, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit ], [ %call.i408, %while.body86 ]
  %28 = load i64, i64* %time, align 8, !tbaa !340
  %cmp90.not = icmp eq i64 %28, 0
  br i1 %cmp90.not, label %if.end97, label %if.then91

if.then91:                                        ; preds = %while.end88
  %29 = load i64, i64* %time75, align 8, !tbaa !355
  %mul93 = mul i64 %29, 100
  %div95 = udiv i64 %mul93, %28
  br label %if.end97

if.end97:                                         ; preds = %if.then91, %while.end88
  %percent.0 = phi i64 [ %div95, %if.then91 ], [ 0, %while.end88 ]
  %call.i411 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.5.lcssa, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22.179, i64 0, i64 0)) #14
  %sext = shl i64 %percent.0, 32
  %conv.i414 = ashr exact i64 %sext, 32
  %call.i415 = tail call i8* @halide_int64_to_string(i8* %call.i411, i8* %sstr.sroa.125.0, i64 %conv.i414, i32 1) #14
  %call.i418 = tail call i8* @halide_string_to_string(i8* %call.i415, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.180, i64 0, i64 0)) #14
  %sub.ptr.lhs.cast.i419601 = ptrtoint i8* %call.i418 to i64
  %sub.ptr.sub.i421602 = sub i64 %sub.ptr.lhs.cast.i419601, %sub.ptr.rhs.cast.i.i348
  %cmp104603 = icmp ult i64 %sub.ptr.sub.i421602, 43
  br i1 %cmp104603, label %while.body105, label %while.end107

while.body105:                                    ; preds = %if.end97, %while.body105
  %sstr.sroa.19.6604 = phi i8* [ %call.i427, %while.body105 ], [ %call.i418, %if.end97 ]
  %call.i427 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.6604, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #14
  %sub.ptr.lhs.cast.i419 = ptrtoint i8* %call.i427 to i64
  %sub.ptr.sub.i421 = sub i64 %sub.ptr.lhs.cast.i419, %sub.ptr.rhs.cast.i.i348
  %cmp104 = icmp ult i64 %sub.ptr.sub.i421, 43
  br i1 %cmp104, label %while.body105, label %while.end107, !llvm.loop !359

while.end107:                                     ; preds = %while.body105, %if.end97
  %sstr.sroa.19.6.lcssa = phi i8* [ %call.i418, %if.end97 ], [ %call.i427, %while.body105 ]
  br i1 %10, label %if.end127, label %if.then109

if.then109:                                       ; preds = %while.end107
  %active_threads_numerator111 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 5
  %30 = load i64, i64* %active_threads_numerator111, align 8, !tbaa !360
  %conv112 = uitofp i64 %30 to double
  %active_threads_denominator113 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 6
  %31 = load i64, i64* %active_threads_denominator113, align 8, !tbaa !361
  %conv114 = uitofp i64 %31 to double
  %add115 = fadd double %conv114, 1.000000e-10
  %div116 = fdiv double %conv112, %add115
  %conv117 = fptrunc double %div116 to float
  %call.i430 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.6.lcssa, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24.181, i64 0, i64 0)) #14
  %conv.i433 = fpext float %conv117 to double
  %call.i434 = tail call i8* @halide_double_to_string(i8* %call.i430, i8* %sstr.sroa.125.0, double %conv.i433, i32 0) #14
  %tobool.not.i436 = icmp eq i8* %call.i434, null
  br i1 %tobool.not.i436, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442, label %if.then.i441

if.then.i441:                                     ; preds = %if.then109
  %add.ptr.i437 = getelementptr inbounds i8, i8* %call.i434, i64 -3
  %cmp.i439 = icmp ult i8* %add.ptr.i437, %call.i
  %spec.store.select.i440 = select i1 %cmp.i439, i8* %call.i, i8* %add.ptr.i437
  store i8 0, i8* %spec.store.select.i440, align 1, !tbaa !18
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442: ; preds = %if.then.i441, %if.then109
  %sstr.sroa.19.7 = phi i8* [ null, %if.then109 ], [ %spec.store.select.i440, %if.then.i441 ]
  %sub.ptr.lhs.cast.i447606 = ptrtoint i8* %sstr.sroa.19.7 to i64
  %sub.ptr.sub.i449607 = sub i64 %sub.ptr.lhs.cast.i447606, %sub.ptr.rhs.cast.i.i348
  %cmp123608 = icmp ult i64 %sub.ptr.sub.i449607, 58
  br i1 %cmp123608, label %while.body124, label %if.end127

while.body124:                                    ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442, %while.body124
  %sstr.sroa.19.8609 = phi i8* [ %call.i455, %while.body124 ], [ %sstr.sroa.19.7, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442 ]
  %call.i455 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.8609, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #14
  %sub.ptr.lhs.cast.i447 = ptrtoint i8* %call.i455 to i64
  %sub.ptr.sub.i449 = sub i64 %sub.ptr.lhs.cast.i447, %sub.ptr.rhs.cast.i.i348
  %cmp123 = icmp ult i64 %sub.ptr.sub.i449, 58
  br i1 %cmp123, label %while.body124, label %if.end127, !llvm.loop !362

if.end127:                                        ; preds = %while.body124, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442, %while.end107
  %sstr.sroa.19.9 = phi i8* [ %sstr.sroa.19.6.lcssa, %while.end107 ], [ %sstr.sroa.19.7, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442 ], [ %call.i455, %while.body124 ]
  %cursor.0 = phi i64 [ 58, %while.end107 ], [ 73, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE5eraseEi.exit442 ], [ 73, %while.body124 ]
  %memory_peak128 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 2
  %32 = load i64, i64* %memory_peak128, align 8, !tbaa !363
  %tobool129.not = icmp eq i64 %32, 0
  br i1 %tobool129.not, label %if.end162, label %if.then130

if.then130:                                       ; preds = %if.end127
  %call.i458 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.9, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25.182, i64 0, i64 0)) #14
  %33 = load i64, i64* %memory_peak128, align 8, !tbaa !363
  %call.i461 = tail call i8* @halide_uint64_to_string(i8* %call.i458, i8* %sstr.sroa.125.0, i64 %33, i32 1) #14
  %sub.ptr.lhs.cast.i462611 = ptrtoint i8* %call.i461 to i64
  %sub.ptr.sub.i464612 = sub i64 %sub.ptr.lhs.cast.i462611, %sub.ptr.rhs.cast.i.i348
  %cmp137613 = icmp ult i64 %sub.ptr.sub.i464612, %cursor.0
  br i1 %cmp137613, label %while.body138, label %while.end140

while.body138:                                    ; preds = %if.then130, %while.body138
  %sstr.sroa.19.10614 = phi i8* [ %call.i470, %while.body138 ], [ %call.i461, %if.then130 ]
  %call.i470 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.10614, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #14
  %sub.ptr.lhs.cast.i462 = ptrtoint i8* %call.i470 to i64
  %sub.ptr.sub.i464 = sub i64 %sub.ptr.lhs.cast.i462, %sub.ptr.rhs.cast.i.i348
  %cmp137 = icmp ult i64 %sub.ptr.sub.i464, %cursor.0
  br i1 %cmp137, label %while.body138, label %while.end140, !llvm.loop !364

while.end140:                                     ; preds = %while.body138, %if.then130
  %sstr.sroa.19.10.lcssa = phi i8* [ %call.i461, %if.then130 ], [ %call.i470, %while.body138 ]
  %call.i473 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.10.lcssa, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.183, i64 0, i64 0)) #14
  %num_allocs142 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 8
  %34 = load i32, i32* %num_allocs142, align 8, !tbaa !365
  %conv.i476 = sext i32 %34 to i64
  %call.i477 = tail call i8* @halide_int64_to_string(i8* %call.i473, i8* %sstr.sroa.125.0, i64 %conv.i476, i32 1) #14
  %add144 = add nuw nsw i64 %cursor.0, 15
  %sub.ptr.lhs.cast.i478616 = ptrtoint i8* %call.i477 to i64
  %sub.ptr.sub.i480617 = sub i64 %sub.ptr.lhs.cast.i478616, %sub.ptr.rhs.cast.i.i348
  %cmp147618 = icmp ult i64 %sub.ptr.sub.i480617, %add144
  br i1 %cmp147618, label %while.body148, label %while.end150

while.body148:                                    ; preds = %while.end140, %while.body148
  %sstr.sroa.19.11619 = phi i8* [ %call.i467, %while.body148 ], [ %call.i477, %while.end140 ]
  %call.i467 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.11619, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.177, i64 0, i64 0)) #14
  %sub.ptr.lhs.cast.i478 = ptrtoint i8* %call.i467 to i64
  %sub.ptr.sub.i480 = sub i64 %sub.ptr.lhs.cast.i478, %sub.ptr.rhs.cast.i.i348
  %cmp147 = icmp ult i64 %sub.ptr.sub.i480, %add144
  br i1 %cmp147, label %while.body148, label %while.end150, !llvm.loop !366

while.end150:                                     ; preds = %while.body148, %while.end140
  %sstr.sroa.19.11.lcssa = phi i8* [ %call.i477, %while.end140 ], [ %call.i467, %while.body148 ]
  %35 = load i32, i32* %num_allocs142, align 8, !tbaa !365
  %cmp152.not = icmp eq i32 %35, 0
  br i1 %cmp152.not, label %if.end159, label %if.then153

if.then153:                                       ; preds = %while.end150
  %memory_total154 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 3
  %36 = load i64, i64* %memory_total154, align 8, !tbaa !367
  %conv156 = sext i32 %35 to i64
  %div157 = udiv i64 %36, %conv156
  br label %if.end159

if.end159:                                        ; preds = %if.then153, %while.end150
  %alloc_avg.0 = phi i64 [ %div157, %if.then153 ], [ 0, %while.end150 ]
  %call.i452 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.11.lcssa, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27.184, i64 0, i64 0)) #14
  %sext586 = shl i64 %alloc_avg.0, 32
  %conv.i445 = ashr exact i64 %sext586, 32
  %call.i446 = tail call i8* @halide_int64_to_string(i8* %call.i452, i8* %sstr.sroa.125.0, i64 %conv.i445, i32 1) #14
  br label %if.end162

if.end162:                                        ; preds = %if.end159, %if.end127
  %sstr.sroa.19.12 = phi i8* [ %sstr.sroa.19.9, %if.end127 ], [ %call.i446, %if.end159 ]
  %stack_peak163 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %23, i64 %indvars.iv630, i32 4
  %37 = load i64, i64* %stack_peak163, align 8, !tbaa !353
  %cmp164.not = icmp eq i64 %37, 0
  br i1 %cmp164.not, label %if.end169, label %if.then165

if.then165:                                       ; preds = %if.end162
  %call.i424 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.12, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28.185, i64 0, i64 0)) #14
  %38 = load i64, i64* %stack_peak163, align 8, !tbaa !353
  %call.i405 = tail call i8* @halide_uint64_to_string(i8* %call.i424, i8* %sstr.sroa.125.0, i64 %38, i32 1) #14
  br label %if.end169

if.end169:                                        ; preds = %if.then165, %if.end162
  %sstr.sroa.19.13 = phi i8* [ %sstr.sroa.19.12, %if.end162 ], [ %call.i405, %if.then165 ]
  %call.i396 = tail call i8* @halide_string_to_string(i8* %sstr.sroa.19.13, i8* %sstr.sroa.125.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.164, i64 0, i64 0)) #14
  br i1 %tobool.not.i, label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381, label %if.then.i379

if.then.i379:                                     ; preds = %if.end169
  %sub.ptr.lhs.cast.i.i374 = ptrtoint i8* %call.i396 to i64
  %add.i.i377 = add i64 %sub.ptr.sub.i.i349, %sub.ptr.lhs.cast.i.i374
  %call.i.i378 = tail call i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* nonnull %call.i, i64 %add.i.i377) #14
  br label %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381

_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381: ; preds = %if.then.i379, %if.end169
  %retval.0.i380 = phi i8* [ %call.i, %if.then.i379 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29.163, i64 0, i64 0), %if.end169 ]
  tail call void @halide_print(i8* %user_context, i8* nonnull %retval.0.i380) #14
  br label %cleanup172

cleanup172:                                       ; preds = %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381, %land.lhs.true
  %sstr.sroa.19.14 = phi i8* [ %call.i, %land.lhs.true ], [ %call.i396, %_ZN6Halide7Runtime8Internal12_GLOBAL__N_17PrinterILNS1_11PrinterTypeE2ELy1024EE3strEv.exit381 ]
  %indvars.iv.next631 = add nuw nsw i64 %indvars.iv630, 1
  %39 = load i32, i32* %num_funcs54, align 8, !tbaa !350
  %40 = sext i32 %39 to i64
  %cmp55 = icmp slt i64 %indvars.iv.next631, %40
  br i1 %cmp55, label %for.body57, label %cleanup181, !llvm.loop !368

cleanup181:                                       ; preds = %for.cond41, %cleanup172, %for.cond53.preheader, %for.cond41.preheader, %for.body
  %sstr.sroa.19.15 = phi i8* [ %sstr.sroa.19.0626, %for.body ], [ %call.i344, %for.cond53.preheader ], [ %call.i344, %for.cond41.preheader ], [ %sstr.sroa.19.14, %cleanup172 ], [ %call.i344, %for.cond41 ]
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0627, i64 0, i32 8
  %41 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  %p.0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %41, align 8, !tbaa !14
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %p.0, null
  br i1 %tobool.not, label %for.cond.cleanup, label %for.body, !llvm.loop !369
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_reset_unlocked(%struct.halide_profiler_state* %s) local_unnamed_addr #0 {
entry:
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 5
  %0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !370
  %tobool.not9 = icmp eq %struct.halide_profiler_pipeline_stats* %0, null
  br i1 %tobool.not9, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %1 = phi %struct.halide_profiler_pipeline_stats* [ %7, %while.body ], [ %0, %entry ]
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %1, i64 0, i32 8
  %2 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  %3 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %2, align 8, !tbaa !371
  store %struct.halide_profiler_pipeline_stats* %3, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !370
  %funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %1, i64 0, i32 7
  %4 = bitcast %struct.halide_profiler_func_stats** %funcs to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !351
  tail call void @free(i8* %5) #14
  %6 = bitcast %struct.halide_profiler_pipeline_stats* %1 to i8*
  tail call void @free(i8* nonnull %6) #14
  %7 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !370
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %7, null
  br i1 %tobool.not, label %while.end, label %while.body, !llvm.loop !372

while.end:                                        ; preds = %while.body, %entry
  %first_free_id = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 2
  store i32 0, i32* %first_free_id, align 4, !tbaa !373
  ret void
}

; Function Attrs: nounwind mustprogress
define linkonce %struct.halide_profiler_pipeline_stats* @_ZN6Halide7Runtime8Internal23find_or_create_pipelineEPKciPKy(i8* %pipeline_name, i32 %num_funcs, i64* %func_names) local_unnamed_addr #0 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #15
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 5
  %p.0121 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !14
  %tobool.not122 = icmp eq %struct.halide_profiler_pipeline_stats* %p.0121, null
  br i1 %tobool.not122, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %p.0123 = phi %struct.halide_profiler_pipeline_stats* [ %p.0, %for.inc ], [ %p.0121, %entry ]
  %name = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0123, i64 0, i32 6
  %0 = load i8*, i8** %name, align 8, !tbaa !345
  %cmp = icmp eq i8* %0, %pipeline_name
  br i1 %cmp, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %num_funcs1 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0123, i64 0, i32 9
  %1 = load i32, i32* %num_funcs1, align 8, !tbaa !350
  %cmp2 = icmp eq i32 %1, %num_funcs
  br i1 %cmp2, label %cleanup62, label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.0123, i64 0, i32 8
  %2 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  %p.0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %2, align 8, !tbaa !14
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %p.0, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !374

for.end:                                          ; preds = %for.inc, %entry
  %call4 = tail call i8* @malloc(i64 96) #14
  %3 = bitcast i8* %call4 to %struct.halide_profiler_pipeline_stats*
  %tobool5.not = icmp eq i8* %call4, null
  br i1 %tobool5.not, label %cleanup62, label %if.end7

if.end7:                                          ; preds = %for.end
  %4 = bitcast %struct.halide_profiler_pipeline_stats** %pipelines to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !370
  %next9 = getelementptr inbounds i8, i8* %call4, i64 64
  %6 = bitcast i8* %next9 to i8**
  store i8* %5, i8** %6, align 8, !tbaa !371
  %name10 = getelementptr inbounds i8, i8* %call4, i64 48
  %7 = bitcast i8* %name10 to i8**
  store i8* %pipeline_name, i8** %7, align 8, !tbaa !345
  %first_free_id = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 2
  %8 = load i32, i32* %first_free_id, align 4, !tbaa !373
  %first_func_id = getelementptr inbounds i8, i8* %call4, i64 76
  %9 = bitcast i8* %first_func_id to i32*
  store i32 %8, i32* %9, align 4, !tbaa !375
  %num_funcs11 = getelementptr inbounds i8, i8* %call4, i64 72
  %10 = bitcast i8* %num_funcs11 to i32*
  store i32 %num_funcs, i32* %10, align 8, !tbaa !350
  %runs = getelementptr inbounds i8, i8* %call4, i64 80
  %11 = bitcast i8* %runs to <2 x i32>*
  store <2 x i32> zeroinitializer, <2 x i32>* %11, align 8, !tbaa !41
  %12 = bitcast i8* %call4 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %12, align 8, !tbaa !22
  %memory_peak = getelementptr inbounds i8, i8* %call4, i64 16
  %13 = bitcast i8* %memory_peak to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %13, align 8, !tbaa !22
  %num_allocs = getelementptr inbounds i8, i8* %call4, i64 88
  %14 = bitcast i8* %num_allocs to i32*
  store i32 0, i32* %14, align 8, !tbaa !347
  %active_threads_numerator = getelementptr inbounds i8, i8* %call4, i64 32
  %15 = bitcast i8* %active_threads_numerator to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %15, align 8, !tbaa !22
  %conv = sext i32 %num_funcs to i64
  %mul = mul nsw i64 %conv, 72
  %call12 = tail call i8* @malloc(i64 %mul) #14
  %funcs = getelementptr inbounds i8, i8* %call4, i64 56
  %16 = bitcast i8* %funcs to i8**
  store i8* %call12, i8** %16, align 8, !tbaa !351
  %tobool14.not = icmp eq i8* %call12, null
  %17 = bitcast i8* %call12 to %struct.halide_profiler_func_stats*
  br i1 %tobool14.not, label %if.then15, label %for.cond17.preheader

for.cond17.preheader:                             ; preds = %if.end7
  %cmp18119 = icmp sgt i32 %num_funcs, 0
  br i1 %cmp18119, label %for.body20.lr.ph, label %for.cond.cleanup19

for.body20.lr.ph:                                 ; preds = %for.cond17.preheader
  %wide.trip.count = zext i32 %num_funcs to i64
  br label %for.body20

if.then15:                                        ; preds = %if.end7
  tail call void @free(i8* nonnull %call4) #14
  br label %cleanup62

for.cond.cleanup19:                               ; preds = %for.body20, %for.cond17.preheader
  %18 = load i32, i32* %first_free_id, align 4, !tbaa !373
  %add = add nsw i32 %18, %num_funcs
  store i32 %add, i32* %first_free_id, align 4, !tbaa !373
  store i8* %call4, i8** %4, align 8, !tbaa !370
  br label %cleanup62

for.body20:                                       ; preds = %for.body20, %for.body20.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body20.lr.ph ], [ %indvars.iv.next, %for.body20 ]
  %time22 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv, i32 0
  store i64 0, i64* %time22, align 8, !tbaa !355
  %arrayidx24 = getelementptr inbounds i64, i64* %func_names, i64 %indvars.iv
  %19 = load i64, i64* %arrayidx24, align 8, !tbaa !22
  %20 = inttoptr i64 %19 to i8*
  %name28 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv, i32 7
  store i8* %20, i8** %name28, align 8, !tbaa !356
  %memory_current32 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv, i32 1
  %21 = bitcast i64* %memory_current32 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %21, align 8, !tbaa !22
  %memory_total40 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv, i32 3
  %num_allocs44 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv, i32 8
  store i32 0, i32* %num_allocs44, align 8, !tbaa !365
  %22 = bitcast i64* %memory_total40 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %22, align 8, !tbaa !22
  %active_threads_numerator51 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %17, i64 %indvars.iv, i32 5
  %23 = bitcast i64* %active_threads_numerator51 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %23, align 8, !tbaa !22
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup19, label %for.body20, !llvm.loop !376

cleanup62:                                        ; preds = %land.lhs.true, %for.cond.cleanup19, %if.then15, %for.end
  %retval.2 = phi %struct.halide_profiler_pipeline_stats* [ %3, %for.cond.cleanup19 ], [ null, %if.then15 ], [ null, %for.end ], [ %p.0123, %land.lhs.true ]
  ret %struct.halide_profiler_pipeline_stats* %retval.2
}

; Function Attrs: nounwind mustprogress
define linkonce void @_ZN6Halide7Runtime8Internal9bill_funcEP21halide_profiler_stateiyi(%struct.halide_profiler_state* %s, i32 %func_id, i64 %time, i32 %active_threads) local_unnamed_addr #0 {
entry:
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 5
  %p.055 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !14
  %tobool.not56 = icmp eq %struct.halide_profiler_pipeline_stats* %p.055, null
  br i1 %tobool.not56, label %cleanup25, label %for.body

for.body:                                         ; preds = %entry, %if.end23
  %p.058 = phi %struct.halide_profiler_pipeline_stats* [ %p.0, %if.end23 ], [ %p.055, %entry ]
  %p_prev.057 = phi %struct.halide_profiler_pipeline_stats* [ %p.058, %if.end23 ], [ null, %entry ]
  %first_func_id = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 10
  %0 = load i32, i32* %first_func_id, align 4, !tbaa !375
  %cmp.not = icmp sgt i32 %0, %func_id
  br i1 %cmp.not, label %if.end23, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %num_funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 9
  %1 = load i32, i32* %num_funcs, align 8, !tbaa !350
  %add = add nsw i32 %1, %0
  %cmp2 = icmp sgt i32 %add, %func_id
  br i1 %cmp2, label %if.then, label %if.end23

if.then:                                          ; preds = %land.lhs.true
  %tobool3.not = icmp eq %struct.halide_profiler_pipeline_stats* %p_prev.057, null
  br i1 %tobool3.not, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.then
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 8
  %2 = load i8*, i8** %next, align 8, !tbaa !371
  %next5 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p_prev.057, i64 0, i32 8
  store i8* %2, i8** %next5, align 8, !tbaa !371
  %3 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  store %struct.halide_profiler_pipeline_stats* %p.055, %struct.halide_profiler_pipeline_stats** %3, align 8, !tbaa !371
  store %struct.halide_profiler_pipeline_stats* %p.058, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !370
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  %funcs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 7
  %4 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %funcs, align 8, !tbaa !351
  %idx.ext = sext i32 %func_id to i64
  %add.ptr = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %4, i64 %idx.ext
  %idx.ext10 = sext i32 %0 to i64
  %idx.neg = sub nsw i64 0, %idx.ext10
  %add.ptr11 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr, i64 %idx.neg
  %time12 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr11, i64 0, i32 0
  %5 = load i64, i64* %time12, align 8, !tbaa !355
  %add13 = add i64 %5, %time
  store i64 %add13, i64* %time12, align 8, !tbaa !355
  %conv = sext i32 %active_threads to i64
  %active_threads_numerator = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr11, i64 0, i32 5
  %6 = load i64, i64* %active_threads_numerator, align 8, !tbaa !360
  %add14 = add i64 %6, %conv
  store i64 %add14, i64* %active_threads_numerator, align 8, !tbaa !360
  %active_threads_denominator = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %add.ptr11, i64 0, i32 6
  %7 = load i64, i64* %active_threads_denominator, align 8, !tbaa !361
  %add15 = add i64 %7, 1
  store i64 %add15, i64* %active_threads_denominator, align 8, !tbaa !361
  %time16 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 0
  %8 = load i64, i64* %time16, align 8, !tbaa !340
  %add17 = add i64 %8, %time
  store i64 %add17, i64* %time16, align 8, !tbaa !340
  %samples = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 12
  %9 = load i32, i32* %samples, align 4, !tbaa !346
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %samples, align 4, !tbaa !346
  %active_threads_numerator19 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 4
  %10 = load i64, i64* %active_threads_numerator19, align 8, !tbaa !343
  %add20 = add i64 %10, %conv
  store i64 %add20, i64* %active_threads_numerator19, align 8, !tbaa !343
  %active_threads_denominator21 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 5
  %11 = load i64, i64* %active_threads_denominator21, align 8, !tbaa !344
  %add22 = add i64 %11, 1
  store i64 %add22, i64* %active_threads_denominator21, align 8, !tbaa !344
  ret void

if.end23:                                         ; preds = %land.lhs.true, %for.body
  %next24 = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.058, i64 0, i32 8
  %12 = bitcast i8** %next24 to %struct.halide_profiler_pipeline_stats**
  %p.0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %12, align 8, !tbaa !14
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %p.0, null
  br i1 %tobool.not, label %cleanup25, label %for.body, !llvm.loop !377

cleanup25:                                        ; preds = %if.end23, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_profiler_sample(%struct.halide_profiler_state* %s, i64* %prev_t) local_unnamed_addr #0 {
entry:
  %func = alloca i32, align 4
  %active_threads = alloca i32, align 4
  %0 = bitcast i32* %func to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #11
  %1 = bitcast i32* %active_threads to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #11
  %get_remote_profiler_state = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 6
  %2 = load void (i32*, i32*)*, void (i32*, i32*)** %get_remote_profiler_state, align 8, !tbaa !378
  %tobool.not = icmp eq void (i32*, i32*)* %2, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void %2(i32* nonnull %func, i32* nonnull %active_threads) #14
  br label %if.end

if.else:                                          ; preds = %entry
  %current_func = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 3
  %3 = load i32, i32* %current_func, align 8, !tbaa !339
  store i32 %3, i32* %func, align 4, !tbaa !41
  %active_threads2 = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 4
  %4 = load i32, i32* %active_threads2, align 4, !tbaa !379
  store i32 %4, i32* %active_threads, align 4, !tbaa !41
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call = call i64 @halide_current_time_ns(i8* null) #14
  %5 = load i32, i32* %func, align 4, !tbaa !41
  %cmp = icmp eq i32 %5, -2
  br i1 %cmp, label %cleanup, label %if.else4

if.else4:                                         ; preds = %if.end
  %cmp5 = icmp sgt i32 %5, -1
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.else4
  %6 = load i64, i64* %prev_t, align 8, !tbaa !22
  %sub = sub i64 %call, %6
  %7 = load i32, i32* %active_threads, align 4, !tbaa !41
  call void @_ZN6Halide7Runtime8Internal9bill_funcEP21halide_profiler_stateiyi(%struct.halide_profiler_state* nonnull %s, i32 %5, i64 %sub, i32 %7) #15
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.else4
  store i64 %call, i64* %prev_t, align 8, !tbaa !22
  %sleep_time = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %s, i64 0, i32 1
  %8 = load i32, i32* %sleep_time, align 8, !tbaa !380
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.end
  %retval.0 = phi i32 [ %8, %if.end8 ], [ -1, %if.end ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #11
  ret i32 %retval.0
}

; Function Attrs: nounwind
define linkonce void @_ZN6Halide7Runtime8Internal24sampling_profiler_threadEPv(i8* %0) #4 {
entry:
  %t = alloca i64, align 8
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #15
  %lock = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock) #14
  %current_func = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 3
  %1 = load i32, i32* %current_func, align 8, !tbaa !339
  %cmp.not23 = icmp eq i32 %1, -2
  br i1 %cmp.not23, label %while.end8, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %2 = bitcast i64* %t to i8*
  br label %while.body

while.body:                                       ; preds = %while.end, %while.body.lr.ph
  %call1 = call i64 @halide_current_time_ns(i8* null) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #11
  store i64 %call1, i64* %t, align 8, !tbaa !22
  %call420 = call i32 @halide_profiler_sample(%struct.halide_profiler_state* nonnull %call, i64* nonnull %t) #15
  %cmp521 = icmp slt i32 %call420, 0
  br i1 %cmp521, label %while.end, label %if.end

if.end:                                           ; preds = %while.body, %if.end
  %call422 = phi i32 [ %call4, %if.end ], [ %call420, %while.body ]
  call void @halide_mutex_unlock(%struct.halide_mutex* %lock) #14
  call void @halide_sleep_ms(i8* null, i32 %call422) #14
  call void @halide_mutex_lock(%struct.halide_mutex* %lock) #14
  %call4 = call i32 @halide_profiler_sample(%struct.halide_profiler_state* %call, i64* nonnull %t) #15
  %cmp5 = icmp slt i32 %call4, 0
  br i1 %cmp5, label %while.end, label %if.end

while.end:                                        ; preds = %if.end, %while.body
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #11
  %3 = load i32, i32* %current_func, align 8, !tbaa !339
  %cmp.not = icmp eq i32 %3, -2
  br i1 %cmp.not, label %while.end8, label %while.body, !llvm.loop !381

while.end8:                                       ; preds = %while.end, %entry
  call void @halide_mutex_unlock(%struct.halide_mutex* nonnull %lock) #14
  ret void
}

; Function Attrs: nounwind
define weak %struct.halide_profiler_pipeline_stats* @halide_profiler_get_pipeline_state(i8* %pipeline_name) local_unnamed_addr #4 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #15
  %lock.i = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock.i) #14
  %pipelines = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 5
  %p.013 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %pipelines, align 8, !tbaa !14
  %tobool.not14 = icmp eq %struct.halide_profiler_pipeline_stats* %p.013, null
  br i1 %tobool.not14, label %cleanup, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %p.015 = phi %struct.halide_profiler_pipeline_stats* [ %p.0, %for.inc ], [ %p.013, %entry ]
  %name = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.015, i64 0, i32 6
  %0 = load i8*, i8** %name, align 8, !tbaa !345
  %cmp = icmp eq i8* %0, %pipeline_name
  br i1 %cmp, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %p.015, i64 0, i32 8
  %1 = bitcast i8** %next to %struct.halide_profiler_pipeline_stats**
  %p.0 = load %struct.halide_profiler_pipeline_stats*, %struct.halide_profiler_pipeline_stats** %1, align 8, !tbaa !14
  %tobool.not = icmp eq %struct.halide_profiler_pipeline_stats* %p.0, null
  br i1 %tobool.not, label %cleanup, label %for.body, !llvm.loop !382

cleanup:                                          ; preds = %for.inc, %for.body, %entry
  %p.0.lcssa = phi %struct.halide_profiler_pipeline_stats* [ null, %entry ], [ null, %for.inc ], [ %p.015, %for.body ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* %lock.i) #14
  ret %struct.halide_profiler_pipeline_stats* %p.0.lcssa
}

; Function Attrs: nounwind
define weak i32 @halide_profiler_pipeline_start(i8* %user_context, i8* %pipeline_name, i32 %num_funcs, i64* %func_names) local_unnamed_addr #4 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #15
  %lock.i = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock.i) #14
  %sampling_thread = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 7
  %0 = load %struct.halide_thread*, %struct.halide_thread** %sampling_thread, align 8, !tbaa !337
  %tobool.not = icmp eq %struct.halide_thread* %0, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @halide_start_clock(i8* %user_context) #14
  %call2 = tail call %struct.halide_thread* @halide_spawn_thread(void (i8*)* nonnull @_ZN6Halide7Runtime8Internal24sampling_profiler_threadEPv, i8* null) #14
  store %struct.halide_thread* %call2, %struct.halide_thread** %sampling_thread, align 8, !tbaa !337
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call4 = tail call %struct.halide_profiler_pipeline_stats* @_ZN6Halide7Runtime8Internal23find_or_create_pipelineEPKciPKy(i8* %pipeline_name, i32 %num_funcs, i64* %func_names) #15
  %tobool5.not = icmp eq %struct.halide_profiler_pipeline_stats* %call4, null
  br i1 %tobool5.not, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.end
  %call7 = tail call i32 @halide_error_out_of_memory(i8* %user_context) #14
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %runs = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %call4, i64 0, i32 11
  %1 = load i32, i32* %runs, align 8, !tbaa !342
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %runs, align 8, !tbaa !342
  %first_func_id = getelementptr inbounds %struct.halide_profiler_pipeline_stats, %struct.halide_profiler_pipeline_stats* %call4, i64 0, i32 10
  %2 = load i32, i32* %first_func_id, align 4, !tbaa !375
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.then6
  %retval.0 = phi i32 [ %2, %if.end8 ], [ %call7, %if.then6 ]
  tail call void @halide_mutex_unlock(%struct.halide_mutex* nonnull %lock.i) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_stack_peak_update(i8* %user_context, i8* %pipeline_state, i64* %f_values) local_unnamed_addr #0 {
entry:
  %cmp.not = icmp eq i8* %pipeline_state, null
  br i1 %cmp.not, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.186, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %num_funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 72
  %0 = bitcast i8* %num_funcs to i32*
  %1 = load i32, i32* %0, align 8, !tbaa !350
  %cmp118 = icmp sgt i32 %1, 0
  br i1 %cmp118, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %do.end
  %funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 56
  %2 = bitcast i8* %funcs to %struct.halide_profiler_func_stats**
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc, %do.end
  ret void

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %3 = phi i32 [ %1, %for.body.lr.ph ], [ %9, %for.inc ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds i64, i64* %f_values, i64 %indvars.iv
  %4 = load i64, i64* %arrayidx, align 8, !tbaa !22
  %cmp2.not = icmp eq i64 %4, 0
  br i1 %cmp2.not, label %for.inc, label %if.then3

if.then3:                                         ; preds = %for.body
  %5 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %2, align 8, !tbaa !351
  %stack_peak = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %5, i64 %indvars.iv, i32 4
  %6 = load i64, i64* %stack_peak, align 8, !tbaa !22
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %if.then3
  %old_val.0.i = phi i64 [ %6, %if.then3 ], [ %8, %while.body.i ]
  %cmp.i = icmp ult i64 %old_val.0.i, %4
  br i1 %cmp.i, label %while.body.i, label %for.inc.loopexit

while.body.i:                                     ; preds = %while.cond.i
  %7 = cmpxchg i64* %stack_peak, i64 %old_val.0.i, i64 %4 seq_cst seq_cst
  %8 = extractvalue { i64, i1 } %7, 0
  %cmp1.i = icmp eq i64 %old_val.0.i, %8
  br i1 %cmp1.i, label %for.inc.loopexit, label %while.cond.i, !llvm.loop !383

for.inc.loopexit:                                 ; preds = %while.body.i, %while.cond.i
  %.pre = load i32, i32* %0, align 8, !tbaa !350
  br label %for.inc

for.inc:                                          ; preds = %for.inc.loopexit, %for.body
  %9 = phi i32 [ %.pre, %for.inc.loopexit ], [ %3, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %10 = sext i32 %9 to i64
  %cmp1 = icmp slt i64 %indvars.iv.next, %10
  br i1 %cmp1, label %for.body, label %for.cond.cleanup, !llvm.loop !384
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_memory_allocate(i8* %user_context, i8* %pipeline_state, i32 %func_id, i64 %incr) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq i64 %incr, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp1.not = icmp eq i8* %pipeline_state, null
  br i1 %cmp1.not, label %if.then2, label %do.body4

if.then2:                                         ; preds = %if.end
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.1.187, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.body4

do.body4:                                         ; preds = %if.then2, %if.end
  %cmp5 = icmp sgt i32 %func_id, -1
  br i1 %cmp5, label %do.body10, label %if.then6

if.then6:                                         ; preds = %do.body4
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.2.188, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.body10

do.body10:                                        ; preds = %if.then6, %do.body4
  %num_funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 72
  %0 = bitcast i8* %num_funcs to i32*
  %1 = load i32, i32* %0, align 8, !tbaa !350
  %cmp11 = icmp sgt i32 %1, %func_id
  br i1 %cmp11, label %do.end15, label %if.then12

if.then12:                                        ; preds = %do.body10
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([138 x i8], [138 x i8]* @.str.3.189, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.end15

do.end15:                                         ; preds = %if.then12, %do.body10
  %funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 56
  %2 = bitcast i8* %funcs to %struct.halide_profiler_func_stats**
  %3 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %2, align 8, !tbaa !351
  %idxprom = sext i32 %func_id to i64
  %num_allocs = getelementptr inbounds i8, i8* %pipeline_state, i64 88
  %4 = bitcast i8* %num_allocs to i32*
  %5 = atomicrmw add i32* %4, i32 1 seq_cst
  %memory_total = getelementptr inbounds i8, i8* %pipeline_state, i64 24
  %6 = bitcast i8* %memory_total to i64*
  %7 = atomicrmw add i64* %6, i64 %incr seq_cst
  %memory_current = getelementptr inbounds i8, i8* %pipeline_state, i64 8
  %8 = bitcast i8* %memory_current to i64*
  %9 = atomicrmw add i64* %8, i64 %incr seq_cst
  %10 = add i64 %9, %incr
  %memory_peak = getelementptr inbounds i8, i8* %pipeline_state, i64 16
  %11 = bitcast i8* %memory_peak to i64*
  %12 = load i64, i64* %11, align 8, !tbaa !22
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %do.end15
  %old_val.0.i = phi i64 [ %12, %do.end15 ], [ %14, %while.body.i ]
  %cmp.i = icmp ult i64 %old_val.0.i, %10
  br i1 %cmp.i, label %while.body.i, label %_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit

while.body.i:                                     ; preds = %while.cond.i
  %13 = cmpxchg i64* %11, i64 %old_val.0.i, i64 %10 seq_cst seq_cst
  %14 = extractvalue { i64, i1 } %13, 0
  %cmp1.i = icmp eq i64 %old_val.0.i, %14
  br i1 %cmp1.i, label %_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit, label %while.cond.i, !llvm.loop !383

_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit: ; preds = %while.body.i, %while.cond.i
  %num_allocs16 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 8
  %15 = atomicrmw add i32* %num_allocs16, i32 1 seq_cst
  %memory_total17 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 3
  %16 = atomicrmw add i64* %memory_total17, i64 %incr seq_cst
  %memory_current18 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 1
  %17 = atomicrmw add i64* %memory_current18, i64 %incr seq_cst
  %18 = add i64 %17, %incr
  %memory_peak19 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 2
  %19 = load i64, i64* %memory_peak19, align 8, !tbaa !22
  br label %while.cond.i43

while.cond.i43:                                   ; preds = %while.body.i45, %_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit
  %old_val.0.i41 = phi i64 [ %19, %_ZN12_GLOBAL__N_125sync_compare_max_and_swapIyEEvPT_S1_.exit ], [ %21, %while.body.i45 ]
  %cmp.i42 = icmp ult i64 %old_val.0.i41, %18
  br i1 %cmp.i42, label %while.body.i45, label %return

while.body.i45:                                   ; preds = %while.cond.i43
  %20 = cmpxchg i64* %memory_peak19, i64 %old_val.0.i41, i64 %18 seq_cst seq_cst
  %21 = extractvalue { i64, i1 } %20, 0
  %cmp1.i44 = icmp eq i64 %old_val.0.i41, %21
  br i1 %cmp1.i44, label %return, label %while.cond.i43, !llvm.loop !383

return:                                           ; preds = %while.body.i45, %while.cond.i43, %entry
  ret void
}

; Function Attrs: nounwind mustprogress
define weak void @halide_profiler_memory_free(i8* %user_context, i8* %pipeline_state, i32 %func_id, i64 %decr) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq i64 %decr, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp1.not = icmp eq i8* %pipeline_state, null
  br i1 %cmp1.not, label %if.then2, label %do.body4

if.then2:                                         ; preds = %if.end
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.4.190, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.body4

do.body4:                                         ; preds = %if.then2, %if.end
  %cmp5 = icmp sgt i32 %func_id, -1
  br i1 %cmp5, label %do.body10, label %if.then6

if.then6:                                         ; preds = %do.body4
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.5.191, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.body10

do.body10:                                        ; preds = %if.then6, %do.body4
  %num_funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 72
  %0 = bitcast i8* %num_funcs to i32*
  %1 = load i32, i32* %0, align 8, !tbaa !350
  %cmp11 = icmp sgt i32 %1, %func_id
  br i1 %cmp11, label %do.end15, label %if.then12

if.then12:                                        ; preds = %do.body10
  tail call void @halide_print(i8* %user_context, i8* getelementptr inbounds ([138 x i8], [138 x i8]* @.str.6.192, i64 0, i64 0)) #14
  tail call void @abort() #14
  br label %do.end15

do.end15:                                         ; preds = %if.then12, %do.body10
  %funcs = getelementptr inbounds i8, i8* %pipeline_state, i64 56
  %2 = bitcast i8* %funcs to %struct.halide_profiler_func_stats**
  %3 = load %struct.halide_profiler_func_stats*, %struct.halide_profiler_func_stats** %2, align 8, !tbaa !351
  %idxprom = sext i32 %func_id to i64
  %memory_current = getelementptr inbounds i8, i8* %pipeline_state, i64 8
  %4 = bitcast i8* %memory_current to i64*
  %5 = atomicrmw sub i64* %4, i64 %decr seq_cst
  %memory_current16 = getelementptr inbounds %struct.halide_profiler_func_stats, %struct.halide_profiler_func_stats* %3, i64 %idxprom, i32 1
  %6 = atomicrmw sub i64* %memory_current16, i64 %decr seq_cst
  br label %return

return:                                           ; preds = %do.end15, %entry
  ret void
}

; Function Attrs: nounwind
define weak void @halide_profiler_report(i8* %user_context) local_unnamed_addr #4 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #15
  %lock.i = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock.i) #14
  tail call void @halide_profiler_report_unlocked(i8* %user_context, %struct.halide_profiler_state* %call) #15
  tail call void @halide_mutex_unlock(%struct.halide_mutex* %lock.i) #14
  ret void
}

; Function Attrs: nounwind
define weak void @halide_profiler_reset() local_unnamed_addr #4 {
entry:
  %call = tail call %struct.halide_profiler_state* @halide_profiler_get_state() #15
  %lock.i = getelementptr inbounds %struct.halide_profiler_state, %struct.halide_profiler_state* %call, i64 0, i32 0
  tail call void @halide_mutex_lock(%struct.halide_mutex* %lock.i) #14
  tail call void @halide_profiler_reset_unlocked(%struct.halide_profiler_state* %call) #15
  tail call void @halide_mutex_unlock(%struct.halide_mutex* %lock.i) #14
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_profiler_pipeline_end(i8* %user_context, i8* %state) local_unnamed_addr #2 {
entry:
  %current_func = getelementptr inbounds i8, i8* %state, i64 16
  %0 = bitcast i8* %current_func to i32*
  store i32 -1, i32* %0, align 8, !tbaa !339
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_annotate_memory_is_initialized(i8* %user_context, i8* %ptr, i64 %len) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_check_memory_is_initialized(i8* %user_context, i8* %ptr, i64 %len, i8* %name) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_check_buffer_is_initialized(i8* %user_context, %struct.halide_buffer_t* %b, i8* %buf_name) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 @halide_msan_annotate_buffer_is_initialized(i8* %user_context, %struct.halide_buffer_t* %b) local_unnamed_addr #2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_msan_annotate_buffer_is_initialized_as_destructor(i8* %user_context, i8* %b) local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind
define weak i32 @halide_default_can_use_target_features(i32 %count, i64* %features) #4 {
entry:
  %tmp = alloca %"struct.Halide::Runtime::Internal::CpuFeatures", align 8
  tail call void @halide_mutex_lock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal36halide_cpu_features_initialized_lockE) #14
  %0 = load i8, i8* @_ZN6Halide7Runtime8Internal31halide_cpu_features_initializedE, align 1, !tbaa !19, !range !21
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = bitcast %"struct.Halide::Runtime::Internal::CpuFeatures"* %tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #11
  call void @_ZN6Halide7Runtime8Internal23halide_get_cpu_featuresEv(%"struct.Halide::Runtime::Internal::CpuFeatures"* nonnull sret(%"struct.Halide::Runtime::Internal::CpuFeatures") align 8 %tmp) #14
  %call = call i8* @memcpy(i8* bitcast ([4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE to i8*), i8* nonnull %1, i64 32) #14
  store i8 1, i8* @_ZN6Halide7Runtime8Internal31halide_cpu_features_initializedE, align 1, !tbaa !19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #11
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @halide_mutex_unlock(%struct.halide_mutex* nonnull @_ZN6Halide7Runtime8Internal36halide_cpu_features_initialized_lockE) #14
  %cmp.not = icmp eq i32 %count, 2
  br i1 %cmp.not, label %if.end2, label %if.then1

if.then1:                                         ; preds = %if.end
  call void @halide_error(i8* null, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.197, i64 0, i64 0)) #14
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.end
  %2 = load i64, i64* %features, align 8, !tbaa !22
  %3 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i64 0, i64 0), align 8, !tbaa !22
  %and = and i64 %3, %2
  %cmp6.not = icmp eq i64 %and, 0
  br i1 %cmp6.not, label %for.inc.critedge, label %if.then7

if.then7:                                         ; preds = %if.end2
  %4 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i64 0, i64 2), align 8, !tbaa !22
  %and10 = and i64 %4, %and
  %cmp11.not = icmp eq i64 %and10, %and
  br i1 %cmp11.not, label %for.inc.critedge, label %cleanup15

for.inc.critedge:                                 ; preds = %if.then7, %if.end2
  %arrayidx.1 = getelementptr inbounds i64, i64* %features, i64 1
  %5 = load i64, i64* %arrayidx.1, align 8, !tbaa !22
  %6 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i64 0, i64 1), align 8, !tbaa !22
  %and.1 = and i64 %6, %5
  %cmp6.not.1 = icmp eq i64 %and.1, 0
  br i1 %cmp6.not.1, label %for.inc.critedge.1, label %if.then7.1

cleanup15:                                        ; preds = %for.inc.critedge.1, %if.then7.1, %if.then7
  %cmp3.lcssa = phi i32 [ 0, %if.then7 ], [ 0, %if.then7.1 ], [ 1, %for.inc.critedge.1 ]
  ret i32 %cmp3.lcssa

if.then7.1:                                       ; preds = %for.inc.critedge
  %7 = load i64, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @_ZN6Halide7Runtime8Internal27halide_cpu_features_storageE, i64 0, i64 3), align 8, !tbaa !22
  %and10.1 = and i64 %7, %and.1
  %cmp11.not.1 = icmp eq i64 %and10.1, %and.1
  br i1 %cmp11.not.1, label %for.inc.critedge.1, label %cleanup15

for.inc.critedge.1:                               ; preds = %if.then7.1, %for.inc.critedge
  br label %cleanup15
}

; Function Attrs: nounwind willreturn mustprogress
define weak i32 (i32, i64*)* @halide_set_custom_can_use_target_features(i32 (i32, i64*)* %fn) local_unnamed_addr #2 {
entry:
  %0 = load i32 (i32, i64*)*, i32 (i32, i64*)** @_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE, align 8, !tbaa !14
  store i32 (i32, i64*)* %fn, i32 (i32, i64*)** @_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE, align 8, !tbaa !14
  ret i32 (i32, i64*)* %0
}

; Function Attrs: nounwind mustprogress
define weak i32 @halide_can_use_target_features(i32 %count, i64* %features) local_unnamed_addr #0 {
entry:
  %0 = load i32 (i32, i64*)*, i32 (i32, i64*)** @_ZN6Halide7Runtime8Internal30custom_can_use_target_featuresE, align 8, !tbaa !14
  %call = tail call i32 %0(i32 %count, i64* %features) #14
  ret i32 %call
}

; Function Attrs: nounwind willreturn
define linkonce void @_ZN6Halide7Runtime8Internal23halide_get_cpu_featuresEv(%"struct.Halide::Runtime::Internal::CpuFeatures"* noalias sret(%"struct.Halide::Runtime::Internal::CpuFeatures") align 8 %agg.result) local_unnamed_addr #8 {
entry:
  %arrayidx3.i = getelementptr inbounds %"struct.Halide::Runtime::Internal::CpuFeatures", %"struct.Halide::Runtime::Internal::CpuFeatures"* %agg.result, i64 0, i32 1, i64 0
  %0 = bitcast %"struct.Halide::Runtime::Internal::CpuFeatures"* %agg.result to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %0, align 8, !tbaa !22
  %1 = bitcast i64* %arrayidx3.i to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %1, align 8, !tbaa !22
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_use_jit_module() local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nounwind willreturn mustprogress
define weak void @halide_release_jit_module() local_unnamed_addr #2 {
entry:
  ret void
}

; Function Attrs: nofree nosync nounwind readnone willreturn
declare <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32>, <4 x i32>) #9

; Function Attrs: nofree nosync nounwind readnone willreturn
declare <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32>, <4 x i32>) #9

; Function Attrs: nofree nosync nounwind readnone willreturn
declare <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16>) #9

; Function Attrs: nofree nosync nounwind readnone willreturn
declare <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16>, i32) #9

; Function Attrs: nounwind
define i32 @conv3x3a16(%struct.halide_buffer_t* noalias nocapture readonly %input.buffer, %struct.halide_buffer_t* noalias nocapture readonly %mask.buffer, %struct.halide_buffer_t* noalias nocapture readonly %output.buffer) local_unnamed_addr #10 {
entry:
  %input_bounded.pseudostack_slot = alloca %struct.halide_pseudostack_slot_t, align 8
  %.fca.0.gep = getelementptr inbounds %struct.halide_pseudostack_slot_t, %struct.halide_pseudostack_slot_t* %input_bounded.pseudostack_slot, i64 0, i32 0
  %.fca.1.gep = getelementptr inbounds %struct.halide_pseudostack_slot_t, %struct.halide_pseudostack_slot_t* %input_bounded.pseudostack_slot, i64 0, i32 1
  %.fca.2.gep = getelementptr inbounds %struct.halide_pseudostack_slot_t, %struct.halide_pseudostack_slot_t* %input_bounded.pseudostack_slot, i64 0, i32 2
  %host.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %input.buffer, i64 0, i32 2
  %0 = bitcast %struct.halide_pseudostack_slot_t* %input_bounded.pseudostack_slot to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %1 = load i8*, i8** %host.i, align 8, !tbaa !180
  %dim.i = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %input.buffer, i64 0, i32 6
  %2 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !184
  %min.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %2, i64 0, i32 0
  %3 = load i32, i32* %min.i, align 4, !tbaa !221
  %extent.i = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %2, i64 0, i32 1
  %4 = load i32, i32* %extent.i, align 4, !tbaa !189
  %min.i385 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %2, i64 1, i32 0
  %5 = load i32, i32* %min.i385, align 4, !tbaa !221
  %extent.i387 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %2, i64 1, i32 1
  %6 = load i32, i32* %extent.i387, align 4, !tbaa !189
  %stride.i389 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %2, i64 1, i32 2
  %7 = load i32, i32* %stride.i389, align 4, !tbaa !185
  %host.i390 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %mask.buffer, i64 0, i32 2
  %8 = load i8*, i8** %host.i390, align 8, !tbaa !180
  %dim.i391 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %mask.buffer, i64 0, i32 6
  %9 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i391, align 8, !tbaa !184
  %min.i392 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %9, i64 0, i32 0
  %10 = load i32, i32* %min.i392, align 4, !tbaa !221
  %min.i396 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %9, i64 1, i32 0
  %11 = load i32, i32* %min.i396, align 4, !tbaa !221
  %stride.i398 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %9, i64 1, i32 2
  %12 = load i32, i32* %stride.i398, align 4, !tbaa !185
  %host.i399 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %output.buffer, i64 0, i32 2
  %13 = load i8*, i8** %host.i399, align 8, !tbaa !180
  %dim.i400 = getelementptr inbounds %struct.halide_buffer_t, %struct.halide_buffer_t* %output.buffer, i64 0, i32 6
  %14 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i400, align 8, !tbaa !184
  %min.i401 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %14, i64 0, i32 0
  %15 = load i32, i32* %min.i401, align 4, !tbaa !221
  %extent.i403 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %14, i64 0, i32 1
  %16 = load i32, i32* %extent.i403, align 4, !tbaa !189
  %min.i407 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %14, i64 1, i32 0
  %17 = load i32, i32* %min.i407, align 4, !tbaa !221
  %extent.i409 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %14, i64 1, i32 1
  %18 = load i32, i32* %extent.i409, align 4, !tbaa !189
  %stride.i411 = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %14, i64 1, i32 2
  %19 = load i32, i32* %stride.i411, align 4, !tbaa !185
  %20 = icmp sgt i32 %6, 0
  %21 = select i1 %20, i32 %6, i32 0
  %a19 = add nsw i32 %21, %5
  %22 = add nsw i32 %16, 63
  %t273 = ashr i32 %22, 6
  %b6 = shl nsw i32 %t273, 1
  %a1 = and i32 %22, -64
  %23 = add nsw i32 %16, -1
  %24 = and i32 %23, -64
  %b3 = or i32 %24, 34
  %25 = sub nsw i32 %3, %15
  %a3 = ashr i32 %25, 5
  %26 = icmp sgt i32 %a3, -1
  %a2 = select i1 %26, i32 %a3, i32 -1
  %27 = icmp slt i32 %a2, %b6
  %t263 = select i1 %27, i32 %a2, i32 %b6
  %28 = icmp sgt i32 %4, 31
  %29 = select i1 %28, i32 %4, i32 31
  %30 = add i32 %3, -31
  %31 = add i32 %30, %29
  %32 = sub i32 %31, %15
  %a5 = ashr i32 %32, 5
  %33 = icmp sgt i32 %a5, -1
  %a4 = select i1 %33, i32 %a5, i32 -1
  %34 = icmp slt i32 %a4, %b6
  %t264 = select i1 %34, i32 %a4, i32 %b6
  %35 = add nsw i32 %18, 15
  %t255 = ashr i32 %35, 4
  %36 = mul i32 %11, %12
  %37 = mul i32 %17, %19
  %t261 = add nsw i32 %4, %3
  %38 = icmp sgt i32 %18, 0
  br i1 %38, label %"for output.s0.y.y.preheader", label %"end for output.s0.y.y", !prof !385

"for output.s0.y.y.preheader":                    ; preds = %entry
  %39 = sub i32 0, %36
  %40 = sub nsw i32 1, %11
  %41 = mul nsw i32 %40, %12
  %t268 = sub nsw i32 %41, %10
  %42 = sub nsw i32 2, %11
  %43 = mul nsw i32 %42, %12
  %t269 = sub nsw i32 %43, %10
  %44 = icmp sgt i32 %a1, %b3
  %t256 = select i1 %44, i32 %a1, i32 %b3
  %45 = add nsw i32 %t256, 95
  %a7 = ashr i32 %45, 6
  %46 = icmp sgt i32 %a7, 0
  %t380 = select i1 %46, i32 %a7, i32 0
  %47 = shl nuw nsw i32 %t380, 6
  %48 = zext i32 %47 to i64
  %49 = mul nuw nsw i64 %48, 18
  %50 = or i64 %49, 3
  %51 = bitcast %struct.halide_pseudostack_slot_t* %input_bounded.pseudostack_slot to i8***
  %b14 = add nsw i32 %6, %5
  %52 = sub nsw i32 %5, %17
  %53 = sub i32 %17, %5
  %54 = shl nsw i32 %a7, 1
  %55 = or i32 %b6, 1
  %56 = icmp sgt i32 %55, 0
  %57 = add i32 %15, -1
  %58 = add nsw i32 %t261, -1
  %59 = insertelement <32 x i32> undef, i32 %58, i32 0
  %60 = shufflevector <32 x i32> %59, <32 x i32> undef, <4 x i32> zeroinitializer
  %61 = insertelement <32 x i32> undef, i32 %3, i32 0
  %62 = shufflevector <32 x i32> %61, <32 x i32> undef, <4 x i32> zeroinitializer
  %t288 = sub nsw i32 %b6, %t264
  %63 = icmp sgt i32 %t263, -1
  %t295 = sub nsw i32 %t264, %t263
  %64 = sub i32 %15, %3
  %65 = icmp sgt i32 %t295, 0
  %66 = sext i32 %t263 to i64
  %67 = icmp sgt i32 %t288, 0
  %68 = add i32 %15, 31
  %69 = sub nsw i32 %17, %a19
  %70 = sub nsw i32 %a19, %17
  %b35 = add nsw i32 %6, -1
  %t342 = shl nsw i32 %a7, 5
  %t340 = mul nsw i32 %a7, 30
  %t338 = mul nsw i32 %a7, 28
  %t336 = mul nsw i32 %a7, 26
  %t334 = mul nsw i32 %a7, 24
  %t332 = mul nsw i32 %a7, 22
  %t330 = mul nsw i32 %a7, 20
  %t328 = mul nsw i32 %a7, 18
  %t326 = shl nsw i32 %a7, 4
  %t324 = mul nsw i32 %a7, 14
  %t322 = mul nsw i32 %a7, 12
  %t320 = mul nsw i32 %a7, 10
  %t318 = shl nsw i32 %a7, 3
  %t316 = mul nsw i32 %a7, 6
  %t314 = shl nsw i32 %a7, 2
  %t309 = mul nsw i32 %a7, -2
  %71 = sub i32 2, %10
  %t310 = sub i32 %71, %36
  %72 = sub i32 1, %10
  %t312 = sub i32 %72, %36
  %t311 = sub nsw i32 %39, %10
  %73 = icmp sgt i32 %16, 0
  %74 = sext i32 %t312 to i64
  %75 = getelementptr inbounds i8, i8* %8, i64 %74
  %76 = sext i32 %t311 to i64
  %77 = getelementptr inbounds i8, i8* %8, i64 %76
  %78 = sext i32 %t310 to i64
  %79 = getelementptr inbounds i8, i8* %8, i64 %78
  %80 = sext i32 %t268 to i64
  %81 = getelementptr inbounds i8, i8* %8, i64 %80
  %82 = getelementptr inbounds i8, i8* %81, i64 1
  %83 = getelementptr inbounds i8, i8* %81, i64 2
  %84 = sext i32 %t269 to i64
  %85 = getelementptr inbounds i8, i8* %8, i64 %84
  %86 = getelementptr inbounds i8, i8* %85, i64 2
  %87 = getelementptr inbounds i8, i8* %85, i64 1
  %88 = zext i32 %55 to i64
  %89 = sext i32 %6 to i64
  %90 = zext i32 %t263 to i64
  %91 = zext i32 %t295 to i64
  %92 = zext i32 %t288 to i64
  %93 = sext i32 %7 to i64
  %94 = zext i32 %3 to i64
  %95 = sext i32 %64 to i64
  %96 = sext i32 %54 to i64
  %97 = sext i32 %t309 to i64
  %98 = zext i32 %t273 to i64
  %99 = sext i32 %t342 to i64
  %100 = sext i32 %t340 to i64
  %101 = sext i32 %t338 to i64
  %102 = sext i32 %t336 to i64
  %103 = sext i32 %t334 to i64
  %104 = sext i32 %t332 to i64
  %105 = sext i32 %t330 to i64
  %106 = sext i32 %t328 to i64
  %107 = sext i32 %t326 to i64
  %108 = sext i32 %t324 to i64
  %109 = sext i32 %t322 to i64
  %110 = sext i32 %t320 to i64
  %111 = sext i32 %t318 to i64
  %112 = sext i32 %t316 to i64
  %113 = sext i32 %t314 to i64
  %zext = zext i32 %t255 to i64
  br label %"for output.s0.y.y"

"for output.s0.y.y":                              ; preds = %"for output.s0.y.y.preheader", %"end for output.s0.x.x"
  %indvars.iv628 = phi i64 [ 0, %"for output.s0.y.y.preheader" ], [ %indvars.iv.next629, %"end for output.s0.x.x" ]
  %114 = load i64, i64* %.fca.1.gep, align 8, !tbaa !386
  %cmp.i = icmp ult i64 %114, %50
  %115 = load i8*, i8** %.fca.0.gep, align 8, !tbaa !388
  br i1 %cmp.i, label %if.then.i, label %pseudostack_alloc.exit, !prof !389

if.then.i:                                        ; preds = %"for output.s0.y.y"
  %tobool1.not.i = icmp ne i8* %115, null
  %116 = load i64, i64* %.fca.2.gep, align 8
  %cmp2.i = icmp ugt i64 %116, 16384
  %or.cond = and i1 %tobool1.not.i, %cmp2.i
  br i1 %or.cond, label %if.then3.i, label %if.end.i

if.then3.i:                                       ; preds = %if.then.i
  call void @halide_free(i8* null, i8* nonnull %115) #14
  %.pre = load i64, i64* %.fca.2.gep, align 8, !tbaa !390
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i, %if.then.i
  %117 = phi i64 [ %.pre, %if.then3.i ], [ %116, %if.then.i ]
  %add.i = add i64 %117, %50
  store i64 %add.i, i64* %.fca.2.gep, align 8, !tbaa !390
  %cmp7.i = icmp ugt i64 %add.i, 16384
  br i1 %cmp7.i, label %if.then8.i, label %if.end11.i

if.then8.i:                                       ; preds = %if.end.i
  %call.i = call i8* @halide_malloc(i8* null, i64 %50) #14
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then8.i, %if.end.i
  %storemerge.i = phi i8* [ %call.i, %if.then8.i ], [ null, %if.end.i ]
  store i8* %storemerge.i, i8** %.fca.0.gep, align 8, !tbaa !388
  store i64 %50, i64* %.fca.1.gep, align 8, !tbaa !386
  br label %pseudostack_alloc.exit

pseudostack_alloc.exit:                           ; preds = %"for output.s0.y.y", %if.end11.i
  %118 = phi i8* [ %storemerge.i, %if.end11.i ], [ %115, %"for output.s0.y.y" ]
  %.not354 = icmp eq i8* %118, null
  br i1 %.not354, label %then_bb, label %"produce input_bounded", !prof !391

"end for output.s0.y.y.loopexit":                 ; preds = %"end for output.s0.x.x"
  %119 = bitcast %struct.halide_pseudostack_slot_t* %input_bounded.pseudostack_slot to i8*
  %.pre735 = load i8*, i8** %host.i, align 8, !tbaa !180
  %.pre736 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i, align 8, !tbaa !184
  %min.i414.phi.trans.insert = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre736, i64 0, i32 0
  %.pre737 = load i32, i32* %min.i414.phi.trans.insert, align 4, !tbaa !221
  %extent.i416.phi.trans.insert = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre736, i64 0, i32 1
  %.pre738 = load i32, i32* %extent.i416.phi.trans.insert, align 4, !tbaa !189
  %min.i420.phi.trans.insert = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre736, i64 1, i32 0
  %.pre739 = load i32, i32* %min.i420.phi.trans.insert, align 4, !tbaa !221
  %extent.i422.phi.trans.insert = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre736, i64 1, i32 1
  %.pre740 = load i32, i32* %extent.i422.phi.trans.insert, align 4, !tbaa !189
  %stride.i424.phi.trans.insert = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre736, i64 1, i32 2
  %.pre741 = load i32, i32* %stride.i424.phi.trans.insert, align 4, !tbaa !185
  %.pre742 = load i8*, i8** %host.i390, align 8, !tbaa !180
  %.pre743 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i391, align 8, !tbaa !184
  %min.i427.phi.trans.insert = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre743, i64 0, i32 0
  %.pre744 = load i32, i32* %min.i427.phi.trans.insert, align 4, !tbaa !221
  %min.i431.phi.trans.insert = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre743, i64 1, i32 0
  %.pre745 = load i32, i32* %min.i431.phi.trans.insert, align 4, !tbaa !221
  %stride.i433.phi.trans.insert = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre743, i64 1, i32 2
  %.pre746 = load i32, i32* %stride.i433.phi.trans.insert, align 4, !tbaa !185
  %.pre747 = load i8*, i8** %host.i399, align 8, !tbaa !180
  %.pre748 = load %struct.halide_dimension_t*, %struct.halide_dimension_t** %dim.i400, align 8, !tbaa !184
  %min.i436.phi.trans.insert = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre748, i64 0, i32 0
  %.pre749 = load i32, i32* %min.i436.phi.trans.insert, align 4, !tbaa !221
  %extent.i438.phi.trans.insert = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre748, i64 0, i32 1
  %.pre750 = load i32, i32* %extent.i438.phi.trans.insert, align 4, !tbaa !189
  %min.i442.phi.trans.insert = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre748, i64 1, i32 0
  %.pre751 = load i32, i32* %min.i442.phi.trans.insert, align 4, !tbaa !221
  %extent.i444.phi.trans.insert = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre748, i64 1, i32 1
  %.pre752 = load i32, i32* %extent.i444.phi.trans.insert, align 4, !tbaa !189
  %stride.i446.phi.trans.insert = getelementptr inbounds %struct.halide_dimension_t, %struct.halide_dimension_t* %.pre748, i64 1, i32 2
  %.pre753 = load i32, i32* %stride.i446.phi.trans.insert, align 4, !tbaa !185
  %.pre755 = add nsw i32 %.pre750, 63
  %.pre756 = ashr i32 %.pre755, 6
  %.pre757 = shl nsw i32 %.pre756, 1
  %.pre758 = and i32 %.pre755, -64
  %.pre759 = add nsw i32 %.pre750, -1
  %.pre761 = and i32 %.pre759, -64
  %.pre763 = or i32 %.pre761, 34
  %.pre764 = sub nsw i32 %.pre737, %.pre749
  %.pre766 = ashr i32 %.pre764, 5
  %.pre767 = add i32 %.pre737, -31
  %.pre769 = add nsw i32 %.pre752, 15
  %.pre771 = ashr i32 %.pre769, 4
  %.pre772 = mul i32 %.pre751, %.pre753
  %.pre774 = add nsw i32 %.pre738, %.pre737
  br label %"end for output.s0.y.y"

"end for output.s0.y.y":                          ; preds = %"end for output.s0.y.y.loopexit", %entry
  %t26187.pre-phi = phi i32 [ %.pre774, %"end for output.s0.y.y.loopexit" ], [ %t261, %entry ]
  %.pre-phi773 = phi i32 [ %.pre772, %"end for output.s0.y.y.loopexit" ], [ %37, %entry ]
  %t25582.pre-phi = phi i32 [ %.pre771, %"end for output.s0.y.y.loopexit" ], [ %t255, %entry ]
  %.pre-phi768 = phi i32 [ %.pre767, %"end for output.s0.y.y.loopexit" ], [ %30, %entry ]
  %a37.pre-phi = phi i32 [ %.pre766, %"end for output.s0.y.y.loopexit" ], [ %a3, %entry ]
  %b37.pre-phi = phi i32 [ %.pre763, %"end for output.s0.y.y.loopexit" ], [ %b3, %entry ]
  %a35.pre-phi = phi i32 [ %.pre758, %"end for output.s0.y.y.loopexit" ], [ %a1, %entry ]
  %t274.pre-phi = phi i32 [ %.pre757, %"end for output.s0.y.y.loopexit" ], [ %b6, %entry ]
  %t27378.pre-phi = phi i32 [ %.pre756, %"end for output.s0.y.y.loopexit" ], [ %t273, %entry ]
  %120 = phi i32 [ %.pre753, %"end for output.s0.y.y.loopexit" ], [ %19, %entry ]
  %121 = phi i32 [ %.pre752, %"end for output.s0.y.y.loopexit" ], [ %18, %entry ]
  %122 = phi i32 [ %.pre751, %"end for output.s0.y.y.loopexit" ], [ %17, %entry ]
  %123 = phi i32 [ %.pre750, %"end for output.s0.y.y.loopexit" ], [ %16, %entry ]
  %124 = phi i32 [ %.pre749, %"end for output.s0.y.y.loopexit" ], [ %15, %entry ]
  %125 = phi i8* [ %.pre747, %"end for output.s0.y.y.loopexit" ], [ %13, %entry ]
  %126 = phi i32 [ %.pre746, %"end for output.s0.y.y.loopexit" ], [ %12, %entry ]
  %127 = phi i32 [ %.pre745, %"end for output.s0.y.y.loopexit" ], [ %11, %entry ]
  %128 = phi i32 [ %.pre744, %"end for output.s0.y.y.loopexit" ], [ %10, %entry ]
  %129 = phi i8* [ %.pre742, %"end for output.s0.y.y.loopexit" ], [ %8, %entry ]
  %130 = phi i32 [ %.pre741, %"end for output.s0.y.y.loopexit" ], [ %7, %entry ]
  %131 = phi i32 [ %.pre740, %"end for output.s0.y.y.loopexit" ], [ %6, %entry ]
  %132 = phi i32 [ %.pre739, %"end for output.s0.y.y.loopexit" ], [ %5, %entry ]
  %133 = phi i32 [ %.pre738, %"end for output.s0.y.y.loopexit" ], [ %4, %entry ]
  %134 = phi i32 [ %.pre737, %"end for output.s0.y.y.loopexit" ], [ %3, %entry ]
  %135 = phi i8* [ %.pre735, %"end for output.s0.y.y.loopexit" ], [ %1, %entry ]
  %.0 = phi i8* [ %119, %"end for output.s0.y.y.loopexit" ], [ null, %entry ]
  %136 = icmp sgt i32 %a37.pre-phi, -1
  %a36 = select i1 %136, i32 %a37.pre-phi, i32 -1
  %137 = icmp slt i32 %a36, %t274.pre-phi
  %t26380 = select i1 %137, i32 %a36, i32 %t274.pre-phi
  %138 = icmp sgt i32 %133, 31
  %139 = select i1 %138, i32 %133, i32 31
  %140 = add i32 %.pre-phi768, %139
  %141 = sub i32 %140, %124
  %a39 = ashr i32 %141, 5
  %142 = icmp sgt i32 %a39, -1
  %a38 = select i1 %142, i32 %a39, i32 -1
  %143 = icmp slt i32 %a38, %t274.pre-phi
  %t26481 = select i1 %143, i32 %a38, i32 %t274.pre-phi
  %144 = icmp sgt i32 %121, 0
  br i1 %144, label %"for output.s0.y.y88.preheader", label %"end for output.s0.y.y89", !prof !385

"for output.s0.y.y88.preheader":                  ; preds = %"end for output.s0.y.y"
  %145 = sub nsw i32 1, %127
  %146 = mul nsw i32 %145, %126
  %t26885 = sub nsw i32 %146, %128
  %147 = sub nsw i32 2, %127
  %148 = mul nsw i32 %147, %126
  %t26984 = sub nsw i32 %148, %128
  %149 = icmp sgt i32 %a35.pre-phi, %b37.pre-phi
  %t25679 = select i1 %149, i32 %a35.pre-phi, i32 %b37.pre-phi
  %150 = icmp sgt i32 %131, 0
  %151 = select i1 %150, i32 %131, i32 0
  %152 = add nsw i32 %t25679, 95
  %a41 = ashr i32 %152, 6
  %153 = icmp sgt i32 %a41, 0
  %t505 = select i1 %153, i32 %a41, i32 0
  %154 = shl nuw nsw i32 %t505, 6
  %155 = zext i32 %154 to i64
  %156 = mul nuw nsw i64 %155, 18
  %157 = or i64 %156, 3
  %158 = bitcast %struct.halide_pseudostack_slot_t* %input_bounded.pseudostack_slot to i8***
  %b48 = add nsw i32 %131, %132
  %159 = sub nsw i32 %132, %122
  %160 = sub i32 %122, %132
  %161 = shl nsw i32 %a41, 1
  %162 = or i32 %t274.pre-phi, 1
  %163 = icmp sgt i32 %162, 0
  %164 = add i32 %124, -1
  %165 = add nsw i32 %t26187.pre-phi, -1
  %166 = insertelement <32 x i32> undef, i32 %165, i32 0
  %167 = shufflevector <32 x i32> %166, <32 x i32> undef, <4 x i32> zeroinitializer
  %168 = insertelement <32 x i32> undef, i32 %134, i32 0
  %169 = shufflevector <32 x i32> %168, <32 x i32> undef, <4 x i32> zeroinitializer
  %a56 = add nsw i32 %151, %132
  %t288113 = sub nsw i32 %t274.pre-phi, %t26481
  %170 = icmp sgt i32 %t26380, -1
  %t295123 = sub nsw i32 %t26481, %t26380
  %171 = sub i32 %124, %134
  %172 = icmp sgt i32 %t295123, 0
  %173 = sext i32 %t26380 to i64
  %174 = icmp sgt i32 %t288113, 0
  %175 = add i32 %124, 31
  %176 = sub nsw i32 %122, %a56
  %177 = sub nsw i32 %a56, %122
  %b104 = add nsw i32 %131, -1
  %178 = mul i32 %127, %126
  %179 = sub i32 0, %178
  %180 = sub i32 2, %128
  %t310166 = sub i32 %180, %178
  %181 = sub i32 1, %128
  %t312167 = sub i32 %181, %178
  %t311168 = sub nsw i32 %179, %128
  %182 = icmp sgt i32 %123, 0
  %183 = mul nsw i32 %a41, -2
  %184 = sext i32 %t312167 to i64
  %185 = getelementptr inbounds i8, i8* %129, i64 %184
  %186 = sext i32 %t311168 to i64
  %187 = getelementptr inbounds i8, i8* %129, i64 %186
  %188 = sext i32 %t310166 to i64
  %189 = getelementptr inbounds i8, i8* %129, i64 %188
  %190 = sext i32 %t26885 to i64
  %191 = getelementptr inbounds i8, i8* %129, i64 %190
  %192 = getelementptr inbounds i8, i8* %191, i64 1
  %193 = getelementptr inbounds i8, i8* %191, i64 2
  %194 = sext i32 %t26984 to i64
  %195 = getelementptr inbounds i8, i8* %129, i64 %194
  %196 = getelementptr inbounds i8, i8* %195, i64 2
  %197 = getelementptr inbounds i8, i8* %195, i64 1
  %198 = shl nsw i32 %a41, 2
  %199 = mul nsw i32 %a41, 6
  %200 = shl nsw i32 %a41, 3
  %201 = mul nsw i32 %a41, 10
  %202 = mul nsw i32 %a41, 12
  %203 = mul nsw i32 %a41, 14
  %204 = shl nsw i32 %a41, 4
  %205 = mul nsw i32 %a41, 18
  %206 = mul nsw i32 %a41, 20
  %207 = mul nsw i32 %a41, 22
  %208 = mul nsw i32 %a41, 24
  %209 = mul nsw i32 %a41, 26
  %210 = mul nsw i32 %a41, 28
  %211 = mul nsw i32 %a41, 30
  %212 = shl nsw i32 %a41, 5
  %213 = zext i32 %162 to i64
  %214 = sext i32 %131 to i64
  %215 = zext i32 %t26380 to i64
  %216 = zext i32 %t295123 to i64
  %217 = zext i32 %t288113 to i64
  %218 = sext i32 %130 to i64
  %219 = zext i32 %134 to i64
  %220 = sext i32 %171 to i64
  %221 = sext i32 %161 to i64
  %222 = sext i32 %183 to i64
  %223 = zext i32 %t27378.pre-phi to i64
  %224 = sext i32 %212 to i64
  %225 = sext i32 %211 to i64
  %226 = sext i32 %210 to i64
  %227 = sext i32 %209 to i64
  %228 = sext i32 %208 to i64
  %229 = sext i32 %207 to i64
  %230 = sext i32 %206 to i64
  %231 = sext i32 %205 to i64
  %232 = sext i32 %204 to i64
  %233 = sext i32 %203 to i64
  %234 = sext i32 %202 to i64
  %235 = sext i32 %201 to i64
  %236 = sext i32 %200 to i64
  %237 = sext i32 %199 to i64
  %238 = sext i32 %198 to i64
  %zext734 = zext i32 %t25582.pre-phi to i64
  br label %"for output.s0.y.y88"

then_bb:                                          ; preds = %pseudostack_alloc.exit
  %239 = alloca i8*, i64 %50, align 16
  %240 = bitcast i8** %239 to i8*
  store i8** %239, i8*** %51, align 8
  br label %"produce input_bounded"

"produce input_bounded":                          ; preds = %pseudostack_alloc.exit, %then_bb
  %input_bounded = phi i8* [ %240, %then_bb ], [ %118, %pseudostack_alloc.exit ]
  %241 = trunc i64 %indvars.iv628 to i32
  %242 = shl nsw i32 %241, 4
  %t378 = add nsw i32 %242, %17
  %a10 = add nsw i32 %t378, -1
  %243 = icmp sgt i32 %a10, %5
  %a9 = select i1 %243, i32 %a10, i32 %5
  %b11 = add nsw i32 %t378, 17
  %244 = icmp slt i32 %a9, %b11
  %input_bounded.s0.y.prologue = select i1 %244, i32 %a9, i32 %b11
  %245 = icmp sgt i32 %a9, %b14
  %a11 = select i1 %245, i32 %a9, i32 %b14
  %246 = icmp slt i32 %a11, %b11
  %input_bounded.s0.y.epilogue = select i1 %246, i32 %a11, i32 %b11
  %a15 = sub i32 %52, %242
  %247 = icmp slt i32 %a15, 17
  %a14 = select i1 %247, i32 %a15, i32 17
  %248 = icmp sgt i32 %a14, -1
  br i1 %248, label %"for input_bounded.s0.y.rebased.preheader", label %"end for input_bounded.s0.y.rebased", !prof !385

"for input_bounded.s0.y.rebased.preheader":       ; preds = %"produce input_bounded"
  %t276 = add nsw i32 %53, %242
  %249 = sext i32 %t276 to i64
  %250 = zext i32 %a14 to i64
  br label %"for input_bounded.s0.y.rebased"

"for input_bounded.s0.y.rebased":                 ; preds = %"for input_bounded.s0.y.rebased.preheader", %"end for input_bounded.s0.x.x"
  %indvars.iv512 = phi i64 [ 0, %"for input_bounded.s0.y.rebased.preheader" ], [ %indvars.iv.next513, %"end for input_bounded.s0.x.x" ]
  %251 = add nsw i64 %indvars.iv512, %249
  %252 = icmp slt i64 %251, %89
  %253 = trunc i64 %251 to i32
  %a16 = select i1 %252, i32 %253, i32 %6
  br i1 %56, label %"for input_bounded.s0.x.x.preheader", label %"end for input_bounded.s0.x.x", !prof !385

"for input_bounded.s0.x.x.preheader":             ; preds = %"for input_bounded.s0.y.rebased"
  %254 = icmp sgt i32 %a16, 1
  %255 = select i1 %254, i32 %a16, i32 1
  %256 = add nsw i32 %255, -1
  %257 = mul nsw i32 %256, %7
  %t279 = sub nsw i32 %257, %3
  %258 = trunc i64 %indvars.iv512 to i32
  %t280 = mul i32 %54, %258
  %259 = insertelement <32 x i32> undef, i32 %t279, i32 0
  %260 = shufflevector <32 x i32> %259, <32 x i32> undef, <32 x i32> zeroinitializer
  %261 = sext i32 %t280 to i64
  br label %"for input_bounded.s0.x.x"

"end for input_bounded.s0.y.rebased":             ; preds = %"end for input_bounded.s0.x.x", %"produce input_bounded"
  %.not355 = icmp slt i32 %a19, %t378
  %a18 = select i1 %.not355, i32 %a10, i32 %a19
  %262 = icmp slt i32 %a18, %b11
  %263 = select i1 %262, i32 %a18, i32 %b11
  %t281 = sub nsw i32 %263, %input_bounded.s0.y.prologue
  %264 = icmp sgt i32 %t281, 0
  br i1 %264, label %"for input_bounded.s0.y.rebased1.preheader", label %"end for input_bounded.s0.y.rebased2", !prof !385

"for input_bounded.s0.y.rebased1.preheader":      ; preds = %"end for input_bounded.s0.y.rebased"
  %t283 = sub i32 %input_bounded.s0.y.prologue, %5
  %265 = sext i32 %t283 to i64
  %266 = zext i32 %t281 to i64
  br label %"for input_bounded.s0.y.rebased1"

"for input_bounded.s0.x.x":                       ; preds = %"for input_bounded.s0.x.x.preheader", %"for input_bounded.s0.x.x"
  %indvars.iv = phi i64 [ 0, %"for input_bounded.s0.x.x.preheader" ], [ %indvars.iv.next, %"for input_bounded.s0.x.x" ]
  %267 = trunc i64 %indvars.iv to i32
  %268 = shl nsw i32 %267, 5
  %269 = add i32 %57, %268
  %270 = insertelement <32 x i32> undef, i32 %269, i32 0
  %271 = shufflevector <32 x i32> %270, <32 x i32> undef, <32 x i32> zeroinitializer
  %272 = add nsw <32 x i32> %271, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %273 = shufflevector <32 x i32> %272, <32 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %274 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %273, <4 x i32> %60)
  %275 = shufflevector <32 x i32> %272, <32 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %276 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %275, <4 x i32> %60)
  %277 = shufflevector <32 x i32> %272, <32 x i32> undef, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %278 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %277, <4 x i32> %60)
  %279 = shufflevector <32 x i32> %272, <32 x i32> undef, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %280 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %279, <4 x i32> %60)
  %281 = shufflevector <32 x i32> %272, <32 x i32> undef, <4 x i32> <i32 16, i32 17, i32 18, i32 19>
  %282 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %281, <4 x i32> %60)
  %283 = shufflevector <32 x i32> %272, <32 x i32> undef, <4 x i32> <i32 20, i32 21, i32 22, i32 23>
  %284 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %283, <4 x i32> %60)
  %285 = shufflevector <32 x i32> %272, <32 x i32> undef, <4 x i32> <i32 24, i32 25, i32 26, i32 27>
  %286 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %285, <4 x i32> %60)
  %287 = shufflevector <32 x i32> %272, <32 x i32> undef, <4 x i32> <i32 28, i32 29, i32 30, i32 31>
  %288 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %287, <4 x i32> %60)
  %289 = shufflevector <4 x i32> %288, <4 x i32> poison, <8 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3>
  %290 = shufflevector <8 x i32> %289, <8 x i32> poison, <16 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 4, i32 5, i32 6, i32 7>
  %291 = shufflevector <16 x i32> %290, <16 x i32> poison, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 12, i32 13, i32 14, i32 15>
  %292 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %274, <4 x i32> %62)
  %293 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %276, <4 x i32> %62)
  %294 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %278, <4 x i32> %62)
  %295 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %280, <4 x i32> %62)
  %296 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %282, <4 x i32> %62)
  %297 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %284, <4 x i32> %62)
  %298 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %286, <4 x i32> %62)
  %299 = shufflevector <32 x i32> %291, <32 x i32> undef, <4 x i32> <i32 28, i32 29, i32 30, i32 31>
  %300 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %299, <4 x i32> %62)
  %301 = shufflevector <4 x i32> %292, <4 x i32> %293, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %302 = shufflevector <4 x i32> %294, <4 x i32> %295, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %303 = shufflevector <4 x i32> %296, <4 x i32> %297, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %304 = shufflevector <4 x i32> %298, <4 x i32> %300, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %305 = shufflevector <8 x i32> %301, <8 x i32> %302, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %306 = shufflevector <8 x i32> %303, <8 x i32> %304, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %307 = shufflevector <16 x i32> %305, <16 x i32> %306, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %308 = add nsw <32 x i32> %307, %260
  %309 = extractelement <32 x i32> %308, i32 0
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds i8, i8* %1, i64 %310
  %312 = load i8, i8* %311, align 1, !tbaa !392
  %313 = insertelement <32 x i8> undef, i8 %312, i32 0
  %314 = extractelement <32 x i32> %308, i32 1
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds i8, i8* %1, i64 %315
  %317 = load i8, i8* %316, align 1, !tbaa !392
  %318 = insertelement <32 x i8> %313, i8 %317, i32 1
  %319 = extractelement <32 x i32> %308, i32 2
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds i8, i8* %1, i64 %320
  %322 = load i8, i8* %321, align 1, !tbaa !392
  %323 = insertelement <32 x i8> %318, i8 %322, i32 2
  %324 = extractelement <32 x i32> %308, i32 3
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds i8, i8* %1, i64 %325
  %327 = load i8, i8* %326, align 1, !tbaa !392
  %328 = insertelement <32 x i8> %323, i8 %327, i32 3
  %329 = extractelement <32 x i32> %308, i32 4
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds i8, i8* %1, i64 %330
  %332 = load i8, i8* %331, align 1, !tbaa !392
  %333 = insertelement <32 x i8> %328, i8 %332, i32 4
  %334 = extractelement <32 x i32> %308, i32 5
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds i8, i8* %1, i64 %335
  %337 = load i8, i8* %336, align 1, !tbaa !392
  %338 = insertelement <32 x i8> %333, i8 %337, i32 5
  %339 = extractelement <32 x i32> %308, i32 6
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds i8, i8* %1, i64 %340
  %342 = load i8, i8* %341, align 1, !tbaa !392
  %343 = insertelement <32 x i8> %338, i8 %342, i32 6
  %344 = extractelement <32 x i32> %308, i32 7
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds i8, i8* %1, i64 %345
  %347 = load i8, i8* %346, align 1, !tbaa !392
  %348 = insertelement <32 x i8> %343, i8 %347, i32 7
  %349 = extractelement <32 x i32> %308, i32 8
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds i8, i8* %1, i64 %350
  %352 = load i8, i8* %351, align 1, !tbaa !392
  %353 = insertelement <32 x i8> %348, i8 %352, i32 8
  %354 = extractelement <32 x i32> %308, i32 9
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds i8, i8* %1, i64 %355
  %357 = load i8, i8* %356, align 1, !tbaa !392
  %358 = insertelement <32 x i8> %353, i8 %357, i32 9
  %359 = extractelement <32 x i32> %308, i32 10
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds i8, i8* %1, i64 %360
  %362 = load i8, i8* %361, align 1, !tbaa !392
  %363 = insertelement <32 x i8> %358, i8 %362, i32 10
  %364 = extractelement <32 x i32> %308, i32 11
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds i8, i8* %1, i64 %365
  %367 = load i8, i8* %366, align 1, !tbaa !392
  %368 = insertelement <32 x i8> %363, i8 %367, i32 11
  %369 = extractelement <32 x i32> %308, i32 12
  %370 = sext i32 %369 to i64
  %371 = getelementptr inbounds i8, i8* %1, i64 %370
  %372 = load i8, i8* %371, align 1, !tbaa !392
  %373 = insertelement <32 x i8> %368, i8 %372, i32 12
  %374 = extractelement <32 x i32> %308, i32 13
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds i8, i8* %1, i64 %375
  %377 = load i8, i8* %376, align 1, !tbaa !392
  %378 = insertelement <32 x i8> %373, i8 %377, i32 13
  %379 = extractelement <32 x i32> %308, i32 14
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds i8, i8* %1, i64 %380
  %382 = load i8, i8* %381, align 1, !tbaa !392
  %383 = insertelement <32 x i8> %378, i8 %382, i32 14
  %384 = extractelement <32 x i32> %308, i32 15
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds i8, i8* %1, i64 %385
  %387 = load i8, i8* %386, align 1, !tbaa !392
  %388 = insertelement <32 x i8> %383, i8 %387, i32 15
  %389 = extractelement <32 x i32> %308, i32 16
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds i8, i8* %1, i64 %390
  %392 = load i8, i8* %391, align 1, !tbaa !392
  %393 = insertelement <32 x i8> %388, i8 %392, i32 16
  %394 = extractelement <32 x i32> %308, i32 17
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds i8, i8* %1, i64 %395
  %397 = load i8, i8* %396, align 1, !tbaa !392
  %398 = insertelement <32 x i8> %393, i8 %397, i32 17
  %399 = extractelement <32 x i32> %308, i32 18
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds i8, i8* %1, i64 %400
  %402 = load i8, i8* %401, align 1, !tbaa !392
  %403 = insertelement <32 x i8> %398, i8 %402, i32 18
  %404 = extractelement <32 x i32> %308, i32 19
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds i8, i8* %1, i64 %405
  %407 = load i8, i8* %406, align 1, !tbaa !392
  %408 = insertelement <32 x i8> %403, i8 %407, i32 19
  %409 = extractelement <32 x i32> %308, i32 20
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds i8, i8* %1, i64 %410
  %412 = load i8, i8* %411, align 1, !tbaa !392
  %413 = insertelement <32 x i8> %408, i8 %412, i32 20
  %414 = extractelement <32 x i32> %308, i32 21
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds i8, i8* %1, i64 %415
  %417 = load i8, i8* %416, align 1, !tbaa !392
  %418 = insertelement <32 x i8> %413, i8 %417, i32 21
  %419 = extractelement <32 x i32> %308, i32 22
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds i8, i8* %1, i64 %420
  %422 = load i8, i8* %421, align 1, !tbaa !392
  %423 = insertelement <32 x i8> %418, i8 %422, i32 22
  %424 = extractelement <32 x i32> %308, i32 23
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds i8, i8* %1, i64 %425
  %427 = load i8, i8* %426, align 1, !tbaa !392
  %428 = insertelement <32 x i8> %423, i8 %427, i32 23
  %429 = extractelement <32 x i32> %308, i32 24
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds i8, i8* %1, i64 %430
  %432 = load i8, i8* %431, align 1, !tbaa !392
  %433 = insertelement <32 x i8> %428, i8 %432, i32 24
  %434 = extractelement <32 x i32> %308, i32 25
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds i8, i8* %1, i64 %435
  %437 = load i8, i8* %436, align 1, !tbaa !392
  %438 = insertelement <32 x i8> %433, i8 %437, i32 25
  %439 = extractelement <32 x i32> %308, i32 26
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds i8, i8* %1, i64 %440
  %442 = load i8, i8* %441, align 1, !tbaa !392
  %443 = insertelement <32 x i8> %438, i8 %442, i32 26
  %444 = extractelement <32 x i32> %308, i32 27
  %445 = sext i32 %444 to i64
  %446 = getelementptr inbounds i8, i8* %1, i64 %445
  %447 = load i8, i8* %446, align 1, !tbaa !392
  %448 = insertelement <32 x i8> %443, i8 %447, i32 27
  %449 = extractelement <32 x i32> %308, i32 28
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds i8, i8* %1, i64 %450
  %452 = load i8, i8* %451, align 1, !tbaa !392
  %453 = insertelement <32 x i8> %448, i8 %452, i32 28
  %454 = extractelement <32 x i32> %308, i32 29
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds i8, i8* %1, i64 %455
  %457 = load i8, i8* %456, align 1, !tbaa !392
  %458 = insertelement <32 x i8> %453, i8 %457, i32 29
  %459 = extractelement <32 x i32> %308, i32 30
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds i8, i8* %1, i64 %460
  %462 = load i8, i8* %461, align 1, !tbaa !392
  %463 = insertelement <32 x i8> %458, i8 %462, i32 30
  %464 = extractelement <32 x i32> %308, i32 31
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds i8, i8* %1, i64 %465
  %467 = load i8, i8* %466, align 1, !tbaa !392
  %468 = insertelement <32 x i8> %463, i8 %467, i32 31
  %469 = shufflevector <32 x i8> %468, <32 x i8> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %470 = add nsw i64 %indvars.iv, %261
  %471 = shl nsw i64 %470, 5
  %472 = getelementptr inbounds i8, i8* %input_bounded, i64 %471
  %473 = bitcast i8* %472 to <16 x i8>*
  store <16 x i8> %469, <16 x i8>* %473, align 16, !tbaa !395
  %474 = shufflevector <32 x i8> %468, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %475 = getelementptr inbounds i8, i8* %472, i64 16
  %476 = bitcast i8* %475 to <16 x i8>*
  store <16 x i8> %474, <16 x i8>* %476, align 16, !tbaa !395
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %.not381 = icmp eq i64 %indvars.iv.next, %88
  br i1 %.not381, label %"end for input_bounded.s0.x.x", label %"for input_bounded.s0.x.x"

"end for input_bounded.s0.x.x":                   ; preds = %"for input_bounded.s0.x.x", %"for input_bounded.s0.y.rebased"
  %indvars.iv.next513 = add nuw nsw i64 %indvars.iv512, 1
  %.not380 = icmp eq i64 %indvars.iv512, %250
  br i1 %.not380, label %"end for input_bounded.s0.y.rebased", label %"for input_bounded.s0.y.rebased"

"for input_bounded.s0.y.rebased1":                ; preds = %"for input_bounded.s0.y.rebased1.preheader", %"end for input_bounded.s0.x.x.rebased8"
  %indvars.iv521 = phi i64 [ 0, %"for input_bounded.s0.y.rebased1.preheader" ], [ %indvars.iv.next522, %"end for input_bounded.s0.x.x.rebased8" ]
  %indvars.iv.next522 = add nuw nsw i64 %indvars.iv521, 1
  %477 = trunc i64 %indvars.iv.next522 to i32
  %478 = sub i32 %477, %17
  %479 = sub i32 %478, %242
  %480 = add i32 %479, %input_bounded.s0.y.prologue
  %t294 = mul i32 %54, %480
  %481 = add nsw i64 %indvars.iv521, %265
  %482 = mul nsw i64 %481, %93
  %483 = sub i64 %482, %94
  br i1 %63, label %"for input_bounded.s0.x.x4.preheader", label %"end for input_bounded.s0.x.x5", !prof !385

"for input_bounded.s0.x.x4.preheader":            ; preds = %"for input_bounded.s0.y.rebased1"
  %484 = trunc i64 %483 to i32
  %485 = insertelement <32 x i32> undef, i32 %484, i32 0
  %486 = shufflevector <32 x i32> %485, <32 x i32> undef, <32 x i32> zeroinitializer
  %487 = sext i32 %t294 to i64
  br label %"for input_bounded.s0.x.x4"

"end for input_bounded.s0.y.rebased2":            ; preds = %"end for input_bounded.s0.x.x.rebased8", %"end for input_bounded.s0.y.rebased"
  %a29 = add nsw i32 %242, %69
  %488 = icmp slt i32 %a29, 1
  %a28 = select i1 %488, i32 %a29, i32 1
  %489 = icmp sgt i32 %a28, -17
  %t302 = sub nsw i32 %input_bounded.s0.y.epilogue, %5
  br i1 %489, label %"for input_bounded.s0.y.rebased10.preheader", label %"consume input_bounded", !prof !385

"for input_bounded.s0.y.rebased10.preheader":     ; preds = %"end for input_bounded.s0.y.rebased2"
  %a31 = sub i32 %70, %242
  %490 = icmp slt i32 %a31, 17
  %a30 = select i1 %490, i32 %a31, i32 17
  %491 = icmp sgt i32 %a30, -1
  %492 = select i1 %491, i32 %a30, i32 -1
  %a28.op = add nsw i32 %a28, 16
  %493 = zext i32 %a28.op to i64
  br label %"for input_bounded.s0.y.rebased10"

"for input_bounded.s0.x.x4":                      ; preds = %"for input_bounded.s0.x.x4.preheader", %"for input_bounded.s0.x.x4"
  %indvars.iv515 = phi i64 [ 0, %"for input_bounded.s0.x.x4.preheader" ], [ %indvars.iv.next516, %"for input_bounded.s0.x.x4" ]
  %494 = trunc i64 %indvars.iv515 to i32
  %495 = shl nsw i32 %494, 5
  %496 = add i32 %57, %495
  %497 = insertelement <32 x i32> undef, i32 %496, i32 0
  %498 = shufflevector <32 x i32> %497, <32 x i32> undef, <32 x i32> zeroinitializer
  %499 = add nsw <32 x i32> %498, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %500 = shufflevector <32 x i32> %499, <32 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %501 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %500, <4 x i32> %60)
  %502 = shufflevector <32 x i32> %499, <32 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %503 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %502, <4 x i32> %60)
  %504 = shufflevector <32 x i32> %499, <32 x i32> undef, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %505 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %504, <4 x i32> %60)
  %506 = shufflevector <32 x i32> %499, <32 x i32> undef, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %507 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %506, <4 x i32> %60)
  %508 = shufflevector <32 x i32> %499, <32 x i32> undef, <4 x i32> <i32 16, i32 17, i32 18, i32 19>
  %509 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %508, <4 x i32> %60)
  %510 = shufflevector <32 x i32> %499, <32 x i32> undef, <4 x i32> <i32 20, i32 21, i32 22, i32 23>
  %511 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %510, <4 x i32> %60)
  %512 = shufflevector <32 x i32> %499, <32 x i32> undef, <4 x i32> <i32 24, i32 25, i32 26, i32 27>
  %513 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %512, <4 x i32> %60)
  %514 = shufflevector <32 x i32> %499, <32 x i32> undef, <4 x i32> <i32 28, i32 29, i32 30, i32 31>
  %515 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %514, <4 x i32> %60)
  %516 = shufflevector <4 x i32> %515, <4 x i32> poison, <8 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3>
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <16 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 4, i32 5, i32 6, i32 7>
  %518 = shufflevector <16 x i32> %517, <16 x i32> poison, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 12, i32 13, i32 14, i32 15>
  %519 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %501, <4 x i32> %62)
  %520 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %503, <4 x i32> %62)
  %521 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %505, <4 x i32> %62)
  %522 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %507, <4 x i32> %62)
  %523 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %509, <4 x i32> %62)
  %524 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %511, <4 x i32> %62)
  %525 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %513, <4 x i32> %62)
  %526 = shufflevector <32 x i32> %518, <32 x i32> undef, <4 x i32> <i32 28, i32 29, i32 30, i32 31>
  %527 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %526, <4 x i32> %62)
  %528 = shufflevector <4 x i32> %519, <4 x i32> %520, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %529 = shufflevector <4 x i32> %521, <4 x i32> %522, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %530 = shufflevector <4 x i32> %523, <4 x i32> %524, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %531 = shufflevector <4 x i32> %525, <4 x i32> %527, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %532 = shufflevector <8 x i32> %528, <8 x i32> %529, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %533 = shufflevector <8 x i32> %530, <8 x i32> %531, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %534 = shufflevector <16 x i32> %532, <16 x i32> %533, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %535 = add nsw <32 x i32> %534, %486
  %536 = extractelement <32 x i32> %535, i32 0
  %537 = sext i32 %536 to i64
  %538 = getelementptr inbounds i8, i8* %1, i64 %537
  %539 = load i8, i8* %538, align 1, !tbaa !392
  %540 = insertelement <32 x i8> undef, i8 %539, i32 0
  %541 = extractelement <32 x i32> %535, i32 1
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds i8, i8* %1, i64 %542
  %544 = load i8, i8* %543, align 1, !tbaa !392
  %545 = insertelement <32 x i8> %540, i8 %544, i32 1
  %546 = extractelement <32 x i32> %535, i32 2
  %547 = sext i32 %546 to i64
  %548 = getelementptr inbounds i8, i8* %1, i64 %547
  %549 = load i8, i8* %548, align 1, !tbaa !392
  %550 = insertelement <32 x i8> %545, i8 %549, i32 2
  %551 = extractelement <32 x i32> %535, i32 3
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds i8, i8* %1, i64 %552
  %554 = load i8, i8* %553, align 1, !tbaa !392
  %555 = insertelement <32 x i8> %550, i8 %554, i32 3
  %556 = extractelement <32 x i32> %535, i32 4
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds i8, i8* %1, i64 %557
  %559 = load i8, i8* %558, align 1, !tbaa !392
  %560 = insertelement <32 x i8> %555, i8 %559, i32 4
  %561 = extractelement <32 x i32> %535, i32 5
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds i8, i8* %1, i64 %562
  %564 = load i8, i8* %563, align 1, !tbaa !392
  %565 = insertelement <32 x i8> %560, i8 %564, i32 5
  %566 = extractelement <32 x i32> %535, i32 6
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds i8, i8* %1, i64 %567
  %569 = load i8, i8* %568, align 1, !tbaa !392
  %570 = insertelement <32 x i8> %565, i8 %569, i32 6
  %571 = extractelement <32 x i32> %535, i32 7
  %572 = sext i32 %571 to i64
  %573 = getelementptr inbounds i8, i8* %1, i64 %572
  %574 = load i8, i8* %573, align 1, !tbaa !392
  %575 = insertelement <32 x i8> %570, i8 %574, i32 7
  %576 = extractelement <32 x i32> %535, i32 8
  %577 = sext i32 %576 to i64
  %578 = getelementptr inbounds i8, i8* %1, i64 %577
  %579 = load i8, i8* %578, align 1, !tbaa !392
  %580 = insertelement <32 x i8> %575, i8 %579, i32 8
  %581 = extractelement <32 x i32> %535, i32 9
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds i8, i8* %1, i64 %582
  %584 = load i8, i8* %583, align 1, !tbaa !392
  %585 = insertelement <32 x i8> %580, i8 %584, i32 9
  %586 = extractelement <32 x i32> %535, i32 10
  %587 = sext i32 %586 to i64
  %588 = getelementptr inbounds i8, i8* %1, i64 %587
  %589 = load i8, i8* %588, align 1, !tbaa !392
  %590 = insertelement <32 x i8> %585, i8 %589, i32 10
  %591 = extractelement <32 x i32> %535, i32 11
  %592 = sext i32 %591 to i64
  %593 = getelementptr inbounds i8, i8* %1, i64 %592
  %594 = load i8, i8* %593, align 1, !tbaa !392
  %595 = insertelement <32 x i8> %590, i8 %594, i32 11
  %596 = extractelement <32 x i32> %535, i32 12
  %597 = sext i32 %596 to i64
  %598 = getelementptr inbounds i8, i8* %1, i64 %597
  %599 = load i8, i8* %598, align 1, !tbaa !392
  %600 = insertelement <32 x i8> %595, i8 %599, i32 12
  %601 = extractelement <32 x i32> %535, i32 13
  %602 = sext i32 %601 to i64
  %603 = getelementptr inbounds i8, i8* %1, i64 %602
  %604 = load i8, i8* %603, align 1, !tbaa !392
  %605 = insertelement <32 x i8> %600, i8 %604, i32 13
  %606 = extractelement <32 x i32> %535, i32 14
  %607 = sext i32 %606 to i64
  %608 = getelementptr inbounds i8, i8* %1, i64 %607
  %609 = load i8, i8* %608, align 1, !tbaa !392
  %610 = insertelement <32 x i8> %605, i8 %609, i32 14
  %611 = extractelement <32 x i32> %535, i32 15
  %612 = sext i32 %611 to i64
  %613 = getelementptr inbounds i8, i8* %1, i64 %612
  %614 = load i8, i8* %613, align 1, !tbaa !392
  %615 = insertelement <32 x i8> %610, i8 %614, i32 15
  %616 = extractelement <32 x i32> %535, i32 16
  %617 = sext i32 %616 to i64
  %618 = getelementptr inbounds i8, i8* %1, i64 %617
  %619 = load i8, i8* %618, align 1, !tbaa !392
  %620 = insertelement <32 x i8> %615, i8 %619, i32 16
  %621 = extractelement <32 x i32> %535, i32 17
  %622 = sext i32 %621 to i64
  %623 = getelementptr inbounds i8, i8* %1, i64 %622
  %624 = load i8, i8* %623, align 1, !tbaa !392
  %625 = insertelement <32 x i8> %620, i8 %624, i32 17
  %626 = extractelement <32 x i32> %535, i32 18
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds i8, i8* %1, i64 %627
  %629 = load i8, i8* %628, align 1, !tbaa !392
  %630 = insertelement <32 x i8> %625, i8 %629, i32 18
  %631 = extractelement <32 x i32> %535, i32 19
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds i8, i8* %1, i64 %632
  %634 = load i8, i8* %633, align 1, !tbaa !392
  %635 = insertelement <32 x i8> %630, i8 %634, i32 19
  %636 = extractelement <32 x i32> %535, i32 20
  %637 = sext i32 %636 to i64
  %638 = getelementptr inbounds i8, i8* %1, i64 %637
  %639 = load i8, i8* %638, align 1, !tbaa !392
  %640 = insertelement <32 x i8> %635, i8 %639, i32 20
  %641 = extractelement <32 x i32> %535, i32 21
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds i8, i8* %1, i64 %642
  %644 = load i8, i8* %643, align 1, !tbaa !392
  %645 = insertelement <32 x i8> %640, i8 %644, i32 21
  %646 = extractelement <32 x i32> %535, i32 22
  %647 = sext i32 %646 to i64
  %648 = getelementptr inbounds i8, i8* %1, i64 %647
  %649 = load i8, i8* %648, align 1, !tbaa !392
  %650 = insertelement <32 x i8> %645, i8 %649, i32 22
  %651 = extractelement <32 x i32> %535, i32 23
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds i8, i8* %1, i64 %652
  %654 = load i8, i8* %653, align 1, !tbaa !392
  %655 = insertelement <32 x i8> %650, i8 %654, i32 23
  %656 = extractelement <32 x i32> %535, i32 24
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds i8, i8* %1, i64 %657
  %659 = load i8, i8* %658, align 1, !tbaa !392
  %660 = insertelement <32 x i8> %655, i8 %659, i32 24
  %661 = extractelement <32 x i32> %535, i32 25
  %662 = sext i32 %661 to i64
  %663 = getelementptr inbounds i8, i8* %1, i64 %662
  %664 = load i8, i8* %663, align 1, !tbaa !392
  %665 = insertelement <32 x i8> %660, i8 %664, i32 25
  %666 = extractelement <32 x i32> %535, i32 26
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds i8, i8* %1, i64 %667
  %669 = load i8, i8* %668, align 1, !tbaa !392
  %670 = insertelement <32 x i8> %665, i8 %669, i32 26
  %671 = extractelement <32 x i32> %535, i32 27
  %672 = sext i32 %671 to i64
  %673 = getelementptr inbounds i8, i8* %1, i64 %672
  %674 = load i8, i8* %673, align 1, !tbaa !392
  %675 = insertelement <32 x i8> %670, i8 %674, i32 27
  %676 = extractelement <32 x i32> %535, i32 28
  %677 = sext i32 %676 to i64
  %678 = getelementptr inbounds i8, i8* %1, i64 %677
  %679 = load i8, i8* %678, align 1, !tbaa !392
  %680 = insertelement <32 x i8> %675, i8 %679, i32 28
  %681 = extractelement <32 x i32> %535, i32 29
  %682 = sext i32 %681 to i64
  %683 = getelementptr inbounds i8, i8* %1, i64 %682
  %684 = load i8, i8* %683, align 1, !tbaa !392
  %685 = insertelement <32 x i8> %680, i8 %684, i32 29
  %686 = extractelement <32 x i32> %535, i32 30
  %687 = sext i32 %686 to i64
  %688 = getelementptr inbounds i8, i8* %1, i64 %687
  %689 = load i8, i8* %688, align 1, !tbaa !392
  %690 = insertelement <32 x i8> %685, i8 %689, i32 30
  %691 = extractelement <32 x i32> %535, i32 31
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds i8, i8* %1, i64 %692
  %694 = load i8, i8* %693, align 1, !tbaa !392
  %695 = insertelement <32 x i8> %690, i8 %694, i32 31
  %696 = shufflevector <32 x i8> %695, <32 x i8> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %697 = add nsw i64 %indvars.iv515, %487
  %698 = shl nsw i64 %697, 5
  %699 = getelementptr inbounds i8, i8* %input_bounded, i64 %698
  %700 = bitcast i8* %699 to <16 x i8>*
  store <16 x i8> %696, <16 x i8>* %700, align 16, !tbaa !395
  %701 = shufflevector <32 x i8> %695, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %702 = getelementptr inbounds i8, i8* %699, i64 16
  %703 = bitcast i8* %702 to <16 x i8>*
  store <16 x i8> %701, <16 x i8>* %703, align 16, !tbaa !395
  %indvars.iv.next516 = add nuw nsw i64 %indvars.iv515, 1
  %.not379 = icmp eq i64 %indvars.iv515, %90
  br i1 %.not379, label %"end for input_bounded.s0.x.x5", label %"for input_bounded.s0.x.x4"

"end for input_bounded.s0.x.x5":                  ; preds = %"for input_bounded.s0.x.x4", %"for input_bounded.s0.y.rebased1"
  br i1 %65, label %"for input_bounded.s0.x.x.rebased.preheader", label %"end for input_bounded.s0.x.x.rebased", !prof !385

"for input_bounded.s0.x.x.rebased.preheader":     ; preds = %"end for input_bounded.s0.x.x5"
  %704 = add nsw i64 %482, %95
  %t297 = add nsw i32 %t294, %t263
  %705 = sext i32 %t297 to i64
  br label %"for input_bounded.s0.x.x.rebased"

"for input_bounded.s0.x.x.rebased":               ; preds = %"for input_bounded.s0.x.x.rebased.preheader", %"for input_bounded.s0.x.x.rebased"
  %indvars.iv517 = phi i64 [ 0, %"for input_bounded.s0.x.x.rebased.preheader" ], [ %indvars.iv.next518, %"for input_bounded.s0.x.x.rebased" ]
  %706 = add nsw i64 %indvars.iv517, %66
  %707 = shl nsw i64 %706, 5
  %708 = add nsw i64 %707, %704
  %709 = getelementptr inbounds i8, i8* %1, i64 %708
  %710 = getelementptr inbounds i8, i8* %709, i64 31
  %711 = bitcast i8* %710 to <16 x i8>*
  %712 = load <16 x i8>, <16 x i8>* %711, align 1, !tbaa !392
  %713 = getelementptr inbounds i8, i8* %709, i64 47
  %714 = bitcast i8* %713 to <16 x i8>*
  %715 = load <16 x i8>, <16 x i8>* %714, align 1, !tbaa !392
  %716 = add nsw i64 %indvars.iv517, %705
  %717 = shl nsw i64 %716, 5
  %718 = getelementptr inbounds i8, i8* %input_bounded, i64 %717
  %719 = getelementptr inbounds i8, i8* %718, i64 32
  %720 = bitcast i8* %719 to <16 x i8>*
  store <16 x i8> %712, <16 x i8>* %720, align 16, !tbaa !395
  %721 = getelementptr inbounds i8, i8* %718, i64 48
  %722 = bitcast i8* %721 to <16 x i8>*
  store <16 x i8> %715, <16 x i8>* %722, align 16, !tbaa !395
  %indvars.iv.next518 = add nuw nsw i64 %indvars.iv517, 1
  %.not378 = icmp eq i64 %indvars.iv.next518, %91
  br i1 %.not378, label %"end for input_bounded.s0.x.x.rebased", label %"for input_bounded.s0.x.x.rebased"

"end for input_bounded.s0.x.x.rebased":           ; preds = %"for input_bounded.s0.x.x.rebased", %"end for input_bounded.s0.x.x5"
  br i1 %67, label %"for input_bounded.s0.x.x.rebased7.preheader", label %"end for input_bounded.s0.x.x.rebased8", !prof !385

"for input_bounded.s0.x.x.rebased7.preheader":    ; preds = %"end for input_bounded.s0.x.x.rebased"
  %t299 = add nsw i32 %t294, %t264
  %723 = trunc i64 %483 to i32
  %724 = insertelement <32 x i32> undef, i32 %723, i32 0
  %725 = shufflevector <32 x i32> %724, <32 x i32> undef, <32 x i32> zeroinitializer
  %726 = sext i32 %t299 to i64
  br label %"for input_bounded.s0.x.x.rebased7"

"for input_bounded.s0.x.x.rebased7":              ; preds = %"for input_bounded.s0.x.x.rebased7.preheader", %"for input_bounded.s0.x.x.rebased7"
  %indvars.iv519 = phi i64 [ 0, %"for input_bounded.s0.x.x.rebased7.preheader" ], [ %indvars.iv.next520, %"for input_bounded.s0.x.x.rebased7" ]
  %727 = trunc i64 %indvars.iv519 to i32
  %728 = add nsw i32 %t264, %727
  %729 = shl nsw i32 %728, 5
  %730 = add i32 %68, %729
  %731 = insertelement <32 x i32> undef, i32 %730, i32 0
  %732 = shufflevector <32 x i32> %731, <32 x i32> undef, <32 x i32> zeroinitializer
  %733 = add nsw <32 x i32> %732, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %734 = shufflevector <32 x i32> %733, <32 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %735 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %734, <4 x i32> %60)
  %736 = shufflevector <32 x i32> %733, <32 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %737 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %736, <4 x i32> %60)
  %738 = shufflevector <32 x i32> %733, <32 x i32> undef, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %739 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %738, <4 x i32> %60)
  %740 = shufflevector <32 x i32> %733, <32 x i32> undef, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %741 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %740, <4 x i32> %60)
  %742 = shufflevector <32 x i32> %733, <32 x i32> undef, <4 x i32> <i32 16, i32 17, i32 18, i32 19>
  %743 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %742, <4 x i32> %60)
  %744 = shufflevector <32 x i32> %733, <32 x i32> undef, <4 x i32> <i32 20, i32 21, i32 22, i32 23>
  %745 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %744, <4 x i32> %60)
  %746 = shufflevector <32 x i32> %733, <32 x i32> undef, <4 x i32> <i32 24, i32 25, i32 26, i32 27>
  %747 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %746, <4 x i32> %60)
  %748 = shufflevector <32 x i32> %733, <32 x i32> undef, <4 x i32> <i32 28, i32 29, i32 30, i32 31>
  %749 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %748, <4 x i32> %60)
  %750 = shufflevector <4 x i32> %749, <4 x i32> poison, <8 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3>
  %751 = shufflevector <8 x i32> %750, <8 x i32> poison, <16 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 4, i32 5, i32 6, i32 7>
  %752 = shufflevector <16 x i32> %751, <16 x i32> poison, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 12, i32 13, i32 14, i32 15>
  %753 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %735, <4 x i32> %62)
  %754 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %737, <4 x i32> %62)
  %755 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %739, <4 x i32> %62)
  %756 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %741, <4 x i32> %62)
  %757 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %743, <4 x i32> %62)
  %758 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %745, <4 x i32> %62)
  %759 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %747, <4 x i32> %62)
  %760 = shufflevector <32 x i32> %752, <32 x i32> undef, <4 x i32> <i32 28, i32 29, i32 30, i32 31>
  %761 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %760, <4 x i32> %62)
  %762 = shufflevector <4 x i32> %753, <4 x i32> %754, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %763 = shufflevector <4 x i32> %755, <4 x i32> %756, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %764 = shufflevector <4 x i32> %757, <4 x i32> %758, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %765 = shufflevector <4 x i32> %759, <4 x i32> %761, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %766 = shufflevector <8 x i32> %762, <8 x i32> %763, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %767 = shufflevector <8 x i32> %764, <8 x i32> %765, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %768 = shufflevector <16 x i32> %766, <16 x i32> %767, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %769 = add nsw <32 x i32> %768, %725
  %770 = extractelement <32 x i32> %769, i32 0
  %771 = sext i32 %770 to i64
  %772 = getelementptr inbounds i8, i8* %1, i64 %771
  %773 = load i8, i8* %772, align 1, !tbaa !392
  %774 = insertelement <32 x i8> undef, i8 %773, i32 0
  %775 = extractelement <32 x i32> %769, i32 1
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds i8, i8* %1, i64 %776
  %778 = load i8, i8* %777, align 1, !tbaa !392
  %779 = insertelement <32 x i8> %774, i8 %778, i32 1
  %780 = extractelement <32 x i32> %769, i32 2
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds i8, i8* %1, i64 %781
  %783 = load i8, i8* %782, align 1, !tbaa !392
  %784 = insertelement <32 x i8> %779, i8 %783, i32 2
  %785 = extractelement <32 x i32> %769, i32 3
  %786 = sext i32 %785 to i64
  %787 = getelementptr inbounds i8, i8* %1, i64 %786
  %788 = load i8, i8* %787, align 1, !tbaa !392
  %789 = insertelement <32 x i8> %784, i8 %788, i32 3
  %790 = extractelement <32 x i32> %769, i32 4
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds i8, i8* %1, i64 %791
  %793 = load i8, i8* %792, align 1, !tbaa !392
  %794 = insertelement <32 x i8> %789, i8 %793, i32 4
  %795 = extractelement <32 x i32> %769, i32 5
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds i8, i8* %1, i64 %796
  %798 = load i8, i8* %797, align 1, !tbaa !392
  %799 = insertelement <32 x i8> %794, i8 %798, i32 5
  %800 = extractelement <32 x i32> %769, i32 6
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds i8, i8* %1, i64 %801
  %803 = load i8, i8* %802, align 1, !tbaa !392
  %804 = insertelement <32 x i8> %799, i8 %803, i32 6
  %805 = extractelement <32 x i32> %769, i32 7
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds i8, i8* %1, i64 %806
  %808 = load i8, i8* %807, align 1, !tbaa !392
  %809 = insertelement <32 x i8> %804, i8 %808, i32 7
  %810 = extractelement <32 x i32> %769, i32 8
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds i8, i8* %1, i64 %811
  %813 = load i8, i8* %812, align 1, !tbaa !392
  %814 = insertelement <32 x i8> %809, i8 %813, i32 8
  %815 = extractelement <32 x i32> %769, i32 9
  %816 = sext i32 %815 to i64
  %817 = getelementptr inbounds i8, i8* %1, i64 %816
  %818 = load i8, i8* %817, align 1, !tbaa !392
  %819 = insertelement <32 x i8> %814, i8 %818, i32 9
  %820 = extractelement <32 x i32> %769, i32 10
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds i8, i8* %1, i64 %821
  %823 = load i8, i8* %822, align 1, !tbaa !392
  %824 = insertelement <32 x i8> %819, i8 %823, i32 10
  %825 = extractelement <32 x i32> %769, i32 11
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds i8, i8* %1, i64 %826
  %828 = load i8, i8* %827, align 1, !tbaa !392
  %829 = insertelement <32 x i8> %824, i8 %828, i32 11
  %830 = extractelement <32 x i32> %769, i32 12
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds i8, i8* %1, i64 %831
  %833 = load i8, i8* %832, align 1, !tbaa !392
  %834 = insertelement <32 x i8> %829, i8 %833, i32 12
  %835 = extractelement <32 x i32> %769, i32 13
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds i8, i8* %1, i64 %836
  %838 = load i8, i8* %837, align 1, !tbaa !392
  %839 = insertelement <32 x i8> %834, i8 %838, i32 13
  %840 = extractelement <32 x i32> %769, i32 14
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds i8, i8* %1, i64 %841
  %843 = load i8, i8* %842, align 1, !tbaa !392
  %844 = insertelement <32 x i8> %839, i8 %843, i32 14
  %845 = extractelement <32 x i32> %769, i32 15
  %846 = sext i32 %845 to i64
  %847 = getelementptr inbounds i8, i8* %1, i64 %846
  %848 = load i8, i8* %847, align 1, !tbaa !392
  %849 = insertelement <32 x i8> %844, i8 %848, i32 15
  %850 = extractelement <32 x i32> %769, i32 16
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds i8, i8* %1, i64 %851
  %853 = load i8, i8* %852, align 1, !tbaa !392
  %854 = insertelement <32 x i8> %849, i8 %853, i32 16
  %855 = extractelement <32 x i32> %769, i32 17
  %856 = sext i32 %855 to i64
  %857 = getelementptr inbounds i8, i8* %1, i64 %856
  %858 = load i8, i8* %857, align 1, !tbaa !392
  %859 = insertelement <32 x i8> %854, i8 %858, i32 17
  %860 = extractelement <32 x i32> %769, i32 18
  %861 = sext i32 %860 to i64
  %862 = getelementptr inbounds i8, i8* %1, i64 %861
  %863 = load i8, i8* %862, align 1, !tbaa !392
  %864 = insertelement <32 x i8> %859, i8 %863, i32 18
  %865 = extractelement <32 x i32> %769, i32 19
  %866 = sext i32 %865 to i64
  %867 = getelementptr inbounds i8, i8* %1, i64 %866
  %868 = load i8, i8* %867, align 1, !tbaa !392
  %869 = insertelement <32 x i8> %864, i8 %868, i32 19
  %870 = extractelement <32 x i32> %769, i32 20
  %871 = sext i32 %870 to i64
  %872 = getelementptr inbounds i8, i8* %1, i64 %871
  %873 = load i8, i8* %872, align 1, !tbaa !392
  %874 = insertelement <32 x i8> %869, i8 %873, i32 20
  %875 = extractelement <32 x i32> %769, i32 21
  %876 = sext i32 %875 to i64
  %877 = getelementptr inbounds i8, i8* %1, i64 %876
  %878 = load i8, i8* %877, align 1, !tbaa !392
  %879 = insertelement <32 x i8> %874, i8 %878, i32 21
  %880 = extractelement <32 x i32> %769, i32 22
  %881 = sext i32 %880 to i64
  %882 = getelementptr inbounds i8, i8* %1, i64 %881
  %883 = load i8, i8* %882, align 1, !tbaa !392
  %884 = insertelement <32 x i8> %879, i8 %883, i32 22
  %885 = extractelement <32 x i32> %769, i32 23
  %886 = sext i32 %885 to i64
  %887 = getelementptr inbounds i8, i8* %1, i64 %886
  %888 = load i8, i8* %887, align 1, !tbaa !392
  %889 = insertelement <32 x i8> %884, i8 %888, i32 23
  %890 = extractelement <32 x i32> %769, i32 24
  %891 = sext i32 %890 to i64
  %892 = getelementptr inbounds i8, i8* %1, i64 %891
  %893 = load i8, i8* %892, align 1, !tbaa !392
  %894 = insertelement <32 x i8> %889, i8 %893, i32 24
  %895 = extractelement <32 x i32> %769, i32 25
  %896 = sext i32 %895 to i64
  %897 = getelementptr inbounds i8, i8* %1, i64 %896
  %898 = load i8, i8* %897, align 1, !tbaa !392
  %899 = insertelement <32 x i8> %894, i8 %898, i32 25
  %900 = extractelement <32 x i32> %769, i32 26
  %901 = sext i32 %900 to i64
  %902 = getelementptr inbounds i8, i8* %1, i64 %901
  %903 = load i8, i8* %902, align 1, !tbaa !392
  %904 = insertelement <32 x i8> %899, i8 %903, i32 26
  %905 = extractelement <32 x i32> %769, i32 27
  %906 = sext i32 %905 to i64
  %907 = getelementptr inbounds i8, i8* %1, i64 %906
  %908 = load i8, i8* %907, align 1, !tbaa !392
  %909 = insertelement <32 x i8> %904, i8 %908, i32 27
  %910 = extractelement <32 x i32> %769, i32 28
  %911 = sext i32 %910 to i64
  %912 = getelementptr inbounds i8, i8* %1, i64 %911
  %913 = load i8, i8* %912, align 1, !tbaa !392
  %914 = insertelement <32 x i8> %909, i8 %913, i32 28
  %915 = extractelement <32 x i32> %769, i32 29
  %916 = sext i32 %915 to i64
  %917 = getelementptr inbounds i8, i8* %1, i64 %916
  %918 = load i8, i8* %917, align 1, !tbaa !392
  %919 = insertelement <32 x i8> %914, i8 %918, i32 29
  %920 = extractelement <32 x i32> %769, i32 30
  %921 = sext i32 %920 to i64
  %922 = getelementptr inbounds i8, i8* %1, i64 %921
  %923 = load i8, i8* %922, align 1, !tbaa !392
  %924 = insertelement <32 x i8> %919, i8 %923, i32 30
  %925 = extractelement <32 x i32> %769, i32 31
  %926 = sext i32 %925 to i64
  %927 = getelementptr inbounds i8, i8* %1, i64 %926
  %928 = load i8, i8* %927, align 1, !tbaa !392
  %929 = insertelement <32 x i8> %924, i8 %928, i32 31
  %930 = shufflevector <32 x i8> %929, <32 x i8> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %931 = add nsw i64 %indvars.iv519, %726
  %932 = shl nsw i64 %931, 5
  %933 = getelementptr inbounds i8, i8* %input_bounded, i64 %932
  %934 = getelementptr inbounds i8, i8* %933, i64 32
  %935 = bitcast i8* %934 to <16 x i8>*
  store <16 x i8> %930, <16 x i8>* %935, align 16, !tbaa !395
  %936 = shufflevector <32 x i8> %929, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %937 = getelementptr inbounds i8, i8* %933, i64 48
  %938 = bitcast i8* %937 to <16 x i8>*
  store <16 x i8> %936, <16 x i8>* %938, align 16, !tbaa !395
  %indvars.iv.next520 = add nuw nsw i64 %indvars.iv519, 1
  %.not377 = icmp eq i64 %indvars.iv.next520, %92
  br i1 %.not377, label %"end for input_bounded.s0.x.x.rebased8", label %"for input_bounded.s0.x.x.rebased7"

"end for input_bounded.s0.x.x.rebased8":          ; preds = %"for input_bounded.s0.x.x.rebased7", %"end for input_bounded.s0.x.x.rebased"
  %.not376 = icmp eq i64 %indvars.iv.next522, %266
  br i1 %.not376, label %"end for input_bounded.s0.y.rebased2", label %"for input_bounded.s0.y.rebased1"

"for input_bounded.s0.y.rebased10":               ; preds = %"for input_bounded.s0.y.rebased10.preheader", %"end for input_bounded.s0.x.x14"
  %indvars.iv527 = phi i64 [ 0, %"for input_bounded.s0.y.rebased10.preheader" ], [ %indvars.iv.next528.pre-phi, %"end for input_bounded.s0.x.x14" ]
  %input_bounded.s0.y.rebased12 = phi i32 [ 0, %"for input_bounded.s0.y.rebased10.preheader" ], [ %1159, %"end for input_bounded.s0.x.x14" ]
  %a33 = add nsw i32 %input_bounded.s0.y.rebased12, %t302
  %939 = icmp slt i32 %a33, %b35
  %a32 = select i1 %939, i32 %a33, i32 %b35
  br i1 %56, label %"for input_bounded.s0.x.x13.preheader", label %"for input_bounded.s0.y.rebased10.end for input_bounded.s0.x.x14_crit_edge", !prof !385

"for input_bounded.s0.y.rebased10.end for input_bounded.s0.x.x14_crit_edge": ; preds = %"for input_bounded.s0.y.rebased10"
  %.pre775 = add nuw nsw i64 %indvars.iv527, 1
  br label %"end for input_bounded.s0.x.x14"

"for input_bounded.s0.x.x13.preheader":           ; preds = %"for input_bounded.s0.y.rebased10"
  %940 = icmp sgt i32 %a32, 0
  %941 = select i1 %940, i32 %a32, i32 0
  %942 = mul nsw i32 %941, %7
  %t306 = sub nsw i32 %942, %3
  %943 = add nuw nsw i64 %indvars.iv527, 1
  %944 = trunc i64 %943 to i32
  %945 = add i32 %492, %944
  %t307 = mul i32 %54, %945
  %946 = insertelement <32 x i32> undef, i32 %t306, i32 0
  %947 = shufflevector <32 x i32> %946, <32 x i32> undef, <32 x i32> zeroinitializer
  %948 = sext i32 %t307 to i64
  br label %"for input_bounded.s0.x.x13"

"for input_bounded.s0.x.x13":                     ; preds = %"for input_bounded.s0.x.x13.preheader", %"for input_bounded.s0.x.x13"
  %indvars.iv525 = phi i64 [ 0, %"for input_bounded.s0.x.x13.preheader" ], [ %indvars.iv.next526, %"for input_bounded.s0.x.x13" ]
  %949 = trunc i64 %indvars.iv525 to i32
  %950 = shl nsw i32 %949, 5
  %951 = add i32 %57, %950
  %952 = insertelement <32 x i32> undef, i32 %951, i32 0
  %953 = shufflevector <32 x i32> %952, <32 x i32> undef, <32 x i32> zeroinitializer
  %954 = add nsw <32 x i32> %953, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %955 = shufflevector <32 x i32> %954, <32 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %956 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %955, <4 x i32> %60)
  %957 = shufflevector <32 x i32> %954, <32 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %958 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %957, <4 x i32> %60)
  %959 = shufflevector <32 x i32> %954, <32 x i32> undef, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %960 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %959, <4 x i32> %60)
  %961 = shufflevector <32 x i32> %954, <32 x i32> undef, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %962 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %961, <4 x i32> %60)
  %963 = shufflevector <32 x i32> %954, <32 x i32> undef, <4 x i32> <i32 16, i32 17, i32 18, i32 19>
  %964 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %963, <4 x i32> %60)
  %965 = shufflevector <32 x i32> %954, <32 x i32> undef, <4 x i32> <i32 20, i32 21, i32 22, i32 23>
  %966 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %965, <4 x i32> %60)
  %967 = shufflevector <32 x i32> %954, <32 x i32> undef, <4 x i32> <i32 24, i32 25, i32 26, i32 27>
  %968 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %967, <4 x i32> %60)
  %969 = shufflevector <32 x i32> %954, <32 x i32> undef, <4 x i32> <i32 28, i32 29, i32 30, i32 31>
  %970 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %969, <4 x i32> %60)
  %971 = shufflevector <4 x i32> %970, <4 x i32> poison, <8 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3>
  %972 = shufflevector <8 x i32> %971, <8 x i32> poison, <16 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 4, i32 5, i32 6, i32 7>
  %973 = shufflevector <16 x i32> %972, <16 x i32> poison, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 12, i32 13, i32 14, i32 15>
  %974 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %956, <4 x i32> %62)
  %975 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %958, <4 x i32> %62)
  %976 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %960, <4 x i32> %62)
  %977 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %962, <4 x i32> %62)
  %978 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %964, <4 x i32> %62)
  %979 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %966, <4 x i32> %62)
  %980 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %968, <4 x i32> %62)
  %981 = shufflevector <32 x i32> %973, <32 x i32> undef, <4 x i32> <i32 28, i32 29, i32 30, i32 31>
  %982 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %981, <4 x i32> %62)
  %983 = shufflevector <4 x i32> %974, <4 x i32> %975, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %984 = shufflevector <4 x i32> %976, <4 x i32> %977, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %985 = shufflevector <4 x i32> %978, <4 x i32> %979, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %986 = shufflevector <4 x i32> %980, <4 x i32> %982, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %987 = shufflevector <8 x i32> %983, <8 x i32> %984, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %988 = shufflevector <8 x i32> %985, <8 x i32> %986, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %989 = shufflevector <16 x i32> %987, <16 x i32> %988, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %990 = add nsw <32 x i32> %989, %947
  %991 = extractelement <32 x i32> %990, i32 0
  %992 = sext i32 %991 to i64
  %993 = getelementptr inbounds i8, i8* %1, i64 %992
  %994 = load i8, i8* %993, align 1, !tbaa !392
  %995 = insertelement <32 x i8> undef, i8 %994, i32 0
  %996 = extractelement <32 x i32> %990, i32 1
  %997 = sext i32 %996 to i64
  %998 = getelementptr inbounds i8, i8* %1, i64 %997
  %999 = load i8, i8* %998, align 1, !tbaa !392
  %1000 = insertelement <32 x i8> %995, i8 %999, i32 1
  %1001 = extractelement <32 x i32> %990, i32 2
  %1002 = sext i32 %1001 to i64
  %1003 = getelementptr inbounds i8, i8* %1, i64 %1002
  %1004 = load i8, i8* %1003, align 1, !tbaa !392
  %1005 = insertelement <32 x i8> %1000, i8 %1004, i32 2
  %1006 = extractelement <32 x i32> %990, i32 3
  %1007 = sext i32 %1006 to i64
  %1008 = getelementptr inbounds i8, i8* %1, i64 %1007
  %1009 = load i8, i8* %1008, align 1, !tbaa !392
  %1010 = insertelement <32 x i8> %1005, i8 %1009, i32 3
  %1011 = extractelement <32 x i32> %990, i32 4
  %1012 = sext i32 %1011 to i64
  %1013 = getelementptr inbounds i8, i8* %1, i64 %1012
  %1014 = load i8, i8* %1013, align 1, !tbaa !392
  %1015 = insertelement <32 x i8> %1010, i8 %1014, i32 4
  %1016 = extractelement <32 x i32> %990, i32 5
  %1017 = sext i32 %1016 to i64
  %1018 = getelementptr inbounds i8, i8* %1, i64 %1017
  %1019 = load i8, i8* %1018, align 1, !tbaa !392
  %1020 = insertelement <32 x i8> %1015, i8 %1019, i32 5
  %1021 = extractelement <32 x i32> %990, i32 6
  %1022 = sext i32 %1021 to i64
  %1023 = getelementptr inbounds i8, i8* %1, i64 %1022
  %1024 = load i8, i8* %1023, align 1, !tbaa !392
  %1025 = insertelement <32 x i8> %1020, i8 %1024, i32 6
  %1026 = extractelement <32 x i32> %990, i32 7
  %1027 = sext i32 %1026 to i64
  %1028 = getelementptr inbounds i8, i8* %1, i64 %1027
  %1029 = load i8, i8* %1028, align 1, !tbaa !392
  %1030 = insertelement <32 x i8> %1025, i8 %1029, i32 7
  %1031 = extractelement <32 x i32> %990, i32 8
  %1032 = sext i32 %1031 to i64
  %1033 = getelementptr inbounds i8, i8* %1, i64 %1032
  %1034 = load i8, i8* %1033, align 1, !tbaa !392
  %1035 = insertelement <32 x i8> %1030, i8 %1034, i32 8
  %1036 = extractelement <32 x i32> %990, i32 9
  %1037 = sext i32 %1036 to i64
  %1038 = getelementptr inbounds i8, i8* %1, i64 %1037
  %1039 = load i8, i8* %1038, align 1, !tbaa !392
  %1040 = insertelement <32 x i8> %1035, i8 %1039, i32 9
  %1041 = extractelement <32 x i32> %990, i32 10
  %1042 = sext i32 %1041 to i64
  %1043 = getelementptr inbounds i8, i8* %1, i64 %1042
  %1044 = load i8, i8* %1043, align 1, !tbaa !392
  %1045 = insertelement <32 x i8> %1040, i8 %1044, i32 10
  %1046 = extractelement <32 x i32> %990, i32 11
  %1047 = sext i32 %1046 to i64
  %1048 = getelementptr inbounds i8, i8* %1, i64 %1047
  %1049 = load i8, i8* %1048, align 1, !tbaa !392
  %1050 = insertelement <32 x i8> %1045, i8 %1049, i32 11
  %1051 = extractelement <32 x i32> %990, i32 12
  %1052 = sext i32 %1051 to i64
  %1053 = getelementptr inbounds i8, i8* %1, i64 %1052
  %1054 = load i8, i8* %1053, align 1, !tbaa !392
  %1055 = insertelement <32 x i8> %1050, i8 %1054, i32 12
  %1056 = extractelement <32 x i32> %990, i32 13
  %1057 = sext i32 %1056 to i64
  %1058 = getelementptr inbounds i8, i8* %1, i64 %1057
  %1059 = load i8, i8* %1058, align 1, !tbaa !392
  %1060 = insertelement <32 x i8> %1055, i8 %1059, i32 13
  %1061 = extractelement <32 x i32> %990, i32 14
  %1062 = sext i32 %1061 to i64
  %1063 = getelementptr inbounds i8, i8* %1, i64 %1062
  %1064 = load i8, i8* %1063, align 1, !tbaa !392
  %1065 = insertelement <32 x i8> %1060, i8 %1064, i32 14
  %1066 = extractelement <32 x i32> %990, i32 15
  %1067 = sext i32 %1066 to i64
  %1068 = getelementptr inbounds i8, i8* %1, i64 %1067
  %1069 = load i8, i8* %1068, align 1, !tbaa !392
  %1070 = insertelement <32 x i8> %1065, i8 %1069, i32 15
  %1071 = extractelement <32 x i32> %990, i32 16
  %1072 = sext i32 %1071 to i64
  %1073 = getelementptr inbounds i8, i8* %1, i64 %1072
  %1074 = load i8, i8* %1073, align 1, !tbaa !392
  %1075 = insertelement <32 x i8> %1070, i8 %1074, i32 16
  %1076 = extractelement <32 x i32> %990, i32 17
  %1077 = sext i32 %1076 to i64
  %1078 = getelementptr inbounds i8, i8* %1, i64 %1077
  %1079 = load i8, i8* %1078, align 1, !tbaa !392
  %1080 = insertelement <32 x i8> %1075, i8 %1079, i32 17
  %1081 = extractelement <32 x i32> %990, i32 18
  %1082 = sext i32 %1081 to i64
  %1083 = getelementptr inbounds i8, i8* %1, i64 %1082
  %1084 = load i8, i8* %1083, align 1, !tbaa !392
  %1085 = insertelement <32 x i8> %1080, i8 %1084, i32 18
  %1086 = extractelement <32 x i32> %990, i32 19
  %1087 = sext i32 %1086 to i64
  %1088 = getelementptr inbounds i8, i8* %1, i64 %1087
  %1089 = load i8, i8* %1088, align 1, !tbaa !392
  %1090 = insertelement <32 x i8> %1085, i8 %1089, i32 19
  %1091 = extractelement <32 x i32> %990, i32 20
  %1092 = sext i32 %1091 to i64
  %1093 = getelementptr inbounds i8, i8* %1, i64 %1092
  %1094 = load i8, i8* %1093, align 1, !tbaa !392
  %1095 = insertelement <32 x i8> %1090, i8 %1094, i32 20
  %1096 = extractelement <32 x i32> %990, i32 21
  %1097 = sext i32 %1096 to i64
  %1098 = getelementptr inbounds i8, i8* %1, i64 %1097
  %1099 = load i8, i8* %1098, align 1, !tbaa !392
  %1100 = insertelement <32 x i8> %1095, i8 %1099, i32 21
  %1101 = extractelement <32 x i32> %990, i32 22
  %1102 = sext i32 %1101 to i64
  %1103 = getelementptr inbounds i8, i8* %1, i64 %1102
  %1104 = load i8, i8* %1103, align 1, !tbaa !392
  %1105 = insertelement <32 x i8> %1100, i8 %1104, i32 22
  %1106 = extractelement <32 x i32> %990, i32 23
  %1107 = sext i32 %1106 to i64
  %1108 = getelementptr inbounds i8, i8* %1, i64 %1107
  %1109 = load i8, i8* %1108, align 1, !tbaa !392
  %1110 = insertelement <32 x i8> %1105, i8 %1109, i32 23
  %1111 = extractelement <32 x i32> %990, i32 24
  %1112 = sext i32 %1111 to i64
  %1113 = getelementptr inbounds i8, i8* %1, i64 %1112
  %1114 = load i8, i8* %1113, align 1, !tbaa !392
  %1115 = insertelement <32 x i8> %1110, i8 %1114, i32 24
  %1116 = extractelement <32 x i32> %990, i32 25
  %1117 = sext i32 %1116 to i64
  %1118 = getelementptr inbounds i8, i8* %1, i64 %1117
  %1119 = load i8, i8* %1118, align 1, !tbaa !392
  %1120 = insertelement <32 x i8> %1115, i8 %1119, i32 25
  %1121 = extractelement <32 x i32> %990, i32 26
  %1122 = sext i32 %1121 to i64
  %1123 = getelementptr inbounds i8, i8* %1, i64 %1122
  %1124 = load i8, i8* %1123, align 1, !tbaa !392
  %1125 = insertelement <32 x i8> %1120, i8 %1124, i32 26
  %1126 = extractelement <32 x i32> %990, i32 27
  %1127 = sext i32 %1126 to i64
  %1128 = getelementptr inbounds i8, i8* %1, i64 %1127
  %1129 = load i8, i8* %1128, align 1, !tbaa !392
  %1130 = insertelement <32 x i8> %1125, i8 %1129, i32 27
  %1131 = extractelement <32 x i32> %990, i32 28
  %1132 = sext i32 %1131 to i64
  %1133 = getelementptr inbounds i8, i8* %1, i64 %1132
  %1134 = load i8, i8* %1133, align 1, !tbaa !392
  %1135 = insertelement <32 x i8> %1130, i8 %1134, i32 28
  %1136 = extractelement <32 x i32> %990, i32 29
  %1137 = sext i32 %1136 to i64
  %1138 = getelementptr inbounds i8, i8* %1, i64 %1137
  %1139 = load i8, i8* %1138, align 1, !tbaa !392
  %1140 = insertelement <32 x i8> %1135, i8 %1139, i32 29
  %1141 = extractelement <32 x i32> %990, i32 30
  %1142 = sext i32 %1141 to i64
  %1143 = getelementptr inbounds i8, i8* %1, i64 %1142
  %1144 = load i8, i8* %1143, align 1, !tbaa !392
  %1145 = insertelement <32 x i8> %1140, i8 %1144, i32 30
  %1146 = extractelement <32 x i32> %990, i32 31
  %1147 = sext i32 %1146 to i64
  %1148 = getelementptr inbounds i8, i8* %1, i64 %1147
  %1149 = load i8, i8* %1148, align 1, !tbaa !392
  %1150 = insertelement <32 x i8> %1145, i8 %1149, i32 31
  %1151 = shufflevector <32 x i8> %1150, <32 x i8> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1152 = add nsw i64 %indvars.iv525, %948
  %1153 = shl nsw i64 %1152, 5
  %1154 = getelementptr inbounds i8, i8* %input_bounded, i64 %1153
  %1155 = bitcast i8* %1154 to <16 x i8>*
  store <16 x i8> %1151, <16 x i8>* %1155, align 16, !tbaa !395
  %1156 = shufflevector <32 x i8> %1150, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1157 = getelementptr inbounds i8, i8* %1154, i64 16
  %1158 = bitcast i8* %1157 to <16 x i8>*
  store <16 x i8> %1156, <16 x i8>* %1158, align 16, !tbaa !395
  %indvars.iv.next526 = add nuw nsw i64 %indvars.iv525, 1
  %.not375 = icmp eq i64 %indvars.iv.next526, %88
  br i1 %.not375, label %"end for input_bounded.s0.x.x14", label %"for input_bounded.s0.x.x13"

"end for input_bounded.s0.x.x14":                 ; preds = %"for input_bounded.s0.x.x13", %"for input_bounded.s0.y.rebased10.end for input_bounded.s0.x.x14_crit_edge"
  %indvars.iv.next528.pre-phi = phi i64 [ %.pre775, %"for input_bounded.s0.y.rebased10.end for input_bounded.s0.x.x14_crit_edge" ], [ %943, %"for input_bounded.s0.x.x13" ]
  %1159 = add nuw nsw i32 %input_bounded.s0.y.rebased12, 1
  %.not374 = icmp eq i64 %indvars.iv527, %493
  br i1 %.not374, label %"consume input_bounded", label %"for input_bounded.s0.y.rebased10"

"consume input_bounded":                          ; preds = %"end for input_bounded.s0.x.x14", %"end for input_bounded.s0.y.rebased2"
  %t313 = mul i32 %242, %19
  %1160 = add nsw i32 %t378, 15
  %1161 = mul nsw i32 %1160, %19
  %t343 = sub i32 %1161, %37
  %1162 = add nsw i32 %t378, 14
  %1163 = mul nsw i32 %1162, %19
  %t341 = sub i32 %1163, %37
  %1164 = add nsw i32 %t378, 13
  %1165 = mul nsw i32 %1164, %19
  %t339 = sub i32 %1165, %37
  %1166 = add nsw i32 %t378, 12
  %1167 = mul nsw i32 %1166, %19
  %t337 = sub i32 %1167, %37
  %1168 = add nsw i32 %t378, 11
  %1169 = mul nsw i32 %1168, %19
  %t335 = sub i32 %1169, %37
  %1170 = add nsw i32 %t378, 10
  %1171 = mul nsw i32 %1170, %19
  %t333 = sub i32 %1171, %37
  %1172 = add nsw i32 %t378, 9
  %1173 = mul nsw i32 %1172, %19
  %t331 = sub i32 %1173, %37
  %1174 = add nsw i32 %t378, 8
  %1175 = mul nsw i32 %1174, %19
  %t329 = sub i32 %1175, %37
  %1176 = add nsw i32 %t378, 7
  %1177 = mul nsw i32 %1176, %19
  %t327 = sub i32 %1177, %37
  %1178 = add nsw i32 %t378, 6
  %1179 = mul nsw i32 %1178, %19
  %t325 = sub i32 %1179, %37
  %1180 = add nsw i32 %t378, 5
  %1181 = mul nsw i32 %1180, %19
  %t323 = sub i32 %1181, %37
  %1182 = add nsw i32 %t378, 4
  %1183 = mul nsw i32 %1182, %19
  %t321 = sub i32 %1183, %37
  %1184 = add nsw i32 %t378, 3
  %1185 = mul nsw i32 %1184, %19
  %t319 = sub i32 %1185, %37
  %1186 = add nsw i32 %t378, 2
  %1187 = mul nsw i32 %1186, %19
  %t317 = sub i32 %1187, %37
  %1188 = add nsw i32 %t378, 1
  %1189 = mul nsw i32 %1188, %19
  %t315 = sub i32 %1189, %37
  br i1 %73, label %"for output.s0.x.x.preheader", label %"end for output.s0.x.x", !prof !385

"for output.s0.x.x.preheader":                    ; preds = %"consume input_bounded"
  %1190 = load i8, i8* %75, align 1, !tbaa !397
  %1191 = insertelement <32 x i8> undef, i8 %1190, i32 0
  %1192 = shufflevector <32 x i8> %1191, <32 x i8> undef, <32 x i32> zeroinitializer
  %1193 = sext <32 x i8> %1192 to <32 x i16>
  %1194 = load i8, i8* %77, align 1, !tbaa !397
  %1195 = insertelement <32 x i8> undef, i8 %1194, i32 0
  %1196 = shufflevector <32 x i8> %1195, <32 x i8> undef, <32 x i32> zeroinitializer
  %1197 = sext <32 x i8> %1196 to <32 x i16>
  %1198 = load i8, i8* %79, align 1, !tbaa !397
  %1199 = insertelement <32 x i8> undef, i8 %1198, i32 0
  %1200 = shufflevector <32 x i8> %1199, <32 x i8> undef, <32 x i32> zeroinitializer
  %1201 = sext <32 x i8> %1200 to <32 x i16>
  %1202 = load i8, i8* %81, align 1, !tbaa !397
  %1203 = insertelement <32 x i8> undef, i8 %1202, i32 0
  %1204 = shufflevector <32 x i8> %1203, <32 x i8> undef, <32 x i32> zeroinitializer
  %1205 = sext <32 x i8> %1204 to <32 x i16>
  %1206 = load i8, i8* %82, align 1, !tbaa !397
  %1207 = insertelement <32 x i8> undef, i8 %1206, i32 0
  %1208 = shufflevector <32 x i8> %1207, <32 x i8> undef, <32 x i32> zeroinitializer
  %1209 = sext <32 x i8> %1208 to <32 x i16>
  %1210 = load i8, i8* %83, align 1, !tbaa !397
  %1211 = insertelement <32 x i8> undef, i8 %1210, i32 0
  %1212 = shufflevector <32 x i8> %1211, <32 x i8> undef, <32 x i32> zeroinitializer
  %1213 = sext <32 x i8> %1212 to <32 x i16>
  %1214 = load i8, i8* %85, align 1, !tbaa !397
  %1215 = insertelement <32 x i8> undef, i8 %1214, i32 0
  %1216 = shufflevector <32 x i8> %1215, <32 x i8> undef, <32 x i32> zeroinitializer
  %1217 = sext <32 x i8> %1216 to <32 x i16>
  %1218 = load i8, i8* %86, align 1, !tbaa !397
  %1219 = insertelement <32 x i8> undef, i8 %1218, i32 0
  %1220 = shufflevector <32 x i8> %1219, <32 x i8> undef, <32 x i32> zeroinitializer
  %1221 = sext <32 x i8> %1220 to <32 x i16>
  %1222 = load i8, i8* %87, align 1, !tbaa !397
  %1223 = insertelement <32 x i8> undef, i8 %1222, i32 0
  %1224 = shufflevector <32 x i8> %1223, <32 x i8> undef, <32 x i32> zeroinitializer
  %1225 = sext <32 x i8> %1224 to <32 x i16>
  br label %"for output.s0.x.x"

"for output.s0.x.x":                              ; preds = %"for output.s0.x.x.preheader", %"end for output.s0.x.xi.xi59"
  %indvars.iv610 = phi i64 [ 0, %"for output.s0.x.x.preheader" ], [ %indvars.iv.next611, %"end for output.s0.x.xi.xi59" ]
  %1226 = trunc i64 %indvars.iv610 to i32
  %1227 = shl nsw i32 %1226, 6
  %t347 = add nsw i32 %1227, %t313
  %1228 = shl nuw nsw i64 %indvars.iv610, 1
  %1229 = add nsw i64 %1228, %96
  %1230 = sext i32 %t347 to i64
  br label %"for output.s0.x.xi.xi"

"end for output.s0.x.x":                          ; preds = %"end for output.s0.x.xi.xi59", %"consume input_bounded"
  %indvars.iv.next629 = add nuw nsw i64 %indvars.iv628, 1
  %1231 = icmp eq i64 %indvars.iv.next629, %zext
  br i1 %1231, label %"end for output.s0.y.y.loopexit", label %"for output.s0.y.y"

"for output.s0.x.xi.xi":                          ; preds = %"for output.s0.x.x", %"for output.s0.x.xi.xi"
  %indvars.iv530 = phi i64 [ 0, %"for output.s0.x.x" ], [ %indvars.iv.next531, %"for output.s0.x.xi.xi" ]
  %1232 = add nsw i64 %1229, %indvars.iv530
  %1233 = add nsw i64 %1232, %96
  %1234 = add nsw i64 %1232, %97
  %1235 = shl nsw i64 %1234, 5
  %1236 = getelementptr inbounds i8, i8* %input_bounded, i64 %1235
  %1237 = getelementptr inbounds i8, i8* %1236, i64 1
  %1238 = bitcast i8* %1237 to <16 x i8>*
  %1239 = load <16 x i8>, <16 x i8>* %1238, align 1, !tbaa !395
  %1240 = getelementptr inbounds i8, i8* %1236, i64 17
  %1241 = bitcast i8* %1240 to <16 x i8>*
  %1242 = load <16 x i8>, <16 x i8>* %1241, align 1, !tbaa !395
  %1243 = shufflevector <16 x i8> %1239, <16 x i8> %1242, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1244 = zext <32 x i8> %1243 to <32 x i16>
  %1245 = mul nsw <32 x i16> %1193, %1244
  %1246 = bitcast i8* %1236 to <16 x i8>*
  %1247 = load <16 x i8>, <16 x i8>* %1246, align 16, !tbaa !395
  %1248 = getelementptr inbounds i8, i8* %1236, i64 16
  %1249 = bitcast i8* %1248 to <16 x i8>*
  %1250 = load <16 x i8>, <16 x i8>* %1249, align 16, !tbaa !395
  %1251 = shufflevector <16 x i8> %1247, <16 x i8> %1250, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1252 = zext <32 x i8> %1251 to <32 x i16>
  %1253 = mul nsw <32 x i16> %1197, %1252
  %1254 = getelementptr inbounds i8, i8* %1236, i64 2
  %1255 = bitcast i8* %1254 to <16 x i8>*
  %1256 = load <16 x i8>, <16 x i8>* %1255, align 2, !tbaa !395
  %1257 = getelementptr inbounds i8, i8* %1236, i64 18
  %1258 = bitcast i8* %1257 to <16 x i8>*
  %1259 = load <16 x i8>, <16 x i8>* %1258, align 2, !tbaa !395
  %1260 = shufflevector <16 x i8> %1256, <16 x i8> %1259, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1261 = zext <32 x i8> %1260 to <32 x i16>
  %1262 = mul nsw <32 x i16> %1201, %1261
  %1263 = shl nsw i64 %1232, 5
  %1264 = getelementptr inbounds i8, i8* %input_bounded, i64 %1263
  %1265 = bitcast i8* %1264 to <16 x i8>*
  %1266 = load <16 x i8>, <16 x i8>* %1265, align 16, !tbaa !395
  %1267 = getelementptr inbounds i8, i8* %1264, i64 16
  %1268 = bitcast i8* %1267 to <16 x i8>*
  %1269 = load <16 x i8>, <16 x i8>* %1268, align 16, !tbaa !395
  %1270 = shufflevector <16 x i8> %1266, <16 x i8> %1269, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1271 = zext <32 x i8> %1270 to <32 x i16>
  %1272 = mul nsw <32 x i16> %1205, %1271
  %1273 = getelementptr inbounds i8, i8* %1264, i64 1
  %1274 = bitcast i8* %1273 to <16 x i8>*
  %1275 = load <16 x i8>, <16 x i8>* %1274, align 1, !tbaa !395
  %1276 = getelementptr inbounds i8, i8* %1264, i64 17
  %1277 = bitcast i8* %1276 to <16 x i8>*
  %1278 = load <16 x i8>, <16 x i8>* %1277, align 1, !tbaa !395
  %1279 = shufflevector <16 x i8> %1275, <16 x i8> %1278, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1280 = zext <32 x i8> %1279 to <32 x i16>
  %1281 = mul nsw <32 x i16> %1209, %1280
  %1282 = getelementptr inbounds i8, i8* %1264, i64 2
  %1283 = bitcast i8* %1282 to <16 x i8>*
  %1284 = load <16 x i8>, <16 x i8>* %1283, align 2, !tbaa !395
  %1285 = getelementptr inbounds i8, i8* %1264, i64 18
  %1286 = bitcast i8* %1285 to <16 x i8>*
  %1287 = load <16 x i8>, <16 x i8>* %1286, align 2, !tbaa !395
  %1288 = shufflevector <16 x i8> %1284, <16 x i8> %1287, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1289 = zext <32 x i8> %1288 to <32 x i16>
  %1290 = mul nsw <32 x i16> %1213, %1289
  %1291 = shl nsw i64 %1233, 5
  %1292 = getelementptr inbounds i8, i8* %input_bounded, i64 %1291
  %1293 = bitcast i8* %1292 to <16 x i8>*
  %1294 = load <16 x i8>, <16 x i8>* %1293, align 16, !tbaa !395
  %1295 = getelementptr inbounds i8, i8* %1292, i64 16
  %1296 = bitcast i8* %1295 to <16 x i8>*
  %1297 = load <16 x i8>, <16 x i8>* %1296, align 16, !tbaa !395
  %1298 = shufflevector <16 x i8> %1294, <16 x i8> %1297, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1299 = zext <32 x i8> %1298 to <32 x i16>
  %1300 = mul nsw <32 x i16> %1217, %1299
  %1301 = getelementptr inbounds i8, i8* %1292, i64 2
  %1302 = bitcast i8* %1301 to <16 x i8>*
  %1303 = load <16 x i8>, <16 x i8>* %1302, align 2, !tbaa !395
  %1304 = getelementptr inbounds i8, i8* %1292, i64 18
  %1305 = bitcast i8* %1304 to <16 x i8>*
  %1306 = load <16 x i8>, <16 x i8>* %1305, align 2, !tbaa !395
  %1307 = shufflevector <16 x i8> %1303, <16 x i8> %1306, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1308 = zext <32 x i8> %1307 to <32 x i16>
  %1309 = mul nsw <32 x i16> %1221, %1308
  %1310 = getelementptr inbounds i8, i8* %1292, i64 1
  %1311 = bitcast i8* %1310 to <16 x i8>*
  %1312 = load <16 x i8>, <16 x i8>* %1311, align 1, !tbaa !395
  %1313 = getelementptr inbounds i8, i8* %1292, i64 17
  %1314 = bitcast i8* %1313 to <16 x i8>*
  %1315 = load <16 x i8>, <16 x i8>* %1314, align 1, !tbaa !395
  %1316 = shufflevector <16 x i8> %1312, <16 x i8> %1315, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1317 = zext <32 x i8> %1316 to <32 x i16>
  %1318 = mul nsw <32 x i16> %1225, %1317
  %1319 = add <32 x i16> %1253, %1245
  %1320 = add <32 x i16> %1319, %1262
  %1321 = add <32 x i16> %1320, %1272
  %1322 = add <32 x i16> %1321, %1281
  %1323 = add <32 x i16> %1322, %1290
  %1324 = add <32 x i16> %1323, %1300
  %1325 = add <32 x i16> %1324, %1309
  %1326 = add <32 x i16> %1325, %1318
  %1327 = shufflevector <32 x i16> %1326, <32 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1328 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1327, i32 4)
  %1329 = shufflevector <32 x i16> %1326, <32 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1330 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1329, i32 4)
  %1331 = shufflevector <32 x i16> %1326, <32 x i16> undef, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %1332 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1331, i32 4)
  %1333 = shufflevector <32 x i16> %1326, <32 x i16> undef, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1334 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1333, i32 4)
  %1335 = shufflevector <8 x i8> %1328, <8 x i8> %1330, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1336 = shufflevector <8 x i8> %1332, <8 x i8> %1334, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1337 = shl nuw nsw i64 %indvars.iv530, 5
  %1338 = add nsw i64 %1337, %1230
  %1339 = getelementptr inbounds i8, i8* %13, i64 %1338
  %1340 = bitcast i8* %1339 to <16 x i8>*
  store <16 x i8> %1335, <16 x i8>* %1340, align 1, !tbaa !399
  %1341 = shufflevector <32 x i8> %1336, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1342 = getelementptr inbounds i8, i8* %1339, i64 16
  %1343 = bitcast i8* %1342 to <16 x i8>*
  store <16 x i8> %1341, <16 x i8>* %1343, align 1, !tbaa !399
  %indvars.iv.next531 = add nuw nsw i64 %indvars.iv530, 1
  %.not357 = icmp eq i64 %indvars.iv.next531, 2
  br i1 %.not357, label %"end for output.s0.x.xi.xi", label %"for output.s0.x.xi.xi"

"end for output.s0.x.xi.xi":                      ; preds = %"for output.s0.x.xi.xi"
  %t349 = add nsw i32 %t315, %1227
  %1344 = add nsw i64 %1228, %113
  %1345 = sext i32 %t349 to i64
  br label %"for output.s0.x.xi.xi16"

"for output.s0.x.xi.xi16":                        ; preds = %"end for output.s0.x.xi.xi", %"for output.s0.x.xi.xi16"
  %indvars.iv535 = phi i64 [ 0, %"end for output.s0.x.xi.xi" ], [ %indvars.iv.next536, %"for output.s0.x.xi.xi16" ]
  %1346 = add nuw nsw i64 %1344, %indvars.iv535
  %1347 = add nsw i64 %1346, %96
  %1348 = add nsw i64 %1346, %97
  %1349 = shl nsw i64 %1348, 5
  %1350 = getelementptr inbounds i8, i8* %input_bounded, i64 %1349
  %1351 = getelementptr inbounds i8, i8* %1350, i64 1
  %1352 = bitcast i8* %1351 to <16 x i8>*
  %1353 = load <16 x i8>, <16 x i8>* %1352, align 1, !tbaa !395
  %1354 = getelementptr inbounds i8, i8* %1350, i64 17
  %1355 = bitcast i8* %1354 to <16 x i8>*
  %1356 = load <16 x i8>, <16 x i8>* %1355, align 1, !tbaa !395
  %1357 = shufflevector <16 x i8> %1353, <16 x i8> %1356, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1358 = zext <32 x i8> %1357 to <32 x i16>
  %1359 = mul nsw <32 x i16> %1358, %1193
  %1360 = bitcast i8* %1350 to <16 x i8>*
  %1361 = load <16 x i8>, <16 x i8>* %1360, align 16, !tbaa !395
  %1362 = getelementptr inbounds i8, i8* %1350, i64 16
  %1363 = bitcast i8* %1362 to <16 x i8>*
  %1364 = load <16 x i8>, <16 x i8>* %1363, align 16, !tbaa !395
  %1365 = shufflevector <16 x i8> %1361, <16 x i8> %1364, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1366 = zext <32 x i8> %1365 to <32 x i16>
  %1367 = mul nsw <32 x i16> %1366, %1197
  %1368 = getelementptr inbounds i8, i8* %1350, i64 2
  %1369 = bitcast i8* %1368 to <16 x i8>*
  %1370 = load <16 x i8>, <16 x i8>* %1369, align 2, !tbaa !395
  %1371 = getelementptr inbounds i8, i8* %1350, i64 18
  %1372 = bitcast i8* %1371 to <16 x i8>*
  %1373 = load <16 x i8>, <16 x i8>* %1372, align 2, !tbaa !395
  %1374 = shufflevector <16 x i8> %1370, <16 x i8> %1373, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1375 = zext <32 x i8> %1374 to <32 x i16>
  %1376 = mul nsw <32 x i16> %1375, %1201
  %1377 = shl nsw i64 %1346, 5
  %1378 = getelementptr inbounds i8, i8* %input_bounded, i64 %1377
  %1379 = bitcast i8* %1378 to <16 x i8>*
  %1380 = load <16 x i8>, <16 x i8>* %1379, align 16, !tbaa !395
  %1381 = getelementptr inbounds i8, i8* %1378, i64 16
  %1382 = bitcast i8* %1381 to <16 x i8>*
  %1383 = load <16 x i8>, <16 x i8>* %1382, align 16, !tbaa !395
  %1384 = shufflevector <16 x i8> %1380, <16 x i8> %1383, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1385 = zext <32 x i8> %1384 to <32 x i16>
  %1386 = mul nsw <32 x i16> %1385, %1205
  %1387 = getelementptr inbounds i8, i8* %1378, i64 1
  %1388 = bitcast i8* %1387 to <16 x i8>*
  %1389 = load <16 x i8>, <16 x i8>* %1388, align 1, !tbaa !395
  %1390 = getelementptr inbounds i8, i8* %1378, i64 17
  %1391 = bitcast i8* %1390 to <16 x i8>*
  %1392 = load <16 x i8>, <16 x i8>* %1391, align 1, !tbaa !395
  %1393 = shufflevector <16 x i8> %1389, <16 x i8> %1392, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1394 = zext <32 x i8> %1393 to <32 x i16>
  %1395 = mul nsw <32 x i16> %1394, %1209
  %1396 = getelementptr inbounds i8, i8* %1378, i64 2
  %1397 = bitcast i8* %1396 to <16 x i8>*
  %1398 = load <16 x i8>, <16 x i8>* %1397, align 2, !tbaa !395
  %1399 = getelementptr inbounds i8, i8* %1378, i64 18
  %1400 = bitcast i8* %1399 to <16 x i8>*
  %1401 = load <16 x i8>, <16 x i8>* %1400, align 2, !tbaa !395
  %1402 = shufflevector <16 x i8> %1398, <16 x i8> %1401, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1403 = zext <32 x i8> %1402 to <32 x i16>
  %1404 = mul nsw <32 x i16> %1403, %1213
  %1405 = shl nsw i64 %1347, 5
  %1406 = getelementptr inbounds i8, i8* %input_bounded, i64 %1405
  %1407 = bitcast i8* %1406 to <16 x i8>*
  %1408 = load <16 x i8>, <16 x i8>* %1407, align 16, !tbaa !395
  %1409 = getelementptr inbounds i8, i8* %1406, i64 16
  %1410 = bitcast i8* %1409 to <16 x i8>*
  %1411 = load <16 x i8>, <16 x i8>* %1410, align 16, !tbaa !395
  %1412 = shufflevector <16 x i8> %1408, <16 x i8> %1411, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1413 = zext <32 x i8> %1412 to <32 x i16>
  %1414 = mul nsw <32 x i16> %1413, %1217
  %1415 = getelementptr inbounds i8, i8* %1406, i64 2
  %1416 = bitcast i8* %1415 to <16 x i8>*
  %1417 = load <16 x i8>, <16 x i8>* %1416, align 2, !tbaa !395
  %1418 = getelementptr inbounds i8, i8* %1406, i64 18
  %1419 = bitcast i8* %1418 to <16 x i8>*
  %1420 = load <16 x i8>, <16 x i8>* %1419, align 2, !tbaa !395
  %1421 = shufflevector <16 x i8> %1417, <16 x i8> %1420, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1422 = zext <32 x i8> %1421 to <32 x i16>
  %1423 = mul nsw <32 x i16> %1422, %1221
  %1424 = getelementptr inbounds i8, i8* %1406, i64 1
  %1425 = bitcast i8* %1424 to <16 x i8>*
  %1426 = load <16 x i8>, <16 x i8>* %1425, align 1, !tbaa !395
  %1427 = getelementptr inbounds i8, i8* %1406, i64 17
  %1428 = bitcast i8* %1427 to <16 x i8>*
  %1429 = load <16 x i8>, <16 x i8>* %1428, align 1, !tbaa !395
  %1430 = shufflevector <16 x i8> %1426, <16 x i8> %1429, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1431 = zext <32 x i8> %1430 to <32 x i16>
  %1432 = mul nsw <32 x i16> %1431, %1225
  %1433 = add <32 x i16> %1367, %1359
  %1434 = add <32 x i16> %1433, %1376
  %1435 = add <32 x i16> %1434, %1386
  %1436 = add <32 x i16> %1435, %1395
  %1437 = add <32 x i16> %1436, %1404
  %1438 = add <32 x i16> %1437, %1414
  %1439 = add <32 x i16> %1438, %1423
  %1440 = add <32 x i16> %1439, %1432
  %1441 = shufflevector <32 x i16> %1440, <32 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1442 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1441, i32 4)
  %1443 = shufflevector <32 x i16> %1440, <32 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1444 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1443, i32 4)
  %1445 = shufflevector <32 x i16> %1440, <32 x i16> undef, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %1446 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1445, i32 4)
  %1447 = shufflevector <32 x i16> %1440, <32 x i16> undef, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1448 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1447, i32 4)
  %1449 = shufflevector <8 x i8> %1442, <8 x i8> %1444, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1450 = shufflevector <8 x i8> %1446, <8 x i8> %1448, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1451 = shl nuw nsw i64 %indvars.iv535, 5
  %1452 = add nsw i64 %1451, %1345
  %1453 = getelementptr inbounds i8, i8* %13, i64 %1452
  %1454 = bitcast i8* %1453 to <16 x i8>*
  store <16 x i8> %1449, <16 x i8>* %1454, align 1, !tbaa !399
  %1455 = shufflevector <32 x i8> %1450, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1456 = getelementptr inbounds i8, i8* %1453, i64 16
  %1457 = bitcast i8* %1456 to <16 x i8>*
  store <16 x i8> %1455, <16 x i8>* %1457, align 1, !tbaa !399
  %indvars.iv.next536 = add nuw nsw i64 %indvars.iv535, 1
  %.not358 = icmp eq i64 %indvars.iv.next536, 2
  br i1 %.not358, label %"end for output.s0.x.xi.xi17", label %"for output.s0.x.xi.xi16"

"end for output.s0.x.xi.xi17":                    ; preds = %"for output.s0.x.xi.xi16"
  %t351 = add nsw i32 %t317, %1227
  %1458 = add nsw i64 %1228, %112
  %1459 = sext i32 %t351 to i64
  br label %"for output.s0.x.xi.xi19"

"for output.s0.x.xi.xi19":                        ; preds = %"end for output.s0.x.xi.xi17", %"for output.s0.x.xi.xi19"
  %indvars.iv540 = phi i64 [ 0, %"end for output.s0.x.xi.xi17" ], [ %indvars.iv.next541, %"for output.s0.x.xi.xi19" ]
  %1460 = add nuw nsw i64 %1458, %indvars.iv540
  %1461 = add nsw i64 %1460, %96
  %1462 = add nsw i64 %1460, %97
  %1463 = shl nsw i64 %1462, 5
  %1464 = getelementptr inbounds i8, i8* %input_bounded, i64 %1463
  %1465 = getelementptr inbounds i8, i8* %1464, i64 1
  %1466 = bitcast i8* %1465 to <16 x i8>*
  %1467 = load <16 x i8>, <16 x i8>* %1466, align 1, !tbaa !395
  %1468 = getelementptr inbounds i8, i8* %1464, i64 17
  %1469 = bitcast i8* %1468 to <16 x i8>*
  %1470 = load <16 x i8>, <16 x i8>* %1469, align 1, !tbaa !395
  %1471 = shufflevector <16 x i8> %1467, <16 x i8> %1470, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1472 = zext <32 x i8> %1471 to <32 x i16>
  %1473 = mul nsw <32 x i16> %1472, %1193
  %1474 = bitcast i8* %1464 to <16 x i8>*
  %1475 = load <16 x i8>, <16 x i8>* %1474, align 16, !tbaa !395
  %1476 = getelementptr inbounds i8, i8* %1464, i64 16
  %1477 = bitcast i8* %1476 to <16 x i8>*
  %1478 = load <16 x i8>, <16 x i8>* %1477, align 16, !tbaa !395
  %1479 = shufflevector <16 x i8> %1475, <16 x i8> %1478, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1480 = zext <32 x i8> %1479 to <32 x i16>
  %1481 = mul nsw <32 x i16> %1480, %1197
  %1482 = getelementptr inbounds i8, i8* %1464, i64 2
  %1483 = bitcast i8* %1482 to <16 x i8>*
  %1484 = load <16 x i8>, <16 x i8>* %1483, align 2, !tbaa !395
  %1485 = getelementptr inbounds i8, i8* %1464, i64 18
  %1486 = bitcast i8* %1485 to <16 x i8>*
  %1487 = load <16 x i8>, <16 x i8>* %1486, align 2, !tbaa !395
  %1488 = shufflevector <16 x i8> %1484, <16 x i8> %1487, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1489 = zext <32 x i8> %1488 to <32 x i16>
  %1490 = mul nsw <32 x i16> %1489, %1201
  %1491 = shl nsw i64 %1460, 5
  %1492 = getelementptr inbounds i8, i8* %input_bounded, i64 %1491
  %1493 = bitcast i8* %1492 to <16 x i8>*
  %1494 = load <16 x i8>, <16 x i8>* %1493, align 16, !tbaa !395
  %1495 = getelementptr inbounds i8, i8* %1492, i64 16
  %1496 = bitcast i8* %1495 to <16 x i8>*
  %1497 = load <16 x i8>, <16 x i8>* %1496, align 16, !tbaa !395
  %1498 = shufflevector <16 x i8> %1494, <16 x i8> %1497, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1499 = zext <32 x i8> %1498 to <32 x i16>
  %1500 = mul nsw <32 x i16> %1499, %1205
  %1501 = getelementptr inbounds i8, i8* %1492, i64 1
  %1502 = bitcast i8* %1501 to <16 x i8>*
  %1503 = load <16 x i8>, <16 x i8>* %1502, align 1, !tbaa !395
  %1504 = getelementptr inbounds i8, i8* %1492, i64 17
  %1505 = bitcast i8* %1504 to <16 x i8>*
  %1506 = load <16 x i8>, <16 x i8>* %1505, align 1, !tbaa !395
  %1507 = shufflevector <16 x i8> %1503, <16 x i8> %1506, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1508 = zext <32 x i8> %1507 to <32 x i16>
  %1509 = mul nsw <32 x i16> %1508, %1209
  %1510 = getelementptr inbounds i8, i8* %1492, i64 2
  %1511 = bitcast i8* %1510 to <16 x i8>*
  %1512 = load <16 x i8>, <16 x i8>* %1511, align 2, !tbaa !395
  %1513 = getelementptr inbounds i8, i8* %1492, i64 18
  %1514 = bitcast i8* %1513 to <16 x i8>*
  %1515 = load <16 x i8>, <16 x i8>* %1514, align 2, !tbaa !395
  %1516 = shufflevector <16 x i8> %1512, <16 x i8> %1515, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1517 = zext <32 x i8> %1516 to <32 x i16>
  %1518 = mul nsw <32 x i16> %1517, %1213
  %1519 = shl nsw i64 %1461, 5
  %1520 = getelementptr inbounds i8, i8* %input_bounded, i64 %1519
  %1521 = bitcast i8* %1520 to <16 x i8>*
  %1522 = load <16 x i8>, <16 x i8>* %1521, align 16, !tbaa !395
  %1523 = getelementptr inbounds i8, i8* %1520, i64 16
  %1524 = bitcast i8* %1523 to <16 x i8>*
  %1525 = load <16 x i8>, <16 x i8>* %1524, align 16, !tbaa !395
  %1526 = shufflevector <16 x i8> %1522, <16 x i8> %1525, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1527 = zext <32 x i8> %1526 to <32 x i16>
  %1528 = mul nsw <32 x i16> %1527, %1217
  %1529 = getelementptr inbounds i8, i8* %1520, i64 2
  %1530 = bitcast i8* %1529 to <16 x i8>*
  %1531 = load <16 x i8>, <16 x i8>* %1530, align 2, !tbaa !395
  %1532 = getelementptr inbounds i8, i8* %1520, i64 18
  %1533 = bitcast i8* %1532 to <16 x i8>*
  %1534 = load <16 x i8>, <16 x i8>* %1533, align 2, !tbaa !395
  %1535 = shufflevector <16 x i8> %1531, <16 x i8> %1534, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1536 = zext <32 x i8> %1535 to <32 x i16>
  %1537 = mul nsw <32 x i16> %1536, %1221
  %1538 = getelementptr inbounds i8, i8* %1520, i64 1
  %1539 = bitcast i8* %1538 to <16 x i8>*
  %1540 = load <16 x i8>, <16 x i8>* %1539, align 1, !tbaa !395
  %1541 = getelementptr inbounds i8, i8* %1520, i64 17
  %1542 = bitcast i8* %1541 to <16 x i8>*
  %1543 = load <16 x i8>, <16 x i8>* %1542, align 1, !tbaa !395
  %1544 = shufflevector <16 x i8> %1540, <16 x i8> %1543, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1545 = zext <32 x i8> %1544 to <32 x i16>
  %1546 = mul nsw <32 x i16> %1545, %1225
  %1547 = add <32 x i16> %1481, %1473
  %1548 = add <32 x i16> %1547, %1490
  %1549 = add <32 x i16> %1548, %1500
  %1550 = add <32 x i16> %1549, %1509
  %1551 = add <32 x i16> %1550, %1518
  %1552 = add <32 x i16> %1551, %1528
  %1553 = add <32 x i16> %1552, %1537
  %1554 = add <32 x i16> %1553, %1546
  %1555 = shufflevector <32 x i16> %1554, <32 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1556 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1555, i32 4)
  %1557 = shufflevector <32 x i16> %1554, <32 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1558 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1557, i32 4)
  %1559 = shufflevector <32 x i16> %1554, <32 x i16> undef, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %1560 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1559, i32 4)
  %1561 = shufflevector <32 x i16> %1554, <32 x i16> undef, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1562 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1561, i32 4)
  %1563 = shufflevector <8 x i8> %1556, <8 x i8> %1558, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1564 = shufflevector <8 x i8> %1560, <8 x i8> %1562, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1565 = shl nuw nsw i64 %indvars.iv540, 5
  %1566 = add nsw i64 %1565, %1459
  %1567 = getelementptr inbounds i8, i8* %13, i64 %1566
  %1568 = bitcast i8* %1567 to <16 x i8>*
  store <16 x i8> %1563, <16 x i8>* %1568, align 1, !tbaa !399
  %1569 = shufflevector <32 x i8> %1564, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1570 = getelementptr inbounds i8, i8* %1567, i64 16
  %1571 = bitcast i8* %1570 to <16 x i8>*
  store <16 x i8> %1569, <16 x i8>* %1571, align 1, !tbaa !399
  %indvars.iv.next541 = add nuw nsw i64 %indvars.iv540, 1
  %.not359 = icmp eq i64 %indvars.iv.next541, 2
  br i1 %.not359, label %"end for output.s0.x.xi.xi20", label %"for output.s0.x.xi.xi19"

"end for output.s0.x.xi.xi20":                    ; preds = %"for output.s0.x.xi.xi19"
  %t353 = add nsw i32 %t319, %1227
  %1572 = add nsw i64 %1228, %111
  %1573 = sext i32 %t353 to i64
  br label %"for output.s0.x.xi.xi22"

"for output.s0.x.xi.xi22":                        ; preds = %"end for output.s0.x.xi.xi20", %"for output.s0.x.xi.xi22"
  %indvars.iv545 = phi i64 [ 0, %"end for output.s0.x.xi.xi20" ], [ %indvars.iv.next546, %"for output.s0.x.xi.xi22" ]
  %1574 = add nuw nsw i64 %1572, %indvars.iv545
  %1575 = add nsw i64 %1574, %96
  %1576 = add nsw i64 %1574, %97
  %1577 = shl nsw i64 %1576, 5
  %1578 = getelementptr inbounds i8, i8* %input_bounded, i64 %1577
  %1579 = getelementptr inbounds i8, i8* %1578, i64 1
  %1580 = bitcast i8* %1579 to <16 x i8>*
  %1581 = load <16 x i8>, <16 x i8>* %1580, align 1, !tbaa !395
  %1582 = getelementptr inbounds i8, i8* %1578, i64 17
  %1583 = bitcast i8* %1582 to <16 x i8>*
  %1584 = load <16 x i8>, <16 x i8>* %1583, align 1, !tbaa !395
  %1585 = shufflevector <16 x i8> %1581, <16 x i8> %1584, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1586 = zext <32 x i8> %1585 to <32 x i16>
  %1587 = mul nsw <32 x i16> %1586, %1193
  %1588 = bitcast i8* %1578 to <16 x i8>*
  %1589 = load <16 x i8>, <16 x i8>* %1588, align 16, !tbaa !395
  %1590 = getelementptr inbounds i8, i8* %1578, i64 16
  %1591 = bitcast i8* %1590 to <16 x i8>*
  %1592 = load <16 x i8>, <16 x i8>* %1591, align 16, !tbaa !395
  %1593 = shufflevector <16 x i8> %1589, <16 x i8> %1592, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1594 = zext <32 x i8> %1593 to <32 x i16>
  %1595 = mul nsw <32 x i16> %1594, %1197
  %1596 = getelementptr inbounds i8, i8* %1578, i64 2
  %1597 = bitcast i8* %1596 to <16 x i8>*
  %1598 = load <16 x i8>, <16 x i8>* %1597, align 2, !tbaa !395
  %1599 = getelementptr inbounds i8, i8* %1578, i64 18
  %1600 = bitcast i8* %1599 to <16 x i8>*
  %1601 = load <16 x i8>, <16 x i8>* %1600, align 2, !tbaa !395
  %1602 = shufflevector <16 x i8> %1598, <16 x i8> %1601, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1603 = zext <32 x i8> %1602 to <32 x i16>
  %1604 = mul nsw <32 x i16> %1603, %1201
  %1605 = shl nsw i64 %1574, 5
  %1606 = getelementptr inbounds i8, i8* %input_bounded, i64 %1605
  %1607 = bitcast i8* %1606 to <16 x i8>*
  %1608 = load <16 x i8>, <16 x i8>* %1607, align 16, !tbaa !395
  %1609 = getelementptr inbounds i8, i8* %1606, i64 16
  %1610 = bitcast i8* %1609 to <16 x i8>*
  %1611 = load <16 x i8>, <16 x i8>* %1610, align 16, !tbaa !395
  %1612 = shufflevector <16 x i8> %1608, <16 x i8> %1611, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1613 = zext <32 x i8> %1612 to <32 x i16>
  %1614 = mul nsw <32 x i16> %1613, %1205
  %1615 = getelementptr inbounds i8, i8* %1606, i64 1
  %1616 = bitcast i8* %1615 to <16 x i8>*
  %1617 = load <16 x i8>, <16 x i8>* %1616, align 1, !tbaa !395
  %1618 = getelementptr inbounds i8, i8* %1606, i64 17
  %1619 = bitcast i8* %1618 to <16 x i8>*
  %1620 = load <16 x i8>, <16 x i8>* %1619, align 1, !tbaa !395
  %1621 = shufflevector <16 x i8> %1617, <16 x i8> %1620, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1622 = zext <32 x i8> %1621 to <32 x i16>
  %1623 = mul nsw <32 x i16> %1622, %1209
  %1624 = getelementptr inbounds i8, i8* %1606, i64 2
  %1625 = bitcast i8* %1624 to <16 x i8>*
  %1626 = load <16 x i8>, <16 x i8>* %1625, align 2, !tbaa !395
  %1627 = getelementptr inbounds i8, i8* %1606, i64 18
  %1628 = bitcast i8* %1627 to <16 x i8>*
  %1629 = load <16 x i8>, <16 x i8>* %1628, align 2, !tbaa !395
  %1630 = shufflevector <16 x i8> %1626, <16 x i8> %1629, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1631 = zext <32 x i8> %1630 to <32 x i16>
  %1632 = mul nsw <32 x i16> %1631, %1213
  %1633 = shl nsw i64 %1575, 5
  %1634 = getelementptr inbounds i8, i8* %input_bounded, i64 %1633
  %1635 = bitcast i8* %1634 to <16 x i8>*
  %1636 = load <16 x i8>, <16 x i8>* %1635, align 16, !tbaa !395
  %1637 = getelementptr inbounds i8, i8* %1634, i64 16
  %1638 = bitcast i8* %1637 to <16 x i8>*
  %1639 = load <16 x i8>, <16 x i8>* %1638, align 16, !tbaa !395
  %1640 = shufflevector <16 x i8> %1636, <16 x i8> %1639, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1641 = zext <32 x i8> %1640 to <32 x i16>
  %1642 = mul nsw <32 x i16> %1641, %1217
  %1643 = getelementptr inbounds i8, i8* %1634, i64 2
  %1644 = bitcast i8* %1643 to <16 x i8>*
  %1645 = load <16 x i8>, <16 x i8>* %1644, align 2, !tbaa !395
  %1646 = getelementptr inbounds i8, i8* %1634, i64 18
  %1647 = bitcast i8* %1646 to <16 x i8>*
  %1648 = load <16 x i8>, <16 x i8>* %1647, align 2, !tbaa !395
  %1649 = shufflevector <16 x i8> %1645, <16 x i8> %1648, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1650 = zext <32 x i8> %1649 to <32 x i16>
  %1651 = mul nsw <32 x i16> %1650, %1221
  %1652 = getelementptr inbounds i8, i8* %1634, i64 1
  %1653 = bitcast i8* %1652 to <16 x i8>*
  %1654 = load <16 x i8>, <16 x i8>* %1653, align 1, !tbaa !395
  %1655 = getelementptr inbounds i8, i8* %1634, i64 17
  %1656 = bitcast i8* %1655 to <16 x i8>*
  %1657 = load <16 x i8>, <16 x i8>* %1656, align 1, !tbaa !395
  %1658 = shufflevector <16 x i8> %1654, <16 x i8> %1657, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1659 = zext <32 x i8> %1658 to <32 x i16>
  %1660 = mul nsw <32 x i16> %1659, %1225
  %1661 = add <32 x i16> %1595, %1587
  %1662 = add <32 x i16> %1661, %1604
  %1663 = add <32 x i16> %1662, %1614
  %1664 = add <32 x i16> %1663, %1623
  %1665 = add <32 x i16> %1664, %1632
  %1666 = add <32 x i16> %1665, %1642
  %1667 = add <32 x i16> %1666, %1651
  %1668 = add <32 x i16> %1667, %1660
  %1669 = shufflevector <32 x i16> %1668, <32 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1670 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1669, i32 4)
  %1671 = shufflevector <32 x i16> %1668, <32 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1672 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1671, i32 4)
  %1673 = shufflevector <32 x i16> %1668, <32 x i16> undef, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %1674 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1673, i32 4)
  %1675 = shufflevector <32 x i16> %1668, <32 x i16> undef, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1676 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1675, i32 4)
  %1677 = shufflevector <8 x i8> %1670, <8 x i8> %1672, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1678 = shufflevector <8 x i8> %1674, <8 x i8> %1676, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1679 = shl nuw nsw i64 %indvars.iv545, 5
  %1680 = add nsw i64 %1679, %1573
  %1681 = getelementptr inbounds i8, i8* %13, i64 %1680
  %1682 = bitcast i8* %1681 to <16 x i8>*
  store <16 x i8> %1677, <16 x i8>* %1682, align 1, !tbaa !399
  %1683 = shufflevector <32 x i8> %1678, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1684 = getelementptr inbounds i8, i8* %1681, i64 16
  %1685 = bitcast i8* %1684 to <16 x i8>*
  store <16 x i8> %1683, <16 x i8>* %1685, align 1, !tbaa !399
  %indvars.iv.next546 = add nuw nsw i64 %indvars.iv545, 1
  %.not360 = icmp eq i64 %indvars.iv.next546, 2
  br i1 %.not360, label %"end for output.s0.x.xi.xi23", label %"for output.s0.x.xi.xi22"

"end for output.s0.x.xi.xi23":                    ; preds = %"for output.s0.x.xi.xi22"
  %t355 = add nsw i32 %t321, %1227
  %1686 = add nsw i64 %1228, %110
  %1687 = sext i32 %t355 to i64
  br label %"for output.s0.x.xi.xi25"

"for output.s0.x.xi.xi25":                        ; preds = %"end for output.s0.x.xi.xi23", %"for output.s0.x.xi.xi25"
  %indvars.iv550 = phi i64 [ 0, %"end for output.s0.x.xi.xi23" ], [ %indvars.iv.next551, %"for output.s0.x.xi.xi25" ]
  %1688 = add nuw nsw i64 %1686, %indvars.iv550
  %1689 = add nsw i64 %1688, %96
  %1690 = add nsw i64 %1688, %97
  %1691 = shl nsw i64 %1690, 5
  %1692 = getelementptr inbounds i8, i8* %input_bounded, i64 %1691
  %1693 = getelementptr inbounds i8, i8* %1692, i64 1
  %1694 = bitcast i8* %1693 to <16 x i8>*
  %1695 = load <16 x i8>, <16 x i8>* %1694, align 1, !tbaa !395
  %1696 = getelementptr inbounds i8, i8* %1692, i64 17
  %1697 = bitcast i8* %1696 to <16 x i8>*
  %1698 = load <16 x i8>, <16 x i8>* %1697, align 1, !tbaa !395
  %1699 = shufflevector <16 x i8> %1695, <16 x i8> %1698, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1700 = zext <32 x i8> %1699 to <32 x i16>
  %1701 = mul nsw <32 x i16> %1700, %1193
  %1702 = bitcast i8* %1692 to <16 x i8>*
  %1703 = load <16 x i8>, <16 x i8>* %1702, align 16, !tbaa !395
  %1704 = getelementptr inbounds i8, i8* %1692, i64 16
  %1705 = bitcast i8* %1704 to <16 x i8>*
  %1706 = load <16 x i8>, <16 x i8>* %1705, align 16, !tbaa !395
  %1707 = shufflevector <16 x i8> %1703, <16 x i8> %1706, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1708 = zext <32 x i8> %1707 to <32 x i16>
  %1709 = mul nsw <32 x i16> %1708, %1197
  %1710 = getelementptr inbounds i8, i8* %1692, i64 2
  %1711 = bitcast i8* %1710 to <16 x i8>*
  %1712 = load <16 x i8>, <16 x i8>* %1711, align 2, !tbaa !395
  %1713 = getelementptr inbounds i8, i8* %1692, i64 18
  %1714 = bitcast i8* %1713 to <16 x i8>*
  %1715 = load <16 x i8>, <16 x i8>* %1714, align 2, !tbaa !395
  %1716 = shufflevector <16 x i8> %1712, <16 x i8> %1715, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1717 = zext <32 x i8> %1716 to <32 x i16>
  %1718 = mul nsw <32 x i16> %1717, %1201
  %1719 = shl nsw i64 %1688, 5
  %1720 = getelementptr inbounds i8, i8* %input_bounded, i64 %1719
  %1721 = bitcast i8* %1720 to <16 x i8>*
  %1722 = load <16 x i8>, <16 x i8>* %1721, align 16, !tbaa !395
  %1723 = getelementptr inbounds i8, i8* %1720, i64 16
  %1724 = bitcast i8* %1723 to <16 x i8>*
  %1725 = load <16 x i8>, <16 x i8>* %1724, align 16, !tbaa !395
  %1726 = shufflevector <16 x i8> %1722, <16 x i8> %1725, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1727 = zext <32 x i8> %1726 to <32 x i16>
  %1728 = mul nsw <32 x i16> %1727, %1205
  %1729 = getelementptr inbounds i8, i8* %1720, i64 1
  %1730 = bitcast i8* %1729 to <16 x i8>*
  %1731 = load <16 x i8>, <16 x i8>* %1730, align 1, !tbaa !395
  %1732 = getelementptr inbounds i8, i8* %1720, i64 17
  %1733 = bitcast i8* %1732 to <16 x i8>*
  %1734 = load <16 x i8>, <16 x i8>* %1733, align 1, !tbaa !395
  %1735 = shufflevector <16 x i8> %1731, <16 x i8> %1734, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1736 = zext <32 x i8> %1735 to <32 x i16>
  %1737 = mul nsw <32 x i16> %1736, %1209
  %1738 = getelementptr inbounds i8, i8* %1720, i64 2
  %1739 = bitcast i8* %1738 to <16 x i8>*
  %1740 = load <16 x i8>, <16 x i8>* %1739, align 2, !tbaa !395
  %1741 = getelementptr inbounds i8, i8* %1720, i64 18
  %1742 = bitcast i8* %1741 to <16 x i8>*
  %1743 = load <16 x i8>, <16 x i8>* %1742, align 2, !tbaa !395
  %1744 = shufflevector <16 x i8> %1740, <16 x i8> %1743, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1745 = zext <32 x i8> %1744 to <32 x i16>
  %1746 = mul nsw <32 x i16> %1745, %1213
  %1747 = shl nsw i64 %1689, 5
  %1748 = getelementptr inbounds i8, i8* %input_bounded, i64 %1747
  %1749 = bitcast i8* %1748 to <16 x i8>*
  %1750 = load <16 x i8>, <16 x i8>* %1749, align 16, !tbaa !395
  %1751 = getelementptr inbounds i8, i8* %1748, i64 16
  %1752 = bitcast i8* %1751 to <16 x i8>*
  %1753 = load <16 x i8>, <16 x i8>* %1752, align 16, !tbaa !395
  %1754 = shufflevector <16 x i8> %1750, <16 x i8> %1753, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1755 = zext <32 x i8> %1754 to <32 x i16>
  %1756 = mul nsw <32 x i16> %1755, %1217
  %1757 = getelementptr inbounds i8, i8* %1748, i64 2
  %1758 = bitcast i8* %1757 to <16 x i8>*
  %1759 = load <16 x i8>, <16 x i8>* %1758, align 2, !tbaa !395
  %1760 = getelementptr inbounds i8, i8* %1748, i64 18
  %1761 = bitcast i8* %1760 to <16 x i8>*
  %1762 = load <16 x i8>, <16 x i8>* %1761, align 2, !tbaa !395
  %1763 = shufflevector <16 x i8> %1759, <16 x i8> %1762, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1764 = zext <32 x i8> %1763 to <32 x i16>
  %1765 = mul nsw <32 x i16> %1764, %1221
  %1766 = getelementptr inbounds i8, i8* %1748, i64 1
  %1767 = bitcast i8* %1766 to <16 x i8>*
  %1768 = load <16 x i8>, <16 x i8>* %1767, align 1, !tbaa !395
  %1769 = getelementptr inbounds i8, i8* %1748, i64 17
  %1770 = bitcast i8* %1769 to <16 x i8>*
  %1771 = load <16 x i8>, <16 x i8>* %1770, align 1, !tbaa !395
  %1772 = shufflevector <16 x i8> %1768, <16 x i8> %1771, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1773 = zext <32 x i8> %1772 to <32 x i16>
  %1774 = mul nsw <32 x i16> %1773, %1225
  %1775 = add <32 x i16> %1709, %1701
  %1776 = add <32 x i16> %1775, %1718
  %1777 = add <32 x i16> %1776, %1728
  %1778 = add <32 x i16> %1777, %1737
  %1779 = add <32 x i16> %1778, %1746
  %1780 = add <32 x i16> %1779, %1756
  %1781 = add <32 x i16> %1780, %1765
  %1782 = add <32 x i16> %1781, %1774
  %1783 = shufflevector <32 x i16> %1782, <32 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1784 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1783, i32 4)
  %1785 = shufflevector <32 x i16> %1782, <32 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1786 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1785, i32 4)
  %1787 = shufflevector <32 x i16> %1782, <32 x i16> undef, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %1788 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1787, i32 4)
  %1789 = shufflevector <32 x i16> %1782, <32 x i16> undef, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1790 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1789, i32 4)
  %1791 = shufflevector <8 x i8> %1784, <8 x i8> %1786, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1792 = shufflevector <8 x i8> %1788, <8 x i8> %1790, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1793 = shl nuw nsw i64 %indvars.iv550, 5
  %1794 = add nsw i64 %1793, %1687
  %1795 = getelementptr inbounds i8, i8* %13, i64 %1794
  %1796 = bitcast i8* %1795 to <16 x i8>*
  store <16 x i8> %1791, <16 x i8>* %1796, align 1, !tbaa !399
  %1797 = shufflevector <32 x i8> %1792, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1798 = getelementptr inbounds i8, i8* %1795, i64 16
  %1799 = bitcast i8* %1798 to <16 x i8>*
  store <16 x i8> %1797, <16 x i8>* %1799, align 1, !tbaa !399
  %indvars.iv.next551 = add nuw nsw i64 %indvars.iv550, 1
  %.not361 = icmp eq i64 %indvars.iv.next551, 2
  br i1 %.not361, label %"end for output.s0.x.xi.xi26", label %"for output.s0.x.xi.xi25"

"end for output.s0.x.xi.xi26":                    ; preds = %"for output.s0.x.xi.xi25"
  %t357 = add nsw i32 %t323, %1227
  %1800 = add nsw i64 %1228, %109
  %1801 = sext i32 %t357 to i64
  br label %"for output.s0.x.xi.xi28"

"for output.s0.x.xi.xi28":                        ; preds = %"end for output.s0.x.xi.xi26", %"for output.s0.x.xi.xi28"
  %indvars.iv555 = phi i64 [ 0, %"end for output.s0.x.xi.xi26" ], [ %indvars.iv.next556, %"for output.s0.x.xi.xi28" ]
  %1802 = add nuw nsw i64 %1800, %indvars.iv555
  %1803 = add nsw i64 %1802, %96
  %1804 = add nsw i64 %1802, %97
  %1805 = shl nsw i64 %1804, 5
  %1806 = getelementptr inbounds i8, i8* %input_bounded, i64 %1805
  %1807 = getelementptr inbounds i8, i8* %1806, i64 1
  %1808 = bitcast i8* %1807 to <16 x i8>*
  %1809 = load <16 x i8>, <16 x i8>* %1808, align 1, !tbaa !395
  %1810 = getelementptr inbounds i8, i8* %1806, i64 17
  %1811 = bitcast i8* %1810 to <16 x i8>*
  %1812 = load <16 x i8>, <16 x i8>* %1811, align 1, !tbaa !395
  %1813 = shufflevector <16 x i8> %1809, <16 x i8> %1812, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1814 = zext <32 x i8> %1813 to <32 x i16>
  %1815 = mul nsw <32 x i16> %1814, %1193
  %1816 = bitcast i8* %1806 to <16 x i8>*
  %1817 = load <16 x i8>, <16 x i8>* %1816, align 16, !tbaa !395
  %1818 = getelementptr inbounds i8, i8* %1806, i64 16
  %1819 = bitcast i8* %1818 to <16 x i8>*
  %1820 = load <16 x i8>, <16 x i8>* %1819, align 16, !tbaa !395
  %1821 = shufflevector <16 x i8> %1817, <16 x i8> %1820, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1822 = zext <32 x i8> %1821 to <32 x i16>
  %1823 = mul nsw <32 x i16> %1822, %1197
  %1824 = getelementptr inbounds i8, i8* %1806, i64 2
  %1825 = bitcast i8* %1824 to <16 x i8>*
  %1826 = load <16 x i8>, <16 x i8>* %1825, align 2, !tbaa !395
  %1827 = getelementptr inbounds i8, i8* %1806, i64 18
  %1828 = bitcast i8* %1827 to <16 x i8>*
  %1829 = load <16 x i8>, <16 x i8>* %1828, align 2, !tbaa !395
  %1830 = shufflevector <16 x i8> %1826, <16 x i8> %1829, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1831 = zext <32 x i8> %1830 to <32 x i16>
  %1832 = mul nsw <32 x i16> %1831, %1201
  %1833 = shl nsw i64 %1802, 5
  %1834 = getelementptr inbounds i8, i8* %input_bounded, i64 %1833
  %1835 = bitcast i8* %1834 to <16 x i8>*
  %1836 = load <16 x i8>, <16 x i8>* %1835, align 16, !tbaa !395
  %1837 = getelementptr inbounds i8, i8* %1834, i64 16
  %1838 = bitcast i8* %1837 to <16 x i8>*
  %1839 = load <16 x i8>, <16 x i8>* %1838, align 16, !tbaa !395
  %1840 = shufflevector <16 x i8> %1836, <16 x i8> %1839, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1841 = zext <32 x i8> %1840 to <32 x i16>
  %1842 = mul nsw <32 x i16> %1841, %1205
  %1843 = getelementptr inbounds i8, i8* %1834, i64 1
  %1844 = bitcast i8* %1843 to <16 x i8>*
  %1845 = load <16 x i8>, <16 x i8>* %1844, align 1, !tbaa !395
  %1846 = getelementptr inbounds i8, i8* %1834, i64 17
  %1847 = bitcast i8* %1846 to <16 x i8>*
  %1848 = load <16 x i8>, <16 x i8>* %1847, align 1, !tbaa !395
  %1849 = shufflevector <16 x i8> %1845, <16 x i8> %1848, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1850 = zext <32 x i8> %1849 to <32 x i16>
  %1851 = mul nsw <32 x i16> %1850, %1209
  %1852 = getelementptr inbounds i8, i8* %1834, i64 2
  %1853 = bitcast i8* %1852 to <16 x i8>*
  %1854 = load <16 x i8>, <16 x i8>* %1853, align 2, !tbaa !395
  %1855 = getelementptr inbounds i8, i8* %1834, i64 18
  %1856 = bitcast i8* %1855 to <16 x i8>*
  %1857 = load <16 x i8>, <16 x i8>* %1856, align 2, !tbaa !395
  %1858 = shufflevector <16 x i8> %1854, <16 x i8> %1857, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1859 = zext <32 x i8> %1858 to <32 x i16>
  %1860 = mul nsw <32 x i16> %1859, %1213
  %1861 = shl nsw i64 %1803, 5
  %1862 = getelementptr inbounds i8, i8* %input_bounded, i64 %1861
  %1863 = bitcast i8* %1862 to <16 x i8>*
  %1864 = load <16 x i8>, <16 x i8>* %1863, align 16, !tbaa !395
  %1865 = getelementptr inbounds i8, i8* %1862, i64 16
  %1866 = bitcast i8* %1865 to <16 x i8>*
  %1867 = load <16 x i8>, <16 x i8>* %1866, align 16, !tbaa !395
  %1868 = shufflevector <16 x i8> %1864, <16 x i8> %1867, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1869 = zext <32 x i8> %1868 to <32 x i16>
  %1870 = mul nsw <32 x i16> %1869, %1217
  %1871 = getelementptr inbounds i8, i8* %1862, i64 2
  %1872 = bitcast i8* %1871 to <16 x i8>*
  %1873 = load <16 x i8>, <16 x i8>* %1872, align 2, !tbaa !395
  %1874 = getelementptr inbounds i8, i8* %1862, i64 18
  %1875 = bitcast i8* %1874 to <16 x i8>*
  %1876 = load <16 x i8>, <16 x i8>* %1875, align 2, !tbaa !395
  %1877 = shufflevector <16 x i8> %1873, <16 x i8> %1876, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1878 = zext <32 x i8> %1877 to <32 x i16>
  %1879 = mul nsw <32 x i16> %1878, %1221
  %1880 = getelementptr inbounds i8, i8* %1862, i64 1
  %1881 = bitcast i8* %1880 to <16 x i8>*
  %1882 = load <16 x i8>, <16 x i8>* %1881, align 1, !tbaa !395
  %1883 = getelementptr inbounds i8, i8* %1862, i64 17
  %1884 = bitcast i8* %1883 to <16 x i8>*
  %1885 = load <16 x i8>, <16 x i8>* %1884, align 1, !tbaa !395
  %1886 = shufflevector <16 x i8> %1882, <16 x i8> %1885, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1887 = zext <32 x i8> %1886 to <32 x i16>
  %1888 = mul nsw <32 x i16> %1887, %1225
  %1889 = add <32 x i16> %1823, %1815
  %1890 = add <32 x i16> %1889, %1832
  %1891 = add <32 x i16> %1890, %1842
  %1892 = add <32 x i16> %1891, %1851
  %1893 = add <32 x i16> %1892, %1860
  %1894 = add <32 x i16> %1893, %1870
  %1895 = add <32 x i16> %1894, %1879
  %1896 = add <32 x i16> %1895, %1888
  %1897 = shufflevector <32 x i16> %1896, <32 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1898 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1897, i32 4)
  %1899 = shufflevector <32 x i16> %1896, <32 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1900 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1899, i32 4)
  %1901 = shufflevector <32 x i16> %1896, <32 x i16> undef, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %1902 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1901, i32 4)
  %1903 = shufflevector <32 x i16> %1896, <32 x i16> undef, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1904 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %1903, i32 4)
  %1905 = shufflevector <8 x i8> %1898, <8 x i8> %1900, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1906 = shufflevector <8 x i8> %1902, <8 x i8> %1904, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1907 = shl nuw nsw i64 %indvars.iv555, 5
  %1908 = add nsw i64 %1907, %1801
  %1909 = getelementptr inbounds i8, i8* %13, i64 %1908
  %1910 = bitcast i8* %1909 to <16 x i8>*
  store <16 x i8> %1905, <16 x i8>* %1910, align 1, !tbaa !399
  %1911 = shufflevector <32 x i8> %1906, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1912 = getelementptr inbounds i8, i8* %1909, i64 16
  %1913 = bitcast i8* %1912 to <16 x i8>*
  store <16 x i8> %1911, <16 x i8>* %1913, align 1, !tbaa !399
  %indvars.iv.next556 = add nuw nsw i64 %indvars.iv555, 1
  %.not362 = icmp eq i64 %indvars.iv.next556, 2
  br i1 %.not362, label %"end for output.s0.x.xi.xi29", label %"for output.s0.x.xi.xi28"

"end for output.s0.x.xi.xi29":                    ; preds = %"for output.s0.x.xi.xi28"
  %t359 = add nsw i32 %t325, %1227
  %1914 = add nsw i64 %1228, %108
  %1915 = sext i32 %t359 to i64
  br label %"for output.s0.x.xi.xi31"

"for output.s0.x.xi.xi31":                        ; preds = %"end for output.s0.x.xi.xi29", %"for output.s0.x.xi.xi31"
  %indvars.iv560 = phi i64 [ 0, %"end for output.s0.x.xi.xi29" ], [ %indvars.iv.next561, %"for output.s0.x.xi.xi31" ]
  %1916 = add nuw nsw i64 %1914, %indvars.iv560
  %1917 = add nsw i64 %1916, %96
  %1918 = add nsw i64 %1916, %97
  %1919 = shl nsw i64 %1918, 5
  %1920 = getelementptr inbounds i8, i8* %input_bounded, i64 %1919
  %1921 = getelementptr inbounds i8, i8* %1920, i64 1
  %1922 = bitcast i8* %1921 to <16 x i8>*
  %1923 = load <16 x i8>, <16 x i8>* %1922, align 1, !tbaa !395
  %1924 = getelementptr inbounds i8, i8* %1920, i64 17
  %1925 = bitcast i8* %1924 to <16 x i8>*
  %1926 = load <16 x i8>, <16 x i8>* %1925, align 1, !tbaa !395
  %1927 = shufflevector <16 x i8> %1923, <16 x i8> %1926, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1928 = zext <32 x i8> %1927 to <32 x i16>
  %1929 = mul nsw <32 x i16> %1928, %1193
  %1930 = bitcast i8* %1920 to <16 x i8>*
  %1931 = load <16 x i8>, <16 x i8>* %1930, align 16, !tbaa !395
  %1932 = getelementptr inbounds i8, i8* %1920, i64 16
  %1933 = bitcast i8* %1932 to <16 x i8>*
  %1934 = load <16 x i8>, <16 x i8>* %1933, align 16, !tbaa !395
  %1935 = shufflevector <16 x i8> %1931, <16 x i8> %1934, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1936 = zext <32 x i8> %1935 to <32 x i16>
  %1937 = mul nsw <32 x i16> %1936, %1197
  %1938 = getelementptr inbounds i8, i8* %1920, i64 2
  %1939 = bitcast i8* %1938 to <16 x i8>*
  %1940 = load <16 x i8>, <16 x i8>* %1939, align 2, !tbaa !395
  %1941 = getelementptr inbounds i8, i8* %1920, i64 18
  %1942 = bitcast i8* %1941 to <16 x i8>*
  %1943 = load <16 x i8>, <16 x i8>* %1942, align 2, !tbaa !395
  %1944 = shufflevector <16 x i8> %1940, <16 x i8> %1943, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1945 = zext <32 x i8> %1944 to <32 x i16>
  %1946 = mul nsw <32 x i16> %1945, %1201
  %1947 = shl nsw i64 %1916, 5
  %1948 = getelementptr inbounds i8, i8* %input_bounded, i64 %1947
  %1949 = bitcast i8* %1948 to <16 x i8>*
  %1950 = load <16 x i8>, <16 x i8>* %1949, align 16, !tbaa !395
  %1951 = getelementptr inbounds i8, i8* %1948, i64 16
  %1952 = bitcast i8* %1951 to <16 x i8>*
  %1953 = load <16 x i8>, <16 x i8>* %1952, align 16, !tbaa !395
  %1954 = shufflevector <16 x i8> %1950, <16 x i8> %1953, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1955 = zext <32 x i8> %1954 to <32 x i16>
  %1956 = mul nsw <32 x i16> %1955, %1205
  %1957 = getelementptr inbounds i8, i8* %1948, i64 1
  %1958 = bitcast i8* %1957 to <16 x i8>*
  %1959 = load <16 x i8>, <16 x i8>* %1958, align 1, !tbaa !395
  %1960 = getelementptr inbounds i8, i8* %1948, i64 17
  %1961 = bitcast i8* %1960 to <16 x i8>*
  %1962 = load <16 x i8>, <16 x i8>* %1961, align 1, !tbaa !395
  %1963 = shufflevector <16 x i8> %1959, <16 x i8> %1962, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1964 = zext <32 x i8> %1963 to <32 x i16>
  %1965 = mul nsw <32 x i16> %1964, %1209
  %1966 = getelementptr inbounds i8, i8* %1948, i64 2
  %1967 = bitcast i8* %1966 to <16 x i8>*
  %1968 = load <16 x i8>, <16 x i8>* %1967, align 2, !tbaa !395
  %1969 = getelementptr inbounds i8, i8* %1948, i64 18
  %1970 = bitcast i8* %1969 to <16 x i8>*
  %1971 = load <16 x i8>, <16 x i8>* %1970, align 2, !tbaa !395
  %1972 = shufflevector <16 x i8> %1968, <16 x i8> %1971, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1973 = zext <32 x i8> %1972 to <32 x i16>
  %1974 = mul nsw <32 x i16> %1973, %1213
  %1975 = shl nsw i64 %1917, 5
  %1976 = getelementptr inbounds i8, i8* %input_bounded, i64 %1975
  %1977 = bitcast i8* %1976 to <16 x i8>*
  %1978 = load <16 x i8>, <16 x i8>* %1977, align 16, !tbaa !395
  %1979 = getelementptr inbounds i8, i8* %1976, i64 16
  %1980 = bitcast i8* %1979 to <16 x i8>*
  %1981 = load <16 x i8>, <16 x i8>* %1980, align 16, !tbaa !395
  %1982 = shufflevector <16 x i8> %1978, <16 x i8> %1981, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1983 = zext <32 x i8> %1982 to <32 x i16>
  %1984 = mul nsw <32 x i16> %1983, %1217
  %1985 = getelementptr inbounds i8, i8* %1976, i64 2
  %1986 = bitcast i8* %1985 to <16 x i8>*
  %1987 = load <16 x i8>, <16 x i8>* %1986, align 2, !tbaa !395
  %1988 = getelementptr inbounds i8, i8* %1976, i64 18
  %1989 = bitcast i8* %1988 to <16 x i8>*
  %1990 = load <16 x i8>, <16 x i8>* %1989, align 2, !tbaa !395
  %1991 = shufflevector <16 x i8> %1987, <16 x i8> %1990, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1992 = zext <32 x i8> %1991 to <32 x i16>
  %1993 = mul nsw <32 x i16> %1992, %1221
  %1994 = getelementptr inbounds i8, i8* %1976, i64 1
  %1995 = bitcast i8* %1994 to <16 x i8>*
  %1996 = load <16 x i8>, <16 x i8>* %1995, align 1, !tbaa !395
  %1997 = getelementptr inbounds i8, i8* %1976, i64 17
  %1998 = bitcast i8* %1997 to <16 x i8>*
  %1999 = load <16 x i8>, <16 x i8>* %1998, align 1, !tbaa !395
  %2000 = shufflevector <16 x i8> %1996, <16 x i8> %1999, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2001 = zext <32 x i8> %2000 to <32 x i16>
  %2002 = mul nsw <32 x i16> %2001, %1225
  %2003 = add <32 x i16> %1937, %1929
  %2004 = add <32 x i16> %2003, %1946
  %2005 = add <32 x i16> %2004, %1956
  %2006 = add <32 x i16> %2005, %1965
  %2007 = add <32 x i16> %2006, %1974
  %2008 = add <32 x i16> %2007, %1984
  %2009 = add <32 x i16> %2008, %1993
  %2010 = add <32 x i16> %2009, %2002
  %2011 = shufflevector <32 x i16> %2010, <32 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %2012 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2011, i32 4)
  %2013 = shufflevector <32 x i16> %2010, <32 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2014 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2013, i32 4)
  %2015 = shufflevector <32 x i16> %2010, <32 x i16> undef, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2016 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2015, i32 4)
  %2017 = shufflevector <32 x i16> %2010, <32 x i16> undef, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2018 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2017, i32 4)
  %2019 = shufflevector <8 x i8> %2012, <8 x i8> %2014, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2020 = shufflevector <8 x i8> %2016, <8 x i8> %2018, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2021 = shl nuw nsw i64 %indvars.iv560, 5
  %2022 = add nsw i64 %2021, %1915
  %2023 = getelementptr inbounds i8, i8* %13, i64 %2022
  %2024 = bitcast i8* %2023 to <16 x i8>*
  store <16 x i8> %2019, <16 x i8>* %2024, align 1, !tbaa !399
  %2025 = shufflevector <32 x i8> %2020, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2026 = getelementptr inbounds i8, i8* %2023, i64 16
  %2027 = bitcast i8* %2026 to <16 x i8>*
  store <16 x i8> %2025, <16 x i8>* %2027, align 1, !tbaa !399
  %indvars.iv.next561 = add nuw nsw i64 %indvars.iv560, 1
  %.not363 = icmp eq i64 %indvars.iv.next561, 2
  br i1 %.not363, label %"end for output.s0.x.xi.xi32", label %"for output.s0.x.xi.xi31"

"end for output.s0.x.xi.xi32":                    ; preds = %"for output.s0.x.xi.xi31"
  %t361 = add nsw i32 %t327, %1227
  %2028 = add nsw i64 %1228, %107
  %2029 = sext i32 %t361 to i64
  br label %"for output.s0.x.xi.xi34"

"for output.s0.x.xi.xi34":                        ; preds = %"end for output.s0.x.xi.xi32", %"for output.s0.x.xi.xi34"
  %indvars.iv565 = phi i64 [ 0, %"end for output.s0.x.xi.xi32" ], [ %indvars.iv.next566, %"for output.s0.x.xi.xi34" ]
  %2030 = add nuw nsw i64 %2028, %indvars.iv565
  %2031 = add nsw i64 %2030, %96
  %2032 = add nsw i64 %2030, %97
  %2033 = shl nsw i64 %2032, 5
  %2034 = getelementptr inbounds i8, i8* %input_bounded, i64 %2033
  %2035 = getelementptr inbounds i8, i8* %2034, i64 1
  %2036 = bitcast i8* %2035 to <16 x i8>*
  %2037 = load <16 x i8>, <16 x i8>* %2036, align 1, !tbaa !395
  %2038 = getelementptr inbounds i8, i8* %2034, i64 17
  %2039 = bitcast i8* %2038 to <16 x i8>*
  %2040 = load <16 x i8>, <16 x i8>* %2039, align 1, !tbaa !395
  %2041 = shufflevector <16 x i8> %2037, <16 x i8> %2040, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2042 = zext <32 x i8> %2041 to <32 x i16>
  %2043 = mul nsw <32 x i16> %2042, %1193
  %2044 = bitcast i8* %2034 to <16 x i8>*
  %2045 = load <16 x i8>, <16 x i8>* %2044, align 16, !tbaa !395
  %2046 = getelementptr inbounds i8, i8* %2034, i64 16
  %2047 = bitcast i8* %2046 to <16 x i8>*
  %2048 = load <16 x i8>, <16 x i8>* %2047, align 16, !tbaa !395
  %2049 = shufflevector <16 x i8> %2045, <16 x i8> %2048, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2050 = zext <32 x i8> %2049 to <32 x i16>
  %2051 = mul nsw <32 x i16> %2050, %1197
  %2052 = getelementptr inbounds i8, i8* %2034, i64 2
  %2053 = bitcast i8* %2052 to <16 x i8>*
  %2054 = load <16 x i8>, <16 x i8>* %2053, align 2, !tbaa !395
  %2055 = getelementptr inbounds i8, i8* %2034, i64 18
  %2056 = bitcast i8* %2055 to <16 x i8>*
  %2057 = load <16 x i8>, <16 x i8>* %2056, align 2, !tbaa !395
  %2058 = shufflevector <16 x i8> %2054, <16 x i8> %2057, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2059 = zext <32 x i8> %2058 to <32 x i16>
  %2060 = mul nsw <32 x i16> %2059, %1201
  %2061 = shl nsw i64 %2030, 5
  %2062 = getelementptr inbounds i8, i8* %input_bounded, i64 %2061
  %2063 = bitcast i8* %2062 to <16 x i8>*
  %2064 = load <16 x i8>, <16 x i8>* %2063, align 16, !tbaa !395
  %2065 = getelementptr inbounds i8, i8* %2062, i64 16
  %2066 = bitcast i8* %2065 to <16 x i8>*
  %2067 = load <16 x i8>, <16 x i8>* %2066, align 16, !tbaa !395
  %2068 = shufflevector <16 x i8> %2064, <16 x i8> %2067, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2069 = zext <32 x i8> %2068 to <32 x i16>
  %2070 = mul nsw <32 x i16> %2069, %1205
  %2071 = getelementptr inbounds i8, i8* %2062, i64 1
  %2072 = bitcast i8* %2071 to <16 x i8>*
  %2073 = load <16 x i8>, <16 x i8>* %2072, align 1, !tbaa !395
  %2074 = getelementptr inbounds i8, i8* %2062, i64 17
  %2075 = bitcast i8* %2074 to <16 x i8>*
  %2076 = load <16 x i8>, <16 x i8>* %2075, align 1, !tbaa !395
  %2077 = shufflevector <16 x i8> %2073, <16 x i8> %2076, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2078 = zext <32 x i8> %2077 to <32 x i16>
  %2079 = mul nsw <32 x i16> %2078, %1209
  %2080 = getelementptr inbounds i8, i8* %2062, i64 2
  %2081 = bitcast i8* %2080 to <16 x i8>*
  %2082 = load <16 x i8>, <16 x i8>* %2081, align 2, !tbaa !395
  %2083 = getelementptr inbounds i8, i8* %2062, i64 18
  %2084 = bitcast i8* %2083 to <16 x i8>*
  %2085 = load <16 x i8>, <16 x i8>* %2084, align 2, !tbaa !395
  %2086 = shufflevector <16 x i8> %2082, <16 x i8> %2085, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2087 = zext <32 x i8> %2086 to <32 x i16>
  %2088 = mul nsw <32 x i16> %2087, %1213
  %2089 = shl nsw i64 %2031, 5
  %2090 = getelementptr inbounds i8, i8* %input_bounded, i64 %2089
  %2091 = bitcast i8* %2090 to <16 x i8>*
  %2092 = load <16 x i8>, <16 x i8>* %2091, align 16, !tbaa !395
  %2093 = getelementptr inbounds i8, i8* %2090, i64 16
  %2094 = bitcast i8* %2093 to <16 x i8>*
  %2095 = load <16 x i8>, <16 x i8>* %2094, align 16, !tbaa !395
  %2096 = shufflevector <16 x i8> %2092, <16 x i8> %2095, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2097 = zext <32 x i8> %2096 to <32 x i16>
  %2098 = mul nsw <32 x i16> %2097, %1217
  %2099 = getelementptr inbounds i8, i8* %2090, i64 2
  %2100 = bitcast i8* %2099 to <16 x i8>*
  %2101 = load <16 x i8>, <16 x i8>* %2100, align 2, !tbaa !395
  %2102 = getelementptr inbounds i8, i8* %2090, i64 18
  %2103 = bitcast i8* %2102 to <16 x i8>*
  %2104 = load <16 x i8>, <16 x i8>* %2103, align 2, !tbaa !395
  %2105 = shufflevector <16 x i8> %2101, <16 x i8> %2104, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2106 = zext <32 x i8> %2105 to <32 x i16>
  %2107 = mul nsw <32 x i16> %2106, %1221
  %2108 = getelementptr inbounds i8, i8* %2090, i64 1
  %2109 = bitcast i8* %2108 to <16 x i8>*
  %2110 = load <16 x i8>, <16 x i8>* %2109, align 1, !tbaa !395
  %2111 = getelementptr inbounds i8, i8* %2090, i64 17
  %2112 = bitcast i8* %2111 to <16 x i8>*
  %2113 = load <16 x i8>, <16 x i8>* %2112, align 1, !tbaa !395
  %2114 = shufflevector <16 x i8> %2110, <16 x i8> %2113, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2115 = zext <32 x i8> %2114 to <32 x i16>
  %2116 = mul nsw <32 x i16> %2115, %1225
  %2117 = add <32 x i16> %2051, %2043
  %2118 = add <32 x i16> %2117, %2060
  %2119 = add <32 x i16> %2118, %2070
  %2120 = add <32 x i16> %2119, %2079
  %2121 = add <32 x i16> %2120, %2088
  %2122 = add <32 x i16> %2121, %2098
  %2123 = add <32 x i16> %2122, %2107
  %2124 = add <32 x i16> %2123, %2116
  %2125 = shufflevector <32 x i16> %2124, <32 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %2126 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2125, i32 4)
  %2127 = shufflevector <32 x i16> %2124, <32 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2128 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2127, i32 4)
  %2129 = shufflevector <32 x i16> %2124, <32 x i16> undef, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2130 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2129, i32 4)
  %2131 = shufflevector <32 x i16> %2124, <32 x i16> undef, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2132 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2131, i32 4)
  %2133 = shufflevector <8 x i8> %2126, <8 x i8> %2128, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2134 = shufflevector <8 x i8> %2130, <8 x i8> %2132, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2135 = shl nuw nsw i64 %indvars.iv565, 5
  %2136 = add nsw i64 %2135, %2029
  %2137 = getelementptr inbounds i8, i8* %13, i64 %2136
  %2138 = bitcast i8* %2137 to <16 x i8>*
  store <16 x i8> %2133, <16 x i8>* %2138, align 1, !tbaa !399
  %2139 = shufflevector <32 x i8> %2134, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2140 = getelementptr inbounds i8, i8* %2137, i64 16
  %2141 = bitcast i8* %2140 to <16 x i8>*
  store <16 x i8> %2139, <16 x i8>* %2141, align 1, !tbaa !399
  %indvars.iv.next566 = add nuw nsw i64 %indvars.iv565, 1
  %.not364 = icmp eq i64 %indvars.iv.next566, 2
  br i1 %.not364, label %"end for output.s0.x.xi.xi35", label %"for output.s0.x.xi.xi34"

"end for output.s0.x.xi.xi35":                    ; preds = %"for output.s0.x.xi.xi34"
  %t363 = add nsw i32 %t329, %1227
  %2142 = add nsw i64 %1228, %106
  %2143 = sext i32 %t363 to i64
  br label %"for output.s0.x.xi.xi37"

"for output.s0.x.xi.xi37":                        ; preds = %"end for output.s0.x.xi.xi35", %"for output.s0.x.xi.xi37"
  %indvars.iv570 = phi i64 [ 0, %"end for output.s0.x.xi.xi35" ], [ %indvars.iv.next571, %"for output.s0.x.xi.xi37" ]
  %2144 = add nuw nsw i64 %2142, %indvars.iv570
  %2145 = add nsw i64 %2144, %96
  %2146 = add nsw i64 %2144, %97
  %2147 = shl nsw i64 %2146, 5
  %2148 = getelementptr inbounds i8, i8* %input_bounded, i64 %2147
  %2149 = getelementptr inbounds i8, i8* %2148, i64 1
  %2150 = bitcast i8* %2149 to <16 x i8>*
  %2151 = load <16 x i8>, <16 x i8>* %2150, align 1, !tbaa !395
  %2152 = getelementptr inbounds i8, i8* %2148, i64 17
  %2153 = bitcast i8* %2152 to <16 x i8>*
  %2154 = load <16 x i8>, <16 x i8>* %2153, align 1, !tbaa !395
  %2155 = shufflevector <16 x i8> %2151, <16 x i8> %2154, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2156 = zext <32 x i8> %2155 to <32 x i16>
  %2157 = mul nsw <32 x i16> %2156, %1193
  %2158 = bitcast i8* %2148 to <16 x i8>*
  %2159 = load <16 x i8>, <16 x i8>* %2158, align 16, !tbaa !395
  %2160 = getelementptr inbounds i8, i8* %2148, i64 16
  %2161 = bitcast i8* %2160 to <16 x i8>*
  %2162 = load <16 x i8>, <16 x i8>* %2161, align 16, !tbaa !395
  %2163 = shufflevector <16 x i8> %2159, <16 x i8> %2162, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2164 = zext <32 x i8> %2163 to <32 x i16>
  %2165 = mul nsw <32 x i16> %2164, %1197
  %2166 = getelementptr inbounds i8, i8* %2148, i64 2
  %2167 = bitcast i8* %2166 to <16 x i8>*
  %2168 = load <16 x i8>, <16 x i8>* %2167, align 2, !tbaa !395
  %2169 = getelementptr inbounds i8, i8* %2148, i64 18
  %2170 = bitcast i8* %2169 to <16 x i8>*
  %2171 = load <16 x i8>, <16 x i8>* %2170, align 2, !tbaa !395
  %2172 = shufflevector <16 x i8> %2168, <16 x i8> %2171, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2173 = zext <32 x i8> %2172 to <32 x i16>
  %2174 = mul nsw <32 x i16> %2173, %1201
  %2175 = shl nsw i64 %2144, 5
  %2176 = getelementptr inbounds i8, i8* %input_bounded, i64 %2175
  %2177 = bitcast i8* %2176 to <16 x i8>*
  %2178 = load <16 x i8>, <16 x i8>* %2177, align 16, !tbaa !395
  %2179 = getelementptr inbounds i8, i8* %2176, i64 16
  %2180 = bitcast i8* %2179 to <16 x i8>*
  %2181 = load <16 x i8>, <16 x i8>* %2180, align 16, !tbaa !395
  %2182 = shufflevector <16 x i8> %2178, <16 x i8> %2181, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2183 = zext <32 x i8> %2182 to <32 x i16>
  %2184 = mul nsw <32 x i16> %2183, %1205
  %2185 = getelementptr inbounds i8, i8* %2176, i64 1
  %2186 = bitcast i8* %2185 to <16 x i8>*
  %2187 = load <16 x i8>, <16 x i8>* %2186, align 1, !tbaa !395
  %2188 = getelementptr inbounds i8, i8* %2176, i64 17
  %2189 = bitcast i8* %2188 to <16 x i8>*
  %2190 = load <16 x i8>, <16 x i8>* %2189, align 1, !tbaa !395
  %2191 = shufflevector <16 x i8> %2187, <16 x i8> %2190, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2192 = zext <32 x i8> %2191 to <32 x i16>
  %2193 = mul nsw <32 x i16> %2192, %1209
  %2194 = getelementptr inbounds i8, i8* %2176, i64 2
  %2195 = bitcast i8* %2194 to <16 x i8>*
  %2196 = load <16 x i8>, <16 x i8>* %2195, align 2, !tbaa !395
  %2197 = getelementptr inbounds i8, i8* %2176, i64 18
  %2198 = bitcast i8* %2197 to <16 x i8>*
  %2199 = load <16 x i8>, <16 x i8>* %2198, align 2, !tbaa !395
  %2200 = shufflevector <16 x i8> %2196, <16 x i8> %2199, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2201 = zext <32 x i8> %2200 to <32 x i16>
  %2202 = mul nsw <32 x i16> %2201, %1213
  %2203 = shl nsw i64 %2145, 5
  %2204 = getelementptr inbounds i8, i8* %input_bounded, i64 %2203
  %2205 = bitcast i8* %2204 to <16 x i8>*
  %2206 = load <16 x i8>, <16 x i8>* %2205, align 16, !tbaa !395
  %2207 = getelementptr inbounds i8, i8* %2204, i64 16
  %2208 = bitcast i8* %2207 to <16 x i8>*
  %2209 = load <16 x i8>, <16 x i8>* %2208, align 16, !tbaa !395
  %2210 = shufflevector <16 x i8> %2206, <16 x i8> %2209, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2211 = zext <32 x i8> %2210 to <32 x i16>
  %2212 = mul nsw <32 x i16> %2211, %1217
  %2213 = getelementptr inbounds i8, i8* %2204, i64 2
  %2214 = bitcast i8* %2213 to <16 x i8>*
  %2215 = load <16 x i8>, <16 x i8>* %2214, align 2, !tbaa !395
  %2216 = getelementptr inbounds i8, i8* %2204, i64 18
  %2217 = bitcast i8* %2216 to <16 x i8>*
  %2218 = load <16 x i8>, <16 x i8>* %2217, align 2, !tbaa !395
  %2219 = shufflevector <16 x i8> %2215, <16 x i8> %2218, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2220 = zext <32 x i8> %2219 to <32 x i16>
  %2221 = mul nsw <32 x i16> %2220, %1221
  %2222 = getelementptr inbounds i8, i8* %2204, i64 1
  %2223 = bitcast i8* %2222 to <16 x i8>*
  %2224 = load <16 x i8>, <16 x i8>* %2223, align 1, !tbaa !395
  %2225 = getelementptr inbounds i8, i8* %2204, i64 17
  %2226 = bitcast i8* %2225 to <16 x i8>*
  %2227 = load <16 x i8>, <16 x i8>* %2226, align 1, !tbaa !395
  %2228 = shufflevector <16 x i8> %2224, <16 x i8> %2227, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2229 = zext <32 x i8> %2228 to <32 x i16>
  %2230 = mul nsw <32 x i16> %2229, %1225
  %2231 = add <32 x i16> %2165, %2157
  %2232 = add <32 x i16> %2231, %2174
  %2233 = add <32 x i16> %2232, %2184
  %2234 = add <32 x i16> %2233, %2193
  %2235 = add <32 x i16> %2234, %2202
  %2236 = add <32 x i16> %2235, %2212
  %2237 = add <32 x i16> %2236, %2221
  %2238 = add <32 x i16> %2237, %2230
  %2239 = shufflevector <32 x i16> %2238, <32 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %2240 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2239, i32 4)
  %2241 = shufflevector <32 x i16> %2238, <32 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2242 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2241, i32 4)
  %2243 = shufflevector <32 x i16> %2238, <32 x i16> undef, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2244 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2243, i32 4)
  %2245 = shufflevector <32 x i16> %2238, <32 x i16> undef, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2246 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2245, i32 4)
  %2247 = shufflevector <8 x i8> %2240, <8 x i8> %2242, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2248 = shufflevector <8 x i8> %2244, <8 x i8> %2246, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2249 = shl nuw nsw i64 %indvars.iv570, 5
  %2250 = add nsw i64 %2249, %2143
  %2251 = getelementptr inbounds i8, i8* %13, i64 %2250
  %2252 = bitcast i8* %2251 to <16 x i8>*
  store <16 x i8> %2247, <16 x i8>* %2252, align 1, !tbaa !399
  %2253 = shufflevector <32 x i8> %2248, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2254 = getelementptr inbounds i8, i8* %2251, i64 16
  %2255 = bitcast i8* %2254 to <16 x i8>*
  store <16 x i8> %2253, <16 x i8>* %2255, align 1, !tbaa !399
  %indvars.iv.next571 = add nuw nsw i64 %indvars.iv570, 1
  %.not365 = icmp eq i64 %indvars.iv.next571, 2
  br i1 %.not365, label %"end for output.s0.x.xi.xi38", label %"for output.s0.x.xi.xi37"

"end for output.s0.x.xi.xi38":                    ; preds = %"for output.s0.x.xi.xi37"
  %t365 = add nsw i32 %t331, %1227
  %2256 = add nsw i64 %1228, %105
  %2257 = sext i32 %t365 to i64
  br label %"for output.s0.x.xi.xi40"

"for output.s0.x.xi.xi40":                        ; preds = %"end for output.s0.x.xi.xi38", %"for output.s0.x.xi.xi40"
  %indvars.iv575 = phi i64 [ 0, %"end for output.s0.x.xi.xi38" ], [ %indvars.iv.next576, %"for output.s0.x.xi.xi40" ]
  %2258 = add nuw nsw i64 %2256, %indvars.iv575
  %2259 = add nsw i64 %2258, %96
  %2260 = add nsw i64 %2258, %97
  %2261 = shl nsw i64 %2260, 5
  %2262 = getelementptr inbounds i8, i8* %input_bounded, i64 %2261
  %2263 = getelementptr inbounds i8, i8* %2262, i64 1
  %2264 = bitcast i8* %2263 to <16 x i8>*
  %2265 = load <16 x i8>, <16 x i8>* %2264, align 1, !tbaa !395
  %2266 = getelementptr inbounds i8, i8* %2262, i64 17
  %2267 = bitcast i8* %2266 to <16 x i8>*
  %2268 = load <16 x i8>, <16 x i8>* %2267, align 1, !tbaa !395
  %2269 = shufflevector <16 x i8> %2265, <16 x i8> %2268, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2270 = zext <32 x i8> %2269 to <32 x i16>
  %2271 = mul nsw <32 x i16> %2270, %1193
  %2272 = bitcast i8* %2262 to <16 x i8>*
  %2273 = load <16 x i8>, <16 x i8>* %2272, align 16, !tbaa !395
  %2274 = getelementptr inbounds i8, i8* %2262, i64 16
  %2275 = bitcast i8* %2274 to <16 x i8>*
  %2276 = load <16 x i8>, <16 x i8>* %2275, align 16, !tbaa !395
  %2277 = shufflevector <16 x i8> %2273, <16 x i8> %2276, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2278 = zext <32 x i8> %2277 to <32 x i16>
  %2279 = mul nsw <32 x i16> %2278, %1197
  %2280 = getelementptr inbounds i8, i8* %2262, i64 2
  %2281 = bitcast i8* %2280 to <16 x i8>*
  %2282 = load <16 x i8>, <16 x i8>* %2281, align 2, !tbaa !395
  %2283 = getelementptr inbounds i8, i8* %2262, i64 18
  %2284 = bitcast i8* %2283 to <16 x i8>*
  %2285 = load <16 x i8>, <16 x i8>* %2284, align 2, !tbaa !395
  %2286 = shufflevector <16 x i8> %2282, <16 x i8> %2285, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2287 = zext <32 x i8> %2286 to <32 x i16>
  %2288 = mul nsw <32 x i16> %2287, %1201
  %2289 = shl nsw i64 %2258, 5
  %2290 = getelementptr inbounds i8, i8* %input_bounded, i64 %2289
  %2291 = bitcast i8* %2290 to <16 x i8>*
  %2292 = load <16 x i8>, <16 x i8>* %2291, align 16, !tbaa !395
  %2293 = getelementptr inbounds i8, i8* %2290, i64 16
  %2294 = bitcast i8* %2293 to <16 x i8>*
  %2295 = load <16 x i8>, <16 x i8>* %2294, align 16, !tbaa !395
  %2296 = shufflevector <16 x i8> %2292, <16 x i8> %2295, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2297 = zext <32 x i8> %2296 to <32 x i16>
  %2298 = mul nsw <32 x i16> %2297, %1205
  %2299 = getelementptr inbounds i8, i8* %2290, i64 1
  %2300 = bitcast i8* %2299 to <16 x i8>*
  %2301 = load <16 x i8>, <16 x i8>* %2300, align 1, !tbaa !395
  %2302 = getelementptr inbounds i8, i8* %2290, i64 17
  %2303 = bitcast i8* %2302 to <16 x i8>*
  %2304 = load <16 x i8>, <16 x i8>* %2303, align 1, !tbaa !395
  %2305 = shufflevector <16 x i8> %2301, <16 x i8> %2304, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2306 = zext <32 x i8> %2305 to <32 x i16>
  %2307 = mul nsw <32 x i16> %2306, %1209
  %2308 = getelementptr inbounds i8, i8* %2290, i64 2
  %2309 = bitcast i8* %2308 to <16 x i8>*
  %2310 = load <16 x i8>, <16 x i8>* %2309, align 2, !tbaa !395
  %2311 = getelementptr inbounds i8, i8* %2290, i64 18
  %2312 = bitcast i8* %2311 to <16 x i8>*
  %2313 = load <16 x i8>, <16 x i8>* %2312, align 2, !tbaa !395
  %2314 = shufflevector <16 x i8> %2310, <16 x i8> %2313, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2315 = zext <32 x i8> %2314 to <32 x i16>
  %2316 = mul nsw <32 x i16> %2315, %1213
  %2317 = shl nsw i64 %2259, 5
  %2318 = getelementptr inbounds i8, i8* %input_bounded, i64 %2317
  %2319 = bitcast i8* %2318 to <16 x i8>*
  %2320 = load <16 x i8>, <16 x i8>* %2319, align 16, !tbaa !395
  %2321 = getelementptr inbounds i8, i8* %2318, i64 16
  %2322 = bitcast i8* %2321 to <16 x i8>*
  %2323 = load <16 x i8>, <16 x i8>* %2322, align 16, !tbaa !395
  %2324 = shufflevector <16 x i8> %2320, <16 x i8> %2323, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2325 = zext <32 x i8> %2324 to <32 x i16>
  %2326 = mul nsw <32 x i16> %2325, %1217
  %2327 = getelementptr inbounds i8, i8* %2318, i64 2
  %2328 = bitcast i8* %2327 to <16 x i8>*
  %2329 = load <16 x i8>, <16 x i8>* %2328, align 2, !tbaa !395
  %2330 = getelementptr inbounds i8, i8* %2318, i64 18
  %2331 = bitcast i8* %2330 to <16 x i8>*
  %2332 = load <16 x i8>, <16 x i8>* %2331, align 2, !tbaa !395
  %2333 = shufflevector <16 x i8> %2329, <16 x i8> %2332, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2334 = zext <32 x i8> %2333 to <32 x i16>
  %2335 = mul nsw <32 x i16> %2334, %1221
  %2336 = getelementptr inbounds i8, i8* %2318, i64 1
  %2337 = bitcast i8* %2336 to <16 x i8>*
  %2338 = load <16 x i8>, <16 x i8>* %2337, align 1, !tbaa !395
  %2339 = getelementptr inbounds i8, i8* %2318, i64 17
  %2340 = bitcast i8* %2339 to <16 x i8>*
  %2341 = load <16 x i8>, <16 x i8>* %2340, align 1, !tbaa !395
  %2342 = shufflevector <16 x i8> %2338, <16 x i8> %2341, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2343 = zext <32 x i8> %2342 to <32 x i16>
  %2344 = mul nsw <32 x i16> %2343, %1225
  %2345 = add <32 x i16> %2279, %2271
  %2346 = add <32 x i16> %2345, %2288
  %2347 = add <32 x i16> %2346, %2298
  %2348 = add <32 x i16> %2347, %2307
  %2349 = add <32 x i16> %2348, %2316
  %2350 = add <32 x i16> %2349, %2326
  %2351 = add <32 x i16> %2350, %2335
  %2352 = add <32 x i16> %2351, %2344
  %2353 = shufflevector <32 x i16> %2352, <32 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %2354 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2353, i32 4)
  %2355 = shufflevector <32 x i16> %2352, <32 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2356 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2355, i32 4)
  %2357 = shufflevector <32 x i16> %2352, <32 x i16> undef, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2358 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2357, i32 4)
  %2359 = shufflevector <32 x i16> %2352, <32 x i16> undef, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2360 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2359, i32 4)
  %2361 = shufflevector <8 x i8> %2354, <8 x i8> %2356, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2362 = shufflevector <8 x i8> %2358, <8 x i8> %2360, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2363 = shl nuw nsw i64 %indvars.iv575, 5
  %2364 = add nsw i64 %2363, %2257
  %2365 = getelementptr inbounds i8, i8* %13, i64 %2364
  %2366 = bitcast i8* %2365 to <16 x i8>*
  store <16 x i8> %2361, <16 x i8>* %2366, align 1, !tbaa !399
  %2367 = shufflevector <32 x i8> %2362, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2368 = getelementptr inbounds i8, i8* %2365, i64 16
  %2369 = bitcast i8* %2368 to <16 x i8>*
  store <16 x i8> %2367, <16 x i8>* %2369, align 1, !tbaa !399
  %indvars.iv.next576 = add nuw nsw i64 %indvars.iv575, 1
  %.not366 = icmp eq i64 %indvars.iv.next576, 2
  br i1 %.not366, label %"end for output.s0.x.xi.xi41", label %"for output.s0.x.xi.xi40"

"end for output.s0.x.xi.xi41":                    ; preds = %"for output.s0.x.xi.xi40"
  %t367 = add nsw i32 %t333, %1227
  %2370 = add nsw i64 %1228, %104
  %2371 = sext i32 %t367 to i64
  br label %"for output.s0.x.xi.xi43"

"for output.s0.x.xi.xi43":                        ; preds = %"end for output.s0.x.xi.xi41", %"for output.s0.x.xi.xi43"
  %indvars.iv580 = phi i64 [ 0, %"end for output.s0.x.xi.xi41" ], [ %indvars.iv.next581, %"for output.s0.x.xi.xi43" ]
  %2372 = add nuw nsw i64 %2370, %indvars.iv580
  %2373 = add nsw i64 %2372, %96
  %2374 = add nsw i64 %2372, %97
  %2375 = shl nsw i64 %2374, 5
  %2376 = getelementptr inbounds i8, i8* %input_bounded, i64 %2375
  %2377 = getelementptr inbounds i8, i8* %2376, i64 1
  %2378 = bitcast i8* %2377 to <16 x i8>*
  %2379 = load <16 x i8>, <16 x i8>* %2378, align 1, !tbaa !395
  %2380 = getelementptr inbounds i8, i8* %2376, i64 17
  %2381 = bitcast i8* %2380 to <16 x i8>*
  %2382 = load <16 x i8>, <16 x i8>* %2381, align 1, !tbaa !395
  %2383 = shufflevector <16 x i8> %2379, <16 x i8> %2382, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2384 = zext <32 x i8> %2383 to <32 x i16>
  %2385 = mul nsw <32 x i16> %2384, %1193
  %2386 = bitcast i8* %2376 to <16 x i8>*
  %2387 = load <16 x i8>, <16 x i8>* %2386, align 16, !tbaa !395
  %2388 = getelementptr inbounds i8, i8* %2376, i64 16
  %2389 = bitcast i8* %2388 to <16 x i8>*
  %2390 = load <16 x i8>, <16 x i8>* %2389, align 16, !tbaa !395
  %2391 = shufflevector <16 x i8> %2387, <16 x i8> %2390, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2392 = zext <32 x i8> %2391 to <32 x i16>
  %2393 = mul nsw <32 x i16> %2392, %1197
  %2394 = getelementptr inbounds i8, i8* %2376, i64 2
  %2395 = bitcast i8* %2394 to <16 x i8>*
  %2396 = load <16 x i8>, <16 x i8>* %2395, align 2, !tbaa !395
  %2397 = getelementptr inbounds i8, i8* %2376, i64 18
  %2398 = bitcast i8* %2397 to <16 x i8>*
  %2399 = load <16 x i8>, <16 x i8>* %2398, align 2, !tbaa !395
  %2400 = shufflevector <16 x i8> %2396, <16 x i8> %2399, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2401 = zext <32 x i8> %2400 to <32 x i16>
  %2402 = mul nsw <32 x i16> %2401, %1201
  %2403 = shl nsw i64 %2372, 5
  %2404 = getelementptr inbounds i8, i8* %input_bounded, i64 %2403
  %2405 = bitcast i8* %2404 to <16 x i8>*
  %2406 = load <16 x i8>, <16 x i8>* %2405, align 16, !tbaa !395
  %2407 = getelementptr inbounds i8, i8* %2404, i64 16
  %2408 = bitcast i8* %2407 to <16 x i8>*
  %2409 = load <16 x i8>, <16 x i8>* %2408, align 16, !tbaa !395
  %2410 = shufflevector <16 x i8> %2406, <16 x i8> %2409, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2411 = zext <32 x i8> %2410 to <32 x i16>
  %2412 = mul nsw <32 x i16> %2411, %1205
  %2413 = getelementptr inbounds i8, i8* %2404, i64 1
  %2414 = bitcast i8* %2413 to <16 x i8>*
  %2415 = load <16 x i8>, <16 x i8>* %2414, align 1, !tbaa !395
  %2416 = getelementptr inbounds i8, i8* %2404, i64 17
  %2417 = bitcast i8* %2416 to <16 x i8>*
  %2418 = load <16 x i8>, <16 x i8>* %2417, align 1, !tbaa !395
  %2419 = shufflevector <16 x i8> %2415, <16 x i8> %2418, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2420 = zext <32 x i8> %2419 to <32 x i16>
  %2421 = mul nsw <32 x i16> %2420, %1209
  %2422 = getelementptr inbounds i8, i8* %2404, i64 2
  %2423 = bitcast i8* %2422 to <16 x i8>*
  %2424 = load <16 x i8>, <16 x i8>* %2423, align 2, !tbaa !395
  %2425 = getelementptr inbounds i8, i8* %2404, i64 18
  %2426 = bitcast i8* %2425 to <16 x i8>*
  %2427 = load <16 x i8>, <16 x i8>* %2426, align 2, !tbaa !395
  %2428 = shufflevector <16 x i8> %2424, <16 x i8> %2427, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2429 = zext <32 x i8> %2428 to <32 x i16>
  %2430 = mul nsw <32 x i16> %2429, %1213
  %2431 = shl nsw i64 %2373, 5
  %2432 = getelementptr inbounds i8, i8* %input_bounded, i64 %2431
  %2433 = bitcast i8* %2432 to <16 x i8>*
  %2434 = load <16 x i8>, <16 x i8>* %2433, align 16, !tbaa !395
  %2435 = getelementptr inbounds i8, i8* %2432, i64 16
  %2436 = bitcast i8* %2435 to <16 x i8>*
  %2437 = load <16 x i8>, <16 x i8>* %2436, align 16, !tbaa !395
  %2438 = shufflevector <16 x i8> %2434, <16 x i8> %2437, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2439 = zext <32 x i8> %2438 to <32 x i16>
  %2440 = mul nsw <32 x i16> %2439, %1217
  %2441 = getelementptr inbounds i8, i8* %2432, i64 2
  %2442 = bitcast i8* %2441 to <16 x i8>*
  %2443 = load <16 x i8>, <16 x i8>* %2442, align 2, !tbaa !395
  %2444 = getelementptr inbounds i8, i8* %2432, i64 18
  %2445 = bitcast i8* %2444 to <16 x i8>*
  %2446 = load <16 x i8>, <16 x i8>* %2445, align 2, !tbaa !395
  %2447 = shufflevector <16 x i8> %2443, <16 x i8> %2446, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2448 = zext <32 x i8> %2447 to <32 x i16>
  %2449 = mul nsw <32 x i16> %2448, %1221
  %2450 = getelementptr inbounds i8, i8* %2432, i64 1
  %2451 = bitcast i8* %2450 to <16 x i8>*
  %2452 = load <16 x i8>, <16 x i8>* %2451, align 1, !tbaa !395
  %2453 = getelementptr inbounds i8, i8* %2432, i64 17
  %2454 = bitcast i8* %2453 to <16 x i8>*
  %2455 = load <16 x i8>, <16 x i8>* %2454, align 1, !tbaa !395
  %2456 = shufflevector <16 x i8> %2452, <16 x i8> %2455, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2457 = zext <32 x i8> %2456 to <32 x i16>
  %2458 = mul nsw <32 x i16> %2457, %1225
  %2459 = add <32 x i16> %2393, %2385
  %2460 = add <32 x i16> %2459, %2402
  %2461 = add <32 x i16> %2460, %2412
  %2462 = add <32 x i16> %2461, %2421
  %2463 = add <32 x i16> %2462, %2430
  %2464 = add <32 x i16> %2463, %2440
  %2465 = add <32 x i16> %2464, %2449
  %2466 = add <32 x i16> %2465, %2458
  %2467 = shufflevector <32 x i16> %2466, <32 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %2468 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2467, i32 4)
  %2469 = shufflevector <32 x i16> %2466, <32 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2470 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2469, i32 4)
  %2471 = shufflevector <32 x i16> %2466, <32 x i16> undef, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2472 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2471, i32 4)
  %2473 = shufflevector <32 x i16> %2466, <32 x i16> undef, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2474 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2473, i32 4)
  %2475 = shufflevector <8 x i8> %2468, <8 x i8> %2470, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2476 = shufflevector <8 x i8> %2472, <8 x i8> %2474, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2477 = shl nuw nsw i64 %indvars.iv580, 5
  %2478 = add nsw i64 %2477, %2371
  %2479 = getelementptr inbounds i8, i8* %13, i64 %2478
  %2480 = bitcast i8* %2479 to <16 x i8>*
  store <16 x i8> %2475, <16 x i8>* %2480, align 1, !tbaa !399
  %2481 = shufflevector <32 x i8> %2476, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2482 = getelementptr inbounds i8, i8* %2479, i64 16
  %2483 = bitcast i8* %2482 to <16 x i8>*
  store <16 x i8> %2481, <16 x i8>* %2483, align 1, !tbaa !399
  %indvars.iv.next581 = add nuw nsw i64 %indvars.iv580, 1
  %.not367 = icmp eq i64 %indvars.iv.next581, 2
  br i1 %.not367, label %"end for output.s0.x.xi.xi44", label %"for output.s0.x.xi.xi43"

"end for output.s0.x.xi.xi44":                    ; preds = %"for output.s0.x.xi.xi43"
  %t369 = add nsw i32 %t335, %1227
  %2484 = add nsw i64 %1228, %103
  %2485 = sext i32 %t369 to i64
  br label %"for output.s0.x.xi.xi46"

"for output.s0.x.xi.xi46":                        ; preds = %"end for output.s0.x.xi.xi44", %"for output.s0.x.xi.xi46"
  %indvars.iv585 = phi i64 [ 0, %"end for output.s0.x.xi.xi44" ], [ %indvars.iv.next586, %"for output.s0.x.xi.xi46" ]
  %2486 = add nuw nsw i64 %2484, %indvars.iv585
  %2487 = add nsw i64 %2486, %96
  %2488 = add nsw i64 %2486, %97
  %2489 = shl nsw i64 %2488, 5
  %2490 = getelementptr inbounds i8, i8* %input_bounded, i64 %2489
  %2491 = getelementptr inbounds i8, i8* %2490, i64 1
  %2492 = bitcast i8* %2491 to <16 x i8>*
  %2493 = load <16 x i8>, <16 x i8>* %2492, align 1, !tbaa !395
  %2494 = getelementptr inbounds i8, i8* %2490, i64 17
  %2495 = bitcast i8* %2494 to <16 x i8>*
  %2496 = load <16 x i8>, <16 x i8>* %2495, align 1, !tbaa !395
  %2497 = shufflevector <16 x i8> %2493, <16 x i8> %2496, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2498 = zext <32 x i8> %2497 to <32 x i16>
  %2499 = mul nsw <32 x i16> %2498, %1193
  %2500 = bitcast i8* %2490 to <16 x i8>*
  %2501 = load <16 x i8>, <16 x i8>* %2500, align 16, !tbaa !395
  %2502 = getelementptr inbounds i8, i8* %2490, i64 16
  %2503 = bitcast i8* %2502 to <16 x i8>*
  %2504 = load <16 x i8>, <16 x i8>* %2503, align 16, !tbaa !395
  %2505 = shufflevector <16 x i8> %2501, <16 x i8> %2504, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2506 = zext <32 x i8> %2505 to <32 x i16>
  %2507 = mul nsw <32 x i16> %2506, %1197
  %2508 = getelementptr inbounds i8, i8* %2490, i64 2
  %2509 = bitcast i8* %2508 to <16 x i8>*
  %2510 = load <16 x i8>, <16 x i8>* %2509, align 2, !tbaa !395
  %2511 = getelementptr inbounds i8, i8* %2490, i64 18
  %2512 = bitcast i8* %2511 to <16 x i8>*
  %2513 = load <16 x i8>, <16 x i8>* %2512, align 2, !tbaa !395
  %2514 = shufflevector <16 x i8> %2510, <16 x i8> %2513, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2515 = zext <32 x i8> %2514 to <32 x i16>
  %2516 = mul nsw <32 x i16> %2515, %1201
  %2517 = shl nsw i64 %2486, 5
  %2518 = getelementptr inbounds i8, i8* %input_bounded, i64 %2517
  %2519 = bitcast i8* %2518 to <16 x i8>*
  %2520 = load <16 x i8>, <16 x i8>* %2519, align 16, !tbaa !395
  %2521 = getelementptr inbounds i8, i8* %2518, i64 16
  %2522 = bitcast i8* %2521 to <16 x i8>*
  %2523 = load <16 x i8>, <16 x i8>* %2522, align 16, !tbaa !395
  %2524 = shufflevector <16 x i8> %2520, <16 x i8> %2523, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2525 = zext <32 x i8> %2524 to <32 x i16>
  %2526 = mul nsw <32 x i16> %2525, %1205
  %2527 = getelementptr inbounds i8, i8* %2518, i64 1
  %2528 = bitcast i8* %2527 to <16 x i8>*
  %2529 = load <16 x i8>, <16 x i8>* %2528, align 1, !tbaa !395
  %2530 = getelementptr inbounds i8, i8* %2518, i64 17
  %2531 = bitcast i8* %2530 to <16 x i8>*
  %2532 = load <16 x i8>, <16 x i8>* %2531, align 1, !tbaa !395
  %2533 = shufflevector <16 x i8> %2529, <16 x i8> %2532, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2534 = zext <32 x i8> %2533 to <32 x i16>
  %2535 = mul nsw <32 x i16> %2534, %1209
  %2536 = getelementptr inbounds i8, i8* %2518, i64 2
  %2537 = bitcast i8* %2536 to <16 x i8>*
  %2538 = load <16 x i8>, <16 x i8>* %2537, align 2, !tbaa !395
  %2539 = getelementptr inbounds i8, i8* %2518, i64 18
  %2540 = bitcast i8* %2539 to <16 x i8>*
  %2541 = load <16 x i8>, <16 x i8>* %2540, align 2, !tbaa !395
  %2542 = shufflevector <16 x i8> %2538, <16 x i8> %2541, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2543 = zext <32 x i8> %2542 to <32 x i16>
  %2544 = mul nsw <32 x i16> %2543, %1213
  %2545 = shl nsw i64 %2487, 5
  %2546 = getelementptr inbounds i8, i8* %input_bounded, i64 %2545
  %2547 = bitcast i8* %2546 to <16 x i8>*
  %2548 = load <16 x i8>, <16 x i8>* %2547, align 16, !tbaa !395
  %2549 = getelementptr inbounds i8, i8* %2546, i64 16
  %2550 = bitcast i8* %2549 to <16 x i8>*
  %2551 = load <16 x i8>, <16 x i8>* %2550, align 16, !tbaa !395
  %2552 = shufflevector <16 x i8> %2548, <16 x i8> %2551, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2553 = zext <32 x i8> %2552 to <32 x i16>
  %2554 = mul nsw <32 x i16> %2553, %1217
  %2555 = getelementptr inbounds i8, i8* %2546, i64 2
  %2556 = bitcast i8* %2555 to <16 x i8>*
  %2557 = load <16 x i8>, <16 x i8>* %2556, align 2, !tbaa !395
  %2558 = getelementptr inbounds i8, i8* %2546, i64 18
  %2559 = bitcast i8* %2558 to <16 x i8>*
  %2560 = load <16 x i8>, <16 x i8>* %2559, align 2, !tbaa !395
  %2561 = shufflevector <16 x i8> %2557, <16 x i8> %2560, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2562 = zext <32 x i8> %2561 to <32 x i16>
  %2563 = mul nsw <32 x i16> %2562, %1221
  %2564 = getelementptr inbounds i8, i8* %2546, i64 1
  %2565 = bitcast i8* %2564 to <16 x i8>*
  %2566 = load <16 x i8>, <16 x i8>* %2565, align 1, !tbaa !395
  %2567 = getelementptr inbounds i8, i8* %2546, i64 17
  %2568 = bitcast i8* %2567 to <16 x i8>*
  %2569 = load <16 x i8>, <16 x i8>* %2568, align 1, !tbaa !395
  %2570 = shufflevector <16 x i8> %2566, <16 x i8> %2569, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2571 = zext <32 x i8> %2570 to <32 x i16>
  %2572 = mul nsw <32 x i16> %2571, %1225
  %2573 = add <32 x i16> %2507, %2499
  %2574 = add <32 x i16> %2573, %2516
  %2575 = add <32 x i16> %2574, %2526
  %2576 = add <32 x i16> %2575, %2535
  %2577 = add <32 x i16> %2576, %2544
  %2578 = add <32 x i16> %2577, %2554
  %2579 = add <32 x i16> %2578, %2563
  %2580 = add <32 x i16> %2579, %2572
  %2581 = shufflevector <32 x i16> %2580, <32 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %2582 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2581, i32 4)
  %2583 = shufflevector <32 x i16> %2580, <32 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2584 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2583, i32 4)
  %2585 = shufflevector <32 x i16> %2580, <32 x i16> undef, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2586 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2585, i32 4)
  %2587 = shufflevector <32 x i16> %2580, <32 x i16> undef, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2588 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2587, i32 4)
  %2589 = shufflevector <8 x i8> %2582, <8 x i8> %2584, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2590 = shufflevector <8 x i8> %2586, <8 x i8> %2588, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2591 = shl nuw nsw i64 %indvars.iv585, 5
  %2592 = add nsw i64 %2591, %2485
  %2593 = getelementptr inbounds i8, i8* %13, i64 %2592
  %2594 = bitcast i8* %2593 to <16 x i8>*
  store <16 x i8> %2589, <16 x i8>* %2594, align 1, !tbaa !399
  %2595 = shufflevector <32 x i8> %2590, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2596 = getelementptr inbounds i8, i8* %2593, i64 16
  %2597 = bitcast i8* %2596 to <16 x i8>*
  store <16 x i8> %2595, <16 x i8>* %2597, align 1, !tbaa !399
  %indvars.iv.next586 = add nuw nsw i64 %indvars.iv585, 1
  %.not368 = icmp eq i64 %indvars.iv.next586, 2
  br i1 %.not368, label %"end for output.s0.x.xi.xi47", label %"for output.s0.x.xi.xi46"

"end for output.s0.x.xi.xi47":                    ; preds = %"for output.s0.x.xi.xi46"
  %t371 = add nsw i32 %t337, %1227
  %2598 = add nsw i64 %1228, %102
  %2599 = sext i32 %t371 to i64
  br label %"for output.s0.x.xi.xi49"

"for output.s0.x.xi.xi49":                        ; preds = %"end for output.s0.x.xi.xi47", %"for output.s0.x.xi.xi49"
  %indvars.iv590 = phi i64 [ 0, %"end for output.s0.x.xi.xi47" ], [ %indvars.iv.next591, %"for output.s0.x.xi.xi49" ]
  %2600 = add nuw nsw i64 %2598, %indvars.iv590
  %2601 = add nsw i64 %2600, %96
  %2602 = add nsw i64 %2600, %97
  %2603 = shl nsw i64 %2602, 5
  %2604 = getelementptr inbounds i8, i8* %input_bounded, i64 %2603
  %2605 = getelementptr inbounds i8, i8* %2604, i64 1
  %2606 = bitcast i8* %2605 to <16 x i8>*
  %2607 = load <16 x i8>, <16 x i8>* %2606, align 1, !tbaa !395
  %2608 = getelementptr inbounds i8, i8* %2604, i64 17
  %2609 = bitcast i8* %2608 to <16 x i8>*
  %2610 = load <16 x i8>, <16 x i8>* %2609, align 1, !tbaa !395
  %2611 = shufflevector <16 x i8> %2607, <16 x i8> %2610, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2612 = zext <32 x i8> %2611 to <32 x i16>
  %2613 = mul nsw <32 x i16> %2612, %1193
  %2614 = bitcast i8* %2604 to <16 x i8>*
  %2615 = load <16 x i8>, <16 x i8>* %2614, align 16, !tbaa !395
  %2616 = getelementptr inbounds i8, i8* %2604, i64 16
  %2617 = bitcast i8* %2616 to <16 x i8>*
  %2618 = load <16 x i8>, <16 x i8>* %2617, align 16, !tbaa !395
  %2619 = shufflevector <16 x i8> %2615, <16 x i8> %2618, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2620 = zext <32 x i8> %2619 to <32 x i16>
  %2621 = mul nsw <32 x i16> %2620, %1197
  %2622 = getelementptr inbounds i8, i8* %2604, i64 2
  %2623 = bitcast i8* %2622 to <16 x i8>*
  %2624 = load <16 x i8>, <16 x i8>* %2623, align 2, !tbaa !395
  %2625 = getelementptr inbounds i8, i8* %2604, i64 18
  %2626 = bitcast i8* %2625 to <16 x i8>*
  %2627 = load <16 x i8>, <16 x i8>* %2626, align 2, !tbaa !395
  %2628 = shufflevector <16 x i8> %2624, <16 x i8> %2627, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2629 = zext <32 x i8> %2628 to <32 x i16>
  %2630 = mul nsw <32 x i16> %2629, %1201
  %2631 = shl nsw i64 %2600, 5
  %2632 = getelementptr inbounds i8, i8* %input_bounded, i64 %2631
  %2633 = bitcast i8* %2632 to <16 x i8>*
  %2634 = load <16 x i8>, <16 x i8>* %2633, align 16, !tbaa !395
  %2635 = getelementptr inbounds i8, i8* %2632, i64 16
  %2636 = bitcast i8* %2635 to <16 x i8>*
  %2637 = load <16 x i8>, <16 x i8>* %2636, align 16, !tbaa !395
  %2638 = shufflevector <16 x i8> %2634, <16 x i8> %2637, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2639 = zext <32 x i8> %2638 to <32 x i16>
  %2640 = mul nsw <32 x i16> %2639, %1205
  %2641 = getelementptr inbounds i8, i8* %2632, i64 1
  %2642 = bitcast i8* %2641 to <16 x i8>*
  %2643 = load <16 x i8>, <16 x i8>* %2642, align 1, !tbaa !395
  %2644 = getelementptr inbounds i8, i8* %2632, i64 17
  %2645 = bitcast i8* %2644 to <16 x i8>*
  %2646 = load <16 x i8>, <16 x i8>* %2645, align 1, !tbaa !395
  %2647 = shufflevector <16 x i8> %2643, <16 x i8> %2646, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2648 = zext <32 x i8> %2647 to <32 x i16>
  %2649 = mul nsw <32 x i16> %2648, %1209
  %2650 = getelementptr inbounds i8, i8* %2632, i64 2
  %2651 = bitcast i8* %2650 to <16 x i8>*
  %2652 = load <16 x i8>, <16 x i8>* %2651, align 2, !tbaa !395
  %2653 = getelementptr inbounds i8, i8* %2632, i64 18
  %2654 = bitcast i8* %2653 to <16 x i8>*
  %2655 = load <16 x i8>, <16 x i8>* %2654, align 2, !tbaa !395
  %2656 = shufflevector <16 x i8> %2652, <16 x i8> %2655, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2657 = zext <32 x i8> %2656 to <32 x i16>
  %2658 = mul nsw <32 x i16> %2657, %1213
  %2659 = shl nsw i64 %2601, 5
  %2660 = getelementptr inbounds i8, i8* %input_bounded, i64 %2659
  %2661 = bitcast i8* %2660 to <16 x i8>*
  %2662 = load <16 x i8>, <16 x i8>* %2661, align 16, !tbaa !395
  %2663 = getelementptr inbounds i8, i8* %2660, i64 16
  %2664 = bitcast i8* %2663 to <16 x i8>*
  %2665 = load <16 x i8>, <16 x i8>* %2664, align 16, !tbaa !395
  %2666 = shufflevector <16 x i8> %2662, <16 x i8> %2665, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2667 = zext <32 x i8> %2666 to <32 x i16>
  %2668 = mul nsw <32 x i16> %2667, %1217
  %2669 = getelementptr inbounds i8, i8* %2660, i64 2
  %2670 = bitcast i8* %2669 to <16 x i8>*
  %2671 = load <16 x i8>, <16 x i8>* %2670, align 2, !tbaa !395
  %2672 = getelementptr inbounds i8, i8* %2660, i64 18
  %2673 = bitcast i8* %2672 to <16 x i8>*
  %2674 = load <16 x i8>, <16 x i8>* %2673, align 2, !tbaa !395
  %2675 = shufflevector <16 x i8> %2671, <16 x i8> %2674, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2676 = zext <32 x i8> %2675 to <32 x i16>
  %2677 = mul nsw <32 x i16> %2676, %1221
  %2678 = getelementptr inbounds i8, i8* %2660, i64 1
  %2679 = bitcast i8* %2678 to <16 x i8>*
  %2680 = load <16 x i8>, <16 x i8>* %2679, align 1, !tbaa !395
  %2681 = getelementptr inbounds i8, i8* %2660, i64 17
  %2682 = bitcast i8* %2681 to <16 x i8>*
  %2683 = load <16 x i8>, <16 x i8>* %2682, align 1, !tbaa !395
  %2684 = shufflevector <16 x i8> %2680, <16 x i8> %2683, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2685 = zext <32 x i8> %2684 to <32 x i16>
  %2686 = mul nsw <32 x i16> %2685, %1225
  %2687 = add <32 x i16> %2621, %2613
  %2688 = add <32 x i16> %2687, %2630
  %2689 = add <32 x i16> %2688, %2640
  %2690 = add <32 x i16> %2689, %2649
  %2691 = add <32 x i16> %2690, %2658
  %2692 = add <32 x i16> %2691, %2668
  %2693 = add <32 x i16> %2692, %2677
  %2694 = add <32 x i16> %2693, %2686
  %2695 = shufflevector <32 x i16> %2694, <32 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %2696 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2695, i32 4)
  %2697 = shufflevector <32 x i16> %2694, <32 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2698 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2697, i32 4)
  %2699 = shufflevector <32 x i16> %2694, <32 x i16> undef, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2700 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2699, i32 4)
  %2701 = shufflevector <32 x i16> %2694, <32 x i16> undef, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2702 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2701, i32 4)
  %2703 = shufflevector <8 x i8> %2696, <8 x i8> %2698, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2704 = shufflevector <8 x i8> %2700, <8 x i8> %2702, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2705 = shl nuw nsw i64 %indvars.iv590, 5
  %2706 = add nsw i64 %2705, %2599
  %2707 = getelementptr inbounds i8, i8* %13, i64 %2706
  %2708 = bitcast i8* %2707 to <16 x i8>*
  store <16 x i8> %2703, <16 x i8>* %2708, align 1, !tbaa !399
  %2709 = shufflevector <32 x i8> %2704, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2710 = getelementptr inbounds i8, i8* %2707, i64 16
  %2711 = bitcast i8* %2710 to <16 x i8>*
  store <16 x i8> %2709, <16 x i8>* %2711, align 1, !tbaa !399
  %indvars.iv.next591 = add nuw nsw i64 %indvars.iv590, 1
  %.not369 = icmp eq i64 %indvars.iv.next591, 2
  br i1 %.not369, label %"end for output.s0.x.xi.xi50", label %"for output.s0.x.xi.xi49"

"end for output.s0.x.xi.xi50":                    ; preds = %"for output.s0.x.xi.xi49"
  %t373 = add nsw i32 %t339, %1227
  %2712 = add nsw i64 %1228, %101
  %2713 = sext i32 %t373 to i64
  br label %"for output.s0.x.xi.xi52"

"for output.s0.x.xi.xi52":                        ; preds = %"end for output.s0.x.xi.xi50", %"for output.s0.x.xi.xi52"
  %indvars.iv595 = phi i64 [ 0, %"end for output.s0.x.xi.xi50" ], [ %indvars.iv.next596, %"for output.s0.x.xi.xi52" ]
  %2714 = add nuw nsw i64 %2712, %indvars.iv595
  %2715 = add nsw i64 %2714, %96
  %2716 = add nsw i64 %2714, %97
  %2717 = shl nsw i64 %2716, 5
  %2718 = getelementptr inbounds i8, i8* %input_bounded, i64 %2717
  %2719 = getelementptr inbounds i8, i8* %2718, i64 1
  %2720 = bitcast i8* %2719 to <16 x i8>*
  %2721 = load <16 x i8>, <16 x i8>* %2720, align 1, !tbaa !395
  %2722 = getelementptr inbounds i8, i8* %2718, i64 17
  %2723 = bitcast i8* %2722 to <16 x i8>*
  %2724 = load <16 x i8>, <16 x i8>* %2723, align 1, !tbaa !395
  %2725 = shufflevector <16 x i8> %2721, <16 x i8> %2724, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2726 = zext <32 x i8> %2725 to <32 x i16>
  %2727 = mul nsw <32 x i16> %2726, %1193
  %2728 = bitcast i8* %2718 to <16 x i8>*
  %2729 = load <16 x i8>, <16 x i8>* %2728, align 16, !tbaa !395
  %2730 = getelementptr inbounds i8, i8* %2718, i64 16
  %2731 = bitcast i8* %2730 to <16 x i8>*
  %2732 = load <16 x i8>, <16 x i8>* %2731, align 16, !tbaa !395
  %2733 = shufflevector <16 x i8> %2729, <16 x i8> %2732, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2734 = zext <32 x i8> %2733 to <32 x i16>
  %2735 = mul nsw <32 x i16> %2734, %1197
  %2736 = getelementptr inbounds i8, i8* %2718, i64 2
  %2737 = bitcast i8* %2736 to <16 x i8>*
  %2738 = load <16 x i8>, <16 x i8>* %2737, align 2, !tbaa !395
  %2739 = getelementptr inbounds i8, i8* %2718, i64 18
  %2740 = bitcast i8* %2739 to <16 x i8>*
  %2741 = load <16 x i8>, <16 x i8>* %2740, align 2, !tbaa !395
  %2742 = shufflevector <16 x i8> %2738, <16 x i8> %2741, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2743 = zext <32 x i8> %2742 to <32 x i16>
  %2744 = mul nsw <32 x i16> %2743, %1201
  %2745 = shl nsw i64 %2714, 5
  %2746 = getelementptr inbounds i8, i8* %input_bounded, i64 %2745
  %2747 = bitcast i8* %2746 to <16 x i8>*
  %2748 = load <16 x i8>, <16 x i8>* %2747, align 16, !tbaa !395
  %2749 = getelementptr inbounds i8, i8* %2746, i64 16
  %2750 = bitcast i8* %2749 to <16 x i8>*
  %2751 = load <16 x i8>, <16 x i8>* %2750, align 16, !tbaa !395
  %2752 = shufflevector <16 x i8> %2748, <16 x i8> %2751, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2753 = zext <32 x i8> %2752 to <32 x i16>
  %2754 = mul nsw <32 x i16> %2753, %1205
  %2755 = getelementptr inbounds i8, i8* %2746, i64 1
  %2756 = bitcast i8* %2755 to <16 x i8>*
  %2757 = load <16 x i8>, <16 x i8>* %2756, align 1, !tbaa !395
  %2758 = getelementptr inbounds i8, i8* %2746, i64 17
  %2759 = bitcast i8* %2758 to <16 x i8>*
  %2760 = load <16 x i8>, <16 x i8>* %2759, align 1, !tbaa !395
  %2761 = shufflevector <16 x i8> %2757, <16 x i8> %2760, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2762 = zext <32 x i8> %2761 to <32 x i16>
  %2763 = mul nsw <32 x i16> %2762, %1209
  %2764 = getelementptr inbounds i8, i8* %2746, i64 2
  %2765 = bitcast i8* %2764 to <16 x i8>*
  %2766 = load <16 x i8>, <16 x i8>* %2765, align 2, !tbaa !395
  %2767 = getelementptr inbounds i8, i8* %2746, i64 18
  %2768 = bitcast i8* %2767 to <16 x i8>*
  %2769 = load <16 x i8>, <16 x i8>* %2768, align 2, !tbaa !395
  %2770 = shufflevector <16 x i8> %2766, <16 x i8> %2769, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2771 = zext <32 x i8> %2770 to <32 x i16>
  %2772 = mul nsw <32 x i16> %2771, %1213
  %2773 = shl nsw i64 %2715, 5
  %2774 = getelementptr inbounds i8, i8* %input_bounded, i64 %2773
  %2775 = bitcast i8* %2774 to <16 x i8>*
  %2776 = load <16 x i8>, <16 x i8>* %2775, align 16, !tbaa !395
  %2777 = getelementptr inbounds i8, i8* %2774, i64 16
  %2778 = bitcast i8* %2777 to <16 x i8>*
  %2779 = load <16 x i8>, <16 x i8>* %2778, align 16, !tbaa !395
  %2780 = shufflevector <16 x i8> %2776, <16 x i8> %2779, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2781 = zext <32 x i8> %2780 to <32 x i16>
  %2782 = mul nsw <32 x i16> %2781, %1217
  %2783 = getelementptr inbounds i8, i8* %2774, i64 2
  %2784 = bitcast i8* %2783 to <16 x i8>*
  %2785 = load <16 x i8>, <16 x i8>* %2784, align 2, !tbaa !395
  %2786 = getelementptr inbounds i8, i8* %2774, i64 18
  %2787 = bitcast i8* %2786 to <16 x i8>*
  %2788 = load <16 x i8>, <16 x i8>* %2787, align 2, !tbaa !395
  %2789 = shufflevector <16 x i8> %2785, <16 x i8> %2788, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2790 = zext <32 x i8> %2789 to <32 x i16>
  %2791 = mul nsw <32 x i16> %2790, %1221
  %2792 = getelementptr inbounds i8, i8* %2774, i64 1
  %2793 = bitcast i8* %2792 to <16 x i8>*
  %2794 = load <16 x i8>, <16 x i8>* %2793, align 1, !tbaa !395
  %2795 = getelementptr inbounds i8, i8* %2774, i64 17
  %2796 = bitcast i8* %2795 to <16 x i8>*
  %2797 = load <16 x i8>, <16 x i8>* %2796, align 1, !tbaa !395
  %2798 = shufflevector <16 x i8> %2794, <16 x i8> %2797, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2799 = zext <32 x i8> %2798 to <32 x i16>
  %2800 = mul nsw <32 x i16> %2799, %1225
  %2801 = add <32 x i16> %2735, %2727
  %2802 = add <32 x i16> %2801, %2744
  %2803 = add <32 x i16> %2802, %2754
  %2804 = add <32 x i16> %2803, %2763
  %2805 = add <32 x i16> %2804, %2772
  %2806 = add <32 x i16> %2805, %2782
  %2807 = add <32 x i16> %2806, %2791
  %2808 = add <32 x i16> %2807, %2800
  %2809 = shufflevector <32 x i16> %2808, <32 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %2810 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2809, i32 4)
  %2811 = shufflevector <32 x i16> %2808, <32 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2812 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2811, i32 4)
  %2813 = shufflevector <32 x i16> %2808, <32 x i16> undef, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2814 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2813, i32 4)
  %2815 = shufflevector <32 x i16> %2808, <32 x i16> undef, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2816 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2815, i32 4)
  %2817 = shufflevector <8 x i8> %2810, <8 x i8> %2812, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2818 = shufflevector <8 x i8> %2814, <8 x i8> %2816, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2819 = shl nuw nsw i64 %indvars.iv595, 5
  %2820 = add nsw i64 %2819, %2713
  %2821 = getelementptr inbounds i8, i8* %13, i64 %2820
  %2822 = bitcast i8* %2821 to <16 x i8>*
  store <16 x i8> %2817, <16 x i8>* %2822, align 1, !tbaa !399
  %2823 = shufflevector <32 x i8> %2818, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2824 = getelementptr inbounds i8, i8* %2821, i64 16
  %2825 = bitcast i8* %2824 to <16 x i8>*
  store <16 x i8> %2823, <16 x i8>* %2825, align 1, !tbaa !399
  %indvars.iv.next596 = add nuw nsw i64 %indvars.iv595, 1
  %.not370 = icmp eq i64 %indvars.iv.next596, 2
  br i1 %.not370, label %"end for output.s0.x.xi.xi53", label %"for output.s0.x.xi.xi52"

"end for output.s0.x.xi.xi53":                    ; preds = %"for output.s0.x.xi.xi52"
  %t375 = add nsw i32 %t341, %1227
  %2826 = add nsw i64 %1228, %100
  %2827 = sext i32 %t375 to i64
  br label %"for output.s0.x.xi.xi55"

"for output.s0.x.xi.xi55":                        ; preds = %"end for output.s0.x.xi.xi53", %"for output.s0.x.xi.xi55"
  %indvars.iv600 = phi i64 [ 0, %"end for output.s0.x.xi.xi53" ], [ %indvars.iv.next601, %"for output.s0.x.xi.xi55" ]
  %2828 = add nuw nsw i64 %2826, %indvars.iv600
  %2829 = add nsw i64 %2828, %96
  %2830 = add nsw i64 %2828, %97
  %2831 = shl nsw i64 %2830, 5
  %2832 = getelementptr inbounds i8, i8* %input_bounded, i64 %2831
  %2833 = getelementptr inbounds i8, i8* %2832, i64 1
  %2834 = bitcast i8* %2833 to <16 x i8>*
  %2835 = load <16 x i8>, <16 x i8>* %2834, align 1, !tbaa !395
  %2836 = getelementptr inbounds i8, i8* %2832, i64 17
  %2837 = bitcast i8* %2836 to <16 x i8>*
  %2838 = load <16 x i8>, <16 x i8>* %2837, align 1, !tbaa !395
  %2839 = shufflevector <16 x i8> %2835, <16 x i8> %2838, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2840 = zext <32 x i8> %2839 to <32 x i16>
  %2841 = mul nsw <32 x i16> %2840, %1193
  %2842 = bitcast i8* %2832 to <16 x i8>*
  %2843 = load <16 x i8>, <16 x i8>* %2842, align 16, !tbaa !395
  %2844 = getelementptr inbounds i8, i8* %2832, i64 16
  %2845 = bitcast i8* %2844 to <16 x i8>*
  %2846 = load <16 x i8>, <16 x i8>* %2845, align 16, !tbaa !395
  %2847 = shufflevector <16 x i8> %2843, <16 x i8> %2846, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2848 = zext <32 x i8> %2847 to <32 x i16>
  %2849 = mul nsw <32 x i16> %2848, %1197
  %2850 = getelementptr inbounds i8, i8* %2832, i64 2
  %2851 = bitcast i8* %2850 to <16 x i8>*
  %2852 = load <16 x i8>, <16 x i8>* %2851, align 2, !tbaa !395
  %2853 = getelementptr inbounds i8, i8* %2832, i64 18
  %2854 = bitcast i8* %2853 to <16 x i8>*
  %2855 = load <16 x i8>, <16 x i8>* %2854, align 2, !tbaa !395
  %2856 = shufflevector <16 x i8> %2852, <16 x i8> %2855, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2857 = zext <32 x i8> %2856 to <32 x i16>
  %2858 = mul nsw <32 x i16> %2857, %1201
  %2859 = shl nsw i64 %2828, 5
  %2860 = getelementptr inbounds i8, i8* %input_bounded, i64 %2859
  %2861 = bitcast i8* %2860 to <16 x i8>*
  %2862 = load <16 x i8>, <16 x i8>* %2861, align 16, !tbaa !395
  %2863 = getelementptr inbounds i8, i8* %2860, i64 16
  %2864 = bitcast i8* %2863 to <16 x i8>*
  %2865 = load <16 x i8>, <16 x i8>* %2864, align 16, !tbaa !395
  %2866 = shufflevector <16 x i8> %2862, <16 x i8> %2865, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2867 = zext <32 x i8> %2866 to <32 x i16>
  %2868 = mul nsw <32 x i16> %2867, %1205
  %2869 = getelementptr inbounds i8, i8* %2860, i64 1
  %2870 = bitcast i8* %2869 to <16 x i8>*
  %2871 = load <16 x i8>, <16 x i8>* %2870, align 1, !tbaa !395
  %2872 = getelementptr inbounds i8, i8* %2860, i64 17
  %2873 = bitcast i8* %2872 to <16 x i8>*
  %2874 = load <16 x i8>, <16 x i8>* %2873, align 1, !tbaa !395
  %2875 = shufflevector <16 x i8> %2871, <16 x i8> %2874, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2876 = zext <32 x i8> %2875 to <32 x i16>
  %2877 = mul nsw <32 x i16> %2876, %1209
  %2878 = getelementptr inbounds i8, i8* %2860, i64 2
  %2879 = bitcast i8* %2878 to <16 x i8>*
  %2880 = load <16 x i8>, <16 x i8>* %2879, align 2, !tbaa !395
  %2881 = getelementptr inbounds i8, i8* %2860, i64 18
  %2882 = bitcast i8* %2881 to <16 x i8>*
  %2883 = load <16 x i8>, <16 x i8>* %2882, align 2, !tbaa !395
  %2884 = shufflevector <16 x i8> %2880, <16 x i8> %2883, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2885 = zext <32 x i8> %2884 to <32 x i16>
  %2886 = mul nsw <32 x i16> %2885, %1213
  %2887 = shl nsw i64 %2829, 5
  %2888 = getelementptr inbounds i8, i8* %input_bounded, i64 %2887
  %2889 = bitcast i8* %2888 to <16 x i8>*
  %2890 = load <16 x i8>, <16 x i8>* %2889, align 16, !tbaa !395
  %2891 = getelementptr inbounds i8, i8* %2888, i64 16
  %2892 = bitcast i8* %2891 to <16 x i8>*
  %2893 = load <16 x i8>, <16 x i8>* %2892, align 16, !tbaa !395
  %2894 = shufflevector <16 x i8> %2890, <16 x i8> %2893, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2895 = zext <32 x i8> %2894 to <32 x i16>
  %2896 = mul nsw <32 x i16> %2895, %1217
  %2897 = getelementptr inbounds i8, i8* %2888, i64 2
  %2898 = bitcast i8* %2897 to <16 x i8>*
  %2899 = load <16 x i8>, <16 x i8>* %2898, align 2, !tbaa !395
  %2900 = getelementptr inbounds i8, i8* %2888, i64 18
  %2901 = bitcast i8* %2900 to <16 x i8>*
  %2902 = load <16 x i8>, <16 x i8>* %2901, align 2, !tbaa !395
  %2903 = shufflevector <16 x i8> %2899, <16 x i8> %2902, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2904 = zext <32 x i8> %2903 to <32 x i16>
  %2905 = mul nsw <32 x i16> %2904, %1221
  %2906 = getelementptr inbounds i8, i8* %2888, i64 1
  %2907 = bitcast i8* %2906 to <16 x i8>*
  %2908 = load <16 x i8>, <16 x i8>* %2907, align 1, !tbaa !395
  %2909 = getelementptr inbounds i8, i8* %2888, i64 17
  %2910 = bitcast i8* %2909 to <16 x i8>*
  %2911 = load <16 x i8>, <16 x i8>* %2910, align 1, !tbaa !395
  %2912 = shufflevector <16 x i8> %2908, <16 x i8> %2911, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2913 = zext <32 x i8> %2912 to <32 x i16>
  %2914 = mul nsw <32 x i16> %2913, %1225
  %2915 = add <32 x i16> %2849, %2841
  %2916 = add <32 x i16> %2915, %2858
  %2917 = add <32 x i16> %2916, %2868
  %2918 = add <32 x i16> %2917, %2877
  %2919 = add <32 x i16> %2918, %2886
  %2920 = add <32 x i16> %2919, %2896
  %2921 = add <32 x i16> %2920, %2905
  %2922 = add <32 x i16> %2921, %2914
  %2923 = shufflevector <32 x i16> %2922, <32 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %2924 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2923, i32 4)
  %2925 = shufflevector <32 x i16> %2922, <32 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2926 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2925, i32 4)
  %2927 = shufflevector <32 x i16> %2922, <32 x i16> undef, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2928 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2927, i32 4)
  %2929 = shufflevector <32 x i16> %2922, <32 x i16> undef, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2930 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %2929, i32 4)
  %2931 = shufflevector <8 x i8> %2924, <8 x i8> %2926, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2932 = shufflevector <8 x i8> %2928, <8 x i8> %2930, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2933 = shl nuw nsw i64 %indvars.iv600, 5
  %2934 = add nsw i64 %2933, %2827
  %2935 = getelementptr inbounds i8, i8* %13, i64 %2934
  %2936 = bitcast i8* %2935 to <16 x i8>*
  store <16 x i8> %2931, <16 x i8>* %2936, align 1, !tbaa !399
  %2937 = shufflevector <32 x i8> %2932, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2938 = getelementptr inbounds i8, i8* %2935, i64 16
  %2939 = bitcast i8* %2938 to <16 x i8>*
  store <16 x i8> %2937, <16 x i8>* %2939, align 1, !tbaa !399
  %indvars.iv.next601 = add nuw nsw i64 %indvars.iv600, 1
  %.not371 = icmp eq i64 %indvars.iv.next601, 2
  br i1 %.not371, label %"end for output.s0.x.xi.xi56", label %"for output.s0.x.xi.xi55"

"end for output.s0.x.xi.xi56":                    ; preds = %"for output.s0.x.xi.xi55"
  %t377 = add nsw i32 %t343, %1227
  %2940 = add nsw i64 %1228, %99
  %2941 = sext i32 %t377 to i64
  br label %"for output.s0.x.xi.xi58"

"for output.s0.x.xi.xi58":                        ; preds = %"end for output.s0.x.xi.xi56", %"for output.s0.x.xi.xi58"
  %indvars.iv605 = phi i64 [ 0, %"end for output.s0.x.xi.xi56" ], [ %indvars.iv.next606, %"for output.s0.x.xi.xi58" ]
  %2942 = add nuw nsw i64 %2940, %indvars.iv605
  %2943 = add nsw i64 %2942, %96
  %2944 = add nsw i64 %2942, %97
  %2945 = shl nsw i64 %2944, 5
  %2946 = getelementptr inbounds i8, i8* %input_bounded, i64 %2945
  %2947 = getelementptr inbounds i8, i8* %2946, i64 1
  %2948 = bitcast i8* %2947 to <16 x i8>*
  %2949 = load <16 x i8>, <16 x i8>* %2948, align 1, !tbaa !395
  %2950 = getelementptr inbounds i8, i8* %2946, i64 17
  %2951 = bitcast i8* %2950 to <16 x i8>*
  %2952 = load <16 x i8>, <16 x i8>* %2951, align 1, !tbaa !395
  %2953 = shufflevector <16 x i8> %2949, <16 x i8> %2952, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2954 = zext <32 x i8> %2953 to <32 x i16>
  %2955 = mul nsw <32 x i16> %2954, %1193
  %2956 = bitcast i8* %2946 to <16 x i8>*
  %2957 = load <16 x i8>, <16 x i8>* %2956, align 16, !tbaa !395
  %2958 = getelementptr inbounds i8, i8* %2946, i64 16
  %2959 = bitcast i8* %2958 to <16 x i8>*
  %2960 = load <16 x i8>, <16 x i8>* %2959, align 16, !tbaa !395
  %2961 = shufflevector <16 x i8> %2957, <16 x i8> %2960, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2962 = zext <32 x i8> %2961 to <32 x i16>
  %2963 = mul nsw <32 x i16> %2962, %1197
  %2964 = getelementptr inbounds i8, i8* %2946, i64 2
  %2965 = bitcast i8* %2964 to <16 x i8>*
  %2966 = load <16 x i8>, <16 x i8>* %2965, align 2, !tbaa !395
  %2967 = getelementptr inbounds i8, i8* %2946, i64 18
  %2968 = bitcast i8* %2967 to <16 x i8>*
  %2969 = load <16 x i8>, <16 x i8>* %2968, align 2, !tbaa !395
  %2970 = shufflevector <16 x i8> %2966, <16 x i8> %2969, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2971 = zext <32 x i8> %2970 to <32 x i16>
  %2972 = mul nsw <32 x i16> %2971, %1201
  %2973 = shl nsw i64 %2942, 5
  %2974 = getelementptr inbounds i8, i8* %input_bounded, i64 %2973
  %2975 = bitcast i8* %2974 to <16 x i8>*
  %2976 = load <16 x i8>, <16 x i8>* %2975, align 16, !tbaa !395
  %2977 = getelementptr inbounds i8, i8* %2974, i64 16
  %2978 = bitcast i8* %2977 to <16 x i8>*
  %2979 = load <16 x i8>, <16 x i8>* %2978, align 16, !tbaa !395
  %2980 = shufflevector <16 x i8> %2976, <16 x i8> %2979, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2981 = zext <32 x i8> %2980 to <32 x i16>
  %2982 = mul nsw <32 x i16> %2981, %1205
  %2983 = getelementptr inbounds i8, i8* %2974, i64 1
  %2984 = bitcast i8* %2983 to <16 x i8>*
  %2985 = load <16 x i8>, <16 x i8>* %2984, align 1, !tbaa !395
  %2986 = getelementptr inbounds i8, i8* %2974, i64 17
  %2987 = bitcast i8* %2986 to <16 x i8>*
  %2988 = load <16 x i8>, <16 x i8>* %2987, align 1, !tbaa !395
  %2989 = shufflevector <16 x i8> %2985, <16 x i8> %2988, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2990 = zext <32 x i8> %2989 to <32 x i16>
  %2991 = mul nsw <32 x i16> %2990, %1209
  %2992 = getelementptr inbounds i8, i8* %2974, i64 2
  %2993 = bitcast i8* %2992 to <16 x i8>*
  %2994 = load <16 x i8>, <16 x i8>* %2993, align 2, !tbaa !395
  %2995 = getelementptr inbounds i8, i8* %2974, i64 18
  %2996 = bitcast i8* %2995 to <16 x i8>*
  %2997 = load <16 x i8>, <16 x i8>* %2996, align 2, !tbaa !395
  %2998 = shufflevector <16 x i8> %2994, <16 x i8> %2997, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2999 = zext <32 x i8> %2998 to <32 x i16>
  %3000 = mul nsw <32 x i16> %2999, %1213
  %3001 = shl nsw i64 %2943, 5
  %3002 = getelementptr inbounds i8, i8* %input_bounded, i64 %3001
  %3003 = bitcast i8* %3002 to <16 x i8>*
  %3004 = load <16 x i8>, <16 x i8>* %3003, align 16, !tbaa !395
  %3005 = getelementptr inbounds i8, i8* %3002, i64 16
  %3006 = bitcast i8* %3005 to <16 x i8>*
  %3007 = load <16 x i8>, <16 x i8>* %3006, align 16, !tbaa !395
  %3008 = shufflevector <16 x i8> %3004, <16 x i8> %3007, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3009 = zext <32 x i8> %3008 to <32 x i16>
  %3010 = mul nsw <32 x i16> %3009, %1217
  %3011 = getelementptr inbounds i8, i8* %3002, i64 2
  %3012 = bitcast i8* %3011 to <16 x i8>*
  %3013 = load <16 x i8>, <16 x i8>* %3012, align 2, !tbaa !395
  %3014 = getelementptr inbounds i8, i8* %3002, i64 18
  %3015 = bitcast i8* %3014 to <16 x i8>*
  %3016 = load <16 x i8>, <16 x i8>* %3015, align 2, !tbaa !395
  %3017 = shufflevector <16 x i8> %3013, <16 x i8> %3016, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3018 = zext <32 x i8> %3017 to <32 x i16>
  %3019 = mul nsw <32 x i16> %3018, %1221
  %3020 = getelementptr inbounds i8, i8* %3002, i64 1
  %3021 = bitcast i8* %3020 to <16 x i8>*
  %3022 = load <16 x i8>, <16 x i8>* %3021, align 1, !tbaa !395
  %3023 = getelementptr inbounds i8, i8* %3002, i64 17
  %3024 = bitcast i8* %3023 to <16 x i8>*
  %3025 = load <16 x i8>, <16 x i8>* %3024, align 1, !tbaa !395
  %3026 = shufflevector <16 x i8> %3022, <16 x i8> %3025, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3027 = zext <32 x i8> %3026 to <32 x i16>
  %3028 = mul nsw <32 x i16> %3027, %1225
  %3029 = add <32 x i16> %2963, %2955
  %3030 = add <32 x i16> %3029, %2972
  %3031 = add <32 x i16> %3030, %2982
  %3032 = add <32 x i16> %3031, %2991
  %3033 = add <32 x i16> %3032, %3000
  %3034 = add <32 x i16> %3033, %3010
  %3035 = add <32 x i16> %3034, %3019
  %3036 = add <32 x i16> %3035, %3028
  %3037 = shufflevector <32 x i16> %3036, <32 x i16> undef, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3038 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %3037, i32 4)
  %3039 = shufflevector <32 x i16> %3036, <32 x i16> undef, <8 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3040 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %3039, i32 4)
  %3041 = shufflevector <32 x i16> %3036, <32 x i16> undef, <8 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %3042 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %3041, i32 4)
  %3043 = shufflevector <32 x i16> %3036, <32 x i16> undef, <8 x i32> <i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3044 = call <8 x i8> @llvm.aarch64.neon.sqshrun.v8i8(<8 x i16> %3043, i32 4)
  %3045 = shufflevector <8 x i8> %3038, <8 x i8> %3040, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3046 = shufflevector <8 x i8> %3042, <8 x i8> %3044, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3047 = shl nuw nsw i64 %indvars.iv605, 5
  %3048 = add nsw i64 %3047, %2941
  %3049 = getelementptr inbounds i8, i8* %13, i64 %3048
  %3050 = bitcast i8* %3049 to <16 x i8>*
  store <16 x i8> %3045, <16 x i8>* %3050, align 1, !tbaa !399
  %3051 = shufflevector <32 x i8> %3046, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3052 = getelementptr inbounds i8, i8* %3049, i64 16
  %3053 = bitcast i8* %3052 to <16 x i8>*
  store <16 x i8> %3051, <16 x i8>* %3053, align 1, !tbaa !399
  %indvars.iv.next606 = add nuw nsw i64 %indvars.iv605, 1
  %.not372 = icmp eq i64 %indvars.iv.next606, 2
  br i1 %.not372, label %"end for output.s0.x.xi.xi59", label %"for output.s0.x.xi.xi58"

"end for output.s0.x.xi.xi59":                    ; preds = %"for output.s0.x.xi.xi58"
  %indvars.iv.next611 = add nuw nsw i64 %indvars.iv610, 1
  %.not373 = icmp eq i64 %indvars.iv.next611, %98
  br i1 %.not373, label %"end for output.s0.x.x", label %"for output.s0.x.x"

"for output.s0.y.y88":                            ; preds = %"for output.s0.y.y88.preheader", %"end for output.s0.x.x186"
  %indvars.iv732 = phi i64 [ 0, %"for output.s0.y.y88.preheader" ], [ %indvars.iv.next733, %"end for output.s0.x.x186" ]
  %3054 = load i64, i64* %.fca.1.gep, align 8, !tbaa !386
  %cmp.i448 = icmp ult i64 %3054, %157
  %3055 = load i8*, i8** %.fca.0.gep, align 8, !tbaa !388
  br i1 %cmp.i448, label %if.then.i451, label %pseudostack_alloc.exit464, !prof !389

if.then.i451:                                     ; preds = %"for output.s0.y.y88"
  %tobool1.not.i450 = icmp ne i8* %3055, null
  %3056 = load i64, i64* %.fca.2.gep, align 8
  %cmp2.i453 = icmp ugt i64 %3056, 16384
  %or.cond478 = and i1 %tobool1.not.i450, %cmp2.i453
  br i1 %or.cond478, label %if.then3.i455, label %if.end.i459

if.then3.i455:                                    ; preds = %if.then.i451
  call void @halide_free(i8* null, i8* nonnull %3055) #14
  %.pre754 = load i64, i64* %.fca.2.gep, align 8, !tbaa !390
  br label %if.end.i459

if.end.i459:                                      ; preds = %if.then3.i455, %if.then.i451
  %3057 = phi i64 [ %.pre754, %if.then3.i455 ], [ %3056, %if.then.i451 ]
  %add.i457 = add i64 %3057, %157
  store i64 %add.i457, i64* %.fca.2.gep, align 8, !tbaa !390
  %cmp7.i458 = icmp ugt i64 %add.i457, 16384
  br i1 %cmp7.i458, label %if.then8.i461, label %if.end11.i463

if.then8.i461:                                    ; preds = %if.end.i459
  %call.i460 = call i8* @halide_malloc(i8* null, i64 %157) #14
  br label %if.end11.i463

if.end11.i463:                                    ; preds = %if.then8.i461, %if.end.i459
  %storemerge.i462 = phi i8* [ %call.i460, %if.then8.i461 ], [ null, %if.end.i459 ]
  store i8* %storemerge.i462, i8** %.fca.0.gep, align 8, !tbaa !388
  store i64 %157, i64* %.fca.1.gep, align 8, !tbaa !386
  br label %pseudostack_alloc.exit464

pseudostack_alloc.exit464:                        ; preds = %"for output.s0.y.y88", %if.end11.i463
  %3058 = phi i8* [ %storemerge.i462, %if.end11.i463 ], [ %3055, %"for output.s0.y.y88" ]
  %.not = icmp eq i8* %3058, null
  br i1 %.not, label %then_bb92, label %"produce input_bounded94", !prof !391

"end for output.s0.y.y89":                        ; preds = %"end for output.s0.y.y"
  %tobool.not.i.not = icmp eq i8* %.0, null
  br i1 %tobool.not.i.not, label %call_destructor.exit, label %if.then.i465

if.then.i465.loopexit:                            ; preds = %"end for output.s0.x.x186"
  %3059 = bitcast %struct.halide_pseudostack_slot_t* %input_bounded.pseudostack_slot to i8*
  br label %if.then.i465

if.then.i465:                                     ; preds = %if.then.i465.loopexit, %"end for output.s0.y.y89"
  %.1476 = phi i8* [ %.0, %"end for output.s0.y.y89" ], [ %3059, %if.then.i465.loopexit ]
  %ptr1.i = bitcast i8* %.1476 to i8**
  %3060 = load i8*, i8** %ptr1.i, align 8, !tbaa !388
  %tobool.not.i467 = icmp eq i8* %3060, null
  br i1 %tobool.not.i467, label %pseudostack_free.exit, label %land.lhs.true.i470

land.lhs.true.i470:                               ; preds = %if.then.i465
  %cumulative_size.i468 = getelementptr inbounds i8, i8* %.1476, i64 16
  %3061 = bitcast i8* %cumulative_size.i468 to i64*
  %3062 = load i64, i64* %3061, align 8, !tbaa !390
  %cmp.i469 = icmp ugt i64 %3062, 16384
  br i1 %cmp.i469, label %if.then.i471, label %pseudostack_free.exit

if.then.i471:                                     ; preds = %land.lhs.true.i470
  call void @halide_free(i8* null, i8* nonnull %3060) #14
  br label %pseudostack_free.exit

pseudostack_free.exit:                            ; preds = %if.then.i465, %land.lhs.true.i470, %if.then.i471
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %.1476, i8 0, i64 24, i1 false)
  br label %call_destructor.exit

call_destructor.exit:                             ; preds = %"end for output.s0.y.y89", %pseudostack_free.exit
  ret i32 0

then_bb92:                                        ; preds = %pseudostack_alloc.exit464
  %3063 = alloca i8*, i64 %157, align 16
  %3064 = bitcast i8** %3063 to i8*
  store i8** %3063, i8*** %158, align 8
  br label %"produce input_bounded94"

"produce input_bounded94":                        ; preds = %pseudostack_alloc.exit464, %then_bb92
  %input_bounded93 = phi i8* [ %3064, %then_bb92 ], [ %3058, %pseudostack_alloc.exit464 ]
  %3065 = trunc i64 %indvars.iv732 to i32
  %3066 = shl nsw i32 %3065, 4
  %t381 = add nsw i32 %3066, %122
  %a44 = add nsw i32 %t381, -1
  %3067 = icmp sgt i32 %a44, %132
  %a43 = select i1 %3067, i32 %a44, i32 %132
  %b45 = add nsw i32 %t381, 17
  %3068 = icmp slt i32 %a43, %b45
  %3069 = icmp sgt i32 %a43, %b48
  %a45 = select i1 %3069, i32 %a43, i32 %b48
  %3070 = icmp slt i32 %a45, %b45
  %a49 = sub i32 %159, %3066
  %3071 = icmp slt i32 %a49, 17
  %a48 = select i1 %3071, i32 %a49, i32 17
  %3072 = icmp sgt i32 %a48, -1
  br i1 %3072, label %"for input_bounded.s0.y.rebased101.preheader", label %"end for input_bounded.s0.y.rebased102", !prof !385

"for input_bounded.s0.y.rebased101.preheader":    ; preds = %"produce input_bounded94"
  %3073 = add nsw i32 %160, %3066
  %3074 = sext i32 %3073 to i64
  %3075 = zext i32 %a48 to i64
  br label %"for input_bounded.s0.y.rebased101"

"for input_bounded.s0.y.rebased101":              ; preds = %"for input_bounded.s0.y.rebased101.preheader", %"end for input_bounded.s0.x.x107"
  %indvars.iv632 = phi i64 [ 0, %"for input_bounded.s0.y.rebased101.preheader" ], [ %indvars.iv.next633, %"end for input_bounded.s0.x.x107" ]
  %3076 = add nsw i64 %indvars.iv632, %3074
  %3077 = icmp slt i64 %3076, %214
  %3078 = trunc i64 %3076 to i32
  %a52 = select i1 %3077, i32 %3078, i32 %131
  br i1 %163, label %"for input_bounded.s0.x.x106.preheader", label %"end for input_bounded.s0.x.x107", !prof !385

"for input_bounded.s0.x.x106.preheader":          ; preds = %"for input_bounded.s0.y.rebased101"
  %3079 = icmp sgt i32 %a52, 1
  %3080 = select i1 %3079, i32 %a52, i32 1
  %3081 = add nsw i32 %3080, -1
  %3082 = mul nsw i32 %3081, %130
  %t279105 = sub nsw i32 %3082, %134
  %3083 = trunc i64 %indvars.iv632 to i32
  %t280104 = mul i32 %161, %3083
  %3084 = insertelement <32 x i32> undef, i32 %t279105, i32 0
  %3085 = shufflevector <32 x i32> %3084, <32 x i32> undef, <32 x i32> zeroinitializer
  %3086 = sext i32 %t280104 to i64
  br label %"for input_bounded.s0.x.x106"

"end for input_bounded.s0.y.rebased102":          ; preds = %"end for input_bounded.s0.x.x107", %"produce input_bounded94"
  %.not327 = icmp slt i32 %a56, %t381
  %a55 = select i1 %.not327, i32 %a44, i32 %a56
  %3087 = icmp slt i32 %a55, %b45
  %3088 = select i1 %3087, i32 %a55, i32 %b45
  %3089 = select i1 %3068, i32 %a43, i32 %b45
  %t281112 = sub nsw i32 %3088, %3089
  %3090 = icmp sgt i32 %t281112, 0
  br i1 %3090, label %"for input_bounded.s0.y.rebased115.preheader", label %"end for input_bounded.s0.y.rebased116", !prof !385

"for input_bounded.s0.y.rebased115.preheader":    ; preds = %"end for input_bounded.s0.y.rebased102"
  %3091 = sub i32 %3089, %132
  %3092 = sext i32 %3091 to i64
  %3093 = zext i32 %t281112 to i64
  br label %"for input_bounded.s0.y.rebased115"

"for input_bounded.s0.x.x106":                    ; preds = %"for input_bounded.s0.x.x106.preheader", %"for input_bounded.s0.x.x106"
  %indvars.iv630 = phi i64 [ 0, %"for input_bounded.s0.x.x106.preheader" ], [ %indvars.iv.next631, %"for input_bounded.s0.x.x106" ]
  %3094 = trunc i64 %indvars.iv630 to i32
  %3095 = shl nsw i32 %3094, 5
  %3096 = add i32 %164, %3095
  %3097 = insertelement <32 x i32> undef, i32 %3096, i32 0
  %3098 = shufflevector <32 x i32> %3097, <32 x i32> undef, <32 x i32> zeroinitializer
  %3099 = add nsw <32 x i32> %3098, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3100 = shufflevector <32 x i32> %3099, <32 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3101 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3100, <4 x i32> %167)
  %3102 = shufflevector <32 x i32> %3099, <32 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3103 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3102, <4 x i32> %167)
  %3104 = shufflevector <32 x i32> %3099, <32 x i32> undef, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %3105 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3104, <4 x i32> %167)
  %3106 = shufflevector <32 x i32> %3099, <32 x i32> undef, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %3107 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3106, <4 x i32> %167)
  %3108 = shufflevector <32 x i32> %3099, <32 x i32> undef, <4 x i32> <i32 16, i32 17, i32 18, i32 19>
  %3109 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3108, <4 x i32> %167)
  %3110 = shufflevector <32 x i32> %3099, <32 x i32> undef, <4 x i32> <i32 20, i32 21, i32 22, i32 23>
  %3111 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3110, <4 x i32> %167)
  %3112 = shufflevector <32 x i32> %3099, <32 x i32> undef, <4 x i32> <i32 24, i32 25, i32 26, i32 27>
  %3113 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3112, <4 x i32> %167)
  %3114 = shufflevector <32 x i32> %3099, <32 x i32> undef, <4 x i32> <i32 28, i32 29, i32 30, i32 31>
  %3115 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3114, <4 x i32> %167)
  %3116 = shufflevector <4 x i32> %3115, <4 x i32> poison, <8 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3>
  %3117 = shufflevector <8 x i32> %3116, <8 x i32> poison, <16 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 4, i32 5, i32 6, i32 7>
  %3118 = shufflevector <16 x i32> %3117, <16 x i32> poison, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 12, i32 13, i32 14, i32 15>
  %3119 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3101, <4 x i32> %169)
  %3120 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3103, <4 x i32> %169)
  %3121 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3105, <4 x i32> %169)
  %3122 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3107, <4 x i32> %169)
  %3123 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3109, <4 x i32> %169)
  %3124 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3111, <4 x i32> %169)
  %3125 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3113, <4 x i32> %169)
  %3126 = shufflevector <32 x i32> %3118, <32 x i32> undef, <4 x i32> <i32 28, i32 29, i32 30, i32 31>
  %3127 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3126, <4 x i32> %169)
  %3128 = shufflevector <4 x i32> %3119, <4 x i32> %3120, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3129 = shufflevector <4 x i32> %3121, <4 x i32> %3122, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3130 = shufflevector <4 x i32> %3123, <4 x i32> %3124, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3131 = shufflevector <4 x i32> %3125, <4 x i32> %3127, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3132 = shufflevector <8 x i32> %3128, <8 x i32> %3129, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3133 = shufflevector <8 x i32> %3130, <8 x i32> %3131, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3134 = shufflevector <16 x i32> %3132, <16 x i32> %3133, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3135 = add nsw <32 x i32> %3134, %3085
  %3136 = extractelement <32 x i32> %3135, i32 0
  %3137 = sext i32 %3136 to i64
  %3138 = getelementptr inbounds i8, i8* %135, i64 %3137
  %3139 = load i8, i8* %3138, align 1, !tbaa !392
  %3140 = insertelement <32 x i8> undef, i8 %3139, i32 0
  %3141 = extractelement <32 x i32> %3135, i32 1
  %3142 = sext i32 %3141 to i64
  %3143 = getelementptr inbounds i8, i8* %135, i64 %3142
  %3144 = load i8, i8* %3143, align 1, !tbaa !392
  %3145 = insertelement <32 x i8> %3140, i8 %3144, i32 1
  %3146 = extractelement <32 x i32> %3135, i32 2
  %3147 = sext i32 %3146 to i64
  %3148 = getelementptr inbounds i8, i8* %135, i64 %3147
  %3149 = load i8, i8* %3148, align 1, !tbaa !392
  %3150 = insertelement <32 x i8> %3145, i8 %3149, i32 2
  %3151 = extractelement <32 x i32> %3135, i32 3
  %3152 = sext i32 %3151 to i64
  %3153 = getelementptr inbounds i8, i8* %135, i64 %3152
  %3154 = load i8, i8* %3153, align 1, !tbaa !392
  %3155 = insertelement <32 x i8> %3150, i8 %3154, i32 3
  %3156 = extractelement <32 x i32> %3135, i32 4
  %3157 = sext i32 %3156 to i64
  %3158 = getelementptr inbounds i8, i8* %135, i64 %3157
  %3159 = load i8, i8* %3158, align 1, !tbaa !392
  %3160 = insertelement <32 x i8> %3155, i8 %3159, i32 4
  %3161 = extractelement <32 x i32> %3135, i32 5
  %3162 = sext i32 %3161 to i64
  %3163 = getelementptr inbounds i8, i8* %135, i64 %3162
  %3164 = load i8, i8* %3163, align 1, !tbaa !392
  %3165 = insertelement <32 x i8> %3160, i8 %3164, i32 5
  %3166 = extractelement <32 x i32> %3135, i32 6
  %3167 = sext i32 %3166 to i64
  %3168 = getelementptr inbounds i8, i8* %135, i64 %3167
  %3169 = load i8, i8* %3168, align 1, !tbaa !392
  %3170 = insertelement <32 x i8> %3165, i8 %3169, i32 6
  %3171 = extractelement <32 x i32> %3135, i32 7
  %3172 = sext i32 %3171 to i64
  %3173 = getelementptr inbounds i8, i8* %135, i64 %3172
  %3174 = load i8, i8* %3173, align 1, !tbaa !392
  %3175 = insertelement <32 x i8> %3170, i8 %3174, i32 7
  %3176 = extractelement <32 x i32> %3135, i32 8
  %3177 = sext i32 %3176 to i64
  %3178 = getelementptr inbounds i8, i8* %135, i64 %3177
  %3179 = load i8, i8* %3178, align 1, !tbaa !392
  %3180 = insertelement <32 x i8> %3175, i8 %3179, i32 8
  %3181 = extractelement <32 x i32> %3135, i32 9
  %3182 = sext i32 %3181 to i64
  %3183 = getelementptr inbounds i8, i8* %135, i64 %3182
  %3184 = load i8, i8* %3183, align 1, !tbaa !392
  %3185 = insertelement <32 x i8> %3180, i8 %3184, i32 9
  %3186 = extractelement <32 x i32> %3135, i32 10
  %3187 = sext i32 %3186 to i64
  %3188 = getelementptr inbounds i8, i8* %135, i64 %3187
  %3189 = load i8, i8* %3188, align 1, !tbaa !392
  %3190 = insertelement <32 x i8> %3185, i8 %3189, i32 10
  %3191 = extractelement <32 x i32> %3135, i32 11
  %3192 = sext i32 %3191 to i64
  %3193 = getelementptr inbounds i8, i8* %135, i64 %3192
  %3194 = load i8, i8* %3193, align 1, !tbaa !392
  %3195 = insertelement <32 x i8> %3190, i8 %3194, i32 11
  %3196 = extractelement <32 x i32> %3135, i32 12
  %3197 = sext i32 %3196 to i64
  %3198 = getelementptr inbounds i8, i8* %135, i64 %3197
  %3199 = load i8, i8* %3198, align 1, !tbaa !392
  %3200 = insertelement <32 x i8> %3195, i8 %3199, i32 12
  %3201 = extractelement <32 x i32> %3135, i32 13
  %3202 = sext i32 %3201 to i64
  %3203 = getelementptr inbounds i8, i8* %135, i64 %3202
  %3204 = load i8, i8* %3203, align 1, !tbaa !392
  %3205 = insertelement <32 x i8> %3200, i8 %3204, i32 13
  %3206 = extractelement <32 x i32> %3135, i32 14
  %3207 = sext i32 %3206 to i64
  %3208 = getelementptr inbounds i8, i8* %135, i64 %3207
  %3209 = load i8, i8* %3208, align 1, !tbaa !392
  %3210 = insertelement <32 x i8> %3205, i8 %3209, i32 14
  %3211 = extractelement <32 x i32> %3135, i32 15
  %3212 = sext i32 %3211 to i64
  %3213 = getelementptr inbounds i8, i8* %135, i64 %3212
  %3214 = load i8, i8* %3213, align 1, !tbaa !392
  %3215 = insertelement <32 x i8> %3210, i8 %3214, i32 15
  %3216 = extractelement <32 x i32> %3135, i32 16
  %3217 = sext i32 %3216 to i64
  %3218 = getelementptr inbounds i8, i8* %135, i64 %3217
  %3219 = load i8, i8* %3218, align 1, !tbaa !392
  %3220 = insertelement <32 x i8> %3215, i8 %3219, i32 16
  %3221 = extractelement <32 x i32> %3135, i32 17
  %3222 = sext i32 %3221 to i64
  %3223 = getelementptr inbounds i8, i8* %135, i64 %3222
  %3224 = load i8, i8* %3223, align 1, !tbaa !392
  %3225 = insertelement <32 x i8> %3220, i8 %3224, i32 17
  %3226 = extractelement <32 x i32> %3135, i32 18
  %3227 = sext i32 %3226 to i64
  %3228 = getelementptr inbounds i8, i8* %135, i64 %3227
  %3229 = load i8, i8* %3228, align 1, !tbaa !392
  %3230 = insertelement <32 x i8> %3225, i8 %3229, i32 18
  %3231 = extractelement <32 x i32> %3135, i32 19
  %3232 = sext i32 %3231 to i64
  %3233 = getelementptr inbounds i8, i8* %135, i64 %3232
  %3234 = load i8, i8* %3233, align 1, !tbaa !392
  %3235 = insertelement <32 x i8> %3230, i8 %3234, i32 19
  %3236 = extractelement <32 x i32> %3135, i32 20
  %3237 = sext i32 %3236 to i64
  %3238 = getelementptr inbounds i8, i8* %135, i64 %3237
  %3239 = load i8, i8* %3238, align 1, !tbaa !392
  %3240 = insertelement <32 x i8> %3235, i8 %3239, i32 20
  %3241 = extractelement <32 x i32> %3135, i32 21
  %3242 = sext i32 %3241 to i64
  %3243 = getelementptr inbounds i8, i8* %135, i64 %3242
  %3244 = load i8, i8* %3243, align 1, !tbaa !392
  %3245 = insertelement <32 x i8> %3240, i8 %3244, i32 21
  %3246 = extractelement <32 x i32> %3135, i32 22
  %3247 = sext i32 %3246 to i64
  %3248 = getelementptr inbounds i8, i8* %135, i64 %3247
  %3249 = load i8, i8* %3248, align 1, !tbaa !392
  %3250 = insertelement <32 x i8> %3245, i8 %3249, i32 22
  %3251 = extractelement <32 x i32> %3135, i32 23
  %3252 = sext i32 %3251 to i64
  %3253 = getelementptr inbounds i8, i8* %135, i64 %3252
  %3254 = load i8, i8* %3253, align 1, !tbaa !392
  %3255 = insertelement <32 x i8> %3250, i8 %3254, i32 23
  %3256 = extractelement <32 x i32> %3135, i32 24
  %3257 = sext i32 %3256 to i64
  %3258 = getelementptr inbounds i8, i8* %135, i64 %3257
  %3259 = load i8, i8* %3258, align 1, !tbaa !392
  %3260 = insertelement <32 x i8> %3255, i8 %3259, i32 24
  %3261 = extractelement <32 x i32> %3135, i32 25
  %3262 = sext i32 %3261 to i64
  %3263 = getelementptr inbounds i8, i8* %135, i64 %3262
  %3264 = load i8, i8* %3263, align 1, !tbaa !392
  %3265 = insertelement <32 x i8> %3260, i8 %3264, i32 25
  %3266 = extractelement <32 x i32> %3135, i32 26
  %3267 = sext i32 %3266 to i64
  %3268 = getelementptr inbounds i8, i8* %135, i64 %3267
  %3269 = load i8, i8* %3268, align 1, !tbaa !392
  %3270 = insertelement <32 x i8> %3265, i8 %3269, i32 26
  %3271 = extractelement <32 x i32> %3135, i32 27
  %3272 = sext i32 %3271 to i64
  %3273 = getelementptr inbounds i8, i8* %135, i64 %3272
  %3274 = load i8, i8* %3273, align 1, !tbaa !392
  %3275 = insertelement <32 x i8> %3270, i8 %3274, i32 27
  %3276 = extractelement <32 x i32> %3135, i32 28
  %3277 = sext i32 %3276 to i64
  %3278 = getelementptr inbounds i8, i8* %135, i64 %3277
  %3279 = load i8, i8* %3278, align 1, !tbaa !392
  %3280 = insertelement <32 x i8> %3275, i8 %3279, i32 28
  %3281 = extractelement <32 x i32> %3135, i32 29
  %3282 = sext i32 %3281 to i64
  %3283 = getelementptr inbounds i8, i8* %135, i64 %3282
  %3284 = load i8, i8* %3283, align 1, !tbaa !392
  %3285 = insertelement <32 x i8> %3280, i8 %3284, i32 29
  %3286 = extractelement <32 x i32> %3135, i32 30
  %3287 = sext i32 %3286 to i64
  %3288 = getelementptr inbounds i8, i8* %135, i64 %3287
  %3289 = load i8, i8* %3288, align 1, !tbaa !392
  %3290 = insertelement <32 x i8> %3285, i8 %3289, i32 30
  %3291 = extractelement <32 x i32> %3135, i32 31
  %3292 = sext i32 %3291 to i64
  %3293 = getelementptr inbounds i8, i8* %135, i64 %3292
  %3294 = load i8, i8* %3293, align 1, !tbaa !392
  %3295 = insertelement <32 x i8> %3290, i8 %3294, i32 31
  %3296 = shufflevector <32 x i8> %3295, <32 x i8> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3297 = add nsw i64 %indvars.iv630, %3086
  %3298 = shl nsw i64 %3297, 5
  %3299 = getelementptr inbounds i8, i8* %input_bounded93, i64 %3298
  %3300 = bitcast i8* %3299 to <16 x i8>*
  store <16 x i8> %3296, <16 x i8>* %3300, align 16, !tbaa !395
  %3301 = shufflevector <32 x i8> %3295, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3302 = getelementptr inbounds i8, i8* %3299, i64 16
  %3303 = bitcast i8* %3302 to <16 x i8>*
  store <16 x i8> %3301, <16 x i8>* %3303, align 16, !tbaa !395
  %indvars.iv.next631 = add nuw nsw i64 %indvars.iv630, 1
  %.not353 = icmp eq i64 %indvars.iv.next631, %213
  br i1 %.not353, label %"end for input_bounded.s0.x.x107", label %"for input_bounded.s0.x.x106"

"end for input_bounded.s0.x.x107":                ; preds = %"for input_bounded.s0.x.x106", %"for input_bounded.s0.y.rebased101"
  %indvars.iv.next633 = add nuw nsw i64 %indvars.iv632, 1
  %.not352 = icmp eq i64 %indvars.iv632, %3075
  br i1 %.not352, label %"end for input_bounded.s0.y.rebased102", label %"for input_bounded.s0.y.rebased101"

"for input_bounded.s0.y.rebased115":              ; preds = %"for input_bounded.s0.y.rebased115.preheader", %"end for input_bounded.s0.x.x.rebased132"
  %indvars.iv641 = phi i64 [ 0, %"for input_bounded.s0.y.rebased115.preheader" ], [ %indvars.iv.next642, %"end for input_bounded.s0.x.x.rebased132" ]
  %indvars.iv.next642 = add nuw nsw i64 %indvars.iv641, 1
  %3304 = trunc i64 %indvars.iv.next642 to i32
  %3305 = sub i32 %3304, %122
  %3306 = sub i32 %3305, %3066
  %3307 = add i32 %3306, %3089
  %t294118 = mul i32 %161, %3307
  %3308 = add nsw i64 %indvars.iv641, %3092
  %3309 = mul nsw i64 %3308, %218
  %3310 = sub i64 %3309, %219
  br i1 %170, label %"for input_bounded.s0.x.x120.preheader", label %"end for input_bounded.s0.x.x121", !prof !385

"for input_bounded.s0.x.x120.preheader":          ; preds = %"for input_bounded.s0.y.rebased115"
  %3311 = trunc i64 %3310 to i32
  %3312 = insertelement <32 x i32> undef, i32 %3311, i32 0
  %3313 = shufflevector <32 x i32> %3312, <32 x i32> undef, <32 x i32> zeroinitializer
  %3314 = sext i32 %t294118 to i64
  br label %"for input_bounded.s0.x.x120"

"end for input_bounded.s0.y.rebased116":          ; preds = %"end for input_bounded.s0.x.x.rebased132", %"end for input_bounded.s0.y.rebased102"
  %a91 = add nsw i32 %3066, %176
  %3315 = icmp slt i32 %a91, 1
  %a90 = select i1 %3315, i32 %a91, i32 1
  %3316 = icmp sgt i32 %a90, -17
  br i1 %3316, label %"for input_bounded.s0.y.rebased138.preheader", label %"consume input_bounded146", !prof !385

"for input_bounded.s0.y.rebased138.preheader":    ; preds = %"end for input_bounded.s0.y.rebased116"
  %3317 = select i1 %3070, i32 %a45, i32 %b45
  %a98 = sub i32 %177, %3066
  %3318 = icmp slt i32 %a98, 17
  %a97 = select i1 %3318, i32 %a98, i32 17
  %3319 = icmp sgt i32 %a97, -1
  %3320 = select i1 %3319, i32 %a97, i32 -1
  %3321 = sub nsw i32 %3317, %132
  %a90.op = add nsw i32 %a90, 16
  %3322 = zext i32 %a90.op to i64
  br label %"for input_bounded.s0.y.rebased138"

"for input_bounded.s0.x.x120":                    ; preds = %"for input_bounded.s0.x.x120.preheader", %"for input_bounded.s0.x.x120"
  %indvars.iv635 = phi i64 [ 0, %"for input_bounded.s0.x.x120.preheader" ], [ %indvars.iv.next636, %"for input_bounded.s0.x.x120" ]
  %3323 = trunc i64 %indvars.iv635 to i32
  %3324 = shl nsw i32 %3323, 5
  %3325 = add i32 %164, %3324
  %3326 = insertelement <32 x i32> undef, i32 %3325, i32 0
  %3327 = shufflevector <32 x i32> %3326, <32 x i32> undef, <32 x i32> zeroinitializer
  %3328 = add nsw <32 x i32> %3327, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3329 = shufflevector <32 x i32> %3328, <32 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3330 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3329, <4 x i32> %167)
  %3331 = shufflevector <32 x i32> %3328, <32 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3332 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3331, <4 x i32> %167)
  %3333 = shufflevector <32 x i32> %3328, <32 x i32> undef, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %3334 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3333, <4 x i32> %167)
  %3335 = shufflevector <32 x i32> %3328, <32 x i32> undef, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %3336 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3335, <4 x i32> %167)
  %3337 = shufflevector <32 x i32> %3328, <32 x i32> undef, <4 x i32> <i32 16, i32 17, i32 18, i32 19>
  %3338 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3337, <4 x i32> %167)
  %3339 = shufflevector <32 x i32> %3328, <32 x i32> undef, <4 x i32> <i32 20, i32 21, i32 22, i32 23>
  %3340 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3339, <4 x i32> %167)
  %3341 = shufflevector <32 x i32> %3328, <32 x i32> undef, <4 x i32> <i32 24, i32 25, i32 26, i32 27>
  %3342 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3341, <4 x i32> %167)
  %3343 = shufflevector <32 x i32> %3328, <32 x i32> undef, <4 x i32> <i32 28, i32 29, i32 30, i32 31>
  %3344 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3343, <4 x i32> %167)
  %3345 = shufflevector <4 x i32> %3344, <4 x i32> poison, <8 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3>
  %3346 = shufflevector <8 x i32> %3345, <8 x i32> poison, <16 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 4, i32 5, i32 6, i32 7>
  %3347 = shufflevector <16 x i32> %3346, <16 x i32> poison, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 12, i32 13, i32 14, i32 15>
  %3348 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3330, <4 x i32> %169)
  %3349 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3332, <4 x i32> %169)
  %3350 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3334, <4 x i32> %169)
  %3351 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3336, <4 x i32> %169)
  %3352 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3338, <4 x i32> %169)
  %3353 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3340, <4 x i32> %169)
  %3354 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3342, <4 x i32> %169)
  %3355 = shufflevector <32 x i32> %3347, <32 x i32> undef, <4 x i32> <i32 28, i32 29, i32 30, i32 31>
  %3356 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3355, <4 x i32> %169)
  %3357 = shufflevector <4 x i32> %3348, <4 x i32> %3349, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3358 = shufflevector <4 x i32> %3350, <4 x i32> %3351, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3359 = shufflevector <4 x i32> %3352, <4 x i32> %3353, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3360 = shufflevector <4 x i32> %3354, <4 x i32> %3356, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3361 = shufflevector <8 x i32> %3357, <8 x i32> %3358, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3362 = shufflevector <8 x i32> %3359, <8 x i32> %3360, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3363 = shufflevector <16 x i32> %3361, <16 x i32> %3362, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3364 = add nsw <32 x i32> %3363, %3313
  %3365 = extractelement <32 x i32> %3364, i32 0
  %3366 = sext i32 %3365 to i64
  %3367 = getelementptr inbounds i8, i8* %135, i64 %3366
  %3368 = load i8, i8* %3367, align 1, !tbaa !392
  %3369 = insertelement <32 x i8> undef, i8 %3368, i32 0
  %3370 = extractelement <32 x i32> %3364, i32 1
  %3371 = sext i32 %3370 to i64
  %3372 = getelementptr inbounds i8, i8* %135, i64 %3371
  %3373 = load i8, i8* %3372, align 1, !tbaa !392
  %3374 = insertelement <32 x i8> %3369, i8 %3373, i32 1
  %3375 = extractelement <32 x i32> %3364, i32 2
  %3376 = sext i32 %3375 to i64
  %3377 = getelementptr inbounds i8, i8* %135, i64 %3376
  %3378 = load i8, i8* %3377, align 1, !tbaa !392
  %3379 = insertelement <32 x i8> %3374, i8 %3378, i32 2
  %3380 = extractelement <32 x i32> %3364, i32 3
  %3381 = sext i32 %3380 to i64
  %3382 = getelementptr inbounds i8, i8* %135, i64 %3381
  %3383 = load i8, i8* %3382, align 1, !tbaa !392
  %3384 = insertelement <32 x i8> %3379, i8 %3383, i32 3
  %3385 = extractelement <32 x i32> %3364, i32 4
  %3386 = sext i32 %3385 to i64
  %3387 = getelementptr inbounds i8, i8* %135, i64 %3386
  %3388 = load i8, i8* %3387, align 1, !tbaa !392
  %3389 = insertelement <32 x i8> %3384, i8 %3388, i32 4
  %3390 = extractelement <32 x i32> %3364, i32 5
  %3391 = sext i32 %3390 to i64
  %3392 = getelementptr inbounds i8, i8* %135, i64 %3391
  %3393 = load i8, i8* %3392, align 1, !tbaa !392
  %3394 = insertelement <32 x i8> %3389, i8 %3393, i32 5
  %3395 = extractelement <32 x i32> %3364, i32 6
  %3396 = sext i32 %3395 to i64
  %3397 = getelementptr inbounds i8, i8* %135, i64 %3396
  %3398 = load i8, i8* %3397, align 1, !tbaa !392
  %3399 = insertelement <32 x i8> %3394, i8 %3398, i32 6
  %3400 = extractelement <32 x i32> %3364, i32 7
  %3401 = sext i32 %3400 to i64
  %3402 = getelementptr inbounds i8, i8* %135, i64 %3401
  %3403 = load i8, i8* %3402, align 1, !tbaa !392
  %3404 = insertelement <32 x i8> %3399, i8 %3403, i32 7
  %3405 = extractelement <32 x i32> %3364, i32 8
  %3406 = sext i32 %3405 to i64
  %3407 = getelementptr inbounds i8, i8* %135, i64 %3406
  %3408 = load i8, i8* %3407, align 1, !tbaa !392
  %3409 = insertelement <32 x i8> %3404, i8 %3408, i32 8
  %3410 = extractelement <32 x i32> %3364, i32 9
  %3411 = sext i32 %3410 to i64
  %3412 = getelementptr inbounds i8, i8* %135, i64 %3411
  %3413 = load i8, i8* %3412, align 1, !tbaa !392
  %3414 = insertelement <32 x i8> %3409, i8 %3413, i32 9
  %3415 = extractelement <32 x i32> %3364, i32 10
  %3416 = sext i32 %3415 to i64
  %3417 = getelementptr inbounds i8, i8* %135, i64 %3416
  %3418 = load i8, i8* %3417, align 1, !tbaa !392
  %3419 = insertelement <32 x i8> %3414, i8 %3418, i32 10
  %3420 = extractelement <32 x i32> %3364, i32 11
  %3421 = sext i32 %3420 to i64
  %3422 = getelementptr inbounds i8, i8* %135, i64 %3421
  %3423 = load i8, i8* %3422, align 1, !tbaa !392
  %3424 = insertelement <32 x i8> %3419, i8 %3423, i32 11
  %3425 = extractelement <32 x i32> %3364, i32 12
  %3426 = sext i32 %3425 to i64
  %3427 = getelementptr inbounds i8, i8* %135, i64 %3426
  %3428 = load i8, i8* %3427, align 1, !tbaa !392
  %3429 = insertelement <32 x i8> %3424, i8 %3428, i32 12
  %3430 = extractelement <32 x i32> %3364, i32 13
  %3431 = sext i32 %3430 to i64
  %3432 = getelementptr inbounds i8, i8* %135, i64 %3431
  %3433 = load i8, i8* %3432, align 1, !tbaa !392
  %3434 = insertelement <32 x i8> %3429, i8 %3433, i32 13
  %3435 = extractelement <32 x i32> %3364, i32 14
  %3436 = sext i32 %3435 to i64
  %3437 = getelementptr inbounds i8, i8* %135, i64 %3436
  %3438 = load i8, i8* %3437, align 1, !tbaa !392
  %3439 = insertelement <32 x i8> %3434, i8 %3438, i32 14
  %3440 = extractelement <32 x i32> %3364, i32 15
  %3441 = sext i32 %3440 to i64
  %3442 = getelementptr inbounds i8, i8* %135, i64 %3441
  %3443 = load i8, i8* %3442, align 1, !tbaa !392
  %3444 = insertelement <32 x i8> %3439, i8 %3443, i32 15
  %3445 = extractelement <32 x i32> %3364, i32 16
  %3446 = sext i32 %3445 to i64
  %3447 = getelementptr inbounds i8, i8* %135, i64 %3446
  %3448 = load i8, i8* %3447, align 1, !tbaa !392
  %3449 = insertelement <32 x i8> %3444, i8 %3448, i32 16
  %3450 = extractelement <32 x i32> %3364, i32 17
  %3451 = sext i32 %3450 to i64
  %3452 = getelementptr inbounds i8, i8* %135, i64 %3451
  %3453 = load i8, i8* %3452, align 1, !tbaa !392
  %3454 = insertelement <32 x i8> %3449, i8 %3453, i32 17
  %3455 = extractelement <32 x i32> %3364, i32 18
  %3456 = sext i32 %3455 to i64
  %3457 = getelementptr inbounds i8, i8* %135, i64 %3456
  %3458 = load i8, i8* %3457, align 1, !tbaa !392
  %3459 = insertelement <32 x i8> %3454, i8 %3458, i32 18
  %3460 = extractelement <32 x i32> %3364, i32 19
  %3461 = sext i32 %3460 to i64
  %3462 = getelementptr inbounds i8, i8* %135, i64 %3461
  %3463 = load i8, i8* %3462, align 1, !tbaa !392
  %3464 = insertelement <32 x i8> %3459, i8 %3463, i32 19
  %3465 = extractelement <32 x i32> %3364, i32 20
  %3466 = sext i32 %3465 to i64
  %3467 = getelementptr inbounds i8, i8* %135, i64 %3466
  %3468 = load i8, i8* %3467, align 1, !tbaa !392
  %3469 = insertelement <32 x i8> %3464, i8 %3468, i32 20
  %3470 = extractelement <32 x i32> %3364, i32 21
  %3471 = sext i32 %3470 to i64
  %3472 = getelementptr inbounds i8, i8* %135, i64 %3471
  %3473 = load i8, i8* %3472, align 1, !tbaa !392
  %3474 = insertelement <32 x i8> %3469, i8 %3473, i32 21
  %3475 = extractelement <32 x i32> %3364, i32 22
  %3476 = sext i32 %3475 to i64
  %3477 = getelementptr inbounds i8, i8* %135, i64 %3476
  %3478 = load i8, i8* %3477, align 1, !tbaa !392
  %3479 = insertelement <32 x i8> %3474, i8 %3478, i32 22
  %3480 = extractelement <32 x i32> %3364, i32 23
  %3481 = sext i32 %3480 to i64
  %3482 = getelementptr inbounds i8, i8* %135, i64 %3481
  %3483 = load i8, i8* %3482, align 1, !tbaa !392
  %3484 = insertelement <32 x i8> %3479, i8 %3483, i32 23
  %3485 = extractelement <32 x i32> %3364, i32 24
  %3486 = sext i32 %3485 to i64
  %3487 = getelementptr inbounds i8, i8* %135, i64 %3486
  %3488 = load i8, i8* %3487, align 1, !tbaa !392
  %3489 = insertelement <32 x i8> %3484, i8 %3488, i32 24
  %3490 = extractelement <32 x i32> %3364, i32 25
  %3491 = sext i32 %3490 to i64
  %3492 = getelementptr inbounds i8, i8* %135, i64 %3491
  %3493 = load i8, i8* %3492, align 1, !tbaa !392
  %3494 = insertelement <32 x i8> %3489, i8 %3493, i32 25
  %3495 = extractelement <32 x i32> %3364, i32 26
  %3496 = sext i32 %3495 to i64
  %3497 = getelementptr inbounds i8, i8* %135, i64 %3496
  %3498 = load i8, i8* %3497, align 1, !tbaa !392
  %3499 = insertelement <32 x i8> %3494, i8 %3498, i32 26
  %3500 = extractelement <32 x i32> %3364, i32 27
  %3501 = sext i32 %3500 to i64
  %3502 = getelementptr inbounds i8, i8* %135, i64 %3501
  %3503 = load i8, i8* %3502, align 1, !tbaa !392
  %3504 = insertelement <32 x i8> %3499, i8 %3503, i32 27
  %3505 = extractelement <32 x i32> %3364, i32 28
  %3506 = sext i32 %3505 to i64
  %3507 = getelementptr inbounds i8, i8* %135, i64 %3506
  %3508 = load i8, i8* %3507, align 1, !tbaa !392
  %3509 = insertelement <32 x i8> %3504, i8 %3508, i32 28
  %3510 = extractelement <32 x i32> %3364, i32 29
  %3511 = sext i32 %3510 to i64
  %3512 = getelementptr inbounds i8, i8* %135, i64 %3511
  %3513 = load i8, i8* %3512, align 1, !tbaa !392
  %3514 = insertelement <32 x i8> %3509, i8 %3513, i32 29
  %3515 = extractelement <32 x i32> %3364, i32 30
  %3516 = sext i32 %3515 to i64
  %3517 = getelementptr inbounds i8, i8* %135, i64 %3516
  %3518 = load i8, i8* %3517, align 1, !tbaa !392
  %3519 = insertelement <32 x i8> %3514, i8 %3518, i32 30
  %3520 = extractelement <32 x i32> %3364, i32 31
  %3521 = sext i32 %3520 to i64
  %3522 = getelementptr inbounds i8, i8* %135, i64 %3521
  %3523 = load i8, i8* %3522, align 1, !tbaa !392
  %3524 = insertelement <32 x i8> %3519, i8 %3523, i32 31
  %3525 = shufflevector <32 x i8> %3524, <32 x i8> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3526 = add nsw i64 %indvars.iv635, %3314
  %3527 = shl nsw i64 %3526, 5
  %3528 = getelementptr inbounds i8, i8* %input_bounded93, i64 %3527
  %3529 = bitcast i8* %3528 to <16 x i8>*
  store <16 x i8> %3525, <16 x i8>* %3529, align 16, !tbaa !395
  %3530 = shufflevector <32 x i8> %3524, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3531 = getelementptr inbounds i8, i8* %3528, i64 16
  %3532 = bitcast i8* %3531 to <16 x i8>*
  store <16 x i8> %3530, <16 x i8>* %3532, align 16, !tbaa !395
  %indvars.iv.next636 = add nuw nsw i64 %indvars.iv635, 1
  %.not351 = icmp eq i64 %indvars.iv635, %215
  br i1 %.not351, label %"end for input_bounded.s0.x.x121", label %"for input_bounded.s0.x.x120"

"end for input_bounded.s0.x.x121":                ; preds = %"for input_bounded.s0.x.x120", %"for input_bounded.s0.y.rebased115"
  br i1 %172, label %"for input_bounded.s0.x.x.rebased126.preheader", label %"end for input_bounded.s0.x.x.rebased127", !prof !385

"for input_bounded.s0.x.x.rebased126.preheader":  ; preds = %"end for input_bounded.s0.x.x121"
  %3533 = add nsw i64 %3309, %220
  %t297124 = add nsw i32 %t294118, %t26380
  %3534 = sext i32 %t297124 to i64
  br label %"for input_bounded.s0.x.x.rebased126"

"for input_bounded.s0.x.x.rebased126":            ; preds = %"for input_bounded.s0.x.x.rebased126.preheader", %"for input_bounded.s0.x.x.rebased126"
  %indvars.iv637 = phi i64 [ 0, %"for input_bounded.s0.x.x.rebased126.preheader" ], [ %indvars.iv.next638, %"for input_bounded.s0.x.x.rebased126" ]
  %3535 = add nsw i64 %indvars.iv637, %173
  %3536 = shl nsw i64 %3535, 5
  %3537 = add nsw i64 %3536, %3533
  %3538 = getelementptr inbounds i8, i8* %135, i64 %3537
  %3539 = getelementptr inbounds i8, i8* %3538, i64 31
  %3540 = bitcast i8* %3539 to <16 x i8>*
  %3541 = load <16 x i8>, <16 x i8>* %3540, align 1, !tbaa !392
  %3542 = getelementptr inbounds i8, i8* %3538, i64 47
  %3543 = bitcast i8* %3542 to <16 x i8>*
  %3544 = load <16 x i8>, <16 x i8>* %3543, align 1, !tbaa !392
  %3545 = add nsw i64 %indvars.iv637, %3534
  %3546 = shl nsw i64 %3545, 5
  %3547 = getelementptr inbounds i8, i8* %input_bounded93, i64 %3546
  %3548 = getelementptr inbounds i8, i8* %3547, i64 32
  %3549 = bitcast i8* %3548 to <16 x i8>*
  store <16 x i8> %3541, <16 x i8>* %3549, align 16, !tbaa !395
  %3550 = getelementptr inbounds i8, i8* %3547, i64 48
  %3551 = bitcast i8* %3550 to <16 x i8>*
  store <16 x i8> %3544, <16 x i8>* %3551, align 16, !tbaa !395
  %indvars.iv.next638 = add nuw nsw i64 %indvars.iv637, 1
  %.not350 = icmp eq i64 %indvars.iv.next638, %216
  br i1 %.not350, label %"end for input_bounded.s0.x.x.rebased127", label %"for input_bounded.s0.x.x.rebased126"

"end for input_bounded.s0.x.x.rebased127":        ; preds = %"for input_bounded.s0.x.x.rebased126", %"end for input_bounded.s0.x.x121"
  br i1 %174, label %"for input_bounded.s0.x.x.rebased131.preheader", label %"end for input_bounded.s0.x.x.rebased132", !prof !385

"for input_bounded.s0.x.x.rebased131.preheader":  ; preds = %"end for input_bounded.s0.x.x.rebased127"
  %t299130 = add nsw i32 %t294118, %t26481
  %3552 = trunc i64 %3310 to i32
  %3553 = insertelement <32 x i32> undef, i32 %3552, i32 0
  %3554 = shufflevector <32 x i32> %3553, <32 x i32> undef, <32 x i32> zeroinitializer
  %3555 = sext i32 %t299130 to i64
  br label %"for input_bounded.s0.x.x.rebased131"

"for input_bounded.s0.x.x.rebased131":            ; preds = %"for input_bounded.s0.x.x.rebased131.preheader", %"for input_bounded.s0.x.x.rebased131"
  %indvars.iv639 = phi i64 [ 0, %"for input_bounded.s0.x.x.rebased131.preheader" ], [ %indvars.iv.next640, %"for input_bounded.s0.x.x.rebased131" ]
  %3556 = trunc i64 %indvars.iv639 to i32
  %3557 = add nsw i32 %t26481, %3556
  %3558 = shl nsw i32 %3557, 5
  %3559 = add i32 %175, %3558
  %3560 = insertelement <32 x i32> undef, i32 %3559, i32 0
  %3561 = shufflevector <32 x i32> %3560, <32 x i32> undef, <32 x i32> zeroinitializer
  %3562 = add nsw <32 x i32> %3561, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3563 = shufflevector <32 x i32> %3562, <32 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3564 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3563, <4 x i32> %167)
  %3565 = shufflevector <32 x i32> %3562, <32 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3566 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3565, <4 x i32> %167)
  %3567 = shufflevector <32 x i32> %3562, <32 x i32> undef, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %3568 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3567, <4 x i32> %167)
  %3569 = shufflevector <32 x i32> %3562, <32 x i32> undef, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %3570 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3569, <4 x i32> %167)
  %3571 = shufflevector <32 x i32> %3562, <32 x i32> undef, <4 x i32> <i32 16, i32 17, i32 18, i32 19>
  %3572 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3571, <4 x i32> %167)
  %3573 = shufflevector <32 x i32> %3562, <32 x i32> undef, <4 x i32> <i32 20, i32 21, i32 22, i32 23>
  %3574 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3573, <4 x i32> %167)
  %3575 = shufflevector <32 x i32> %3562, <32 x i32> undef, <4 x i32> <i32 24, i32 25, i32 26, i32 27>
  %3576 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3575, <4 x i32> %167)
  %3577 = shufflevector <32 x i32> %3562, <32 x i32> undef, <4 x i32> <i32 28, i32 29, i32 30, i32 31>
  %3578 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3577, <4 x i32> %167)
  %3579 = shufflevector <4 x i32> %3578, <4 x i32> poison, <8 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3>
  %3580 = shufflevector <8 x i32> %3579, <8 x i32> poison, <16 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 4, i32 5, i32 6, i32 7>
  %3581 = shufflevector <16 x i32> %3580, <16 x i32> poison, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 12, i32 13, i32 14, i32 15>
  %3582 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3564, <4 x i32> %169)
  %3583 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3566, <4 x i32> %169)
  %3584 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3568, <4 x i32> %169)
  %3585 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3570, <4 x i32> %169)
  %3586 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3572, <4 x i32> %169)
  %3587 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3574, <4 x i32> %169)
  %3588 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3576, <4 x i32> %169)
  %3589 = shufflevector <32 x i32> %3581, <32 x i32> undef, <4 x i32> <i32 28, i32 29, i32 30, i32 31>
  %3590 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3589, <4 x i32> %169)
  %3591 = shufflevector <4 x i32> %3582, <4 x i32> %3583, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3592 = shufflevector <4 x i32> %3584, <4 x i32> %3585, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3593 = shufflevector <4 x i32> %3586, <4 x i32> %3587, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3594 = shufflevector <4 x i32> %3588, <4 x i32> %3590, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3595 = shufflevector <8 x i32> %3591, <8 x i32> %3592, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3596 = shufflevector <8 x i32> %3593, <8 x i32> %3594, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3597 = shufflevector <16 x i32> %3595, <16 x i32> %3596, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3598 = add nsw <32 x i32> %3597, %3554
  %3599 = extractelement <32 x i32> %3598, i32 0
  %3600 = sext i32 %3599 to i64
  %3601 = getelementptr inbounds i8, i8* %135, i64 %3600
  %3602 = load i8, i8* %3601, align 1, !tbaa !392
  %3603 = insertelement <32 x i8> undef, i8 %3602, i32 0
  %3604 = extractelement <32 x i32> %3598, i32 1
  %3605 = sext i32 %3604 to i64
  %3606 = getelementptr inbounds i8, i8* %135, i64 %3605
  %3607 = load i8, i8* %3606, align 1, !tbaa !392
  %3608 = insertelement <32 x i8> %3603, i8 %3607, i32 1
  %3609 = extractelement <32 x i32> %3598, i32 2
  %3610 = sext i32 %3609 to i64
  %3611 = getelementptr inbounds i8, i8* %135, i64 %3610
  %3612 = load i8, i8* %3611, align 1, !tbaa !392
  %3613 = insertelement <32 x i8> %3608, i8 %3612, i32 2
  %3614 = extractelement <32 x i32> %3598, i32 3
  %3615 = sext i32 %3614 to i64
  %3616 = getelementptr inbounds i8, i8* %135, i64 %3615
  %3617 = load i8, i8* %3616, align 1, !tbaa !392
  %3618 = insertelement <32 x i8> %3613, i8 %3617, i32 3
  %3619 = extractelement <32 x i32> %3598, i32 4
  %3620 = sext i32 %3619 to i64
  %3621 = getelementptr inbounds i8, i8* %135, i64 %3620
  %3622 = load i8, i8* %3621, align 1, !tbaa !392
  %3623 = insertelement <32 x i8> %3618, i8 %3622, i32 4
  %3624 = extractelement <32 x i32> %3598, i32 5
  %3625 = sext i32 %3624 to i64
  %3626 = getelementptr inbounds i8, i8* %135, i64 %3625
  %3627 = load i8, i8* %3626, align 1, !tbaa !392
  %3628 = insertelement <32 x i8> %3623, i8 %3627, i32 5
  %3629 = extractelement <32 x i32> %3598, i32 6
  %3630 = sext i32 %3629 to i64
  %3631 = getelementptr inbounds i8, i8* %135, i64 %3630
  %3632 = load i8, i8* %3631, align 1, !tbaa !392
  %3633 = insertelement <32 x i8> %3628, i8 %3632, i32 6
  %3634 = extractelement <32 x i32> %3598, i32 7
  %3635 = sext i32 %3634 to i64
  %3636 = getelementptr inbounds i8, i8* %135, i64 %3635
  %3637 = load i8, i8* %3636, align 1, !tbaa !392
  %3638 = insertelement <32 x i8> %3633, i8 %3637, i32 7
  %3639 = extractelement <32 x i32> %3598, i32 8
  %3640 = sext i32 %3639 to i64
  %3641 = getelementptr inbounds i8, i8* %135, i64 %3640
  %3642 = load i8, i8* %3641, align 1, !tbaa !392
  %3643 = insertelement <32 x i8> %3638, i8 %3642, i32 8
  %3644 = extractelement <32 x i32> %3598, i32 9
  %3645 = sext i32 %3644 to i64
  %3646 = getelementptr inbounds i8, i8* %135, i64 %3645
  %3647 = load i8, i8* %3646, align 1, !tbaa !392
  %3648 = insertelement <32 x i8> %3643, i8 %3647, i32 9
  %3649 = extractelement <32 x i32> %3598, i32 10
  %3650 = sext i32 %3649 to i64
  %3651 = getelementptr inbounds i8, i8* %135, i64 %3650
  %3652 = load i8, i8* %3651, align 1, !tbaa !392
  %3653 = insertelement <32 x i8> %3648, i8 %3652, i32 10
  %3654 = extractelement <32 x i32> %3598, i32 11
  %3655 = sext i32 %3654 to i64
  %3656 = getelementptr inbounds i8, i8* %135, i64 %3655
  %3657 = load i8, i8* %3656, align 1, !tbaa !392
  %3658 = insertelement <32 x i8> %3653, i8 %3657, i32 11
  %3659 = extractelement <32 x i32> %3598, i32 12
  %3660 = sext i32 %3659 to i64
  %3661 = getelementptr inbounds i8, i8* %135, i64 %3660
  %3662 = load i8, i8* %3661, align 1, !tbaa !392
  %3663 = insertelement <32 x i8> %3658, i8 %3662, i32 12
  %3664 = extractelement <32 x i32> %3598, i32 13
  %3665 = sext i32 %3664 to i64
  %3666 = getelementptr inbounds i8, i8* %135, i64 %3665
  %3667 = load i8, i8* %3666, align 1, !tbaa !392
  %3668 = insertelement <32 x i8> %3663, i8 %3667, i32 13
  %3669 = extractelement <32 x i32> %3598, i32 14
  %3670 = sext i32 %3669 to i64
  %3671 = getelementptr inbounds i8, i8* %135, i64 %3670
  %3672 = load i8, i8* %3671, align 1, !tbaa !392
  %3673 = insertelement <32 x i8> %3668, i8 %3672, i32 14
  %3674 = extractelement <32 x i32> %3598, i32 15
  %3675 = sext i32 %3674 to i64
  %3676 = getelementptr inbounds i8, i8* %135, i64 %3675
  %3677 = load i8, i8* %3676, align 1, !tbaa !392
  %3678 = insertelement <32 x i8> %3673, i8 %3677, i32 15
  %3679 = extractelement <32 x i32> %3598, i32 16
  %3680 = sext i32 %3679 to i64
  %3681 = getelementptr inbounds i8, i8* %135, i64 %3680
  %3682 = load i8, i8* %3681, align 1, !tbaa !392
  %3683 = insertelement <32 x i8> %3678, i8 %3682, i32 16
  %3684 = extractelement <32 x i32> %3598, i32 17
  %3685 = sext i32 %3684 to i64
  %3686 = getelementptr inbounds i8, i8* %135, i64 %3685
  %3687 = load i8, i8* %3686, align 1, !tbaa !392
  %3688 = insertelement <32 x i8> %3683, i8 %3687, i32 17
  %3689 = extractelement <32 x i32> %3598, i32 18
  %3690 = sext i32 %3689 to i64
  %3691 = getelementptr inbounds i8, i8* %135, i64 %3690
  %3692 = load i8, i8* %3691, align 1, !tbaa !392
  %3693 = insertelement <32 x i8> %3688, i8 %3692, i32 18
  %3694 = extractelement <32 x i32> %3598, i32 19
  %3695 = sext i32 %3694 to i64
  %3696 = getelementptr inbounds i8, i8* %135, i64 %3695
  %3697 = load i8, i8* %3696, align 1, !tbaa !392
  %3698 = insertelement <32 x i8> %3693, i8 %3697, i32 19
  %3699 = extractelement <32 x i32> %3598, i32 20
  %3700 = sext i32 %3699 to i64
  %3701 = getelementptr inbounds i8, i8* %135, i64 %3700
  %3702 = load i8, i8* %3701, align 1, !tbaa !392
  %3703 = insertelement <32 x i8> %3698, i8 %3702, i32 20
  %3704 = extractelement <32 x i32> %3598, i32 21
  %3705 = sext i32 %3704 to i64
  %3706 = getelementptr inbounds i8, i8* %135, i64 %3705
  %3707 = load i8, i8* %3706, align 1, !tbaa !392
  %3708 = insertelement <32 x i8> %3703, i8 %3707, i32 21
  %3709 = extractelement <32 x i32> %3598, i32 22
  %3710 = sext i32 %3709 to i64
  %3711 = getelementptr inbounds i8, i8* %135, i64 %3710
  %3712 = load i8, i8* %3711, align 1, !tbaa !392
  %3713 = insertelement <32 x i8> %3708, i8 %3712, i32 22
  %3714 = extractelement <32 x i32> %3598, i32 23
  %3715 = sext i32 %3714 to i64
  %3716 = getelementptr inbounds i8, i8* %135, i64 %3715
  %3717 = load i8, i8* %3716, align 1, !tbaa !392
  %3718 = insertelement <32 x i8> %3713, i8 %3717, i32 23
  %3719 = extractelement <32 x i32> %3598, i32 24
  %3720 = sext i32 %3719 to i64
  %3721 = getelementptr inbounds i8, i8* %135, i64 %3720
  %3722 = load i8, i8* %3721, align 1, !tbaa !392
  %3723 = insertelement <32 x i8> %3718, i8 %3722, i32 24
  %3724 = extractelement <32 x i32> %3598, i32 25
  %3725 = sext i32 %3724 to i64
  %3726 = getelementptr inbounds i8, i8* %135, i64 %3725
  %3727 = load i8, i8* %3726, align 1, !tbaa !392
  %3728 = insertelement <32 x i8> %3723, i8 %3727, i32 25
  %3729 = extractelement <32 x i32> %3598, i32 26
  %3730 = sext i32 %3729 to i64
  %3731 = getelementptr inbounds i8, i8* %135, i64 %3730
  %3732 = load i8, i8* %3731, align 1, !tbaa !392
  %3733 = insertelement <32 x i8> %3728, i8 %3732, i32 26
  %3734 = extractelement <32 x i32> %3598, i32 27
  %3735 = sext i32 %3734 to i64
  %3736 = getelementptr inbounds i8, i8* %135, i64 %3735
  %3737 = load i8, i8* %3736, align 1, !tbaa !392
  %3738 = insertelement <32 x i8> %3733, i8 %3737, i32 27
  %3739 = extractelement <32 x i32> %3598, i32 28
  %3740 = sext i32 %3739 to i64
  %3741 = getelementptr inbounds i8, i8* %135, i64 %3740
  %3742 = load i8, i8* %3741, align 1, !tbaa !392
  %3743 = insertelement <32 x i8> %3738, i8 %3742, i32 28
  %3744 = extractelement <32 x i32> %3598, i32 29
  %3745 = sext i32 %3744 to i64
  %3746 = getelementptr inbounds i8, i8* %135, i64 %3745
  %3747 = load i8, i8* %3746, align 1, !tbaa !392
  %3748 = insertelement <32 x i8> %3743, i8 %3747, i32 29
  %3749 = extractelement <32 x i32> %3598, i32 30
  %3750 = sext i32 %3749 to i64
  %3751 = getelementptr inbounds i8, i8* %135, i64 %3750
  %3752 = load i8, i8* %3751, align 1, !tbaa !392
  %3753 = insertelement <32 x i8> %3748, i8 %3752, i32 30
  %3754 = extractelement <32 x i32> %3598, i32 31
  %3755 = sext i32 %3754 to i64
  %3756 = getelementptr inbounds i8, i8* %135, i64 %3755
  %3757 = load i8, i8* %3756, align 1, !tbaa !392
  %3758 = insertelement <32 x i8> %3753, i8 %3757, i32 31
  %3759 = shufflevector <32 x i8> %3758, <32 x i8> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3760 = add nsw i64 %indvars.iv639, %3555
  %3761 = shl nsw i64 %3760, 5
  %3762 = getelementptr inbounds i8, i8* %input_bounded93, i64 %3761
  %3763 = getelementptr inbounds i8, i8* %3762, i64 32
  %3764 = bitcast i8* %3763 to <16 x i8>*
  store <16 x i8> %3759, <16 x i8>* %3764, align 16, !tbaa !395
  %3765 = shufflevector <32 x i8> %3758, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3766 = getelementptr inbounds i8, i8* %3762, i64 48
  %3767 = bitcast i8* %3766 to <16 x i8>*
  store <16 x i8> %3765, <16 x i8>* %3767, align 16, !tbaa !395
  %indvars.iv.next640 = add nuw nsw i64 %indvars.iv639, 1
  %.not349 = icmp eq i64 %indvars.iv.next640, %217
  br i1 %.not349, label %"end for input_bounded.s0.x.x.rebased132", label %"for input_bounded.s0.x.x.rebased131"

"end for input_bounded.s0.x.x.rebased132":        ; preds = %"for input_bounded.s0.x.x.rebased131", %"end for input_bounded.s0.x.x.rebased127"
  %.not348 = icmp eq i64 %indvars.iv.next642, %3093
  br i1 %.not348, label %"end for input_bounded.s0.y.rebased116", label %"for input_bounded.s0.y.rebased115"

"for input_bounded.s0.y.rebased138":              ; preds = %"for input_bounded.s0.y.rebased138.preheader", %"end for input_bounded.s0.x.x144"
  %indvars.iv647 = phi i64 [ 0, %"for input_bounded.s0.y.rebased138.preheader" ], [ %indvars.iv.next648.pre-phi, %"end for input_bounded.s0.x.x144" ]
  %input_bounded.s0.y.rebased140 = phi i32 [ 0, %"for input_bounded.s0.y.rebased138.preheader" ], [ %3988, %"end for input_bounded.s0.x.x144" ]
  %a102 = add nsw i32 %input_bounded.s0.y.rebased140, %3321
  %3768 = icmp slt i32 %a102, %b104
  %a101 = select i1 %3768, i32 %a102, i32 %b104
  br i1 %163, label %"for input_bounded.s0.x.x143.preheader", label %"for input_bounded.s0.y.rebased138.end for input_bounded.s0.x.x144_crit_edge", !prof !385

"for input_bounded.s0.y.rebased138.end for input_bounded.s0.x.x144_crit_edge": ; preds = %"for input_bounded.s0.y.rebased138"
  %.pre776 = add nuw nsw i64 %indvars.iv647, 1
  br label %"end for input_bounded.s0.x.x144"

"for input_bounded.s0.x.x143.preheader":          ; preds = %"for input_bounded.s0.y.rebased138"
  %3769 = icmp sgt i32 %a101, 0
  %3770 = select i1 %3769, i32 %a101, i32 0
  %3771 = mul nsw i32 %3770, %130
  %t306142 = sub nsw i32 %3771, %134
  %3772 = add nuw nsw i64 %indvars.iv647, 1
  %3773 = trunc i64 %3772 to i32
  %3774 = add i32 %3320, %3773
  %t307141 = mul i32 %161, %3774
  %3775 = insertelement <32 x i32> undef, i32 %t306142, i32 0
  %3776 = shufflevector <32 x i32> %3775, <32 x i32> undef, <32 x i32> zeroinitializer
  %3777 = sext i32 %t307141 to i64
  br label %"for input_bounded.s0.x.x143"

"for input_bounded.s0.x.x143":                    ; preds = %"for input_bounded.s0.x.x143.preheader", %"for input_bounded.s0.x.x143"
  %indvars.iv645 = phi i64 [ 0, %"for input_bounded.s0.x.x143.preheader" ], [ %indvars.iv.next646, %"for input_bounded.s0.x.x143" ]
  %3778 = trunc i64 %indvars.iv645 to i32
  %3779 = shl nsw i32 %3778, 5
  %3780 = add i32 %164, %3779
  %3781 = insertelement <32 x i32> undef, i32 %3780, i32 0
  %3782 = shufflevector <32 x i32> %3781, <32 x i32> undef, <32 x i32> zeroinitializer
  %3783 = add nsw <32 x i32> %3782, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3784 = shufflevector <32 x i32> %3783, <32 x i32> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %3785 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3784, <4 x i32> %167)
  %3786 = shufflevector <32 x i32> %3783, <32 x i32> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %3787 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3786, <4 x i32> %167)
  %3788 = shufflevector <32 x i32> %3783, <32 x i32> undef, <4 x i32> <i32 8, i32 9, i32 10, i32 11>
  %3789 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3788, <4 x i32> %167)
  %3790 = shufflevector <32 x i32> %3783, <32 x i32> undef, <4 x i32> <i32 12, i32 13, i32 14, i32 15>
  %3791 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3790, <4 x i32> %167)
  %3792 = shufflevector <32 x i32> %3783, <32 x i32> undef, <4 x i32> <i32 16, i32 17, i32 18, i32 19>
  %3793 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3792, <4 x i32> %167)
  %3794 = shufflevector <32 x i32> %3783, <32 x i32> undef, <4 x i32> <i32 20, i32 21, i32 22, i32 23>
  %3795 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3794, <4 x i32> %167)
  %3796 = shufflevector <32 x i32> %3783, <32 x i32> undef, <4 x i32> <i32 24, i32 25, i32 26, i32 27>
  %3797 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3796, <4 x i32> %167)
  %3798 = shufflevector <32 x i32> %3783, <32 x i32> undef, <4 x i32> <i32 28, i32 29, i32 30, i32 31>
  %3799 = call <4 x i32> @llvm.aarch64.neon.smin.v4i32(<4 x i32> %3798, <4 x i32> %167)
  %3800 = shufflevector <4 x i32> %3799, <4 x i32> poison, <8 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3>
  %3801 = shufflevector <8 x i32> %3800, <8 x i32> poison, <16 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 4, i32 5, i32 6, i32 7>
  %3802 = shufflevector <16 x i32> %3801, <16 x i32> poison, <32 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 12, i32 13, i32 14, i32 15>
  %3803 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3785, <4 x i32> %169)
  %3804 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3787, <4 x i32> %169)
  %3805 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3789, <4 x i32> %169)
  %3806 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3791, <4 x i32> %169)
  %3807 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3793, <4 x i32> %169)
  %3808 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3795, <4 x i32> %169)
  %3809 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3797, <4 x i32> %169)
  %3810 = shufflevector <32 x i32> %3802, <32 x i32> undef, <4 x i32> <i32 28, i32 29, i32 30, i32 31>
  %3811 = call <4 x i32> @llvm.aarch64.neon.smax.v4i32(<4 x i32> %3810, <4 x i32> %169)
  %3812 = shufflevector <4 x i32> %3803, <4 x i32> %3804, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3813 = shufflevector <4 x i32> %3805, <4 x i32> %3806, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3814 = shufflevector <4 x i32> %3807, <4 x i32> %3808, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3815 = shufflevector <4 x i32> %3809, <4 x i32> %3811, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %3816 = shufflevector <8 x i32> %3812, <8 x i32> %3813, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3817 = shufflevector <8 x i32> %3814, <8 x i32> %3815, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3818 = shufflevector <16 x i32> %3816, <16 x i32> %3817, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3819 = add nsw <32 x i32> %3818, %3776
  %3820 = extractelement <32 x i32> %3819, i32 0
  %3821 = sext i32 %3820 to i64
  %3822 = getelementptr inbounds i8, i8* %135, i64 %3821
  %3823 = load i8, i8* %3822, align 1, !tbaa !392
  %3824 = insertelement <32 x i8> undef, i8 %3823, i32 0
  %3825 = extractelement <32 x i32> %3819, i32 1
  %3826 = sext i32 %3825 to i64
  %3827 = getelementptr inbounds i8, i8* %135, i64 %3826
  %3828 = load i8, i8* %3827, align 1, !tbaa !392
  %3829 = insertelement <32 x i8> %3824, i8 %3828, i32 1
  %3830 = extractelement <32 x i32> %3819, i32 2
  %3831 = sext i32 %3830 to i64
  %3832 = getelementptr inbounds i8, i8* %135, i64 %3831
  %3833 = load i8, i8* %3832, align 1, !tbaa !392
  %3834 = insertelement <32 x i8> %3829, i8 %3833, i32 2
  %3835 = extractelement <32 x i32> %3819, i32 3
  %3836 = sext i32 %3835 to i64
  %3837 = getelementptr inbounds i8, i8* %135, i64 %3836
  %3838 = load i8, i8* %3837, align 1, !tbaa !392
  %3839 = insertelement <32 x i8> %3834, i8 %3838, i32 3
  %3840 = extractelement <32 x i32> %3819, i32 4
  %3841 = sext i32 %3840 to i64
  %3842 = getelementptr inbounds i8, i8* %135, i64 %3841
  %3843 = load i8, i8* %3842, align 1, !tbaa !392
  %3844 = insertelement <32 x i8> %3839, i8 %3843, i32 4
  %3845 = extractelement <32 x i32> %3819, i32 5
  %3846 = sext i32 %3845 to i64
  %3847 = getelementptr inbounds i8, i8* %135, i64 %3846
  %3848 = load i8, i8* %3847, align 1, !tbaa !392
  %3849 = insertelement <32 x i8> %3844, i8 %3848, i32 5
  %3850 = extractelement <32 x i32> %3819, i32 6
  %3851 = sext i32 %3850 to i64
  %3852 = getelementptr inbounds i8, i8* %135, i64 %3851
  %3853 = load i8, i8* %3852, align 1, !tbaa !392
  %3854 = insertelement <32 x i8> %3849, i8 %3853, i32 6
  %3855 = extractelement <32 x i32> %3819, i32 7
  %3856 = sext i32 %3855 to i64
  %3857 = getelementptr inbounds i8, i8* %135, i64 %3856
  %3858 = load i8, i8* %3857, align 1, !tbaa !392
  %3859 = insertelement <32 x i8> %3854, i8 %3858, i32 7
  %3860 = extractelement <32 x i32> %3819, i32 8
  %3861 = sext i32 %3860 to i64
  %3862 = getelementptr inbounds i8, i8* %135, i64 %3861
  %3863 = load i8, i8* %3862, align 1, !tbaa !392
  %3864 = insertelement <32 x i8> %3859, i8 %3863, i32 8
  %3865 = extractelement <32 x i32> %3819, i32 9
  %3866 = sext i32 %3865 to i64
  %3867 = getelementptr inbounds i8, i8* %135, i64 %3866
  %3868 = load i8, i8* %3867, align 1, !tbaa !392
  %3869 = insertelement <32 x i8> %3864, i8 %3868, i32 9
  %3870 = extractelement <32 x i32> %3819, i32 10
  %3871 = sext i32 %3870 to i64
  %3872 = getelementptr inbounds i8, i8* %135, i64 %3871
  %3873 = load i8, i8* %3872, align 1, !tbaa !392
  %3874 = insertelement <32 x i8> %3869, i8 %3873, i32 10
  %3875 = extractelement <32 x i32> %3819, i32 11
  %3876 = sext i32 %3875 to i64
  %3877 = getelementptr inbounds i8, i8* %135, i64 %3876
  %3878 = load i8, i8* %3877, align 1, !tbaa !392
  %3879 = insertelement <32 x i8> %3874, i8 %3878, i32 11
  %3880 = extractelement <32 x i32> %3819, i32 12
  %3881 = sext i32 %3880 to i64
  %3882 = getelementptr inbounds i8, i8* %135, i64 %3881
  %3883 = load i8, i8* %3882, align 1, !tbaa !392
  %3884 = insertelement <32 x i8> %3879, i8 %3883, i32 12
  %3885 = extractelement <32 x i32> %3819, i32 13
  %3886 = sext i32 %3885 to i64
  %3887 = getelementptr inbounds i8, i8* %135, i64 %3886
  %3888 = load i8, i8* %3887, align 1, !tbaa !392
  %3889 = insertelement <32 x i8> %3884, i8 %3888, i32 13
  %3890 = extractelement <32 x i32> %3819, i32 14
  %3891 = sext i32 %3890 to i64
  %3892 = getelementptr inbounds i8, i8* %135, i64 %3891
  %3893 = load i8, i8* %3892, align 1, !tbaa !392
  %3894 = insertelement <32 x i8> %3889, i8 %3893, i32 14
  %3895 = extractelement <32 x i32> %3819, i32 15
  %3896 = sext i32 %3895 to i64
  %3897 = getelementptr inbounds i8, i8* %135, i64 %3896
  %3898 = load i8, i8* %3897, align 1, !tbaa !392
  %3899 = insertelement <32 x i8> %3894, i8 %3898, i32 15
  %3900 = extractelement <32 x i32> %3819, i32 16
  %3901 = sext i32 %3900 to i64
  %3902 = getelementptr inbounds i8, i8* %135, i64 %3901
  %3903 = load i8, i8* %3902, align 1, !tbaa !392
  %3904 = insertelement <32 x i8> %3899, i8 %3903, i32 16
  %3905 = extractelement <32 x i32> %3819, i32 17
  %3906 = sext i32 %3905 to i64
  %3907 = getelementptr inbounds i8, i8* %135, i64 %3906
  %3908 = load i8, i8* %3907, align 1, !tbaa !392
  %3909 = insertelement <32 x i8> %3904, i8 %3908, i32 17
  %3910 = extractelement <32 x i32> %3819, i32 18
  %3911 = sext i32 %3910 to i64
  %3912 = getelementptr inbounds i8, i8* %135, i64 %3911
  %3913 = load i8, i8* %3912, align 1, !tbaa !392
  %3914 = insertelement <32 x i8> %3909, i8 %3913, i32 18
  %3915 = extractelement <32 x i32> %3819, i32 19
  %3916 = sext i32 %3915 to i64
  %3917 = getelementptr inbounds i8, i8* %135, i64 %3916
  %3918 = load i8, i8* %3917, align 1, !tbaa !392
  %3919 = insertelement <32 x i8> %3914, i8 %3918, i32 19
  %3920 = extractelement <32 x i32> %3819, i32 20
  %3921 = sext i32 %3920 to i64
  %3922 = getelementptr inbounds i8, i8* %135, i64 %3921
  %3923 = load i8, i8* %3922, align 1, !tbaa !392
  %3924 = insertelement <32 x i8> %3919, i8 %3923, i32 20
  %3925 = extractelement <32 x i32> %3819, i32 21
  %3926 = sext i32 %3925 to i64
  %3927 = getelementptr inbounds i8, i8* %135, i64 %3926
  %3928 = load i8, i8* %3927, align 1, !tbaa !392
  %3929 = insertelement <32 x i8> %3924, i8 %3928, i32 21
  %3930 = extractelement <32 x i32> %3819, i32 22
  %3931 = sext i32 %3930 to i64
  %3932 = getelementptr inbounds i8, i8* %135, i64 %3931
  %3933 = load i8, i8* %3932, align 1, !tbaa !392
  %3934 = insertelement <32 x i8> %3929, i8 %3933, i32 22
  %3935 = extractelement <32 x i32> %3819, i32 23
  %3936 = sext i32 %3935 to i64
  %3937 = getelementptr inbounds i8, i8* %135, i64 %3936
  %3938 = load i8, i8* %3937, align 1, !tbaa !392
  %3939 = insertelement <32 x i8> %3934, i8 %3938, i32 23
  %3940 = extractelement <32 x i32> %3819, i32 24
  %3941 = sext i32 %3940 to i64
  %3942 = getelementptr inbounds i8, i8* %135, i64 %3941
  %3943 = load i8, i8* %3942, align 1, !tbaa !392
  %3944 = insertelement <32 x i8> %3939, i8 %3943, i32 24
  %3945 = extractelement <32 x i32> %3819, i32 25
  %3946 = sext i32 %3945 to i64
  %3947 = getelementptr inbounds i8, i8* %135, i64 %3946
  %3948 = load i8, i8* %3947, align 1, !tbaa !392
  %3949 = insertelement <32 x i8> %3944, i8 %3948, i32 25
  %3950 = extractelement <32 x i32> %3819, i32 26
  %3951 = sext i32 %3950 to i64
  %3952 = getelementptr inbounds i8, i8* %135, i64 %3951
  %3953 = load i8, i8* %3952, align 1, !tbaa !392
  %3954 = insertelement <32 x i8> %3949, i8 %3953, i32 26
  %3955 = extractelement <32 x i32> %3819, i32 27
  %3956 = sext i32 %3955 to i64
  %3957 = getelementptr inbounds i8, i8* %135, i64 %3956
  %3958 = load i8, i8* %3957, align 1, !tbaa !392
  %3959 = insertelement <32 x i8> %3954, i8 %3958, i32 27
  %3960 = extractelement <32 x i32> %3819, i32 28
  %3961 = sext i32 %3960 to i64
  %3962 = getelementptr inbounds i8, i8* %135, i64 %3961
  %3963 = load i8, i8* %3962, align 1, !tbaa !392
  %3964 = insertelement <32 x i8> %3959, i8 %3963, i32 28
  %3965 = extractelement <32 x i32> %3819, i32 29
  %3966 = sext i32 %3965 to i64
  %3967 = getelementptr inbounds i8, i8* %135, i64 %3966
  %3968 = load i8, i8* %3967, align 1, !tbaa !392
  %3969 = insertelement <32 x i8> %3964, i8 %3968, i32 29
  %3970 = extractelement <32 x i32> %3819, i32 30
  %3971 = sext i32 %3970 to i64
  %3972 = getelementptr inbounds i8, i8* %135, i64 %3971
  %3973 = load i8, i8* %3972, align 1, !tbaa !392
  %3974 = insertelement <32 x i8> %3969, i8 %3973, i32 30
  %3975 = extractelement <32 x i32> %3819, i32 31
  %3976 = sext i32 %3975 to i64
  %3977 = getelementptr inbounds i8, i8* %135, i64 %3976
  %3978 = load i8, i8* %3977, align 1, !tbaa !392
  %3979 = insertelement <32 x i8> %3974, i8 %3978, i32 31
  %3980 = shufflevector <32 x i8> %3979, <32 x i8> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %3981 = add nsw i64 %indvars.iv645, %3777
  %3982 = shl nsw i64 %3981, 5
  %3983 = getelementptr inbounds i8, i8* %input_bounded93, i64 %3982
  %3984 = bitcast i8* %3983 to <16 x i8>*
  store <16 x i8> %3980, <16 x i8>* %3984, align 16, !tbaa !395
  %3985 = shufflevector <32 x i8> %3979, <32 x i8> undef, <16 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %3986 = getelementptr inbounds i8, i8* %3983, i64 16
  %3987 = bitcast i8* %3986 to <16 x i8>*
  store <16 x i8> %3985, <16 x i8>* %3987, align 16, !tbaa !395
  %indvars.iv.next646 = add nuw nsw i64 %indvars.iv645, 1
  %.not347 = icmp eq i64 %indvars.iv.next646, %213
  br i1 %.not347, label %"end for input_bounded.s0.x.x144", label %"for input_bounded.s0.x.x143"

"end for input_bounded.s0.x.x144":                ; preds = %"for input_bounded.s0.x.x143", %"for input_bounded.s0.y.rebased138.end for input_bounded.s0.x.x144_crit_edge"
  %indvars.iv.next648.pre-phi = phi i64 [ %.pre776, %"for input_bounded.s0.y.rebased138.end for input_bounded.s0.x.x144_crit_edge" ], [ %3772, %"for input_bounded.s0.x.x143" ]
  %3988 = add nuw nsw i32 %input_bounded.s0.y.rebased140, 1
  %.not346 = icmp eq i64 %indvars.iv647, %3322
  br i1 %.not346, label %"consume input_bounded146", label %"for input_bounded.s0.y.rebased138"

"consume input_bounded146":                       ; preds = %"end for input_bounded.s0.x.x144", %"end for input_bounded.s0.y.rebased116"
  br i1 %182, label %"for output.s0.x.x185.preheader", label %"end for output.s0.x.x186", !prof !385

"for output.s0.x.x185.preheader":                 ; preds = %"consume input_bounded146"
  %3989 = add nsw i32 %t381, 1
  %3990 = mul nsw i32 %3989, %120
  %3991 = add nsw i32 %t381, 2
  %3992 = mul nsw i32 %3991, %120
  %3993 = add nsw i32 %t381, 3
  %3994 = mul nsw i32 %3993, %120
  %3995 = add nsw i32 %t381, 4
  %3996 = mul nsw i32 %3995, %120
  %3997 = add nsw i32 %t381, 5
  %3998 = mul nsw i32 %3997, %120
  %3999 = add nsw i32 %t381, 6
  %4000 = mul nsw i32 %3999, %120
  %4001 = add nsw i32 %t381, 7
  %4002 = mul nsw i32 %4001, %120
  %4003 = add nsw i32 %t381, 8
  %4004 = mul nsw i32 %4003, %120
  %4005 = add nsw i32 %t381, 9
  %4006 = mul nsw i32 %4005, %120
  %4007 = add nsw i32 %t381, 10
  %4008 = mul nsw i32 %4007, %120
  %4009 = add nsw i32 %t381, 11
  %4010 = mul nsw i32 %4009, %120
  %4011 = add nsw i32 %t381, 12
  %4012 = mul nsw i32 %4011, %120
  %4013 = add nsw i32 %t381, 13
  %4014 = mul nsw i32 %4013, %120
  %4015 = add nsw i32 %t381, 14
  %4016 = mul nsw i32 %4015, %120
  %4017 = add nsw i32 %t381, 15
  %4018 = mul nsw i32 %4017, %120
  %4019 = mul i32 %3066, %120
  %4020 = load i8, i8* %185, align 1, !tbaa !397
  %4021 = sext i8 %4020 to i16
  %4022 = insertelement <32 x i16> undef, i16 %4021, i32 0
  %4023 = shufflevector <32 x i16> %4022, <32 x i16> undef, <32 x i32> zeroinitializer
  %4024 = load i8, i8* %187, align 1, !tbaa !397
  %4025 = sext i8 %4024 to i16
  %4026 = insertelement <32 x i16> undef, i16 %4025, i32 0
  %4027 = shufflevector <32 x i16> %4026, <32 x i16> undef, <32 x i32> zeroinitializer
  %4028 = load i8, i8* %189, align 1, !tbaa !397
  %4029 = sext i8 %4028 to i16
  %4030 = insertelement <32 x i16> undef, i16 %4029, i32 0
  %4031 = shufflevector <32 x i16> %4030, <32 x i16> undef, <32 x i32> zeroinitializer
  %4032 = load i8, i8* %191, align 1, !tbaa !397
  %4033 = sext i8 %4032 to i16
  %4034 = insertelement <32 x i16> undef, i16 %4033, i32 0
  %4035 = shufflevector <32 x i16> %4034, <32 x i16> undef, <32 x i32> zeroinitializer
  %4036 = load i8, i8* %192, align 1, !tbaa !397
  %4037 = sext i8 %4036 to i16
  %4038 = insertelement <32 x i16> undef, i16 %4037, i32 0
  %4039 = shufflevector <32 x i16> %4038, <32 x i16> undef, <32 x i32> zeroinitializer
  %4040 = load i8, i8* %193, align 1, !tbaa !397
  %4041 = sext i8 %4040 to i16
  %4042 = insertelement <32 x i16> undef, i16 %4041, i32 0
  %4043 = shufflevector <32 x i16> %4042, <32 x i16> undef, <32 x i32> zeroinitializer
  %4044 = load i8, i8* %195, align 1, !tbaa !397
  %4045 = sext i8 %4044 to i16
  %4046 = insertelement <32 x i16> undef, i16 %4045, i32 0
  %4047 = shufflevector <32 x i16> %4046, <32 x i16> undef, <32 x i32> zeroinitializer
  %4048 = load i8, i8* %196, align 1, !tbaa !397
  %4049 = sext i8 %4048 to i16
  %4050 = insertelement <32 x i16> undef, i16 %4049, i32 0
  %4051 = shufflevector <32 x i16> %4050, <32 x i16> undef, <32 x i32> zeroinitializer
  %4052 = load i8, i8* %197, align 1, !tbaa !397
  %4053 = sext i8 %4052 to i16
  %4054 = insertelement <32 x i16> undef, i16 %4053, i32 0
  %4055 = shufflevector <32 x i16> %4054, <32 x i16> undef, <32 x i32> zeroinitializer
  %4056 = sub i32 %3990, %.pre-phi773
  %4057 = sub i32 %3992, %.pre-phi773
  %4058 = sub i32 %3994, %.pre-phi773
  %4059 = sub i32 %3996, %.pre-phi773
  %4060 = sub i32 %3998, %.pre-phi773
  %4061 = sub i32 %4000, %.pre-phi773
  %4062 = sub i32 %4002, %.pre-phi773
  %4063 = sub i32 %4004, %.pre-phi773
  %4064 = sub i32 %4006, %.pre-phi773
  %4065 = sub i32 %4008, %.pre-phi773
  %4066 = sub i32 %4010, %.pre-phi773
  %4067 = sub i32 %4012, %.pre-phi773
  %4068 = sub i32 %4014, %.pre-phi773
  %4069 = sub i32 %4016, %.pre-phi773
  %4070 = sub i32 %4018, %.pre-phi773
  br label %"for output.s0.x.x185"

"for output.s0.x.x185":                           ; preds = %"for output.s0.x.x185.preheader", %"for output.s0.x.x185"
  %indvars.iv730 = phi i64 [ 0, %"for output.s0.x.x185.preheader" ], [ %indvars.iv.next731, %"for output.s0.x.x185" ]
  %4071 = trunc i64 %indvars.iv730 to i32
  %4072 = shl nsw i32 %4071, 6
  %t347188 = add nsw i32 %4072, %4019
  %4073 = shl nuw nsw i64 %indvars.iv730, 1
  %4074 = add nsw i64 %4073, %221
  %4075 = sext i32 %t347188 to i64
  %4076 = add nsw i64 %4074, %221
  %4077 = add nsw i64 %4074, %222
  %4078 = shl nsw i64 %4077, 5
  %4079 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4078
  %4080 = getelementptr inbounds i8, i8* %4079, i64 1
  %4081 = bitcast i8* %4080 to <16 x i8>*
  %4082 = load <16 x i8>, <16 x i8>* %4081, align 1, !tbaa !395
  %4083 = getelementptr inbounds i8, i8* %4079, i64 17
  %4084 = bitcast i8* %4083 to <16 x i8>*
  %4085 = load <16 x i8>, <16 x i8>* %4084, align 1, !tbaa !395
  %4086 = shufflevector <16 x i8> %4082, <16 x i8> %4085, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4087 = zext <32 x i8> %4086 to <32 x i16>
  %4088 = mul <32 x i16> %4023, %4087
  %4089 = bitcast i8* %4079 to <16 x i8>*
  %4090 = load <16 x i8>, <16 x i8>* %4089, align 16, !tbaa !395
  %4091 = getelementptr inbounds i8, i8* %4079, i64 16
  %4092 = bitcast i8* %4091 to <16 x i8>*
  %4093 = load <16 x i8>, <16 x i8>* %4092, align 16, !tbaa !395
  %4094 = shufflevector <16 x i8> %4090, <16 x i8> %4093, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4095 = zext <32 x i8> %4094 to <32 x i16>
  %4096 = mul <32 x i16> %4027, %4095
  %4097 = getelementptr inbounds i8, i8* %4079, i64 2
  %4098 = bitcast i8* %4097 to <16 x i8>*
  %4099 = load <16 x i8>, <16 x i8>* %4098, align 2, !tbaa !395
  %4100 = getelementptr inbounds i8, i8* %4079, i64 18
  %4101 = bitcast i8* %4100 to <16 x i8>*
  %4102 = load <16 x i8>, <16 x i8>* %4101, align 2, !tbaa !395
  %4103 = shufflevector <16 x i8> %4099, <16 x i8> %4102, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4104 = zext <32 x i8> %4103 to <32 x i16>
  %4105 = mul <32 x i16> %4031, %4104
  %4106 = shl nsw i64 %4074, 5
  %4107 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4106
  %4108 = bitcast i8* %4107 to <16 x i8>*
  %4109 = load <16 x i8>, <16 x i8>* %4108, align 16, !tbaa !395
  %4110 = getelementptr inbounds i8, i8* %4107, i64 16
  %4111 = bitcast i8* %4110 to <16 x i8>*
  %4112 = load <16 x i8>, <16 x i8>* %4111, align 16, !tbaa !395
  %4113 = shufflevector <16 x i8> %4109, <16 x i8> %4112, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4114 = zext <32 x i8> %4113 to <32 x i16>
  %4115 = mul <32 x i16> %4035, %4114
  %4116 = getelementptr inbounds i8, i8* %4107, i64 1
  %4117 = bitcast i8* %4116 to <16 x i8>*
  %4118 = load <16 x i8>, <16 x i8>* %4117, align 1, !tbaa !395
  %4119 = getelementptr inbounds i8, i8* %4107, i64 17
  %4120 = bitcast i8* %4119 to <16 x i8>*
  %4121 = load <16 x i8>, <16 x i8>* %4120, align 1, !tbaa !395
  %4122 = shufflevector <16 x i8> %4118, <16 x i8> %4121, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4123 = zext <32 x i8> %4122 to <32 x i16>
  %4124 = mul <32 x i16> %4039, %4123
  %4125 = getelementptr inbounds i8, i8* %4107, i64 2
  %4126 = bitcast i8* %4125 to <16 x i8>*
  %4127 = load <16 x i8>, <16 x i8>* %4126, align 2, !tbaa !395
  %4128 = getelementptr inbounds i8, i8* %4107, i64 18
  %4129 = bitcast i8* %4128 to <16 x i8>*
  %4130 = load <16 x i8>, <16 x i8>* %4129, align 2, !tbaa !395
  %4131 = shufflevector <16 x i8> %4127, <16 x i8> %4130, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4132 = zext <32 x i8> %4131 to <32 x i16>
  %4133 = mul <32 x i16> %4043, %4132
  %4134 = shl nsw i64 %4076, 5
  %4135 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4134
  %4136 = bitcast i8* %4135 to <16 x i8>*
  %4137 = load <16 x i8>, <16 x i8>* %4136, align 16, !tbaa !395
  %4138 = getelementptr inbounds i8, i8* %4135, i64 16
  %4139 = bitcast i8* %4138 to <16 x i8>*
  %4140 = load <16 x i8>, <16 x i8>* %4139, align 16, !tbaa !395
  %4141 = shufflevector <16 x i8> %4137, <16 x i8> %4140, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4142 = zext <32 x i8> %4141 to <32 x i16>
  %4143 = mul <32 x i16> %4047, %4142
  %4144 = getelementptr inbounds i8, i8* %4135, i64 2
  %4145 = bitcast i8* %4144 to <16 x i8>*
  %4146 = load <16 x i8>, <16 x i8>* %4145, align 2, !tbaa !395
  %4147 = getelementptr inbounds i8, i8* %4135, i64 18
  %4148 = bitcast i8* %4147 to <16 x i8>*
  %4149 = load <16 x i8>, <16 x i8>* %4148, align 2, !tbaa !395
  %4150 = shufflevector <16 x i8> %4146, <16 x i8> %4149, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4151 = zext <32 x i8> %4150 to <32 x i16>
  %4152 = mul <32 x i16> %4051, %4151
  %4153 = getelementptr inbounds i8, i8* %4135, i64 1
  %4154 = bitcast i8* %4153 to <16 x i8>*
  %4155 = load <16 x i8>, <16 x i8>* %4154, align 1, !tbaa !395
  %4156 = getelementptr inbounds i8, i8* %4135, i64 17
  %4157 = bitcast i8* %4156 to <16 x i8>*
  %4158 = load <16 x i8>, <16 x i8>* %4157, align 1, !tbaa !395
  %4159 = shufflevector <16 x i8> %4155, <16 x i8> %4158, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4160 = zext <32 x i8> %4159 to <32 x i16>
  %4161 = mul <32 x i16> %4055, %4160
  %4162 = add <32 x i16> %4096, %4088
  %4163 = add <32 x i16> %4162, %4105
  %4164 = add <32 x i16> %4163, %4115
  %4165 = add <32 x i16> %4164, %4124
  %4166 = add <32 x i16> %4165, %4133
  %4167 = add <32 x i16> %4166, %4143
  %4168 = add <32 x i16> %4167, %4152
  %4169 = add <32 x i16> %4168, %4161
  %t395 = ashr <32 x i16> %4169, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %4170 = bitcast <32 x i16> %t395 to <8 x i64>
  %4171 = shufflevector <8 x i64> %4170, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t396 = bitcast <2 x i64> %4171 to <8 x i16>
  %4172 = shufflevector <8 x i64> %4170, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t397 = bitcast <2 x i64> %4172 to <8 x i16>
  %4173 = shufflevector <8 x i64> %4170, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t398 = bitcast <2 x i64> %4173 to <8 x i16>
  %4174 = shufflevector <8 x i64> %4170, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t399 = bitcast <2 x i64> %4174 to <8 x i16>
  %4175 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t396) #11
  %4176 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t397) #11
  %4177 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t398) #11
  %4178 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t399) #11
  %4179 = shufflevector <8 x i8> %4175, <8 x i8> %4176, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4180 = shufflevector <8 x i8> %4177, <8 x i8> %4178, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4181 = shufflevector <16 x i8> %4179, <16 x i8> %4180, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4182 = bitcast <32 x i8> %4181 to <4 x i64>
  %4183 = shufflevector <4 x i64> %4182, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %4184 = shufflevector <4 x i64> %4182, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %4185 = getelementptr inbounds i8, i8* %125, i64 %4075
  %4186 = bitcast i8* %4185 to <2 x i64>*
  store <2 x i64> %4183, <2 x i64>* %4186, align 1, !tbaa !399
  %4187 = getelementptr inbounds i8, i8* %4185, i64 16
  %4188 = bitcast i8* %4187 to <2 x i64>*
  store <2 x i64> %4184, <2 x i64>* %4188, align 1, !tbaa !399
  %4189 = or i64 %4074, 1
  %4190 = add nsw i64 %4189, %221
  %4191 = add nsw i64 %4189, %222
  %4192 = shl nsw i64 %4191, 5
  %4193 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4192
  %4194 = getelementptr inbounds i8, i8* %4193, i64 1
  %4195 = bitcast i8* %4194 to <16 x i8>*
  %4196 = load <16 x i8>, <16 x i8>* %4195, align 1, !tbaa !395
  %4197 = getelementptr inbounds i8, i8* %4193, i64 17
  %4198 = bitcast i8* %4197 to <16 x i8>*
  %4199 = load <16 x i8>, <16 x i8>* %4198, align 1, !tbaa !395
  %4200 = shufflevector <16 x i8> %4196, <16 x i8> %4199, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4201 = zext <32 x i8> %4200 to <32 x i16>
  %4202 = mul <32 x i16> %4023, %4201
  %4203 = bitcast i8* %4193 to <16 x i8>*
  %4204 = load <16 x i8>, <16 x i8>* %4203, align 16, !tbaa !395
  %4205 = getelementptr inbounds i8, i8* %4193, i64 16
  %4206 = bitcast i8* %4205 to <16 x i8>*
  %4207 = load <16 x i8>, <16 x i8>* %4206, align 16, !tbaa !395
  %4208 = shufflevector <16 x i8> %4204, <16 x i8> %4207, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4209 = zext <32 x i8> %4208 to <32 x i16>
  %4210 = mul <32 x i16> %4027, %4209
  %4211 = getelementptr inbounds i8, i8* %4193, i64 2
  %4212 = bitcast i8* %4211 to <16 x i8>*
  %4213 = load <16 x i8>, <16 x i8>* %4212, align 2, !tbaa !395
  %4214 = getelementptr inbounds i8, i8* %4193, i64 18
  %4215 = bitcast i8* %4214 to <16 x i8>*
  %4216 = load <16 x i8>, <16 x i8>* %4215, align 2, !tbaa !395
  %4217 = shufflevector <16 x i8> %4213, <16 x i8> %4216, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4218 = zext <32 x i8> %4217 to <32 x i16>
  %4219 = mul <32 x i16> %4031, %4218
  %4220 = shl nsw i64 %4189, 5
  %4221 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4220
  %4222 = bitcast i8* %4221 to <16 x i8>*
  %4223 = load <16 x i8>, <16 x i8>* %4222, align 16, !tbaa !395
  %4224 = getelementptr inbounds i8, i8* %4221, i64 16
  %4225 = bitcast i8* %4224 to <16 x i8>*
  %4226 = load <16 x i8>, <16 x i8>* %4225, align 16, !tbaa !395
  %4227 = shufflevector <16 x i8> %4223, <16 x i8> %4226, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4228 = zext <32 x i8> %4227 to <32 x i16>
  %4229 = mul <32 x i16> %4035, %4228
  %4230 = getelementptr inbounds i8, i8* %4221, i64 1
  %4231 = bitcast i8* %4230 to <16 x i8>*
  %4232 = load <16 x i8>, <16 x i8>* %4231, align 1, !tbaa !395
  %4233 = getelementptr inbounds i8, i8* %4221, i64 17
  %4234 = bitcast i8* %4233 to <16 x i8>*
  %4235 = load <16 x i8>, <16 x i8>* %4234, align 1, !tbaa !395
  %4236 = shufflevector <16 x i8> %4232, <16 x i8> %4235, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4237 = zext <32 x i8> %4236 to <32 x i16>
  %4238 = mul <32 x i16> %4039, %4237
  %4239 = getelementptr inbounds i8, i8* %4221, i64 2
  %4240 = bitcast i8* %4239 to <16 x i8>*
  %4241 = load <16 x i8>, <16 x i8>* %4240, align 2, !tbaa !395
  %4242 = getelementptr inbounds i8, i8* %4221, i64 18
  %4243 = bitcast i8* %4242 to <16 x i8>*
  %4244 = load <16 x i8>, <16 x i8>* %4243, align 2, !tbaa !395
  %4245 = shufflevector <16 x i8> %4241, <16 x i8> %4244, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4246 = zext <32 x i8> %4245 to <32 x i16>
  %4247 = mul <32 x i16> %4043, %4246
  %4248 = shl nsw i64 %4190, 5
  %4249 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4248
  %4250 = bitcast i8* %4249 to <16 x i8>*
  %4251 = load <16 x i8>, <16 x i8>* %4250, align 16, !tbaa !395
  %4252 = getelementptr inbounds i8, i8* %4249, i64 16
  %4253 = bitcast i8* %4252 to <16 x i8>*
  %4254 = load <16 x i8>, <16 x i8>* %4253, align 16, !tbaa !395
  %4255 = shufflevector <16 x i8> %4251, <16 x i8> %4254, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4256 = zext <32 x i8> %4255 to <32 x i16>
  %4257 = mul <32 x i16> %4047, %4256
  %4258 = getelementptr inbounds i8, i8* %4249, i64 2
  %4259 = bitcast i8* %4258 to <16 x i8>*
  %4260 = load <16 x i8>, <16 x i8>* %4259, align 2, !tbaa !395
  %4261 = getelementptr inbounds i8, i8* %4249, i64 18
  %4262 = bitcast i8* %4261 to <16 x i8>*
  %4263 = load <16 x i8>, <16 x i8>* %4262, align 2, !tbaa !395
  %4264 = shufflevector <16 x i8> %4260, <16 x i8> %4263, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4265 = zext <32 x i8> %4264 to <32 x i16>
  %4266 = mul <32 x i16> %4051, %4265
  %4267 = getelementptr inbounds i8, i8* %4249, i64 1
  %4268 = bitcast i8* %4267 to <16 x i8>*
  %4269 = load <16 x i8>, <16 x i8>* %4268, align 1, !tbaa !395
  %4270 = getelementptr inbounds i8, i8* %4249, i64 17
  %4271 = bitcast i8* %4270 to <16 x i8>*
  %4272 = load <16 x i8>, <16 x i8>* %4271, align 1, !tbaa !395
  %4273 = shufflevector <16 x i8> %4269, <16 x i8> %4272, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4274 = zext <32 x i8> %4273 to <32 x i16>
  %4275 = mul <32 x i16> %4055, %4274
  %4276 = add <32 x i16> %4210, %4202
  %4277 = add <32 x i16> %4276, %4219
  %4278 = add <32 x i16> %4277, %4229
  %4279 = add <32 x i16> %4278, %4238
  %4280 = add <32 x i16> %4279, %4247
  %4281 = add <32 x i16> %4280, %4257
  %4282 = add <32 x i16> %4281, %4266
  %4283 = add <32 x i16> %4282, %4275
  %t395.1 = ashr <32 x i16> %4283, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %4284 = bitcast <32 x i16> %t395.1 to <8 x i64>
  %4285 = shufflevector <8 x i64> %4284, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t396.1 = bitcast <2 x i64> %4285 to <8 x i16>
  %4286 = shufflevector <8 x i64> %4284, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t397.1 = bitcast <2 x i64> %4286 to <8 x i16>
  %4287 = shufflevector <8 x i64> %4284, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t398.1 = bitcast <2 x i64> %4287 to <8 x i16>
  %4288 = shufflevector <8 x i64> %4284, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t399.1 = bitcast <2 x i64> %4288 to <8 x i16>
  %4289 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t396.1) #11
  %4290 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t397.1) #11
  %4291 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t398.1) #11
  %4292 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t399.1) #11
  %4293 = shufflevector <8 x i8> %4289, <8 x i8> %4290, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4294 = shufflevector <8 x i8> %4291, <8 x i8> %4292, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4295 = shufflevector <16 x i8> %4293, <16 x i8> %4294, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4296 = bitcast <32 x i8> %4295 to <4 x i64>
  %4297 = shufflevector <4 x i64> %4296, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %4298 = shufflevector <4 x i64> %4296, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %4299 = add nsw i64 %4075, 32
  %4300 = getelementptr inbounds i8, i8* %125, i64 %4299
  %4301 = bitcast i8* %4300 to <2 x i64>*
  store <2 x i64> %4297, <2 x i64>* %4301, align 1, !tbaa !399
  %4302 = getelementptr inbounds i8, i8* %4300, i64 16
  %4303 = bitcast i8* %4302 to <2 x i64>*
  store <2 x i64> %4298, <2 x i64>* %4303, align 1, !tbaa !399
  %t349196 = add nsw i32 %4056, %4072
  %4304 = add nsw i64 %4073, %238
  %4305 = sext i32 %t349196 to i64
  %4306 = add nsw i64 %4304, %221
  %4307 = add nsw i64 %4304, %222
  %4308 = shl nsw i64 %4307, 5
  %4309 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4308
  %4310 = getelementptr inbounds i8, i8* %4309, i64 1
  %4311 = bitcast i8* %4310 to <16 x i8>*
  %4312 = load <16 x i8>, <16 x i8>* %4311, align 1, !tbaa !395
  %4313 = getelementptr inbounds i8, i8* %4309, i64 17
  %4314 = bitcast i8* %4313 to <16 x i8>*
  %4315 = load <16 x i8>, <16 x i8>* %4314, align 1, !tbaa !395
  %4316 = shufflevector <16 x i8> %4312, <16 x i8> %4315, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4317 = zext <32 x i8> %4316 to <32 x i16>
  %4318 = mul <32 x i16> %4023, %4317
  %4319 = bitcast i8* %4309 to <16 x i8>*
  %4320 = load <16 x i8>, <16 x i8>* %4319, align 16, !tbaa !395
  %4321 = getelementptr inbounds i8, i8* %4309, i64 16
  %4322 = bitcast i8* %4321 to <16 x i8>*
  %4323 = load <16 x i8>, <16 x i8>* %4322, align 16, !tbaa !395
  %4324 = shufflevector <16 x i8> %4320, <16 x i8> %4323, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4325 = zext <32 x i8> %4324 to <32 x i16>
  %4326 = mul <32 x i16> %4027, %4325
  %4327 = getelementptr inbounds i8, i8* %4309, i64 2
  %4328 = bitcast i8* %4327 to <16 x i8>*
  %4329 = load <16 x i8>, <16 x i8>* %4328, align 2, !tbaa !395
  %4330 = getelementptr inbounds i8, i8* %4309, i64 18
  %4331 = bitcast i8* %4330 to <16 x i8>*
  %4332 = load <16 x i8>, <16 x i8>* %4331, align 2, !tbaa !395
  %4333 = shufflevector <16 x i8> %4329, <16 x i8> %4332, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4334 = zext <32 x i8> %4333 to <32 x i16>
  %4335 = mul <32 x i16> %4031, %4334
  %4336 = shl nsw i64 %4304, 5
  %4337 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4336
  %4338 = bitcast i8* %4337 to <16 x i8>*
  %4339 = load <16 x i8>, <16 x i8>* %4338, align 16, !tbaa !395
  %4340 = getelementptr inbounds i8, i8* %4337, i64 16
  %4341 = bitcast i8* %4340 to <16 x i8>*
  %4342 = load <16 x i8>, <16 x i8>* %4341, align 16, !tbaa !395
  %4343 = shufflevector <16 x i8> %4339, <16 x i8> %4342, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4344 = zext <32 x i8> %4343 to <32 x i16>
  %4345 = mul <32 x i16> %4035, %4344
  %4346 = getelementptr inbounds i8, i8* %4337, i64 1
  %4347 = bitcast i8* %4346 to <16 x i8>*
  %4348 = load <16 x i8>, <16 x i8>* %4347, align 1, !tbaa !395
  %4349 = getelementptr inbounds i8, i8* %4337, i64 17
  %4350 = bitcast i8* %4349 to <16 x i8>*
  %4351 = load <16 x i8>, <16 x i8>* %4350, align 1, !tbaa !395
  %4352 = shufflevector <16 x i8> %4348, <16 x i8> %4351, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4353 = zext <32 x i8> %4352 to <32 x i16>
  %4354 = mul <32 x i16> %4039, %4353
  %4355 = getelementptr inbounds i8, i8* %4337, i64 2
  %4356 = bitcast i8* %4355 to <16 x i8>*
  %4357 = load <16 x i8>, <16 x i8>* %4356, align 2, !tbaa !395
  %4358 = getelementptr inbounds i8, i8* %4337, i64 18
  %4359 = bitcast i8* %4358 to <16 x i8>*
  %4360 = load <16 x i8>, <16 x i8>* %4359, align 2, !tbaa !395
  %4361 = shufflevector <16 x i8> %4357, <16 x i8> %4360, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4362 = zext <32 x i8> %4361 to <32 x i16>
  %4363 = mul <32 x i16> %4043, %4362
  %4364 = shl nsw i64 %4306, 5
  %4365 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4364
  %4366 = bitcast i8* %4365 to <16 x i8>*
  %4367 = load <16 x i8>, <16 x i8>* %4366, align 16, !tbaa !395
  %4368 = getelementptr inbounds i8, i8* %4365, i64 16
  %4369 = bitcast i8* %4368 to <16 x i8>*
  %4370 = load <16 x i8>, <16 x i8>* %4369, align 16, !tbaa !395
  %4371 = shufflevector <16 x i8> %4367, <16 x i8> %4370, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4372 = zext <32 x i8> %4371 to <32 x i16>
  %4373 = mul <32 x i16> %4047, %4372
  %4374 = getelementptr inbounds i8, i8* %4365, i64 2
  %4375 = bitcast i8* %4374 to <16 x i8>*
  %4376 = load <16 x i8>, <16 x i8>* %4375, align 2, !tbaa !395
  %4377 = getelementptr inbounds i8, i8* %4365, i64 18
  %4378 = bitcast i8* %4377 to <16 x i8>*
  %4379 = load <16 x i8>, <16 x i8>* %4378, align 2, !tbaa !395
  %4380 = shufflevector <16 x i8> %4376, <16 x i8> %4379, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4381 = zext <32 x i8> %4380 to <32 x i16>
  %4382 = mul <32 x i16> %4051, %4381
  %4383 = getelementptr inbounds i8, i8* %4365, i64 1
  %4384 = bitcast i8* %4383 to <16 x i8>*
  %4385 = load <16 x i8>, <16 x i8>* %4384, align 1, !tbaa !395
  %4386 = getelementptr inbounds i8, i8* %4365, i64 17
  %4387 = bitcast i8* %4386 to <16 x i8>*
  %4388 = load <16 x i8>, <16 x i8>* %4387, align 1, !tbaa !395
  %4389 = shufflevector <16 x i8> %4385, <16 x i8> %4388, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4390 = zext <32 x i8> %4389 to <32 x i16>
  %4391 = mul <32 x i16> %4055, %4390
  %4392 = add <32 x i16> %4326, %4318
  %4393 = add <32 x i16> %4392, %4335
  %4394 = add <32 x i16> %4393, %4345
  %4395 = add <32 x i16> %4394, %4354
  %4396 = add <32 x i16> %4395, %4363
  %4397 = add <32 x i16> %4396, %4373
  %4398 = add <32 x i16> %4397, %4382
  %4399 = add <32 x i16> %4398, %4391
  %t402 = ashr <32 x i16> %4399, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %4400 = bitcast <32 x i16> %t402 to <8 x i64>
  %4401 = shufflevector <8 x i64> %4400, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t403 = bitcast <2 x i64> %4401 to <8 x i16>
  %4402 = shufflevector <8 x i64> %4400, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t404 = bitcast <2 x i64> %4402 to <8 x i16>
  %4403 = shufflevector <8 x i64> %4400, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t405 = bitcast <2 x i64> %4403 to <8 x i16>
  %4404 = shufflevector <8 x i64> %4400, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t406 = bitcast <2 x i64> %4404 to <8 x i16>
  %4405 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t403) #11
  %4406 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t404) #11
  %4407 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t405) #11
  %4408 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t406) #11
  %4409 = shufflevector <8 x i8> %4405, <8 x i8> %4406, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4410 = shufflevector <8 x i8> %4407, <8 x i8> %4408, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4411 = shufflevector <16 x i8> %4409, <16 x i8> %4410, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4412 = bitcast <32 x i8> %4411 to <4 x i64>
  %4413 = shufflevector <4 x i64> %4412, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %4414 = shufflevector <4 x i64> %4412, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %4415 = getelementptr inbounds i8, i8* %125, i64 %4305
  %4416 = bitcast i8* %4415 to <2 x i64>*
  store <2 x i64> %4413, <2 x i64>* %4416, align 1, !tbaa !399
  %4417 = getelementptr inbounds i8, i8* %4415, i64 16
  %4418 = bitcast i8* %4417 to <2 x i64>*
  store <2 x i64> %4414, <2 x i64>* %4418, align 1, !tbaa !399
  %4419 = or i64 %4304, 1
  %4420 = add nsw i64 %4419, %221
  %4421 = add nsw i64 %4419, %222
  %4422 = shl nsw i64 %4421, 5
  %4423 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4422
  %4424 = getelementptr inbounds i8, i8* %4423, i64 1
  %4425 = bitcast i8* %4424 to <16 x i8>*
  %4426 = load <16 x i8>, <16 x i8>* %4425, align 1, !tbaa !395
  %4427 = getelementptr inbounds i8, i8* %4423, i64 17
  %4428 = bitcast i8* %4427 to <16 x i8>*
  %4429 = load <16 x i8>, <16 x i8>* %4428, align 1, !tbaa !395
  %4430 = shufflevector <16 x i8> %4426, <16 x i8> %4429, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4431 = zext <32 x i8> %4430 to <32 x i16>
  %4432 = mul <32 x i16> %4023, %4431
  %4433 = bitcast i8* %4423 to <16 x i8>*
  %4434 = load <16 x i8>, <16 x i8>* %4433, align 16, !tbaa !395
  %4435 = getelementptr inbounds i8, i8* %4423, i64 16
  %4436 = bitcast i8* %4435 to <16 x i8>*
  %4437 = load <16 x i8>, <16 x i8>* %4436, align 16, !tbaa !395
  %4438 = shufflevector <16 x i8> %4434, <16 x i8> %4437, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4439 = zext <32 x i8> %4438 to <32 x i16>
  %4440 = mul <32 x i16> %4027, %4439
  %4441 = getelementptr inbounds i8, i8* %4423, i64 2
  %4442 = bitcast i8* %4441 to <16 x i8>*
  %4443 = load <16 x i8>, <16 x i8>* %4442, align 2, !tbaa !395
  %4444 = getelementptr inbounds i8, i8* %4423, i64 18
  %4445 = bitcast i8* %4444 to <16 x i8>*
  %4446 = load <16 x i8>, <16 x i8>* %4445, align 2, !tbaa !395
  %4447 = shufflevector <16 x i8> %4443, <16 x i8> %4446, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4448 = zext <32 x i8> %4447 to <32 x i16>
  %4449 = mul <32 x i16> %4031, %4448
  %4450 = shl nsw i64 %4419, 5
  %4451 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4450
  %4452 = bitcast i8* %4451 to <16 x i8>*
  %4453 = load <16 x i8>, <16 x i8>* %4452, align 16, !tbaa !395
  %4454 = getelementptr inbounds i8, i8* %4451, i64 16
  %4455 = bitcast i8* %4454 to <16 x i8>*
  %4456 = load <16 x i8>, <16 x i8>* %4455, align 16, !tbaa !395
  %4457 = shufflevector <16 x i8> %4453, <16 x i8> %4456, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4458 = zext <32 x i8> %4457 to <32 x i16>
  %4459 = mul <32 x i16> %4035, %4458
  %4460 = getelementptr inbounds i8, i8* %4451, i64 1
  %4461 = bitcast i8* %4460 to <16 x i8>*
  %4462 = load <16 x i8>, <16 x i8>* %4461, align 1, !tbaa !395
  %4463 = getelementptr inbounds i8, i8* %4451, i64 17
  %4464 = bitcast i8* %4463 to <16 x i8>*
  %4465 = load <16 x i8>, <16 x i8>* %4464, align 1, !tbaa !395
  %4466 = shufflevector <16 x i8> %4462, <16 x i8> %4465, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4467 = zext <32 x i8> %4466 to <32 x i16>
  %4468 = mul <32 x i16> %4039, %4467
  %4469 = getelementptr inbounds i8, i8* %4451, i64 2
  %4470 = bitcast i8* %4469 to <16 x i8>*
  %4471 = load <16 x i8>, <16 x i8>* %4470, align 2, !tbaa !395
  %4472 = getelementptr inbounds i8, i8* %4451, i64 18
  %4473 = bitcast i8* %4472 to <16 x i8>*
  %4474 = load <16 x i8>, <16 x i8>* %4473, align 2, !tbaa !395
  %4475 = shufflevector <16 x i8> %4471, <16 x i8> %4474, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4476 = zext <32 x i8> %4475 to <32 x i16>
  %4477 = mul <32 x i16> %4043, %4476
  %4478 = shl nsw i64 %4420, 5
  %4479 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4478
  %4480 = bitcast i8* %4479 to <16 x i8>*
  %4481 = load <16 x i8>, <16 x i8>* %4480, align 16, !tbaa !395
  %4482 = getelementptr inbounds i8, i8* %4479, i64 16
  %4483 = bitcast i8* %4482 to <16 x i8>*
  %4484 = load <16 x i8>, <16 x i8>* %4483, align 16, !tbaa !395
  %4485 = shufflevector <16 x i8> %4481, <16 x i8> %4484, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4486 = zext <32 x i8> %4485 to <32 x i16>
  %4487 = mul <32 x i16> %4047, %4486
  %4488 = getelementptr inbounds i8, i8* %4479, i64 2
  %4489 = bitcast i8* %4488 to <16 x i8>*
  %4490 = load <16 x i8>, <16 x i8>* %4489, align 2, !tbaa !395
  %4491 = getelementptr inbounds i8, i8* %4479, i64 18
  %4492 = bitcast i8* %4491 to <16 x i8>*
  %4493 = load <16 x i8>, <16 x i8>* %4492, align 2, !tbaa !395
  %4494 = shufflevector <16 x i8> %4490, <16 x i8> %4493, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4495 = zext <32 x i8> %4494 to <32 x i16>
  %4496 = mul <32 x i16> %4051, %4495
  %4497 = getelementptr inbounds i8, i8* %4479, i64 1
  %4498 = bitcast i8* %4497 to <16 x i8>*
  %4499 = load <16 x i8>, <16 x i8>* %4498, align 1, !tbaa !395
  %4500 = getelementptr inbounds i8, i8* %4479, i64 17
  %4501 = bitcast i8* %4500 to <16 x i8>*
  %4502 = load <16 x i8>, <16 x i8>* %4501, align 1, !tbaa !395
  %4503 = shufflevector <16 x i8> %4499, <16 x i8> %4502, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4504 = zext <32 x i8> %4503 to <32 x i16>
  %4505 = mul <32 x i16> %4055, %4504
  %4506 = add <32 x i16> %4440, %4432
  %4507 = add <32 x i16> %4506, %4449
  %4508 = add <32 x i16> %4507, %4459
  %4509 = add <32 x i16> %4508, %4468
  %4510 = add <32 x i16> %4509, %4477
  %4511 = add <32 x i16> %4510, %4487
  %4512 = add <32 x i16> %4511, %4496
  %4513 = add <32 x i16> %4512, %4505
  %t402.1 = ashr <32 x i16> %4513, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %4514 = bitcast <32 x i16> %t402.1 to <8 x i64>
  %4515 = shufflevector <8 x i64> %4514, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t403.1 = bitcast <2 x i64> %4515 to <8 x i16>
  %4516 = shufflevector <8 x i64> %4514, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t404.1 = bitcast <2 x i64> %4516 to <8 x i16>
  %4517 = shufflevector <8 x i64> %4514, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t405.1 = bitcast <2 x i64> %4517 to <8 x i16>
  %4518 = shufflevector <8 x i64> %4514, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t406.1 = bitcast <2 x i64> %4518 to <8 x i16>
  %4519 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t403.1) #11
  %4520 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t404.1) #11
  %4521 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t405.1) #11
  %4522 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t406.1) #11
  %4523 = shufflevector <8 x i8> %4519, <8 x i8> %4520, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4524 = shufflevector <8 x i8> %4521, <8 x i8> %4522, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4525 = shufflevector <16 x i8> %4523, <16 x i8> %4524, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4526 = bitcast <32 x i8> %4525 to <4 x i64>
  %4527 = shufflevector <4 x i64> %4526, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %4528 = shufflevector <4 x i64> %4526, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %4529 = add nsw i64 %4305, 32
  %4530 = getelementptr inbounds i8, i8* %125, i64 %4529
  %4531 = bitcast i8* %4530 to <2 x i64>*
  store <2 x i64> %4527, <2 x i64>* %4531, align 1, !tbaa !399
  %4532 = getelementptr inbounds i8, i8* %4530, i64 16
  %4533 = bitcast i8* %4532 to <2 x i64>*
  store <2 x i64> %4528, <2 x i64>* %4533, align 1, !tbaa !399
  %t351204 = add nsw i32 %4057, %4072
  %4534 = add nsw i64 %4073, %237
  %4535 = sext i32 %t351204 to i64
  %4536 = add nsw i64 %4534, %221
  %4537 = add nsw i64 %4534, %222
  %4538 = shl nsw i64 %4537, 5
  %4539 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4538
  %4540 = getelementptr inbounds i8, i8* %4539, i64 1
  %4541 = bitcast i8* %4540 to <16 x i8>*
  %4542 = load <16 x i8>, <16 x i8>* %4541, align 1, !tbaa !395
  %4543 = getelementptr inbounds i8, i8* %4539, i64 17
  %4544 = bitcast i8* %4543 to <16 x i8>*
  %4545 = load <16 x i8>, <16 x i8>* %4544, align 1, !tbaa !395
  %4546 = shufflevector <16 x i8> %4542, <16 x i8> %4545, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4547 = zext <32 x i8> %4546 to <32 x i16>
  %4548 = mul <32 x i16> %4023, %4547
  %4549 = bitcast i8* %4539 to <16 x i8>*
  %4550 = load <16 x i8>, <16 x i8>* %4549, align 16, !tbaa !395
  %4551 = getelementptr inbounds i8, i8* %4539, i64 16
  %4552 = bitcast i8* %4551 to <16 x i8>*
  %4553 = load <16 x i8>, <16 x i8>* %4552, align 16, !tbaa !395
  %4554 = shufflevector <16 x i8> %4550, <16 x i8> %4553, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4555 = zext <32 x i8> %4554 to <32 x i16>
  %4556 = mul <32 x i16> %4027, %4555
  %4557 = getelementptr inbounds i8, i8* %4539, i64 2
  %4558 = bitcast i8* %4557 to <16 x i8>*
  %4559 = load <16 x i8>, <16 x i8>* %4558, align 2, !tbaa !395
  %4560 = getelementptr inbounds i8, i8* %4539, i64 18
  %4561 = bitcast i8* %4560 to <16 x i8>*
  %4562 = load <16 x i8>, <16 x i8>* %4561, align 2, !tbaa !395
  %4563 = shufflevector <16 x i8> %4559, <16 x i8> %4562, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4564 = zext <32 x i8> %4563 to <32 x i16>
  %4565 = mul <32 x i16> %4031, %4564
  %4566 = shl nsw i64 %4534, 5
  %4567 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4566
  %4568 = bitcast i8* %4567 to <16 x i8>*
  %4569 = load <16 x i8>, <16 x i8>* %4568, align 16, !tbaa !395
  %4570 = getelementptr inbounds i8, i8* %4567, i64 16
  %4571 = bitcast i8* %4570 to <16 x i8>*
  %4572 = load <16 x i8>, <16 x i8>* %4571, align 16, !tbaa !395
  %4573 = shufflevector <16 x i8> %4569, <16 x i8> %4572, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4574 = zext <32 x i8> %4573 to <32 x i16>
  %4575 = mul <32 x i16> %4035, %4574
  %4576 = getelementptr inbounds i8, i8* %4567, i64 1
  %4577 = bitcast i8* %4576 to <16 x i8>*
  %4578 = load <16 x i8>, <16 x i8>* %4577, align 1, !tbaa !395
  %4579 = getelementptr inbounds i8, i8* %4567, i64 17
  %4580 = bitcast i8* %4579 to <16 x i8>*
  %4581 = load <16 x i8>, <16 x i8>* %4580, align 1, !tbaa !395
  %4582 = shufflevector <16 x i8> %4578, <16 x i8> %4581, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4583 = zext <32 x i8> %4582 to <32 x i16>
  %4584 = mul <32 x i16> %4039, %4583
  %4585 = getelementptr inbounds i8, i8* %4567, i64 2
  %4586 = bitcast i8* %4585 to <16 x i8>*
  %4587 = load <16 x i8>, <16 x i8>* %4586, align 2, !tbaa !395
  %4588 = getelementptr inbounds i8, i8* %4567, i64 18
  %4589 = bitcast i8* %4588 to <16 x i8>*
  %4590 = load <16 x i8>, <16 x i8>* %4589, align 2, !tbaa !395
  %4591 = shufflevector <16 x i8> %4587, <16 x i8> %4590, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4592 = zext <32 x i8> %4591 to <32 x i16>
  %4593 = mul <32 x i16> %4043, %4592
  %4594 = shl nsw i64 %4536, 5
  %4595 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4594
  %4596 = bitcast i8* %4595 to <16 x i8>*
  %4597 = load <16 x i8>, <16 x i8>* %4596, align 16, !tbaa !395
  %4598 = getelementptr inbounds i8, i8* %4595, i64 16
  %4599 = bitcast i8* %4598 to <16 x i8>*
  %4600 = load <16 x i8>, <16 x i8>* %4599, align 16, !tbaa !395
  %4601 = shufflevector <16 x i8> %4597, <16 x i8> %4600, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4602 = zext <32 x i8> %4601 to <32 x i16>
  %4603 = mul <32 x i16> %4047, %4602
  %4604 = getelementptr inbounds i8, i8* %4595, i64 2
  %4605 = bitcast i8* %4604 to <16 x i8>*
  %4606 = load <16 x i8>, <16 x i8>* %4605, align 2, !tbaa !395
  %4607 = getelementptr inbounds i8, i8* %4595, i64 18
  %4608 = bitcast i8* %4607 to <16 x i8>*
  %4609 = load <16 x i8>, <16 x i8>* %4608, align 2, !tbaa !395
  %4610 = shufflevector <16 x i8> %4606, <16 x i8> %4609, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4611 = zext <32 x i8> %4610 to <32 x i16>
  %4612 = mul <32 x i16> %4051, %4611
  %4613 = getelementptr inbounds i8, i8* %4595, i64 1
  %4614 = bitcast i8* %4613 to <16 x i8>*
  %4615 = load <16 x i8>, <16 x i8>* %4614, align 1, !tbaa !395
  %4616 = getelementptr inbounds i8, i8* %4595, i64 17
  %4617 = bitcast i8* %4616 to <16 x i8>*
  %4618 = load <16 x i8>, <16 x i8>* %4617, align 1, !tbaa !395
  %4619 = shufflevector <16 x i8> %4615, <16 x i8> %4618, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4620 = zext <32 x i8> %4619 to <32 x i16>
  %4621 = mul <32 x i16> %4055, %4620
  %4622 = add <32 x i16> %4556, %4548
  %4623 = add <32 x i16> %4622, %4565
  %4624 = add <32 x i16> %4623, %4575
  %4625 = add <32 x i16> %4624, %4584
  %4626 = add <32 x i16> %4625, %4593
  %4627 = add <32 x i16> %4626, %4603
  %4628 = add <32 x i16> %4627, %4612
  %4629 = add <32 x i16> %4628, %4621
  %t409 = ashr <32 x i16> %4629, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %4630 = bitcast <32 x i16> %t409 to <8 x i64>
  %4631 = shufflevector <8 x i64> %4630, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t410 = bitcast <2 x i64> %4631 to <8 x i16>
  %4632 = shufflevector <8 x i64> %4630, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t411 = bitcast <2 x i64> %4632 to <8 x i16>
  %4633 = shufflevector <8 x i64> %4630, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t412 = bitcast <2 x i64> %4633 to <8 x i16>
  %4634 = shufflevector <8 x i64> %4630, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t413 = bitcast <2 x i64> %4634 to <8 x i16>
  %4635 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t410) #11
  %4636 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t411) #11
  %4637 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t412) #11
  %4638 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t413) #11
  %4639 = shufflevector <8 x i8> %4635, <8 x i8> %4636, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4640 = shufflevector <8 x i8> %4637, <8 x i8> %4638, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4641 = shufflevector <16 x i8> %4639, <16 x i8> %4640, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4642 = bitcast <32 x i8> %4641 to <4 x i64>
  %4643 = shufflevector <4 x i64> %4642, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %4644 = shufflevector <4 x i64> %4642, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %4645 = getelementptr inbounds i8, i8* %125, i64 %4535
  %4646 = bitcast i8* %4645 to <2 x i64>*
  store <2 x i64> %4643, <2 x i64>* %4646, align 1, !tbaa !399
  %4647 = getelementptr inbounds i8, i8* %4645, i64 16
  %4648 = bitcast i8* %4647 to <2 x i64>*
  store <2 x i64> %4644, <2 x i64>* %4648, align 1, !tbaa !399
  %4649 = or i64 %4534, 1
  %4650 = add nsw i64 %4649, %221
  %4651 = add nsw i64 %4649, %222
  %4652 = shl nsw i64 %4651, 5
  %4653 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4652
  %4654 = getelementptr inbounds i8, i8* %4653, i64 1
  %4655 = bitcast i8* %4654 to <16 x i8>*
  %4656 = load <16 x i8>, <16 x i8>* %4655, align 1, !tbaa !395
  %4657 = getelementptr inbounds i8, i8* %4653, i64 17
  %4658 = bitcast i8* %4657 to <16 x i8>*
  %4659 = load <16 x i8>, <16 x i8>* %4658, align 1, !tbaa !395
  %4660 = shufflevector <16 x i8> %4656, <16 x i8> %4659, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4661 = zext <32 x i8> %4660 to <32 x i16>
  %4662 = mul <32 x i16> %4023, %4661
  %4663 = bitcast i8* %4653 to <16 x i8>*
  %4664 = load <16 x i8>, <16 x i8>* %4663, align 16, !tbaa !395
  %4665 = getelementptr inbounds i8, i8* %4653, i64 16
  %4666 = bitcast i8* %4665 to <16 x i8>*
  %4667 = load <16 x i8>, <16 x i8>* %4666, align 16, !tbaa !395
  %4668 = shufflevector <16 x i8> %4664, <16 x i8> %4667, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4669 = zext <32 x i8> %4668 to <32 x i16>
  %4670 = mul <32 x i16> %4027, %4669
  %4671 = getelementptr inbounds i8, i8* %4653, i64 2
  %4672 = bitcast i8* %4671 to <16 x i8>*
  %4673 = load <16 x i8>, <16 x i8>* %4672, align 2, !tbaa !395
  %4674 = getelementptr inbounds i8, i8* %4653, i64 18
  %4675 = bitcast i8* %4674 to <16 x i8>*
  %4676 = load <16 x i8>, <16 x i8>* %4675, align 2, !tbaa !395
  %4677 = shufflevector <16 x i8> %4673, <16 x i8> %4676, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4678 = zext <32 x i8> %4677 to <32 x i16>
  %4679 = mul <32 x i16> %4031, %4678
  %4680 = shl nsw i64 %4649, 5
  %4681 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4680
  %4682 = bitcast i8* %4681 to <16 x i8>*
  %4683 = load <16 x i8>, <16 x i8>* %4682, align 16, !tbaa !395
  %4684 = getelementptr inbounds i8, i8* %4681, i64 16
  %4685 = bitcast i8* %4684 to <16 x i8>*
  %4686 = load <16 x i8>, <16 x i8>* %4685, align 16, !tbaa !395
  %4687 = shufflevector <16 x i8> %4683, <16 x i8> %4686, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4688 = zext <32 x i8> %4687 to <32 x i16>
  %4689 = mul <32 x i16> %4035, %4688
  %4690 = getelementptr inbounds i8, i8* %4681, i64 1
  %4691 = bitcast i8* %4690 to <16 x i8>*
  %4692 = load <16 x i8>, <16 x i8>* %4691, align 1, !tbaa !395
  %4693 = getelementptr inbounds i8, i8* %4681, i64 17
  %4694 = bitcast i8* %4693 to <16 x i8>*
  %4695 = load <16 x i8>, <16 x i8>* %4694, align 1, !tbaa !395
  %4696 = shufflevector <16 x i8> %4692, <16 x i8> %4695, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4697 = zext <32 x i8> %4696 to <32 x i16>
  %4698 = mul <32 x i16> %4039, %4697
  %4699 = getelementptr inbounds i8, i8* %4681, i64 2
  %4700 = bitcast i8* %4699 to <16 x i8>*
  %4701 = load <16 x i8>, <16 x i8>* %4700, align 2, !tbaa !395
  %4702 = getelementptr inbounds i8, i8* %4681, i64 18
  %4703 = bitcast i8* %4702 to <16 x i8>*
  %4704 = load <16 x i8>, <16 x i8>* %4703, align 2, !tbaa !395
  %4705 = shufflevector <16 x i8> %4701, <16 x i8> %4704, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4706 = zext <32 x i8> %4705 to <32 x i16>
  %4707 = mul <32 x i16> %4043, %4706
  %4708 = shl nsw i64 %4650, 5
  %4709 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4708
  %4710 = bitcast i8* %4709 to <16 x i8>*
  %4711 = load <16 x i8>, <16 x i8>* %4710, align 16, !tbaa !395
  %4712 = getelementptr inbounds i8, i8* %4709, i64 16
  %4713 = bitcast i8* %4712 to <16 x i8>*
  %4714 = load <16 x i8>, <16 x i8>* %4713, align 16, !tbaa !395
  %4715 = shufflevector <16 x i8> %4711, <16 x i8> %4714, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4716 = zext <32 x i8> %4715 to <32 x i16>
  %4717 = mul <32 x i16> %4047, %4716
  %4718 = getelementptr inbounds i8, i8* %4709, i64 2
  %4719 = bitcast i8* %4718 to <16 x i8>*
  %4720 = load <16 x i8>, <16 x i8>* %4719, align 2, !tbaa !395
  %4721 = getelementptr inbounds i8, i8* %4709, i64 18
  %4722 = bitcast i8* %4721 to <16 x i8>*
  %4723 = load <16 x i8>, <16 x i8>* %4722, align 2, !tbaa !395
  %4724 = shufflevector <16 x i8> %4720, <16 x i8> %4723, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4725 = zext <32 x i8> %4724 to <32 x i16>
  %4726 = mul <32 x i16> %4051, %4725
  %4727 = getelementptr inbounds i8, i8* %4709, i64 1
  %4728 = bitcast i8* %4727 to <16 x i8>*
  %4729 = load <16 x i8>, <16 x i8>* %4728, align 1, !tbaa !395
  %4730 = getelementptr inbounds i8, i8* %4709, i64 17
  %4731 = bitcast i8* %4730 to <16 x i8>*
  %4732 = load <16 x i8>, <16 x i8>* %4731, align 1, !tbaa !395
  %4733 = shufflevector <16 x i8> %4729, <16 x i8> %4732, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4734 = zext <32 x i8> %4733 to <32 x i16>
  %4735 = mul <32 x i16> %4055, %4734
  %4736 = add <32 x i16> %4670, %4662
  %4737 = add <32 x i16> %4736, %4679
  %4738 = add <32 x i16> %4737, %4689
  %4739 = add <32 x i16> %4738, %4698
  %4740 = add <32 x i16> %4739, %4707
  %4741 = add <32 x i16> %4740, %4717
  %4742 = add <32 x i16> %4741, %4726
  %4743 = add <32 x i16> %4742, %4735
  %t409.1 = ashr <32 x i16> %4743, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %4744 = bitcast <32 x i16> %t409.1 to <8 x i64>
  %4745 = shufflevector <8 x i64> %4744, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t410.1 = bitcast <2 x i64> %4745 to <8 x i16>
  %4746 = shufflevector <8 x i64> %4744, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t411.1 = bitcast <2 x i64> %4746 to <8 x i16>
  %4747 = shufflevector <8 x i64> %4744, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t412.1 = bitcast <2 x i64> %4747 to <8 x i16>
  %4748 = shufflevector <8 x i64> %4744, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t413.1 = bitcast <2 x i64> %4748 to <8 x i16>
  %4749 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t410.1) #11
  %4750 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t411.1) #11
  %4751 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t412.1) #11
  %4752 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t413.1) #11
  %4753 = shufflevector <8 x i8> %4749, <8 x i8> %4750, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4754 = shufflevector <8 x i8> %4751, <8 x i8> %4752, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4755 = shufflevector <16 x i8> %4753, <16 x i8> %4754, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4756 = bitcast <32 x i8> %4755 to <4 x i64>
  %4757 = shufflevector <4 x i64> %4756, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %4758 = shufflevector <4 x i64> %4756, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %4759 = add nsw i64 %4535, 32
  %4760 = getelementptr inbounds i8, i8* %125, i64 %4759
  %4761 = bitcast i8* %4760 to <2 x i64>*
  store <2 x i64> %4757, <2 x i64>* %4761, align 1, !tbaa !399
  %4762 = getelementptr inbounds i8, i8* %4760, i64 16
  %4763 = bitcast i8* %4762 to <2 x i64>*
  store <2 x i64> %4758, <2 x i64>* %4763, align 1, !tbaa !399
  %t353212 = add nsw i32 %4058, %4072
  %4764 = add nsw i64 %4073, %236
  %4765 = sext i32 %t353212 to i64
  %4766 = add nsw i64 %4764, %221
  %4767 = add nsw i64 %4764, %222
  %4768 = shl nsw i64 %4767, 5
  %4769 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4768
  %4770 = getelementptr inbounds i8, i8* %4769, i64 1
  %4771 = bitcast i8* %4770 to <16 x i8>*
  %4772 = load <16 x i8>, <16 x i8>* %4771, align 1, !tbaa !395
  %4773 = getelementptr inbounds i8, i8* %4769, i64 17
  %4774 = bitcast i8* %4773 to <16 x i8>*
  %4775 = load <16 x i8>, <16 x i8>* %4774, align 1, !tbaa !395
  %4776 = shufflevector <16 x i8> %4772, <16 x i8> %4775, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4777 = zext <32 x i8> %4776 to <32 x i16>
  %4778 = mul <32 x i16> %4023, %4777
  %4779 = bitcast i8* %4769 to <16 x i8>*
  %4780 = load <16 x i8>, <16 x i8>* %4779, align 16, !tbaa !395
  %4781 = getelementptr inbounds i8, i8* %4769, i64 16
  %4782 = bitcast i8* %4781 to <16 x i8>*
  %4783 = load <16 x i8>, <16 x i8>* %4782, align 16, !tbaa !395
  %4784 = shufflevector <16 x i8> %4780, <16 x i8> %4783, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4785 = zext <32 x i8> %4784 to <32 x i16>
  %4786 = mul <32 x i16> %4027, %4785
  %4787 = getelementptr inbounds i8, i8* %4769, i64 2
  %4788 = bitcast i8* %4787 to <16 x i8>*
  %4789 = load <16 x i8>, <16 x i8>* %4788, align 2, !tbaa !395
  %4790 = getelementptr inbounds i8, i8* %4769, i64 18
  %4791 = bitcast i8* %4790 to <16 x i8>*
  %4792 = load <16 x i8>, <16 x i8>* %4791, align 2, !tbaa !395
  %4793 = shufflevector <16 x i8> %4789, <16 x i8> %4792, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4794 = zext <32 x i8> %4793 to <32 x i16>
  %4795 = mul <32 x i16> %4031, %4794
  %4796 = shl nsw i64 %4764, 5
  %4797 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4796
  %4798 = bitcast i8* %4797 to <16 x i8>*
  %4799 = load <16 x i8>, <16 x i8>* %4798, align 16, !tbaa !395
  %4800 = getelementptr inbounds i8, i8* %4797, i64 16
  %4801 = bitcast i8* %4800 to <16 x i8>*
  %4802 = load <16 x i8>, <16 x i8>* %4801, align 16, !tbaa !395
  %4803 = shufflevector <16 x i8> %4799, <16 x i8> %4802, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4804 = zext <32 x i8> %4803 to <32 x i16>
  %4805 = mul <32 x i16> %4035, %4804
  %4806 = getelementptr inbounds i8, i8* %4797, i64 1
  %4807 = bitcast i8* %4806 to <16 x i8>*
  %4808 = load <16 x i8>, <16 x i8>* %4807, align 1, !tbaa !395
  %4809 = getelementptr inbounds i8, i8* %4797, i64 17
  %4810 = bitcast i8* %4809 to <16 x i8>*
  %4811 = load <16 x i8>, <16 x i8>* %4810, align 1, !tbaa !395
  %4812 = shufflevector <16 x i8> %4808, <16 x i8> %4811, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4813 = zext <32 x i8> %4812 to <32 x i16>
  %4814 = mul <32 x i16> %4039, %4813
  %4815 = getelementptr inbounds i8, i8* %4797, i64 2
  %4816 = bitcast i8* %4815 to <16 x i8>*
  %4817 = load <16 x i8>, <16 x i8>* %4816, align 2, !tbaa !395
  %4818 = getelementptr inbounds i8, i8* %4797, i64 18
  %4819 = bitcast i8* %4818 to <16 x i8>*
  %4820 = load <16 x i8>, <16 x i8>* %4819, align 2, !tbaa !395
  %4821 = shufflevector <16 x i8> %4817, <16 x i8> %4820, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4822 = zext <32 x i8> %4821 to <32 x i16>
  %4823 = mul <32 x i16> %4043, %4822
  %4824 = shl nsw i64 %4766, 5
  %4825 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4824
  %4826 = bitcast i8* %4825 to <16 x i8>*
  %4827 = load <16 x i8>, <16 x i8>* %4826, align 16, !tbaa !395
  %4828 = getelementptr inbounds i8, i8* %4825, i64 16
  %4829 = bitcast i8* %4828 to <16 x i8>*
  %4830 = load <16 x i8>, <16 x i8>* %4829, align 16, !tbaa !395
  %4831 = shufflevector <16 x i8> %4827, <16 x i8> %4830, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4832 = zext <32 x i8> %4831 to <32 x i16>
  %4833 = mul <32 x i16> %4047, %4832
  %4834 = getelementptr inbounds i8, i8* %4825, i64 2
  %4835 = bitcast i8* %4834 to <16 x i8>*
  %4836 = load <16 x i8>, <16 x i8>* %4835, align 2, !tbaa !395
  %4837 = getelementptr inbounds i8, i8* %4825, i64 18
  %4838 = bitcast i8* %4837 to <16 x i8>*
  %4839 = load <16 x i8>, <16 x i8>* %4838, align 2, !tbaa !395
  %4840 = shufflevector <16 x i8> %4836, <16 x i8> %4839, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4841 = zext <32 x i8> %4840 to <32 x i16>
  %4842 = mul <32 x i16> %4051, %4841
  %4843 = getelementptr inbounds i8, i8* %4825, i64 1
  %4844 = bitcast i8* %4843 to <16 x i8>*
  %4845 = load <16 x i8>, <16 x i8>* %4844, align 1, !tbaa !395
  %4846 = getelementptr inbounds i8, i8* %4825, i64 17
  %4847 = bitcast i8* %4846 to <16 x i8>*
  %4848 = load <16 x i8>, <16 x i8>* %4847, align 1, !tbaa !395
  %4849 = shufflevector <16 x i8> %4845, <16 x i8> %4848, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4850 = zext <32 x i8> %4849 to <32 x i16>
  %4851 = mul <32 x i16> %4055, %4850
  %4852 = add <32 x i16> %4786, %4778
  %4853 = add <32 x i16> %4852, %4795
  %4854 = add <32 x i16> %4853, %4805
  %4855 = add <32 x i16> %4854, %4814
  %4856 = add <32 x i16> %4855, %4823
  %4857 = add <32 x i16> %4856, %4833
  %4858 = add <32 x i16> %4857, %4842
  %4859 = add <32 x i16> %4858, %4851
  %t416 = ashr <32 x i16> %4859, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %4860 = bitcast <32 x i16> %t416 to <8 x i64>
  %4861 = shufflevector <8 x i64> %4860, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t417 = bitcast <2 x i64> %4861 to <8 x i16>
  %4862 = shufflevector <8 x i64> %4860, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t418 = bitcast <2 x i64> %4862 to <8 x i16>
  %4863 = shufflevector <8 x i64> %4860, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t419 = bitcast <2 x i64> %4863 to <8 x i16>
  %4864 = shufflevector <8 x i64> %4860, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t420 = bitcast <2 x i64> %4864 to <8 x i16>
  %4865 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t417) #11
  %4866 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t418) #11
  %4867 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t419) #11
  %4868 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t420) #11
  %4869 = shufflevector <8 x i8> %4865, <8 x i8> %4866, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4870 = shufflevector <8 x i8> %4867, <8 x i8> %4868, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4871 = shufflevector <16 x i8> %4869, <16 x i8> %4870, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4872 = bitcast <32 x i8> %4871 to <4 x i64>
  %4873 = shufflevector <4 x i64> %4872, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %4874 = shufflevector <4 x i64> %4872, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %4875 = getelementptr inbounds i8, i8* %125, i64 %4765
  %4876 = bitcast i8* %4875 to <2 x i64>*
  store <2 x i64> %4873, <2 x i64>* %4876, align 1, !tbaa !399
  %4877 = getelementptr inbounds i8, i8* %4875, i64 16
  %4878 = bitcast i8* %4877 to <2 x i64>*
  store <2 x i64> %4874, <2 x i64>* %4878, align 1, !tbaa !399
  %4879 = or i64 %4764, 1
  %4880 = add nsw i64 %4879, %221
  %4881 = add nsw i64 %4879, %222
  %4882 = shl nsw i64 %4881, 5
  %4883 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4882
  %4884 = getelementptr inbounds i8, i8* %4883, i64 1
  %4885 = bitcast i8* %4884 to <16 x i8>*
  %4886 = load <16 x i8>, <16 x i8>* %4885, align 1, !tbaa !395
  %4887 = getelementptr inbounds i8, i8* %4883, i64 17
  %4888 = bitcast i8* %4887 to <16 x i8>*
  %4889 = load <16 x i8>, <16 x i8>* %4888, align 1, !tbaa !395
  %4890 = shufflevector <16 x i8> %4886, <16 x i8> %4889, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4891 = zext <32 x i8> %4890 to <32 x i16>
  %4892 = mul <32 x i16> %4023, %4891
  %4893 = bitcast i8* %4883 to <16 x i8>*
  %4894 = load <16 x i8>, <16 x i8>* %4893, align 16, !tbaa !395
  %4895 = getelementptr inbounds i8, i8* %4883, i64 16
  %4896 = bitcast i8* %4895 to <16 x i8>*
  %4897 = load <16 x i8>, <16 x i8>* %4896, align 16, !tbaa !395
  %4898 = shufflevector <16 x i8> %4894, <16 x i8> %4897, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4899 = zext <32 x i8> %4898 to <32 x i16>
  %4900 = mul <32 x i16> %4027, %4899
  %4901 = getelementptr inbounds i8, i8* %4883, i64 2
  %4902 = bitcast i8* %4901 to <16 x i8>*
  %4903 = load <16 x i8>, <16 x i8>* %4902, align 2, !tbaa !395
  %4904 = getelementptr inbounds i8, i8* %4883, i64 18
  %4905 = bitcast i8* %4904 to <16 x i8>*
  %4906 = load <16 x i8>, <16 x i8>* %4905, align 2, !tbaa !395
  %4907 = shufflevector <16 x i8> %4903, <16 x i8> %4906, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4908 = zext <32 x i8> %4907 to <32 x i16>
  %4909 = mul <32 x i16> %4031, %4908
  %4910 = shl nsw i64 %4879, 5
  %4911 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4910
  %4912 = bitcast i8* %4911 to <16 x i8>*
  %4913 = load <16 x i8>, <16 x i8>* %4912, align 16, !tbaa !395
  %4914 = getelementptr inbounds i8, i8* %4911, i64 16
  %4915 = bitcast i8* %4914 to <16 x i8>*
  %4916 = load <16 x i8>, <16 x i8>* %4915, align 16, !tbaa !395
  %4917 = shufflevector <16 x i8> %4913, <16 x i8> %4916, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4918 = zext <32 x i8> %4917 to <32 x i16>
  %4919 = mul <32 x i16> %4035, %4918
  %4920 = getelementptr inbounds i8, i8* %4911, i64 1
  %4921 = bitcast i8* %4920 to <16 x i8>*
  %4922 = load <16 x i8>, <16 x i8>* %4921, align 1, !tbaa !395
  %4923 = getelementptr inbounds i8, i8* %4911, i64 17
  %4924 = bitcast i8* %4923 to <16 x i8>*
  %4925 = load <16 x i8>, <16 x i8>* %4924, align 1, !tbaa !395
  %4926 = shufflevector <16 x i8> %4922, <16 x i8> %4925, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4927 = zext <32 x i8> %4926 to <32 x i16>
  %4928 = mul <32 x i16> %4039, %4927
  %4929 = getelementptr inbounds i8, i8* %4911, i64 2
  %4930 = bitcast i8* %4929 to <16 x i8>*
  %4931 = load <16 x i8>, <16 x i8>* %4930, align 2, !tbaa !395
  %4932 = getelementptr inbounds i8, i8* %4911, i64 18
  %4933 = bitcast i8* %4932 to <16 x i8>*
  %4934 = load <16 x i8>, <16 x i8>* %4933, align 2, !tbaa !395
  %4935 = shufflevector <16 x i8> %4931, <16 x i8> %4934, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4936 = zext <32 x i8> %4935 to <32 x i16>
  %4937 = mul <32 x i16> %4043, %4936
  %4938 = shl nsw i64 %4880, 5
  %4939 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4938
  %4940 = bitcast i8* %4939 to <16 x i8>*
  %4941 = load <16 x i8>, <16 x i8>* %4940, align 16, !tbaa !395
  %4942 = getelementptr inbounds i8, i8* %4939, i64 16
  %4943 = bitcast i8* %4942 to <16 x i8>*
  %4944 = load <16 x i8>, <16 x i8>* %4943, align 16, !tbaa !395
  %4945 = shufflevector <16 x i8> %4941, <16 x i8> %4944, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4946 = zext <32 x i8> %4945 to <32 x i16>
  %4947 = mul <32 x i16> %4047, %4946
  %4948 = getelementptr inbounds i8, i8* %4939, i64 2
  %4949 = bitcast i8* %4948 to <16 x i8>*
  %4950 = load <16 x i8>, <16 x i8>* %4949, align 2, !tbaa !395
  %4951 = getelementptr inbounds i8, i8* %4939, i64 18
  %4952 = bitcast i8* %4951 to <16 x i8>*
  %4953 = load <16 x i8>, <16 x i8>* %4952, align 2, !tbaa !395
  %4954 = shufflevector <16 x i8> %4950, <16 x i8> %4953, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4955 = zext <32 x i8> %4954 to <32 x i16>
  %4956 = mul <32 x i16> %4051, %4955
  %4957 = getelementptr inbounds i8, i8* %4939, i64 1
  %4958 = bitcast i8* %4957 to <16 x i8>*
  %4959 = load <16 x i8>, <16 x i8>* %4958, align 1, !tbaa !395
  %4960 = getelementptr inbounds i8, i8* %4939, i64 17
  %4961 = bitcast i8* %4960 to <16 x i8>*
  %4962 = load <16 x i8>, <16 x i8>* %4961, align 1, !tbaa !395
  %4963 = shufflevector <16 x i8> %4959, <16 x i8> %4962, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4964 = zext <32 x i8> %4963 to <32 x i16>
  %4965 = mul <32 x i16> %4055, %4964
  %4966 = add <32 x i16> %4900, %4892
  %4967 = add <32 x i16> %4966, %4909
  %4968 = add <32 x i16> %4967, %4919
  %4969 = add <32 x i16> %4968, %4928
  %4970 = add <32 x i16> %4969, %4937
  %4971 = add <32 x i16> %4970, %4947
  %4972 = add <32 x i16> %4971, %4956
  %4973 = add <32 x i16> %4972, %4965
  %t416.1 = ashr <32 x i16> %4973, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %4974 = bitcast <32 x i16> %t416.1 to <8 x i64>
  %4975 = shufflevector <8 x i64> %4974, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t417.1 = bitcast <2 x i64> %4975 to <8 x i16>
  %4976 = shufflevector <8 x i64> %4974, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t418.1 = bitcast <2 x i64> %4976 to <8 x i16>
  %4977 = shufflevector <8 x i64> %4974, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t419.1 = bitcast <2 x i64> %4977 to <8 x i16>
  %4978 = shufflevector <8 x i64> %4974, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t420.1 = bitcast <2 x i64> %4978 to <8 x i16>
  %4979 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t417.1) #11
  %4980 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t418.1) #11
  %4981 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t419.1) #11
  %4982 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t420.1) #11
  %4983 = shufflevector <8 x i8> %4979, <8 x i8> %4980, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4984 = shufflevector <8 x i8> %4981, <8 x i8> %4982, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %4985 = shufflevector <16 x i8> %4983, <16 x i8> %4984, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %4986 = bitcast <32 x i8> %4985 to <4 x i64>
  %4987 = shufflevector <4 x i64> %4986, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %4988 = shufflevector <4 x i64> %4986, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %4989 = add nsw i64 %4765, 32
  %4990 = getelementptr inbounds i8, i8* %125, i64 %4989
  %4991 = bitcast i8* %4990 to <2 x i64>*
  store <2 x i64> %4987, <2 x i64>* %4991, align 1, !tbaa !399
  %4992 = getelementptr inbounds i8, i8* %4990, i64 16
  %4993 = bitcast i8* %4992 to <2 x i64>*
  store <2 x i64> %4988, <2 x i64>* %4993, align 1, !tbaa !399
  %t355220 = add nsw i32 %4059, %4072
  %4994 = add nsw i64 %4073, %235
  %4995 = sext i32 %t355220 to i64
  %4996 = add nsw i64 %4994, %221
  %4997 = add nsw i64 %4994, %222
  %4998 = shl nsw i64 %4997, 5
  %4999 = getelementptr inbounds i8, i8* %input_bounded93, i64 %4998
  %5000 = getelementptr inbounds i8, i8* %4999, i64 1
  %5001 = bitcast i8* %5000 to <16 x i8>*
  %5002 = load <16 x i8>, <16 x i8>* %5001, align 1, !tbaa !395
  %5003 = getelementptr inbounds i8, i8* %4999, i64 17
  %5004 = bitcast i8* %5003 to <16 x i8>*
  %5005 = load <16 x i8>, <16 x i8>* %5004, align 1, !tbaa !395
  %5006 = shufflevector <16 x i8> %5002, <16 x i8> %5005, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5007 = zext <32 x i8> %5006 to <32 x i16>
  %5008 = mul <32 x i16> %4023, %5007
  %5009 = bitcast i8* %4999 to <16 x i8>*
  %5010 = load <16 x i8>, <16 x i8>* %5009, align 16, !tbaa !395
  %5011 = getelementptr inbounds i8, i8* %4999, i64 16
  %5012 = bitcast i8* %5011 to <16 x i8>*
  %5013 = load <16 x i8>, <16 x i8>* %5012, align 16, !tbaa !395
  %5014 = shufflevector <16 x i8> %5010, <16 x i8> %5013, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5015 = zext <32 x i8> %5014 to <32 x i16>
  %5016 = mul <32 x i16> %4027, %5015
  %5017 = getelementptr inbounds i8, i8* %4999, i64 2
  %5018 = bitcast i8* %5017 to <16 x i8>*
  %5019 = load <16 x i8>, <16 x i8>* %5018, align 2, !tbaa !395
  %5020 = getelementptr inbounds i8, i8* %4999, i64 18
  %5021 = bitcast i8* %5020 to <16 x i8>*
  %5022 = load <16 x i8>, <16 x i8>* %5021, align 2, !tbaa !395
  %5023 = shufflevector <16 x i8> %5019, <16 x i8> %5022, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5024 = zext <32 x i8> %5023 to <32 x i16>
  %5025 = mul <32 x i16> %4031, %5024
  %5026 = shl nsw i64 %4994, 5
  %5027 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5026
  %5028 = bitcast i8* %5027 to <16 x i8>*
  %5029 = load <16 x i8>, <16 x i8>* %5028, align 16, !tbaa !395
  %5030 = getelementptr inbounds i8, i8* %5027, i64 16
  %5031 = bitcast i8* %5030 to <16 x i8>*
  %5032 = load <16 x i8>, <16 x i8>* %5031, align 16, !tbaa !395
  %5033 = shufflevector <16 x i8> %5029, <16 x i8> %5032, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5034 = zext <32 x i8> %5033 to <32 x i16>
  %5035 = mul <32 x i16> %4035, %5034
  %5036 = getelementptr inbounds i8, i8* %5027, i64 1
  %5037 = bitcast i8* %5036 to <16 x i8>*
  %5038 = load <16 x i8>, <16 x i8>* %5037, align 1, !tbaa !395
  %5039 = getelementptr inbounds i8, i8* %5027, i64 17
  %5040 = bitcast i8* %5039 to <16 x i8>*
  %5041 = load <16 x i8>, <16 x i8>* %5040, align 1, !tbaa !395
  %5042 = shufflevector <16 x i8> %5038, <16 x i8> %5041, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5043 = zext <32 x i8> %5042 to <32 x i16>
  %5044 = mul <32 x i16> %4039, %5043
  %5045 = getelementptr inbounds i8, i8* %5027, i64 2
  %5046 = bitcast i8* %5045 to <16 x i8>*
  %5047 = load <16 x i8>, <16 x i8>* %5046, align 2, !tbaa !395
  %5048 = getelementptr inbounds i8, i8* %5027, i64 18
  %5049 = bitcast i8* %5048 to <16 x i8>*
  %5050 = load <16 x i8>, <16 x i8>* %5049, align 2, !tbaa !395
  %5051 = shufflevector <16 x i8> %5047, <16 x i8> %5050, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5052 = zext <32 x i8> %5051 to <32 x i16>
  %5053 = mul <32 x i16> %4043, %5052
  %5054 = shl nsw i64 %4996, 5
  %5055 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5054
  %5056 = bitcast i8* %5055 to <16 x i8>*
  %5057 = load <16 x i8>, <16 x i8>* %5056, align 16, !tbaa !395
  %5058 = getelementptr inbounds i8, i8* %5055, i64 16
  %5059 = bitcast i8* %5058 to <16 x i8>*
  %5060 = load <16 x i8>, <16 x i8>* %5059, align 16, !tbaa !395
  %5061 = shufflevector <16 x i8> %5057, <16 x i8> %5060, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5062 = zext <32 x i8> %5061 to <32 x i16>
  %5063 = mul <32 x i16> %4047, %5062
  %5064 = getelementptr inbounds i8, i8* %5055, i64 2
  %5065 = bitcast i8* %5064 to <16 x i8>*
  %5066 = load <16 x i8>, <16 x i8>* %5065, align 2, !tbaa !395
  %5067 = getelementptr inbounds i8, i8* %5055, i64 18
  %5068 = bitcast i8* %5067 to <16 x i8>*
  %5069 = load <16 x i8>, <16 x i8>* %5068, align 2, !tbaa !395
  %5070 = shufflevector <16 x i8> %5066, <16 x i8> %5069, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5071 = zext <32 x i8> %5070 to <32 x i16>
  %5072 = mul <32 x i16> %4051, %5071
  %5073 = getelementptr inbounds i8, i8* %5055, i64 1
  %5074 = bitcast i8* %5073 to <16 x i8>*
  %5075 = load <16 x i8>, <16 x i8>* %5074, align 1, !tbaa !395
  %5076 = getelementptr inbounds i8, i8* %5055, i64 17
  %5077 = bitcast i8* %5076 to <16 x i8>*
  %5078 = load <16 x i8>, <16 x i8>* %5077, align 1, !tbaa !395
  %5079 = shufflevector <16 x i8> %5075, <16 x i8> %5078, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5080 = zext <32 x i8> %5079 to <32 x i16>
  %5081 = mul <32 x i16> %4055, %5080
  %5082 = add <32 x i16> %5016, %5008
  %5083 = add <32 x i16> %5082, %5025
  %5084 = add <32 x i16> %5083, %5035
  %5085 = add <32 x i16> %5084, %5044
  %5086 = add <32 x i16> %5085, %5053
  %5087 = add <32 x i16> %5086, %5063
  %5088 = add <32 x i16> %5087, %5072
  %5089 = add <32 x i16> %5088, %5081
  %t423 = ashr <32 x i16> %5089, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %5090 = bitcast <32 x i16> %t423 to <8 x i64>
  %5091 = shufflevector <8 x i64> %5090, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t424 = bitcast <2 x i64> %5091 to <8 x i16>
  %5092 = shufflevector <8 x i64> %5090, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t425 = bitcast <2 x i64> %5092 to <8 x i16>
  %5093 = shufflevector <8 x i64> %5090, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t426 = bitcast <2 x i64> %5093 to <8 x i16>
  %5094 = shufflevector <8 x i64> %5090, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t427 = bitcast <2 x i64> %5094 to <8 x i16>
  %5095 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t424) #11
  %5096 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t425) #11
  %5097 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t426) #11
  %5098 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t427) #11
  %5099 = shufflevector <8 x i8> %5095, <8 x i8> %5096, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5100 = shufflevector <8 x i8> %5097, <8 x i8> %5098, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5101 = shufflevector <16 x i8> %5099, <16 x i8> %5100, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5102 = bitcast <32 x i8> %5101 to <4 x i64>
  %5103 = shufflevector <4 x i64> %5102, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %5104 = shufflevector <4 x i64> %5102, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %5105 = getelementptr inbounds i8, i8* %125, i64 %4995
  %5106 = bitcast i8* %5105 to <2 x i64>*
  store <2 x i64> %5103, <2 x i64>* %5106, align 1, !tbaa !399
  %5107 = getelementptr inbounds i8, i8* %5105, i64 16
  %5108 = bitcast i8* %5107 to <2 x i64>*
  store <2 x i64> %5104, <2 x i64>* %5108, align 1, !tbaa !399
  %5109 = or i64 %4994, 1
  %5110 = add nsw i64 %5109, %221
  %5111 = add nsw i64 %5109, %222
  %5112 = shl nsw i64 %5111, 5
  %5113 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5112
  %5114 = getelementptr inbounds i8, i8* %5113, i64 1
  %5115 = bitcast i8* %5114 to <16 x i8>*
  %5116 = load <16 x i8>, <16 x i8>* %5115, align 1, !tbaa !395
  %5117 = getelementptr inbounds i8, i8* %5113, i64 17
  %5118 = bitcast i8* %5117 to <16 x i8>*
  %5119 = load <16 x i8>, <16 x i8>* %5118, align 1, !tbaa !395
  %5120 = shufflevector <16 x i8> %5116, <16 x i8> %5119, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5121 = zext <32 x i8> %5120 to <32 x i16>
  %5122 = mul <32 x i16> %4023, %5121
  %5123 = bitcast i8* %5113 to <16 x i8>*
  %5124 = load <16 x i8>, <16 x i8>* %5123, align 16, !tbaa !395
  %5125 = getelementptr inbounds i8, i8* %5113, i64 16
  %5126 = bitcast i8* %5125 to <16 x i8>*
  %5127 = load <16 x i8>, <16 x i8>* %5126, align 16, !tbaa !395
  %5128 = shufflevector <16 x i8> %5124, <16 x i8> %5127, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5129 = zext <32 x i8> %5128 to <32 x i16>
  %5130 = mul <32 x i16> %4027, %5129
  %5131 = getelementptr inbounds i8, i8* %5113, i64 2
  %5132 = bitcast i8* %5131 to <16 x i8>*
  %5133 = load <16 x i8>, <16 x i8>* %5132, align 2, !tbaa !395
  %5134 = getelementptr inbounds i8, i8* %5113, i64 18
  %5135 = bitcast i8* %5134 to <16 x i8>*
  %5136 = load <16 x i8>, <16 x i8>* %5135, align 2, !tbaa !395
  %5137 = shufflevector <16 x i8> %5133, <16 x i8> %5136, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5138 = zext <32 x i8> %5137 to <32 x i16>
  %5139 = mul <32 x i16> %4031, %5138
  %5140 = shl nsw i64 %5109, 5
  %5141 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5140
  %5142 = bitcast i8* %5141 to <16 x i8>*
  %5143 = load <16 x i8>, <16 x i8>* %5142, align 16, !tbaa !395
  %5144 = getelementptr inbounds i8, i8* %5141, i64 16
  %5145 = bitcast i8* %5144 to <16 x i8>*
  %5146 = load <16 x i8>, <16 x i8>* %5145, align 16, !tbaa !395
  %5147 = shufflevector <16 x i8> %5143, <16 x i8> %5146, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5148 = zext <32 x i8> %5147 to <32 x i16>
  %5149 = mul <32 x i16> %4035, %5148
  %5150 = getelementptr inbounds i8, i8* %5141, i64 1
  %5151 = bitcast i8* %5150 to <16 x i8>*
  %5152 = load <16 x i8>, <16 x i8>* %5151, align 1, !tbaa !395
  %5153 = getelementptr inbounds i8, i8* %5141, i64 17
  %5154 = bitcast i8* %5153 to <16 x i8>*
  %5155 = load <16 x i8>, <16 x i8>* %5154, align 1, !tbaa !395
  %5156 = shufflevector <16 x i8> %5152, <16 x i8> %5155, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5157 = zext <32 x i8> %5156 to <32 x i16>
  %5158 = mul <32 x i16> %4039, %5157
  %5159 = getelementptr inbounds i8, i8* %5141, i64 2
  %5160 = bitcast i8* %5159 to <16 x i8>*
  %5161 = load <16 x i8>, <16 x i8>* %5160, align 2, !tbaa !395
  %5162 = getelementptr inbounds i8, i8* %5141, i64 18
  %5163 = bitcast i8* %5162 to <16 x i8>*
  %5164 = load <16 x i8>, <16 x i8>* %5163, align 2, !tbaa !395
  %5165 = shufflevector <16 x i8> %5161, <16 x i8> %5164, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5166 = zext <32 x i8> %5165 to <32 x i16>
  %5167 = mul <32 x i16> %4043, %5166
  %5168 = shl nsw i64 %5110, 5
  %5169 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5168
  %5170 = bitcast i8* %5169 to <16 x i8>*
  %5171 = load <16 x i8>, <16 x i8>* %5170, align 16, !tbaa !395
  %5172 = getelementptr inbounds i8, i8* %5169, i64 16
  %5173 = bitcast i8* %5172 to <16 x i8>*
  %5174 = load <16 x i8>, <16 x i8>* %5173, align 16, !tbaa !395
  %5175 = shufflevector <16 x i8> %5171, <16 x i8> %5174, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5176 = zext <32 x i8> %5175 to <32 x i16>
  %5177 = mul <32 x i16> %4047, %5176
  %5178 = getelementptr inbounds i8, i8* %5169, i64 2
  %5179 = bitcast i8* %5178 to <16 x i8>*
  %5180 = load <16 x i8>, <16 x i8>* %5179, align 2, !tbaa !395
  %5181 = getelementptr inbounds i8, i8* %5169, i64 18
  %5182 = bitcast i8* %5181 to <16 x i8>*
  %5183 = load <16 x i8>, <16 x i8>* %5182, align 2, !tbaa !395
  %5184 = shufflevector <16 x i8> %5180, <16 x i8> %5183, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5185 = zext <32 x i8> %5184 to <32 x i16>
  %5186 = mul <32 x i16> %4051, %5185
  %5187 = getelementptr inbounds i8, i8* %5169, i64 1
  %5188 = bitcast i8* %5187 to <16 x i8>*
  %5189 = load <16 x i8>, <16 x i8>* %5188, align 1, !tbaa !395
  %5190 = getelementptr inbounds i8, i8* %5169, i64 17
  %5191 = bitcast i8* %5190 to <16 x i8>*
  %5192 = load <16 x i8>, <16 x i8>* %5191, align 1, !tbaa !395
  %5193 = shufflevector <16 x i8> %5189, <16 x i8> %5192, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5194 = zext <32 x i8> %5193 to <32 x i16>
  %5195 = mul <32 x i16> %4055, %5194
  %5196 = add <32 x i16> %5130, %5122
  %5197 = add <32 x i16> %5196, %5139
  %5198 = add <32 x i16> %5197, %5149
  %5199 = add <32 x i16> %5198, %5158
  %5200 = add <32 x i16> %5199, %5167
  %5201 = add <32 x i16> %5200, %5177
  %5202 = add <32 x i16> %5201, %5186
  %5203 = add <32 x i16> %5202, %5195
  %t423.1 = ashr <32 x i16> %5203, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %5204 = bitcast <32 x i16> %t423.1 to <8 x i64>
  %5205 = shufflevector <8 x i64> %5204, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t424.1 = bitcast <2 x i64> %5205 to <8 x i16>
  %5206 = shufflevector <8 x i64> %5204, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t425.1 = bitcast <2 x i64> %5206 to <8 x i16>
  %5207 = shufflevector <8 x i64> %5204, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t426.1 = bitcast <2 x i64> %5207 to <8 x i16>
  %5208 = shufflevector <8 x i64> %5204, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t427.1 = bitcast <2 x i64> %5208 to <8 x i16>
  %5209 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t424.1) #11
  %5210 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t425.1) #11
  %5211 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t426.1) #11
  %5212 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t427.1) #11
  %5213 = shufflevector <8 x i8> %5209, <8 x i8> %5210, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5214 = shufflevector <8 x i8> %5211, <8 x i8> %5212, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5215 = shufflevector <16 x i8> %5213, <16 x i8> %5214, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5216 = bitcast <32 x i8> %5215 to <4 x i64>
  %5217 = shufflevector <4 x i64> %5216, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %5218 = shufflevector <4 x i64> %5216, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %5219 = add nsw i64 %4995, 32
  %5220 = getelementptr inbounds i8, i8* %125, i64 %5219
  %5221 = bitcast i8* %5220 to <2 x i64>*
  store <2 x i64> %5217, <2 x i64>* %5221, align 1, !tbaa !399
  %5222 = getelementptr inbounds i8, i8* %5220, i64 16
  %5223 = bitcast i8* %5222 to <2 x i64>*
  store <2 x i64> %5218, <2 x i64>* %5223, align 1, !tbaa !399
  %t357228 = add nsw i32 %4060, %4072
  %5224 = add nsw i64 %4073, %234
  %5225 = sext i32 %t357228 to i64
  %5226 = add nsw i64 %5224, %221
  %5227 = add nsw i64 %5224, %222
  %5228 = shl nsw i64 %5227, 5
  %5229 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5228
  %5230 = getelementptr inbounds i8, i8* %5229, i64 1
  %5231 = bitcast i8* %5230 to <16 x i8>*
  %5232 = load <16 x i8>, <16 x i8>* %5231, align 1, !tbaa !395
  %5233 = getelementptr inbounds i8, i8* %5229, i64 17
  %5234 = bitcast i8* %5233 to <16 x i8>*
  %5235 = load <16 x i8>, <16 x i8>* %5234, align 1, !tbaa !395
  %5236 = shufflevector <16 x i8> %5232, <16 x i8> %5235, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5237 = zext <32 x i8> %5236 to <32 x i16>
  %5238 = mul <32 x i16> %4023, %5237
  %5239 = bitcast i8* %5229 to <16 x i8>*
  %5240 = load <16 x i8>, <16 x i8>* %5239, align 16, !tbaa !395
  %5241 = getelementptr inbounds i8, i8* %5229, i64 16
  %5242 = bitcast i8* %5241 to <16 x i8>*
  %5243 = load <16 x i8>, <16 x i8>* %5242, align 16, !tbaa !395
  %5244 = shufflevector <16 x i8> %5240, <16 x i8> %5243, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5245 = zext <32 x i8> %5244 to <32 x i16>
  %5246 = mul <32 x i16> %4027, %5245
  %5247 = getelementptr inbounds i8, i8* %5229, i64 2
  %5248 = bitcast i8* %5247 to <16 x i8>*
  %5249 = load <16 x i8>, <16 x i8>* %5248, align 2, !tbaa !395
  %5250 = getelementptr inbounds i8, i8* %5229, i64 18
  %5251 = bitcast i8* %5250 to <16 x i8>*
  %5252 = load <16 x i8>, <16 x i8>* %5251, align 2, !tbaa !395
  %5253 = shufflevector <16 x i8> %5249, <16 x i8> %5252, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5254 = zext <32 x i8> %5253 to <32 x i16>
  %5255 = mul <32 x i16> %4031, %5254
  %5256 = shl nsw i64 %5224, 5
  %5257 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5256
  %5258 = bitcast i8* %5257 to <16 x i8>*
  %5259 = load <16 x i8>, <16 x i8>* %5258, align 16, !tbaa !395
  %5260 = getelementptr inbounds i8, i8* %5257, i64 16
  %5261 = bitcast i8* %5260 to <16 x i8>*
  %5262 = load <16 x i8>, <16 x i8>* %5261, align 16, !tbaa !395
  %5263 = shufflevector <16 x i8> %5259, <16 x i8> %5262, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5264 = zext <32 x i8> %5263 to <32 x i16>
  %5265 = mul <32 x i16> %4035, %5264
  %5266 = getelementptr inbounds i8, i8* %5257, i64 1
  %5267 = bitcast i8* %5266 to <16 x i8>*
  %5268 = load <16 x i8>, <16 x i8>* %5267, align 1, !tbaa !395
  %5269 = getelementptr inbounds i8, i8* %5257, i64 17
  %5270 = bitcast i8* %5269 to <16 x i8>*
  %5271 = load <16 x i8>, <16 x i8>* %5270, align 1, !tbaa !395
  %5272 = shufflevector <16 x i8> %5268, <16 x i8> %5271, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5273 = zext <32 x i8> %5272 to <32 x i16>
  %5274 = mul <32 x i16> %4039, %5273
  %5275 = getelementptr inbounds i8, i8* %5257, i64 2
  %5276 = bitcast i8* %5275 to <16 x i8>*
  %5277 = load <16 x i8>, <16 x i8>* %5276, align 2, !tbaa !395
  %5278 = getelementptr inbounds i8, i8* %5257, i64 18
  %5279 = bitcast i8* %5278 to <16 x i8>*
  %5280 = load <16 x i8>, <16 x i8>* %5279, align 2, !tbaa !395
  %5281 = shufflevector <16 x i8> %5277, <16 x i8> %5280, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5282 = zext <32 x i8> %5281 to <32 x i16>
  %5283 = mul <32 x i16> %4043, %5282
  %5284 = shl nsw i64 %5226, 5
  %5285 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5284
  %5286 = bitcast i8* %5285 to <16 x i8>*
  %5287 = load <16 x i8>, <16 x i8>* %5286, align 16, !tbaa !395
  %5288 = getelementptr inbounds i8, i8* %5285, i64 16
  %5289 = bitcast i8* %5288 to <16 x i8>*
  %5290 = load <16 x i8>, <16 x i8>* %5289, align 16, !tbaa !395
  %5291 = shufflevector <16 x i8> %5287, <16 x i8> %5290, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5292 = zext <32 x i8> %5291 to <32 x i16>
  %5293 = mul <32 x i16> %4047, %5292
  %5294 = getelementptr inbounds i8, i8* %5285, i64 2
  %5295 = bitcast i8* %5294 to <16 x i8>*
  %5296 = load <16 x i8>, <16 x i8>* %5295, align 2, !tbaa !395
  %5297 = getelementptr inbounds i8, i8* %5285, i64 18
  %5298 = bitcast i8* %5297 to <16 x i8>*
  %5299 = load <16 x i8>, <16 x i8>* %5298, align 2, !tbaa !395
  %5300 = shufflevector <16 x i8> %5296, <16 x i8> %5299, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5301 = zext <32 x i8> %5300 to <32 x i16>
  %5302 = mul <32 x i16> %4051, %5301
  %5303 = getelementptr inbounds i8, i8* %5285, i64 1
  %5304 = bitcast i8* %5303 to <16 x i8>*
  %5305 = load <16 x i8>, <16 x i8>* %5304, align 1, !tbaa !395
  %5306 = getelementptr inbounds i8, i8* %5285, i64 17
  %5307 = bitcast i8* %5306 to <16 x i8>*
  %5308 = load <16 x i8>, <16 x i8>* %5307, align 1, !tbaa !395
  %5309 = shufflevector <16 x i8> %5305, <16 x i8> %5308, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5310 = zext <32 x i8> %5309 to <32 x i16>
  %5311 = mul <32 x i16> %4055, %5310
  %5312 = add <32 x i16> %5246, %5238
  %5313 = add <32 x i16> %5312, %5255
  %5314 = add <32 x i16> %5313, %5265
  %5315 = add <32 x i16> %5314, %5274
  %5316 = add <32 x i16> %5315, %5283
  %5317 = add <32 x i16> %5316, %5293
  %5318 = add <32 x i16> %5317, %5302
  %5319 = add <32 x i16> %5318, %5311
  %t430 = ashr <32 x i16> %5319, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %5320 = bitcast <32 x i16> %t430 to <8 x i64>
  %5321 = shufflevector <8 x i64> %5320, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t431 = bitcast <2 x i64> %5321 to <8 x i16>
  %5322 = shufflevector <8 x i64> %5320, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t432 = bitcast <2 x i64> %5322 to <8 x i16>
  %5323 = shufflevector <8 x i64> %5320, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t433 = bitcast <2 x i64> %5323 to <8 x i16>
  %5324 = shufflevector <8 x i64> %5320, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t434 = bitcast <2 x i64> %5324 to <8 x i16>
  %5325 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t431) #11
  %5326 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t432) #11
  %5327 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t433) #11
  %5328 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t434) #11
  %5329 = shufflevector <8 x i8> %5325, <8 x i8> %5326, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5330 = shufflevector <8 x i8> %5327, <8 x i8> %5328, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5331 = shufflevector <16 x i8> %5329, <16 x i8> %5330, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5332 = bitcast <32 x i8> %5331 to <4 x i64>
  %5333 = shufflevector <4 x i64> %5332, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %5334 = shufflevector <4 x i64> %5332, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %5335 = getelementptr inbounds i8, i8* %125, i64 %5225
  %5336 = bitcast i8* %5335 to <2 x i64>*
  store <2 x i64> %5333, <2 x i64>* %5336, align 1, !tbaa !399
  %5337 = getelementptr inbounds i8, i8* %5335, i64 16
  %5338 = bitcast i8* %5337 to <2 x i64>*
  store <2 x i64> %5334, <2 x i64>* %5338, align 1, !tbaa !399
  %5339 = or i64 %5224, 1
  %5340 = add nsw i64 %5339, %221
  %5341 = add nsw i64 %5339, %222
  %5342 = shl nsw i64 %5341, 5
  %5343 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5342
  %5344 = getelementptr inbounds i8, i8* %5343, i64 1
  %5345 = bitcast i8* %5344 to <16 x i8>*
  %5346 = load <16 x i8>, <16 x i8>* %5345, align 1, !tbaa !395
  %5347 = getelementptr inbounds i8, i8* %5343, i64 17
  %5348 = bitcast i8* %5347 to <16 x i8>*
  %5349 = load <16 x i8>, <16 x i8>* %5348, align 1, !tbaa !395
  %5350 = shufflevector <16 x i8> %5346, <16 x i8> %5349, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5351 = zext <32 x i8> %5350 to <32 x i16>
  %5352 = mul <32 x i16> %4023, %5351
  %5353 = bitcast i8* %5343 to <16 x i8>*
  %5354 = load <16 x i8>, <16 x i8>* %5353, align 16, !tbaa !395
  %5355 = getelementptr inbounds i8, i8* %5343, i64 16
  %5356 = bitcast i8* %5355 to <16 x i8>*
  %5357 = load <16 x i8>, <16 x i8>* %5356, align 16, !tbaa !395
  %5358 = shufflevector <16 x i8> %5354, <16 x i8> %5357, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5359 = zext <32 x i8> %5358 to <32 x i16>
  %5360 = mul <32 x i16> %4027, %5359
  %5361 = getelementptr inbounds i8, i8* %5343, i64 2
  %5362 = bitcast i8* %5361 to <16 x i8>*
  %5363 = load <16 x i8>, <16 x i8>* %5362, align 2, !tbaa !395
  %5364 = getelementptr inbounds i8, i8* %5343, i64 18
  %5365 = bitcast i8* %5364 to <16 x i8>*
  %5366 = load <16 x i8>, <16 x i8>* %5365, align 2, !tbaa !395
  %5367 = shufflevector <16 x i8> %5363, <16 x i8> %5366, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5368 = zext <32 x i8> %5367 to <32 x i16>
  %5369 = mul <32 x i16> %4031, %5368
  %5370 = shl nsw i64 %5339, 5
  %5371 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5370
  %5372 = bitcast i8* %5371 to <16 x i8>*
  %5373 = load <16 x i8>, <16 x i8>* %5372, align 16, !tbaa !395
  %5374 = getelementptr inbounds i8, i8* %5371, i64 16
  %5375 = bitcast i8* %5374 to <16 x i8>*
  %5376 = load <16 x i8>, <16 x i8>* %5375, align 16, !tbaa !395
  %5377 = shufflevector <16 x i8> %5373, <16 x i8> %5376, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5378 = zext <32 x i8> %5377 to <32 x i16>
  %5379 = mul <32 x i16> %4035, %5378
  %5380 = getelementptr inbounds i8, i8* %5371, i64 1
  %5381 = bitcast i8* %5380 to <16 x i8>*
  %5382 = load <16 x i8>, <16 x i8>* %5381, align 1, !tbaa !395
  %5383 = getelementptr inbounds i8, i8* %5371, i64 17
  %5384 = bitcast i8* %5383 to <16 x i8>*
  %5385 = load <16 x i8>, <16 x i8>* %5384, align 1, !tbaa !395
  %5386 = shufflevector <16 x i8> %5382, <16 x i8> %5385, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5387 = zext <32 x i8> %5386 to <32 x i16>
  %5388 = mul <32 x i16> %4039, %5387
  %5389 = getelementptr inbounds i8, i8* %5371, i64 2
  %5390 = bitcast i8* %5389 to <16 x i8>*
  %5391 = load <16 x i8>, <16 x i8>* %5390, align 2, !tbaa !395
  %5392 = getelementptr inbounds i8, i8* %5371, i64 18
  %5393 = bitcast i8* %5392 to <16 x i8>*
  %5394 = load <16 x i8>, <16 x i8>* %5393, align 2, !tbaa !395
  %5395 = shufflevector <16 x i8> %5391, <16 x i8> %5394, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5396 = zext <32 x i8> %5395 to <32 x i16>
  %5397 = mul <32 x i16> %4043, %5396
  %5398 = shl nsw i64 %5340, 5
  %5399 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5398
  %5400 = bitcast i8* %5399 to <16 x i8>*
  %5401 = load <16 x i8>, <16 x i8>* %5400, align 16, !tbaa !395
  %5402 = getelementptr inbounds i8, i8* %5399, i64 16
  %5403 = bitcast i8* %5402 to <16 x i8>*
  %5404 = load <16 x i8>, <16 x i8>* %5403, align 16, !tbaa !395
  %5405 = shufflevector <16 x i8> %5401, <16 x i8> %5404, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5406 = zext <32 x i8> %5405 to <32 x i16>
  %5407 = mul <32 x i16> %4047, %5406
  %5408 = getelementptr inbounds i8, i8* %5399, i64 2
  %5409 = bitcast i8* %5408 to <16 x i8>*
  %5410 = load <16 x i8>, <16 x i8>* %5409, align 2, !tbaa !395
  %5411 = getelementptr inbounds i8, i8* %5399, i64 18
  %5412 = bitcast i8* %5411 to <16 x i8>*
  %5413 = load <16 x i8>, <16 x i8>* %5412, align 2, !tbaa !395
  %5414 = shufflevector <16 x i8> %5410, <16 x i8> %5413, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5415 = zext <32 x i8> %5414 to <32 x i16>
  %5416 = mul <32 x i16> %4051, %5415
  %5417 = getelementptr inbounds i8, i8* %5399, i64 1
  %5418 = bitcast i8* %5417 to <16 x i8>*
  %5419 = load <16 x i8>, <16 x i8>* %5418, align 1, !tbaa !395
  %5420 = getelementptr inbounds i8, i8* %5399, i64 17
  %5421 = bitcast i8* %5420 to <16 x i8>*
  %5422 = load <16 x i8>, <16 x i8>* %5421, align 1, !tbaa !395
  %5423 = shufflevector <16 x i8> %5419, <16 x i8> %5422, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5424 = zext <32 x i8> %5423 to <32 x i16>
  %5425 = mul <32 x i16> %4055, %5424
  %5426 = add <32 x i16> %5360, %5352
  %5427 = add <32 x i16> %5426, %5369
  %5428 = add <32 x i16> %5427, %5379
  %5429 = add <32 x i16> %5428, %5388
  %5430 = add <32 x i16> %5429, %5397
  %5431 = add <32 x i16> %5430, %5407
  %5432 = add <32 x i16> %5431, %5416
  %5433 = add <32 x i16> %5432, %5425
  %t430.1 = ashr <32 x i16> %5433, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %5434 = bitcast <32 x i16> %t430.1 to <8 x i64>
  %5435 = shufflevector <8 x i64> %5434, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t431.1 = bitcast <2 x i64> %5435 to <8 x i16>
  %5436 = shufflevector <8 x i64> %5434, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t432.1 = bitcast <2 x i64> %5436 to <8 x i16>
  %5437 = shufflevector <8 x i64> %5434, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t433.1 = bitcast <2 x i64> %5437 to <8 x i16>
  %5438 = shufflevector <8 x i64> %5434, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t434.1 = bitcast <2 x i64> %5438 to <8 x i16>
  %5439 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t431.1) #11
  %5440 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t432.1) #11
  %5441 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t433.1) #11
  %5442 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t434.1) #11
  %5443 = shufflevector <8 x i8> %5439, <8 x i8> %5440, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5444 = shufflevector <8 x i8> %5441, <8 x i8> %5442, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5445 = shufflevector <16 x i8> %5443, <16 x i8> %5444, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5446 = bitcast <32 x i8> %5445 to <4 x i64>
  %5447 = shufflevector <4 x i64> %5446, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %5448 = shufflevector <4 x i64> %5446, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %5449 = add nsw i64 %5225, 32
  %5450 = getelementptr inbounds i8, i8* %125, i64 %5449
  %5451 = bitcast i8* %5450 to <2 x i64>*
  store <2 x i64> %5447, <2 x i64>* %5451, align 1, !tbaa !399
  %5452 = getelementptr inbounds i8, i8* %5450, i64 16
  %5453 = bitcast i8* %5452 to <2 x i64>*
  store <2 x i64> %5448, <2 x i64>* %5453, align 1, !tbaa !399
  %t359236 = add nsw i32 %4061, %4072
  %5454 = add nsw i64 %4073, %233
  %5455 = sext i32 %t359236 to i64
  %5456 = add nsw i64 %5454, %221
  %5457 = add nsw i64 %5454, %222
  %5458 = shl nsw i64 %5457, 5
  %5459 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5458
  %5460 = getelementptr inbounds i8, i8* %5459, i64 1
  %5461 = bitcast i8* %5460 to <16 x i8>*
  %5462 = load <16 x i8>, <16 x i8>* %5461, align 1, !tbaa !395
  %5463 = getelementptr inbounds i8, i8* %5459, i64 17
  %5464 = bitcast i8* %5463 to <16 x i8>*
  %5465 = load <16 x i8>, <16 x i8>* %5464, align 1, !tbaa !395
  %5466 = shufflevector <16 x i8> %5462, <16 x i8> %5465, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5467 = zext <32 x i8> %5466 to <32 x i16>
  %5468 = mul <32 x i16> %4023, %5467
  %5469 = bitcast i8* %5459 to <16 x i8>*
  %5470 = load <16 x i8>, <16 x i8>* %5469, align 16, !tbaa !395
  %5471 = getelementptr inbounds i8, i8* %5459, i64 16
  %5472 = bitcast i8* %5471 to <16 x i8>*
  %5473 = load <16 x i8>, <16 x i8>* %5472, align 16, !tbaa !395
  %5474 = shufflevector <16 x i8> %5470, <16 x i8> %5473, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5475 = zext <32 x i8> %5474 to <32 x i16>
  %5476 = mul <32 x i16> %4027, %5475
  %5477 = getelementptr inbounds i8, i8* %5459, i64 2
  %5478 = bitcast i8* %5477 to <16 x i8>*
  %5479 = load <16 x i8>, <16 x i8>* %5478, align 2, !tbaa !395
  %5480 = getelementptr inbounds i8, i8* %5459, i64 18
  %5481 = bitcast i8* %5480 to <16 x i8>*
  %5482 = load <16 x i8>, <16 x i8>* %5481, align 2, !tbaa !395
  %5483 = shufflevector <16 x i8> %5479, <16 x i8> %5482, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5484 = zext <32 x i8> %5483 to <32 x i16>
  %5485 = mul <32 x i16> %4031, %5484
  %5486 = shl nsw i64 %5454, 5
  %5487 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5486
  %5488 = bitcast i8* %5487 to <16 x i8>*
  %5489 = load <16 x i8>, <16 x i8>* %5488, align 16, !tbaa !395
  %5490 = getelementptr inbounds i8, i8* %5487, i64 16
  %5491 = bitcast i8* %5490 to <16 x i8>*
  %5492 = load <16 x i8>, <16 x i8>* %5491, align 16, !tbaa !395
  %5493 = shufflevector <16 x i8> %5489, <16 x i8> %5492, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5494 = zext <32 x i8> %5493 to <32 x i16>
  %5495 = mul <32 x i16> %4035, %5494
  %5496 = getelementptr inbounds i8, i8* %5487, i64 1
  %5497 = bitcast i8* %5496 to <16 x i8>*
  %5498 = load <16 x i8>, <16 x i8>* %5497, align 1, !tbaa !395
  %5499 = getelementptr inbounds i8, i8* %5487, i64 17
  %5500 = bitcast i8* %5499 to <16 x i8>*
  %5501 = load <16 x i8>, <16 x i8>* %5500, align 1, !tbaa !395
  %5502 = shufflevector <16 x i8> %5498, <16 x i8> %5501, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5503 = zext <32 x i8> %5502 to <32 x i16>
  %5504 = mul <32 x i16> %4039, %5503
  %5505 = getelementptr inbounds i8, i8* %5487, i64 2
  %5506 = bitcast i8* %5505 to <16 x i8>*
  %5507 = load <16 x i8>, <16 x i8>* %5506, align 2, !tbaa !395
  %5508 = getelementptr inbounds i8, i8* %5487, i64 18
  %5509 = bitcast i8* %5508 to <16 x i8>*
  %5510 = load <16 x i8>, <16 x i8>* %5509, align 2, !tbaa !395
  %5511 = shufflevector <16 x i8> %5507, <16 x i8> %5510, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5512 = zext <32 x i8> %5511 to <32 x i16>
  %5513 = mul <32 x i16> %4043, %5512
  %5514 = shl nsw i64 %5456, 5
  %5515 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5514
  %5516 = bitcast i8* %5515 to <16 x i8>*
  %5517 = load <16 x i8>, <16 x i8>* %5516, align 16, !tbaa !395
  %5518 = getelementptr inbounds i8, i8* %5515, i64 16
  %5519 = bitcast i8* %5518 to <16 x i8>*
  %5520 = load <16 x i8>, <16 x i8>* %5519, align 16, !tbaa !395
  %5521 = shufflevector <16 x i8> %5517, <16 x i8> %5520, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5522 = zext <32 x i8> %5521 to <32 x i16>
  %5523 = mul <32 x i16> %4047, %5522
  %5524 = getelementptr inbounds i8, i8* %5515, i64 2
  %5525 = bitcast i8* %5524 to <16 x i8>*
  %5526 = load <16 x i8>, <16 x i8>* %5525, align 2, !tbaa !395
  %5527 = getelementptr inbounds i8, i8* %5515, i64 18
  %5528 = bitcast i8* %5527 to <16 x i8>*
  %5529 = load <16 x i8>, <16 x i8>* %5528, align 2, !tbaa !395
  %5530 = shufflevector <16 x i8> %5526, <16 x i8> %5529, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5531 = zext <32 x i8> %5530 to <32 x i16>
  %5532 = mul <32 x i16> %4051, %5531
  %5533 = getelementptr inbounds i8, i8* %5515, i64 1
  %5534 = bitcast i8* %5533 to <16 x i8>*
  %5535 = load <16 x i8>, <16 x i8>* %5534, align 1, !tbaa !395
  %5536 = getelementptr inbounds i8, i8* %5515, i64 17
  %5537 = bitcast i8* %5536 to <16 x i8>*
  %5538 = load <16 x i8>, <16 x i8>* %5537, align 1, !tbaa !395
  %5539 = shufflevector <16 x i8> %5535, <16 x i8> %5538, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5540 = zext <32 x i8> %5539 to <32 x i16>
  %5541 = mul <32 x i16> %4055, %5540
  %5542 = add <32 x i16> %5476, %5468
  %5543 = add <32 x i16> %5542, %5485
  %5544 = add <32 x i16> %5543, %5495
  %5545 = add <32 x i16> %5544, %5504
  %5546 = add <32 x i16> %5545, %5513
  %5547 = add <32 x i16> %5546, %5523
  %5548 = add <32 x i16> %5547, %5532
  %5549 = add <32 x i16> %5548, %5541
  %t437 = ashr <32 x i16> %5549, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %5550 = bitcast <32 x i16> %t437 to <8 x i64>
  %5551 = shufflevector <8 x i64> %5550, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t438 = bitcast <2 x i64> %5551 to <8 x i16>
  %5552 = shufflevector <8 x i64> %5550, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t439 = bitcast <2 x i64> %5552 to <8 x i16>
  %5553 = shufflevector <8 x i64> %5550, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t440 = bitcast <2 x i64> %5553 to <8 x i16>
  %5554 = shufflevector <8 x i64> %5550, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t441 = bitcast <2 x i64> %5554 to <8 x i16>
  %5555 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t438) #11
  %5556 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t439) #11
  %5557 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t440) #11
  %5558 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t441) #11
  %5559 = shufflevector <8 x i8> %5555, <8 x i8> %5556, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5560 = shufflevector <8 x i8> %5557, <8 x i8> %5558, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5561 = shufflevector <16 x i8> %5559, <16 x i8> %5560, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5562 = bitcast <32 x i8> %5561 to <4 x i64>
  %5563 = shufflevector <4 x i64> %5562, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %5564 = shufflevector <4 x i64> %5562, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %5565 = getelementptr inbounds i8, i8* %125, i64 %5455
  %5566 = bitcast i8* %5565 to <2 x i64>*
  store <2 x i64> %5563, <2 x i64>* %5566, align 1, !tbaa !399
  %5567 = getelementptr inbounds i8, i8* %5565, i64 16
  %5568 = bitcast i8* %5567 to <2 x i64>*
  store <2 x i64> %5564, <2 x i64>* %5568, align 1, !tbaa !399
  %5569 = or i64 %5454, 1
  %5570 = add nsw i64 %5569, %221
  %5571 = add nsw i64 %5569, %222
  %5572 = shl nsw i64 %5571, 5
  %5573 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5572
  %5574 = getelementptr inbounds i8, i8* %5573, i64 1
  %5575 = bitcast i8* %5574 to <16 x i8>*
  %5576 = load <16 x i8>, <16 x i8>* %5575, align 1, !tbaa !395
  %5577 = getelementptr inbounds i8, i8* %5573, i64 17
  %5578 = bitcast i8* %5577 to <16 x i8>*
  %5579 = load <16 x i8>, <16 x i8>* %5578, align 1, !tbaa !395
  %5580 = shufflevector <16 x i8> %5576, <16 x i8> %5579, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5581 = zext <32 x i8> %5580 to <32 x i16>
  %5582 = mul <32 x i16> %4023, %5581
  %5583 = bitcast i8* %5573 to <16 x i8>*
  %5584 = load <16 x i8>, <16 x i8>* %5583, align 16, !tbaa !395
  %5585 = getelementptr inbounds i8, i8* %5573, i64 16
  %5586 = bitcast i8* %5585 to <16 x i8>*
  %5587 = load <16 x i8>, <16 x i8>* %5586, align 16, !tbaa !395
  %5588 = shufflevector <16 x i8> %5584, <16 x i8> %5587, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5589 = zext <32 x i8> %5588 to <32 x i16>
  %5590 = mul <32 x i16> %4027, %5589
  %5591 = getelementptr inbounds i8, i8* %5573, i64 2
  %5592 = bitcast i8* %5591 to <16 x i8>*
  %5593 = load <16 x i8>, <16 x i8>* %5592, align 2, !tbaa !395
  %5594 = getelementptr inbounds i8, i8* %5573, i64 18
  %5595 = bitcast i8* %5594 to <16 x i8>*
  %5596 = load <16 x i8>, <16 x i8>* %5595, align 2, !tbaa !395
  %5597 = shufflevector <16 x i8> %5593, <16 x i8> %5596, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5598 = zext <32 x i8> %5597 to <32 x i16>
  %5599 = mul <32 x i16> %4031, %5598
  %5600 = shl nsw i64 %5569, 5
  %5601 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5600
  %5602 = bitcast i8* %5601 to <16 x i8>*
  %5603 = load <16 x i8>, <16 x i8>* %5602, align 16, !tbaa !395
  %5604 = getelementptr inbounds i8, i8* %5601, i64 16
  %5605 = bitcast i8* %5604 to <16 x i8>*
  %5606 = load <16 x i8>, <16 x i8>* %5605, align 16, !tbaa !395
  %5607 = shufflevector <16 x i8> %5603, <16 x i8> %5606, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5608 = zext <32 x i8> %5607 to <32 x i16>
  %5609 = mul <32 x i16> %4035, %5608
  %5610 = getelementptr inbounds i8, i8* %5601, i64 1
  %5611 = bitcast i8* %5610 to <16 x i8>*
  %5612 = load <16 x i8>, <16 x i8>* %5611, align 1, !tbaa !395
  %5613 = getelementptr inbounds i8, i8* %5601, i64 17
  %5614 = bitcast i8* %5613 to <16 x i8>*
  %5615 = load <16 x i8>, <16 x i8>* %5614, align 1, !tbaa !395
  %5616 = shufflevector <16 x i8> %5612, <16 x i8> %5615, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5617 = zext <32 x i8> %5616 to <32 x i16>
  %5618 = mul <32 x i16> %4039, %5617
  %5619 = getelementptr inbounds i8, i8* %5601, i64 2
  %5620 = bitcast i8* %5619 to <16 x i8>*
  %5621 = load <16 x i8>, <16 x i8>* %5620, align 2, !tbaa !395
  %5622 = getelementptr inbounds i8, i8* %5601, i64 18
  %5623 = bitcast i8* %5622 to <16 x i8>*
  %5624 = load <16 x i8>, <16 x i8>* %5623, align 2, !tbaa !395
  %5625 = shufflevector <16 x i8> %5621, <16 x i8> %5624, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5626 = zext <32 x i8> %5625 to <32 x i16>
  %5627 = mul <32 x i16> %4043, %5626
  %5628 = shl nsw i64 %5570, 5
  %5629 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5628
  %5630 = bitcast i8* %5629 to <16 x i8>*
  %5631 = load <16 x i8>, <16 x i8>* %5630, align 16, !tbaa !395
  %5632 = getelementptr inbounds i8, i8* %5629, i64 16
  %5633 = bitcast i8* %5632 to <16 x i8>*
  %5634 = load <16 x i8>, <16 x i8>* %5633, align 16, !tbaa !395
  %5635 = shufflevector <16 x i8> %5631, <16 x i8> %5634, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5636 = zext <32 x i8> %5635 to <32 x i16>
  %5637 = mul <32 x i16> %4047, %5636
  %5638 = getelementptr inbounds i8, i8* %5629, i64 2
  %5639 = bitcast i8* %5638 to <16 x i8>*
  %5640 = load <16 x i8>, <16 x i8>* %5639, align 2, !tbaa !395
  %5641 = getelementptr inbounds i8, i8* %5629, i64 18
  %5642 = bitcast i8* %5641 to <16 x i8>*
  %5643 = load <16 x i8>, <16 x i8>* %5642, align 2, !tbaa !395
  %5644 = shufflevector <16 x i8> %5640, <16 x i8> %5643, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5645 = zext <32 x i8> %5644 to <32 x i16>
  %5646 = mul <32 x i16> %4051, %5645
  %5647 = getelementptr inbounds i8, i8* %5629, i64 1
  %5648 = bitcast i8* %5647 to <16 x i8>*
  %5649 = load <16 x i8>, <16 x i8>* %5648, align 1, !tbaa !395
  %5650 = getelementptr inbounds i8, i8* %5629, i64 17
  %5651 = bitcast i8* %5650 to <16 x i8>*
  %5652 = load <16 x i8>, <16 x i8>* %5651, align 1, !tbaa !395
  %5653 = shufflevector <16 x i8> %5649, <16 x i8> %5652, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5654 = zext <32 x i8> %5653 to <32 x i16>
  %5655 = mul <32 x i16> %4055, %5654
  %5656 = add <32 x i16> %5590, %5582
  %5657 = add <32 x i16> %5656, %5599
  %5658 = add <32 x i16> %5657, %5609
  %5659 = add <32 x i16> %5658, %5618
  %5660 = add <32 x i16> %5659, %5627
  %5661 = add <32 x i16> %5660, %5637
  %5662 = add <32 x i16> %5661, %5646
  %5663 = add <32 x i16> %5662, %5655
  %t437.1 = ashr <32 x i16> %5663, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %5664 = bitcast <32 x i16> %t437.1 to <8 x i64>
  %5665 = shufflevector <8 x i64> %5664, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t438.1 = bitcast <2 x i64> %5665 to <8 x i16>
  %5666 = shufflevector <8 x i64> %5664, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t439.1 = bitcast <2 x i64> %5666 to <8 x i16>
  %5667 = shufflevector <8 x i64> %5664, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t440.1 = bitcast <2 x i64> %5667 to <8 x i16>
  %5668 = shufflevector <8 x i64> %5664, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t441.1 = bitcast <2 x i64> %5668 to <8 x i16>
  %5669 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t438.1) #11
  %5670 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t439.1) #11
  %5671 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t440.1) #11
  %5672 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t441.1) #11
  %5673 = shufflevector <8 x i8> %5669, <8 x i8> %5670, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5674 = shufflevector <8 x i8> %5671, <8 x i8> %5672, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5675 = shufflevector <16 x i8> %5673, <16 x i8> %5674, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5676 = bitcast <32 x i8> %5675 to <4 x i64>
  %5677 = shufflevector <4 x i64> %5676, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %5678 = shufflevector <4 x i64> %5676, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %5679 = add nsw i64 %5455, 32
  %5680 = getelementptr inbounds i8, i8* %125, i64 %5679
  %5681 = bitcast i8* %5680 to <2 x i64>*
  store <2 x i64> %5677, <2 x i64>* %5681, align 1, !tbaa !399
  %5682 = getelementptr inbounds i8, i8* %5680, i64 16
  %5683 = bitcast i8* %5682 to <2 x i64>*
  store <2 x i64> %5678, <2 x i64>* %5683, align 1, !tbaa !399
  %t361244 = add nsw i32 %4062, %4072
  %5684 = add nsw i64 %4073, %232
  %5685 = sext i32 %t361244 to i64
  %5686 = add nsw i64 %5684, %221
  %5687 = add nsw i64 %5684, %222
  %5688 = shl nsw i64 %5687, 5
  %5689 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5688
  %5690 = getelementptr inbounds i8, i8* %5689, i64 1
  %5691 = bitcast i8* %5690 to <16 x i8>*
  %5692 = load <16 x i8>, <16 x i8>* %5691, align 1, !tbaa !395
  %5693 = getelementptr inbounds i8, i8* %5689, i64 17
  %5694 = bitcast i8* %5693 to <16 x i8>*
  %5695 = load <16 x i8>, <16 x i8>* %5694, align 1, !tbaa !395
  %5696 = shufflevector <16 x i8> %5692, <16 x i8> %5695, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5697 = zext <32 x i8> %5696 to <32 x i16>
  %5698 = mul <32 x i16> %4023, %5697
  %5699 = bitcast i8* %5689 to <16 x i8>*
  %5700 = load <16 x i8>, <16 x i8>* %5699, align 16, !tbaa !395
  %5701 = getelementptr inbounds i8, i8* %5689, i64 16
  %5702 = bitcast i8* %5701 to <16 x i8>*
  %5703 = load <16 x i8>, <16 x i8>* %5702, align 16, !tbaa !395
  %5704 = shufflevector <16 x i8> %5700, <16 x i8> %5703, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5705 = zext <32 x i8> %5704 to <32 x i16>
  %5706 = mul <32 x i16> %4027, %5705
  %5707 = getelementptr inbounds i8, i8* %5689, i64 2
  %5708 = bitcast i8* %5707 to <16 x i8>*
  %5709 = load <16 x i8>, <16 x i8>* %5708, align 2, !tbaa !395
  %5710 = getelementptr inbounds i8, i8* %5689, i64 18
  %5711 = bitcast i8* %5710 to <16 x i8>*
  %5712 = load <16 x i8>, <16 x i8>* %5711, align 2, !tbaa !395
  %5713 = shufflevector <16 x i8> %5709, <16 x i8> %5712, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5714 = zext <32 x i8> %5713 to <32 x i16>
  %5715 = mul <32 x i16> %4031, %5714
  %5716 = shl nsw i64 %5684, 5
  %5717 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5716
  %5718 = bitcast i8* %5717 to <16 x i8>*
  %5719 = load <16 x i8>, <16 x i8>* %5718, align 16, !tbaa !395
  %5720 = getelementptr inbounds i8, i8* %5717, i64 16
  %5721 = bitcast i8* %5720 to <16 x i8>*
  %5722 = load <16 x i8>, <16 x i8>* %5721, align 16, !tbaa !395
  %5723 = shufflevector <16 x i8> %5719, <16 x i8> %5722, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5724 = zext <32 x i8> %5723 to <32 x i16>
  %5725 = mul <32 x i16> %4035, %5724
  %5726 = getelementptr inbounds i8, i8* %5717, i64 1
  %5727 = bitcast i8* %5726 to <16 x i8>*
  %5728 = load <16 x i8>, <16 x i8>* %5727, align 1, !tbaa !395
  %5729 = getelementptr inbounds i8, i8* %5717, i64 17
  %5730 = bitcast i8* %5729 to <16 x i8>*
  %5731 = load <16 x i8>, <16 x i8>* %5730, align 1, !tbaa !395
  %5732 = shufflevector <16 x i8> %5728, <16 x i8> %5731, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5733 = zext <32 x i8> %5732 to <32 x i16>
  %5734 = mul <32 x i16> %4039, %5733
  %5735 = getelementptr inbounds i8, i8* %5717, i64 2
  %5736 = bitcast i8* %5735 to <16 x i8>*
  %5737 = load <16 x i8>, <16 x i8>* %5736, align 2, !tbaa !395
  %5738 = getelementptr inbounds i8, i8* %5717, i64 18
  %5739 = bitcast i8* %5738 to <16 x i8>*
  %5740 = load <16 x i8>, <16 x i8>* %5739, align 2, !tbaa !395
  %5741 = shufflevector <16 x i8> %5737, <16 x i8> %5740, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5742 = zext <32 x i8> %5741 to <32 x i16>
  %5743 = mul <32 x i16> %4043, %5742
  %5744 = shl nsw i64 %5686, 5
  %5745 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5744
  %5746 = bitcast i8* %5745 to <16 x i8>*
  %5747 = load <16 x i8>, <16 x i8>* %5746, align 16, !tbaa !395
  %5748 = getelementptr inbounds i8, i8* %5745, i64 16
  %5749 = bitcast i8* %5748 to <16 x i8>*
  %5750 = load <16 x i8>, <16 x i8>* %5749, align 16, !tbaa !395
  %5751 = shufflevector <16 x i8> %5747, <16 x i8> %5750, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5752 = zext <32 x i8> %5751 to <32 x i16>
  %5753 = mul <32 x i16> %4047, %5752
  %5754 = getelementptr inbounds i8, i8* %5745, i64 2
  %5755 = bitcast i8* %5754 to <16 x i8>*
  %5756 = load <16 x i8>, <16 x i8>* %5755, align 2, !tbaa !395
  %5757 = getelementptr inbounds i8, i8* %5745, i64 18
  %5758 = bitcast i8* %5757 to <16 x i8>*
  %5759 = load <16 x i8>, <16 x i8>* %5758, align 2, !tbaa !395
  %5760 = shufflevector <16 x i8> %5756, <16 x i8> %5759, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5761 = zext <32 x i8> %5760 to <32 x i16>
  %5762 = mul <32 x i16> %4051, %5761
  %5763 = getelementptr inbounds i8, i8* %5745, i64 1
  %5764 = bitcast i8* %5763 to <16 x i8>*
  %5765 = load <16 x i8>, <16 x i8>* %5764, align 1, !tbaa !395
  %5766 = getelementptr inbounds i8, i8* %5745, i64 17
  %5767 = bitcast i8* %5766 to <16 x i8>*
  %5768 = load <16 x i8>, <16 x i8>* %5767, align 1, !tbaa !395
  %5769 = shufflevector <16 x i8> %5765, <16 x i8> %5768, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5770 = zext <32 x i8> %5769 to <32 x i16>
  %5771 = mul <32 x i16> %4055, %5770
  %5772 = add <32 x i16> %5706, %5698
  %5773 = add <32 x i16> %5772, %5715
  %5774 = add <32 x i16> %5773, %5725
  %5775 = add <32 x i16> %5774, %5734
  %5776 = add <32 x i16> %5775, %5743
  %5777 = add <32 x i16> %5776, %5753
  %5778 = add <32 x i16> %5777, %5762
  %5779 = add <32 x i16> %5778, %5771
  %t444 = ashr <32 x i16> %5779, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %5780 = bitcast <32 x i16> %t444 to <8 x i64>
  %5781 = shufflevector <8 x i64> %5780, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t445 = bitcast <2 x i64> %5781 to <8 x i16>
  %5782 = shufflevector <8 x i64> %5780, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t446 = bitcast <2 x i64> %5782 to <8 x i16>
  %5783 = shufflevector <8 x i64> %5780, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t447 = bitcast <2 x i64> %5783 to <8 x i16>
  %5784 = shufflevector <8 x i64> %5780, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t448 = bitcast <2 x i64> %5784 to <8 x i16>
  %5785 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t445) #11
  %5786 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t446) #11
  %5787 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t447) #11
  %5788 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t448) #11
  %5789 = shufflevector <8 x i8> %5785, <8 x i8> %5786, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5790 = shufflevector <8 x i8> %5787, <8 x i8> %5788, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5791 = shufflevector <16 x i8> %5789, <16 x i8> %5790, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5792 = bitcast <32 x i8> %5791 to <4 x i64>
  %5793 = shufflevector <4 x i64> %5792, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %5794 = shufflevector <4 x i64> %5792, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %5795 = getelementptr inbounds i8, i8* %125, i64 %5685
  %5796 = bitcast i8* %5795 to <2 x i64>*
  store <2 x i64> %5793, <2 x i64>* %5796, align 1, !tbaa !399
  %5797 = getelementptr inbounds i8, i8* %5795, i64 16
  %5798 = bitcast i8* %5797 to <2 x i64>*
  store <2 x i64> %5794, <2 x i64>* %5798, align 1, !tbaa !399
  %5799 = or i64 %5684, 1
  %5800 = add nsw i64 %5799, %221
  %5801 = add nsw i64 %5799, %222
  %5802 = shl nsw i64 %5801, 5
  %5803 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5802
  %5804 = getelementptr inbounds i8, i8* %5803, i64 1
  %5805 = bitcast i8* %5804 to <16 x i8>*
  %5806 = load <16 x i8>, <16 x i8>* %5805, align 1, !tbaa !395
  %5807 = getelementptr inbounds i8, i8* %5803, i64 17
  %5808 = bitcast i8* %5807 to <16 x i8>*
  %5809 = load <16 x i8>, <16 x i8>* %5808, align 1, !tbaa !395
  %5810 = shufflevector <16 x i8> %5806, <16 x i8> %5809, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5811 = zext <32 x i8> %5810 to <32 x i16>
  %5812 = mul <32 x i16> %4023, %5811
  %5813 = bitcast i8* %5803 to <16 x i8>*
  %5814 = load <16 x i8>, <16 x i8>* %5813, align 16, !tbaa !395
  %5815 = getelementptr inbounds i8, i8* %5803, i64 16
  %5816 = bitcast i8* %5815 to <16 x i8>*
  %5817 = load <16 x i8>, <16 x i8>* %5816, align 16, !tbaa !395
  %5818 = shufflevector <16 x i8> %5814, <16 x i8> %5817, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5819 = zext <32 x i8> %5818 to <32 x i16>
  %5820 = mul <32 x i16> %4027, %5819
  %5821 = getelementptr inbounds i8, i8* %5803, i64 2
  %5822 = bitcast i8* %5821 to <16 x i8>*
  %5823 = load <16 x i8>, <16 x i8>* %5822, align 2, !tbaa !395
  %5824 = getelementptr inbounds i8, i8* %5803, i64 18
  %5825 = bitcast i8* %5824 to <16 x i8>*
  %5826 = load <16 x i8>, <16 x i8>* %5825, align 2, !tbaa !395
  %5827 = shufflevector <16 x i8> %5823, <16 x i8> %5826, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5828 = zext <32 x i8> %5827 to <32 x i16>
  %5829 = mul <32 x i16> %4031, %5828
  %5830 = shl nsw i64 %5799, 5
  %5831 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5830
  %5832 = bitcast i8* %5831 to <16 x i8>*
  %5833 = load <16 x i8>, <16 x i8>* %5832, align 16, !tbaa !395
  %5834 = getelementptr inbounds i8, i8* %5831, i64 16
  %5835 = bitcast i8* %5834 to <16 x i8>*
  %5836 = load <16 x i8>, <16 x i8>* %5835, align 16, !tbaa !395
  %5837 = shufflevector <16 x i8> %5833, <16 x i8> %5836, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5838 = zext <32 x i8> %5837 to <32 x i16>
  %5839 = mul <32 x i16> %4035, %5838
  %5840 = getelementptr inbounds i8, i8* %5831, i64 1
  %5841 = bitcast i8* %5840 to <16 x i8>*
  %5842 = load <16 x i8>, <16 x i8>* %5841, align 1, !tbaa !395
  %5843 = getelementptr inbounds i8, i8* %5831, i64 17
  %5844 = bitcast i8* %5843 to <16 x i8>*
  %5845 = load <16 x i8>, <16 x i8>* %5844, align 1, !tbaa !395
  %5846 = shufflevector <16 x i8> %5842, <16 x i8> %5845, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5847 = zext <32 x i8> %5846 to <32 x i16>
  %5848 = mul <32 x i16> %4039, %5847
  %5849 = getelementptr inbounds i8, i8* %5831, i64 2
  %5850 = bitcast i8* %5849 to <16 x i8>*
  %5851 = load <16 x i8>, <16 x i8>* %5850, align 2, !tbaa !395
  %5852 = getelementptr inbounds i8, i8* %5831, i64 18
  %5853 = bitcast i8* %5852 to <16 x i8>*
  %5854 = load <16 x i8>, <16 x i8>* %5853, align 2, !tbaa !395
  %5855 = shufflevector <16 x i8> %5851, <16 x i8> %5854, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5856 = zext <32 x i8> %5855 to <32 x i16>
  %5857 = mul <32 x i16> %4043, %5856
  %5858 = shl nsw i64 %5800, 5
  %5859 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5858
  %5860 = bitcast i8* %5859 to <16 x i8>*
  %5861 = load <16 x i8>, <16 x i8>* %5860, align 16, !tbaa !395
  %5862 = getelementptr inbounds i8, i8* %5859, i64 16
  %5863 = bitcast i8* %5862 to <16 x i8>*
  %5864 = load <16 x i8>, <16 x i8>* %5863, align 16, !tbaa !395
  %5865 = shufflevector <16 x i8> %5861, <16 x i8> %5864, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5866 = zext <32 x i8> %5865 to <32 x i16>
  %5867 = mul <32 x i16> %4047, %5866
  %5868 = getelementptr inbounds i8, i8* %5859, i64 2
  %5869 = bitcast i8* %5868 to <16 x i8>*
  %5870 = load <16 x i8>, <16 x i8>* %5869, align 2, !tbaa !395
  %5871 = getelementptr inbounds i8, i8* %5859, i64 18
  %5872 = bitcast i8* %5871 to <16 x i8>*
  %5873 = load <16 x i8>, <16 x i8>* %5872, align 2, !tbaa !395
  %5874 = shufflevector <16 x i8> %5870, <16 x i8> %5873, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5875 = zext <32 x i8> %5874 to <32 x i16>
  %5876 = mul <32 x i16> %4051, %5875
  %5877 = getelementptr inbounds i8, i8* %5859, i64 1
  %5878 = bitcast i8* %5877 to <16 x i8>*
  %5879 = load <16 x i8>, <16 x i8>* %5878, align 1, !tbaa !395
  %5880 = getelementptr inbounds i8, i8* %5859, i64 17
  %5881 = bitcast i8* %5880 to <16 x i8>*
  %5882 = load <16 x i8>, <16 x i8>* %5881, align 1, !tbaa !395
  %5883 = shufflevector <16 x i8> %5879, <16 x i8> %5882, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5884 = zext <32 x i8> %5883 to <32 x i16>
  %5885 = mul <32 x i16> %4055, %5884
  %5886 = add <32 x i16> %5820, %5812
  %5887 = add <32 x i16> %5886, %5829
  %5888 = add <32 x i16> %5887, %5839
  %5889 = add <32 x i16> %5888, %5848
  %5890 = add <32 x i16> %5889, %5857
  %5891 = add <32 x i16> %5890, %5867
  %5892 = add <32 x i16> %5891, %5876
  %5893 = add <32 x i16> %5892, %5885
  %t444.1 = ashr <32 x i16> %5893, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %5894 = bitcast <32 x i16> %t444.1 to <8 x i64>
  %5895 = shufflevector <8 x i64> %5894, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t445.1 = bitcast <2 x i64> %5895 to <8 x i16>
  %5896 = shufflevector <8 x i64> %5894, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t446.1 = bitcast <2 x i64> %5896 to <8 x i16>
  %5897 = shufflevector <8 x i64> %5894, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t447.1 = bitcast <2 x i64> %5897 to <8 x i16>
  %5898 = shufflevector <8 x i64> %5894, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t448.1 = bitcast <2 x i64> %5898 to <8 x i16>
  %5899 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t445.1) #11
  %5900 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t446.1) #11
  %5901 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t447.1) #11
  %5902 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t448.1) #11
  %5903 = shufflevector <8 x i8> %5899, <8 x i8> %5900, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5904 = shufflevector <8 x i8> %5901, <8 x i8> %5902, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %5905 = shufflevector <16 x i8> %5903, <16 x i8> %5904, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5906 = bitcast <32 x i8> %5905 to <4 x i64>
  %5907 = shufflevector <4 x i64> %5906, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %5908 = shufflevector <4 x i64> %5906, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %5909 = add nsw i64 %5685, 32
  %5910 = getelementptr inbounds i8, i8* %125, i64 %5909
  %5911 = bitcast i8* %5910 to <2 x i64>*
  store <2 x i64> %5907, <2 x i64>* %5911, align 1, !tbaa !399
  %5912 = getelementptr inbounds i8, i8* %5910, i64 16
  %5913 = bitcast i8* %5912 to <2 x i64>*
  store <2 x i64> %5908, <2 x i64>* %5913, align 1, !tbaa !399
  %t363252 = add nsw i32 %4063, %4072
  %5914 = add nsw i64 %4073, %231
  %5915 = sext i32 %t363252 to i64
  %5916 = add nsw i64 %5914, %221
  %5917 = add nsw i64 %5914, %222
  %5918 = shl nsw i64 %5917, 5
  %5919 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5918
  %5920 = getelementptr inbounds i8, i8* %5919, i64 1
  %5921 = bitcast i8* %5920 to <16 x i8>*
  %5922 = load <16 x i8>, <16 x i8>* %5921, align 1, !tbaa !395
  %5923 = getelementptr inbounds i8, i8* %5919, i64 17
  %5924 = bitcast i8* %5923 to <16 x i8>*
  %5925 = load <16 x i8>, <16 x i8>* %5924, align 1, !tbaa !395
  %5926 = shufflevector <16 x i8> %5922, <16 x i8> %5925, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5927 = zext <32 x i8> %5926 to <32 x i16>
  %5928 = mul <32 x i16> %4023, %5927
  %5929 = bitcast i8* %5919 to <16 x i8>*
  %5930 = load <16 x i8>, <16 x i8>* %5929, align 16, !tbaa !395
  %5931 = getelementptr inbounds i8, i8* %5919, i64 16
  %5932 = bitcast i8* %5931 to <16 x i8>*
  %5933 = load <16 x i8>, <16 x i8>* %5932, align 16, !tbaa !395
  %5934 = shufflevector <16 x i8> %5930, <16 x i8> %5933, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5935 = zext <32 x i8> %5934 to <32 x i16>
  %5936 = mul <32 x i16> %4027, %5935
  %5937 = getelementptr inbounds i8, i8* %5919, i64 2
  %5938 = bitcast i8* %5937 to <16 x i8>*
  %5939 = load <16 x i8>, <16 x i8>* %5938, align 2, !tbaa !395
  %5940 = getelementptr inbounds i8, i8* %5919, i64 18
  %5941 = bitcast i8* %5940 to <16 x i8>*
  %5942 = load <16 x i8>, <16 x i8>* %5941, align 2, !tbaa !395
  %5943 = shufflevector <16 x i8> %5939, <16 x i8> %5942, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5944 = zext <32 x i8> %5943 to <32 x i16>
  %5945 = mul <32 x i16> %4031, %5944
  %5946 = shl nsw i64 %5914, 5
  %5947 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5946
  %5948 = bitcast i8* %5947 to <16 x i8>*
  %5949 = load <16 x i8>, <16 x i8>* %5948, align 16, !tbaa !395
  %5950 = getelementptr inbounds i8, i8* %5947, i64 16
  %5951 = bitcast i8* %5950 to <16 x i8>*
  %5952 = load <16 x i8>, <16 x i8>* %5951, align 16, !tbaa !395
  %5953 = shufflevector <16 x i8> %5949, <16 x i8> %5952, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5954 = zext <32 x i8> %5953 to <32 x i16>
  %5955 = mul <32 x i16> %4035, %5954
  %5956 = getelementptr inbounds i8, i8* %5947, i64 1
  %5957 = bitcast i8* %5956 to <16 x i8>*
  %5958 = load <16 x i8>, <16 x i8>* %5957, align 1, !tbaa !395
  %5959 = getelementptr inbounds i8, i8* %5947, i64 17
  %5960 = bitcast i8* %5959 to <16 x i8>*
  %5961 = load <16 x i8>, <16 x i8>* %5960, align 1, !tbaa !395
  %5962 = shufflevector <16 x i8> %5958, <16 x i8> %5961, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5963 = zext <32 x i8> %5962 to <32 x i16>
  %5964 = mul <32 x i16> %4039, %5963
  %5965 = getelementptr inbounds i8, i8* %5947, i64 2
  %5966 = bitcast i8* %5965 to <16 x i8>*
  %5967 = load <16 x i8>, <16 x i8>* %5966, align 2, !tbaa !395
  %5968 = getelementptr inbounds i8, i8* %5947, i64 18
  %5969 = bitcast i8* %5968 to <16 x i8>*
  %5970 = load <16 x i8>, <16 x i8>* %5969, align 2, !tbaa !395
  %5971 = shufflevector <16 x i8> %5967, <16 x i8> %5970, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5972 = zext <32 x i8> %5971 to <32 x i16>
  %5973 = mul <32 x i16> %4043, %5972
  %5974 = shl nsw i64 %5916, 5
  %5975 = getelementptr inbounds i8, i8* %input_bounded93, i64 %5974
  %5976 = bitcast i8* %5975 to <16 x i8>*
  %5977 = load <16 x i8>, <16 x i8>* %5976, align 16, !tbaa !395
  %5978 = getelementptr inbounds i8, i8* %5975, i64 16
  %5979 = bitcast i8* %5978 to <16 x i8>*
  %5980 = load <16 x i8>, <16 x i8>* %5979, align 16, !tbaa !395
  %5981 = shufflevector <16 x i8> %5977, <16 x i8> %5980, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5982 = zext <32 x i8> %5981 to <32 x i16>
  %5983 = mul <32 x i16> %4047, %5982
  %5984 = getelementptr inbounds i8, i8* %5975, i64 2
  %5985 = bitcast i8* %5984 to <16 x i8>*
  %5986 = load <16 x i8>, <16 x i8>* %5985, align 2, !tbaa !395
  %5987 = getelementptr inbounds i8, i8* %5975, i64 18
  %5988 = bitcast i8* %5987 to <16 x i8>*
  %5989 = load <16 x i8>, <16 x i8>* %5988, align 2, !tbaa !395
  %5990 = shufflevector <16 x i8> %5986, <16 x i8> %5989, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %5991 = zext <32 x i8> %5990 to <32 x i16>
  %5992 = mul <32 x i16> %4051, %5991
  %5993 = getelementptr inbounds i8, i8* %5975, i64 1
  %5994 = bitcast i8* %5993 to <16 x i8>*
  %5995 = load <16 x i8>, <16 x i8>* %5994, align 1, !tbaa !395
  %5996 = getelementptr inbounds i8, i8* %5975, i64 17
  %5997 = bitcast i8* %5996 to <16 x i8>*
  %5998 = load <16 x i8>, <16 x i8>* %5997, align 1, !tbaa !395
  %5999 = shufflevector <16 x i8> %5995, <16 x i8> %5998, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6000 = zext <32 x i8> %5999 to <32 x i16>
  %6001 = mul <32 x i16> %4055, %6000
  %6002 = add <32 x i16> %5936, %5928
  %6003 = add <32 x i16> %6002, %5945
  %6004 = add <32 x i16> %6003, %5955
  %6005 = add <32 x i16> %6004, %5964
  %6006 = add <32 x i16> %6005, %5973
  %6007 = add <32 x i16> %6006, %5983
  %6008 = add <32 x i16> %6007, %5992
  %6009 = add <32 x i16> %6008, %6001
  %t451 = ashr <32 x i16> %6009, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %6010 = bitcast <32 x i16> %t451 to <8 x i64>
  %6011 = shufflevector <8 x i64> %6010, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t452 = bitcast <2 x i64> %6011 to <8 x i16>
  %6012 = shufflevector <8 x i64> %6010, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t453 = bitcast <2 x i64> %6012 to <8 x i16>
  %6013 = shufflevector <8 x i64> %6010, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t454 = bitcast <2 x i64> %6013 to <8 x i16>
  %6014 = shufflevector <8 x i64> %6010, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t455 = bitcast <2 x i64> %6014 to <8 x i16>
  %6015 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t452) #11
  %6016 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t453) #11
  %6017 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t454) #11
  %6018 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t455) #11
  %6019 = shufflevector <8 x i8> %6015, <8 x i8> %6016, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6020 = shufflevector <8 x i8> %6017, <8 x i8> %6018, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6021 = shufflevector <16 x i8> %6019, <16 x i8> %6020, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6022 = bitcast <32 x i8> %6021 to <4 x i64>
  %6023 = shufflevector <4 x i64> %6022, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %6024 = shufflevector <4 x i64> %6022, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %6025 = getelementptr inbounds i8, i8* %125, i64 %5915
  %6026 = bitcast i8* %6025 to <2 x i64>*
  store <2 x i64> %6023, <2 x i64>* %6026, align 1, !tbaa !399
  %6027 = getelementptr inbounds i8, i8* %6025, i64 16
  %6028 = bitcast i8* %6027 to <2 x i64>*
  store <2 x i64> %6024, <2 x i64>* %6028, align 1, !tbaa !399
  %6029 = or i64 %5914, 1
  %6030 = add nsw i64 %6029, %221
  %6031 = add nsw i64 %6029, %222
  %6032 = shl nsw i64 %6031, 5
  %6033 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6032
  %6034 = getelementptr inbounds i8, i8* %6033, i64 1
  %6035 = bitcast i8* %6034 to <16 x i8>*
  %6036 = load <16 x i8>, <16 x i8>* %6035, align 1, !tbaa !395
  %6037 = getelementptr inbounds i8, i8* %6033, i64 17
  %6038 = bitcast i8* %6037 to <16 x i8>*
  %6039 = load <16 x i8>, <16 x i8>* %6038, align 1, !tbaa !395
  %6040 = shufflevector <16 x i8> %6036, <16 x i8> %6039, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6041 = zext <32 x i8> %6040 to <32 x i16>
  %6042 = mul <32 x i16> %4023, %6041
  %6043 = bitcast i8* %6033 to <16 x i8>*
  %6044 = load <16 x i8>, <16 x i8>* %6043, align 16, !tbaa !395
  %6045 = getelementptr inbounds i8, i8* %6033, i64 16
  %6046 = bitcast i8* %6045 to <16 x i8>*
  %6047 = load <16 x i8>, <16 x i8>* %6046, align 16, !tbaa !395
  %6048 = shufflevector <16 x i8> %6044, <16 x i8> %6047, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6049 = zext <32 x i8> %6048 to <32 x i16>
  %6050 = mul <32 x i16> %4027, %6049
  %6051 = getelementptr inbounds i8, i8* %6033, i64 2
  %6052 = bitcast i8* %6051 to <16 x i8>*
  %6053 = load <16 x i8>, <16 x i8>* %6052, align 2, !tbaa !395
  %6054 = getelementptr inbounds i8, i8* %6033, i64 18
  %6055 = bitcast i8* %6054 to <16 x i8>*
  %6056 = load <16 x i8>, <16 x i8>* %6055, align 2, !tbaa !395
  %6057 = shufflevector <16 x i8> %6053, <16 x i8> %6056, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6058 = zext <32 x i8> %6057 to <32 x i16>
  %6059 = mul <32 x i16> %4031, %6058
  %6060 = shl nsw i64 %6029, 5
  %6061 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6060
  %6062 = bitcast i8* %6061 to <16 x i8>*
  %6063 = load <16 x i8>, <16 x i8>* %6062, align 16, !tbaa !395
  %6064 = getelementptr inbounds i8, i8* %6061, i64 16
  %6065 = bitcast i8* %6064 to <16 x i8>*
  %6066 = load <16 x i8>, <16 x i8>* %6065, align 16, !tbaa !395
  %6067 = shufflevector <16 x i8> %6063, <16 x i8> %6066, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6068 = zext <32 x i8> %6067 to <32 x i16>
  %6069 = mul <32 x i16> %4035, %6068
  %6070 = getelementptr inbounds i8, i8* %6061, i64 1
  %6071 = bitcast i8* %6070 to <16 x i8>*
  %6072 = load <16 x i8>, <16 x i8>* %6071, align 1, !tbaa !395
  %6073 = getelementptr inbounds i8, i8* %6061, i64 17
  %6074 = bitcast i8* %6073 to <16 x i8>*
  %6075 = load <16 x i8>, <16 x i8>* %6074, align 1, !tbaa !395
  %6076 = shufflevector <16 x i8> %6072, <16 x i8> %6075, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6077 = zext <32 x i8> %6076 to <32 x i16>
  %6078 = mul <32 x i16> %4039, %6077
  %6079 = getelementptr inbounds i8, i8* %6061, i64 2
  %6080 = bitcast i8* %6079 to <16 x i8>*
  %6081 = load <16 x i8>, <16 x i8>* %6080, align 2, !tbaa !395
  %6082 = getelementptr inbounds i8, i8* %6061, i64 18
  %6083 = bitcast i8* %6082 to <16 x i8>*
  %6084 = load <16 x i8>, <16 x i8>* %6083, align 2, !tbaa !395
  %6085 = shufflevector <16 x i8> %6081, <16 x i8> %6084, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6086 = zext <32 x i8> %6085 to <32 x i16>
  %6087 = mul <32 x i16> %4043, %6086
  %6088 = shl nsw i64 %6030, 5
  %6089 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6088
  %6090 = bitcast i8* %6089 to <16 x i8>*
  %6091 = load <16 x i8>, <16 x i8>* %6090, align 16, !tbaa !395
  %6092 = getelementptr inbounds i8, i8* %6089, i64 16
  %6093 = bitcast i8* %6092 to <16 x i8>*
  %6094 = load <16 x i8>, <16 x i8>* %6093, align 16, !tbaa !395
  %6095 = shufflevector <16 x i8> %6091, <16 x i8> %6094, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6096 = zext <32 x i8> %6095 to <32 x i16>
  %6097 = mul <32 x i16> %4047, %6096
  %6098 = getelementptr inbounds i8, i8* %6089, i64 2
  %6099 = bitcast i8* %6098 to <16 x i8>*
  %6100 = load <16 x i8>, <16 x i8>* %6099, align 2, !tbaa !395
  %6101 = getelementptr inbounds i8, i8* %6089, i64 18
  %6102 = bitcast i8* %6101 to <16 x i8>*
  %6103 = load <16 x i8>, <16 x i8>* %6102, align 2, !tbaa !395
  %6104 = shufflevector <16 x i8> %6100, <16 x i8> %6103, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6105 = zext <32 x i8> %6104 to <32 x i16>
  %6106 = mul <32 x i16> %4051, %6105
  %6107 = getelementptr inbounds i8, i8* %6089, i64 1
  %6108 = bitcast i8* %6107 to <16 x i8>*
  %6109 = load <16 x i8>, <16 x i8>* %6108, align 1, !tbaa !395
  %6110 = getelementptr inbounds i8, i8* %6089, i64 17
  %6111 = bitcast i8* %6110 to <16 x i8>*
  %6112 = load <16 x i8>, <16 x i8>* %6111, align 1, !tbaa !395
  %6113 = shufflevector <16 x i8> %6109, <16 x i8> %6112, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6114 = zext <32 x i8> %6113 to <32 x i16>
  %6115 = mul <32 x i16> %4055, %6114
  %6116 = add <32 x i16> %6050, %6042
  %6117 = add <32 x i16> %6116, %6059
  %6118 = add <32 x i16> %6117, %6069
  %6119 = add <32 x i16> %6118, %6078
  %6120 = add <32 x i16> %6119, %6087
  %6121 = add <32 x i16> %6120, %6097
  %6122 = add <32 x i16> %6121, %6106
  %6123 = add <32 x i16> %6122, %6115
  %t451.1 = ashr <32 x i16> %6123, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %6124 = bitcast <32 x i16> %t451.1 to <8 x i64>
  %6125 = shufflevector <8 x i64> %6124, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t452.1 = bitcast <2 x i64> %6125 to <8 x i16>
  %6126 = shufflevector <8 x i64> %6124, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t453.1 = bitcast <2 x i64> %6126 to <8 x i16>
  %6127 = shufflevector <8 x i64> %6124, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t454.1 = bitcast <2 x i64> %6127 to <8 x i16>
  %6128 = shufflevector <8 x i64> %6124, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t455.1 = bitcast <2 x i64> %6128 to <8 x i16>
  %6129 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t452.1) #11
  %6130 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t453.1) #11
  %6131 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t454.1) #11
  %6132 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t455.1) #11
  %6133 = shufflevector <8 x i8> %6129, <8 x i8> %6130, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6134 = shufflevector <8 x i8> %6131, <8 x i8> %6132, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6135 = shufflevector <16 x i8> %6133, <16 x i8> %6134, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6136 = bitcast <32 x i8> %6135 to <4 x i64>
  %6137 = shufflevector <4 x i64> %6136, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %6138 = shufflevector <4 x i64> %6136, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %6139 = add nsw i64 %5915, 32
  %6140 = getelementptr inbounds i8, i8* %125, i64 %6139
  %6141 = bitcast i8* %6140 to <2 x i64>*
  store <2 x i64> %6137, <2 x i64>* %6141, align 1, !tbaa !399
  %6142 = getelementptr inbounds i8, i8* %6140, i64 16
  %6143 = bitcast i8* %6142 to <2 x i64>*
  store <2 x i64> %6138, <2 x i64>* %6143, align 1, !tbaa !399
  %t365260 = add nsw i32 %4064, %4072
  %6144 = add nsw i64 %4073, %230
  %6145 = sext i32 %t365260 to i64
  %6146 = add nsw i64 %6144, %221
  %6147 = add nsw i64 %6144, %222
  %6148 = shl nsw i64 %6147, 5
  %6149 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6148
  %6150 = getelementptr inbounds i8, i8* %6149, i64 1
  %6151 = bitcast i8* %6150 to <16 x i8>*
  %6152 = load <16 x i8>, <16 x i8>* %6151, align 1, !tbaa !395
  %6153 = getelementptr inbounds i8, i8* %6149, i64 17
  %6154 = bitcast i8* %6153 to <16 x i8>*
  %6155 = load <16 x i8>, <16 x i8>* %6154, align 1, !tbaa !395
  %6156 = shufflevector <16 x i8> %6152, <16 x i8> %6155, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6157 = zext <32 x i8> %6156 to <32 x i16>
  %6158 = mul <32 x i16> %4023, %6157
  %6159 = bitcast i8* %6149 to <16 x i8>*
  %6160 = load <16 x i8>, <16 x i8>* %6159, align 16, !tbaa !395
  %6161 = getelementptr inbounds i8, i8* %6149, i64 16
  %6162 = bitcast i8* %6161 to <16 x i8>*
  %6163 = load <16 x i8>, <16 x i8>* %6162, align 16, !tbaa !395
  %6164 = shufflevector <16 x i8> %6160, <16 x i8> %6163, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6165 = zext <32 x i8> %6164 to <32 x i16>
  %6166 = mul <32 x i16> %4027, %6165
  %6167 = getelementptr inbounds i8, i8* %6149, i64 2
  %6168 = bitcast i8* %6167 to <16 x i8>*
  %6169 = load <16 x i8>, <16 x i8>* %6168, align 2, !tbaa !395
  %6170 = getelementptr inbounds i8, i8* %6149, i64 18
  %6171 = bitcast i8* %6170 to <16 x i8>*
  %6172 = load <16 x i8>, <16 x i8>* %6171, align 2, !tbaa !395
  %6173 = shufflevector <16 x i8> %6169, <16 x i8> %6172, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6174 = zext <32 x i8> %6173 to <32 x i16>
  %6175 = mul <32 x i16> %4031, %6174
  %6176 = shl nsw i64 %6144, 5
  %6177 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6176
  %6178 = bitcast i8* %6177 to <16 x i8>*
  %6179 = load <16 x i8>, <16 x i8>* %6178, align 16, !tbaa !395
  %6180 = getelementptr inbounds i8, i8* %6177, i64 16
  %6181 = bitcast i8* %6180 to <16 x i8>*
  %6182 = load <16 x i8>, <16 x i8>* %6181, align 16, !tbaa !395
  %6183 = shufflevector <16 x i8> %6179, <16 x i8> %6182, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6184 = zext <32 x i8> %6183 to <32 x i16>
  %6185 = mul <32 x i16> %4035, %6184
  %6186 = getelementptr inbounds i8, i8* %6177, i64 1
  %6187 = bitcast i8* %6186 to <16 x i8>*
  %6188 = load <16 x i8>, <16 x i8>* %6187, align 1, !tbaa !395
  %6189 = getelementptr inbounds i8, i8* %6177, i64 17
  %6190 = bitcast i8* %6189 to <16 x i8>*
  %6191 = load <16 x i8>, <16 x i8>* %6190, align 1, !tbaa !395
  %6192 = shufflevector <16 x i8> %6188, <16 x i8> %6191, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6193 = zext <32 x i8> %6192 to <32 x i16>
  %6194 = mul <32 x i16> %4039, %6193
  %6195 = getelementptr inbounds i8, i8* %6177, i64 2
  %6196 = bitcast i8* %6195 to <16 x i8>*
  %6197 = load <16 x i8>, <16 x i8>* %6196, align 2, !tbaa !395
  %6198 = getelementptr inbounds i8, i8* %6177, i64 18
  %6199 = bitcast i8* %6198 to <16 x i8>*
  %6200 = load <16 x i8>, <16 x i8>* %6199, align 2, !tbaa !395
  %6201 = shufflevector <16 x i8> %6197, <16 x i8> %6200, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6202 = zext <32 x i8> %6201 to <32 x i16>
  %6203 = mul <32 x i16> %4043, %6202
  %6204 = shl nsw i64 %6146, 5
  %6205 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6204
  %6206 = bitcast i8* %6205 to <16 x i8>*
  %6207 = load <16 x i8>, <16 x i8>* %6206, align 16, !tbaa !395
  %6208 = getelementptr inbounds i8, i8* %6205, i64 16
  %6209 = bitcast i8* %6208 to <16 x i8>*
  %6210 = load <16 x i8>, <16 x i8>* %6209, align 16, !tbaa !395
  %6211 = shufflevector <16 x i8> %6207, <16 x i8> %6210, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6212 = zext <32 x i8> %6211 to <32 x i16>
  %6213 = mul <32 x i16> %4047, %6212
  %6214 = getelementptr inbounds i8, i8* %6205, i64 2
  %6215 = bitcast i8* %6214 to <16 x i8>*
  %6216 = load <16 x i8>, <16 x i8>* %6215, align 2, !tbaa !395
  %6217 = getelementptr inbounds i8, i8* %6205, i64 18
  %6218 = bitcast i8* %6217 to <16 x i8>*
  %6219 = load <16 x i8>, <16 x i8>* %6218, align 2, !tbaa !395
  %6220 = shufflevector <16 x i8> %6216, <16 x i8> %6219, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6221 = zext <32 x i8> %6220 to <32 x i16>
  %6222 = mul <32 x i16> %4051, %6221
  %6223 = getelementptr inbounds i8, i8* %6205, i64 1
  %6224 = bitcast i8* %6223 to <16 x i8>*
  %6225 = load <16 x i8>, <16 x i8>* %6224, align 1, !tbaa !395
  %6226 = getelementptr inbounds i8, i8* %6205, i64 17
  %6227 = bitcast i8* %6226 to <16 x i8>*
  %6228 = load <16 x i8>, <16 x i8>* %6227, align 1, !tbaa !395
  %6229 = shufflevector <16 x i8> %6225, <16 x i8> %6228, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6230 = zext <32 x i8> %6229 to <32 x i16>
  %6231 = mul <32 x i16> %4055, %6230
  %6232 = add <32 x i16> %6166, %6158
  %6233 = add <32 x i16> %6232, %6175
  %6234 = add <32 x i16> %6233, %6185
  %6235 = add <32 x i16> %6234, %6194
  %6236 = add <32 x i16> %6235, %6203
  %6237 = add <32 x i16> %6236, %6213
  %6238 = add <32 x i16> %6237, %6222
  %6239 = add <32 x i16> %6238, %6231
  %t458 = ashr <32 x i16> %6239, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %6240 = bitcast <32 x i16> %t458 to <8 x i64>
  %6241 = shufflevector <8 x i64> %6240, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t459 = bitcast <2 x i64> %6241 to <8 x i16>
  %6242 = shufflevector <8 x i64> %6240, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t460 = bitcast <2 x i64> %6242 to <8 x i16>
  %6243 = shufflevector <8 x i64> %6240, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t461 = bitcast <2 x i64> %6243 to <8 x i16>
  %6244 = shufflevector <8 x i64> %6240, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t462 = bitcast <2 x i64> %6244 to <8 x i16>
  %6245 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t459) #11
  %6246 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t460) #11
  %6247 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t461) #11
  %6248 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t462) #11
  %6249 = shufflevector <8 x i8> %6245, <8 x i8> %6246, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6250 = shufflevector <8 x i8> %6247, <8 x i8> %6248, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6251 = shufflevector <16 x i8> %6249, <16 x i8> %6250, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6252 = bitcast <32 x i8> %6251 to <4 x i64>
  %6253 = shufflevector <4 x i64> %6252, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %6254 = shufflevector <4 x i64> %6252, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %6255 = getelementptr inbounds i8, i8* %125, i64 %6145
  %6256 = bitcast i8* %6255 to <2 x i64>*
  store <2 x i64> %6253, <2 x i64>* %6256, align 1, !tbaa !399
  %6257 = getelementptr inbounds i8, i8* %6255, i64 16
  %6258 = bitcast i8* %6257 to <2 x i64>*
  store <2 x i64> %6254, <2 x i64>* %6258, align 1, !tbaa !399
  %6259 = or i64 %6144, 1
  %6260 = add nsw i64 %6259, %221
  %6261 = add nsw i64 %6259, %222
  %6262 = shl nsw i64 %6261, 5
  %6263 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6262
  %6264 = getelementptr inbounds i8, i8* %6263, i64 1
  %6265 = bitcast i8* %6264 to <16 x i8>*
  %6266 = load <16 x i8>, <16 x i8>* %6265, align 1, !tbaa !395
  %6267 = getelementptr inbounds i8, i8* %6263, i64 17
  %6268 = bitcast i8* %6267 to <16 x i8>*
  %6269 = load <16 x i8>, <16 x i8>* %6268, align 1, !tbaa !395
  %6270 = shufflevector <16 x i8> %6266, <16 x i8> %6269, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6271 = zext <32 x i8> %6270 to <32 x i16>
  %6272 = mul <32 x i16> %4023, %6271
  %6273 = bitcast i8* %6263 to <16 x i8>*
  %6274 = load <16 x i8>, <16 x i8>* %6273, align 16, !tbaa !395
  %6275 = getelementptr inbounds i8, i8* %6263, i64 16
  %6276 = bitcast i8* %6275 to <16 x i8>*
  %6277 = load <16 x i8>, <16 x i8>* %6276, align 16, !tbaa !395
  %6278 = shufflevector <16 x i8> %6274, <16 x i8> %6277, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6279 = zext <32 x i8> %6278 to <32 x i16>
  %6280 = mul <32 x i16> %4027, %6279
  %6281 = getelementptr inbounds i8, i8* %6263, i64 2
  %6282 = bitcast i8* %6281 to <16 x i8>*
  %6283 = load <16 x i8>, <16 x i8>* %6282, align 2, !tbaa !395
  %6284 = getelementptr inbounds i8, i8* %6263, i64 18
  %6285 = bitcast i8* %6284 to <16 x i8>*
  %6286 = load <16 x i8>, <16 x i8>* %6285, align 2, !tbaa !395
  %6287 = shufflevector <16 x i8> %6283, <16 x i8> %6286, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6288 = zext <32 x i8> %6287 to <32 x i16>
  %6289 = mul <32 x i16> %4031, %6288
  %6290 = shl nsw i64 %6259, 5
  %6291 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6290
  %6292 = bitcast i8* %6291 to <16 x i8>*
  %6293 = load <16 x i8>, <16 x i8>* %6292, align 16, !tbaa !395
  %6294 = getelementptr inbounds i8, i8* %6291, i64 16
  %6295 = bitcast i8* %6294 to <16 x i8>*
  %6296 = load <16 x i8>, <16 x i8>* %6295, align 16, !tbaa !395
  %6297 = shufflevector <16 x i8> %6293, <16 x i8> %6296, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6298 = zext <32 x i8> %6297 to <32 x i16>
  %6299 = mul <32 x i16> %4035, %6298
  %6300 = getelementptr inbounds i8, i8* %6291, i64 1
  %6301 = bitcast i8* %6300 to <16 x i8>*
  %6302 = load <16 x i8>, <16 x i8>* %6301, align 1, !tbaa !395
  %6303 = getelementptr inbounds i8, i8* %6291, i64 17
  %6304 = bitcast i8* %6303 to <16 x i8>*
  %6305 = load <16 x i8>, <16 x i8>* %6304, align 1, !tbaa !395
  %6306 = shufflevector <16 x i8> %6302, <16 x i8> %6305, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6307 = zext <32 x i8> %6306 to <32 x i16>
  %6308 = mul <32 x i16> %4039, %6307
  %6309 = getelementptr inbounds i8, i8* %6291, i64 2
  %6310 = bitcast i8* %6309 to <16 x i8>*
  %6311 = load <16 x i8>, <16 x i8>* %6310, align 2, !tbaa !395
  %6312 = getelementptr inbounds i8, i8* %6291, i64 18
  %6313 = bitcast i8* %6312 to <16 x i8>*
  %6314 = load <16 x i8>, <16 x i8>* %6313, align 2, !tbaa !395
  %6315 = shufflevector <16 x i8> %6311, <16 x i8> %6314, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6316 = zext <32 x i8> %6315 to <32 x i16>
  %6317 = mul <32 x i16> %4043, %6316
  %6318 = shl nsw i64 %6260, 5
  %6319 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6318
  %6320 = bitcast i8* %6319 to <16 x i8>*
  %6321 = load <16 x i8>, <16 x i8>* %6320, align 16, !tbaa !395
  %6322 = getelementptr inbounds i8, i8* %6319, i64 16
  %6323 = bitcast i8* %6322 to <16 x i8>*
  %6324 = load <16 x i8>, <16 x i8>* %6323, align 16, !tbaa !395
  %6325 = shufflevector <16 x i8> %6321, <16 x i8> %6324, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6326 = zext <32 x i8> %6325 to <32 x i16>
  %6327 = mul <32 x i16> %4047, %6326
  %6328 = getelementptr inbounds i8, i8* %6319, i64 2
  %6329 = bitcast i8* %6328 to <16 x i8>*
  %6330 = load <16 x i8>, <16 x i8>* %6329, align 2, !tbaa !395
  %6331 = getelementptr inbounds i8, i8* %6319, i64 18
  %6332 = bitcast i8* %6331 to <16 x i8>*
  %6333 = load <16 x i8>, <16 x i8>* %6332, align 2, !tbaa !395
  %6334 = shufflevector <16 x i8> %6330, <16 x i8> %6333, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6335 = zext <32 x i8> %6334 to <32 x i16>
  %6336 = mul <32 x i16> %4051, %6335
  %6337 = getelementptr inbounds i8, i8* %6319, i64 1
  %6338 = bitcast i8* %6337 to <16 x i8>*
  %6339 = load <16 x i8>, <16 x i8>* %6338, align 1, !tbaa !395
  %6340 = getelementptr inbounds i8, i8* %6319, i64 17
  %6341 = bitcast i8* %6340 to <16 x i8>*
  %6342 = load <16 x i8>, <16 x i8>* %6341, align 1, !tbaa !395
  %6343 = shufflevector <16 x i8> %6339, <16 x i8> %6342, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6344 = zext <32 x i8> %6343 to <32 x i16>
  %6345 = mul <32 x i16> %4055, %6344
  %6346 = add <32 x i16> %6280, %6272
  %6347 = add <32 x i16> %6346, %6289
  %6348 = add <32 x i16> %6347, %6299
  %6349 = add <32 x i16> %6348, %6308
  %6350 = add <32 x i16> %6349, %6317
  %6351 = add <32 x i16> %6350, %6327
  %6352 = add <32 x i16> %6351, %6336
  %6353 = add <32 x i16> %6352, %6345
  %t458.1 = ashr <32 x i16> %6353, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %6354 = bitcast <32 x i16> %t458.1 to <8 x i64>
  %6355 = shufflevector <8 x i64> %6354, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t459.1 = bitcast <2 x i64> %6355 to <8 x i16>
  %6356 = shufflevector <8 x i64> %6354, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t460.1 = bitcast <2 x i64> %6356 to <8 x i16>
  %6357 = shufflevector <8 x i64> %6354, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t461.1 = bitcast <2 x i64> %6357 to <8 x i16>
  %6358 = shufflevector <8 x i64> %6354, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t462.1 = bitcast <2 x i64> %6358 to <8 x i16>
  %6359 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t459.1) #11
  %6360 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t460.1) #11
  %6361 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t461.1) #11
  %6362 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t462.1) #11
  %6363 = shufflevector <8 x i8> %6359, <8 x i8> %6360, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6364 = shufflevector <8 x i8> %6361, <8 x i8> %6362, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6365 = shufflevector <16 x i8> %6363, <16 x i8> %6364, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6366 = bitcast <32 x i8> %6365 to <4 x i64>
  %6367 = shufflevector <4 x i64> %6366, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %6368 = shufflevector <4 x i64> %6366, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %6369 = add nsw i64 %6145, 32
  %6370 = getelementptr inbounds i8, i8* %125, i64 %6369
  %6371 = bitcast i8* %6370 to <2 x i64>*
  store <2 x i64> %6367, <2 x i64>* %6371, align 1, !tbaa !399
  %6372 = getelementptr inbounds i8, i8* %6370, i64 16
  %6373 = bitcast i8* %6372 to <2 x i64>*
  store <2 x i64> %6368, <2 x i64>* %6373, align 1, !tbaa !399
  %t367268 = add nsw i32 %4065, %4072
  %6374 = add nsw i64 %4073, %229
  %6375 = sext i32 %t367268 to i64
  %6376 = add nsw i64 %6374, %221
  %6377 = add nsw i64 %6374, %222
  %6378 = shl nsw i64 %6377, 5
  %6379 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6378
  %6380 = getelementptr inbounds i8, i8* %6379, i64 1
  %6381 = bitcast i8* %6380 to <16 x i8>*
  %6382 = load <16 x i8>, <16 x i8>* %6381, align 1, !tbaa !395
  %6383 = getelementptr inbounds i8, i8* %6379, i64 17
  %6384 = bitcast i8* %6383 to <16 x i8>*
  %6385 = load <16 x i8>, <16 x i8>* %6384, align 1, !tbaa !395
  %6386 = shufflevector <16 x i8> %6382, <16 x i8> %6385, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6387 = zext <32 x i8> %6386 to <32 x i16>
  %6388 = mul <32 x i16> %4023, %6387
  %6389 = bitcast i8* %6379 to <16 x i8>*
  %6390 = load <16 x i8>, <16 x i8>* %6389, align 16, !tbaa !395
  %6391 = getelementptr inbounds i8, i8* %6379, i64 16
  %6392 = bitcast i8* %6391 to <16 x i8>*
  %6393 = load <16 x i8>, <16 x i8>* %6392, align 16, !tbaa !395
  %6394 = shufflevector <16 x i8> %6390, <16 x i8> %6393, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6395 = zext <32 x i8> %6394 to <32 x i16>
  %6396 = mul <32 x i16> %4027, %6395
  %6397 = getelementptr inbounds i8, i8* %6379, i64 2
  %6398 = bitcast i8* %6397 to <16 x i8>*
  %6399 = load <16 x i8>, <16 x i8>* %6398, align 2, !tbaa !395
  %6400 = getelementptr inbounds i8, i8* %6379, i64 18
  %6401 = bitcast i8* %6400 to <16 x i8>*
  %6402 = load <16 x i8>, <16 x i8>* %6401, align 2, !tbaa !395
  %6403 = shufflevector <16 x i8> %6399, <16 x i8> %6402, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6404 = zext <32 x i8> %6403 to <32 x i16>
  %6405 = mul <32 x i16> %4031, %6404
  %6406 = shl nsw i64 %6374, 5
  %6407 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6406
  %6408 = bitcast i8* %6407 to <16 x i8>*
  %6409 = load <16 x i8>, <16 x i8>* %6408, align 16, !tbaa !395
  %6410 = getelementptr inbounds i8, i8* %6407, i64 16
  %6411 = bitcast i8* %6410 to <16 x i8>*
  %6412 = load <16 x i8>, <16 x i8>* %6411, align 16, !tbaa !395
  %6413 = shufflevector <16 x i8> %6409, <16 x i8> %6412, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6414 = zext <32 x i8> %6413 to <32 x i16>
  %6415 = mul <32 x i16> %4035, %6414
  %6416 = getelementptr inbounds i8, i8* %6407, i64 1
  %6417 = bitcast i8* %6416 to <16 x i8>*
  %6418 = load <16 x i8>, <16 x i8>* %6417, align 1, !tbaa !395
  %6419 = getelementptr inbounds i8, i8* %6407, i64 17
  %6420 = bitcast i8* %6419 to <16 x i8>*
  %6421 = load <16 x i8>, <16 x i8>* %6420, align 1, !tbaa !395
  %6422 = shufflevector <16 x i8> %6418, <16 x i8> %6421, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6423 = zext <32 x i8> %6422 to <32 x i16>
  %6424 = mul <32 x i16> %4039, %6423
  %6425 = getelementptr inbounds i8, i8* %6407, i64 2
  %6426 = bitcast i8* %6425 to <16 x i8>*
  %6427 = load <16 x i8>, <16 x i8>* %6426, align 2, !tbaa !395
  %6428 = getelementptr inbounds i8, i8* %6407, i64 18
  %6429 = bitcast i8* %6428 to <16 x i8>*
  %6430 = load <16 x i8>, <16 x i8>* %6429, align 2, !tbaa !395
  %6431 = shufflevector <16 x i8> %6427, <16 x i8> %6430, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6432 = zext <32 x i8> %6431 to <32 x i16>
  %6433 = mul <32 x i16> %4043, %6432
  %6434 = shl nsw i64 %6376, 5
  %6435 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6434
  %6436 = bitcast i8* %6435 to <16 x i8>*
  %6437 = load <16 x i8>, <16 x i8>* %6436, align 16, !tbaa !395
  %6438 = getelementptr inbounds i8, i8* %6435, i64 16
  %6439 = bitcast i8* %6438 to <16 x i8>*
  %6440 = load <16 x i8>, <16 x i8>* %6439, align 16, !tbaa !395
  %6441 = shufflevector <16 x i8> %6437, <16 x i8> %6440, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6442 = zext <32 x i8> %6441 to <32 x i16>
  %6443 = mul <32 x i16> %4047, %6442
  %6444 = getelementptr inbounds i8, i8* %6435, i64 2
  %6445 = bitcast i8* %6444 to <16 x i8>*
  %6446 = load <16 x i8>, <16 x i8>* %6445, align 2, !tbaa !395
  %6447 = getelementptr inbounds i8, i8* %6435, i64 18
  %6448 = bitcast i8* %6447 to <16 x i8>*
  %6449 = load <16 x i8>, <16 x i8>* %6448, align 2, !tbaa !395
  %6450 = shufflevector <16 x i8> %6446, <16 x i8> %6449, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6451 = zext <32 x i8> %6450 to <32 x i16>
  %6452 = mul <32 x i16> %4051, %6451
  %6453 = getelementptr inbounds i8, i8* %6435, i64 1
  %6454 = bitcast i8* %6453 to <16 x i8>*
  %6455 = load <16 x i8>, <16 x i8>* %6454, align 1, !tbaa !395
  %6456 = getelementptr inbounds i8, i8* %6435, i64 17
  %6457 = bitcast i8* %6456 to <16 x i8>*
  %6458 = load <16 x i8>, <16 x i8>* %6457, align 1, !tbaa !395
  %6459 = shufflevector <16 x i8> %6455, <16 x i8> %6458, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6460 = zext <32 x i8> %6459 to <32 x i16>
  %6461 = mul <32 x i16> %4055, %6460
  %6462 = add <32 x i16> %6396, %6388
  %6463 = add <32 x i16> %6462, %6405
  %6464 = add <32 x i16> %6463, %6415
  %6465 = add <32 x i16> %6464, %6424
  %6466 = add <32 x i16> %6465, %6433
  %6467 = add <32 x i16> %6466, %6443
  %6468 = add <32 x i16> %6467, %6452
  %6469 = add <32 x i16> %6468, %6461
  %t465 = ashr <32 x i16> %6469, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %6470 = bitcast <32 x i16> %t465 to <8 x i64>
  %6471 = shufflevector <8 x i64> %6470, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t466 = bitcast <2 x i64> %6471 to <8 x i16>
  %6472 = shufflevector <8 x i64> %6470, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t467 = bitcast <2 x i64> %6472 to <8 x i16>
  %6473 = shufflevector <8 x i64> %6470, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t468 = bitcast <2 x i64> %6473 to <8 x i16>
  %6474 = shufflevector <8 x i64> %6470, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t469 = bitcast <2 x i64> %6474 to <8 x i16>
  %6475 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t466) #11
  %6476 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t467) #11
  %6477 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t468) #11
  %6478 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t469) #11
  %6479 = shufflevector <8 x i8> %6475, <8 x i8> %6476, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6480 = shufflevector <8 x i8> %6477, <8 x i8> %6478, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6481 = shufflevector <16 x i8> %6479, <16 x i8> %6480, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6482 = bitcast <32 x i8> %6481 to <4 x i64>
  %6483 = shufflevector <4 x i64> %6482, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %6484 = shufflevector <4 x i64> %6482, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %6485 = getelementptr inbounds i8, i8* %125, i64 %6375
  %6486 = bitcast i8* %6485 to <2 x i64>*
  store <2 x i64> %6483, <2 x i64>* %6486, align 1, !tbaa !399
  %6487 = getelementptr inbounds i8, i8* %6485, i64 16
  %6488 = bitcast i8* %6487 to <2 x i64>*
  store <2 x i64> %6484, <2 x i64>* %6488, align 1, !tbaa !399
  %6489 = or i64 %6374, 1
  %6490 = add nsw i64 %6489, %221
  %6491 = add nsw i64 %6489, %222
  %6492 = shl nsw i64 %6491, 5
  %6493 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6492
  %6494 = getelementptr inbounds i8, i8* %6493, i64 1
  %6495 = bitcast i8* %6494 to <16 x i8>*
  %6496 = load <16 x i8>, <16 x i8>* %6495, align 1, !tbaa !395
  %6497 = getelementptr inbounds i8, i8* %6493, i64 17
  %6498 = bitcast i8* %6497 to <16 x i8>*
  %6499 = load <16 x i8>, <16 x i8>* %6498, align 1, !tbaa !395
  %6500 = shufflevector <16 x i8> %6496, <16 x i8> %6499, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6501 = zext <32 x i8> %6500 to <32 x i16>
  %6502 = mul <32 x i16> %4023, %6501
  %6503 = bitcast i8* %6493 to <16 x i8>*
  %6504 = load <16 x i8>, <16 x i8>* %6503, align 16, !tbaa !395
  %6505 = getelementptr inbounds i8, i8* %6493, i64 16
  %6506 = bitcast i8* %6505 to <16 x i8>*
  %6507 = load <16 x i8>, <16 x i8>* %6506, align 16, !tbaa !395
  %6508 = shufflevector <16 x i8> %6504, <16 x i8> %6507, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6509 = zext <32 x i8> %6508 to <32 x i16>
  %6510 = mul <32 x i16> %4027, %6509
  %6511 = getelementptr inbounds i8, i8* %6493, i64 2
  %6512 = bitcast i8* %6511 to <16 x i8>*
  %6513 = load <16 x i8>, <16 x i8>* %6512, align 2, !tbaa !395
  %6514 = getelementptr inbounds i8, i8* %6493, i64 18
  %6515 = bitcast i8* %6514 to <16 x i8>*
  %6516 = load <16 x i8>, <16 x i8>* %6515, align 2, !tbaa !395
  %6517 = shufflevector <16 x i8> %6513, <16 x i8> %6516, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6518 = zext <32 x i8> %6517 to <32 x i16>
  %6519 = mul <32 x i16> %4031, %6518
  %6520 = shl nsw i64 %6489, 5
  %6521 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6520
  %6522 = bitcast i8* %6521 to <16 x i8>*
  %6523 = load <16 x i8>, <16 x i8>* %6522, align 16, !tbaa !395
  %6524 = getelementptr inbounds i8, i8* %6521, i64 16
  %6525 = bitcast i8* %6524 to <16 x i8>*
  %6526 = load <16 x i8>, <16 x i8>* %6525, align 16, !tbaa !395
  %6527 = shufflevector <16 x i8> %6523, <16 x i8> %6526, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6528 = zext <32 x i8> %6527 to <32 x i16>
  %6529 = mul <32 x i16> %4035, %6528
  %6530 = getelementptr inbounds i8, i8* %6521, i64 1
  %6531 = bitcast i8* %6530 to <16 x i8>*
  %6532 = load <16 x i8>, <16 x i8>* %6531, align 1, !tbaa !395
  %6533 = getelementptr inbounds i8, i8* %6521, i64 17
  %6534 = bitcast i8* %6533 to <16 x i8>*
  %6535 = load <16 x i8>, <16 x i8>* %6534, align 1, !tbaa !395
  %6536 = shufflevector <16 x i8> %6532, <16 x i8> %6535, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6537 = zext <32 x i8> %6536 to <32 x i16>
  %6538 = mul <32 x i16> %4039, %6537
  %6539 = getelementptr inbounds i8, i8* %6521, i64 2
  %6540 = bitcast i8* %6539 to <16 x i8>*
  %6541 = load <16 x i8>, <16 x i8>* %6540, align 2, !tbaa !395
  %6542 = getelementptr inbounds i8, i8* %6521, i64 18
  %6543 = bitcast i8* %6542 to <16 x i8>*
  %6544 = load <16 x i8>, <16 x i8>* %6543, align 2, !tbaa !395
  %6545 = shufflevector <16 x i8> %6541, <16 x i8> %6544, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6546 = zext <32 x i8> %6545 to <32 x i16>
  %6547 = mul <32 x i16> %4043, %6546
  %6548 = shl nsw i64 %6490, 5
  %6549 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6548
  %6550 = bitcast i8* %6549 to <16 x i8>*
  %6551 = load <16 x i8>, <16 x i8>* %6550, align 16, !tbaa !395
  %6552 = getelementptr inbounds i8, i8* %6549, i64 16
  %6553 = bitcast i8* %6552 to <16 x i8>*
  %6554 = load <16 x i8>, <16 x i8>* %6553, align 16, !tbaa !395
  %6555 = shufflevector <16 x i8> %6551, <16 x i8> %6554, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6556 = zext <32 x i8> %6555 to <32 x i16>
  %6557 = mul <32 x i16> %4047, %6556
  %6558 = getelementptr inbounds i8, i8* %6549, i64 2
  %6559 = bitcast i8* %6558 to <16 x i8>*
  %6560 = load <16 x i8>, <16 x i8>* %6559, align 2, !tbaa !395
  %6561 = getelementptr inbounds i8, i8* %6549, i64 18
  %6562 = bitcast i8* %6561 to <16 x i8>*
  %6563 = load <16 x i8>, <16 x i8>* %6562, align 2, !tbaa !395
  %6564 = shufflevector <16 x i8> %6560, <16 x i8> %6563, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6565 = zext <32 x i8> %6564 to <32 x i16>
  %6566 = mul <32 x i16> %4051, %6565
  %6567 = getelementptr inbounds i8, i8* %6549, i64 1
  %6568 = bitcast i8* %6567 to <16 x i8>*
  %6569 = load <16 x i8>, <16 x i8>* %6568, align 1, !tbaa !395
  %6570 = getelementptr inbounds i8, i8* %6549, i64 17
  %6571 = bitcast i8* %6570 to <16 x i8>*
  %6572 = load <16 x i8>, <16 x i8>* %6571, align 1, !tbaa !395
  %6573 = shufflevector <16 x i8> %6569, <16 x i8> %6572, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6574 = zext <32 x i8> %6573 to <32 x i16>
  %6575 = mul <32 x i16> %4055, %6574
  %6576 = add <32 x i16> %6510, %6502
  %6577 = add <32 x i16> %6576, %6519
  %6578 = add <32 x i16> %6577, %6529
  %6579 = add <32 x i16> %6578, %6538
  %6580 = add <32 x i16> %6579, %6547
  %6581 = add <32 x i16> %6580, %6557
  %6582 = add <32 x i16> %6581, %6566
  %6583 = add <32 x i16> %6582, %6575
  %t465.1 = ashr <32 x i16> %6583, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %6584 = bitcast <32 x i16> %t465.1 to <8 x i64>
  %6585 = shufflevector <8 x i64> %6584, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t466.1 = bitcast <2 x i64> %6585 to <8 x i16>
  %6586 = shufflevector <8 x i64> %6584, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t467.1 = bitcast <2 x i64> %6586 to <8 x i16>
  %6587 = shufflevector <8 x i64> %6584, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t468.1 = bitcast <2 x i64> %6587 to <8 x i16>
  %6588 = shufflevector <8 x i64> %6584, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t469.1 = bitcast <2 x i64> %6588 to <8 x i16>
  %6589 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t466.1) #11
  %6590 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t467.1) #11
  %6591 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t468.1) #11
  %6592 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t469.1) #11
  %6593 = shufflevector <8 x i8> %6589, <8 x i8> %6590, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6594 = shufflevector <8 x i8> %6591, <8 x i8> %6592, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6595 = shufflevector <16 x i8> %6593, <16 x i8> %6594, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6596 = bitcast <32 x i8> %6595 to <4 x i64>
  %6597 = shufflevector <4 x i64> %6596, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %6598 = shufflevector <4 x i64> %6596, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %6599 = add nsw i64 %6375, 32
  %6600 = getelementptr inbounds i8, i8* %125, i64 %6599
  %6601 = bitcast i8* %6600 to <2 x i64>*
  store <2 x i64> %6597, <2 x i64>* %6601, align 1, !tbaa !399
  %6602 = getelementptr inbounds i8, i8* %6600, i64 16
  %6603 = bitcast i8* %6602 to <2 x i64>*
  store <2 x i64> %6598, <2 x i64>* %6603, align 1, !tbaa !399
  %t369276 = add nsw i32 %4066, %4072
  %6604 = add nsw i64 %4073, %228
  %6605 = sext i32 %t369276 to i64
  %6606 = add nsw i64 %6604, %221
  %6607 = add nsw i64 %6604, %222
  %6608 = shl nsw i64 %6607, 5
  %6609 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6608
  %6610 = getelementptr inbounds i8, i8* %6609, i64 1
  %6611 = bitcast i8* %6610 to <16 x i8>*
  %6612 = load <16 x i8>, <16 x i8>* %6611, align 1, !tbaa !395
  %6613 = getelementptr inbounds i8, i8* %6609, i64 17
  %6614 = bitcast i8* %6613 to <16 x i8>*
  %6615 = load <16 x i8>, <16 x i8>* %6614, align 1, !tbaa !395
  %6616 = shufflevector <16 x i8> %6612, <16 x i8> %6615, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6617 = zext <32 x i8> %6616 to <32 x i16>
  %6618 = mul <32 x i16> %4023, %6617
  %6619 = bitcast i8* %6609 to <16 x i8>*
  %6620 = load <16 x i8>, <16 x i8>* %6619, align 16, !tbaa !395
  %6621 = getelementptr inbounds i8, i8* %6609, i64 16
  %6622 = bitcast i8* %6621 to <16 x i8>*
  %6623 = load <16 x i8>, <16 x i8>* %6622, align 16, !tbaa !395
  %6624 = shufflevector <16 x i8> %6620, <16 x i8> %6623, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6625 = zext <32 x i8> %6624 to <32 x i16>
  %6626 = mul <32 x i16> %4027, %6625
  %6627 = getelementptr inbounds i8, i8* %6609, i64 2
  %6628 = bitcast i8* %6627 to <16 x i8>*
  %6629 = load <16 x i8>, <16 x i8>* %6628, align 2, !tbaa !395
  %6630 = getelementptr inbounds i8, i8* %6609, i64 18
  %6631 = bitcast i8* %6630 to <16 x i8>*
  %6632 = load <16 x i8>, <16 x i8>* %6631, align 2, !tbaa !395
  %6633 = shufflevector <16 x i8> %6629, <16 x i8> %6632, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6634 = zext <32 x i8> %6633 to <32 x i16>
  %6635 = mul <32 x i16> %4031, %6634
  %6636 = shl nsw i64 %6604, 5
  %6637 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6636
  %6638 = bitcast i8* %6637 to <16 x i8>*
  %6639 = load <16 x i8>, <16 x i8>* %6638, align 16, !tbaa !395
  %6640 = getelementptr inbounds i8, i8* %6637, i64 16
  %6641 = bitcast i8* %6640 to <16 x i8>*
  %6642 = load <16 x i8>, <16 x i8>* %6641, align 16, !tbaa !395
  %6643 = shufflevector <16 x i8> %6639, <16 x i8> %6642, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6644 = zext <32 x i8> %6643 to <32 x i16>
  %6645 = mul <32 x i16> %4035, %6644
  %6646 = getelementptr inbounds i8, i8* %6637, i64 1
  %6647 = bitcast i8* %6646 to <16 x i8>*
  %6648 = load <16 x i8>, <16 x i8>* %6647, align 1, !tbaa !395
  %6649 = getelementptr inbounds i8, i8* %6637, i64 17
  %6650 = bitcast i8* %6649 to <16 x i8>*
  %6651 = load <16 x i8>, <16 x i8>* %6650, align 1, !tbaa !395
  %6652 = shufflevector <16 x i8> %6648, <16 x i8> %6651, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6653 = zext <32 x i8> %6652 to <32 x i16>
  %6654 = mul <32 x i16> %4039, %6653
  %6655 = getelementptr inbounds i8, i8* %6637, i64 2
  %6656 = bitcast i8* %6655 to <16 x i8>*
  %6657 = load <16 x i8>, <16 x i8>* %6656, align 2, !tbaa !395
  %6658 = getelementptr inbounds i8, i8* %6637, i64 18
  %6659 = bitcast i8* %6658 to <16 x i8>*
  %6660 = load <16 x i8>, <16 x i8>* %6659, align 2, !tbaa !395
  %6661 = shufflevector <16 x i8> %6657, <16 x i8> %6660, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6662 = zext <32 x i8> %6661 to <32 x i16>
  %6663 = mul <32 x i16> %4043, %6662
  %6664 = shl nsw i64 %6606, 5
  %6665 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6664
  %6666 = bitcast i8* %6665 to <16 x i8>*
  %6667 = load <16 x i8>, <16 x i8>* %6666, align 16, !tbaa !395
  %6668 = getelementptr inbounds i8, i8* %6665, i64 16
  %6669 = bitcast i8* %6668 to <16 x i8>*
  %6670 = load <16 x i8>, <16 x i8>* %6669, align 16, !tbaa !395
  %6671 = shufflevector <16 x i8> %6667, <16 x i8> %6670, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6672 = zext <32 x i8> %6671 to <32 x i16>
  %6673 = mul <32 x i16> %4047, %6672
  %6674 = getelementptr inbounds i8, i8* %6665, i64 2
  %6675 = bitcast i8* %6674 to <16 x i8>*
  %6676 = load <16 x i8>, <16 x i8>* %6675, align 2, !tbaa !395
  %6677 = getelementptr inbounds i8, i8* %6665, i64 18
  %6678 = bitcast i8* %6677 to <16 x i8>*
  %6679 = load <16 x i8>, <16 x i8>* %6678, align 2, !tbaa !395
  %6680 = shufflevector <16 x i8> %6676, <16 x i8> %6679, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6681 = zext <32 x i8> %6680 to <32 x i16>
  %6682 = mul <32 x i16> %4051, %6681
  %6683 = getelementptr inbounds i8, i8* %6665, i64 1
  %6684 = bitcast i8* %6683 to <16 x i8>*
  %6685 = load <16 x i8>, <16 x i8>* %6684, align 1, !tbaa !395
  %6686 = getelementptr inbounds i8, i8* %6665, i64 17
  %6687 = bitcast i8* %6686 to <16 x i8>*
  %6688 = load <16 x i8>, <16 x i8>* %6687, align 1, !tbaa !395
  %6689 = shufflevector <16 x i8> %6685, <16 x i8> %6688, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6690 = zext <32 x i8> %6689 to <32 x i16>
  %6691 = mul <32 x i16> %4055, %6690
  %6692 = add <32 x i16> %6626, %6618
  %6693 = add <32 x i16> %6692, %6635
  %6694 = add <32 x i16> %6693, %6645
  %6695 = add <32 x i16> %6694, %6654
  %6696 = add <32 x i16> %6695, %6663
  %6697 = add <32 x i16> %6696, %6673
  %6698 = add <32 x i16> %6697, %6682
  %6699 = add <32 x i16> %6698, %6691
  %t472 = ashr <32 x i16> %6699, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %6700 = bitcast <32 x i16> %t472 to <8 x i64>
  %6701 = shufflevector <8 x i64> %6700, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t473 = bitcast <2 x i64> %6701 to <8 x i16>
  %6702 = shufflevector <8 x i64> %6700, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t474 = bitcast <2 x i64> %6702 to <8 x i16>
  %6703 = shufflevector <8 x i64> %6700, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t475 = bitcast <2 x i64> %6703 to <8 x i16>
  %6704 = shufflevector <8 x i64> %6700, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t476 = bitcast <2 x i64> %6704 to <8 x i16>
  %6705 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t473) #11
  %6706 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t474) #11
  %6707 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t475) #11
  %6708 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t476) #11
  %6709 = shufflevector <8 x i8> %6705, <8 x i8> %6706, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6710 = shufflevector <8 x i8> %6707, <8 x i8> %6708, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6711 = shufflevector <16 x i8> %6709, <16 x i8> %6710, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6712 = bitcast <32 x i8> %6711 to <4 x i64>
  %6713 = shufflevector <4 x i64> %6712, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %6714 = shufflevector <4 x i64> %6712, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %6715 = getelementptr inbounds i8, i8* %125, i64 %6605
  %6716 = bitcast i8* %6715 to <2 x i64>*
  store <2 x i64> %6713, <2 x i64>* %6716, align 1, !tbaa !399
  %6717 = getelementptr inbounds i8, i8* %6715, i64 16
  %6718 = bitcast i8* %6717 to <2 x i64>*
  store <2 x i64> %6714, <2 x i64>* %6718, align 1, !tbaa !399
  %6719 = or i64 %6604, 1
  %6720 = add nsw i64 %6719, %221
  %6721 = add nsw i64 %6719, %222
  %6722 = shl nsw i64 %6721, 5
  %6723 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6722
  %6724 = getelementptr inbounds i8, i8* %6723, i64 1
  %6725 = bitcast i8* %6724 to <16 x i8>*
  %6726 = load <16 x i8>, <16 x i8>* %6725, align 1, !tbaa !395
  %6727 = getelementptr inbounds i8, i8* %6723, i64 17
  %6728 = bitcast i8* %6727 to <16 x i8>*
  %6729 = load <16 x i8>, <16 x i8>* %6728, align 1, !tbaa !395
  %6730 = shufflevector <16 x i8> %6726, <16 x i8> %6729, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6731 = zext <32 x i8> %6730 to <32 x i16>
  %6732 = mul <32 x i16> %4023, %6731
  %6733 = bitcast i8* %6723 to <16 x i8>*
  %6734 = load <16 x i8>, <16 x i8>* %6733, align 16, !tbaa !395
  %6735 = getelementptr inbounds i8, i8* %6723, i64 16
  %6736 = bitcast i8* %6735 to <16 x i8>*
  %6737 = load <16 x i8>, <16 x i8>* %6736, align 16, !tbaa !395
  %6738 = shufflevector <16 x i8> %6734, <16 x i8> %6737, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6739 = zext <32 x i8> %6738 to <32 x i16>
  %6740 = mul <32 x i16> %4027, %6739
  %6741 = getelementptr inbounds i8, i8* %6723, i64 2
  %6742 = bitcast i8* %6741 to <16 x i8>*
  %6743 = load <16 x i8>, <16 x i8>* %6742, align 2, !tbaa !395
  %6744 = getelementptr inbounds i8, i8* %6723, i64 18
  %6745 = bitcast i8* %6744 to <16 x i8>*
  %6746 = load <16 x i8>, <16 x i8>* %6745, align 2, !tbaa !395
  %6747 = shufflevector <16 x i8> %6743, <16 x i8> %6746, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6748 = zext <32 x i8> %6747 to <32 x i16>
  %6749 = mul <32 x i16> %4031, %6748
  %6750 = shl nsw i64 %6719, 5
  %6751 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6750
  %6752 = bitcast i8* %6751 to <16 x i8>*
  %6753 = load <16 x i8>, <16 x i8>* %6752, align 16, !tbaa !395
  %6754 = getelementptr inbounds i8, i8* %6751, i64 16
  %6755 = bitcast i8* %6754 to <16 x i8>*
  %6756 = load <16 x i8>, <16 x i8>* %6755, align 16, !tbaa !395
  %6757 = shufflevector <16 x i8> %6753, <16 x i8> %6756, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6758 = zext <32 x i8> %6757 to <32 x i16>
  %6759 = mul <32 x i16> %4035, %6758
  %6760 = getelementptr inbounds i8, i8* %6751, i64 1
  %6761 = bitcast i8* %6760 to <16 x i8>*
  %6762 = load <16 x i8>, <16 x i8>* %6761, align 1, !tbaa !395
  %6763 = getelementptr inbounds i8, i8* %6751, i64 17
  %6764 = bitcast i8* %6763 to <16 x i8>*
  %6765 = load <16 x i8>, <16 x i8>* %6764, align 1, !tbaa !395
  %6766 = shufflevector <16 x i8> %6762, <16 x i8> %6765, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6767 = zext <32 x i8> %6766 to <32 x i16>
  %6768 = mul <32 x i16> %4039, %6767
  %6769 = getelementptr inbounds i8, i8* %6751, i64 2
  %6770 = bitcast i8* %6769 to <16 x i8>*
  %6771 = load <16 x i8>, <16 x i8>* %6770, align 2, !tbaa !395
  %6772 = getelementptr inbounds i8, i8* %6751, i64 18
  %6773 = bitcast i8* %6772 to <16 x i8>*
  %6774 = load <16 x i8>, <16 x i8>* %6773, align 2, !tbaa !395
  %6775 = shufflevector <16 x i8> %6771, <16 x i8> %6774, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6776 = zext <32 x i8> %6775 to <32 x i16>
  %6777 = mul <32 x i16> %4043, %6776
  %6778 = shl nsw i64 %6720, 5
  %6779 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6778
  %6780 = bitcast i8* %6779 to <16 x i8>*
  %6781 = load <16 x i8>, <16 x i8>* %6780, align 16, !tbaa !395
  %6782 = getelementptr inbounds i8, i8* %6779, i64 16
  %6783 = bitcast i8* %6782 to <16 x i8>*
  %6784 = load <16 x i8>, <16 x i8>* %6783, align 16, !tbaa !395
  %6785 = shufflevector <16 x i8> %6781, <16 x i8> %6784, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6786 = zext <32 x i8> %6785 to <32 x i16>
  %6787 = mul <32 x i16> %4047, %6786
  %6788 = getelementptr inbounds i8, i8* %6779, i64 2
  %6789 = bitcast i8* %6788 to <16 x i8>*
  %6790 = load <16 x i8>, <16 x i8>* %6789, align 2, !tbaa !395
  %6791 = getelementptr inbounds i8, i8* %6779, i64 18
  %6792 = bitcast i8* %6791 to <16 x i8>*
  %6793 = load <16 x i8>, <16 x i8>* %6792, align 2, !tbaa !395
  %6794 = shufflevector <16 x i8> %6790, <16 x i8> %6793, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6795 = zext <32 x i8> %6794 to <32 x i16>
  %6796 = mul <32 x i16> %4051, %6795
  %6797 = getelementptr inbounds i8, i8* %6779, i64 1
  %6798 = bitcast i8* %6797 to <16 x i8>*
  %6799 = load <16 x i8>, <16 x i8>* %6798, align 1, !tbaa !395
  %6800 = getelementptr inbounds i8, i8* %6779, i64 17
  %6801 = bitcast i8* %6800 to <16 x i8>*
  %6802 = load <16 x i8>, <16 x i8>* %6801, align 1, !tbaa !395
  %6803 = shufflevector <16 x i8> %6799, <16 x i8> %6802, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6804 = zext <32 x i8> %6803 to <32 x i16>
  %6805 = mul <32 x i16> %4055, %6804
  %6806 = add <32 x i16> %6740, %6732
  %6807 = add <32 x i16> %6806, %6749
  %6808 = add <32 x i16> %6807, %6759
  %6809 = add <32 x i16> %6808, %6768
  %6810 = add <32 x i16> %6809, %6777
  %6811 = add <32 x i16> %6810, %6787
  %6812 = add <32 x i16> %6811, %6796
  %6813 = add <32 x i16> %6812, %6805
  %t472.1 = ashr <32 x i16> %6813, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %6814 = bitcast <32 x i16> %t472.1 to <8 x i64>
  %6815 = shufflevector <8 x i64> %6814, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t473.1 = bitcast <2 x i64> %6815 to <8 x i16>
  %6816 = shufflevector <8 x i64> %6814, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t474.1 = bitcast <2 x i64> %6816 to <8 x i16>
  %6817 = shufflevector <8 x i64> %6814, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t475.1 = bitcast <2 x i64> %6817 to <8 x i16>
  %6818 = shufflevector <8 x i64> %6814, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t476.1 = bitcast <2 x i64> %6818 to <8 x i16>
  %6819 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t473.1) #11
  %6820 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t474.1) #11
  %6821 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t475.1) #11
  %6822 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t476.1) #11
  %6823 = shufflevector <8 x i8> %6819, <8 x i8> %6820, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6824 = shufflevector <8 x i8> %6821, <8 x i8> %6822, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6825 = shufflevector <16 x i8> %6823, <16 x i8> %6824, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6826 = bitcast <32 x i8> %6825 to <4 x i64>
  %6827 = shufflevector <4 x i64> %6826, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %6828 = shufflevector <4 x i64> %6826, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %6829 = add nsw i64 %6605, 32
  %6830 = getelementptr inbounds i8, i8* %125, i64 %6829
  %6831 = bitcast i8* %6830 to <2 x i64>*
  store <2 x i64> %6827, <2 x i64>* %6831, align 1, !tbaa !399
  %6832 = getelementptr inbounds i8, i8* %6830, i64 16
  %6833 = bitcast i8* %6832 to <2 x i64>*
  store <2 x i64> %6828, <2 x i64>* %6833, align 1, !tbaa !399
  %t371284 = add nsw i32 %4067, %4072
  %6834 = add nsw i64 %4073, %227
  %6835 = sext i32 %t371284 to i64
  %6836 = add nsw i64 %6834, %221
  %6837 = add nsw i64 %6834, %222
  %6838 = shl nsw i64 %6837, 5
  %6839 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6838
  %6840 = getelementptr inbounds i8, i8* %6839, i64 1
  %6841 = bitcast i8* %6840 to <16 x i8>*
  %6842 = load <16 x i8>, <16 x i8>* %6841, align 1, !tbaa !395
  %6843 = getelementptr inbounds i8, i8* %6839, i64 17
  %6844 = bitcast i8* %6843 to <16 x i8>*
  %6845 = load <16 x i8>, <16 x i8>* %6844, align 1, !tbaa !395
  %6846 = shufflevector <16 x i8> %6842, <16 x i8> %6845, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6847 = zext <32 x i8> %6846 to <32 x i16>
  %6848 = mul <32 x i16> %4023, %6847
  %6849 = bitcast i8* %6839 to <16 x i8>*
  %6850 = load <16 x i8>, <16 x i8>* %6849, align 16, !tbaa !395
  %6851 = getelementptr inbounds i8, i8* %6839, i64 16
  %6852 = bitcast i8* %6851 to <16 x i8>*
  %6853 = load <16 x i8>, <16 x i8>* %6852, align 16, !tbaa !395
  %6854 = shufflevector <16 x i8> %6850, <16 x i8> %6853, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6855 = zext <32 x i8> %6854 to <32 x i16>
  %6856 = mul <32 x i16> %4027, %6855
  %6857 = getelementptr inbounds i8, i8* %6839, i64 2
  %6858 = bitcast i8* %6857 to <16 x i8>*
  %6859 = load <16 x i8>, <16 x i8>* %6858, align 2, !tbaa !395
  %6860 = getelementptr inbounds i8, i8* %6839, i64 18
  %6861 = bitcast i8* %6860 to <16 x i8>*
  %6862 = load <16 x i8>, <16 x i8>* %6861, align 2, !tbaa !395
  %6863 = shufflevector <16 x i8> %6859, <16 x i8> %6862, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6864 = zext <32 x i8> %6863 to <32 x i16>
  %6865 = mul <32 x i16> %4031, %6864
  %6866 = shl nsw i64 %6834, 5
  %6867 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6866
  %6868 = bitcast i8* %6867 to <16 x i8>*
  %6869 = load <16 x i8>, <16 x i8>* %6868, align 16, !tbaa !395
  %6870 = getelementptr inbounds i8, i8* %6867, i64 16
  %6871 = bitcast i8* %6870 to <16 x i8>*
  %6872 = load <16 x i8>, <16 x i8>* %6871, align 16, !tbaa !395
  %6873 = shufflevector <16 x i8> %6869, <16 x i8> %6872, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6874 = zext <32 x i8> %6873 to <32 x i16>
  %6875 = mul <32 x i16> %4035, %6874
  %6876 = getelementptr inbounds i8, i8* %6867, i64 1
  %6877 = bitcast i8* %6876 to <16 x i8>*
  %6878 = load <16 x i8>, <16 x i8>* %6877, align 1, !tbaa !395
  %6879 = getelementptr inbounds i8, i8* %6867, i64 17
  %6880 = bitcast i8* %6879 to <16 x i8>*
  %6881 = load <16 x i8>, <16 x i8>* %6880, align 1, !tbaa !395
  %6882 = shufflevector <16 x i8> %6878, <16 x i8> %6881, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6883 = zext <32 x i8> %6882 to <32 x i16>
  %6884 = mul <32 x i16> %4039, %6883
  %6885 = getelementptr inbounds i8, i8* %6867, i64 2
  %6886 = bitcast i8* %6885 to <16 x i8>*
  %6887 = load <16 x i8>, <16 x i8>* %6886, align 2, !tbaa !395
  %6888 = getelementptr inbounds i8, i8* %6867, i64 18
  %6889 = bitcast i8* %6888 to <16 x i8>*
  %6890 = load <16 x i8>, <16 x i8>* %6889, align 2, !tbaa !395
  %6891 = shufflevector <16 x i8> %6887, <16 x i8> %6890, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6892 = zext <32 x i8> %6891 to <32 x i16>
  %6893 = mul <32 x i16> %4043, %6892
  %6894 = shl nsw i64 %6836, 5
  %6895 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6894
  %6896 = bitcast i8* %6895 to <16 x i8>*
  %6897 = load <16 x i8>, <16 x i8>* %6896, align 16, !tbaa !395
  %6898 = getelementptr inbounds i8, i8* %6895, i64 16
  %6899 = bitcast i8* %6898 to <16 x i8>*
  %6900 = load <16 x i8>, <16 x i8>* %6899, align 16, !tbaa !395
  %6901 = shufflevector <16 x i8> %6897, <16 x i8> %6900, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6902 = zext <32 x i8> %6901 to <32 x i16>
  %6903 = mul <32 x i16> %4047, %6902
  %6904 = getelementptr inbounds i8, i8* %6895, i64 2
  %6905 = bitcast i8* %6904 to <16 x i8>*
  %6906 = load <16 x i8>, <16 x i8>* %6905, align 2, !tbaa !395
  %6907 = getelementptr inbounds i8, i8* %6895, i64 18
  %6908 = bitcast i8* %6907 to <16 x i8>*
  %6909 = load <16 x i8>, <16 x i8>* %6908, align 2, !tbaa !395
  %6910 = shufflevector <16 x i8> %6906, <16 x i8> %6909, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6911 = zext <32 x i8> %6910 to <32 x i16>
  %6912 = mul <32 x i16> %4051, %6911
  %6913 = getelementptr inbounds i8, i8* %6895, i64 1
  %6914 = bitcast i8* %6913 to <16 x i8>*
  %6915 = load <16 x i8>, <16 x i8>* %6914, align 1, !tbaa !395
  %6916 = getelementptr inbounds i8, i8* %6895, i64 17
  %6917 = bitcast i8* %6916 to <16 x i8>*
  %6918 = load <16 x i8>, <16 x i8>* %6917, align 1, !tbaa !395
  %6919 = shufflevector <16 x i8> %6915, <16 x i8> %6918, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6920 = zext <32 x i8> %6919 to <32 x i16>
  %6921 = mul <32 x i16> %4055, %6920
  %6922 = add <32 x i16> %6856, %6848
  %6923 = add <32 x i16> %6922, %6865
  %6924 = add <32 x i16> %6923, %6875
  %6925 = add <32 x i16> %6924, %6884
  %6926 = add <32 x i16> %6925, %6893
  %6927 = add <32 x i16> %6926, %6903
  %6928 = add <32 x i16> %6927, %6912
  %6929 = add <32 x i16> %6928, %6921
  %t479 = ashr <32 x i16> %6929, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %6930 = bitcast <32 x i16> %t479 to <8 x i64>
  %6931 = shufflevector <8 x i64> %6930, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t480 = bitcast <2 x i64> %6931 to <8 x i16>
  %6932 = shufflevector <8 x i64> %6930, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t481 = bitcast <2 x i64> %6932 to <8 x i16>
  %6933 = shufflevector <8 x i64> %6930, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t482 = bitcast <2 x i64> %6933 to <8 x i16>
  %6934 = shufflevector <8 x i64> %6930, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t483 = bitcast <2 x i64> %6934 to <8 x i16>
  %6935 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t480) #11
  %6936 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t481) #11
  %6937 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t482) #11
  %6938 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t483) #11
  %6939 = shufflevector <8 x i8> %6935, <8 x i8> %6936, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6940 = shufflevector <8 x i8> %6937, <8 x i8> %6938, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6941 = shufflevector <16 x i8> %6939, <16 x i8> %6940, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6942 = bitcast <32 x i8> %6941 to <4 x i64>
  %6943 = shufflevector <4 x i64> %6942, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %6944 = shufflevector <4 x i64> %6942, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %6945 = getelementptr inbounds i8, i8* %125, i64 %6835
  %6946 = bitcast i8* %6945 to <2 x i64>*
  store <2 x i64> %6943, <2 x i64>* %6946, align 1, !tbaa !399
  %6947 = getelementptr inbounds i8, i8* %6945, i64 16
  %6948 = bitcast i8* %6947 to <2 x i64>*
  store <2 x i64> %6944, <2 x i64>* %6948, align 1, !tbaa !399
  %6949 = or i64 %6834, 1
  %6950 = add nsw i64 %6949, %221
  %6951 = add nsw i64 %6949, %222
  %6952 = shl nsw i64 %6951, 5
  %6953 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6952
  %6954 = getelementptr inbounds i8, i8* %6953, i64 1
  %6955 = bitcast i8* %6954 to <16 x i8>*
  %6956 = load <16 x i8>, <16 x i8>* %6955, align 1, !tbaa !395
  %6957 = getelementptr inbounds i8, i8* %6953, i64 17
  %6958 = bitcast i8* %6957 to <16 x i8>*
  %6959 = load <16 x i8>, <16 x i8>* %6958, align 1, !tbaa !395
  %6960 = shufflevector <16 x i8> %6956, <16 x i8> %6959, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6961 = zext <32 x i8> %6960 to <32 x i16>
  %6962 = mul <32 x i16> %4023, %6961
  %6963 = bitcast i8* %6953 to <16 x i8>*
  %6964 = load <16 x i8>, <16 x i8>* %6963, align 16, !tbaa !395
  %6965 = getelementptr inbounds i8, i8* %6953, i64 16
  %6966 = bitcast i8* %6965 to <16 x i8>*
  %6967 = load <16 x i8>, <16 x i8>* %6966, align 16, !tbaa !395
  %6968 = shufflevector <16 x i8> %6964, <16 x i8> %6967, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6969 = zext <32 x i8> %6968 to <32 x i16>
  %6970 = mul <32 x i16> %4027, %6969
  %6971 = getelementptr inbounds i8, i8* %6953, i64 2
  %6972 = bitcast i8* %6971 to <16 x i8>*
  %6973 = load <16 x i8>, <16 x i8>* %6972, align 2, !tbaa !395
  %6974 = getelementptr inbounds i8, i8* %6953, i64 18
  %6975 = bitcast i8* %6974 to <16 x i8>*
  %6976 = load <16 x i8>, <16 x i8>* %6975, align 2, !tbaa !395
  %6977 = shufflevector <16 x i8> %6973, <16 x i8> %6976, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6978 = zext <32 x i8> %6977 to <32 x i16>
  %6979 = mul <32 x i16> %4031, %6978
  %6980 = shl nsw i64 %6949, 5
  %6981 = getelementptr inbounds i8, i8* %input_bounded93, i64 %6980
  %6982 = bitcast i8* %6981 to <16 x i8>*
  %6983 = load <16 x i8>, <16 x i8>* %6982, align 16, !tbaa !395
  %6984 = getelementptr inbounds i8, i8* %6981, i64 16
  %6985 = bitcast i8* %6984 to <16 x i8>*
  %6986 = load <16 x i8>, <16 x i8>* %6985, align 16, !tbaa !395
  %6987 = shufflevector <16 x i8> %6983, <16 x i8> %6986, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6988 = zext <32 x i8> %6987 to <32 x i16>
  %6989 = mul <32 x i16> %4035, %6988
  %6990 = getelementptr inbounds i8, i8* %6981, i64 1
  %6991 = bitcast i8* %6990 to <16 x i8>*
  %6992 = load <16 x i8>, <16 x i8>* %6991, align 1, !tbaa !395
  %6993 = getelementptr inbounds i8, i8* %6981, i64 17
  %6994 = bitcast i8* %6993 to <16 x i8>*
  %6995 = load <16 x i8>, <16 x i8>* %6994, align 1, !tbaa !395
  %6996 = shufflevector <16 x i8> %6992, <16 x i8> %6995, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6997 = zext <32 x i8> %6996 to <32 x i16>
  %6998 = mul <32 x i16> %4039, %6997
  %6999 = getelementptr inbounds i8, i8* %6981, i64 2
  %7000 = bitcast i8* %6999 to <16 x i8>*
  %7001 = load <16 x i8>, <16 x i8>* %7000, align 2, !tbaa !395
  %7002 = getelementptr inbounds i8, i8* %6981, i64 18
  %7003 = bitcast i8* %7002 to <16 x i8>*
  %7004 = load <16 x i8>, <16 x i8>* %7003, align 2, !tbaa !395
  %7005 = shufflevector <16 x i8> %7001, <16 x i8> %7004, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7006 = zext <32 x i8> %7005 to <32 x i16>
  %7007 = mul <32 x i16> %4043, %7006
  %7008 = shl nsw i64 %6950, 5
  %7009 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7008
  %7010 = bitcast i8* %7009 to <16 x i8>*
  %7011 = load <16 x i8>, <16 x i8>* %7010, align 16, !tbaa !395
  %7012 = getelementptr inbounds i8, i8* %7009, i64 16
  %7013 = bitcast i8* %7012 to <16 x i8>*
  %7014 = load <16 x i8>, <16 x i8>* %7013, align 16, !tbaa !395
  %7015 = shufflevector <16 x i8> %7011, <16 x i8> %7014, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7016 = zext <32 x i8> %7015 to <32 x i16>
  %7017 = mul <32 x i16> %4047, %7016
  %7018 = getelementptr inbounds i8, i8* %7009, i64 2
  %7019 = bitcast i8* %7018 to <16 x i8>*
  %7020 = load <16 x i8>, <16 x i8>* %7019, align 2, !tbaa !395
  %7021 = getelementptr inbounds i8, i8* %7009, i64 18
  %7022 = bitcast i8* %7021 to <16 x i8>*
  %7023 = load <16 x i8>, <16 x i8>* %7022, align 2, !tbaa !395
  %7024 = shufflevector <16 x i8> %7020, <16 x i8> %7023, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7025 = zext <32 x i8> %7024 to <32 x i16>
  %7026 = mul <32 x i16> %4051, %7025
  %7027 = getelementptr inbounds i8, i8* %7009, i64 1
  %7028 = bitcast i8* %7027 to <16 x i8>*
  %7029 = load <16 x i8>, <16 x i8>* %7028, align 1, !tbaa !395
  %7030 = getelementptr inbounds i8, i8* %7009, i64 17
  %7031 = bitcast i8* %7030 to <16 x i8>*
  %7032 = load <16 x i8>, <16 x i8>* %7031, align 1, !tbaa !395
  %7033 = shufflevector <16 x i8> %7029, <16 x i8> %7032, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7034 = zext <32 x i8> %7033 to <32 x i16>
  %7035 = mul <32 x i16> %4055, %7034
  %7036 = add <32 x i16> %6970, %6962
  %7037 = add <32 x i16> %7036, %6979
  %7038 = add <32 x i16> %7037, %6989
  %7039 = add <32 x i16> %7038, %6998
  %7040 = add <32 x i16> %7039, %7007
  %7041 = add <32 x i16> %7040, %7017
  %7042 = add <32 x i16> %7041, %7026
  %7043 = add <32 x i16> %7042, %7035
  %t479.1 = ashr <32 x i16> %7043, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %7044 = bitcast <32 x i16> %t479.1 to <8 x i64>
  %7045 = shufflevector <8 x i64> %7044, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t480.1 = bitcast <2 x i64> %7045 to <8 x i16>
  %7046 = shufflevector <8 x i64> %7044, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t481.1 = bitcast <2 x i64> %7046 to <8 x i16>
  %7047 = shufflevector <8 x i64> %7044, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t482.1 = bitcast <2 x i64> %7047 to <8 x i16>
  %7048 = shufflevector <8 x i64> %7044, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t483.1 = bitcast <2 x i64> %7048 to <8 x i16>
  %7049 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t480.1) #11
  %7050 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t481.1) #11
  %7051 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t482.1) #11
  %7052 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t483.1) #11
  %7053 = shufflevector <8 x i8> %7049, <8 x i8> %7050, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7054 = shufflevector <8 x i8> %7051, <8 x i8> %7052, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7055 = shufflevector <16 x i8> %7053, <16 x i8> %7054, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7056 = bitcast <32 x i8> %7055 to <4 x i64>
  %7057 = shufflevector <4 x i64> %7056, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %7058 = shufflevector <4 x i64> %7056, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %7059 = add nsw i64 %6835, 32
  %7060 = getelementptr inbounds i8, i8* %125, i64 %7059
  %7061 = bitcast i8* %7060 to <2 x i64>*
  store <2 x i64> %7057, <2 x i64>* %7061, align 1, !tbaa !399
  %7062 = getelementptr inbounds i8, i8* %7060, i64 16
  %7063 = bitcast i8* %7062 to <2 x i64>*
  store <2 x i64> %7058, <2 x i64>* %7063, align 1, !tbaa !399
  %t373292 = add nsw i32 %4068, %4072
  %7064 = add nsw i64 %4073, %226
  %7065 = sext i32 %t373292 to i64
  %7066 = add nsw i64 %7064, %221
  %7067 = add nsw i64 %7064, %222
  %7068 = shl nsw i64 %7067, 5
  %7069 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7068
  %7070 = getelementptr inbounds i8, i8* %7069, i64 1
  %7071 = bitcast i8* %7070 to <16 x i8>*
  %7072 = load <16 x i8>, <16 x i8>* %7071, align 1, !tbaa !395
  %7073 = getelementptr inbounds i8, i8* %7069, i64 17
  %7074 = bitcast i8* %7073 to <16 x i8>*
  %7075 = load <16 x i8>, <16 x i8>* %7074, align 1, !tbaa !395
  %7076 = shufflevector <16 x i8> %7072, <16 x i8> %7075, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7077 = zext <32 x i8> %7076 to <32 x i16>
  %7078 = mul <32 x i16> %4023, %7077
  %7079 = bitcast i8* %7069 to <16 x i8>*
  %7080 = load <16 x i8>, <16 x i8>* %7079, align 16, !tbaa !395
  %7081 = getelementptr inbounds i8, i8* %7069, i64 16
  %7082 = bitcast i8* %7081 to <16 x i8>*
  %7083 = load <16 x i8>, <16 x i8>* %7082, align 16, !tbaa !395
  %7084 = shufflevector <16 x i8> %7080, <16 x i8> %7083, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7085 = zext <32 x i8> %7084 to <32 x i16>
  %7086 = mul <32 x i16> %4027, %7085
  %7087 = getelementptr inbounds i8, i8* %7069, i64 2
  %7088 = bitcast i8* %7087 to <16 x i8>*
  %7089 = load <16 x i8>, <16 x i8>* %7088, align 2, !tbaa !395
  %7090 = getelementptr inbounds i8, i8* %7069, i64 18
  %7091 = bitcast i8* %7090 to <16 x i8>*
  %7092 = load <16 x i8>, <16 x i8>* %7091, align 2, !tbaa !395
  %7093 = shufflevector <16 x i8> %7089, <16 x i8> %7092, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7094 = zext <32 x i8> %7093 to <32 x i16>
  %7095 = mul <32 x i16> %4031, %7094
  %7096 = shl nsw i64 %7064, 5
  %7097 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7096
  %7098 = bitcast i8* %7097 to <16 x i8>*
  %7099 = load <16 x i8>, <16 x i8>* %7098, align 16, !tbaa !395
  %7100 = getelementptr inbounds i8, i8* %7097, i64 16
  %7101 = bitcast i8* %7100 to <16 x i8>*
  %7102 = load <16 x i8>, <16 x i8>* %7101, align 16, !tbaa !395
  %7103 = shufflevector <16 x i8> %7099, <16 x i8> %7102, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7104 = zext <32 x i8> %7103 to <32 x i16>
  %7105 = mul <32 x i16> %4035, %7104
  %7106 = getelementptr inbounds i8, i8* %7097, i64 1
  %7107 = bitcast i8* %7106 to <16 x i8>*
  %7108 = load <16 x i8>, <16 x i8>* %7107, align 1, !tbaa !395
  %7109 = getelementptr inbounds i8, i8* %7097, i64 17
  %7110 = bitcast i8* %7109 to <16 x i8>*
  %7111 = load <16 x i8>, <16 x i8>* %7110, align 1, !tbaa !395
  %7112 = shufflevector <16 x i8> %7108, <16 x i8> %7111, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7113 = zext <32 x i8> %7112 to <32 x i16>
  %7114 = mul <32 x i16> %4039, %7113
  %7115 = getelementptr inbounds i8, i8* %7097, i64 2
  %7116 = bitcast i8* %7115 to <16 x i8>*
  %7117 = load <16 x i8>, <16 x i8>* %7116, align 2, !tbaa !395
  %7118 = getelementptr inbounds i8, i8* %7097, i64 18
  %7119 = bitcast i8* %7118 to <16 x i8>*
  %7120 = load <16 x i8>, <16 x i8>* %7119, align 2, !tbaa !395
  %7121 = shufflevector <16 x i8> %7117, <16 x i8> %7120, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7122 = zext <32 x i8> %7121 to <32 x i16>
  %7123 = mul <32 x i16> %4043, %7122
  %7124 = shl nsw i64 %7066, 5
  %7125 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7124
  %7126 = bitcast i8* %7125 to <16 x i8>*
  %7127 = load <16 x i8>, <16 x i8>* %7126, align 16, !tbaa !395
  %7128 = getelementptr inbounds i8, i8* %7125, i64 16
  %7129 = bitcast i8* %7128 to <16 x i8>*
  %7130 = load <16 x i8>, <16 x i8>* %7129, align 16, !tbaa !395
  %7131 = shufflevector <16 x i8> %7127, <16 x i8> %7130, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7132 = zext <32 x i8> %7131 to <32 x i16>
  %7133 = mul <32 x i16> %4047, %7132
  %7134 = getelementptr inbounds i8, i8* %7125, i64 2
  %7135 = bitcast i8* %7134 to <16 x i8>*
  %7136 = load <16 x i8>, <16 x i8>* %7135, align 2, !tbaa !395
  %7137 = getelementptr inbounds i8, i8* %7125, i64 18
  %7138 = bitcast i8* %7137 to <16 x i8>*
  %7139 = load <16 x i8>, <16 x i8>* %7138, align 2, !tbaa !395
  %7140 = shufflevector <16 x i8> %7136, <16 x i8> %7139, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7141 = zext <32 x i8> %7140 to <32 x i16>
  %7142 = mul <32 x i16> %4051, %7141
  %7143 = getelementptr inbounds i8, i8* %7125, i64 1
  %7144 = bitcast i8* %7143 to <16 x i8>*
  %7145 = load <16 x i8>, <16 x i8>* %7144, align 1, !tbaa !395
  %7146 = getelementptr inbounds i8, i8* %7125, i64 17
  %7147 = bitcast i8* %7146 to <16 x i8>*
  %7148 = load <16 x i8>, <16 x i8>* %7147, align 1, !tbaa !395
  %7149 = shufflevector <16 x i8> %7145, <16 x i8> %7148, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7150 = zext <32 x i8> %7149 to <32 x i16>
  %7151 = mul <32 x i16> %4055, %7150
  %7152 = add <32 x i16> %7086, %7078
  %7153 = add <32 x i16> %7152, %7095
  %7154 = add <32 x i16> %7153, %7105
  %7155 = add <32 x i16> %7154, %7114
  %7156 = add <32 x i16> %7155, %7123
  %7157 = add <32 x i16> %7156, %7133
  %7158 = add <32 x i16> %7157, %7142
  %7159 = add <32 x i16> %7158, %7151
  %t486 = ashr <32 x i16> %7159, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %7160 = bitcast <32 x i16> %t486 to <8 x i64>
  %7161 = shufflevector <8 x i64> %7160, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t487 = bitcast <2 x i64> %7161 to <8 x i16>
  %7162 = shufflevector <8 x i64> %7160, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t488 = bitcast <2 x i64> %7162 to <8 x i16>
  %7163 = shufflevector <8 x i64> %7160, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t489 = bitcast <2 x i64> %7163 to <8 x i16>
  %7164 = shufflevector <8 x i64> %7160, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t490 = bitcast <2 x i64> %7164 to <8 x i16>
  %7165 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t487) #11
  %7166 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t488) #11
  %7167 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t489) #11
  %7168 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t490) #11
  %7169 = shufflevector <8 x i8> %7165, <8 x i8> %7166, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7170 = shufflevector <8 x i8> %7167, <8 x i8> %7168, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7171 = shufflevector <16 x i8> %7169, <16 x i8> %7170, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7172 = bitcast <32 x i8> %7171 to <4 x i64>
  %7173 = shufflevector <4 x i64> %7172, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %7174 = shufflevector <4 x i64> %7172, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %7175 = getelementptr inbounds i8, i8* %125, i64 %7065
  %7176 = bitcast i8* %7175 to <2 x i64>*
  store <2 x i64> %7173, <2 x i64>* %7176, align 1, !tbaa !399
  %7177 = getelementptr inbounds i8, i8* %7175, i64 16
  %7178 = bitcast i8* %7177 to <2 x i64>*
  store <2 x i64> %7174, <2 x i64>* %7178, align 1, !tbaa !399
  %7179 = or i64 %7064, 1
  %7180 = add nsw i64 %7179, %221
  %7181 = add nsw i64 %7179, %222
  %7182 = shl nsw i64 %7181, 5
  %7183 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7182
  %7184 = getelementptr inbounds i8, i8* %7183, i64 1
  %7185 = bitcast i8* %7184 to <16 x i8>*
  %7186 = load <16 x i8>, <16 x i8>* %7185, align 1, !tbaa !395
  %7187 = getelementptr inbounds i8, i8* %7183, i64 17
  %7188 = bitcast i8* %7187 to <16 x i8>*
  %7189 = load <16 x i8>, <16 x i8>* %7188, align 1, !tbaa !395
  %7190 = shufflevector <16 x i8> %7186, <16 x i8> %7189, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7191 = zext <32 x i8> %7190 to <32 x i16>
  %7192 = mul <32 x i16> %4023, %7191
  %7193 = bitcast i8* %7183 to <16 x i8>*
  %7194 = load <16 x i8>, <16 x i8>* %7193, align 16, !tbaa !395
  %7195 = getelementptr inbounds i8, i8* %7183, i64 16
  %7196 = bitcast i8* %7195 to <16 x i8>*
  %7197 = load <16 x i8>, <16 x i8>* %7196, align 16, !tbaa !395
  %7198 = shufflevector <16 x i8> %7194, <16 x i8> %7197, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7199 = zext <32 x i8> %7198 to <32 x i16>
  %7200 = mul <32 x i16> %4027, %7199
  %7201 = getelementptr inbounds i8, i8* %7183, i64 2
  %7202 = bitcast i8* %7201 to <16 x i8>*
  %7203 = load <16 x i8>, <16 x i8>* %7202, align 2, !tbaa !395
  %7204 = getelementptr inbounds i8, i8* %7183, i64 18
  %7205 = bitcast i8* %7204 to <16 x i8>*
  %7206 = load <16 x i8>, <16 x i8>* %7205, align 2, !tbaa !395
  %7207 = shufflevector <16 x i8> %7203, <16 x i8> %7206, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7208 = zext <32 x i8> %7207 to <32 x i16>
  %7209 = mul <32 x i16> %4031, %7208
  %7210 = shl nsw i64 %7179, 5
  %7211 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7210
  %7212 = bitcast i8* %7211 to <16 x i8>*
  %7213 = load <16 x i8>, <16 x i8>* %7212, align 16, !tbaa !395
  %7214 = getelementptr inbounds i8, i8* %7211, i64 16
  %7215 = bitcast i8* %7214 to <16 x i8>*
  %7216 = load <16 x i8>, <16 x i8>* %7215, align 16, !tbaa !395
  %7217 = shufflevector <16 x i8> %7213, <16 x i8> %7216, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7218 = zext <32 x i8> %7217 to <32 x i16>
  %7219 = mul <32 x i16> %4035, %7218
  %7220 = getelementptr inbounds i8, i8* %7211, i64 1
  %7221 = bitcast i8* %7220 to <16 x i8>*
  %7222 = load <16 x i8>, <16 x i8>* %7221, align 1, !tbaa !395
  %7223 = getelementptr inbounds i8, i8* %7211, i64 17
  %7224 = bitcast i8* %7223 to <16 x i8>*
  %7225 = load <16 x i8>, <16 x i8>* %7224, align 1, !tbaa !395
  %7226 = shufflevector <16 x i8> %7222, <16 x i8> %7225, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7227 = zext <32 x i8> %7226 to <32 x i16>
  %7228 = mul <32 x i16> %4039, %7227
  %7229 = getelementptr inbounds i8, i8* %7211, i64 2
  %7230 = bitcast i8* %7229 to <16 x i8>*
  %7231 = load <16 x i8>, <16 x i8>* %7230, align 2, !tbaa !395
  %7232 = getelementptr inbounds i8, i8* %7211, i64 18
  %7233 = bitcast i8* %7232 to <16 x i8>*
  %7234 = load <16 x i8>, <16 x i8>* %7233, align 2, !tbaa !395
  %7235 = shufflevector <16 x i8> %7231, <16 x i8> %7234, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7236 = zext <32 x i8> %7235 to <32 x i16>
  %7237 = mul <32 x i16> %4043, %7236
  %7238 = shl nsw i64 %7180, 5
  %7239 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7238
  %7240 = bitcast i8* %7239 to <16 x i8>*
  %7241 = load <16 x i8>, <16 x i8>* %7240, align 16, !tbaa !395
  %7242 = getelementptr inbounds i8, i8* %7239, i64 16
  %7243 = bitcast i8* %7242 to <16 x i8>*
  %7244 = load <16 x i8>, <16 x i8>* %7243, align 16, !tbaa !395
  %7245 = shufflevector <16 x i8> %7241, <16 x i8> %7244, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7246 = zext <32 x i8> %7245 to <32 x i16>
  %7247 = mul <32 x i16> %4047, %7246
  %7248 = getelementptr inbounds i8, i8* %7239, i64 2
  %7249 = bitcast i8* %7248 to <16 x i8>*
  %7250 = load <16 x i8>, <16 x i8>* %7249, align 2, !tbaa !395
  %7251 = getelementptr inbounds i8, i8* %7239, i64 18
  %7252 = bitcast i8* %7251 to <16 x i8>*
  %7253 = load <16 x i8>, <16 x i8>* %7252, align 2, !tbaa !395
  %7254 = shufflevector <16 x i8> %7250, <16 x i8> %7253, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7255 = zext <32 x i8> %7254 to <32 x i16>
  %7256 = mul <32 x i16> %4051, %7255
  %7257 = getelementptr inbounds i8, i8* %7239, i64 1
  %7258 = bitcast i8* %7257 to <16 x i8>*
  %7259 = load <16 x i8>, <16 x i8>* %7258, align 1, !tbaa !395
  %7260 = getelementptr inbounds i8, i8* %7239, i64 17
  %7261 = bitcast i8* %7260 to <16 x i8>*
  %7262 = load <16 x i8>, <16 x i8>* %7261, align 1, !tbaa !395
  %7263 = shufflevector <16 x i8> %7259, <16 x i8> %7262, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7264 = zext <32 x i8> %7263 to <32 x i16>
  %7265 = mul <32 x i16> %4055, %7264
  %7266 = add <32 x i16> %7200, %7192
  %7267 = add <32 x i16> %7266, %7209
  %7268 = add <32 x i16> %7267, %7219
  %7269 = add <32 x i16> %7268, %7228
  %7270 = add <32 x i16> %7269, %7237
  %7271 = add <32 x i16> %7270, %7247
  %7272 = add <32 x i16> %7271, %7256
  %7273 = add <32 x i16> %7272, %7265
  %t486.1 = ashr <32 x i16> %7273, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %7274 = bitcast <32 x i16> %t486.1 to <8 x i64>
  %7275 = shufflevector <8 x i64> %7274, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t487.1 = bitcast <2 x i64> %7275 to <8 x i16>
  %7276 = shufflevector <8 x i64> %7274, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t488.1 = bitcast <2 x i64> %7276 to <8 x i16>
  %7277 = shufflevector <8 x i64> %7274, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t489.1 = bitcast <2 x i64> %7277 to <8 x i16>
  %7278 = shufflevector <8 x i64> %7274, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t490.1 = bitcast <2 x i64> %7278 to <8 x i16>
  %7279 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t487.1) #11
  %7280 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t488.1) #11
  %7281 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t489.1) #11
  %7282 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t490.1) #11
  %7283 = shufflevector <8 x i8> %7279, <8 x i8> %7280, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7284 = shufflevector <8 x i8> %7281, <8 x i8> %7282, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7285 = shufflevector <16 x i8> %7283, <16 x i8> %7284, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7286 = bitcast <32 x i8> %7285 to <4 x i64>
  %7287 = shufflevector <4 x i64> %7286, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %7288 = shufflevector <4 x i64> %7286, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %7289 = add nsw i64 %7065, 32
  %7290 = getelementptr inbounds i8, i8* %125, i64 %7289
  %7291 = bitcast i8* %7290 to <2 x i64>*
  store <2 x i64> %7287, <2 x i64>* %7291, align 1, !tbaa !399
  %7292 = getelementptr inbounds i8, i8* %7290, i64 16
  %7293 = bitcast i8* %7292 to <2 x i64>*
  store <2 x i64> %7288, <2 x i64>* %7293, align 1, !tbaa !399
  %t375300 = add nsw i32 %4069, %4072
  %7294 = add nsw i64 %4073, %225
  %7295 = sext i32 %t375300 to i64
  %7296 = add nsw i64 %7294, %221
  %7297 = add nsw i64 %7294, %222
  %7298 = shl nsw i64 %7297, 5
  %7299 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7298
  %7300 = getelementptr inbounds i8, i8* %7299, i64 1
  %7301 = bitcast i8* %7300 to <16 x i8>*
  %7302 = load <16 x i8>, <16 x i8>* %7301, align 1, !tbaa !395
  %7303 = getelementptr inbounds i8, i8* %7299, i64 17
  %7304 = bitcast i8* %7303 to <16 x i8>*
  %7305 = load <16 x i8>, <16 x i8>* %7304, align 1, !tbaa !395
  %7306 = shufflevector <16 x i8> %7302, <16 x i8> %7305, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7307 = zext <32 x i8> %7306 to <32 x i16>
  %7308 = mul <32 x i16> %4023, %7307
  %7309 = bitcast i8* %7299 to <16 x i8>*
  %7310 = load <16 x i8>, <16 x i8>* %7309, align 16, !tbaa !395
  %7311 = getelementptr inbounds i8, i8* %7299, i64 16
  %7312 = bitcast i8* %7311 to <16 x i8>*
  %7313 = load <16 x i8>, <16 x i8>* %7312, align 16, !tbaa !395
  %7314 = shufflevector <16 x i8> %7310, <16 x i8> %7313, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7315 = zext <32 x i8> %7314 to <32 x i16>
  %7316 = mul <32 x i16> %4027, %7315
  %7317 = getelementptr inbounds i8, i8* %7299, i64 2
  %7318 = bitcast i8* %7317 to <16 x i8>*
  %7319 = load <16 x i8>, <16 x i8>* %7318, align 2, !tbaa !395
  %7320 = getelementptr inbounds i8, i8* %7299, i64 18
  %7321 = bitcast i8* %7320 to <16 x i8>*
  %7322 = load <16 x i8>, <16 x i8>* %7321, align 2, !tbaa !395
  %7323 = shufflevector <16 x i8> %7319, <16 x i8> %7322, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7324 = zext <32 x i8> %7323 to <32 x i16>
  %7325 = mul <32 x i16> %4031, %7324
  %7326 = shl nsw i64 %7294, 5
  %7327 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7326
  %7328 = bitcast i8* %7327 to <16 x i8>*
  %7329 = load <16 x i8>, <16 x i8>* %7328, align 16, !tbaa !395
  %7330 = getelementptr inbounds i8, i8* %7327, i64 16
  %7331 = bitcast i8* %7330 to <16 x i8>*
  %7332 = load <16 x i8>, <16 x i8>* %7331, align 16, !tbaa !395
  %7333 = shufflevector <16 x i8> %7329, <16 x i8> %7332, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7334 = zext <32 x i8> %7333 to <32 x i16>
  %7335 = mul <32 x i16> %4035, %7334
  %7336 = getelementptr inbounds i8, i8* %7327, i64 1
  %7337 = bitcast i8* %7336 to <16 x i8>*
  %7338 = load <16 x i8>, <16 x i8>* %7337, align 1, !tbaa !395
  %7339 = getelementptr inbounds i8, i8* %7327, i64 17
  %7340 = bitcast i8* %7339 to <16 x i8>*
  %7341 = load <16 x i8>, <16 x i8>* %7340, align 1, !tbaa !395
  %7342 = shufflevector <16 x i8> %7338, <16 x i8> %7341, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7343 = zext <32 x i8> %7342 to <32 x i16>
  %7344 = mul <32 x i16> %4039, %7343
  %7345 = getelementptr inbounds i8, i8* %7327, i64 2
  %7346 = bitcast i8* %7345 to <16 x i8>*
  %7347 = load <16 x i8>, <16 x i8>* %7346, align 2, !tbaa !395
  %7348 = getelementptr inbounds i8, i8* %7327, i64 18
  %7349 = bitcast i8* %7348 to <16 x i8>*
  %7350 = load <16 x i8>, <16 x i8>* %7349, align 2, !tbaa !395
  %7351 = shufflevector <16 x i8> %7347, <16 x i8> %7350, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7352 = zext <32 x i8> %7351 to <32 x i16>
  %7353 = mul <32 x i16> %4043, %7352
  %7354 = shl nsw i64 %7296, 5
  %7355 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7354
  %7356 = bitcast i8* %7355 to <16 x i8>*
  %7357 = load <16 x i8>, <16 x i8>* %7356, align 16, !tbaa !395
  %7358 = getelementptr inbounds i8, i8* %7355, i64 16
  %7359 = bitcast i8* %7358 to <16 x i8>*
  %7360 = load <16 x i8>, <16 x i8>* %7359, align 16, !tbaa !395
  %7361 = shufflevector <16 x i8> %7357, <16 x i8> %7360, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7362 = zext <32 x i8> %7361 to <32 x i16>
  %7363 = mul <32 x i16> %4047, %7362
  %7364 = getelementptr inbounds i8, i8* %7355, i64 2
  %7365 = bitcast i8* %7364 to <16 x i8>*
  %7366 = load <16 x i8>, <16 x i8>* %7365, align 2, !tbaa !395
  %7367 = getelementptr inbounds i8, i8* %7355, i64 18
  %7368 = bitcast i8* %7367 to <16 x i8>*
  %7369 = load <16 x i8>, <16 x i8>* %7368, align 2, !tbaa !395
  %7370 = shufflevector <16 x i8> %7366, <16 x i8> %7369, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7371 = zext <32 x i8> %7370 to <32 x i16>
  %7372 = mul <32 x i16> %4051, %7371
  %7373 = getelementptr inbounds i8, i8* %7355, i64 1
  %7374 = bitcast i8* %7373 to <16 x i8>*
  %7375 = load <16 x i8>, <16 x i8>* %7374, align 1, !tbaa !395
  %7376 = getelementptr inbounds i8, i8* %7355, i64 17
  %7377 = bitcast i8* %7376 to <16 x i8>*
  %7378 = load <16 x i8>, <16 x i8>* %7377, align 1, !tbaa !395
  %7379 = shufflevector <16 x i8> %7375, <16 x i8> %7378, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7380 = zext <32 x i8> %7379 to <32 x i16>
  %7381 = mul <32 x i16> %4055, %7380
  %7382 = add <32 x i16> %7316, %7308
  %7383 = add <32 x i16> %7382, %7325
  %7384 = add <32 x i16> %7383, %7335
  %7385 = add <32 x i16> %7384, %7344
  %7386 = add <32 x i16> %7385, %7353
  %7387 = add <32 x i16> %7386, %7363
  %7388 = add <32 x i16> %7387, %7372
  %7389 = add <32 x i16> %7388, %7381
  %t493 = ashr <32 x i16> %7389, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %7390 = bitcast <32 x i16> %t493 to <8 x i64>
  %7391 = shufflevector <8 x i64> %7390, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t494 = bitcast <2 x i64> %7391 to <8 x i16>
  %7392 = shufflevector <8 x i64> %7390, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t495 = bitcast <2 x i64> %7392 to <8 x i16>
  %7393 = shufflevector <8 x i64> %7390, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t496 = bitcast <2 x i64> %7393 to <8 x i16>
  %7394 = shufflevector <8 x i64> %7390, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t497 = bitcast <2 x i64> %7394 to <8 x i16>
  %7395 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t494) #11
  %7396 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t495) #11
  %7397 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t496) #11
  %7398 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t497) #11
  %7399 = shufflevector <8 x i8> %7395, <8 x i8> %7396, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7400 = shufflevector <8 x i8> %7397, <8 x i8> %7398, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7401 = shufflevector <16 x i8> %7399, <16 x i8> %7400, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7402 = bitcast <32 x i8> %7401 to <4 x i64>
  %7403 = shufflevector <4 x i64> %7402, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %7404 = shufflevector <4 x i64> %7402, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %7405 = getelementptr inbounds i8, i8* %125, i64 %7295
  %7406 = bitcast i8* %7405 to <2 x i64>*
  store <2 x i64> %7403, <2 x i64>* %7406, align 1, !tbaa !399
  %7407 = getelementptr inbounds i8, i8* %7405, i64 16
  %7408 = bitcast i8* %7407 to <2 x i64>*
  store <2 x i64> %7404, <2 x i64>* %7408, align 1, !tbaa !399
  %7409 = or i64 %7294, 1
  %7410 = add nsw i64 %7409, %221
  %7411 = add nsw i64 %7409, %222
  %7412 = shl nsw i64 %7411, 5
  %7413 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7412
  %7414 = getelementptr inbounds i8, i8* %7413, i64 1
  %7415 = bitcast i8* %7414 to <16 x i8>*
  %7416 = load <16 x i8>, <16 x i8>* %7415, align 1, !tbaa !395
  %7417 = getelementptr inbounds i8, i8* %7413, i64 17
  %7418 = bitcast i8* %7417 to <16 x i8>*
  %7419 = load <16 x i8>, <16 x i8>* %7418, align 1, !tbaa !395
  %7420 = shufflevector <16 x i8> %7416, <16 x i8> %7419, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7421 = zext <32 x i8> %7420 to <32 x i16>
  %7422 = mul <32 x i16> %4023, %7421
  %7423 = bitcast i8* %7413 to <16 x i8>*
  %7424 = load <16 x i8>, <16 x i8>* %7423, align 16, !tbaa !395
  %7425 = getelementptr inbounds i8, i8* %7413, i64 16
  %7426 = bitcast i8* %7425 to <16 x i8>*
  %7427 = load <16 x i8>, <16 x i8>* %7426, align 16, !tbaa !395
  %7428 = shufflevector <16 x i8> %7424, <16 x i8> %7427, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7429 = zext <32 x i8> %7428 to <32 x i16>
  %7430 = mul <32 x i16> %4027, %7429
  %7431 = getelementptr inbounds i8, i8* %7413, i64 2
  %7432 = bitcast i8* %7431 to <16 x i8>*
  %7433 = load <16 x i8>, <16 x i8>* %7432, align 2, !tbaa !395
  %7434 = getelementptr inbounds i8, i8* %7413, i64 18
  %7435 = bitcast i8* %7434 to <16 x i8>*
  %7436 = load <16 x i8>, <16 x i8>* %7435, align 2, !tbaa !395
  %7437 = shufflevector <16 x i8> %7433, <16 x i8> %7436, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7438 = zext <32 x i8> %7437 to <32 x i16>
  %7439 = mul <32 x i16> %4031, %7438
  %7440 = shl nsw i64 %7409, 5
  %7441 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7440
  %7442 = bitcast i8* %7441 to <16 x i8>*
  %7443 = load <16 x i8>, <16 x i8>* %7442, align 16, !tbaa !395
  %7444 = getelementptr inbounds i8, i8* %7441, i64 16
  %7445 = bitcast i8* %7444 to <16 x i8>*
  %7446 = load <16 x i8>, <16 x i8>* %7445, align 16, !tbaa !395
  %7447 = shufflevector <16 x i8> %7443, <16 x i8> %7446, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7448 = zext <32 x i8> %7447 to <32 x i16>
  %7449 = mul <32 x i16> %4035, %7448
  %7450 = getelementptr inbounds i8, i8* %7441, i64 1
  %7451 = bitcast i8* %7450 to <16 x i8>*
  %7452 = load <16 x i8>, <16 x i8>* %7451, align 1, !tbaa !395
  %7453 = getelementptr inbounds i8, i8* %7441, i64 17
  %7454 = bitcast i8* %7453 to <16 x i8>*
  %7455 = load <16 x i8>, <16 x i8>* %7454, align 1, !tbaa !395
  %7456 = shufflevector <16 x i8> %7452, <16 x i8> %7455, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7457 = zext <32 x i8> %7456 to <32 x i16>
  %7458 = mul <32 x i16> %4039, %7457
  %7459 = getelementptr inbounds i8, i8* %7441, i64 2
  %7460 = bitcast i8* %7459 to <16 x i8>*
  %7461 = load <16 x i8>, <16 x i8>* %7460, align 2, !tbaa !395
  %7462 = getelementptr inbounds i8, i8* %7441, i64 18
  %7463 = bitcast i8* %7462 to <16 x i8>*
  %7464 = load <16 x i8>, <16 x i8>* %7463, align 2, !tbaa !395
  %7465 = shufflevector <16 x i8> %7461, <16 x i8> %7464, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7466 = zext <32 x i8> %7465 to <32 x i16>
  %7467 = mul <32 x i16> %4043, %7466
  %7468 = shl nsw i64 %7410, 5
  %7469 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7468
  %7470 = bitcast i8* %7469 to <16 x i8>*
  %7471 = load <16 x i8>, <16 x i8>* %7470, align 16, !tbaa !395
  %7472 = getelementptr inbounds i8, i8* %7469, i64 16
  %7473 = bitcast i8* %7472 to <16 x i8>*
  %7474 = load <16 x i8>, <16 x i8>* %7473, align 16, !tbaa !395
  %7475 = shufflevector <16 x i8> %7471, <16 x i8> %7474, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7476 = zext <32 x i8> %7475 to <32 x i16>
  %7477 = mul <32 x i16> %4047, %7476
  %7478 = getelementptr inbounds i8, i8* %7469, i64 2
  %7479 = bitcast i8* %7478 to <16 x i8>*
  %7480 = load <16 x i8>, <16 x i8>* %7479, align 2, !tbaa !395
  %7481 = getelementptr inbounds i8, i8* %7469, i64 18
  %7482 = bitcast i8* %7481 to <16 x i8>*
  %7483 = load <16 x i8>, <16 x i8>* %7482, align 2, !tbaa !395
  %7484 = shufflevector <16 x i8> %7480, <16 x i8> %7483, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7485 = zext <32 x i8> %7484 to <32 x i16>
  %7486 = mul <32 x i16> %4051, %7485
  %7487 = getelementptr inbounds i8, i8* %7469, i64 1
  %7488 = bitcast i8* %7487 to <16 x i8>*
  %7489 = load <16 x i8>, <16 x i8>* %7488, align 1, !tbaa !395
  %7490 = getelementptr inbounds i8, i8* %7469, i64 17
  %7491 = bitcast i8* %7490 to <16 x i8>*
  %7492 = load <16 x i8>, <16 x i8>* %7491, align 1, !tbaa !395
  %7493 = shufflevector <16 x i8> %7489, <16 x i8> %7492, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7494 = zext <32 x i8> %7493 to <32 x i16>
  %7495 = mul <32 x i16> %4055, %7494
  %7496 = add <32 x i16> %7430, %7422
  %7497 = add <32 x i16> %7496, %7439
  %7498 = add <32 x i16> %7497, %7449
  %7499 = add <32 x i16> %7498, %7458
  %7500 = add <32 x i16> %7499, %7467
  %7501 = add <32 x i16> %7500, %7477
  %7502 = add <32 x i16> %7501, %7486
  %7503 = add <32 x i16> %7502, %7495
  %t493.1 = ashr <32 x i16> %7503, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %7504 = bitcast <32 x i16> %t493.1 to <8 x i64>
  %7505 = shufflevector <8 x i64> %7504, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t494.1 = bitcast <2 x i64> %7505 to <8 x i16>
  %7506 = shufflevector <8 x i64> %7504, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t495.1 = bitcast <2 x i64> %7506 to <8 x i16>
  %7507 = shufflevector <8 x i64> %7504, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t496.1 = bitcast <2 x i64> %7507 to <8 x i16>
  %7508 = shufflevector <8 x i64> %7504, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t497.1 = bitcast <2 x i64> %7508 to <8 x i16>
  %7509 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t494.1) #11
  %7510 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t495.1) #11
  %7511 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t496.1) #11
  %7512 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t497.1) #11
  %7513 = shufflevector <8 x i8> %7509, <8 x i8> %7510, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7514 = shufflevector <8 x i8> %7511, <8 x i8> %7512, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7515 = shufflevector <16 x i8> %7513, <16 x i8> %7514, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7516 = bitcast <32 x i8> %7515 to <4 x i64>
  %7517 = shufflevector <4 x i64> %7516, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %7518 = shufflevector <4 x i64> %7516, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %7519 = add nsw i64 %7295, 32
  %7520 = getelementptr inbounds i8, i8* %125, i64 %7519
  %7521 = bitcast i8* %7520 to <2 x i64>*
  store <2 x i64> %7517, <2 x i64>* %7521, align 1, !tbaa !399
  %7522 = getelementptr inbounds i8, i8* %7520, i64 16
  %7523 = bitcast i8* %7522 to <2 x i64>*
  store <2 x i64> %7518, <2 x i64>* %7523, align 1, !tbaa !399
  %t377308 = add nsw i32 %4070, %4072
  %7524 = add nsw i64 %4073, %224
  %7525 = sext i32 %t377308 to i64
  %7526 = add nsw i64 %7524, %221
  %7527 = add nsw i64 %7524, %222
  %7528 = shl nsw i64 %7527, 5
  %7529 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7528
  %7530 = getelementptr inbounds i8, i8* %7529, i64 1
  %7531 = bitcast i8* %7530 to <16 x i8>*
  %7532 = load <16 x i8>, <16 x i8>* %7531, align 1, !tbaa !395
  %7533 = getelementptr inbounds i8, i8* %7529, i64 17
  %7534 = bitcast i8* %7533 to <16 x i8>*
  %7535 = load <16 x i8>, <16 x i8>* %7534, align 1, !tbaa !395
  %7536 = shufflevector <16 x i8> %7532, <16 x i8> %7535, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7537 = zext <32 x i8> %7536 to <32 x i16>
  %7538 = mul <32 x i16> %4023, %7537
  %7539 = bitcast i8* %7529 to <16 x i8>*
  %7540 = load <16 x i8>, <16 x i8>* %7539, align 16, !tbaa !395
  %7541 = getelementptr inbounds i8, i8* %7529, i64 16
  %7542 = bitcast i8* %7541 to <16 x i8>*
  %7543 = load <16 x i8>, <16 x i8>* %7542, align 16, !tbaa !395
  %7544 = shufflevector <16 x i8> %7540, <16 x i8> %7543, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7545 = zext <32 x i8> %7544 to <32 x i16>
  %7546 = mul <32 x i16> %4027, %7545
  %7547 = getelementptr inbounds i8, i8* %7529, i64 2
  %7548 = bitcast i8* %7547 to <16 x i8>*
  %7549 = load <16 x i8>, <16 x i8>* %7548, align 2, !tbaa !395
  %7550 = getelementptr inbounds i8, i8* %7529, i64 18
  %7551 = bitcast i8* %7550 to <16 x i8>*
  %7552 = load <16 x i8>, <16 x i8>* %7551, align 2, !tbaa !395
  %7553 = shufflevector <16 x i8> %7549, <16 x i8> %7552, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7554 = zext <32 x i8> %7553 to <32 x i16>
  %7555 = mul <32 x i16> %4031, %7554
  %7556 = shl nsw i64 %7524, 5
  %7557 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7556
  %7558 = bitcast i8* %7557 to <16 x i8>*
  %7559 = load <16 x i8>, <16 x i8>* %7558, align 16, !tbaa !395
  %7560 = getelementptr inbounds i8, i8* %7557, i64 16
  %7561 = bitcast i8* %7560 to <16 x i8>*
  %7562 = load <16 x i8>, <16 x i8>* %7561, align 16, !tbaa !395
  %7563 = shufflevector <16 x i8> %7559, <16 x i8> %7562, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7564 = zext <32 x i8> %7563 to <32 x i16>
  %7565 = mul <32 x i16> %4035, %7564
  %7566 = getelementptr inbounds i8, i8* %7557, i64 1
  %7567 = bitcast i8* %7566 to <16 x i8>*
  %7568 = load <16 x i8>, <16 x i8>* %7567, align 1, !tbaa !395
  %7569 = getelementptr inbounds i8, i8* %7557, i64 17
  %7570 = bitcast i8* %7569 to <16 x i8>*
  %7571 = load <16 x i8>, <16 x i8>* %7570, align 1, !tbaa !395
  %7572 = shufflevector <16 x i8> %7568, <16 x i8> %7571, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7573 = zext <32 x i8> %7572 to <32 x i16>
  %7574 = mul <32 x i16> %4039, %7573
  %7575 = getelementptr inbounds i8, i8* %7557, i64 2
  %7576 = bitcast i8* %7575 to <16 x i8>*
  %7577 = load <16 x i8>, <16 x i8>* %7576, align 2, !tbaa !395
  %7578 = getelementptr inbounds i8, i8* %7557, i64 18
  %7579 = bitcast i8* %7578 to <16 x i8>*
  %7580 = load <16 x i8>, <16 x i8>* %7579, align 2, !tbaa !395
  %7581 = shufflevector <16 x i8> %7577, <16 x i8> %7580, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7582 = zext <32 x i8> %7581 to <32 x i16>
  %7583 = mul <32 x i16> %4043, %7582
  %7584 = shl nsw i64 %7526, 5
  %7585 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7584
  %7586 = bitcast i8* %7585 to <16 x i8>*
  %7587 = load <16 x i8>, <16 x i8>* %7586, align 16, !tbaa !395
  %7588 = getelementptr inbounds i8, i8* %7585, i64 16
  %7589 = bitcast i8* %7588 to <16 x i8>*
  %7590 = load <16 x i8>, <16 x i8>* %7589, align 16, !tbaa !395
  %7591 = shufflevector <16 x i8> %7587, <16 x i8> %7590, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7592 = zext <32 x i8> %7591 to <32 x i16>
  %7593 = mul <32 x i16> %4047, %7592
  %7594 = getelementptr inbounds i8, i8* %7585, i64 2
  %7595 = bitcast i8* %7594 to <16 x i8>*
  %7596 = load <16 x i8>, <16 x i8>* %7595, align 2, !tbaa !395
  %7597 = getelementptr inbounds i8, i8* %7585, i64 18
  %7598 = bitcast i8* %7597 to <16 x i8>*
  %7599 = load <16 x i8>, <16 x i8>* %7598, align 2, !tbaa !395
  %7600 = shufflevector <16 x i8> %7596, <16 x i8> %7599, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7601 = zext <32 x i8> %7600 to <32 x i16>
  %7602 = mul <32 x i16> %4051, %7601
  %7603 = getelementptr inbounds i8, i8* %7585, i64 1
  %7604 = bitcast i8* %7603 to <16 x i8>*
  %7605 = load <16 x i8>, <16 x i8>* %7604, align 1, !tbaa !395
  %7606 = getelementptr inbounds i8, i8* %7585, i64 17
  %7607 = bitcast i8* %7606 to <16 x i8>*
  %7608 = load <16 x i8>, <16 x i8>* %7607, align 1, !tbaa !395
  %7609 = shufflevector <16 x i8> %7605, <16 x i8> %7608, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7610 = zext <32 x i8> %7609 to <32 x i16>
  %7611 = mul <32 x i16> %4055, %7610
  %7612 = add <32 x i16> %7546, %7538
  %7613 = add <32 x i16> %7612, %7555
  %7614 = add <32 x i16> %7613, %7565
  %7615 = add <32 x i16> %7614, %7574
  %7616 = add <32 x i16> %7615, %7583
  %7617 = add <32 x i16> %7616, %7593
  %7618 = add <32 x i16> %7617, %7602
  %7619 = add <32 x i16> %7618, %7611
  %t500 = ashr <32 x i16> %7619, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %7620 = bitcast <32 x i16> %t500 to <8 x i64>
  %7621 = shufflevector <8 x i64> %7620, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t501 = bitcast <2 x i64> %7621 to <8 x i16>
  %7622 = shufflevector <8 x i64> %7620, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t502 = bitcast <2 x i64> %7622 to <8 x i16>
  %7623 = shufflevector <8 x i64> %7620, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t503 = bitcast <2 x i64> %7623 to <8 x i16>
  %7624 = shufflevector <8 x i64> %7620, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t504 = bitcast <2 x i64> %7624 to <8 x i16>
  %7625 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t501) #11
  %7626 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t502) #11
  %7627 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t503) #11
  %7628 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t504) #11
  %7629 = shufflevector <8 x i8> %7625, <8 x i8> %7626, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7630 = shufflevector <8 x i8> %7627, <8 x i8> %7628, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7631 = shufflevector <16 x i8> %7629, <16 x i8> %7630, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7632 = bitcast <32 x i8> %7631 to <4 x i64>
  %7633 = shufflevector <4 x i64> %7632, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %7634 = shufflevector <4 x i64> %7632, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %7635 = getelementptr inbounds i8, i8* %125, i64 %7525
  %7636 = bitcast i8* %7635 to <2 x i64>*
  store <2 x i64> %7633, <2 x i64>* %7636, align 1, !tbaa !399
  %7637 = getelementptr inbounds i8, i8* %7635, i64 16
  %7638 = bitcast i8* %7637 to <2 x i64>*
  store <2 x i64> %7634, <2 x i64>* %7638, align 1, !tbaa !399
  %7639 = or i64 %7524, 1
  %7640 = add nsw i64 %7639, %221
  %7641 = add nsw i64 %7639, %222
  %7642 = shl nsw i64 %7641, 5
  %7643 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7642
  %7644 = getelementptr inbounds i8, i8* %7643, i64 1
  %7645 = bitcast i8* %7644 to <16 x i8>*
  %7646 = load <16 x i8>, <16 x i8>* %7645, align 1, !tbaa !395
  %7647 = getelementptr inbounds i8, i8* %7643, i64 17
  %7648 = bitcast i8* %7647 to <16 x i8>*
  %7649 = load <16 x i8>, <16 x i8>* %7648, align 1, !tbaa !395
  %7650 = shufflevector <16 x i8> %7646, <16 x i8> %7649, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7651 = zext <32 x i8> %7650 to <32 x i16>
  %7652 = mul <32 x i16> %4023, %7651
  %7653 = bitcast i8* %7643 to <16 x i8>*
  %7654 = load <16 x i8>, <16 x i8>* %7653, align 16, !tbaa !395
  %7655 = getelementptr inbounds i8, i8* %7643, i64 16
  %7656 = bitcast i8* %7655 to <16 x i8>*
  %7657 = load <16 x i8>, <16 x i8>* %7656, align 16, !tbaa !395
  %7658 = shufflevector <16 x i8> %7654, <16 x i8> %7657, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7659 = zext <32 x i8> %7658 to <32 x i16>
  %7660 = mul <32 x i16> %4027, %7659
  %7661 = getelementptr inbounds i8, i8* %7643, i64 2
  %7662 = bitcast i8* %7661 to <16 x i8>*
  %7663 = load <16 x i8>, <16 x i8>* %7662, align 2, !tbaa !395
  %7664 = getelementptr inbounds i8, i8* %7643, i64 18
  %7665 = bitcast i8* %7664 to <16 x i8>*
  %7666 = load <16 x i8>, <16 x i8>* %7665, align 2, !tbaa !395
  %7667 = shufflevector <16 x i8> %7663, <16 x i8> %7666, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7668 = zext <32 x i8> %7667 to <32 x i16>
  %7669 = mul <32 x i16> %4031, %7668
  %7670 = shl nsw i64 %7639, 5
  %7671 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7670
  %7672 = bitcast i8* %7671 to <16 x i8>*
  %7673 = load <16 x i8>, <16 x i8>* %7672, align 16, !tbaa !395
  %7674 = getelementptr inbounds i8, i8* %7671, i64 16
  %7675 = bitcast i8* %7674 to <16 x i8>*
  %7676 = load <16 x i8>, <16 x i8>* %7675, align 16, !tbaa !395
  %7677 = shufflevector <16 x i8> %7673, <16 x i8> %7676, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7678 = zext <32 x i8> %7677 to <32 x i16>
  %7679 = mul <32 x i16> %4035, %7678
  %7680 = getelementptr inbounds i8, i8* %7671, i64 1
  %7681 = bitcast i8* %7680 to <16 x i8>*
  %7682 = load <16 x i8>, <16 x i8>* %7681, align 1, !tbaa !395
  %7683 = getelementptr inbounds i8, i8* %7671, i64 17
  %7684 = bitcast i8* %7683 to <16 x i8>*
  %7685 = load <16 x i8>, <16 x i8>* %7684, align 1, !tbaa !395
  %7686 = shufflevector <16 x i8> %7682, <16 x i8> %7685, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7687 = zext <32 x i8> %7686 to <32 x i16>
  %7688 = mul <32 x i16> %4039, %7687
  %7689 = getelementptr inbounds i8, i8* %7671, i64 2
  %7690 = bitcast i8* %7689 to <16 x i8>*
  %7691 = load <16 x i8>, <16 x i8>* %7690, align 2, !tbaa !395
  %7692 = getelementptr inbounds i8, i8* %7671, i64 18
  %7693 = bitcast i8* %7692 to <16 x i8>*
  %7694 = load <16 x i8>, <16 x i8>* %7693, align 2, !tbaa !395
  %7695 = shufflevector <16 x i8> %7691, <16 x i8> %7694, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7696 = zext <32 x i8> %7695 to <32 x i16>
  %7697 = mul <32 x i16> %4043, %7696
  %7698 = shl nsw i64 %7640, 5
  %7699 = getelementptr inbounds i8, i8* %input_bounded93, i64 %7698
  %7700 = bitcast i8* %7699 to <16 x i8>*
  %7701 = load <16 x i8>, <16 x i8>* %7700, align 16, !tbaa !395
  %7702 = getelementptr inbounds i8, i8* %7699, i64 16
  %7703 = bitcast i8* %7702 to <16 x i8>*
  %7704 = load <16 x i8>, <16 x i8>* %7703, align 16, !tbaa !395
  %7705 = shufflevector <16 x i8> %7701, <16 x i8> %7704, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7706 = zext <32 x i8> %7705 to <32 x i16>
  %7707 = mul <32 x i16> %4047, %7706
  %7708 = getelementptr inbounds i8, i8* %7699, i64 2
  %7709 = bitcast i8* %7708 to <16 x i8>*
  %7710 = load <16 x i8>, <16 x i8>* %7709, align 2, !tbaa !395
  %7711 = getelementptr inbounds i8, i8* %7699, i64 18
  %7712 = bitcast i8* %7711 to <16 x i8>*
  %7713 = load <16 x i8>, <16 x i8>* %7712, align 2, !tbaa !395
  %7714 = shufflevector <16 x i8> %7710, <16 x i8> %7713, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7715 = zext <32 x i8> %7714 to <32 x i16>
  %7716 = mul <32 x i16> %4051, %7715
  %7717 = getelementptr inbounds i8, i8* %7699, i64 1
  %7718 = bitcast i8* %7717 to <16 x i8>*
  %7719 = load <16 x i8>, <16 x i8>* %7718, align 1, !tbaa !395
  %7720 = getelementptr inbounds i8, i8* %7699, i64 17
  %7721 = bitcast i8* %7720 to <16 x i8>*
  %7722 = load <16 x i8>, <16 x i8>* %7721, align 1, !tbaa !395
  %7723 = shufflevector <16 x i8> %7719, <16 x i8> %7722, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7724 = zext <32 x i8> %7723 to <32 x i16>
  %7725 = mul <32 x i16> %4055, %7724
  %7726 = add <32 x i16> %7660, %7652
  %7727 = add <32 x i16> %7726, %7669
  %7728 = add <32 x i16> %7727, %7679
  %7729 = add <32 x i16> %7728, %7688
  %7730 = add <32 x i16> %7729, %7697
  %7731 = add <32 x i16> %7730, %7707
  %7732 = add <32 x i16> %7731, %7716
  %7733 = add <32 x i16> %7732, %7725
  %t500.1 = ashr <32 x i16> %7733, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %7734 = bitcast <32 x i16> %t500.1 to <8 x i64>
  %7735 = shufflevector <8 x i64> %7734, <8 x i64> undef, <2 x i32> <i32 0, i32 1>
  %t501.1 = bitcast <2 x i64> %7735 to <8 x i16>
  %7736 = shufflevector <8 x i64> %7734, <8 x i64> undef, <2 x i32> <i32 2, i32 3>
  %t502.1 = bitcast <2 x i64> %7736 to <8 x i16>
  %7737 = shufflevector <8 x i64> %7734, <8 x i64> undef, <2 x i32> <i32 4, i32 5>
  %t503.1 = bitcast <2 x i64> %7737 to <8 x i16>
  %7738 = shufflevector <8 x i64> %7734, <8 x i64> undef, <2 x i32> <i32 6, i32 7>
  %t504.1 = bitcast <2 x i64> %7738 to <8 x i16>
  %7739 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t501.1) #11
  %7740 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t502.1) #11
  %7741 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t503.1) #11
  %7742 = call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %t504.1) #11
  %7743 = shufflevector <8 x i8> %7739, <8 x i8> %7740, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7744 = shufflevector <8 x i8> %7741, <8 x i8> %7742, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %7745 = shufflevector <16 x i8> %7743, <16 x i8> %7744, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %7746 = bitcast <32 x i8> %7745 to <4 x i64>
  %7747 = shufflevector <4 x i64> %7746, <4 x i64> undef, <2 x i32> <i32 0, i32 1>
  %7748 = shufflevector <4 x i64> %7746, <4 x i64> undef, <2 x i32> <i32 2, i32 3>
  %7749 = add nsw i64 %7525, 32
  %7750 = getelementptr inbounds i8, i8* %125, i64 %7749
  %7751 = bitcast i8* %7750 to <2 x i64>*
  store <2 x i64> %7747, <2 x i64>* %7751, align 1, !tbaa !399
  %7752 = getelementptr inbounds i8, i8* %7750, i64 16
  %7753 = bitcast i8* %7752 to <2 x i64>*
  store <2 x i64> %7748, <2 x i64>* %7753, align 1, !tbaa !399
  %indvars.iv.next731 = add nuw nsw i64 %indvars.iv730, 1
  %.not345 = icmp eq i64 %indvars.iv.next731, %223
  br i1 %.not345, label %"end for output.s0.x.x186", label %"for output.s0.x.x185"

"end for output.s0.x.x186":                       ; preds = %"for output.s0.x.x185", %"consume input_bounded146"
  %indvars.iv.next733 = add nuw nsw i64 %indvars.iv732, 1
  %7754 = icmp eq i64 %indvars.iv.next733, %zext734
  br i1 %7754, label %if.then.i465.loopexit, label %"for output.s0.y.y88"
}

; Function Attrs: nounwind
define i32 @conv3x3a16_argv(i8** nocapture readonly %0) local_unnamed_addr #11 {
entry:
  %1 = bitcast i8** %0 to %struct.halide_buffer_t**
  %2 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %1, align 8
  %3 = getelementptr i8*, i8** %0, i64 1
  %4 = bitcast i8** %3 to %struct.halide_buffer_t**
  %5 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %4, align 8
  %6 = getelementptr i8*, i8** %0, i64 2
  %7 = bitcast i8** %6 to %struct.halide_buffer_t**
  %8 = load %struct.halide_buffer_t*, %struct.halide_buffer_t** %7, align 8
  %9 = tail call i32 @conv3x3a16(%struct.halide_buffer_t* %2, %struct.halide_buffer_t* %5, %struct.halide_buffer_t* %8) #16
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone willreturn
define nonnull %struct.halide_filter_metadata_t* @conv3x3a16_metadata() local_unnamed_addr #12 {
entry:
  ret %struct.halide_filter_metadata_t* @conv3x3a16_metadata_storage
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.0(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.1(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.2(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.3(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.4(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.5(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.6(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.7(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.8(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.9(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.10(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.11(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.12(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.13(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.14(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.15(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.16(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.17(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.18(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.19(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.20(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.21(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.22(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.23(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.24(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.25(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.26(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.27(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.28(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.29(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.30(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.31(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.32(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.33(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.34(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.35(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.36(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.37(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.38(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.39(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.40(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.41(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.42(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.43(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.44(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.45(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.46(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.47(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.48(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.49(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.50(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.51(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.52(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.53(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.54(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.55(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.56(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.57(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.58(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.59(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.60(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.61(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.62(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.63(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.64(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.65(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.66(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.67(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.68(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.69(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.70(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.71(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.72(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.73(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.74(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.75(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.76(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.77(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.78(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.79(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.80(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.81(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.82(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.83(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.84(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.85(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.86(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.87(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.88(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.89(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.90(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.91(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.92(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.93(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.94(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.95(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.96(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.97(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.98(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.99(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.100(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.101(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.102(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.103(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.104(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.105(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.106(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.107(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.108(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.109(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.110(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.111(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.112(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.113(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.114(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.115(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.116(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.117(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.118(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.119(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.120(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.121(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.122(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.123(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.124(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.125(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.126(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nounwind readnone willreturn
define <8 x i8> @hydride.node.conv3x3a16_arm_depth3.127(<8 x i16> %arg) local_unnamed_addr #13 {
entry:
  %0 = tail call <8 x i8> @llvm.aarch64.neon.sqxtun.v8i8(<8 x i16> %arg) #11
  ret <8 x i8> %0
}

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i64 @llvm.vector.reduce.add.v2i64(<2 x i64>) #9

attributes #0 = { nounwind mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-builtins" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind willreturn mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #6 = { alwaysinline nounwind willreturn mustprogress "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { nounwind willreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nosync nounwind readnone willreturn }
attributes #10 = { nounwind "reciprocal-estimates"="none" }
attributes #11 = { nounwind }
attributes #12 = { norecurse nounwind readnone willreturn }
attributes #13 = { nounwind readnone willreturn }
attributes #14 = { nobuiltin nounwind "no-builtins" }
attributes #15 = { nobuiltin "no-builtins" }
attributes #16 = { noinline }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10, !11, !12}
!llvm.ident = !{!13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13, !13}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 2, !"halide_use_soft_float_abi", i32 0}
!3 = !{i32 2, !"halide_mcpu", !"apple-a12"}
!4 = !{i32 2, !"halide_mattrs", !"+reserve-x18"}
!5 = !{i32 2, !"halide_mabi", !""}
!6 = !{i32 2, !"halide_use_pic", i32 1}
!7 = !{i32 2, !"halide_use_large_code_model", i32 0}
!8 = !{i32 2, !"halide_per_instruction_fast_math_flags", i32 0}
!9 = !{i32 1, !"branch-target-enforcement", i32 0}
!10 = !{i32 1, !"sign-return-address", i32 0}
!11 = !{i32 1, !"sign-return-address-all", i32 0}
!12 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!13 = !{!"clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)"}
!14 = !{!15, !15, i64 0}
!15 = !{!"any pointer", !16, i64 0}
!16 = !{!"omnipotent char", !17, i64 0}
!17 = !{!"Simple C++ TBAA"}
!18 = !{!16, !16, i64 0}
!19 = !{!20, !20, i64 0}
!20 = !{!"bool", !16, i64 0}
!21 = !{i8 0, i8 2}
!22 = !{!23, !23, i64 0}
!23 = !{!"long long", !16, i64 0}
!24 = !{!25, !26, i64 0}
!25 = !{!"_ZTS18mach_timebase_info", !26, i64 0, !26, i64 4}
!26 = !{!"int", !16, i64 0}
!27 = !{!25, !26, i64 4}
!28 = !{!29, !15, i64 0}
!29 = !{!"_ZTSN6Halide7Runtime8Internal4workE", !30, i64 0, !15, i64 56, !15, i64 64, !15, i64 72, !26, i64 80, !15, i64 88, !26, i64 96, !15, i64 104, !26, i64 112, !26, i64 116, !26, i64 120, !20, i64 124}
!30 = !{!"_ZTS22halide_parallel_task_t", !15, i64 0, !15, i64 8, !15, i64 16, !15, i64 24, !26, i64 32, !26, i64 36, !26, i64 40, !26, i64 44, !20, i64 48}
!31 = !{!29, !26, i64 36}
!32 = !{!29, !26, i64 40}
!33 = !{!29, !20, i64 48}
!34 = !{!29, !15, i64 24}
!35 = !{!29, !26, i64 32}
!36 = !{!29, !15, i64 8}
!37 = !{!29, !26, i64 44}
!38 = !{!29, !15, i64 16}
!39 = !{!29, !15, i64 56}
!40 = !{!29, !15, i64 104}
!41 = !{!26, !26, i64 0}
!42 = !{!29, !26, i64 120}
!43 = !{!29, !20, i64 124}
!44 = !{!29, !15, i64 72}
!45 = !{!29, !26, i64 80}
!46 = !{!29, !15, i64 88}
!47 = !{!29, !26, i64 116}
!48 = !{!49, !49, i64 0}
!49 = !{!"vtable pointer", !17, i64 0}
!50 = !{!51, !15, i64 8}
!51 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization21mutex_parking_controlE", !15, i64 8}
!52 = !{!53, !20, i64 2121}
!53 = !{!"_ZTSN6Halide7Runtime8Internal12work_queue_tE", !54, i64 0, !26, i64 8, !26, i64 12, !15, i64 16, !26, i64 24, !26, i64 28, !26, i64 32, !55, i64 40, !55, i64 48, !55, i64 56, !26, i64 64, !26, i64 68, !16, i64 72, !20, i64 2120, !20, i64 2121, !26, i64 2124}
!54 = !{!"_ZTS12halide_mutex", !16, i64 0}
!55 = !{!"_ZTS11halide_cond", !16, i64 0}
!56 = distinct !{!56, !57}
!57 = !{!"llvm.loop.mustprogress"}
!58 = !{!53, !26, i64 8}
!59 = distinct !{!59, !57}
!60 = !{!53, !26, i64 24}
!61 = !{!53, !26, i64 2124}
!62 = !{!53, !26, i64 28}
!63 = distinct !{!63, !57}
!64 = !{!29, !26, i64 112}
!65 = !{!29, !26, i64 96}
!66 = !{!53, !15, i64 16}
!67 = !{!29, !15, i64 64}
!68 = distinct !{!68, !57, !69}
!69 = !{!"llvm.loop.isvectorized", i32 1}
!70 = !{!53, !26, i64 68}
!71 = !{!53, !26, i64 32}
!72 = distinct !{!72, !57, !69}
!73 = !{!53, !20, i64 2120}
!74 = distinct !{!74, !57}
!75 = !{!76, !15, i64 0}
!76 = !{!"_ZTS26halide_semaphore_acquire_t", !15, i64 0, !26, i64 8}
!77 = !{!76, !26, i64 8}
!78 = distinct !{!78, !57}
!79 = !{!53, !26, i64 64}
!80 = distinct !{!80, !57}
!81 = distinct !{!81, !57}
!82 = !{i64 0, i64 8, !14, i64 8, i64 8, !14, i64 16, i64 8, !14, i64 24, i64 8, !14, i64 32, i64 4, !41, i64 36, i64 4, !41, i64 40, i64 4, !41, i64 44, i64 4, !41, i64 48, i64 1, !19, i64 56, i64 8, !14, i64 64, i64 8, !14, i64 72, i64 8, !14, i64 80, i64 4, !41, i64 88, i64 8, !14, i64 96, i64 4, !41, i64 104, i64 8, !14, i64 112, i64 4, !41, i64 116, i64 4, !41, i64 120, i64 4, !41, i64 124, i64 1, !19}
!83 = !{i64 0, i64 8, !14, i64 8, i64 8, !14, i64 16, i64 8, !14, i64 24, i64 4, !41, i64 28, i64 4, !41, i64 32, i64 4, !41, i64 36, i64 4, !41, i64 40, i64 1, !19, i64 48, i64 8, !14, i64 56, i64 8, !14, i64 64, i64 8, !14, i64 72, i64 4, !41, i64 80, i64 8, !14, i64 88, i64 4, !41, i64 96, i64 8, !14, i64 104, i64 4, !41, i64 108, i64 4, !41, i64 112, i64 4, !41, i64 116, i64 1, !19}
!84 = !{i64 0, i64 8, !14, i64 8, i64 8, !14, i64 16, i64 8, !14, i64 24, i64 4, !41, i64 32, i64 8, !14, i64 40, i64 4, !41, i64 48, i64 8, !14, i64 56, i64 4, !41, i64 60, i64 4, !41, i64 64, i64 4, !41, i64 68, i64 1, !19}
!85 = !{i64 0, i64 8, !14, i64 8, i64 4, !41, i64 12, i64 4, !41, i64 16, i64 4, !41, i64 20, i64 1, !19}
!86 = distinct !{!86, !57}
!87 = distinct !{!87, !57}
!88 = !{!89, !15, i64 144}
!89 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization10queue_dataE", !90, i64 0, !23, i64 136, !15, i64 144, !23, i64 152}
!90 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization13thread_parkerE", !91, i64 0, !92, i64 64, !20, i64 128}
!91 = !{!"_ZTS15pthread_mutex_t", !16, i64 0}
!92 = !{!"_ZTS14pthread_cond_t", !16, i64 0}
!93 = !{!94, !15, i64 16}
!94 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization11hash_bucketE", !95, i64 0, !15, i64 8, !15, i64 16}
!95 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization9word_lockE", !23, i64 0}
!96 = distinct !{!96, !57}
!97 = !{!89, !23, i64 152}
!98 = !{!90, !20, i64 128}
!99 = distinct !{!99, !57}
!100 = !{!101, !15, i64 152}
!101 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization20word_lock_queue_dataE", !90, i64 0, !15, i64 136, !15, i64 144, !15, i64 152}
!102 = !{!101, !15, i64 136}
!103 = !{!101, !15, i64 144}
!104 = distinct !{!104, !57}
!105 = distinct !{!105, !57}
!106 = distinct !{!106, !57}
!107 = !{!108, !15, i64 8}
!108 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization25broadcast_parking_controlE", !15, i64 8, !15, i64 16}
!109 = !{!108, !15, i64 16}
!110 = !{!111, !15, i64 8}
!111 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization20wait_parking_controlE", !15, i64 8, !15, i64 16}
!112 = !{!111, !15, i64 16}
!113 = !{!89, !23, i64 136}
!114 = !{!115, !20, i64 0}
!115 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization15validate_actionE", !20, i64 0, !23, i64 8}
!116 = !{!115, !23, i64 8}
!117 = !{!94, !15, i64 8}
!118 = !{!119, !15, i64 0}
!119 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization11bucket_pairE", !15, i64 0, !15, i64 8}
!120 = distinct !{!120, !57}
!121 = !{!119, !15, i64 8}
!122 = !{!123, !15, i64 0}
!123 = !{!"_ZTSN6Halide7Runtime8Internal14spawned_threadE", !15, i64 0, !15, i64 8, !124, i64 16}
!124 = !{!"long", !16, i64 0}
!125 = !{!123, !15, i64 8}
!126 = !{!123, !124, i64 16}
!127 = !{!30, !26, i64 40}
!128 = !{i64 0, i64 8, !14, i64 8, i64 8, !14, i64 16, i64 8, !14, i64 24, i64 8, !14, i64 32, i64 4, !41, i64 36, i64 4, !41, i64 40, i64 4, !41, i64 44, i64 4, !41, i64 48, i64 1, !19}
!129 = distinct !{!129, !57}
!130 = distinct !{!130, !57}
!131 = distinct !{!131, !57}
!132 = !{!133, !15, i64 8}
!133 = !{!"_ZTSN6Halide7Runtime8Internal15Synchronization22signal_parking_controlE", !15, i64 8, !15, i64 16}
!134 = !{!133, !15, i64 16}
!135 = !{!136, !15, i64 0}
!136 = !{!"_ZTS18halide_mutex_array", !15, i64 0}
!137 = distinct !{!137, !57}
!138 = !{!139, !142, i64 34}
!139 = !{!"_ZTS20halide_trace_event_t", !15, i64 0, !15, i64 8, !15, i64 16, !15, i64 24, !140, i64 32, !143, i64 36, !26, i64 40, !26, i64 44, !26, i64 48}
!140 = !{!"_ZTS13halide_type_t", !141, i64 0, !16, i64 1, !142, i64 2}
!141 = !{!"_ZTS18halide_type_code_t", !16, i64 0}
!142 = !{!"short", !16, i64 0}
!143 = !{!"_ZTS25halide_trace_event_code_t", !16, i64 0}
!144 = !{!140, !16, i64 1}
!145 = !{!139, !26, i64 48}
!146 = !{!139, !15, i64 0}
!147 = !{!139, !15, i64 24}
!148 = !{!149, !26, i64 0}
!149 = !{!"_ZTSN6Halide7Runtime8Internal23SharedExclusiveSpinLockE", !26, i64 0}
!150 = !{!151, !26, i64 4}
!151 = !{!"_ZTSN6Halide7Runtime8Internal11TraceBufferE", !149, i64 0, !26, i64 4, !26, i64 8, !16, i64 12}
!152 = !{!151, !26, i64 8}
!153 = distinct !{!153, !57}
!154 = !{!155, !26, i64 0}
!155 = !{!"_ZTS21halide_trace_packet_t", !26, i64 0, !26, i64 4, !140, i64 8, !143, i64 12, !26, i64 16, !26, i64 20, !26, i64 24}
!156 = !{!155, !26, i64 4}
!157 = !{!139, !15, i64 16}
!158 = !{!139, !15, i64 8}
!159 = !{!155, !26, i64 24}
!160 = !{!155, !142, i64 10}
!161 = distinct !{!161, !57}
!162 = !{!139, !143, i64 36}
!163 = !{!139, !16, i64 33}
!164 = distinct !{!164, !57}
!165 = !{!139, !26, i64 44}
!166 = distinct !{!166, !57, !167}
!167 = !{!"llvm.loop.peeled.count", i32 1}
!168 = !{!139, !141, i64 32}
!169 = !{!142, !142, i64 0}
!170 = !{!171, !171, i64 0}
!171 = !{!"float", !16, i64 0}
!172 = !{!173, !173, i64 0}
!173 = !{!"double", !16, i64 0}
!174 = distinct !{!174, !57, !167}
!175 = distinct !{!175, !57}
!176 = !{!139, !26, i64 40}
!177 = distinct !{!177, !57}
!178 = distinct !{!178, !57}
!179 = distinct !{!179, !57}
!180 = !{!181, !15, i64 16}
!181 = !{!"_ZTS15halide_buffer_t", !23, i64 0, !15, i64 8, !15, i64 16, !23, i64 24, !140, i64 32, !26, i64 36, !15, i64 40, !15, i64 48}
!182 = !{!181, !23, i64 0}
!183 = !{!181, !26, i64 36}
!184 = !{!181, !15, i64 40}
!185 = !{!186, !26, i64 8}
!186 = !{!"_ZTS18halide_dimension_t", !26, i64 0, !26, i64 4, !26, i64 8, !26, i64 12}
!187 = distinct !{!187, !57, !69}
!188 = !{i64 0, i64 4, !41, i64 4, i64 4, !41, i64 8, i64 4, !41, i64 12, i64 4, !41}
!189 = !{!186, !26, i64 4}
!190 = distinct !{!190, !57}
!191 = distinct !{!191, !57, !69}
!192 = !{!193, !142, i64 0}
!193 = !{!"_ZTSN6Halide7Runtime8Internal18halide_tiff_headerE", !142, i64 0, !142, i64 2, !26, i64 4, !142, i64 8, !16, i64 10, !26, i64 190, !16, i64 194, !16, i64 202}
!194 = !{!193, !142, i64 2}
!195 = !{!193, !26, i64 4}
!196 = !{!193, !142, i64 8}
!197 = !{!198, !142, i64 0}
!198 = !{!"_ZTSN6Halide7Runtime8Internal8tiff_tagE", !142, i64 0, !142, i64 2, !26, i64 4, !16, i64 8}
!199 = !{!198, !142, i64 2}
!200 = !{!198, !26, i64 4}
!201 = distinct !{!201, !57}
!202 = distinct !{!202, !57}
!203 = distinct !{!203, !57}
!204 = distinct !{!204, !57}
!205 = distinct !{!205, !57}
!206 = !{!207}
!207 = distinct !{!207, !208}
!208 = distinct !{!208, !"LVerDomain"}
!209 = !{!210}
!210 = distinct !{!210, !208}
!211 = distinct !{!211, !57, !69}
!212 = distinct !{!212, !57, !69}
!213 = distinct !{!213, !57, !69}
!214 = distinct !{!214, !57, !69}
!215 = distinct !{!215, !57, !216, !69}
!216 = !{!"llvm.loop.unroll.runtime.disable"}
!217 = distinct !{!217, !57, !69}
!218 = distinct !{!218, !57, !69}
!219 = distinct !{!219, !57, !69}
!220 = distinct !{!220, !57, !69}
!221 = !{!186, !26, i64 0}
!222 = distinct !{!222, !57}
!223 = distinct !{!223, !57, !69}
!224 = distinct !{!224, !57, !216, !69}
!225 = distinct !{!225, !57}
!226 = distinct !{!226, !57}
!227 = distinct !{!227, !57}
!228 = distinct !{!228, !57}
!229 = !{!230, !15, i64 0}
!230 = !{!"_ZTSN6Halide7Runtime8Internal10CacheEntryE", !15, i64 0, !15, i64 8, !15, i64 16, !15, i64 24, !124, i64 32, !15, i64 40, !26, i64 48, !26, i64 52, !26, i64 56, !26, i64 60, !15, i64 64, !15, i64 72, !23, i64 80, !20, i64 88}
!231 = distinct !{!231, !57}
!232 = !{!230, !26, i64 56}
!233 = !{!230, !15, i64 24}
!234 = !{!230, !15, i64 72}
!235 = distinct !{!235, !57}
!236 = distinct !{!236, !57}
!237 = !{!238, !23, i64 0}
!238 = !{!"_ZTSN6Halide7Runtime8Internal11device_copyE", !23, i64 0, !23, i64 8, !23, i64 16, !16, i64 24, !16, i64 152, !16, i64 280, !23, i64 408}
!239 = !{!238, !23, i64 8}
!240 = !{!238, !23, i64 408}
!241 = distinct !{!241, !57}
!242 = !{!238, !23, i64 16}
!243 = distinct !{!243, !57, !69}
!244 = distinct !{!244, !57, !216, !69}
!245 = distinct !{!245, !57}
!246 = distinct !{!246, !57}
!247 = distinct !{!247, !57}
!248 = distinct !{!248, !57}
!249 = !{i64 0, i64 8, !22, i64 8, i64 8, !22, i64 16, i64 8, !22, i64 24, i64 128, !18, i64 152, i64 128, !18, i64 280, i64 128, !18, i64 408, i64 8, !22}
!250 = distinct !{!250, !57}
!251 = !{!186, !26, i64 12}
!252 = !{!230, !15, i64 16}
!253 = !{!230, !124, i64 32}
!254 = !{!230, !26, i64 48}
!255 = !{!230, !26, i64 52}
!256 = !{!230, !26, i64 60}
!257 = !{!230, !15, i64 64}
!258 = !{!230, !15, i64 40}
!259 = distinct !{!259, !57}
!260 = distinct !{!260, !57}
!261 = distinct !{!261, !57}
!262 = !{!230, !20, i64 88}
!263 = !{!230, !23, i64 80}
!264 = !{i64 0, i64 8, !22, i64 8, i64 8, !14, i64 16, i64 8, !14, i64 24, i64 8, !22, i64 32, i64 1, !265, i64 33, i64 1, !18, i64 34, i64 2, !169, i64 36, i64 4, !41, i64 40, i64 8, !14, i64 48, i64 8, !14}
!265 = !{!141, !141, i64 0}
!266 = distinct !{!266, !57}
!267 = distinct !{!267, !57}
!268 = !{!230, !15, i64 8}
!269 = distinct !{!269, !57}
!270 = distinct !{!270, !57, !69}
!271 = distinct !{!271, !57, !69}
!272 = distinct !{!272, !57, !69}
!273 = distinct !{!273, !57, !69}
!274 = distinct !{!274, !57}
!275 = distinct !{!275, !57}
!276 = distinct !{!276, !57}
!277 = distinct !{!277, !57}
!278 = distinct !{!278, !57}
!279 = distinct !{!279, !57, !69}
!280 = distinct !{!280, !57, !69}
!281 = distinct !{!281, !57, !69}
!282 = distinct !{!282, !57, !69}
!283 = distinct !{!283, !57}
!284 = !{!285, !26, i64 8}
!285 = !{!"_ZTSN6Halide7Runtime8Internal16CacheBlockHeaderE", !15, i64 0, !26, i64 8}
!286 = !{!285, !15, i64 0}
!287 = distinct !{!287, !57}
!288 = distinct !{!288, !57}
!289 = distinct !{!289, !57}
!290 = distinct !{!290, !57}
!291 = distinct !{!291, !57, !69}
!292 = distinct !{!292, !57, !69}
!293 = distinct !{!293, !57, !69}
!294 = distinct !{!294, !57, !69}
!295 = distinct !{!295, !57}
!296 = distinct !{!296, !57}
!297 = distinct !{!297, !57}
!298 = distinct !{!298, !57}
!299 = distinct !{!299, !57}
!300 = distinct !{!300, !57}
!301 = distinct !{!301, !57}
!302 = distinct !{!302, !57}
!303 = distinct !{!303, !57}
!304 = !{!140, !141, i64 0}
!305 = !{!140, !142, i64 2}
!306 = !{!181, !15, i64 8}
!307 = !{!181, !23, i64 24}
!308 = distinct !{!308, !57}
!309 = !{!310, !15, i64 0}
!310 = !{!"_ZTS29halide_device_allocation_pool", !15, i64 0, !15, i64 8}
!311 = distinct !{!311, !57}
!312 = !{!310, !15, i64 8}
!313 = !{!314, !15, i64 120}
!314 = !{!"_ZTS25halide_device_interface_t", !15, i64 0, !15, i64 8, !15, i64 16, !15, i64 24, !15, i64 32, !15, i64 40, !15, i64 48, !15, i64 56, !15, i64 64, !15, i64 72, !15, i64 80, !15, i64 88, !15, i64 96, !15, i64 104, !15, i64 112, !15, i64 120}
!315 = !{!316, !15, i64 48}
!316 = !{!"_ZTS30halide_device_interface_impl_t", !15, i64 0, !15, i64 8, !15, i64 16, !15, i64 24, !15, i64 32, !15, i64 40, !15, i64 48, !15, i64 56, !15, i64 64, !15, i64 72, !15, i64 80, !15, i64 88, !15, i64 96, !15, i64 104, !15, i64 112, !15, i64 120}
!317 = !{!316, !15, i64 40}
!318 = !{!316, !15, i64 56}
!319 = !{!316, !15, i64 0}
!320 = !{!316, !15, i64 16}
!321 = !{!316, !15, i64 8}
!322 = !{!316, !15, i64 32}
!323 = !{!316, !15, i64 24}
!324 = !{!316, !15, i64 64}
!325 = !{!316, !15, i64 72}
!326 = distinct !{!326, !57, !69}
!327 = distinct !{!327, !57, !69}
!328 = distinct !{!328, !57, !69}
!329 = distinct !{!329, !57, !69}
!330 = !{!316, !15, i64 112}
!331 = !{!316, !15, i64 120}
!332 = !{!316, !15, i64 80}
!333 = !{!316, !15, i64 88}
!334 = !{!316, !15, i64 96}
!335 = !{!316, !15, i64 104}
!336 = !{i32 22, i32 33}
!337 = !{!338, !15, i64 40}
!338 = !{!"_ZTS21halide_profiler_state", !54, i64 0, !26, i64 8, !26, i64 12, !26, i64 16, !26, i64 20, !15, i64 24, !15, i64 32, !15, i64 40}
!339 = !{!338, !26, i64 16}
!340 = !{!341, !23, i64 0}
!341 = !{!"_ZTS30halide_profiler_pipeline_stats", !23, i64 0, !23, i64 8, !23, i64 16, !23, i64 24, !23, i64 32, !23, i64 40, !15, i64 48, !15, i64 56, !15, i64 64, !26, i64 72, !26, i64 76, !26, i64 80, !26, i64 84, !26, i64 88}
!342 = !{!341, !26, i64 80}
!343 = !{!341, !23, i64 32}
!344 = !{!341, !23, i64 40}
!345 = !{!341, !15, i64 48}
!346 = !{!341, !26, i64 84}
!347 = !{!341, !26, i64 88}
!348 = !{!341, !23, i64 16}
!349 = !{!341, !23, i64 24}
!350 = !{!341, !26, i64 72}
!351 = !{!341, !15, i64 56}
!352 = distinct !{!352, !57}
!353 = !{!354, !23, i64 32}
!354 = !{!"_ZTS26halide_profiler_func_stats", !23, i64 0, !23, i64 8, !23, i64 16, !23, i64 24, !23, i64 32, !23, i64 40, !23, i64 48, !15, i64 56, !26, i64 64}
!355 = !{!354, !23, i64 0}
!356 = !{!354, !15, i64 56}
!357 = distinct !{!357, !57}
!358 = distinct !{!358, !57}
!359 = distinct !{!359, !57}
!360 = !{!354, !23, i64 40}
!361 = !{!354, !23, i64 48}
!362 = distinct !{!362, !57}
!363 = !{!354, !23, i64 16}
!364 = distinct !{!364, !57}
!365 = !{!354, !26, i64 64}
!366 = distinct !{!366, !57}
!367 = !{!354, !23, i64 24}
!368 = distinct !{!368, !57}
!369 = distinct !{!369, !57}
!370 = !{!338, !15, i64 24}
!371 = !{!341, !15, i64 64}
!372 = distinct !{!372, !57}
!373 = !{!338, !26, i64 12}
!374 = distinct !{!374, !57}
!375 = !{!341, !26, i64 76}
!376 = distinct !{!376, !57}
!377 = distinct !{!377, !57}
!378 = !{!338, !15, i64 32}
!379 = !{!338, !26, i64 20}
!380 = !{!338, !26, i64 8}
!381 = distinct !{!381, !57}
!382 = distinct !{!382, !57}
!383 = distinct !{!383, !57}
!384 = distinct !{!384, !57}
!385 = !{!"branch_weights", i32 1073741824, i32 0}
!386 = !{!387, !124, i64 8}
!387 = !{!"_ZTS25halide_pseudostack_slot_t", !15, i64 0, !124, i64 8, !124, i64 16}
!388 = !{!387, !15, i64 0}
!389 = !{!"branch_weights", i32 1, i32 2000}
!390 = !{!387, !124, i64 16}
!391 = !{!"branch_weights", i32 0, i32 1073741824}
!392 = !{!393, !393, i64 0}
!393 = !{!"input", !394, i64 0}
!394 = !{!"Halide buffer"}
!395 = !{!396, !396, i64 0}
!396 = !{!"input_bounded", !394, i64 0}
!397 = !{!398, !398, i64 0}
!398 = !{!"mask", !394, i64 0}
!399 = !{!400, !400, i64 0}
!400 = !{!"output", !394, i64 0}
