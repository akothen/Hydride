{
  "python.analysis.typeCheckingMode": "off",
  "python.analysis.extraPaths": [
    "codegen-generator/targets/x86/",
    "codegen-generator/targets/arm/",
    "codegen-generator/targets/visa/",
    "codegen-generator/targets/hexagon/",
    "codegen-generator/codegen/rosette/",
    "codegen-generator/codegen/llvm/",
    "codegen-generator/rosette-ir/",
    "codegen-generator/tools/",
    "codegen-generator/tools/code-generator/",
    "codegen-generator/tools/fuzzer",
    "codegen-generator/tools/rosette-lifter/",
    "codegen-generator/tools/low-level-codegen/",
    "codegen-generator/tools/similarity-checker",
    "codegen-generator/tools/validity-checker",
    "codegen-generator/transform",
    "codegen-generator/analysis",
    "codegen-generator/tools/transformations-verifier",
    "codegen-generator/tools/llvmlite",
    "code-synthesizer/dsl-ir"
  ],
  "files.associations": {
    "*.inc": "cpp",
    "algorithm": "cpp",
    "typeinfo": "cpp",
    "cmath": "cpp",
    "complex": "cpp",
    "cstdlib": "cpp",
    "limits": "cpp",
    "new": "cpp",
    "type_traits": "cpp",
    "vector": "cpp",
    "__bit_reference": "cpp",
    "__bits": "cpp",
    "__config": "cpp",
    "__debug": "cpp",
    "__errc": "cpp",
    "__hash_table": "cpp",
    "__locale": "cpp",
    "__mutex_base": "cpp",
    "__node_handle": "cpp",
    "__split_buffer": "cpp",
    "__threading_support": "cpp",
    "__tree": "cpp",
    "__tuple": "cpp",
    "__verbose_abort": "cpp",
    "any": "cpp",
    "array": "cpp",
    "atomic": "cpp",
    "bit": "cpp",
    "bitset": "cpp",
    "cctype": "cpp",
    "cfenv": "cpp",
    "charconv": "cpp",
    "cinttypes": "cpp",
    "clocale": "cpp",
    "codecvt": "cpp",
    "condition_variable": "cpp",
    "csignal": "cpp",
    "cstdarg": "cpp",
    "cstddef": "cpp",
    "cstdint": "cpp",
    "cstdio": "cpp",
    "cstring": "cpp",
    "ctime": "cpp",
    "cwchar": "cpp",
    "cwctype": "cpp",
    "deque": "cpp",
    "exception": "cpp",
    "coroutine": "cpp",
    "propagate_const": "cpp",
    "format": "cpp",
    "forward_list": "cpp",
    "fstream": "cpp",
    "future": "cpp",
    "initializer_list": "cpp",
    "iomanip": "cpp",
    "ios": "cpp",
    "iosfwd": "cpp",
    "iostream": "cpp",
    "istream": "cpp",
    "list": "cpp",
    "locale": "cpp",
    "map": "cpp",
    "memory": "cpp",
    "mutex": "cpp",
    "numbers": "cpp",
    "optional": "cpp",
    "ostream": "cpp",
    "queue": "cpp",
    "ratio": "cpp",
    "regex": "cpp",
    "scoped_allocator": "cpp",
    "semaphore": "cpp",
    "set": "cpp",
    "shared_mutex": "cpp",
    "span": "cpp",
    "sstream": "cpp",
    "stack": "cpp",
    "stdexcept": "cpp",
    "streambuf": "cpp",
    "string": "cpp",
    "string_view": "cpp",
    "strstream": "cpp",
    "system_error": "cpp",
    "thread": "cpp",
    "tuple": "cpp",
    "typeindex": "cpp",
    "unordered_map": "cpp",
    "unordered_set": "cpp",
    "valarray": "cpp",
    "variant": "cpp",
    "*.tcc": "cpp",
    "chrono": "cpp",
    "compare": "cpp",
    "concepts": "cpp",
    "functional": "cpp",
    "iterator": "cpp",
    "memory_resource": "cpp",
    "numeric": "cpp",
    "random": "cpp",
    "utility": "cpp",
    "ranges": "cpp",
    "stop_token": "cpp"
  },
  "terminal.integrated.env.linux": {
    "ZSH_INIT_COMMAND_FOR_VSCODE": "source setup.sh"
  },
  "editor.autoIndent": "full",
  "clangd.fallbackFlags": [
    "-std=c++17",
    "-I${workspaceFolder}/frontends/halide/llvm-project/llvm/include",
    "-I${workspaceFolder}/frontends/halide/llvm-build/include",
    "-I${workspaceFolder}/codegen-generator/tools/low-level-codegen/InstSelectors/common",
    "-I${workspaceFolder}/frontends/halide/distrib/include",
    "-I${workspaceFolder}/frontends/halide/include",
    "-I/usr/include/x86_64-linux-gnu/c++/11/",
    "-I/usr/include/c++/11/",
    "-DLLVM_VERSION=120",
    "-DWITH_ARM",
    "-Dbenchmark_add",
  ],
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter"
  },
  "python.formatting.provider": "autopep8",
  "cmake.sourceDirectory": "/home/llvm-lab/Hydride/frontends/halide/dependencies"
}